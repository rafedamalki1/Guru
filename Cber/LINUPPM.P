/*LINUPPM.P körs ej*/
{LINUPPMWID.I}
DEFINE VARIABLE lin_tab2h   AS HANDLE NO-UNDO.
DEFINE VARIABLE berupptemph AS HANDLE NO-UNDO.
framesizeh = framesizeextrah.
lin_tab2h  = TEMP-TABLE lin_tab2:DEFAULT-BUFFER-HANDLE.
berupptemph = TEMP-TABLE berupptemp:DEFAULT-BUFFER-HANDLE.
ON 'VALUE-CHANGED' OF BRW_LIN PERSISTENT RUN vbrwlin_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_UPP PERSISTENT RUN vbrwupp_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_ANDRA PERSISTENT RUN btnandra_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_AVB PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_BORT PERSISTENT RUN btnbort_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_KOPP PERSISTENT RUN btnkopp_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_MIN PERSISTENT RUN btnmin_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_NOLL PERSISTENT RUN btnnoll_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_NY PERSISTENT RUN btnny_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_SKRIV PERSISTENT RUN btnskriv_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF BTN_SKRIV PERSISTENT RUN mbtnskriv_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_UP PERSISTENT RUN btnup_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_VISA PERSISTENT RUN btnvisa_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-PROC PERSISTENT RUN lproc_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-TOTMETER PERSISTENT RUN ltotmeter_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF FILL-IN-TOTMETER PERSISTENT RUN mtotmeter_UI IN THIS-PROCEDURE.                              
ON 'MOUSE-MENU-CLICK' OF FILL-IN-UPPMETER PERSISTENT RUN muppmeter_UI IN THIS-PROCEDURE.
                            
PROCEDURE muppmeter_UI :
   {muswait.i}
   RUN METER.W.
   FILL-IN-UPPMETER:SCREEN-VALUE = STRING(meter).   
   {musarrow.i}
END PROCEDURE.
PROCEDURE mtotmeter_UI :
   {muswait.i}
   RUN METER.W.
   FILL-IN-TOTMETER:SCREEN-VALUE = STRING(meter).  
   RUN skapa_UI.    
   IF musz = FALSE THEN DO:   
      musz = musz.         
   END.
   ELSE DO:                                
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER). 
      summa = 0.
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
         summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).   
   END.   
   {musarrow.i}
END PROCEDURE.
PROCEDURE ltotmeter_UI :
  IF INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE) < lin_tab2.TOTMETER THEN DO:
      MESSAGE "Total längd kan ej vara mindre än längd." VIEW-AS ALERT-BOX.
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER).
      APPLY "ENTRY" TO FILL-IN-TOTMETER.
      RETURN NO-APPLY.
   END.  
   RUN skapa_UI.
   IF musz = FALSE THEN DO:   
      musz = musz.               
      FILL-IN-PROC:SCREEN-VALUE = STRING(((INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE) / lin_tab2.METER) - 1) * 100).     
   END.
   ELSE DO:                                
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER).       
      summa = 0.
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
         summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).      
   END.    
END PROCEDURE.
PROCEDURE lproc_UI :
   {muswait.i}
   procvar = INTEGER(FILL-IN-PROC:SCREEN-VALUE) / 100 + 1. 
   FILL-IN-TOTMETER:SCREEN-VALUE = STRING(procvar * lin_tab2.METER).        
   RUN skapa_UI.
   IF musz = TRUE THEN DO:   
      musz = FALSE.    
      FILL-IN-PROC:SCREEN-VALUE = STRING(((INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE) / lin_tab2.METER) - 1) * 100).
   END.
   ELSE DO:                                
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER). 
      summa = 0. 
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
         summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).      
   END.                 
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnvisa_UI :
   {muswait.i}
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE.      
   {AVBGOM2.I}
   RUN VILINUPPU.W.
   {AVBFRAM2.I}
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnup_UI :                                                   
   IF FILL-IN-PROC:SCREEN-VALUE <= "99" THEN DO:
      FILL-IN-PROC:SCREEN-VALUE = STRING(INTEGER(FILL-IN-PROC:SCREEN-VALUE) + 1). 
      procvar = INTEGER(FILL-IN-PROC:SCREEN-VALUE) / 100 + 1.       
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(procvar * lin_tab2.METER).        
      RUN skapa_UI.       
      IF musz = TRUE THEN DO:   
         musz = FALSE.                  
      END.
      ELSE DO:                                
         FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER). 
         summa = 0.
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
            summa = summa + linbuff.METER. 
         END.    
         FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).         
      END.       
   END.
   ELSE DO:
      MESSAGE "Procent kan inte vara större än 99!" VIEW-AS ALERT-BOX TITLE "Meddelande".
   END.      
END PROCEDURE.
PROCEDURE mbtnskriv_UI :
   RUN SIDLANGD.W.
END PROCEDURE.
PROCEDURE btnskriv_UI :
   RUN SKRIVVAL.W (INPUT FALSE).       
   IF musz = TRUE THEN musz = FALSE. 
   ELSE DO:
      {muswait.i}      
      skrivut = TRUE.
      {AVBGOM2.I}
      RUN VILINUPPU.W.
      {AVBFRAM2.I}
   END.     
   {musarrow.i} 
END PROCEDURE.
PROCEDURE btnny_UI :
   {muswait.i}
   ASSIGN 
   ny = TRUE
   musz = FALSE.
   {AVBGOM2.I}
   RUN UPPLAGU.W.
   {AVBFRAM2.I}
   IF musz = FALSE THEN DO:       
      RUN openbdynspec_UI IN brwproc[2].                     
      FIND FIRST berupptemp WHERE berupptemp.BERROW = kon_rowid NO-LOCK NO-ERROR.
      IF AVAILABLE berupptemp THEN DO:      
          RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(berupptemp)).
          RUN lastselectdyn_UI IN brwproc[2].   
      END.      
   END.   
   ny = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnnoll_UI :
   counter = 0.   
   IF uppfinns = FALSE THEN DO:
      musz = musz.
   END.
   ELSE DO:
      FIND linbuff WHERE RECID(linbuff) = upp_recid NO-ERROR.
      DELETE linbuff.
      MESSAGE "Längd till upplag har satts till 0." VIEW-AS ALERT-BOX TITLE "Meddelande".
      summa = 0. 
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
          summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).
      APPLY "VALUE-CHANGED" TO BRW_UPP.
   END.    
END PROCEDURE.
PROCEDURE btnmin_UI :   
   IF FILL-IN-PROC:SCREEN-VALUE >= "1" THEN DO:
      FILL-IN-PROC:SCREEN-VALUE = STRING(INTEGER(FILL-IN-PROC:SCREEN-VALUE) - 1).    
      procvar = INTEGER(FILL-IN-PROC:SCREEN-VALUE) / 100 + 1.      
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(procvar * lin_tab2.METER).        
      RUN skapa_UI.
      IF musz = TRUE THEN DO:   
         musz = FALSE.         
      END.
      ELSE DO:                                
         FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER). 
         summa = 0. 
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
            summa = summa + linbuff.METER. 
         END.    
         FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).         
      END.              
   END.   
   ELSE DO:
      MESSAGE "Procent kan inte vara mindre än 0!" VIEW-AS ALERT-BOX TITLE "Meddelande".
   END.            
END PROCEDURE.
PROCEDURE btnkopp_UI :
   FIND FIRST berupptemp WHERE berupptemp.AONR = valaonr AND 
   berupptemp.OMRADE = valomrade USE-INDEX OMR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE berupptemp THEN DO:
      MESSAGE "Det finns inget upplag att koppla till. Gå på knappen Ny och skapa ett upplag."
      VIEW-AS ALERT-BOX TITLE "Meddelande".
      RETURN NO-APPLY.
   END.        
   RUN selectfoc_UI (INPUT 2).                            
   counter = 0.
   IF berupptemp.ANTALRADER > 100 THEN DO:
      MESSAGE "Marekerat upplag är redan inköpt via delbeställning. Ni kan ej förändra längder på detta upplag."
      VIEW-AS ALERT-BOX TITLE "Meddelande".
      RETURN NO-APPLY.
   END.
   IF FILL-IN-UPPMETER:SCREEN-VALUE NE "0" THEN DO:                                      
      IF uppfinns = FALSE THEN DO:
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND 
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?: 
            counter = counter + linbuff.TOTMETER.
         END.  
         IF counter + INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE) > lin_tab2.TOTMETER THEN DO:
            MESSAGE "Längd till upplag är för stort. Öka totallängden eller minska på ett annat upplag." 
            VIEW-AS ALERT-BOX TITLE "Meddelande".
            RETURN NO-APPLY.
         END.
         ELSE DO:                               
            CREATE linbuff.
            ASSIGN
            linbuff.ENR = lin_tab2.ENR 
            linbuff.BENAMNING = lin_tab2.BENAMNING 
            linbuff.ENHET = lin_tab2.ENHET 
            linbuff.PRIS = lin_tab2.PRIS                   
            linbuff.LEVKOD = lin_tab2.LEVKOD
            linbuff.METER = INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE) 
            linbuff.TOTMETER = INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE) 
            linbuff.UPPLAG = berupptemp.UPPLAG.  
             MESSAGE STRING(linbuff.TOTMETER) + " " + "meter " + TRIM(linbuff.BENAMNING) + " har kopplats till upplag nr: " 
            + STRING(linbuff.UPPLAG) VIEW-AS ALERT-BOX TITLE "Meddelande".
            APPLY "VALUE-CHANGED" TO BRW_UPP.
         END.   
      END.
      ELSE DO:
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND 
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ? AND 
         linbuff.UPPLAG NE berupptemp.UPPLAG: 
            counter = counter + linbuff.TOTMETER.
         END.  
         IF counter + INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE) > lin_tab2.TOTMETER THEN DO:
            MESSAGE "Längd till upplag är för stort. Öka totallängden eller minska på ett annat upplag." 
            VIEW-AS ALERT-BOX TITLE "Meddelande". 
            FIND linbuff WHERE RECID(linbuff) = upp_recid NO-ERROR. 
            FILL-IN-UPPMETER:SCREEN-VALUE = STRING(linbuff.TOTMETER).            
         END.  
         ELSE DO:  
            FIND linbuff WHERE RECID(linbuff) = upp_recid NO-ERROR.                                   
            ASSIGN
            linbuff.METER = INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE) 
            linbuff.TOTMETER = INTEGER(FILL-IN-UPPMETER:SCREEN-VALUE). 
            MESSAGE STRING(linbuff.TOTMETER) + " " + "meter " + TRIM(linbuff.BENAMNING) + " har kopplats till upplag nr: " 
            + STRING(linbuff.UPPLAG) VIEW-AS ALERT-BOX.
            APPLY "VALUE-CHANGED" TO BRW_UPP.
         END.
      END.  
      summa = 0. 
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
         summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).      
   END.
   ELSE DO:   
      IF uppfinns = FALSE THEN DO:
         MESSAGE "Längd till upplag kan inte vara 0." VIEW-AS ALERT-BOX TITLE "Meddelande".
         RETURN NO-APPLY.
      END.
      ELSE DO:
         FIND linbuff WHERE RECID(linbuff) = upp_recid NO-ERROR.
         DELETE linbuff.
         MESSAGE "Längd till upplag har satts till 0." VIEW-AS ALERT-BOX TITLE "Meddelande".
         summa = 0. 
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
            summa = summa + linbuff.METER. 
         END.    
         FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).         
         APPLY "VALUE-CHANGED" TO BRW_UPP.
      END.      
   END.    
END PROCEDURE.
PROCEDURE btnbort_UI :
   RUN selectfoc_UI (INPUT 2).    
   kon_rowid = berupptemp.BERROW.                           
   MESSAGE "Vill du ta bort upplag nr: " + STRING(berupptemp.UPPLAG) VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO UPDATE svar AS LOGICAL.         
   IF svar THEN DO:      
      FIND FIRST kon_val WHERE kon_val.UPPLAG = berupptemp.UPPLAG NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         MESSAGE "Det finns konstruktioner kopplade till upplaget. Borttag ej möjligt."
         VIEW-AS ALERT-BOX TITLE "Meddelande".
      END.
      ELSE DO:                                
         FIND FIRST lin_tab2 WHERE lin_tab2.UPPLAG = berupptemp.UPPLAG NO-LOCK NO-ERROR.
         IF AVAILABLE lin_tab2 THEN DO:
            MESSAGE "Det finns linor/kablar kopplade till upplaget. Borttag ej möjligt."
            VIEW-AS ALERT-BOX TITLE "Meddelande".
         END.
         ELSE DO:
            DELETE berupptemp.
            RUN selnextprevrow_UI IN brwproc[2].
            RUN bort_UI IN koppuppapph (INPUT kon_rowid).
            RUN openbdynspec_UI IN brwproc[2].             
            RUN lastselectdyn_UI IN brwproc[2].         
         END.   
      END.   
   END.  
END PROCEDURE.
PROCEDURE btnavb_UI :
   IF musz = FALSE THEN DO:
      FOR EACH lin_tab2 WHERE lin_tab2.UPPLAG = ?:                         
         counter = 0.
         FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND 
         linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
            counter = counter + linbuff.TOTMETER.
         END.
         IF counter < lin_tab2.TOTMETER THEN DO:
            counter = lin_tab2.TOTMETER - counter.
            FIND FIRST linbuff WHERE linbuff.ENR = lin_tab2.ENR AND 
            linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?
            USE-INDEX UPP NO-ERROR.
            IF AVAILABLE linbuff THEN DO:
               FIND FIRST berupptemp WHERE berupptemp.AONR = valaonr AND 
               berupptemp.OMRADE = valomrade AND berupptemp.UPPLAG = linbuff.UPPLAG 
               USE-INDEX OMR NO-LOCK NO-ERROR.
               IF berupptemp.ANTALRADER > 100 THEN DO:
                   MESSAGE STRING(counter) + " meter av total längden av " + linbuff.BENAMNING 
                   + " är ej fördelade på något upplag." VIEW-AS ALERT-BOX TITLE "Meddelande".
                   stopvar = TRUE.
               END.
               ELSE DO:               
                  ASSIGN
                  linbuff.METER = linbuff.METER + counter
                  linbuff.TOTMETER = linbuff.TOTMETER + counter.
                  MESSAGE STRING(counter) + " meter av total längden av " + linbuff.BENAMNING 
                  + " som ej var fördelade på något upplag. Har placerats på upplag nr:" + STRING(linbuff.UPPLAG)
                  VIEW-AS ALERT-BOX TITLE "Meddelande".
               END.
            END.   
         END.   
      END.       
      IF stopvar = TRUE THEN DO:
         stopvar = FALSE.
         RETURN NO-APPLY.
      END.
      FOR EACH kopp_lina WHERE kopp_lina.TOTMETER NE 0:
         DELETE kopp_lina.
      END.
      FIND FIRST lin_tab2 WHERE lin_tab2.UPPLAG NE ? NO-LOCK NO-ERROR.
      IF AVAILABLE lin_tab2 THEN DO:                        
         FOR EACH lin_tab2 WHERE lin_tab2.UPPLAG NE ?:
            FIND FIRST linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
            linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG = ? NO-ERROR.
            IF AVAILABLE linbuff THEN DO:            
               CREATE kopp_lina.
               ASSIGN      
               kopp_lina.ENR = linbuff.ENR
               kopp_lina.BENAMNING = linbuff.BENAMNING
               kopp_lina.PRIS = linbuff.PRIS
               kopp_lina.ENHET = linbuff.ENHET   
               kopp_lina.LEVKOD = linbuff.LEVKOD
               kopp_lina.METER = linbuff.METER 
               kopp_lina.TOTMETER = linbuff.TOTMETER 
               kopp_lina.UPPLAG = linbuff.UPPLAG                     
               kopp_lina.KORTKOD = ?. 
               DELETE linbuff.  
            END.   
            CREATE kopp_lina.
            ASSIGN      
            kopp_lina.ENR = lin_tab2.ENR
            kopp_lina.BENAMNING = lin_tab2.BENAMNING
            kopp_lina.PRIS = lin_tab2.PRIS
            kopp_lina.ENHET = lin_tab2.ENHET    
            kopp_lina.LEVKOD = lin_tab2.LEVKOD
            kopp_lina.METER = lin_tab2.METER 
            kopp_lina.TOTMETER = lin_tab2.TOTMETER 
            kopp_lina.UPPLAG = lin_tab2.UPPLAG                     
            kopp_lina.KORTKOD = ?.  
            DELETE lin_tab2.   
         END.                    
      END.   
      /*
      musz = TRUE.   
      */
   END.   
   ELSE DO:
      musz = FALSE.
   END.   
   RUN frame_UI IN huvprogh (INPUT "LIN").
END PROCEDURE.
PROCEDURE btnandra_UI :
   {muswait.i} 
   FIND FIRST berupptemp WHERE berupptemp.AONR = valaonr AND 
   berupptemp.OMRADE = valomrade USE-INDEX OMR NO-LOCK NO-ERROR.
   IF AVAILABLE berupptemp THEN DO:                  
      RUN selectfoc_UI (INPUT 2).    
      ASSIGN
      kon_rowid = berupptemp.BERROW    
      ny = FALSE.
      {AVBGOM2.I}
      RUN UPPLAGU.W.
      {AVBFRAM2.I}
      RUN openbdynspec_UI IN brwproc[2].            
      FIND FIRST berupptemp WHERE berupptemp.BERROW = kon_rowid NO-LOCK NO-ERROR.
      RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(berupptemp)).
      RUN lastselectdyn_UI IN brwproc[2].      
   END.
   ELSE DO:
      MESSAGE "Det finns inga upplag att ändra." VIEW-AS ALERT-BOX TITLE "Meddelande".
   END.      
   {musarrow.i}
END PROCEDURE.
PROCEDURE vbrwupp_UI :
   FIND FIRST berupptemp WHERE berupptemp.AONR = valaonr AND
   berupptemp.OMRADE = valomrade USE-INDEX OMR NO-LOCK NO-ERROR.
   IF AVAILABLE berupptemp THEN DO:
      RUN selectfoc_UI (INPUT 2).   
      FILL-IN-UPP:SCREEN-VALUE = STRING(berupptemp.UPPLAG). 
      FIND FIRST linbuff WHERE linbuff.UPPLAG = berupptemp.UPPLAG AND
      linbuff.ENR = lin_tab2.ENR AND linbuff.LEVKOD = lin_tab2.LEVKOD NO-LOCK NO-ERROR.
      IF AVAILABLE linbuff THEN DO:       
         ASSIGN 
         upp_recid = RECID(linbuff)
         uppfinns = TRUE
         FILL-IN-UPPMETER:SCREEN-VALUE = STRING(linbuff.METER).         
      END.
      ELSE DO:          
         ASSIGN
         uppfinns = FALSE
         FILL-IN-UPPMETER:SCREEN-VALUE = "0".          
      END.
   END.      
END PROCEDURE.
PROCEDURE vbrwlin_UI :
   summa = 0. 
   FIND FIRST lin_tab2 NO-LOCK NO-ERROR.
   IF AVAILABLE lin_tab2 THEN DO:
      RUN selectfoc_UI (INPUT 1).   
      ASSIGN
      lin_recid = RECID(lin_tab2)
      FILL-IN-ENR:SCREEN-VALUE = lin_tab2.ENR
      FILL-IN-BEN:SCREEN-VALUE = lin_tab2.BENAMNING
      FILL-IN-METER:SCREEN-VALUE = STRING(lin_tab2.METER)
      FILL-IN-TOTMETER:SCREEN-VALUE = STRING(lin_tab2.TOTMETER).
      FILL-IN-PROC:SCREEN-VALUE = STRING(((INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE) / lin_tab2.METER) - 1) * 100).      
      APPLY "VALUE-CHANGED" TO BRW_UPP.
      FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND
      linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
         summa = summa + linbuff.METER. 
      END.    
      FILL-IN-SUMMA:SCREEN-VALUE = STRING(summa).      
   END.   
END PROCEDURE.
PROCEDURE skapa_UI :
   ASSIGN
   counter = 0
   musz = FALSE.
   FIND FIRST lin_tab2 WHERE RECID(lin_tab2) = lin_recid NO-ERROR.
   FOR EACH linbuff WHERE linbuff.ENR = lin_tab2.ENR AND 
   linbuff.LEVKOD = lin_tab2.LEVKOD AND linbuff.UPPLAG NE ?:
      counter = counter + linbuff.TOTMETER.
   END.
   IF INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE) < counter THEN DO:    
      MESSAGE "Total längd kan inte understiga summan av längder fördelat på upplag som är" + 
      " " + STRING(counter) + " meter."
      VIEW-AS ALERT-BOX.  
      musz = TRUE.
   END.
   ELSE DO:      
      lin_tab2.TOTMETER = INTEGER(FILL-IN-TOTMETER:SCREEN-VALUE).
      musz = FALSE.
   END.   
   
END PROCEDURE.

PROCEDURE allstartbrw_UI :
   IF NOT VALID-HANDLE(brwproc[1]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[1] (INPUT BRW_LIN).   
   IF NOT VALID-HANDLE(brwproc[2]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[2] (INPUT BRW_UPP).
   RUN setcolsortvar_UI IN brwproc[2] (INPUT " WHERE AONR = '" + valaonr + "' AND OMRADE = '" + valomrade + "' USE-INDEX OMR").
   IF NOT VALID-HANDLE(koppuppapph) THEN DO:
      IF Guru.Konstanter:appcon THEN DO:
         RUN KOPPUPPAPP.P PERSISTENT SET koppuppapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      END.
      ELSE DO:
         RUN KOPPUPPAPP.P PERSISTENT SET koppuppapph.
      END. 
   END.
END PROCEDURE.

PROCEDURE main_UI :
   {ALLSTARTDYN.I}
   RUN ladda_UI IN koppuppapph (INPUT valaonr,INPUT valomrade,OUTPUT TABLE berupptemp).
   EMPTY TEMP-TABLE lin_tab NO-ERROR.
   EMPTY TEMP-TABLE lin_tab2 NO-ERROR.
   EMPTY TEMP-TABLE lin_tab3 NO-ERROR. 
   summeter = 0.
   
   FOR EACH kopp_lina WHERE kopp_lina.TOTMETER > 0:       
      CREATE lin_tab2.
      ASSIGN 
      lin_tab2.ENR = kopp_lina.ENR
      lin_tab2.BENAMNING = kopp_lina.BENAMNING 
      lin_tab2.ENHET = kopp_lina.ENHET 
      lin_tab2.LEVKOD = kopp_lina.LEVKOD
      lin_tab2.PRIS = kopp_lina.PRIS
      lin_tab2.METER = kopp_lina.METER
      lin_tab2.TOTMETER = kopp_lina.TOTMETER
      lin_tab2.UPPLAG = kopp_lina.UPPLAG.       
   END.  
   FOR EACH kopp_lina WHERE kopp_lina.KORTKOD = ? AND kopp_lina.TOTMETER = 0
   AND kopp_lina.METER > 0:
      CREATE lin_tab.
      ASSIGN                    
      lin_tab.ENR = kopp_lina.ENR
      lin_tab.BENAMNING = kopp_lina.BENAMNING 
      lin_tab.ENHET = kopp_lina.ENHET 
      lin_tab.LEVKOD = kopp_lina.LEVKOD
      lin_tab.PRIS = kopp_lina.PRIS              
      lin_tab.METER = kopp_lina.METER * kopp_lina.LEDARE.
   END.        
   FOR EACH lin_tab BREAK BY lin_tab.ENR BY lin_tab.LEVKOD:                                      
      ACCUMULATE lin_tab.METER (TOTAL BY lin_tab.ENR BY lin_tab.LEVKOD).       
      IF LAST-OF(lin_tab.LEVKOD) THEN DO TRANSACTION:
         CREATE lin_tab3.
         ASSIGN 
         lin_tab3.ENR = lin_tab.ENR
         lin_tab3.BENAMNING = lin_tab.BENAMNING 
         lin_tab3.ENHET = lin_tab.ENHET
         lin_tab3.LEVKOD = lin_tab.LEVKOD 
         lin_tab3.PRIS = lin_tab.PRIS
         lin_tab3.METER = (ACCUM TOTAL lin_tab.METER) - summeter 
         lin_tab3.TOTMETER = (ACCUM TOTAL lin_tab.METER) - summeter 
         summeter = ACCUM TOTAL lin_tab.METER.                       
      END.     
   END. 
   FOR EACH lin_tab3:
      FIND FIRST lin_tab2 WHERE lin_tab2.ENR = lin_tab3.ENR AND 
      lin_tab2.LEVKOD = lin_tab3.LEVKOD AND lin_tab2.UPPLAG = ? NO-ERROR.
      IF AVAILABLE lin_tab2 THEN DO: 
         lin_tab2.METER = lin_tab3.METER.
         IF lin_tab2.TOTMETER < lin_tab3.TOTMETER THEN lin_tab2.TOTMETER = lin_tab3.TOTMETER.            
      END.
      ELSE DO:             
         CREATE lin_tab2.
         ASSIGN  
         lin_tab2.ENR = lin_tab3.ENR
         lin_tab2.BENAMNING = lin_tab3.BENAMNING 
         lin_tab2.ENHET = lin_tab3.ENHET
         lin_tab2.LEVKOD = lin_tab3.LEVKOD 
         lin_tab2.PRIS = lin_tab3.PRIS
         lin_tab2.METER = lin_tab3.METER
         lin_tab2.TOTMETER = lin_tab3.TOTMETER.
      END.
   END.
   FOR EACH lin_tab2:
      FIND FIRST lin_tab3 WHERE lin_tab3.ENR = lin_tab2.ENR AND
      lin_tab3.LEVKOD = lin_tab2.LEVKOD NO-ERROR.
      IF NOT AVAILABLE lin_tab3 THEN DELETE lin_tab2.
   END.  
   ASSIGN
   FILL-IN-ENR:LABEL = Guru.Konstanter:genk.
   RUN konlabel_UI IN huvprogh 
   (INPUT "LINUPP",
    INPUT Guru.Konstanter:genk,
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "",
    INPUT "").
   RUN setcolsortvar_UI IN brwproc[1] (INPUT " WHERE UPPLAG = ? ").      
   RUN setdefaultcol_UI IN brwproc[1] (INPUT 1).   
   RUN openbdynspec_UI IN brwproc[1].           
   RUN openbdynspec_UI IN brwproc[2].                     
   APPLY "VALUE-CHANGED" TO BRW_LIN.   
   FIND FIRST lin_tab2 NO-LOCK NO-ERROR.   
   IF NOT AVAILABLE lin_tab2 THEN DO:
      MESSAGE "Det finns inga linor/kablar att koppla till upplag." VIEW-AS ALERT-BOX.
      musz = TRUE.
      RUN btnavb_UI.      
   END.  
   {musarrow.i}
END PROCEDURE.
PROCEDURE pselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   IF NOT VALID-HANDLE(lin_tab2h) THEN     lin_tab2h  = TEMP-TABLE lin_tab2:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(berupptemph) THEN    berupptemph = TEMP-TABLE berupptemp:DEFAULT-BUFFER-HANDLE.
   RUN pselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST lin_tab2 WHERE ROWID(lin_tab2) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST berupptemp WHERE ROWID(berupptemp) = brwrowid NO-LOCK NO-ERROR.     
END PROCEDURE.
PROCEDURE nselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   IF NOT VALID-HANDLE(lin_tab2h) THEN     lin_tab2h  = TEMP-TABLE lin_tab2:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(berupptemph) THEN    berupptemph = TEMP-TABLE berupptemp:DEFAULT-BUFFER-HANDLE.
   RUN nselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST lin_tab2 WHERE ROWID(lin_tab2) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST berupptemp WHERE ROWID(berupptemp) = brwrowid NO-LOCK NO-ERROR.     
END PROCEDURE.
PROCEDURE selectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO. 
   IF NOT VALID-HANDLE(lin_tab2h) THEN     lin_tab2h  = TEMP-TABLE lin_tab2:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(berupptemph) THEN    berupptemph = TEMP-TABLE berupptemp:DEFAULT-BUFFER-HANDLE.
   RUN selectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST lin_tab2 WHERE ROWID(lin_tab2) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST berupptemp WHERE ROWID(berupptemp) = brwrowid NO-LOCK NO-ERROR.     
END PROCEDURE.
PROCEDURE fselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   IF NOT VALID-HANDLE(lin_tab2h) THEN     lin_tab2h  = TEMP-TABLE lin_tab2:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(berupptemph) THEN    berupptemph = TEMP-TABLE berupptemp:DEFAULT-BUFFER-HANDLE.
   RUN fetrowid_UI IN brwproc[brwvald] (INPUT antal_raknare,OUTPUT brwrowid) .
   IF brwvald = 1 THEN FIND FIRST lin_tab2 WHERE ROWID(lin_tab2) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST berupptemp WHERE ROWID(berupptemp) = brwrowid NO-LOCK NO-ERROR.  
   
END PROCEDURE.
PROCEDURE dselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   RUN dselectfoc_UI IN brwproc[brwvald].      
END PROCEDURE.
PROCEDURE borthand_UI :
   lin_tab2h:EMPTY-TEMP-TABLE() NO-ERROR.
   berupptemph:EMPTY-TEMP-TABLE() NO-ERROR.
   IF VALID-HANDLE(lin_tab2h) THEN   DELETE OBJECT lin_tab2h  NO-ERROR.
   IF VALID-HANDLE(berupptemph) THEN   DELETE OBJECT berupptemph  NO-ERROR.
   IF VALID-HANDLE(koppuppapph) THEN DELETE PROCEDURE koppuppapph.  
   ASSIGN
   lin_tab2h = ?
   berupptemph = ?.   
   {BORTBRWPROC.I}      
END PROCEDURE.
