/*STORSUM6.P SUMMERING AV STÖRNING*/

DEFINE TEMP-TABLE summ_temp
   FIELD SPANID LIKE STORNINGSTAB.FELSPANID
   FIELD FELOID LIKE STORNINGSTAB.FELOID
   FIELD ADELID LIKE STORNINGSTAB.ADELID
   FIELD UTLOSID LIKE STORNINGSTAB.UTLOSID.

DEFINE TEMP-TABLE avd_temp
   FIELD AVDELNINGNR LIKE STORDISTRIKT.AVDELNINGNR   
   FIELD NAMN LIKE STORDISTRIKT.NAMN
   INDEX AVD IS PRIMARY AVDELNINGNR.

DEFINE INPUT PARAMETER TABLE FOR avd_temp.
DEFINE INPUT PARAMETER valfore AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER distvar LIKE STORDISTRIKT.DISTRIKTID NO-UNDO.   
DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER period AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER alla AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER spannvar LIKE SPANNINGSNIV.SPANID NO-UNDO.
DEFINE INPUT PARAMETER adelvar LIKE ANLAGGNINGSDEL.ADELID NO-UNDO.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR summ_temp.


   {muswait.i}  
   IF valfore = TRUE THEN DO:
      FOR EACH avd_temp USE-INDEX AVD:
         OPEN QUERY dq FOR EACH STORDISTRIKT WHERE 
         STORDISTRIKT.AVDELNINGNR = avd_temp.AVDELNINGNR AND 
         STORDISTRIKT.ARTAL = YEAR(bdatum) USE-INDEX AVDARTAL NO-LOCK.
         GET FIRST dq NO-LOCK.
         DO WHILE AVAILABLE(STORDISTRIKT):
            distvar = STORDISTRIKT.DISTRIKTID.
            RUN distrikt_UI.
            GET NEXT dq NO-LOCK.
         END.
         CLOSE QUERY dq.
      END.         
   END.
   ELSE DO:
      IF alla = TRUE THEN DO:
         IF period = 1 THEN DO:
            OPEN QUERY sq FOR EACH STORNINGSTAB WHERE YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND
            STORNINGSTAB.STDRIFTID = 2 AND STORNINGSTAB.FELSPANID = spannvar AND 
            STORNINGSTAB.STORTYPID = 1 AND STORNINGSTAB.ADELID = adelvar
            NO-LOCK.       
         END.
         ELSE DO:
            OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.HDATUM >= bdatum AND
            STORNINGSTAB.HDATUM <= avdatum AND
            STORNINGSTAB.STDRIFTID = 2 AND STORNINGSTAB.FELSPANID = spannvar AND 
            STORNINGSTAB.STORTYPID = 1 AND STORNINGSTAB.ADELID = adelvar
            NO-LOCK.
         END.
         GET FIRST sq NO-LOCK.
         DO WHILE AVAILABLE(STORNINGSTAB):
            IF STORNINGSTAB.AVBROTTSTID > 0.05 THEN DO:
               RUN summa_UI.         
            END.
            GET NEXT sq NO-LOCK.
         END.
         CLOSE QUERY sq.      
      END.
      ELSE DO:   
         RUN distrikt_UI.          
      END.
   END.

PROCEDURE distrikt_UI:   
   IF period = 1 THEN DO:
      OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
      STORNINGSTAB.HDATUM >= bdatum AND
      STORNINGSTAB.HDATUM <= avdatum AND STORNINGSTAB.FELSPANID = spannvar AND 
      STORNINGSTAB.STDRIFTID = 2 AND STORNINGSTAB.STORTYPID = 1  AND STORNINGSTAB.ADELID = adelvar
      NO-LOCK.    
   END.
   ELSE DO:
      OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
      YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND STORNINGSTAB.FELSPANID = spannvar AND 
      STORNINGSTAB.STDRIFTID = 2 AND STORNINGSTAB.STORTYPID = 1  AND STORNINGSTAB.ADELID = adelvar
      NO-LOCK.
   END.
   GET FIRST sq NO-LOCK.
   DO WHILE AVAILABLE(STORNINGSTAB):          
      IF STORNINGSTAB.AVBROTTSTID > 0.05 THEN DO:
         RUN summa_UI.
      END.
      GET NEXT sq NO-LOCK.
   END.
   CLOSE QUERY sq.
END PROCEDURE.

PROCEDURE summa_UI.    
   CREATE summ_temp.
   ASSIGN        
   summ_temp.SPANID = STORNINGSTAB.FELSPANID   
   summ_temp.ADELID = STORNINGSTAB.ADELID
   summ_temp.UTLOSID = STORNINGSTAB.UTLOSID.
   IF STORNINGSTAB.RELINID >= 1 AND STORNINGSTAB.RELINID <= 6 THEN 
   summ_temp.FELOID = STORNINGSTAB.RELINID.
   ELSE summ_temp.FELOID = 6.
END PROCEDURE.
