<?xml version="1.0" encoding="utf-8" standalone="no"?><root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  <data mimetype="application/x-microsoft.net.object.bytearray.base64" name="splitContainerVolym.Panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing">
    <value>
        R0lGODlh0gDSAIcAAAAAAPz8/P7+/v////39/fv7+/n5+fr6+vf39+Li4tra2ujo6O/v77m5uYODg3p6
        ent7e6enp9PT06+vr6ampm1tbW9vb4iIiIuLi2VlZYqKir+/v3Fxcby8vMrKys7Oznl5ecPDw9TU1Gpq
        am5ubrS0tM3NzdDQ0PHx8cfHx2tra7W1tcbGxmZmZmdnZ6urq8/Pz+vr66WlpaysrGhoaMzMzMvLy2lp
        abKysrCwsHBwcPLy8t3d3aioqGxsbLu7u6GhoZ2dnZ6enp+fn/b29uHh4dfX19/f32RkZLOzs6CgoJyc
        nPj4+NjY2NnZ2ezs7Le3t2JiYqmpqcHBwbGxseDg4OXl5fDw8PT09O3t7dzc3PPz8+np6d7e3mFhYerq
        6tvb29HR0a2trfX19ePj4+fn5+7u7snJya6uruTk5NLS0tbW1sjIyL29vXV1daKioqOjo6qqqrq6utXV
        1cTExHd3d8XFxXJycubm5ri4uJubm76+vnh4eLa2tsDAwGNjY3Nzc6SkpJqamsLCwmBgYHR0dF9fX15e
        XnZ2dpWVlSUlJZeXly8vLwQEBIWFhSgoKEJCQhMTE319fRwcHI+Pjx4eHoGBgVNTU4KCghcXF5iYmH5+
        fiAgIFJSUiQkJCYmJikpKV1dXVtbW4yMjB8fHzExMYeHh1paWlxcXDAwMDIyMpaWlllZWTU1NUpKSjMz
        M0dHR5KSkjc3N0lJSUZGRnx8fDw8PICAgD8/P05OTkNDQzY2NkRERDQ0NFhYWCsrK1VVVVZWVh0dHScn
        J1dXV5mZmSoqKomJiYaGhiEhIZGRkVRUVC0tLUFBQQoKCo6OjhkZGS4uLkhISEVFRQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAADUACwAAAAA0gDSAAAI9QCpCRxIsKDBgwgTKlzIsKHDhxAj
        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
        Pc7sDMqykdAKvdAM3dAO/dAtERAAOw==
</value>
  </data>
</root>