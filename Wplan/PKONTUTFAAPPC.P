 /* PKONTUTFAAPPC.P*/
 {KALKYLUPP.I} 
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
{REGVAR.I}

{EXTRADATA.I}
DEFINE NEW SHARED TEMP-TABLE omrkonto    
   FIELD OMRADE AS CHARACTER
   FIELD NAMN AS CHARACTER
   FIELD OMREC AS RECID  
   INDEX OMRADE IS PRIMARY OMRADE ASCENDING.
   
DEFINE NEW SHARED TEMP-TABLE okod
   FIELD KONTO AS CHARACTER
   FIELD KONTONR AS CHARACTER
   FIELD BENAMNING AS CHARACTER
   FIELD INDEL AS INTEGER
   FIELD KREC AS RECID
   INDEX KNR IS PRIMARY KONTONR ASCENDING.    
   
DEFINE NEW SHARED TEMP-TABLE kkod
   FIELD KONTO AS CHARACTER
   FIELD KONTONR AS CHARACTER
   FIELD BENAMNING AS CHARACTER
   FIELD INDEL AS INTEGER
   FIELD KREC AS RECID
   INDEX KNR IS PRIMARY KONTONR ASCENDING.

DEFINE NEW SHARED TEMP-TABLE mtrl_temp2   
   {MTRLTEMP2TT.I}

DEFINE NEW SHARED TEMP-TABLE tempupp   
    FIELD totea      AS DECIMAL    
    FIELD totarb     AS DECIMAL    
    FIELD totmask    AS DECIMAL    
    FIELD totmtrl    AS DECIMAL    
    FIELD totovr     AS DECIMAL    
    FIELD totalt     AS DECIMAL    
    FIELD arbtim     AS DECIMAL    
    FIELD bertim     AS DECIMAL    
    FIELD msktim     AS DECIMAL    
    FIELD totutr     AS DECIMAL    
    FIELD totutrtim  AS DECIMAL    
    FIELD ktotea     AS DECIMAL   
    FIELD ktotber    AS DECIMAL   
    FIELD ktotarb    AS DECIMAL          
    FIELD ktotmask   AS DECIMAL    
    FIELD ktotmtrl   AS DECIMAL    
    FIELD ktotovr    AS DECIMAL    
    FIELD ktotalt    AS DECIMAL    
    FIELD karbtim    AS DECIMAL    
    FIELD kbertim    AS DECIMAL    
    FIELD kmsktim    AS DECIMAL    
    FIELD ktotutr    AS DECIMAL    
    FIELD ktotutrtim AS DECIMAL    
    FIELD ototea     AS DECIMAL 
    FIELD ototber     AS DECIMAL
    FIELD ototarb    AS DECIMAL         
    FIELD ototmask   AS DECIMAL    
    FIELD ototmtrl   AS DECIMAL    
    FIELD ototovr    AS DECIMAL    
    FIELD ototalt    AS DECIMAL    
    FIELD oarbtim    AS DECIMAL    
    FIELD obertim    AS DECIMAL    
    FIELD omsktim    AS DECIMAL    
    FIELD ototutr    AS DECIMAL    
    FIELD ototutrtim AS DECIMAL    
    FIELD oarbtim1   AS DECIMAL    
    FIELD ototalt1   AS DECIMAL    
    FIELD oarbtim2   AS DECIMAL    
    FIELD ototalt2   AS DECIMAL          
    FIELD oarbtim3   AS DECIMAL    
    FIELD ototalt3   AS DECIMAL    
    FIELD oarbtim4   AS DECIMAL    
    FIELD ototalt4   AS DECIMAL    
    FIELD oarbtim5   AS DECIMAL    
    FIELD ototalt5   AS DECIMAL    
    FIELD karbtim1   AS DECIMAL    
    FIELD ktotalt1   AS DECIMAL    
    FIELD karbtim2   AS DECIMAL    
    FIELD ktotalt2   AS DECIMAL   
    FIELD karbtim3   AS DECIMAL
    FIELD ktotalt3   AS DECIMAL
    FIELD karbtim4   AS DECIMAL
    FIELD ktotalt4   AS DECIMAL
    FIELD karbtim5   AS DECIMAL
    FIELD ktotalt5   AS DECIMAL.
     
DEFINE TEMP-TABLE tidut2
   FIELD UT AS CHARACTER
   FIELD LONGNAMN AS CHARACTER.
   
{KALKTEMP.I} 
{LISTDEF.I} 
DEFINE INPUT PARAMETER pansv AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER period AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER planvar AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER franar AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER tillar AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER monpris AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER xtypmtrl AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER vallista AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR tempupp.
DEFINE INPUT PARAMETER TABLE FOR okod.
DEFINE INPUT PARAMETER TABLE FOR kkod.
DEFINE INPUT PARAMETER TABLE FOR omrkonto.
DEFINE OUTPUT PARAMETER TABLE FOR tidut2. 
DEFINE INPUT PARAMETER forevar AS CHARACTER NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(86)" NO-UNDO. 
DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE kontbenvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE emask3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE region AS LOGICAL NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.

FIND FIRST kkod NO-LOCK NO-ERROR.
FIND FIRST okod NO-LOCK NO-ERROR.
FIND FIRST omrkonto NO-LOCK NO-ERROR.
FIND FIRST tempupp NO-LOCK NO-ERROR.
EMPTY TEMP-TABLE tidut2 NO-ERROR. 
ASSIGN

offert = FALSE.
RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
ASSIGN
tempupp.ototea = 0 tempupp.ototber = 0 tempupp.ototarb = 0 tempupp.ototmask = 0 tempupp.ototmtrl = 0 tempupp.ototovr = 0
tempupp.ototalt = 0 tempupp.obertim = 0 tempupp.oarbtim = 0 tempupp.omsktim = 0 tempupp.oarbtim1 = 0 tempupp.oarbtim2 = 0
tempupp.oarbtim3 = 0 tempupp.oarbtim4 = 0 tempupp.oarbtim5 = 0 tempupp.ototalt1 = 0 tempupp.ototalt2 = 0
tempupp.ototalt3 = 0 tempupp.ototalt4 = 0 tempupp.ototalt5 = 0 tempupp.ototutr = 0 tempupp.ototutrtim = 0.
CREATE tidut2.
IF vallista = 1 THEN DO:                                
/*   SUBSTRING(tidut2.UT,1) = CAPS(Guru.Konstanter:gomrk) + "  : " + omrkonto.NAMN.*/
END.
ELSE DO:
   SUBSTRING(tidut2.UT,1) = "ORGANISATION  : " + okod.KONTONR + " BENÄMNING : " + okod.BENAMNING.
END.   
CREATE tidut2.
CREATE tidut2.

RUN rubrik_UI.
IF vallista = 1 THEN DO:
   FOR EACH omrkonto:
      RUN ut_UI.
      RUN slutomrade_UI.
      CREATE tidut2.
   END.
END.
ELSE DO:
   FOR EACH okod:
      RUN ut_UI.
      RUN slutomrade_UI.
      CREATE tidut2.
   END.
END.


PROCEDURE ut_UI :
   
   FIND FIRST KBENAMNING WHERE NO-LOCK NO-ERROR.

   FOR EACH kkod: 
      ASSIGN
      tempupp.ktotea = 0 tempupp.ktotber = 0 tempupp.ktotarb = 0 tempupp.ktotmask = 0 tempupp.ktotmtrl = 0
      tempupp.ktotovr = 0 tempupp.ktotalt = 0 tempupp.kbertim = 0 tempupp.karbtim = 0 tempupp.kmsktim = 0
      tempupp.karbtim1 = 0 tempupp.karbtim2 = 0 tempupp.karbtim3 = 0 tempupp.karbtim4 = 0
      tempupp.karbtim5 = 0 tempupp.ktotalt1 = 0 tempupp.ktotalt2 = 0 tempupp.ktotalt3 = 0
      tempupp.ktotalt4 = 0 tempupp.ktotalt5 = 0
      tempupp.ktotutr = 0 tempupp.ktotutrtim = 0 planvar = "". 
      IF kkod.KONTO = "K1" THEN kontbenvar = CAPS(KBENAMNING.K1).
      ELSE IF kkod.KONTO = "K2" THEN kontbenvar = CAPS(KBENAMNING.K2).
      ELSE IF kkod.KONTO = "K3" THEN kontbenvar = CAPS(KBENAMNING.K3).
      ELSE IF kkod.KONTO = "K4" THEN kontbenvar = CAPS(KBENAMNING.K4).
      ELSE IF kkod.KONTO = "K4" THEN kontbenvar = CAPS(KBENAMNING.K4).
      CREATE tidut2.
      SUBSTRING(tidut2.UT,1) = kontbenvar + ":" + kkod.KONTONR.
      /*
      CREATE tidut2.
      SUBSTRING(tidut2.UT,1) = "KONTO:" + kkod.KONTONR.
      */
      IF period = 1 THEN DO:
         IF vallista = 1 THEN DO:
            IF kkod.KONTO = "K1" THEN DO:
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K1 = kkod.KONTONR
               AND PLANKONTO.ARTAL = franar NO-LOCK BY PLANKONTO.PLANNR.
            END.
            ELSE IF kkod.KONTO = "K2" THEN DO:
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K2 = kkod.KONTONR
               AND PLANKONTO.ARTAL = franar NO-LOCK BY PLANKONTO.PLANNR.
            END.               
            ELSE IF kkod.KONTO = "K3" THEN DO:
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K3 = kkod.KONTONR
               AND PLANKONTO.ARTAL = franar NO-LOCK BY PLANKONTO.PLANNR.
            END.            
            ELSE IF kkod.KONTO = "K4" THEN DO:
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K4 = kkod.KONTONR
               AND PLANKONTO.ARTAL = franar NO-LOCK BY PLANKONTO.PLANNR.
            END.
            ELSE IF kkod.KONTO = "K5" THEN DO:
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K5 = kkod.KONTONR
               AND PLANKONTO.ARTAL = franar NO-LOCK BY PLANKONTO.PLANNR.
            END.
         END.
         ELSE DO:
            OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K1 = okod.KONTONR
            AND PLANKONTO.K2 = kkod.KONTONR AND PLANKONTO.ARTAL = franar 
            NO-LOCK BY PLANKONTO.PLANNR.
         END.   
       END.
       ELSE DO: 
         IF vallista = 1 THEN DO:
            IF kkod.KONTO = "K1" THEN DO: 
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K1 = kkod.KONTONR
               AND PLANKONTO.ARTAL >= franar AND PLANKONTO.ARTAL <= tillar
               NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.              
            END.
            ELSE IF kkod.KONTO = "K2" THEN DO:               
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K2 = kkod.KONTONR
               AND PLANKONTO.ARTAL >= franar AND PLANKONTO.ARTAL <= tillar
               NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.
            END.               
            ELSE IF kkod.KONTO = "K3" THEN DO: 
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K3 = kkod.KONTONR
               AND PLANKONTO.ARTAL >= franar AND PLANKONTO.ARTAL <= tillar
               NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.              
            END.            
            ELSE IF kkod.KONTO = "K4" THEN DO: 
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K4 = kkod.KONTONR
               AND PLANKONTO.ARTAL >= franar AND PLANKONTO.ARTAL <= tillar
               NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.              
            END.
            ELSE IF kkod.KONTO = "K5" THEN DO: 
               OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K5 = kkod.KONTONR
               AND PLANKONTO.ARTAL >= franar AND PLANKONTO.ARTAL <= tillar
               NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.              
            END.                       
         END.
         ELSE DO:
            OPEN QUERY kq FOR EACH PLANKONTO WHERE PLANKONTO.K1 = okod.KONTONR
            AND PLANKONTO.K2 = kkod.KONTONR AND PLANKONTO.ARTAL >= franar AND 
            PLANKONTO.ARTAL <= tillar NO-LOCK BY PLANKONTO.PLANNR BY PLANKONTO.ARTAL.
         END.   
      END.  
      GET FIRST kq NO-LOCK.
      DO WHILE AVAILABLE(PLANKONTO):
        FIND FIRST PLANNRTAB WHERE PLANNRTAB.PLANNR = PLANKONTO.PLANNR AND
        PLANNRTAB.ARTAL = PLANKONTO.ARTAL USE-INDEX PLANNR NO-LOCK NO-ERROR.                           
        IF vallista = 1 THEN DO:            
           IF AVAILABLE PLANNRTAB THEN DO:
              IF pansv = "" OR pansv = "ALLA" THEN DO:
                 IF PLANNRTAB.OMRADE = omrkonto.OMRADE THEN DO:
                    RUN plannr_UI.
                 END.
              END.
              ELSE DO:
                 IF PLANNRTAB.OMRADE = omrkonto.OMRADE AND PLANNRTAB.ARBANSVARIG = pansv THEN DO:
                    RUN plannr_UI.
                 END.
              END.
           END.
        END.
        ELSE DO:
           RUN plannr_UI.
        END.   
        GET NEXT kq NO-LOCK.
      END.   
      CLOSE QUERY kq.
      RUN slutkonto_UI.
      CREATE tidut2.
   END.
END PROCEDURE.


PROCEDURE rubrik_UI. 
   IF period = 1 THEN DO:   
      ASSIGN
      str=                                                                    
"=============.======.====================.==.===.=====.=====.=====.=====.=====.========.========.========.=======.=======.========".         
      SUBSTRING(tidut2.UT,1) = str.                     
      CREATE tidut2.
      ASSIGN
      SUBSTRING(tidut2.UT,50) = "BER."
      SUBSTRING(tidut2.UT,56) = "ARB."
      SUBSTRING(tidut2.UT,62) = "MASK"
      SUBSTRING(tidut2.UT,68) = "UTR." 
      SUBSTRING(tidut2.UT,80) = "ARBETS"
      SUBSTRING(tidut2.UT,89) = "MATERIEL"
      SUBSTRING(tidut2.UT,98) = "MASKIN"
      SUBSTRING(tidut2.UT,107) = "UTRUST"
      SUBSTRING(tidut2.UT,115) = "ÖVRIG".        
      CREATE tidut2.            
      ASSIGN  
      SUBSTRING(tidut2.UT,15) = CAPS(Guru.Konstanter:gplk)                                                                                   
      SUBSTRING(tidut2.UT,22) = "BENÄMNING"
      SUBSTRING(tidut2.UT,43) = "%"
      SUBSTRING(tidut2.UT,46) = "TYP"
      SUBSTRING(tidut2.UT,50) = "TIM."
      SUBSTRING(tidut2.UT,56) = "TIM."
      SUBSTRING(tidut2.UT,62) = "TIM." 
      SUBSTRING(tidut2.UT,68) = "TIM."                                                                                  
      SUBSTRING(tidut2.UT,74) = "EA"
      SUBSTRING(tidut2.UT,80) = "KOSTNAD"
      SUBSTRING(tidut2.UT,89) = "KOSTNAD"
      SUBSTRING(tidut2.UT,98) = "KOSTNAD"
      SUBSTRING(tidut2.UT,107) = "KOSTNAD"
      SUBSTRING(tidut2.UT,115) = "KOSTNAD"
      SUBSTRING(tidut2.UT,123) = "TOTALT".                        
      CREATE tidut2.       
      SUBSTRING(tidut2.UT,1) = str.           
   END.   
   ELSE DO:            
      ASSIGN
      SUBSTRING(tidut2.UT,47) = STRING(franar,"9999").
      IF franar + 1 = tillar THEN 
      SUBSTRING(tidut2.UT,60) = STRING(tillar,"9999").
      ELSE IF franar + 1 < tillar THEN 
      SUBSTRING(tidut2.UT,60) = STRING(franar + 1,"9999").
      IF franar + 2 = tillar THEN 
      SUBSTRING(tidut2.UT,73) = STRING(tillar,"9999").
      ELSE IF franar + 2 < tillar THEN 
      SUBSTRING(tidut2.UT,73) = STRING(franar + 2,"9999").
      IF franar + 3 = tillar THEN 
      SUBSTRING(tidut2.UT,86) = STRING(tillar,"9999").
      ELSE IF franar + 3 < tillar THEN 
      SUBSTRING(tidut2.UT,86) = STRING(franar + 3,"9999").
      IF franar + 4 = tillar THEN 
      SUBSTRING(tidut2.UT,99) = STRING(tillar,"9999").
      ELSE IF franar + 4 < tillar THEN 
      SUBSTRING(tidut2.UT,99) = STRING(franar + 4,"9999").      
      ASSIGN
      str=                                                                    
"=============.======.====================.=====.======.=====.======.=====.======.=====.======.=====.======".           
      CREATE tidut2.      
      SUBSTRING(tidut2.UT,1) = str.                                   
      CREATE tidut2.            
      ASSIGN  
      SUBSTRING(tidut2.UT,15) = CAPS(Guru.Konstanter:gplk)                                                                                         
      SUBSTRING(tidut2.UT,22) = "BENÄMNING"      
      SUBSTRING(tidut2.UT,43) = "KKR"
      SUBSTRING(tidut2.UT,49) = "TIM"                                                                                   
      SUBSTRING(tidut2.UT,56) = "KKR"
      SUBSTRING(tidut2.UT,62) = "TIM"
      SUBSTRING(tidut2.UT,69) = "KKR"
      SUBSTRING(tidut2.UT,75) = "TIM"
      SUBSTRING(tidut2.UT,82) = "KKR"
      SUBSTRING(tidut2.UT,88) = "TIM"
      SUBSTRING(tidut2.UT,95) = "KKR"
      SUBSTRING(tidut2.UT,101) = "TIM".                        
      CREATE tidut2.       
      SUBSTRING(tidut2.UT,1) = str.           
   END.     
END PROCEDURE.
{KALKYLUPPSUMMAPLAN.I}
{TEMPUPPTT.I}
PROCEDURE plannr_UI.
   IF AVAILABLE FASTSPEC THEN RELEASE FASTSPEC.
   /*IF planvar NE PLANKONTO.PLANNR THEN DO: ????borttaget 20090825 lena , fungerar inte när det finns flera konton med samma verksamhet*/
      CREATE tidut2. 
      planvar = PLANKONTO.PLANNR.               
   /*END.*/
   ASSIGN
   tidut2.LONGNAMN = PLANNRTAB.ORT
   SUBSTRING(tidut2.UT,15) = PLANNRTAB.PLANNR
   SUBSTRING(tidut2.UT,22) = SUBSTRING(PLANNRTAB.ORT,1,20).
   IF period = 1 THEN DO:
      IF PLANKONTO.SATS% < 100 THEN 
      SUBSTRING(tidut2.UT,43) = STRING(PLANKONTO.SATS%).
   END.      
   EMPTY TEMP-TABLE kalk_temp NO-ERROR.    
   IF PLANNRTAB.UPP = TRUE AND PLANNRTAB.UPPNR = FALSE THEN DO:
      FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
      KALKAONR.ARTAL = PLANNRTAB.ARTAL - 1 AND KALKAONR.TYP = 2 AND 
      (KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV")
      USE-INDEX PLANR NO-LOCK NO-ERROR.
      IF AVAILABLE KALKAONR THEN DO:
         RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
      END.
   END.
   ELSE DO: 
      FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
      KALKAONR.ARTAL = PLANNRTAB.ARTAL AND KALKAONR.TYP = 2 AND 
      (KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV")
      USE-INDEX PLANR NO-LOCK NO-ERROR.
      IF AVAILABLE KALKAONR THEN DO:
         RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
      END.
   END. 
   IF AVAILABLE KALKAONR THEN DO:
      RUN summeringkalkplan_UI.
      RUN tempuppsum_UI.
      RUN klar_UI.     
      RUN sidfot_UI.
   END.  
   
   ELSE DO:
      IF PLANNRTAB.UPP = TRUE AND PLANNRTAB.UPPNR = FALSE THEN DO:
         FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
         KALKAONR.ARTAL = PLANNRTAB.ARTAL - 1 AND KALKAONR.TYP = 1 AND 
         (KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV")
         USE-INDEX PLANR NO-LOCK NO-ERROR.
         IF AVAILABLE KALKAONR THEN DO:
             RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
         END.
      END.
      ELSE DO:
         FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
         KALKAONR.ARTAL = PLANNRTAB.ARTAL AND KALKAONR.TYP = 1 AND 
         (KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV")
         USE-INDEX PLANR NO-LOCK NO-ERROR.
         IF AVAILABLE KALKAONR THEN DO:
             RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
         END.
      END.   
      IF AVAILABLE KALKAONR THEN DO:
         
         RUN summeringkalkplan_UI.
         RUN tempuppsum_UI. 
         RUN klar_UI.   
         RUN sidfot_UI.
      END. 
   END.   
END PROCEDURE.


PROCEDURE klar_UI.
  
   FIND FIRST kalkylprisertt WHERE   kalkylprisertt.KVID = 0 AND kalkylprisertt.SOKBENAMNING = "RÖRLIGKOSTNAD EA" NO-LOCK NO-ERROR.
   IF PLANNRTAB.UPP = TRUE THEN DO:
      IF PLANNRTAB.UPPNR = TRUE THEN DO:
         FIND FIRST UPPDELA WHERE UPPDELA.PLANNR = PLANNRTAB.PLANNR AND
         UPPDELA.ARTAL = PLANNRTAB.ARTAL USE-INDEX PLAN NO-LOCK NO-ERROR.
         IF UPPDELA.T% > 0 THEN DO:
            ASSIGN
            tempupp.totea = tempupp.totea * (UPPDELA.T% / 100)
            tempupp.totarb = tempupp.totarb * (UPPDELA.T% / 100)
            tempupp.totmask = tempupp.totmask * (UPPDELA.T% / 100)
            tempupp.totovr = tempupp.totovr * (UPPDELA.T% / 100)
            tempupp.totmtrl = tempupp.totmtrl * (UPPDELA.T% / 100)              
            tempupp.arbtim = tempupp.arbtim * (UPPDELA.T% / 100)
            tempupp.bertim = tempupp.bertim * (UPPDELA.T% / 100)
            tempupp.msktim = tempupp.msktim * (UPPDELA.T% / 100)
            tempupp.totutr = tempupp.totutr * (UPPDELA.T% / 100)
            tempupp.totutrtim = tempupp.totutrtim * (UPPDELA.T% / 100).
         END.
         ELSE DO:
            IF A% > 0 THEN DO:
               ASSIGN
               tempupp.totarb = tempupp.totarb * (UPPDELA.A% / 100)
               tempupp.arbtim = tempupp.arbtim * (UPPDELA.A% / 100)
               tempupp.bertim = tempupp.bertim * (UPPDELA.A% / 100)
               tempupp.totea = tempupp.arbtim.
            END.
            ELSE DO:
               ASSIGN               
               tempupp.arbtim = ((UPPDELA.AKR / totarb) * tempupp.arbtim)
               tempupp.bertim = ((UPPDELA.AKR / totarb) * tempupp.bertim)
               tempupp.totarb = UPPDELA.AKR
               tempupp.totea = tempupp.arbtim.                           
            END.
            IF MASK% > 0 THEN DO:
               ASSIGN
               tempupp.totmask = tempupp.totmask * (UPPDELA.MASK% / 100)
               tempupp.msktim = tempupp.msktim * (UPPDELA.MASK% / 100)
               tempupp.totea = tempupp.totea + tempupp.totmask / kalkylprisertt.PRIS.
            END.
            ELSE DO:
               ASSIGN               
               tempupp.msktim = ((UPPDELA.MASKKR / tempupp.totmask) * tempupp.msktim)
               tempupp.totmask = UPPDELA.MASKKR
               tempupp.totea = tempupp.totea + tempupp.totmask / kalkylprisertt.PRIS.                           
            END.
            IF MTRL% > 0 THEN DO:
               ASSIGN
               tempupp.totmtrl = tempupp.totmtrl * (UPPDELA.MTRL% / 100).
            END.
            ELSE DO:
               ASSIGN                              
               tempupp.totmtrl = UPPDELA.MTRLKR.                           
            END.
            IF O% > 0 THEN DO:
               ASSIGN
               tempupp.totovr = tempupp.totovr * (UPPDELA.O% / 100).
            END.
            ELSE DO:
               ASSIGN                              
               tempupp.totovr = UPPDELA.OKR.                           
            END.
         END.
      END.
      ELSE DO:
         FIND FIRST UPPDELA WHERE UPPDELA.PLANNR = PLANNRTAB.PLANNR AND
         UPPDELA.ARTAL = PLANNRTAB.ARTAL - 1 USE-INDEX PLAN NO-LOCK NO-ERROR.
         IF UPPDELA.T% > 0 THEN DO:
            ASSIGN
            tempupp.totea = tempupp.totea * ((100 - UPPDELA.T%) / 100)
            tempupp.totarb = tempupp.totarb * ((100 - UPPDELA.T%) / 100)
            tempupp.totmask = tempupp.totmask * ((100 - UPPDELA.T%) / 100)
            tempupp.totovr = tempupp.totovr * ((100 - UPPDELA.T%) / 100)
            tempupp.totmtrl = tempupp.totmtrl * ((100 - UPPDELA.T%) / 100)              
            tempupp.arbtim = tempupp.arbtim * ((100 - UPPDELA.T%) / 100)
            tempupp.bertim = tempupp.bertim * ((100 - UPPDELA.T%) / 100)
            tempupp.msktim = tempupp.msktim * ((100 - UPPDELA.T%) / 100)
            tempupp.totutr = tempupp.totutr * (100 - UPPDELA.T% / 100)
            tempupp.totutrtim = tempupp.totutrtim * (100 - UPPDELA.T% / 100).
         END.
         ELSE DO:
            IF A% > 0 THEN DO:
               ASSIGN
               tempupp.totarb = tempupp.totarb * ((100 - UPPDELA.A%) / 100)
               tempupp.arbtim = tempupp.arbtim * ((100 - UPPDELA.A%) / 100)
               tempupp.bertim = tempupp.bertim * ((100 - UPPDELA.A%) / 100)
               tempupp.totea = tempupp.arbtim.
            END.
            ELSE DO:
               ASSIGN               
               tempupp.arbtim = (((tempupp.totarb - UPPDELA.AKR) / tempupp.totarb) * tempupp.arbtim)
               tempupp.bertim = (((tempupp.totarb - UPPDELA.AKR) / tempupp.totarb) * tempupp.bertim)
               tempupp.totarb = tempupp.totarb - UPPDELA.AKR
               tempupp.totea = tempupp.arbtim.                           
            END.
            IF MASK% > 0 THEN DO:
               ASSIGN
               tempupp.totmask = tempupp.totmask * ((100 - UPPDELA.MASK%) / 100)
               tempupp.msktim = tempupp.msktim * ((100 - UPPDELA.MASK%) / 100)
               tempupp.totea = tempupp.totea + tempupp.totmask / kalkylprisertt.PRIS.
            END.
            ELSE DO:
               ASSIGN               
               tempupp.msktim = (((tempupp.totmask - UPPDELA.MASKKR) / tempupp.totmask) * tempupp.msktim)
               tempupp.totmask = tempupp.totmask - UPPDELA.MASKKR
               tempupp.totea = tempupp.totea + tempupp.totmask / kalkylprisertt.PRIS.                           
            END.
            IF MTRL% > 0 THEN DO:
               ASSIGN
               tempupp.totmtrl = tempupp.totmtrl * ((100 - UPPDELA.MTRL%) / 100).
            END.
            ELSE DO:
               ASSIGN                              
               tempupp.totmtrl = tempupp.totmtrl - UPPDELA.MTRLKR.                           
            END.
            IF O% > 0 THEN DO:
               ASSIGN
               tempupp.totovr = tempupp.totovr * ((100 - UPPDELA.O%) / 100).
            END.
            ELSE DO:
               ASSIGN                              
               tempupp.totovr = tempupp.totovr - UPPDELA.OKR.                           
            END.
         END.
      END.   
   END.
   tempupp.totalt = 0.
   tempupp.totalt = tempupp.totalt + tempupp.totarb + tempupp.totmask + 
                    tempupp.totovr + tempupp.totmtrl + tempupp.totutr.
   ASSIGN          
   tempupp.totea = (tempupp.totea * (PLANKONTO.SATS% / 100))
   tempupp.totarb = (tempupp.totarb * (PLANKONTO.SATS% / 100))
   tempupp.totmask = (tempupp.totmask * (PLANKONTO.SATS% / 100))
   tempupp.totmtrl = (tempupp.totmtrl * (PLANKONTO.SATS% / 100))
   tempupp.totovr = (tempupp.totovr * (PLANKONTO.SATS% / 100))
   tempupp.totalt = (tempupp.totalt * (PLANKONTO.SATS% / 100))
   tempupp.arbtim = (tempupp.arbtim * (PLANKONTO.SATS% / 100))
   tempupp.bertim = (tempupp.bertim * (PLANKONTO.SATS% / 100))
   tempupp.msktim = (tempupp.msktim * (PLANKONTO.SATS% / 100))
   tempupp.totutr = (tempupp.totutr * (PLANKONTO.SATS% / 100))
   tempupp.totutrtim = (tempupp.totutrtim * (PLANKONTO.SATS% / 100)).
END PROCEDURE.




PROCEDURE sidfot_UI.        
   /*ANTAL MINUS*/
   IF period = 1 THEN DO:         
      
      IF tempupp.bertim >= 0 THEN SUBSTRING(tidut2.UT,50) = STRING(tempupp.bertim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,50) = STRING(tempupp.bertim,"->>>9").        
      IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.arbtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.arbtim,"->>>9").        
      IF tempupp.msktim >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.msktim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.msktim,"->>>9").
      IF tempupp.totutrtim >= 0 THEN SUBSTRING(tidut2.UT,68) = STRING(tempupp.totutrtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,68) = STRING(tempupp.totutrtim,"->>>9").        
      IF tempupp.totea >= 0 THEN SUBSTRING(tidut2.UT,74) = STRING(tempupp.totea,">>>>9").
      ELSE SUBSTRING(tidut2.UT,74) = STRING(tempupp.totea,"->>>9").        
      IF tempupp.totarb >= 0 THEN SUBSTRING(tidut2.UT,80) = STRING(tempupp.totarb,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,80) = STRING(tempupp.totarb,"->>>>>>9").        
      IF tempupp.totmtrl >= 0 THEN SUBSTRING(tidut2.UT,89) = STRING(tempupp.totmtrl,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,89) = STRING(tempupp.totmtrl,"->>>>>>9").        
      IF tempupp.totmask >= 0 THEN SUBSTRING(tidut2.UT,98) = STRING(tempupp.totmask,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,98) = STRING(tempupp.totmask,"->>>>>>9").        
      IF tempupp.totmask >= 0 THEN SUBSTRING(tidut2.UT,107) = STRING(tempupp.totutr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,107) = STRING(tempupp.totutr,"->>>>>9").        
      IF tempupp.totovr >= 0 THEN SUBSTRING(tidut2.UT,115) = STRING(tempupp.totovr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,115) = STRING(tempupp.totovr,"->>>>>9").
      IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,123) = STRING(tempupp.totalt,">>>>>>>9").                                     
      ELSE SUBSTRING(tidut2.UT,123) = STRING(tempupp.totalt,"->>>>>>9").                   
   END.   
   ELSE DO:       
      /*ANTAL MINUS*/
      IF PLANNRTAB.ARTAL = franar THEN DO:
         IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,49) = STRING(tempupp.arbtim,">>>>>9").
         ELSE SUBSTRING(tidut2.UT,49) = STRING(tempupp.arbtim,"->>>>9").
         IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,43) = STRING(tempupp.totalt / 1000,">>>>9").
         ELSE SUBSTRING(tidut2.UT,43) = STRING(tempupp.totalt / 1000,"->>>9").
         ASSIGN
         tempupp.karbtim1 = tempupp.karbtim1 + tempupp.arbtim
         tempupp.ktotalt1 = tempupp.ktotalt1 + tempupp.totalt / 1000.                                 
      END.
      ELSE DO:
         IF PLANNRTAB.ARTAL = franar + 1 THEN DO:  
            IF franar + 1 = tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.arbtim,">>>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.totalt / 1000,">>>>9").
               ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.totalt / 1000,"->>>9").
            END.
            ELSE IF franar + 1 < tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.arbtim,"->>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.totalt / 1000,">>>>9"). 
               ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.totalt / 1000,"->>>9"). 
            END.
            ASSIGN
            tempupp.karbtim2 = tempupp.karbtim2 + tempupp.arbtim
            tempupp.ktotalt2 = tempupp.ktotalt2 + tempupp.totalt / 1000.
         END.   
         IF PLANNRTAB.ARTAL = franar + 2 THEN DO:  
            IF franar + 2 = tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.arbtim,">>>>>9").
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.totalt / 1000,">>>>9").
               ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.totalt / 1000,"->>>9").
            END.
            ELSE IF franar + 2 < tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.arbtim,">>>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.totalt / 1000,">>>>9"). 
               ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.totalt / 1000,"->>>9"). 
            END.
            ASSIGN
            tempupp.karbtim3 = tempupp.karbtim3 + tempupp.arbtim
            tempupp.ktotalt3 = tempupp.ktotalt3 + tempupp.totalt / 1000.
         END.
         IF PLANNRTAB.ARTAL = franar + 3 THEN DO:  
            IF franar + 3 = tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.arbtim,"->>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.totalt / 1000,">>>>9").
               ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.totalt / 1000,"->>>9").
            END.
            ELSE IF franar + 3 < tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.arbtim,"->>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.totalt / 1000,">>>>9").
               ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.totalt / 1000,"->>>9").
            END.
            ASSIGN
            tempupp.karbtim4 = tempupp.karbtim4 + tempupp.arbtim
            tempupp.ktotalt4 = tempupp.ktotalt4 + tempupp.totalt / 1000. 
         END.
         IF PLANNRTAB.ARTAL = franar + 4 THEN DO:  
            IF franar + 4 = tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.arbtim,"->>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.totalt / 1000,">>>>9").
               ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.totalt / 1000,"->>>9").
            END.
            ELSE IF franar + 4 < tillar THEN DO:
               IF tempupp.arbtim >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.arbtim,">>>>>9").
               ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.arbtim,"->>>>9").
               IF tempupp.totalt >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.totalt / 1000,">>>>9"). 
               ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.totalt / 1000,"->>>9"). 
            END.
            ASSIGN
            tempupp.karbtim5 = tempupp.karbtim5 + tempupp.arbtim
            tempupp.ktotalt5 = tempupp.ktotalt5 + tempupp.totalt / 1000.
         END.
      END.   
   END. 
   IF period = 1 THEN DO:   
      ASSIGN
      tempupp.ktotea = tempupp.ktotea + tempupp.totea
      tempupp.ktotarb = tempupp.ktotarb + tempupp.totarb
      tempupp.ktotmask = tempupp.ktotmask + tempupp.totmask
      tempupp.ktotmtrl = tempupp.ktotmtrl + tempupp.totmtrl
      tempupp.ktotovr = tempupp.ktotovr + tempupp.totovr
      tempupp.ktotalt = tempupp.ktotalt + tempupp.totalt
      tempupp.karbtim = tempupp.karbtim + tempupp.arbtim
      tempupp.kbertim = tempupp.kbertim + tempupp.bertim
      tempupp.kmsktim = tempupp.kmsktim + tempupp.msktim
      tempupp.ktotutr = tempupp.ktotutr + tempupp.totutr
      tempupp.ktotutrtim = tempupp.ktotutrtim + tempupp.totutrtim.
   END.      
END PROCEDURE.

PROCEDURE slutkonto_UI.
   /*ANTAL MINUS*/
   CREATE tidut2.
   CREATE tidut2.
   SUBSTRING(tidut2.UT,1) = "SUMMA " + kontbenvar + ":".  
   IF period = 1 THEN DO:       
       
      IF tempupp.kbertim >= 0 THEN SUBSTRING(tidut2.UT,50) = STRING(tempupp.kbertim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,50) = STRING(tempupp.kbertim,"->>>9").
      IF tempupp.karbtim >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.karbtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.karbtim,"->>>9").
      IF tempupp.kmsktim >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.kmsktim,">>>>9").   
      ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.kmsktim,"->>>9").   
      IF tempupp.ktotutrtim >= 0 THEN SUBSTRING(tidut2.UT,68) = STRING(tempupp.ktotutrtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,68) = STRING(tempupp.ktotutrtim,"->>>9").
      IF tempupp.ktotea >= 0 THEN SUBSTRING(tidut2.UT,74) = STRING(tempupp.ktotea,">>>>9").
      ELSE SUBSTRING(tidut2.UT,74) = STRING(tempupp.ktotea,"->>>9").
      IF tempupp.kbertim >= 0 THEN SUBSTRING(tidut2.UT,80) = STRING(tempupp.ktotarb,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,80) = STRING(tempupp.ktotarb,"->>>>>>9").
      IF tempupp.ktotmtrl >= 0 THEN SUBSTRING(tidut2.UT,89) = STRING(tempupp.ktotmtrl,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,89) = STRING(tempupp.ktotmtrl,"->>>>>>9").
      IF tempupp.ktotmask >= 0 THEN SUBSTRING(tidut2.UT,98) = STRING(tempupp.ktotmask,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,98) = STRING(tempupp.ktotmask,"->>>>>>9").
      IF tempupp.ktotutr >= 0 THEN SUBSTRING(tidut2.UT,107) = STRING(tempupp.ktotutr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,107) = STRING(tempupp.ktotutr,"->>>>>9").
      IF tempupp.ktotovr >= 0 THEN SUBSTRING(tidut2.UT,115) = STRING(tempupp.ktotovr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,115) = STRING(tempupp.ktotovr,"->>>>>9").
      IF tempupp.ktotalt >= 0 THEN SUBSTRING(tidut2.UT,123) = STRING(tempupp.ktotalt,">>>>>>>9").                                     
      ELSE SUBSTRING(tidut2.UT,123) = STRING(tempupp.ktotalt,"->>>>>>9").                                     
   END.   
   ELSE DO:      
      /*ANTAL MINUS*/
      
      IF tempupp.karbtim1 >= 0 THEN SUBSTRING(tidut2.UT,49) = STRING(tempupp.karbtim1,">>>>>9").      
      ELSE SUBSTRING(tidut2.UT,49) = STRING(tempupp.karbtim1,"->>>>9").
      IF tempupp.ktotalt1 >= 0 THEN SUBSTRING(tidut2.UT,43) = STRING(tempupp.ktotalt1,">>>>9").
      ELSE SUBSTRING(tidut2.UT,43) = STRING(tempupp.ktotalt1,"->>>9").
      IF franar + 1 = tillar THEN DO:
         IF tempupp.karbtim2 >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.karbtim2,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.karbtim2,"->>>>9").
         IF tempupp.ktotalt2 >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.ktotalt2,">>>>9").
         ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.ktotalt2,"->>>9").
      END.
      ELSE IF franar + 1 < tillar THEN DO:
         IF tempupp.karbtim2 >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.karbtim2,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.karbtim2,"->>>>9").      
         IF tempupp.ktotalt2 >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.ktotalt2,">>>>9").
         ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.ktotalt2,"->>>9").
         
      END.
      IF franar + 2 = tillar THEN DO:
         IF tempupp.karbtim3 >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.karbtim3,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.karbtim3,"->>>>9").      
         IF tempupp.ktotalt3 >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.ktotalt3,">>>>9").
         ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.ktotalt3,"->>>9").        
      END.
      ELSE IF franar + 2 < tillar THEN DO:
         IF tempupp.karbtim3 >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.karbtim3,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.karbtim3,"->>>>9").      
         IF tempupp.ktotalt3 >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.ktotalt3,">>>>9").
         ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.ktotalt3,"->>>9").
      END.
      IF franar + 3 = tillar THEN DO:
         IF tempupp.karbtim4 >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.karbtim4,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.karbtim4,"->>>>9").      
         IF tempupp.ktotalt4 >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.ktotalt4,">>>>9").
         ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.ktotalt4,"->>>9").
      END.
      ELSE IF franar + 3 < tillar THEN DO:
         IF tempupp.karbtim4 >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.karbtim4,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.karbtim4,"->>>>9").      
         IF tempupp.ktotalt4 >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.ktotalt4,">>>>9").
         ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.ktotalt4,"->>>9").
      END.
      IF franar + 4 = tillar THEN DO:
         IF tempupp.karbtim5 >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.karbtim5,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.karbtim5,"->>>>9").      
         IF tempupp.ktotalt5 >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.ktotalt5,">>>>9").
         ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.ktotalt5,"->>>9").
      END.
      ELSE IF franar + 4 < tillar THEN DO:
         IF tempupp.karbtim5 >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.karbtim5,">>>>9").     
         ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.karbtim5,"->>>9").     
         IF tempupp.ktotalt5 >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.ktotalt5,">>>>9").                                 
         ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.ktotalt5,"->>>9").                                 

      END.
   END.    
   IF period = 1 THEN DO:
      ASSIGN
      tempupp.ototea = tempupp.ototea + tempupp.ktotea
      tempupp.ototarb = tempupp.ototarb + tempupp.ktotarb
      tempupp.ototmask = tempupp.ototmask + tempupp.ktotmask
      tempupp.ototmtrl = tempupp.ototmtrl + tempupp.ktotmtrl
      tempupp.ototovr = tempupp.ototovr + tempupp.ktotovr
      tempupp.ototalt = tempupp.ototalt + tempupp.ktotalt
      tempupp.oarbtim = tempupp.oarbtim + tempupp.karbtim
      tempupp.obertim = tempupp.obertim + tempupp.kbertim
      tempupp.omsktim = tempupp.omsktim + tempupp.kmsktim
      tempupp.ototutr = tempupp.ototutr + tempupp.ktotutr
      tempupp.ototutrtim = tempupp.ototutrtim + tempupp.ktotutrtim.
   END.
   ELSE DO:
      ASSIGN
      tempupp.oarbtim1 = tempupp.oarbtim1 + tempupp.karbtim1
      tempupp.ototalt1 = tempupp.ototalt1 + tempupp.ktotalt1
      tempupp.oarbtim2 = tempupp.oarbtim2 + tempupp.karbtim2
      tempupp.ototalt2 = tempupp.ototalt2 + tempupp.ktotalt2
      tempupp.oarbtim3 = tempupp.oarbtim3 + tempupp.karbtim3
      tempupp.ototalt3 = tempupp.ototalt3 + tempupp.ktotalt3
      tempupp.oarbtim4 = tempupp.oarbtim4 + tempupp.karbtim4
      tempupp.ototalt4 = tempupp.ototalt4 + tempupp.ktotalt4
      tempupp.oarbtim5 = tempupp.oarbtim5 + tempupp.karbtim5
      tempupp.ototalt5 = tempupp.ototalt5 + tempupp.ktotalt5.
   END.   
END PROCEDURE.


PROCEDURE slutomrade_UI.
   /*ANTAL MINUS*/
   CREATE tidut2.
   IF vallista = 1 THEN DO:
      ASSIGN
      SUBSTRING(tidut2.UT,1) = "SUMMA " + CAPS(Guru.Konstanter:gomrk) + ":"
      SUBSTRING(tidut2.UT,22) = SUBSTRING(omrkonto.OMRADE + " " + omrkonto.NAMN,1,20).   
   END.  
   ELSE SUBSTRING(tidut2.UT,1) = "TOTAL SUMMA ".
   IF period = 1 THEN DO:              
      IF tempupp.obertim >= 0 THEN SUBSTRING(tidut2.UT,50) = STRING(tempupp.obertim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,50) = STRING(tempupp.obertim,"->>>9").
      IF tempupp.oarbtim >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.oarbtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.oarbtim,"->>>9").
      IF tempupp.omsktim >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.omsktim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.omsktim,"->>>9").
      IF tempupp.ototutrtim >= 0 THEN SUBSTRING(tidut2.UT,68) = STRING(tempupp.ototutrtim,">>>>9").
      ELSE SUBSTRING(tidut2.UT,68) = STRING(tempupp.ototutrtim,"->>>9").
      IF tempupp.ototea >= 0 THEN SUBSTRING(tidut2.UT,74) = STRING(tempupp.ototea,">>>>9").
      ELSE SUBSTRING(tidut2.UT,74) = STRING(tempupp.ototea,"->>>9").
      IF tempupp.ototarb >= 0 THEN SUBSTRING(tidut2.UT,80) = STRING(tempupp.ototarb,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,80) = STRING(tempupp.ototarb,"->>>>>>9").
      IF tempupp.ototmtrl >= 0 THEN SUBSTRING(tidut2.UT,89) = STRING(tempupp.ototmtrl,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,89) = STRING(tempupp.ototmtrl,"->>>>>>9").
      IF tempupp.ototmask >= 0 THEN SUBSTRING(tidut2.UT,98) = STRING(tempupp.ototmask,">>>>>>>9").
      ELSE SUBSTRING(tidut2.UT,98) = STRING(tempupp.ototmask,"->>>>>>9").
      IF tempupp.ototutr >= 0 THEN SUBSTRING(tidut2.UT,107) = STRING(tempupp.ototutr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,107) = STRING(tempupp.ototutr,"->>>>>9").
      IF tempupp.ototovr >= 0 THEN SUBSTRING(tidut2.UT,115) = STRING(tempupp.ototovr,">>>>>>9").
      ELSE SUBSTRING(tidut2.UT,115) = STRING(tempupp.ototovr,"->>>>>9").
      IF tempupp.ototalt >= 0 THEN SUBSTRING(tidut2.UT,123) = STRING(tempupp.ototalt,">>>>>>>9").   
      ELSE SUBSTRING(tidut2.UT,123) = STRING(tempupp.ototalt,"->>>>>>9").   
   END.   
   ELSE DO:
      IF tempupp.oarbtim1 >= 0 THEN SUBSTRING(tidut2.UT,49) = STRING(tempupp.oarbtim1,">>>>>9").      
      ELSE SUBSTRING(tidut2.UT,49) = STRING(tempupp.oarbtim1,"->>>>9").      
      IF tempupp.ototalt1 >= 0 THEN SUBSTRING(tidut2.UT,43) = STRING(tempupp.ototalt1,">>>>9").
      ELSE SUBSTRING(tidut2.UT,43) = STRING(tempupp.ototalt1,"->>>9").
      IF franar + 1 = tillar THEN DO:
         IF tempupp.oarbtim2 >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.oarbtim2,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.oarbtim2,"->>>>9").      
         IF tempupp.ototalt2 >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.ototalt2,">>>>9").
         ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.ototalt2,"->>>9").
      END.
      ELSE IF franar + 1 < tillar THEN DO:           
         IF tempupp.oarbtim2 >= 0 THEN SUBSTRING(tidut2.UT,62) = STRING(tempupp.oarbtim2,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,62) = STRING(tempupp.oarbtim2,"->>>>9").      
         IF tempupp.ototalt2 >= 0 THEN SUBSTRING(tidut2.UT,56) = STRING(tempupp.ototalt2,">>>>9").
         ELSE SUBSTRING(tidut2.UT,56) = STRING(tempupp.ototalt2,"->>>9").         
      END.
      IF franar + 2 = tillar THEN DO.
         IF tempupp.oarbtim3 >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.oarbtim3,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.oarbtim3,"->>>>9").      
         IF tempupp.ototalt3 >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.ototalt3,">>>>9").
         ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.ototalt3,"->>>9").         
      END.
      ELSE IF franar + 2 < tillar THEN DO:
         IF tempupp.oarbtim3 >= 0 THEN SUBSTRING(tidut2.UT,75) = STRING(tempupp.oarbtim3,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,75) = STRING(tempupp.oarbtim3,"->>>>9").      
         IF tempupp.ototalt3 >= 0 THEN SUBSTRING(tidut2.UT,69) = STRING(tempupp.ototalt3,">>>>9").
         ELSE SUBSTRING(tidut2.UT,69) = STRING(tempupp.ototalt3,"->>>9").
      END.
      IF franar + 3 = tillar THEN DO:      
         IF tempupp.oarbtim4 >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.oarbtim4,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.oarbtim4,"->>>>9").      
         IF tempupp.ototalt4 >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.ototalt4,">>>>9").
         ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.ototalt4,"->>>9").         
      END.
      ELSE IF franar + 3 < tillar THEN DO:
         IF tempupp.oarbtim4 >= 0 THEN SUBSTRING(tidut2.UT,88) = STRING(tempupp.oarbtim4,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,88) = STRING(tempupp.oarbtim4,"->>>>9").      
         IF tempupp.ototalt4 >= 0 THEN SUBSTRING(tidut2.UT,82) = STRING(tempupp.ototalt4,">>>>9").
         ELSE SUBSTRING(tidut2.UT,82) = STRING(tempupp.ototalt4,"->>>9").         
      END.
      IF franar + 4 = tillar THEN DO:
         IF tempupp.oarbtim5 >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.oarbtim5,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.oarbtim5,"->>>>9").      
         IF tempupp.ototalt5 >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.ototalt5,">>>>9").
         ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.ototalt5,"->>>9").         
      END.
      ELSE IF franar + 4 < tillar THEN DO:
         IF tempupp.oarbtim5 >= 0 THEN SUBSTRING(tidut2.UT,101) = STRING(tempupp.oarbtim5,">>>>>9").      
         ELSE SUBSTRING(tidut2.UT,101) = STRING(tempupp.oarbtim5,"->>>>9").      
         IF tempupp.ototalt5 >= 0 THEN SUBSTRING(tidut2.UT,95) = STRING(tempupp.ototalt5,">>>>9").                                 
         ELSE SUBSTRING(tidut2.UT,95) = STRING(tempupp.ototalt5,"->>>9").                                          
      END.
   END.     
END PROCEDURE.

PROCEDURE berkalk_UI.
totmtrl = 0.   
   IF KALKAONR.AONR NE ? THEN DO:
      FIND FIRST BEREDNING WHERE BEREDNING.AONR = KALKAONR.AONR AND 
      BEREDNING.DELNR = KALKAONR.DELNR USE-INDEX AONR NO-LOCK NO-ERROR.
      IF AVAILABLE BEREDNING THEN DO:
         RUN LISTPROG.P (INPUT BEREDNING.BERAONR, INPUT BEREDNING.OMRADE,
         OUTPUT TABLE mtrl_temp, OUTPUT TABLE lin_upp,OUTPUT TABLE lin_temp).
         EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR.          
         FOR EACH mtrl_temp BREAK BY mtrl_temp.ENR: 
            ACCUMULATE mtrl_temp.TOTPRIS (TOTAL BY mtrl_temp.ENR). 
            ACCUMULATE mtrl_temp.ANTAL (TOTAL BY mtrl_temp.ENR).       
            IF LAST-OF(mtrl_temp.ENR) THEN DO:
               CREATE mtrl_temp2.
               ASSIGN 
               mtrl_temp2.ENR = mtrl_temp.ENR
               mtrl_temp2.BENAMNING = mtrl_temp.BENAMNING 
               mtrl_temp2.ENHET = mtrl_temp.ENHET 
               mtrl_temp2.PRIS = mtrl_temp.PRIS
               mtrl_temp2.TOTPRIS = (ACCUM TOTAL BY mtrl_temp.ENR mtrl_temp.TOTPRIS)                       
               mtrl_temp2.ANTAL = (ACCUM TOTAL BY mtrl_temp.ENR mtrl_temp.ANTAL).                                                        
            END.     
         END.    
         FOR EACH lin_upp:
            FIND FIRST mtrl_temp2 WHERE mtrl_temp2.ENR = lin_upp.ENR NO-LOCK NO-ERROR.
            IF AVAILABLE mtrl_temp2 THEN DO:                      
               ASSIGN
               mtrl_temp2.ANTAL = mtrl_temp2.ANTAL + lin_upp.TOTMETER
               mtrl_temp2.TOTPRIS = mtrl_temp2.TOTPRIS + lin_upp.TOTPRIS.
            END.
            ELSE DO:                    
               CREATE mtrl_temp2.
               ASSIGN 
               mtrl_temp2.ENR = lin_upp.ENR
               mtrl_temp2.BENAMNING = lin_upp.BENAMNING 
               mtrl_temp2.ENHET = lin_upp.ENHET 
               mtrl_temp2.PRIS = lin_upp.PRIS
               mtrl_temp2.TOTPRIS = lin_upp.TOTPRIS                       
               mtrl_temp2.ANTAL = lin_upp.TOTMETER.
            END.
         END.
         FOR EACH mtrl_temp2:
            totmtrl = totmtrl + mtrl_temp2.TOTPRIS.
         END.              
      END.
   END.
END PROCEDURE.
PROCEDURE procset_UI:  
  IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.            
END PROCEDURE .
