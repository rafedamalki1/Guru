/*
     Filename: SPECIALMAPITO.P
     Comment: Tar emot mottagare(char), subject(char), body(char), bifogadfil(char, fullständig sökväg, ex c:\protemp9\test.txt)
              och skapar ett email i default epost-program.
              
              Om man vill ha fler MOTTAGARE eller BIFOGADE FILER separeras dessa med ","
              ex INPUT "kalle@test.com, kajsa@test.com" för mottagare
              EX INPUT "c:\protemp9\test.txt, c:\protemp9\hej.txt"
              
              
     Created: 2009.01.21 11:24 ELPKL   
     Modified: 2008.12.18 11:14 ELPAO    
     Modified: 
     
     
     ###############################
           OBS MÅSTE VARA MED!
     ###############################
     file-info:file-name = ".".
 orgdir = file-info:full-pathname.
 
 RUN SPECIALMAPITO.P (INPUT "kalle@exempel.com", INPUT "", INPUT "", INPUT tempnamn).
   RUN SetCurrentDirectoryA IN Guru.Konstanter:hpApi  (INPUT orgdir).
   
     ################################
     ################################
*/

DEFINE INPUT PARAMETER pcRecipient AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER pcSubject AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER body AS CHARACTER NO-UNDO. /*ccc*/

/*DEFINE INPUT PARAMETER pcMailTxt AS MEMPTR.*/
DEFINE INPUT PARAMETER pcAttach AS CHARACTER NO-UNDO.

DEFINE VAR iREGION AS INTEGER NO-UNDO INITIAL 1.
DEFINE VAR iloop AS INTEGER NO-UNDO.
DEFINE VAR tempch AS CHARACTER NO-UNDO.
DEFINE VARIABLE pcSkickadir AS INTEGER NO-UNDO.
DEFINE VARIABLE pcAttachName AS CHARACTER NO-UNDO.
DEFINE VARIABLE pcMailTxt AS MEMPTR NO-UNDO. /*ccc*/

DEF TEMP-TABLE tt_EmailList NO-UNDO
FIELD cEMail AS CHARACTER
FIELD iType AS INTEGER
FIELD lProcessed AS LOGICAL.

DEF TEMP-TABLE tt_IniList NO-UNDO LIKE tt_EmailList.

DEF TEMP-TABLE tt_FileList NO-UNDO
FIELD cName AS CHARACTER
FIELD cFileName AS CHARACTER
FIELD cPath AS CHARACTER
FIELD iSize AS INTEGER.

&SCOPED-DEFINE COMMA ",":U
&SCOPED-DEFINE SEMI-COLON ";":U
&SCOPED-DEFINE TYPE "CHARACTER":U
DEF STREAM MAPILOG.
{windows.i}

/************** M A I N B L O C K *******************/
RUN fixatext_UI.

      
IF OPSYS = "WIN32":U THEN DO:   
   REPEAT iloop = 1 TO NUM-ENTRIES(pcAttach):
      tempch = ENTRY(iloop,pcAttach).
      tempch = SUBSTRING(tempch, R-INDEX(tempch, "\") + 1, LENGTH(tempch)).
      IF iloop = 1 THEN pcAttachName = tempch.
      ELSE pcAttachName = pcAttachName + ";" + tempch.
   END.
   
   pcRecipient = REPLACE(pcRecipient,{&COMMA},{&SEMI-COLON}).
   pcAttach = REPLACE(pcAttach,{&COMMA},{&SEMI-COLON}).
   
   IF (NUM-ENTRIES("" ,{&SEMI-COLON}) +
      NUM-ENTRIES("" ,{&SEMI-COLON}) +
      NUM-ENTRIES("" ,{&SEMI-COLON})) <= 20 THEN DO:
 
      RUN MAPI (
                pcRecipient,
                pcSubject,
                pcMailTxt,
                pcAttachName, /* AttachName */
                pcAttach /* Attachment */
                ).
   END.
   ELSE DO:
      RUN BatchProcess("","","").
   END.
END.
ELSE RUN logMessageHeader(OPSYS + " MAPI not supported.":U,"","").

/************** E N D OF M A I N B L O C K *******************/

/*
==========================================================================
*/
FUNCTION INC RETURNS INTEGER (iNumber AS INTEGER, iCount AS INTEGER):
   DEF VAR iResult AS INTEGER NO-UNDO.

   iResult = iNumber + iCount.
   RETURN iResult.
END.


PROCEDURE fixatext_UI :
   body = body + CHR(10) + CHR(10) + " ".
   SET-SIZE(pcMailTxt) =  60000.
   PUT-STRING(pcMailTxt,1) = body.
   
END PROCEDURE.


PROCEDURE MAPI :
   DEFINE INPUT PARAMETER RecipName AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER Subject AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER Bodytext AS MEMPTR.
   
   DEFINE INPUT PARAMETER FileNameList AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER FilePathName AS CHARACTER NO-UNDO.
   
   DEFINE VAR NoOfRecipients AS INT NO-UNDO.
   DEFINE VARIABLE SubjPtr AS MEMPTR NO-UNDO.
   
   IF PROVERSION BEGINS "11.2" THEN.
   ELSE DO:
      RUN SPECIALMAPI116.P (RecipName, /* To */
                   "", /* CC */
                   "", /* BCC */
                   Subject, /* Subject */
                   Bodytext, /* Body */
                   FileNameList, /* AttachName */
                   FilePathName, /* Attachment */
                   "" /* From */
                   ).
       RETURN.
   END.
   
   RUN PopulateTable(RecipName, 1).
   /*RUN PopulateTable("", 1).*/
   RUN PopulateTable("", 2).
   RUN PopulateTable("", 3).
   
   NoOfRecipients = NUM-ENTRIES(RecipName ,{&SEMI-COLON}) +
   NUM-ENTRIES("",{&SEMI-COLON}) +
   NUM-ENTRIES("" ,{&SEMI-COLON}).
   
   SET-SIZE(SubjPtr) = LENGTH(Subject ,{&TYPE}) + 1. /* maximum = 255 */
   PUT-STRING(SubjPtr,1) = Subject.
   
/* ---------------- Build Originator details ------------------------ */
   
   DEFINE VARIABLE OriginNamePtr AS MEMPTR NO-UNDO.
   SET-SIZE(OriginNamePtr) = LENGTH("" ,{&TYPE}) + 1. /* maximum =
   255 */
   PUT-STRING(OriginNamePtr,1) = "". /* Originator name */
   
   DEFINE VARIABLE OriginDescPtr AS MEMPTR NO-UNDO.
   SET-SIZE(OriginDescPtr) = 24.
   PUT-LONG(OriginDescPtr,1) = 0. /* Reserved */
   PUT-LONG(OriginDescPtr,5) = 0. /* RecipClass 0 = MAPI_ORIG */
   PUT-LONG(OriginDescPtr,9) = GET-POINTER-VALUE(OriginNamePtr). /* Name */
   PUT-LONG(OriginDescPtr,13) = 0. /* Address */
   PUT-LONG(OriginDescPtr,17) = 0. /* EID Size */
   PUT-LONG(OriginDescPtr,21) = 0. /* Entry ID */
   
   
   /* ----------------Build Recipient details -------------------------- */
   
   DEFINE VARIABLE RecipNamePtr AS MEMPTR EXTENT 21 NO-UNDO.
   DEFINE VARIABLE RecipDescPtr AS MEMPTR NO-UNDO.
   DEFINE VAR X AS INTEGER NO-UNDO INITIAL 0.
   
   SET-SIZE(RecipDescPtr) = 24 * NoOfRecipients.
   iRegion = 1.
   FOR EACH tt_EmailList WHERE lProcessed = FALSE BREAK BY iType :
      X = X + 1.
      SET-SIZE(RecipNamePtr[x]) = LENGTH(tt_EmailList.cEmail ,{&TYPE}) +
      1. /* maximum = 255 */
      PUT-STRING(RecipNamePtr[x],1) = tt_EmailList.cEmail. /*
      Recipient name */
      
      PUT-LONG(RecipDescPtr,iRegion) = 0. /*
      Reserved */
      iRegion = INC(iRegion,4).
      PUT-LONG(RecipDescPtr,iRegion) = tt_EmailList.iType. /*
      RecipClass 1 = MAPI_TO */
      iRegion = INC(iRegion,4).
      PUT-LONG(RecipDescPtr,iRegion) = GET-POINTER-VALUE(RecipNamePtr[x]). /*
      Name */
      iRegion = INC(iRegion,4).
      PUT-LONG(RecipDescPtr,iRegion) = 0. /*
      Address */
      iRegion = INC(iRegion,4).
      PUT-LONG(RecipDescPtr,iRegion) = 0. /*
      EID Size */
      iRegion = INC(iRegion,4).
      PUT-LONG(RecipDescPtr,iRegion) = 0. /*
      Entry ID */
      iRegion = INC(iRegion,4).
      lProcessed = TRUE.
   END.

   /* --------------- Build File Details ------------------- */
   
   IF FilePathName <> "":U THEN DO:
      DEFINE VARIABLE FilePathNamePtr AS MEMPTR EXTENT 21 NO-UNDO.
      DEFINE VARIABLE FileNamePtr AS MEMPTR EXTENT 21 NO-UNDO.
      DEFINE VARIABLE FileDescPtr AS MEMPTR NO-UNDO.
      DEFINE VAR I AS INTEGER NO-UNDO.
      DEFINE VAR iFilePosition AS INTEGER NO-UNDO INITIAL 2.
      
      iRegion = 1.
      SET-SIZE(FileDescPtr) = 24 * NUM-ENTRIES(FilePathName,{&SEMI-COLON}).
      RUN PopulateFileList(FilePathName,FileNameList).
      iFilePosition = 2.
      I = 1.
      FOR EACH tt_FileList:
         SET-SIZE(FilePathNamePtr[I]) = LENGTH(cFileName ,{&TYPE}) + 1. /*
         maximum = 255 */
         PUT-STRING(FilePathNamePtr[I],1) = cFileName. /* Filepathname */
         SET-SIZE(FileNamePtr[I]) = LENGTH(cName ,{&TYPE}) + 1. /* maximum = 255*/
         PUT-STRING(FileNamePtr[I],1) = cName. /* File name */
         PUT-LONG(FileDescPtr,iRegion) = 0. /* Reserved */
         iRegion = INC(iRegion,4).
         PUT-LONG(FileDescPtr,iRegion) = 0. /* Flags 0 = data file */
         iRegion = INC(iRegion,4).
         PUT-LONG(FileDescPtr,iRegion) = -1. /* LENGTH(Bodytext) + iFilePosition. */ /* Position */
         iRegion = INC(iRegion,4).
         PUT-LONG(FileDescPtr,iRegion) = GET-POINTER-VALUE(FilePathNamePtr[I]). /* PathName */
         iRegion = INC(iRegion,4).
         PUT-LONG(FileDescPtr,iRegion) = GET-POINTER-VALUE(FileNamePtr[I]). /*FileName */
         iRegion = INC(iRegion,4).
         PUT-LONG(FileDescPtr,iRegion) = 0. /* FileType */
         iRegion = INC(iRegion,4).
         I = I + 1.
      END.
   END.

  DEFINE VARIABLE MessageDescPtr AS MEMPTR NO-UNDO.
   SET-SIZE(MessageDescPtr) = 48.
   PUT-LONG(MessageDescPtr,1) = 0. /* Reserved */
   PUT-LONG(MessageDescPtr,5) = GET-POINTER-VALUE(SubjPtr). /* Subject */
   PUT-LONG(MessageDescPtr,9) = GET-POINTER-VALUE(Bodytext). /* Text */
   PUT-LONG(MessageDescPtr,13) = 0. /* MessageType */
   PUT-LONG(MessageDescPtr,17) = 0. /* DateReceived */
   PUT-LONG(MessageDescPtr,21) = 0. /* ConversationID */
   PUT-LONG(MessageDescPtr,25) = 1. /* Flags */
   PUT-LONG(MessageDescPtr,29) = GET-POINTER-VALUE(OriginDescPtr). /*
   Originator */
   PUT-LONG(MessageDescPtr,33) = NoOfRecipients. /* RecipCount */
   PUT-LONG(MessageDescPtr,37) = GET-POINTER-VALUE(RecipDescPtr). /* Recips */
   PUT-LONG(MessageDescPtr,41) = NUM-ENTRIES(FilePathName,{&SEMI-COLON}).
   /* FileCount */
   PUT-LONG(MessageDescPtr,45) = (IF FilePathName = "":U
   THEN 0
   ELSE GET-POINTER-VALUE(FileDescPtr)).
   
   /* -------- Send Message ------------ */
   DEFINE VARIABLE ResultInt AS INTEGER NO-UNDO.
   DEFINE VARIABLE lSession AS INTEGER NO-UNDO.
   RUN MAPISendMail IN Guru.Konstanter:hpApi 
      (INPUT 0,
       INPUT 0,
       INPUT GET-POINTER-VALUE(MessageDescPtr),
       INPUT 9, /* 1 = MAPI_LOGON_UI + 2 = MAPI_NEW_SESSION + 8 = MAPI_DIALOG */ /* 9 = starta e-postklient, enligt ett exempel, dvs MAPI_DIALOG */
       INPUT 0,
       OUTPUT ResultInt).
   RUN MapiReturnCode (ResultInt) NO-ERROR.


   DO X = 1 TO 21:
      SET-SIZE(RecipNamePtr[x]) = 0 NO-ERROR.
   END.
   SET-SIZE(RecipDescPtr) = 0.
   DO X = 1 TO 21:
      SET-SIZE(FilePathNamePtr[X]) = 0 NO-ERROR.
   END.
   DO X = 1 TO 21:
      SET-SIZE(FileNamePtr[X]) = 0 NO-ERROR.
   END.
END PROCEDURE.


PROCEDURE MapiReturnCode :
   DEFINE INPUT PARAMETER ResultInt AS INTEGER NO-UNDO. /* result from MAPISendMail */
   DEFINE VARIABLE RESULT AS CHARACTER NO-UNDO.
   
   IF ResultInt <> 0 THEN DO: /* 0 = Success */
      CASE ResultInt:
         WHEN 1 THEN RESULT = "User Abort":U.
         WHEN 2 THEN RESULT = "Failure":U.
         WHEN 3 THEN RESULT = "Login Failure":U.
         WHEN 4 THEN RESULT = "Disk Full":U.
         WHEN 5 THEN RESULT = "Insufficient Memory":U.
         WHEN 6 THEN RESULT = "Blk Too Small":U.
         WHEN 8 THEN RESULT = "Too Many Sessions":U.
         WHEN 9 THEN RESULT = "Too Many Files":U.
         WHEN 10 THEN RESULT = "Too Many Recipients":U.
         WHEN 11 THEN RESULT = "Attachment Not Found":U.
         WHEN 12 THEN RESULT = "Attachment Open Failure":U.
         WHEN 13 THEN RESULT = "Attachment Write Failure":U.
         WHEN 14 THEN RESULT = "Unknown Recipient":U.
         WHEN 15 THEN RESULT = "Bad Recipient type":U.
         WHEN 16 THEN RESULT = "No Messages":U.
         WHEN 17 THEN RESULT = "Invalid Message":U.
         WHEN 18 THEN RESULT = "Bodytext Too Large":U.
         WHEN 19 THEN RESULT = "Invalid Session":U.
         WHEN 20 THEN RESULT = "Type Not Supported":U.
         WHEN 21 THEN RESULT = "Ambiguous Recipient":U.
         WHEN 22 THEN RESULT = "Message in use":U.
         WHEN 23 THEN RESULT = "Network failure":U.
         WHEN 24 THEN RESULT = "Invalid edit fields":U.
         WHEN 25 THEN RESULT = "Invalid recipients":U.
         WHEN 26 THEN RESULT = "Feature not supported":U.
         OTHERWISE RESULT = "Unknown error":U.
      END CASE.
/*       DO ON ENDKEY UNDO, LEAVE:                               */
/*          IF NOT SESSION:BATCH-MODE THEN                       */
/*             MESSAGE ResultInt RESULT VIEW-AS ALERT-BOX.       */
/*          ELSE RUN logMessageHeader("Mapi Error":U,Result,""). */
/*       END.         
/*                                           */
      Ereslut = TRUE. 
      Emailtxt = STRING(ResultInt) + " " + RESULT.      
      */
      MESSAGE "Något gick fel! Meddela detta till Elpool 090-184540." SKIP
         ResultInt " " RESULT 
         VIEW-AS ALERT-BOX.
   END.
   /*
   ELSE DO:
      ASSIGN
      Ereslut = FALSE
      Emailtxt = "". 
   END.       
   */
END PROCEDURE.


PROCEDURE PopulateTable:
   DEFINE INPUT PARAMETER piList AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER piType AS INTEGER NO-UNDO.
   DEFINE VAR I AS INTEGER NO-UNDO.
   
   DO I = 1 to NUM-ENTRIES(piList,{&SEMI-COLON}):
      IF ENTRY(I,piList,{&SEMI-COLON}) <> "" THEN DO:
         CREATE tt_EmailList.
         ASSIGN
         cEmail = ENTRY(I,piList,{&SEMI-COLON})
         iType = piType.
      END.
   END.
END PROCEDURE.

PROCEDURE PopulateFileList:
   DEFINE INPUT PARAMETER piList AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER piName AS CHARACTER NO-UNDO.
   DEFINE VAR I AS INTEGER NO-UNDO.
   
   DO I = 1 to NUM-ENTRIES(piList,{&SEMI-COLON}):
      FILE-INFO:FILE-NAME = ENTRY(I,piList,{&SEMI-COLON}).
      CREATE tt_FileList.
      ASSIGN
      cName = ENTRY(I,piName,{&SEMI-COLON})
      cFileName = FILE-INFO:FILE-NAME
      cPath = FILE-INFO:FULL-PATHNAME
      iSize = FILE-INFO:FILE-SIZE.
   END.
END PROCEDURE.

PROCEDURE logMessageHeader:
   DEF INPUT PARAMETER cSubject AS CHARACTER NO-UNDO FORMAT "x(20)":U.
   DEF INPUT PARAMETER cRecipient AS CHARACTER NO-UNDO FORMAT "x(20)":U.
   DEF INPUT PARAMETER cAddress AS CHARACTER NO-UNDO FORMAT "x(20)":U.
 
   IF SESSION:BATCH-MODE AND (NOT ERROR-STATUS:ERROR) THEN DO:
      OUTPUT STREAM MAPILOG TO mapimailer.log APPEND.
      PUT STREAM MAPILOG UNFORMATTED STRING(TODAY,"99/99/99":U) SPACE(2)
      STRING(TIME,"HH:MM":U) SPACE (2)
      cSubject SPACE(2)
      cRecipient SPACE(2)
      cAddress " [OK]":U SKIP.
      OUTPUT STREAM MAPILOG CLOSE.
   END.
   
   IF ERROR-STATUS:ERROR THEN DO:
      OUTPUT STREAM MAPILOG TO mapimailer.log APPEND.
      PUT STREAM MAPILOG UNFORMATTED STRING(TODAY,"99/99/99":U) SPACE(2)
      STRING(TIME,"HH:MM":U) SPACE (2)
      cSubject SPACE(2)
      cRecipient SPACE(2)
      cAddress "" SKIP.
      OUTPUT STREAM MAPILOG CLOSE.
   END.
END PROCEDURE.

PROCEDURE BatchProcess:
   DEF INPUT PARAMETER pcTO AS CHARACTER NO-UNDO.
   DEF INPUT PARAMETER cCC AS CHARACTER NO-UNDO.
   DEF INPUT PARAMETER cBCC AS CHARACTER NO-UNDO.
   
   DEF VAR cListTO AS CHARACTER NO-UNDO.
   DEF VAR cListCC AS CHARACTER NO-UNDO.
   DEF VAR cListBCC AS CHARACTER NO-UNDO.
   DEF VAR iListSum AS INTEGER NO-UNDO.
   DEF VAR iBatchRuns AS INTEGER NO-UNDO.
   DEF VAR iRemainder AS INTEGER NO-UNDO.
   DEF VAR iRecordNumber AS INTEGER NO-UNDO.
   DEF VAR iSegmentNo AS INTEGER NO-UNDO.
   /* Load Email to Temp-Table */
   RUN InitializeTable (pcTO,1).
   RUN InitializeTable (cCC,2).
   RUN InitializeTable (cBCC,3).
   iListSum = (NUM-ENTRIES(pcTO,{&SEMI-COLON}) +
      NUM-ENTRIES(cCC,{&SEMI-COLON}) + NUM-ENTRIES(cBCC,{&SEMI-COLON})).
   iBatchRuns = iListSum / 20.
   iRemainder = iListSum MODULO 20.
   iRecordNumber = 1.
   iSegmentNo = 1.
   FOR EACH tt_IniList:
      display tt_IniList.
   END.
   FOR EACH tt_IniList BREAK BY cEMAIL:
      IF iSegmentNo = 20 THEN DO:
         ASSIGN
         cListTo = IF iType = 1 THEN cListTo + cEmail ELSE cListTo
         cListCC = IF iType = 2 THEN cListCC + cEmail ELSE cListCC
         cListBCC = IF iType = 3 THEN cListBCC + cEmail ELSE cListBCC
         lProcessed = TRUE.
         
         /* MAKE THE MAPI CALL */
         IF cListTo NE "" THEN IF INDEX(cListTo ,{&SEMI-COLON}
            ,LENGTH(cListTo ,{&TYPE})) > 0 THEN SUBSTRING(cListTo, LENGTH(cListTo
            ,{&TYPE}),1) = "".
         IF cListCC NE "" THEN IF INDEX(cListCC ,{&SEMI-COLON}
            ,LENGTH(cListCC ,{&TYPE})) > 0 THEN SUBSTRING(cListCC, LENGTH(cListCC
            ,{&TYPE}),1) = "".
         IF cListBCC NE "" THEN IF INDEX(cListBCC ,{&SEMI-COLON}
            ,LENGTH(cListBCC ,{&TYPE})) > 0 THEN SUBSTRING(cListBCC,
            LENGTH(cListBCC,{&TYPE}),1) = "".
         RUN MAPI 
            (
              pcSubject
             ,pcMailTxt
             ,pcAttachName /* AttachName */
             ,pcAttach /* Attachment */
             ).
         ASSIGN
         cListTo = ""
         cListCC = ""
         cListBCC = "".
         iSegmentNo = 1.
      END.
      ELSE DO:
         ASSIGN
         cListTo = IF iType = 1 THEN cListTo + cEmail + {&SEMI-COLON} ELSE
         cListTo
         cListCC = IF iType = 2 THEN cListCC + cEmail + {&SEMI-COLON} ELSE
         cListCC
         cListBCC = IF iType = 3 THEN cListBCC + cEmail + {&SEMI-COLON} ELSE
         cListBCC
         lProcessed = TRUE.
         
         iSegmentNo = iSegmentNo + 1.
      END.
      /* Last Run Record */
      IF ((iListSum - iRemainder) = iRecordNumber) THEN DO:
         ASSIGN
         cListTo = IF iType = 1 THEN cListTo + cEmail + {&SEMI-COLON} ELSE
         cListTo
         cListCC = IF iType = 2 THEN cListCC + cEmail + {&SEMI-COLON} ELSE
         cListCC
         cListBCC = IF iType = 3 THEN cListBCC + cEmail + {&SEMI-COLON} ELSE
         cListBCC
         lProcessed = TRUE.
         
         IF cListTo NE "" THEN IF INDEX(cListTo ,{&SEMI-COLON} ,LENGTH(cListTo
         ,{&TYPE})) > 0 THEN SUBSTRING(cListTo, LENGTH(cListTo ,{&TYPE}),1) =
         "".
         IF cListCC NE "" THEN IF INDEX(cListCC ,{&SEMI-COLON} ,LENGTH(cListCC
         ,{&TYPE})) > 0 THEN SUBSTRING(cListCC, LENGTH(cListCC ,{&TYPE}),1) =
         "".
         IF cListBCC NE "" THEN IF INDEX(cListBCC ,{&SEMI-COLON} ,LENGTH(cListBCC
         ,{&TYPE})) > 0 THEN SUBSTRING(cListBCC, LENGTH(cListBCC ,{&TYPE}),1) = "".
         






         
         



         RUN MAPI (
          pcSubject        
         ,pcMailTxt
         ,pcAttachName /* AttachName */
         ,pcAttach /* Attachment */
         ).
         ASSIGN
         cListTo = ""
         cListCC = ""
         cListBCC = "".
         
         LEAVE.
      END.
      iRecordNumber = iRecordNumber + 1.
   END.
   
   FOR EACH tt_IniList WHERE NOT lProcessed:
      DISPLAY tt_IniList.
   END.
END.

PROCEDURE InitializeTable:
   DEFINE INPUT PARAMETER piList AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER piType AS INTEGER NO-UNDO.
   DEFINE VAR I AS INTEGER NO-UNDO.
   
   DO I = 1 to NUM-ENTRIES(piList,{&SEMI-COLON}):
      CREATE tt_IniList.
      ASSIGN
      cEmail = ENTRY(I,piList,{&SEMI-COLON})
      iType = piType.
   END.
END.

/* 
   /* MAPI */
   /* Recipient is message originator */
   &GLOB MAPI_ORIG 0
   /* Recipient is a primary recipient */
   &GLOB MAPI_TO 1
   /* Recipient is a copy recipient */
   &GLOB MAPI_CC 2
   /* Recipient is blind copy recipient */
   &GLOB MAPI_BCC 3
   &GLOB MAIL_LONGDATE 0
   &GLOB MAIL_LISTVIEW 1
   
   /* Attachment Type: data File */
   &GLOB Mapi_ATT_FILE 0
   /* Attachment Type: embedded OLE Object */
   &GLOB MAPI_ATT_EOle 1
   /* Attachment Type: static OLE Object */
   &GLOB MAPI_ATT_SOle 2
   
   /*---------------------------------------------------
   MAPI.DLL CONSTANT Declarations
   ----------------------------------------------------*/
   
   &GLOB SUCCESS_SUCCESS 0
   &GLOB MAPI_USER_ABORT 1
   &GLOB MAPI_E_FAILURE 2
   &GLOB MAPI_E_LOGIN_FAILURE 3
   &GLOB MAPI_E_DISK_FULL 4
   &GLOB MAPI_E_INSUFFICIENT_MEMORY 5
   &GLOB MAPI_E_BLK_TOO_SMALL 6
   &GLOB MAPI_E_TOO_MANY_SESSIONS 8
   &GLOB MAPI_E_TOO_MANY_FILES 9
   &GLOB MAPI_E_TOO_MANY_RECIPIENTS 10
   &GLOB MAPI_E_ATTACHMENT_NOT_FOUND 11
   &GLOB MAPI_E_ATTACHMENT_OPEN_FAILURE 12
   &GLOB MAPI_E_ATTACHMENT_WRITE_FAILURE 13
   &GLOB MAPI_E_UNKNOWN_RECIPIENT 14
   &GLOB MAPI_E_BAD_RECIPTYPE 15
   &GLOB MAPI_E_NO_MESSAGES 16
   &GLOB MAPI_E_INVALID_MESSAGE 17
   &GLOB MAPI_E_TEXT_TOO_LARGE 18
   &GLOB MAPI_E_INVALID_SESSION 19
   &GLOB MAPI_E_TYPE_NOT_SUPPORTED 20
   &GLOB MAPI_E_AMBIGUOUS_RECIPIENT 21
   &GLOB MAPI_E_MESSAGE_IN_USE 22
   &GLOB MAPI_E_NETWORK_FAILURE 23
   &GLOB MAPI_E_INVALID_EDITFIELDS 24
   &GLOB MAPI_E_INVALID_RECIPS 25
   &GLOB MAPI_E_NOT_SUPPORTED 26
   
   &GLOB MAPI_UNREAD 1
   &GLOB MAPI_RECEIPT_REQUESTED 2
   &GLOB MAPI_SENT 4
   
   /*---------------------------------------
   FLAG Declarations
   ---------------------------------------*/
   
   &GLOB MAPI_LOGON_UI 1
   &GLOB MAPI_NEW_SESSION 2
   &GLOB MAPI_DIALOG 8
   &GLOB MAPI_UNREAD_ONLY 32
   &GLOB MAPI_ENVELOPE_ONLY 64
   &GLOB MAPI_PEEK 128
   &GLOB MAPI_GUARANTEE_FIFO 256
   &GLOB MAPI_BODY_AS_FILE 512
   &GLOB MAPI_AB_NOMODIFY 1024
   &GLOB MAPI_SUPPRESS_ATTACH 2048
   &GLOB MAPI_FORCE_DOWNLOAD 4096
   
   &GLOB MAPI_OLE 1
   &GLOB MAPI_OLE_STATIC 2
  
*/




