/*EXPROTOVSABNY.P*/
{TIDUTTTNEW.I}
{FASTFORTEMP.I}

DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.


DEFINE VARIABLE felexcel AS LOGICAL NO-UNDO.
DEFINE VARIABLE iRad               AS INTEGER    INITIAL 0.
DEFINE VARIABLE iRadslut           AS INTEGER    INITIAL 0.
DEFINE VARIABLE cRad               AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cRange             AS CHARACTER  NO-UNDO.



DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando3 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando4 AS CHARACTER FORMAT "X(20)" NO-UNDO.

DEFINE VARIABLE kommando5 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando6 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando7 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando8 AS CHARACTER FORMAT "X(20)" NO-UNDO.

DEFINE VARIABLE kommando15 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando16 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando17 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando18 AS CHARACTER FORMAT "X(20)" NO-UNDO.


DEFINE  VARIABLE VisaExcel AS Controls.GuruExcelInterop NO-UNDO.
DEFINE  VARIABLE VisaExcelem AS Controls.GuruExcelEmbed NO-UNDO.

DEFINE VARIABLE bladvar2 AS INTEGER NO-UNDO.
DEFINE VARIABLE protvar AS INTEGER NO-UNDO.

DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamnB AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn11 AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn21 AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamnC AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn12 AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn22 AS CHARACTER NO-UNDO.

DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vadress AS CHARACTER NO-UNDO.
DEFINE VARIABLE vpadress AS CHARACTER NO-UNDO.
DEFINE VARIABLE vtelef AS CHARACTER NO-UNDO.
DEFINE VARIABLE felmedd AS CHARACTER NO-UNDO.
DEFINE VARIABLE omromr AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjproc AS INTEGER NO-UNDO.
DEFINE VARIABLE hjagare AS INTEGER NO-UNDO.
DEFINE VARIABLE projl AS CHARACTER NO-UNDO.
DEFINE VARIABLE arrendator AS CHARACTER NO-UNDO.
DEFINE VARIABLE ipfakt AS INTEGER NO-UNDO.
DEFINE VARIABLE ivfaktaker AS INTEGER NO-UNDO.
DEFINE VARIABLE bbelopp AS INTEGER NO-UNDO.
DEFINE VARIABLE pomr AS CHARACTER NO-UNDO.
DEFINE VARIABLE pfakt AS INTEGER NO-UNDO.
DEFINE VARIABLE vskog AS CHARACTER NO-UNDO.
DEFINE VARIABLE oktforekpi  AS DECIMAL NO-UNDO.
DEFINE VARIABLE kpi1995 AS DECIMAL NO-UNDO.
DEFINE VARIABLE kabersatt AS DECIMAL NO-UNDO.
DEFINE VARIABLE allnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE allpersnr AS CHARACTER NO-UNDO.
DEFINE VARIABLE antag AS INTEGER NO-UNDO.
DEFINE VARIABLE kontpers AS CHARACTER NO-UNDO.
DEFINE VARIABLE skogfast AS LOGICAL NO-UNDO.
DEFINE VARIABLE fdyr AS INTEGER NO-UNDO.
DEFINE VARIABLE skprotapph AS HANDLE NO-UNDO.
DEFINE VARIABLE extrarad AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarad2 AS INTEGER NO-UNDO.
DEFINE VARIABLE revkost  AS INTEGER NO-UNDO.
DEFINE VARIABLE revtext AS CHARACTER NO-UNDO.
DEFINE VARIABLE adel AS CHARACTER NO-UNDO.
DEFINE VARIABLE lelitt AS CHARACTER NO-UNDO.
DEFINE VARIABLE pnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE pled AS CHARACTER NO-UNDO.
DEFINE VARIABLE konc AS CHARACTER NO-UNDO.
/*DEFINE VARIABLE domsaga AS CHARACTER NO-UNDO.*/
DEFINE VARIABLE nstn AS CHARACTER NO-UNDO.
DEFINE VARIABLE ktext AS CHARACTER NO-UNDO.
DEFINE VARIABLE linkbild AS CHARACTER NO-UNDO.
DEFINE VARIABLE fabet AS CHARACTER NO-UNDO.
DEFINE VARIABLE sidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE sidvarB AS INTEGER NO-UNDO.
DEFINE VARIABLE sidvarC AS INTEGER NO-UNDO.
DEFINE VARIABLE hjlangd AS INTEGER NO-UNDO.
DEFINE VARIABLE hjbredd  AS DECIMAL NO-UNDO.
DEFINE VARIABLE kskapkr AS INTEGER NO-UNDO.
DEFINE VARIABLE nstnakerkr AS INTEGER NO-UNDO.
DEFINE VARIABLE nstnovrigkr AS INTEGER NO-UNDO.

DEFINE VARIABLE kablangd AS INTEGER NO-UNDO.
DEFINE VARIABLE hjaker AS CHARACTER NO-UNDO.
DEFINE VARIABLE pvaldomr AS INTEGER NO-UNDO.
DEFINE VARIABLE vardartal AS INTEGER NO-UNDO.
DEFINE VARIABLE akersum AS INTEGER NO-UNDO.
DEFINE VARIABLE allaakekom AS CHARACTER NO-UNDO.
DEFINE VARIABLE ksttyp AS CHARACTER NO-UNDO.
DEFINE VARIABLE expfakt AS DECIMAL NO-UNDO.
DEFINE VARIABLE pvaldomrch AS CHARACTER NO-UNDO. 
DEFINE VARIABLE antggr AS INTEGER NO-UNDO. 
DEFINE VARIABLE unanrrad AS INTEGER NO-UNDO.
DEFINE VARIABLE metkab AS INTEGER NO-UNDO.
DEFINE VARIABLE krkskstn AS INTEGER NO-UNDO.
DEFINE VARIABLE komkskstn  AS CHARACTER NO-UNDO.
DEFINE VARIABLE vardtel AS CHARACTER NO-UNDO.
DEFINE VARIABLE vort AS CHARACTER NO-UNDO.
DEFINE VARIABLE vepost AS CHARACTER NO-UNDO.
DEF VAR hjfastnamn AS CHARACTER.

DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.
DEFINE VARIABLE bankktofast AS CHARACTER NO-UNDO.
DEFINE VARIABLE banknamnfast AS CHARACTER NO-UNDO.
DEFINE VARIABLE bankktoag AS CHARACTER NO-UNDO.
DEFINE VARIABLE banknamnag AS CHARACTER NO-UNDO.
DEFINE VARIABLE adel1 AS INTEGER NO-UNDO.
DEFINE VARIABLE adel2 AS INTEGER NO-UNDO.

{SUMTEMP.I}
{MAGA.I}

DEFINE INPUT PARAMETER ponr AS CHARACTER FORMAT "X(12)" NO-UNDO.
DEFINE INPUT PARAMETER mall AS INTEGER  NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR maga.
DEFINE INPUT PARAMETER allamark AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER spmall AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER fildir AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER skrivutmall AS LOGICAL NO-UNDO.
DEFINE OUTPUT PARAMETER ratt AS CHARACTER NO-UNDO.

{MARAG.I}

DEFINE TEMP-TABLE uppfoltemp   
   FIELD FORETAG AS CHARACTER
   FIELD ANVANDARE AS CHARACTER  
   FIELD ALLAMA AS LOGICAL
   FIELD VALVARD AS CHARACTER
   FIELD FORSTA AS LOGICAL
   FIELD STAMP AS LOGICAL.  

{allavardtemp.I}
     
DEFINE TEMP-TABLE fastaga         
   FIELD MARKNR AS INTEGER
   FIELD MARKAGARE AS CHARACTER
   FIELD PERSONNUMMER AS CHARACTER     
   INDEX MARKNR IS PRIMARY MARKNR ASCENDING.    
  
DEFINE TEMP-TABLE storskogadmtemp         
   FIELD NI AS DECIMAL
   FIELD NK AS DECIMAL
   FIELD TO3 AS DECIMAL   
   FIELD TO4A AS DECIMAL
   FIELD TO4B AS DECIMAL .
      
{GLOBVAR2DEL1.I}
&Scoped-define SHARED SHARED  
{MARKVAL.I}                         
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
DEFINE BUFFER marbuff FOR marag.
/*{EXECLIN.I}*/
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{EXTRADATA.I}
IF Guru.Konstanter:appcon THEN DO:
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
  RUN EXTRADATAHMT.P PERSISTENT SET edataapph.  
END.
IF Guru.Konstanter:appcon THEN DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph.
END.

extrarad = 0.
extrarad2 = 0.


/*IF mall = 70 THEN DO:     
   fnamn = "VPVATTN2020.XLSX".   
   fnamn1 = "VPVATTN2020".
   fnamn2 = ".XLSX".
   fnamnB = "VPVATTNBilAker.XLSX".
   fnamn11 = "VPVATTNBilAker".
   fnamn21 = ".XLSX".
   /*fnamnC = "VPVATTBilEnstakatrad.XLSX".
   fnamn12 = "VPVATTBilEnstakatrad".
   fnamn22 = ".XLSX".*/
   /*checkboxar
    Lågspänning = L7
    Storskogsbruk  = L9
    Egen  Servisledning = L11
    Förhöjd minimiersättning  = L13               
*/
END.*/
IF mall = 70 THEN DO:     
   fnamn = "VPVATTN2022.XLSX".   
   fnamn1 = "VPVATTN2022".
   fnamn2 = ".XLSX".
   fnamnB = "VPVATTNBilAker.XLSX".
   fnamn11 = "VPVATTNBilAker".
   fnamn21 = ".XLSX".   
   /*checkboxar
    Lågspänning = L7
    Storskogsbruk  = L9
    Egen  Servisledning = L11
    Förhöjd minimiersättning  = L13               
*/
END.
IF mall = 71 THEN DO:     
   fnamn = "VPVATTN2021.XLSX".   
   fnamn1 = "VPVATTN2021".
   fnamn2 = ".XLSX".
   fnamnB = "VPVATTNBilAker.XLSX".
   fnamn11 = "VPVATTNBilAker".
   fnamn21 = ".XLSX".
   /*fnamnC = "VPVATTBilEnstakatrad.XLSX".
   fnamn12 = "VPVATTBilEnstakatrad".
   fnamn22 = ".XLSX".*/
   /*checkboxar
    Lågspänning = L7
    Storskogsbruk  = L9
    Egen  Servisledning = L11
    Förhöjd minimiersättning  = L13               
*/
END.
IF mall = 72 THEN DO:     
   fnamn = "VPENERGI2022.XLSX".   
   fnamn1 = "VPENERGI2022".
   fnamn2 = ".XLSX".
   fnamnB = "VPVATTNBilAker.XLSX".
   fnamn11 = "VPVATTNBilAker".
   fnamn21 = ".XLSX".   
   /*checkboxar
    Lågspänning = L7
    Storskogsbruk  = L9
    Egen  Servisledning = L11
    Förhöjd minimiersättning  = L13               
*/
END.
IF mall = 74 THEN DO:     
   fnamn = "VPEON2022.XLSX".   
   fnamn1 = "VPENERGI2022".
   fnamn2 = ".XLSX".
   fnamnB = "VPVATTNBilAker.XLSX".
   fnamn11 = "VPVATTNBilAker".
   fnamn21 = ".XLSX".   
   /*checkboxar
    Lågspänning = L7
    Storskogsbruk  = L9
    Egen  Servisledning = L11
    Förhöjd minimiersättning  = L13               
*/
END.

IF mall = 97 THEN DO:
   fnamn = "VPELLEVIO.XLSM".   
   fnamn1 = "VPELLEVIO".
   fnamn2 = ".XLSM".     
   /*fnamn = "VPELLEVIO.XLSX".   
   fnamn1 = "VPELLEVIO".
   fnamn2 = ".XLSX".*/
   
END.
IF mall = 83 THEN DO:     
   fnamn = "VPVATTBilEnstakatrad.XLSX".   
   fnamn1 = "VPVATTBilEnstakatrad".
   fnamn2 = ".XLSX".
   
END.
IF mall = 85 THEN DO:     
   fnamn = "VPKomavt.XLSX".   
   fnamn1 = "VPKomavt".
   fnamn2 = ".XLSX".   
   /*checkboxar
    Lågspänning = L5
    Storskogsbruk  = L7
    Egen  Servisledning = L9
    Förhöjd minimiersättning  = L11               
*/
END.
IF mall = 95 THEN DO:     
   fnamn = "Utanordning Umeå.XLSX".   
   fnamn1 = "Utanordning Umeå".
   fnamn2 = ".XLSX".
   
END.

IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   {FINNSDYNBLOB.I}
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).
   IF resid = ? THEN DO:
      kommando = SEARCH(fnamn).      
   END.
   ELSE DO:
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).      
   END.
   RUN deleteproc_UI IN blobproch.
   IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.
END.
ELSE kommando = SEARCH(fnamn).   
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.   
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
kommando3 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
kommando4 = kommando.
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN DO:
    kommando2 = webclienttempdir.
    kommando3 = webclienttempdir.
END.    

OS-CREATE-DIR VALUE(kommando2) NO-ERROR.

IF spmall = TRUE AND fildir NE "" THEN DO:
   kommando2 = fildir  + "\".
   kommando3 = fildir  + "\".  
END.

fabet = "".
sidvar = 1.
sidvarB = 1.
sidvarC = 1.
RUN kskapnatbelopp_UI IN skprotapph (OUTPUT kskapkr, OUTPUT nstnakerkr  , OUTPUT nstnovrigkr).
IF Guru.Konstanter:varforetypval[40] = 0 THEN expfakt = 1.                         
ELSE expfakt = 1.25.                  
IF NOT VALID-HANDLE(edataapph) THEN DO:
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph.                           
END.

Guru.Konstanter:AmericanSet().
      
EMPTY TEMP-TABLE emarkval NO-ERROR.
IF allamark = "alla" THEN DO: 
   FOR EACH markval BY markval.BETECKNING:
      IF fabet NE markval.BETECKNING THEN DO:         
         CREATE emarkval.
         BUFFER-COPY markval TO emarkval.  
              
         IF sidvar = 1 THEN DO:            
            IF AVAILABLE emarkval THEN DO:
               hjfastnamn = emarkval.BETECKNING + " ".
               hjfastnamn = REPLACE(hjfastnamn,":"," ").
               hjfastnamn = REPLACE(hjfastnamn,"/"," "). 
               hjfastnamn = REPLACE(hjfastnamn,">"," ").
               hjfastnamn = REPLACE(hjfastnamn,"<"," ").   
               /*kompletterat med tecken som ej får finnas i filnamn lena 20221124*/
               hjfastnamn = REPLACE(hjfastnamn,"\"," ").
               hjfastnamn = REPLACE(hjfastnamn,"*"," ").
               hjfastnamn = REPLACE(hjfastnamn,"|"," ").
               hjfastnamn = REPLACE(hjfastnamn,'"'," ").
               hjfastnamn = REPLACE(hjfastnamn,";"," ").      
               hjfastnamn = REPLACE(hjfastnamn,","," ").
               hjfastnamn = REPLACE(hjfastnamn,"'"," ").
               hjfastnamn = REPLACE(hjfastnamn,"+"," ").
               hjfastnamn = REPLACE(hjfastnamn,"."," ").            
               IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
                  kommando2 = kommando3 + fnamn1 + " " + hjfastnamn + fnamn2.
               END.
               ELSE DO:
                  kommando2 = kommando3 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn1 + " " + hjfastnamn +  fnamn2.
               END.
            END.
            ELSE DO:
               IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
                  kommando2 = kommando2 + fnamn.
               END.
               ELSE DO:
                  kommando2 = kommando2 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn.
               END.
            END.
            OS-COPY VALUE(kommando) VALUE(kommando2).
            kommando = kommando2.
         END.    
         IF  sidvar > 1 THEN DO:      
                              
            IF AVAILABLE emarkval THEN DO:
               hjfastnamn = emarkval.BETECKNING + " ".
               hjfastnamn = REPLACE(hjfastnamn,":"," "). 
               hjfastnamn = REPLACE(hjfastnamn,"/"," ").
               hjfastnamn = REPLACE(hjfastnamn,">"," ").
               hjfastnamn = REPLACE(hjfastnamn,"<"," ").
               /*kompletterat med tecken som ej får finnas i filnamn lena 20221124*/
               hjfastnamn = REPLACE(hjfastnamn,"\"," ").
               hjfastnamn = REPLACE(hjfastnamn,"*"," ").
               hjfastnamn = REPLACE(hjfastnamn,"|"," ").
               hjfastnamn = REPLACE(hjfastnamn,'"'," ").
               hjfastnamn = REPLACE(hjfastnamn,";"," ").      
               hjfastnamn = REPLACE(hjfastnamn,","," ").
               hjfastnamn = REPLACE(hjfastnamn,"'"," ").
               hjfastnamn = REPLACE(hjfastnamn,"+"," ").
               hjfastnamn = REPLACE(hjfastnamn,"."," ").
               
               IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
                  kommando2 = kommando3 + fnamn1 + " " + hjfastnamn + fnamn2.
               END.
               ELSE DO:
                  kommando2 = kommando3 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn1 + " " + hjfastnamn +  fnamn2.
               END.
            END.
            ELSE DO:                              
               IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
                  kommando2 = kommando3 + fnamn1 + string(sidvar) + fnamn2.
               END.
               ELSE DO:
                  kommando2 = kommando3 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn1 + string(sidvar) + fnamn2.
               END.
            END.
            OS-COPY VALUE(kommando4) VALUE(kommando2).   
            kommando = kommando2.    

            IF mall = 97 THEN DO:
               VisaExcelem:InteropInitialize(kommando).
               VisaExcelem:UseMsInterop = TRUE.
            END.
            ELSE DO:    
               VisaExcel:InteropInitialize(kommando).
               IF spmall = TRUE THEN VisaExcel:SetVisible(TRUE).
               ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
               ELSE VisaExcel:SetVisible(TRUE).
            END.   
         END.
         RUN skapavp_UI.
         
         IF akersum > 0 THEN   RUN bilagaaker_UI.   
         EMPTY TEMP-TABLE emarkval NO-ERROR.
         fabet = markval.BETECKNING.
      END.    
   END.
END.
ELSE IF allamark = "vald" THEN DO: 
   FOR EACH markval BY markval.BETECKNING BY markval.MARKNR:               
      CREATE emarkval.
      BUFFER-COPY markval TO emarkval.  
                
        
      IF  sidvar > 1 THEN DO:  
         IF AVAILABLE emarkval THEN DO:
            hjfastnamn = emarkval.BETECKNING + " ".
            hjfastnamn = REPLACE(hjfastnamn,":"," "). 
            hjfastnamn = REPLACE(hjfastnamn,"/"," ").
            hjfastnamn = REPLACE(hjfastnamn,">"," ").
            hjfastnamn = REPLACE(hjfastnamn,"<"," ").
            /*kompletterat med tecken som ej får finnas i filnamn lena 20221124*/
            hjfastnamn = REPLACE(hjfastnamn,"\"," ").
            hjfastnamn = REPLACE(hjfastnamn,"*"," ").
            hjfastnamn = REPLACE(hjfastnamn,"|"," ").
            hjfastnamn = REPLACE(hjfastnamn,'"'," ").
            hjfastnamn = REPLACE(hjfastnamn,";"," ").      
            hjfastnamn = REPLACE(hjfastnamn,","," ").
            hjfastnamn = REPLACE(hjfastnamn,"'"," ").
            hjfastnamn = REPLACE(hjfastnamn,"+"," ").
            hjfastnamn = REPLACE(hjfastnamn,"."," ").
            IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
               kommando2 = kommando3 + fnamn1 + " " + hjfastnamn + fnamn2.
            END.
            ELSE DO:
               kommando2 = kommando3 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn1 + " " + hjfastnamn +  fnamn2.
            END.
         END.
         ELSE DO:          
            IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
               kommando2 = kommando3 + fnamn1 + string(sidvar) + fnamn2.
            END.
            ELSE DO:
               kommando2 = kommando3 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn1 + string(sidvar) + fnamn2.
            END.
         END.
         OS-COPY VALUE(kommando4) VALUE(kommando2).   
         kommando = kommando2.   
      
         VisaExcel:InteropInitialize(kommando).
         IF spmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE VisaExcel:SetVisible(TRUE).
           
      END.
      RUN skapavp_UI.
      
      IF akersum > 0 THEN   RUN bilagaaker_UI.   
      EMPTY TEMP-TABLE emarkval NO-ERROR.       
   END.
END.  

Guru.Konstanter:EuropeanAmericanReset().     
IF VALID-HANDLE(skprotapph) THEN DELETE PROCEDURE skprotapph.      
skprotapph = ?.
IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.      
edataapph = ?.

PROCEDURE skapavp_UI :   
   
   FIND FIRST emarkval NO-LOCK NO-ERROR.  
   IF Guru.Konstanter:appcon THEN DO:                           
      RUN EXVPFAKT.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT emarkval.VARDNR,INPUT emarkval.BETECKNING,INPUT TABLE emarkval,OUTPUT omravd,OUTPUT omromr,OUTPUT aovar,OUTPUT delnrvar,OUTPUT ortvar,OUTPUT fkommun,OUTPUT fvaker
      ,OUTPUT vman,OUTPUT vadress,OUTPUT vpadress, OUTPUT vtelef , OUTPUT projl, OUTPUT arrendator,
       OUTPUT ipfakt,OUTPUT ivfaktaker,OUTPUT pomr,OUTPUT bbelopp,OUTPUT pfakt,OUTPUT vskog,OUTPUT oktforekpi,OUTPUT kpi1995, OUTPUT kabersatt,OUTPUT TABLE marag ).
   END.
   ELSE DO:
      RUN EXVPFAKT.P 
      (INPUT emarkval.VARDNR,INPUT emarkval.BETECKNING,INPUT TABLE emarkval,OUTPUT omravd,OUTPUT omromr,OUTPUT aovar,OUTPUT delnrvar,OUTPUT ortvar,OUTPUT fkommun,OUTPUT fvaker
      ,OUTPUT vman,OUTPUT vadress,OUTPUT vpadress, OUTPUT vtelef , OUTPUT projl , OUTPUT arrendator,
       OUTPUT ipfakt,OUTPUT ivfaktaker,OUTPUT pomr,OUTPUT bbelopp,OUTPUT pfakt,OUTPUT vskog,OUTPUT oktforekpi,OUTPUT kpi1995, OUTPUT kabersatt,OUTPUT TABLE marag ).
   END.   
   ASSIGN       
   lelitt = ""
   pnamn = ""
   pled = ""
   konc = ""
   /*domsaga = ""*/
   nstn = "".
   
   IF ponr NE ? AND ponr NE ""  THEN DO:
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "NATPROJ"                   
      inextradatatemp.HUVUDCH = ponr.                    
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
      FIND FIRST extradatatemp NO-LOCK NO-ERROR.
      IF AVAILABLE extradatatemp THEN DO:      
         ASSIGN       
         lelitt = extradatatemp.SOKCHAR[1] 
         pnamn = extradatatemp.SOKCHAR[2] 
         pled = extradatatemp.SOKCHAR[3] 
         konc = extradatatemp.SOKCHAR[4] 
         /*domsaga = extradatatemp.SOKCHAR[5]*/ 
         nstn = extradatatemp.SOKCHAR[9].       
      END.   
   END.
   
   
   CREATE uppfoltemp.
   ASSIGN
   uppfoltemp.FORETAG = Guru.Konstanter:globforetag   
   uppfoltemp.ALLAMA = FALSE
   uppfoltemp.VALVARD = ""
   uppfoltemp.FORSTA = TRUE
   uppfoltemp.STAMP = TRUE.   
   FIND FIRST emarkval NO-LOCK NO-ERROR.  
   RUN vpVSAB_UI IN skprotapph
      (INPUT "" ,INPUT emarkval.BETECKNING,INPUT emarkval.MARKREC,INPUT TABLE uppfoltemp,INPUT TABLE emarkval,INPUT TABLE maga,OUTPUT TABLE akevard,
      OUTPUT TABLE svard ,OUTPUT TABLE akekab,OUTPUT TABLE sumtemp,OUTPUT allnamn, OUTPUT allpersnr,OUTPUT TABLE fastaga).
       
   FIND FIRST emarkval NO-LOCK NO-ERROR.  
   RUN fordyrad_UI IN skprotapph
      (INPUT emarkval.VARDNR ,INPUT emarkval.BETECKNING,OUTPUT fdyr).
   
   
   FIND FIRST emarkval NO-LOCK NO-ERROR.  
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "MARKFASTANDEL"                   
   inextradatatemp.HUVUDINT = emarkval.MARKNR.                    
   inextradatatemp.HUVUDCH = emarkval.BETECKNING.                    
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO:      
      ASSIGN
      adel = extradatatemp.SOKCHAR[1].
   END.
   ELSE adel = "1/1".
  
      
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   EMPTY TEMP-TABLE extradatatemp NO-ERROR.    
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "FASTLOPNR"                   
   inextradatatemp.HUVUDCH = emarkval.BETECKNING.                    
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO:      
      IF extradatatemp.SOKINT[1] NE 0 THEN DO:      
         /*markägarnummer sparat på fastigheten*/
         FIND FIRST marbuff WHERE marbuff.BETECKNING = emarkval.BETECKNING AND marbuff.MARKNR = extradatatemp.SOKINT[1] NO-LOCK NO-ERROR.
         IF AVAILABLE marbuff THEN DO:
            kontpers = marbuff.MARKAGARE.
         END.
         ELSE RUN ktakt_UI IN skprotapph (INPUT emarkval.BETECKNING,INPUT extradatatemp.SOKINT[1],OUTPUT kontpers).
         
      END.
   END.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   EMPTY TEMP-TABLE extradatatemp NO-ERROR.
   
   
   
   
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   
   IF sidvar = 1 THEN DO:
      IF mall = 97  THEN DO:
         VisaExcelem = NEW Controls.GuruExcelEmbed().
   
         VisaExcelem:direkticell = TRUE.
         VisaExcelem:InteropInitialize(kommando).
         VisaExcelem:UseMsInterop = TRUE.
         
/*         IF spmall = TRUE THEN VisaExcelem:SetVisible(FALSE).
         ELSE IF skrivutmall = TRUE THEN VisaExcelem:SetVisible(FALSE).
         ELSE VisaExcelem:SetVisible(TRUE).*/
      END.
      ELSE DO:    
         VisaExcel = NEW Controls.GuruExcelInterop().
   
         VisaExcel:direkticell = TRUE.
         VisaExcel:InteropInitialize(kommando).
         
         IF spmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE VisaExcel:SetVisible(TRUE).
      END.      
 
   END.   
   DEBUGGER:SET-BREAK().
   sidvar = sidvar + 1.
   IF mall = 97  THEN DO:  
          
      /*test Ellevio*/      
      FIND FIRST emarkval WHERE emarkval.MARKERAD = TRUE NO-LOCK NO-ERROR.  
      FIND FIRST marag WHERE marag.MARKERAD = TRUE NO-LOCK NO-ERROR.
      FIND FIRST emarkval NO-LOCK NO-ERROR.  
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "MARKFASTANDEL"                   
      inextradatatemp.HUVUDINT = emarkval.MARKNR.                    
      inextradatatemp.HUVUDCH = emarkval.BETECKNING.                    
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
      FIND FIRST extradatatemp NO-LOCK NO-ERROR.
      IF AVAILABLE extradatatemp THEN DO:      
         ASSIGN emarkval.PRODEL = extradatatemp.SOKDEC[1].         
      END.          
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      EMPTY TEMP-TABLE extradatatemp NO-ERROR.    
        
      VisaExcelem:DataOut("E3", fkommun + " " + emarkval.BETECKNING).
      VisaExcelem:DataOut("E4",emarkval.MARKAGARE).
      VisaExcelem:DataOut("E5",marag.GATUADRESS).
      VisaExcelem:DataOut("E7",marag.POSTNUMMER + " " + marag.POSTADRESS).
     
     IF emarkval.PRODEL > 0 THEN VisaExcelem:DataOut("E9",STRING(emarkval.PRODEL / 100)).

      VisaExcelem:DataOut("E10",vman).
      VisaExcelem:DataOut("E11",lelitt).     
      VisaExcelem:DataOut("E12",ponr).
      RUN vardman4_UI IN skprotapph (INPUT emarkval.VARDNR , OUTPUT vman, OUTPUT vardtel,output vepost, OUTPUT vort ).
      
      
      IF vardtel NE "" THEN VisaExcelem:DataOut("V47",vardtel).                  
      IF vepost NE "" THEN  VisaExcelem:DataOut("V48",vepost).
      
      metkab = 0.
      FOR EACH akekab WHERE akekab.MARKNR = emarkval.MARKNR AND akekab.BETECKNING = emarkval.BETECKNING AND akekab.FASTPRIS = FALSE :
         metkab = metkab + akekab.L1.   
      END. 
      IF metkab > 0 THEN VisaExcelem:DataOut("V19", STRING(metkab)).        
      
      VisaExcelem:ValjBlad(1).
      
      FOR EACH akevard WHERE akevard.MARKNR = marag.MARKNR AND akevard.BETECKNING = marag.BETECKNING   AND akevard.L5 = 1 AND akevard.STOLPNR NE 0  NO-LOCK BY  akevard.L3:                   
         IF akevard.KRONOR > 0 THEN DO:                                    
             IF akevard.L3 = 50 THEN DO:
                 iColumn = 10.
                 cColumn = STRING(iColumn).
                 cRange = "D" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 51 THEN DO:
                 iColumn = 11.
                 cColumn = STRING(iColumn).
                 cRange = "D" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 52 THEN DO:
                 iColumn = 12.
                 cColumn = STRING(iColumn).
                 cRange = "D" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 53 THEN DO:
                 iColumn = 10.
                 cColumn = STRING(iColumn).
                 cRange = "F" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 54 THEN DO:
                 iColumn = 10.
                 cColumn = STRING(iColumn).
                 cRange = "H" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 55 THEN DO:
                 iColumn = 10.
                 cColumn = STRING(iColumn).
                 cRange = "J" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 56 THEN DO:
                 iColumn = 11.
                 cColumn = STRING(iColumn).
                 cRange = "F" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 57 THEN DO:
                 iColumn = 11.
                 cColumn = STRING(iColumn).
                 cRange = "H" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 58 THEN DO:
                 iColumn = 11.
                 cColumn = STRING(iColumn).
                 cRange = "J" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 59 THEN DO:
                 iColumn = 12.
                 cColumn = STRING(iColumn).
                 cRange = "F" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 60 THEN DO:
                 iColumn = 12.
                 cColumn = STRING(iColumn).
                 cRange = "H" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.
             ELSE IF akevard.L3 = 61 THEN DO:
                 iColumn = 12.
                 cColumn = STRING(iColumn).
                 cRange = "J" + cColumn.
                 VisaExcelem:DataOut(cRange,STRING(akevard.L1)).
             END.    
         END. 
      END.  
      
              
   END.
   IF   mall = 85  THEN DO:           
      /*VPKomavt*/      
      FIND FIRST emarkval NO-LOCK NO-ERROR.  
      FIND FIRST marag NO-LOCK NO-ERROR.      
      VisaExcel:DataOut("C4",emarkval.BETECKNING).
      VisaExcel:DataOut("C5",fkommun).
      VisaExcel:DataOut("C7",marag.GATUADRESS).
      VisaExcel:DataOut("C8",marag.POSTNUMMER + " " + marag.POSTADRESS).
      
      IF mall = 85 THEN DO:
         VisaExcel:DataOut("H8",vman).
         VisaExcel:DataOut("H5",lelitt).
         VisaExcel:DataOut("H7",STRING(TODAY)).
         VisaExcel:DataOut("H6",ponr).
      END.      
      IF allamark = "alla" THEN DO:
         IF kontpers NE "" THEN VisaExcel:DataOut("C6",kontpers).
         ELSE VisaExcel:DataOut("C6",marag.MARKAGARE).                     
      END.
      ELSE DO:              
         /*Bara en markägare till VP*/
         VisaExcel:DataOut("C6",emarkval.MARKAGARE).                        
      END.
         
      
      IF mall = 85  THEN  DO:
         iColumn = 12.
         cColumn = STRING(iColumn).
         FOR EACH akekab WHERE akekab.MARKNR = emarkval.MARKNR AND akekab.BETECKNING = emarkval.BETECKNING AND akekab.FASTPRIS = FALSE :         
            {EXCELFEL.I}         
            cColumn = STRING(iColumn).            
            cRange = "B" + cColumn.
            IF akekab.BENAMNING NE "" THEN VisaExcel:DataOut(cRange,akekab.BENAMNING).             
            cRange = "G" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akekab.L1)).                
            cRange = "H" + cColumn.
            IF akekab.L2 = 0 THEN VisaExcel:DataOut(cRange,STRING(1)).
            ELSE VisaExcel:DataOut(cRange,STRING(akekab.L2 + 1 )).            
            iColumn = iColumn + 1.
            cColumn = STRING(iColumn).      
         END.
      END.            
                 
      IF mall = 85 THEN DO:         
         iColumn = 32.
         cColumn = STRING(iColumn).
         /*akevard.L4 = 1 kabelskåp       akevard.L4 = 0 station*/         
         FIND FIRST akevard WHERE akevard.MARKNR = marag.MARKNR AND akevard.BETECKNING = marag.BETECKNING   AND akevard.L5 = 1 AND akevard.STOLPNR NE 0 AND akevard.L4 = 1  NO-LOCK NO-ERROR.
         IF AVAILABLE akevard THEN DO:            
            IF akevard.L1 > 0  THEN DO:
            /*akevard.L1 = antal akevard.L2  = pris/st   om gjord efter omläggning*/   
               cRange = "H" + cColumn.
               VisaExcel:DataOut(cRange,STRING(akevard.L1)).                                                                                   
            END.
         END.
         iColumn = 33.
         cColumn = STRING(iColumn).
         /*akevard.L4 = 1 kabelskåp       akevard.L4 = 0 station*/
         FIND FIRST akevard WHERE akevard.MARKNR = marag.MARKNR AND akevard.BETECKNING = marag.BETECKNING   AND akevard.L5 = 1 AND akevard.STOLPNR NE 0 AND akevard.L4 = 0  NO-LOCK NO-ERROR.
         IF AVAILABLE akevard THEN DO:            
            IF akevard.L1 > 0  THEN DO:
            /*akevard.L1 = antal akevard.L2  = pris/st   om gjord efter omläggning*/   
               cRange = "H" + cColumn.
               VisaExcel:DataOut(cRange,STRING(akevard.L1)).                                                                                   
            END.
         END.   
      END.   
      
      IF mall = 85 THEN DO:
         iColumn = 22.
         cColumn = STRING(iColumn).
         FOR EACH svard WHERE svard.MARKNR = emarkval.MARKNR AND svard.BETECKNING = emarkval.BETECKNING AND svard.FASTPRIS = TRUE:
            cColumn = STRING(iColumn).
            cRange = "B" + cColumn.
            VisaExcel:DataOut(cRange,svard.BENAMNING).         
            cRange = "I" + cColumn.
            VisaExcel:DataOut(cRange,STRING(INTEGER(svard.KRONOR ))).                                                                   
            iColumn = iColumn + 1.
            cColumn = STRING(iColumn).            
         END.
      END.   
      
   END.   
   
   IF mall = 70  OR mall = 71 OR mall = 72 OR mall = 74 THEN DO:           
      /*ny mall vp 201610*/
        
      FIND FIRST emarkval NO-LOCK NO-ERROR.
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      EMPTY TEMP-TABLE extradatatemp NO-ERROR.
      IF Guru.Konstanter:varforetypval[48] = 1 THEN DO:
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "VARDFAST2"     
         inextradatatemp.HUVUDINT = emarkval.VARDNR
         inextradatatemp.HUVUDCH = emarkval.BETECKNING.
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         FIND FIRST extradatatemp NO-LOCK NO-ERROR.
         IF AVAILABLE extradatatemp THEN DO:                     
            IF extradatatemp.SOKLOG[1] = TRUE AND extradatatemp.SOKINT[1] > 0 THEN DO:               
               IF mall = 70 OR mall = 71 OR mall = 72 OR mall = 74   THEN  VisaExcel:DataOut("F35", STRING(extradatatemp.SOKINT[1])).
               ELSE  VisaExcel:DataOut("F35", STRING(extradatatemp.SOKINT[1])).                
            END.                                 
         END.       
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
         EMPTY TEMP-TABLE extradatatemp NO-ERROR.
      END.  
      
      FIND FIRST emarkval NO-LOCK NO-ERROR.
      FIND FIRST marag NO-LOCK NO-ERROR.
      
      IF mall = 70 OR mall = 71 OR mall = 72 OR mall = 74 THEN DO:      
         VisaExcel:DataOut("D4",emarkval.BETECKNING).
         VisaExcel:DataOut("D5",fkommun).
         /*VP FRÅN 201709 har samansatt cell c7-c8*/
         IF allamark = "alla" THEN DO:
            IF kontpers NE "" THEN VisaExcel:DataOut("D7",kontpers + "  " + marag.GATUADRESS + " " + marag.POSTNUMMER + " " + marag.POSTADRESS ).
            ELSE VisaExcel:DataOut("D7",marag.MARKAGARE + " " + marag.GATUADRESS + " " + marag.POSTNUMMER + " " + marag.POSTADRESS ).                     
         END.
         ELSE DO:              
            /*Bara en markägare till VP*/
            VisaExcel:DataOut("D7",emarkval.MARKAGARE + " " + marag.GATUADRESS + " " + marag.POSTNUMMER + " " + marag.POSTADRESS ).                        
         END.
         
      END.
      
      VisaExcel:DataOut("I8",vman).
      VisaExcel:DataOut("I5",lelitt).
      VisaExcel:DataOut("I7",STRING(TODAY)).
      VisaExcel:DataOut("I4",ponr).
            
      
         
      iColumn = 11.
      cColumn = STRING(iColumn).
      FOR EACH akekab WHERE akekab.MARKNR = emarkval.MARKNR AND akekab.BETECKNING = emarkval.BETECKNING AND akekab.FASTPRIS = FALSE :         
         {EXCELFEL.I}         
         cColumn = STRING(iColumn).            
         cRange = "B" + cColumn.
         IF akekab.BENAMNING NE "" THEN VisaExcel:DataOut(cRange,akekab.BENAMNING).             
         cRange = "H" + cColumn.
         VisaExcel:DataOut(cRange,STRING(akekab.L1)).                
         cRange = "I" + cColumn.
         IF akekab.L2 = 0 THEN VisaExcel:DataOut(cRange,STRING(1)).
         ELSE VisaExcel:DataOut(cRange,STRING(akekab.L2 + 1 )).            
         iColumn = iColumn + 1.
         cColumn = STRING(iColumn).      
      END.         
      iColumn = 18.
      cColumn = STRING(iColumn).      
      IF mall = 70 OR mall = 71 OR mall = 72 OR mall = 74 THEN DO:
         FOR EACH akevard WHERE akevard.MARKNR = marag.MARKNR AND akevard.BETECKNING = marag.BETECKNING   AND akevard.L5 = 1 AND akevard.STOLPNR NE 0  NO-LOCK:
            /*Mxx 1 = Kabelskåp  Mxx 2 = NS Åker Mxx 3 = NS Övrig*/
            IF iColumn LE 21 THEN DO:             
               IF akevard.KRONOR > 0 THEN DO:                                    
                  cRange = "B" + cColumn.
                  IF akevard.BENAMNING NE " "  THEN VisaExcel:DataOut(cRange,akevard.BENAMNING).             
                  IF akevard.KRONOR > 0 THEN DO:
                     IF akevard.L1 > 0 AND akevard.L2 > 0 THEN DO:
                     /*akevard.L1 = antal akevard.L2  = pris/st   om gjord efter omläggning*/
                        cRange = "I" + cColumn.
                        VisaExcel:DataOut(cRange,STRING(akevard.L1)).
                        IF akevard.L4 = 1 THEN DO:
                           /*TYP = 1 ID = 1 ksk SKOG
                           TYP = 1   ID = 10 ksk IMP
                           TYP = 1   ID = 11 ksk BETE
                           TYP = 1   ID = 12 ksk ÅKER
                           TYP = 2   ID  = 2 stn ÅKER
                           TYP = 3   ID  = 3 stn SKOG
                           TYP = 3   ID = 13 stn IMP
                           TYP = 3   ID = 14 stn BETE*/
                           /*Kabelskåp*/
                           IF akevard.L3 = 1 THEN ksttyp = "Kabelskåp - Skog".
                           IF akevard.L3 = 30 THEN ksttyp = "Kabelskåp - Jordbruksimp.".
                           IF akevard.L3 = 31 THEN ksttyp = "Kabelskåp - Övrig mark".
                           
                                                         
                        END.   
                        ELSE DO:
                           /*stn*/                           
                           IF akevard.L3 = 32 THEN ksttyp = "Nätstation - Skog (yta 6 x 6 meter)".
                           IF akevard.L3 = 33 THEN ksttyp = "Nätstation - Skog (yta 8 x 8 meter)".
                           IF akevard.L3 = 34 THEN ksttyp = "Nätstation - Skog (yta 10 x 10 meter)".
                           IF akevard.L3 = 35 THEN ksttyp = "Nätstation - Jordbruksimp. (yta 6 x6 meter)".
                           IF akevard.L3 = 36 THEN ksttyp = "Nätstation - Jordbruksimp. (yta 8 x 8 meter)".
                           IF akevard.L3 = 37 THEN ksttyp = "Nätstation - Jordbruksimp. (yta 10 x 10 meter)".
                           IF akevard.L3 = 38 THEN ksttyp = "Nätstation - Övrig mark (yta 6 x 6 meter)".
                           IF akevard.L3 = 39 THEN ksttyp = "Nätstation - Övrig mark (yta 8 x 8 meter)".
                           IF akevard.L3 = 40 THEN ksttyp = "Nätstation - Övrig mark (yta 10 x 10 meter)".
                                                   
                           IF akevard.L3 = 41 THEN ksttyp = "Sjökabelskylt - Skog (yta 6 x 6 meter)".
                           IF akevard.L3 = 42 THEN ksttyp = "Sjökabelskylt - Skog (yta 8 x 8 meter)".
                           IF akevard.L3 = 43 THEN ksttyp = "Sjökabelskylt - Skog (yta 10 x 10 meter)".
                           IF akevard.L3 = 44 THEN ksttyp = "Sjökabelskylt - Jordbruksimp. (yta 6 x 6 meter)".
                           IF akevard.L3 = 45 THEN ksttyp = "Sjökabelskylt - Jordbruksimp. (yta 8 x 8 meter)".
                           IF akevard.L3 = 46 THEN ksttyp = "Sjökabelskylt - Jordbruksimp. (yta 10 x 10 meter)".
                           IF akevard.L3 = 47 THEN ksttyp = "Sjökabelskylt - Övrig mark (yta 6 x 6 meter)".
                           IF akevard.L3 = 48 THEN ksttyp = "Sjökabelskylt - Övrig mark (yta 8 x 8 meter)".
                           IF akevard.L3 = 49 THEN ksttyp = "Sjökabelskylt - Övrig mark (yta 10 x 10 meter)".                        
                                                   
                        END.                                                                 
                        cRange = "F" + cColumn.
                        VisaExcel:DataOut(cRange,ksttyp).                                        
                     END.                       
                  END.
               END.
                                                                                                                                         
            END.
            ELSE DO:
               ratt = "Alla kabelskåp /stationer rymms inte i mallen. Var god kontrollera".
            END.   
            iColumn = iColumn + 1.
            cColumn = STRING(iColumn).
         END. 
      END.   
      allaakekom = "".
      akersum = 0.
      iColumn = 25.      
      cColumn = STRING(iColumn).
      FOR EACH akevard WHERE akevard.MARKNR = emarkval.MARKNR AND akevard.BETECKNING = emarkval.BETECKNING
      AND akevard.L5 = 0 AND akevard.STOLPNR NE 0 :            
         {EXCELFEL.I}
         /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris*/
         IF akevard.FASTPRIS = TRUE AND akevard.KRONOR > 0 THEN iColumn = iColumn.
         ELSE DO:   
            IF Guru.Konstanter:varforetypval[40] = 0 THEN DO:
               akersum = akersum + akevard.KRONOR.
            END.   
            ELSE DO:
               akersum = akersum + ( akevard.KRONOR / ( 1 + ( 0.25 * 0.66))).                  
            END.
            allaakekom = allaakekom + " " +  akevard.BENAMNING.
            
         END.
      END.       
      IF allaakekom NE "" THEN DO:  
         cRange = "B" + cColumn.
         VisaExcel:DataOut(cRange,allaakekom).      
      END.
      IF  akersum > 0 THEN DO:               
         cRange = "J" + cColumn.
         VisaExcel:DataOut(cRange,STRING(akersum)).
      END.   
      
      iColumn = 30.
      cColumn = STRING(iColumn).
      FOR EACH svard WHERE svard.MARKNR = emarkval.MARKNR AND svard.BETECKNING = emarkval.BETECKNING AND svard.FASTPRIS = TRUE:
         cColumn = STRING(iColumn).
         cRange = "B" + cColumn.
         VisaExcel:DataOut(cRange,svard.BENAMNING).         
         cRange = "J" + cColumn.
         VisaExcel:DataOut(cRange,STRING(INTEGER(svard.KRONOR / expfakt))).
         /*IF Guru.Konstanter:varforetypval[40] = 0 THEN VisaExcel:DataOut(cRange,STRING(svard.KRONOR)).         
         ELSE VisaExcel:DataOut(cRange,STRING(INTEGER(svard.KRONOR / 1.25))).*/                                                       
         iColumn = iColumn + 1.
         cColumn = STRING(iColumn).            
      END.                  
      IF  Guru.Konstanter:varforetypval[42] = 1 THEN DO:
         EMPTY TEMP-TABLE storskogadmtemp NO-ERROR.
         FIND FIRST emarkval NO-LOCK NO-ERROR.  
         FIND FIRST marag NO-LOCK NO-ERROR.
         FIND FIRST svard WHERE svard.BETECKNING = emarkval.BETECKNING AND svard.FASTPRIS = FALSE NO-LOCK NO-ERROR.
         IF NOT AVAILABLE svard THEN DO:
            /*dummy*/
            FIND FIRST emarkval NO-LOCK NO-ERROR.
         END.
         IF AVAILABLE svard THEN DO:
            /*bocka i Storskogsbruk checkbox
             Lågspänning = L11
             Storskogsbruk  = L13
             Ingen grundersättning = L15
                            
            */
            
            iColumn = 13.
            cColumn = STRING(iColumn).   
            cRange = "L" + cColumn.
            VisaExcel:DataOut(cRange, TRUE).
         
            iColumn = 42.
            cColumn = STRING(iColumn).
            cRange = "F" + cColumn.
            IF svard.MARKTYP = "Norrlands inland" THEN  VisaExcel:DataOut(cRange,"Norrlands inland").                                                                                         
            ELSE IF svard.MARKTYP = "Norrlands kustland ej Gävleborgs län" THEN  VisaExcel:DataOut(cRange,"Norrlands kustland").                                           
            ELSE IF svard.MARKTYP = "Tillväxtområde 3 (2009 års skognorm)" THEN  VisaExcel:DataOut(cRange,"Tillväxtområde 3").                                           
            ELSE IF svard.MARKTYP = "Tillväxtområde 4A (2009 års skognorm)" THEN  VisaExcel:DataOut(cRange,"Tillväxtområde 4A").                                            
            ELSE IF svard.MARKTYP = "Tillväxtområde 4B (2009 års skognorm)" THEN  VisaExcel:DataOut(cRange,"Tillväxtområde 4B").
             
            iColumn = 43.
            cColumn = STRING(iColumn).       
            FOR EACH svard WHERE svard.BETECKNING = emarkval.BETECKNING AND svard.MARKNR = emarkval.MARKNR AND svard.FASTPRIS = FALSE:
               IF mall = 74 AND iColumn > 45 THEN.
               ELSE IF iColumn > 46 THEN.
               /*finns bara 4 rader att skriva på  Eons mall bara 3 rader*/               
               ELSE DO:
                  IF svard.MARKTYP = "Norrlands inland" OR svard.MARKTYP = "Norrlands kustland ej Gävleborgs län" OR svard.MARKTYP = "Tillväxtområde 3 (2009 års skognorm)" 
                  OR svard.MARKTYP = "Tillväxtområde 4A (2009 års skognorm)" OR svard.MARKTYP = "Tillväxtområde 4B (2009 års skognorm)"
                  OR svard.MARKTYP = "Norrlands kustland" OR svard.MARKTYP = "Svealand" OR svard.MARKTYP = "Götaland" THEN DO:                    
                     cRange = "B" + cColumn.
                     VisaExcel:DataOut(cRange,svard.BENAMNING).                                            
                     cRange = "H" + cColumn.
                     VisaExcel:DataOut(cRange,STRING(svard.LANGD)).                                         
                     cRange = "I" + cColumn.
                     VisaExcel:DataOut(cRange,STRING(svard.BREDD)).                     
                                          
                     iColumn = iColumn + 1.
                     cColumn = STRING(iColumn).                                             
                  END.      
               END.
            END.
         END.            
      END.
      FIND FIRST svard WHERE svard.BETECKNING = emarkval.BETECKNING AND svard.FASTPRIS = FALSE NO-LOCK NO-ERROR.
      IF NOT AVAILABLE svard THEN DO:
         /*dummy*/
         FIND FIRST emarkval NO-LOCK NO-ERROR.
      END.
      IF AVAILABLE svard THEN DO:
         /*fyll bara i rev om det finns storskogsbruk lena 20200821*/         
         EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
         FIND FIRST emarkval NO-LOCK NO-ERROR. 
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "REVAVTAL"                   
         inextradatatemp.HUVUDINT = emarkval.VARDNR
         inextradatatemp.HUVUDCH = emarkval.BETECKNING.                          
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         FOR EACH extradatatemp :         
            
            IF extradatatemp.SOKINT[1] = 1  THEN DO:
               IF mall = 74  THEN iColumn = 49.
               ELSE iColumn = 50.           
               cColumn = STRING(iColumn).                                
               cRange = "B" + cColumn.            
               VisaExcel:DataOut(cRange,STRING(extradatatemp.SOKCHAR[1])).            
               cRange = "H" + cColumn.            
               VisaExcel:DataOut(cRange,STRING(extradatatemp.SOKDEC[2])).                                
               cColumn = STRING(iColumn).                                
               cRange = "I" + cColumn.
               VisaExcel:DataOut(cRange,"Zon 1").            
                                   
            END.
            IF extradatatemp.SOKINT[1] = 2  THEN DO:
               IF mall = 74  THEN iColumn = 50.          
               ELSE iColumn = 51.           
               cColumn = STRING(iColumn).
               cRange = "B" + cColumn.            
               VisaExcel:DataOut(cRange,STRING(extradatatemp.SOKCHAR[1])).                                           
               cRange = "H" + cColumn.            
               VisaExcel:DataOut(cRange,STRING(extradatatemp.SOKDEC[2])).            
               cRange = "I" + cColumn.
               VisaExcel:DataOut(cRange,"Zon 2").                                    
               cColumn = STRING(iColumn).                                
                                       
            END.
         END.                     
      END.
      
      EMPTY TEMP-TABLE eemarkval NO-ERROR. 
      /*UNDERSKRIFTER OCH KONTON*/      
      FIND FIRST emarkval NO-LOCK NO-ERROR.
      FOR EACH maga WHERE maga.VARDNR = emarkval.VARDNR AND maga.BETECKNING =  emarkval.BETECKNING:  
         CREATE eemarkval.
         BUFFER-COPY maga TO eemarkval.
      END.
      EMPTY TEMP-TABLE fastfortemp  NO-ERROR.               
      IF Guru.Konstanter:appcon THEN DO:                           
         RUN EXFASTFORAPPN2.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
         (INPUT TABLE eemarkval,OUTPUT TABLE fastfortemp,OUTPUT ortvar, OUTPUT vman).
      END.
      ELSE DO:
         RUN EXFASTFORAPPN2.P 
         (INPUT TABLE eemarkval,OUTPUT TABLE fastfortemp,OUTPUT ortvar, OUTPUT vman).
      END.      
      IF mall = 70 OR mall = 71 OR mall = 72  THEN   iColumn = 63.
      ELSE IF mall = 74 THEN   iColumn = 62.
      ELSE  iColumn = 63.           
      cColumn = STRING(iColumn).
      
      antggr = 1.
      /*IF mall = 70 THEN unanrrad = 6. 
      ELSE  unanrrad = 7.*/
      
      unanrrad = 7.
      FOR EACH fastfortemp NO-LOCK:
         IF iColumn < 100 THEN DO:
            IF antggr > 1 THEN DO:
               IF mall = 74 THEN unanrrad = 6. 
               ELSE unanrrad = 5.
            END.   
            cRange = "B" + cColumn.            
            VisaExcel:DataOut(cRange,fastfortemp.MARKAGARE + " (" + SUBSTRING(fastfortemp.PERSONNUMMER,1,6) + ")").
            cRange = "E" + cColumn.            
            /*VisaExcel:KolumnFormat(cRange,"@").*/
            VisaExcel:DataOut(cRange,fastfortemp.CHE1).            
            iColumn = iColumn + unanrrad. 
             
            cColumn = STRING(iColumn).
            antggr = antggr + 1.                     
         END.   
      END.      
                           
                  
   END.
   
   IF mall = 83 THEN DO:           
      /*bilaga enstaka träd 201610*/      
      fvaker = REPLACE(fvaker,"s län","").  
      FIND FIRST emarkval NO-LOCK NO-ERROR.  
      FIND FIRST marag NO-LOCK NO-ERROR.      
      VisaExcel:DataOut("C4",emarkval.BETECKNING).
      VisaExcel:DataOut("C5",fkommun).
      VisaExcel:DataOut("C6",fvaker).
            
      VisaExcel:DataOut("H4",ponr).
      VisaExcel:DataOut("H5",STRING(TODAY)).
      
            
   END.
   IF mall = 95 THEN DO:           
      /*Utanordning Umeå*/
      
      FIND FIRST emarkval  NO-LOCK NO-ERROR.  
      FIND FIRST marag NO-LOCK NO-ERROR.        
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
      EMPTY TEMP-TABLE extradatatemp NO-ERROR.
      CREATE inextradatatemp.          
      ASSIGN      
      inextradatatemp.PROGRAM = "VARDFASTAG"     
      inextradatatemp.HUVUDINT = emarkval.VARDNR
      inextradatatemp.HUVUDCH = emarkval.BETECKNING.         
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp).
      FIND FIRST extradatatemp WHERE extradatatemp.SOKINT[1] = markval.MARKNR NO-LOCK NO-ERROR.       
      IF AVAILABLE extradatatemp THEN DO:               
         bankktoag = extradatatemp.SOKCH[7]. 
         banknamnag = extradatatemp.SOKCHAR[8].                    
      END.      
      if bankktoag NE "" THEN VisaExcel:DataOut("C39",bankktoag + " " + banknamnag ).
      /*EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
      EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "MARKAG"                   
      inextradatatemp.HUVUDINT = emarkval.MARKNR.                    
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
      FIND FIRST extradatatemp NO-LOCK NO-ERROR.
      IF AVAILABLE extradatatemp THEN DO: 
         ASSIGN        
         bankktoag = extradatatemp.SOKCHAR[4]
         banknamnag = extradatatemp.SOKCHAR[5].         
      END.*/
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
      EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "MARKFASTANDEL"                   
      inextradatatemp.HUVUDINT = emarkval.MARKNR.                    
      inextradatatemp.HUVUDCH = emarkval.BETECKNING.                    
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
      FIND FIRST extradatatemp NO-LOCK NO-ERROR.
      IF AVAILABLE extradatatemp THEN DO:      
         ASSIGN         
         adel1 = extradatatemp.SOKINT[1]
         adel2 = extradatatemp.SOKINT[2].         
      END.
                   
      FIND FIRST sumtemp WHERE sumtemp.BETECKNING = emarkval.BETECKNING AND sumtemp.MARKNR = emarkval.MARKNR NO-ERROR.
      IF AVAILABLE sumtemp THEN DO:         
         IF adel1 = 0 OR adel2 = 0 THEN VisaExcel:DataOut("C37",string(sumtemp.SUMMA)). 
         ELSE DO:
            VisaExcel:DataOut("C37",STRING(sumtemp.SUMMA * (adel1 / adel2))).
         END.           
      END.          
      VisaExcel:DataOut("C35",emarkval.BETECKNING).
      VisaExcel:DataOut("C9",marag.MARKAGARE).
      VisaExcel:DataOut("C10",marag.GATUADRESS + " " + marag.POSTNUMMER + " " + marag.POSTADRESS).            
      VisaExcel:DataOut("C8",ponr).
      VisaExcel:DataOut("G3",STRING(TODAY)).      
      
                               
            
   END.
   DEBUGGER:SET-BREAK().
   IF spmall = TRUE OR skrivutmall = TRUE  THEN DO:
      VisaExcel:SetDisplayAlerts(FALSE).
      /*VisaExcel:SetScreenUpdating(FALSE). /*ELLER?*/*/
      
      VisaExcel:SaveFileAs(kommando).
      
      IF skrivutmall = TRUE THEN DO:
         VisaExcel:ValjBlad(1).
         VisaExcel:SetScreenUpdating(TRUE).         
         VisaExcel:printmark().                     
      END.
      VisaExcel:ReleaseExcel(TRUE).   
   END.
   VisaExcel:ReleaseExcel(FALSE).          
   DEBUGGER:SET-BREAK().   
END PROCEDURE .

PROCEDURE bilagaaker_UI :
   IF sidvarB = 1 THEN DO:
      IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
      ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
      IF bloblog = TRUE THEN DO:
         {FINNSDYNBLOB.I}
         DEFINE VARIABLE resid AS INTEGER NO-UNDO.
         RUN blobfil_UI IN blobproch (INPUT fnamnB, OUTPUT resid).
         IF resid = ? THEN DO:
            kommando5 = SEARCH(fnamnB).      
         END.
         ELSE DO:
            FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.
            RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando5).      
         END.
         RUN deleteproc_UI IN blobproch.
         IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.
      END.
      ELSE kommando5 = SEARCH(fnamnB).   
      IF kommando5 = ? THEN DO:
         MESSAGE "Hittade inte " fnamnB VIEW-AS ALERT-BOX.
         RETURN.       
      END.   
      kommando6 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
      kommando7 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
      kommando8 = kommando5.
      {SESSIONTEMPDIR.I}
      IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN DO:
          kommando6 = webclienttempdir.
          kommando7 = webclienttempdir.
      END.    
      
      OS-CREATE-DIR VALUE(kommando6) NO-ERROR.
      
      IF spmall = TRUE AND fildir NE "" THEN DO:
         kommando6 = fildir  + "\".
         kommando7 = fildir  + "\".  
      END.
      
      FIND FIRST emarkval NO-LOCK NO-ERROR.
      IF AVAILABLE emarkval THEN DO:
         hjfastnamn = emarkval.BETECKNING + " ".
         hjfastnamn = REPLACE(hjfastnamn,":"," ").      
         hjfastnamn = REPLACE(hjfastnamn,"/"," ").  
         hjfastnamn = REPLACE(hjfastnamn,">"," ").
         hjfastnamn = REPLACE(hjfastnamn,"<"," ").  
         /*kompletterat med tecken som ej får finnas i filnamn lena 20221124*/
         hjfastnamn = REPLACE(hjfastnamn,"\"," ").
         hjfastnamn = REPLACE(hjfastnamn,"*"," ").
         hjfastnamn = REPLACE(hjfastnamn,"|"," ").
         hjfastnamn = REPLACE(hjfastnamn,'"'," ").
         hjfastnamn = REPLACE(hjfastnamn,";"," ").      
         hjfastnamn = REPLACE(hjfastnamn,","," ").
         hjfastnamn = REPLACE(hjfastnamn,"'"," ").
         hjfastnamn = REPLACE(hjfastnamn,"+"," ").
         hjfastnamn = REPLACE(hjfastnamn,"."," ").
         IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
            kommando6 = kommando7 + fnamn11 + " " + hjfastnamn + fnamn21.
         END.
         ELSE DO:
            kommando6 = kommando7 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn11 + " " + hjfastnamn +  fnamn21.
         END.
      END.
      ELSE DO:      
         IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
            kommando6 = kommando7 + fnamnB.
         END.
         ELSE DO:
            kommando6 = kommando7 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamnB.
         END.
      END.   
      OS-COPY VALUE(kommando5) VALUE(kommando6).
      kommando5 = kommando6.
      
      IF mall = 97  THEN DO:
         VisaExcelem:InteropInitialize(kommando5).
         VisaExcelem:UseMsInterop = TRUE.
         /*IF spmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE VisaExcel:SetVisible(TRUE).*/
      END.
      ELSE DO:         
         VisaExcel:InteropInitialize(kommando5).
         IF spmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
         ELSE VisaExcel:SetVisible(TRUE).
      END.   
      
   END.   
  
   IF  sidvarB > 1 THEN DO:            
      FIND FIRST emarkval NO-LOCK NO-ERROR.
      IF AVAILABLE emarkval THEN DO:
         
         hjfastnamn = emarkval.BETECKNING + " ".
         hjfastnamn = REPLACE(hjfastnamn,":"," ").    
         hjfastnamn = REPLACE(hjfastnamn,"/"," ").   
         hjfastnamn = REPLACE(hjfastnamn,">"," ").
         hjfastnamn = REPLACE(hjfastnamn,"<"," ").   
         /*kompletterat med tecken som ej får finnas i filnamn lena 20221124*/
         hjfastnamn = REPLACE(hjfastnamn,"\"," ").
         hjfastnamn = REPLACE(hjfastnamn,"*"," ").
         hjfastnamn = REPLACE(hjfastnamn,"|"," ").
         hjfastnamn = REPLACE(hjfastnamn,'"'," ").
         hjfastnamn = REPLACE(hjfastnamn,";"," ").      
         hjfastnamn = REPLACE(hjfastnamn,","," ").
         hjfastnamn = REPLACE(hjfastnamn,"'"," ").
         hjfastnamn = REPLACE(hjfastnamn,"+"," ").
         hjfastnamn = REPLACE(hjfastnamn,"."," ").
         IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
            kommando6 = kommando7 + fnamn11 + " " + hjfastnamn + fnamn21.
         END.
         ELSE DO:
            kommando6 = kommando7 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn11 + " " + hjfastnamn +  fnamn21.
         END.
      END.
      ELSE DO:
         IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
            kommando6 = kommando7 + fnamn11 + string(sidvarB) + fnamn21.
         END.
         ELSE DO:
            kommando6 = kommando7 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn11 + string(sidvarB) + fnamn21.
         END.
      END.   
      
      OS-COPY VALUE(kommando8) VALUE(kommando6).   
      kommando5 = kommando6.
               
      VisaExcel:InteropInitialize(kommando5).
      IF spmall = TRUE THEN VisaExcel:SetVisible(FALSE).
      ELSE IF skrivutmall = TRUE THEN VisaExcel:SetVisible(FALSE).
      ELSE VisaExcel:SetVisible(TRUE).
      
   END.
   sidvarB = sidvarB + 1.
   IF mall = 85 THEN DO:
      FIND FIRST emarkval NO-LOCK NO-ERROR.  
      FIND FIRST marag NO-LOCK NO-ERROR.   
      VisaExcel:DataOut("C4",emarkval.BETECKNING).
      VisaExcel:DataOut("C5",fkommun).      
      IF pomr = "GSS" THEN pvaldomr = 1.
      IF pomr = "GMB" THEN pvaldomr = 2.
      IF pomr = "GNS" THEN pvaldomr = 3.
      IF pomr = "SS" THEN pvaldomr = 4.
      IF pomr = "GSK" THEN pvaldomr = 5.
      IF pomr = "SSK" THEN pvaldomr = 6.
      IF pomr = "NN" THEN pvaldomr = 7.
      IF pomr = "NÖ" THEN pvaldomr = 8.
      IF pvaldomr > 0 THEN DO:
         VisaExcel:DataOut("M4",STRING(pvaldomr)).      
      END.
      VisaExcel:DataOut("C7",marag.GATUADRESS).
      VisaExcel:DataOut("C8",marag.POSTNUMMER + " " + marag.POSTADRESS).
      VisaExcel:DataOut("H8",vman).
      VisaExcel:DataOut("H5",lelitt).
      VisaExcel:DataOut("H7",STRING(TODAY)).
      VisaExcel:DataOut("H6",ponr).
      
      IF allamark = "alla" THEN DO:               
         IF kontpers NE "" THEN VisaExcel:DataOut("C6",kontpers).               
         ELSE VisaExcel:DataOut("C6",emarkval.MARKAGARE).                           
      END.
      ELSE DO:              
         /*Bara en markägare till VP*/
         VisaExcel:DataOut("C6",emarkval.MARKAGARE).                    
      END.
      
      iColumn = 12.
      cColumn = STRING(iColumn).
      FOR EACH akevard WHERE akevard.MARKNR = emarkval.MARKNR AND akevard.BETECKNING = emarkval.BETECKNING
      AND akevard.L5 = 0 AND akevard.STOLPNR NE 0 :            
         {EXCELFEL.I}
         /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris*/
         IF akevard.FASTPRIS = TRUE AND akevard.KRONOR > 0 THEN iColumn = iColumn.
         ELSE DO:            
            cColumn = STRING(iColumn).
            cRange = "B" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.STOLPNR,">>9") + " " + akevard.BENAMNING).         
            cRange = "E" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.L1)).
               
            cRange = "F" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.L2)).         
            cRange = "G" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.L3)).           
            /*Mxx 1 = Åker  Mxx 2 = Bete Mxx 3 = Impediment*/
            cRange = "M" + cColumn.
            IF akevard.SORT = "Åker" THEN VisaExcel:DataOut(cRange,STRING(1)).          
            IF akevard.SORT = "Betesmark" THEN VisaExcel:DataOut(cRange,STRING(2)).         
            IF akevard.SORT = "Impediment" THEN VisaExcel:DataOut(cRange,STRING(3)).         
            
            iColumn = iColumn + 1.
            cColumn = STRING(iColumn).
         END.
      END.            
   END.
   ELSE IF mall = 70 OR mall = 71 OR mall = 72 OR mall = 74 THEN DO:
      FIND FIRST emarkval NO-LOCK NO-ERROR.  
      FIND FIRST marag NO-LOCK NO-ERROR.   
      VisaExcel:DataOut("C4",emarkval.BETECKNING).
      VisaExcel:DataOut("C5",fkommun).     
      IF pomr = "GSS" THEN pvaldomrch = "(GSS) Götalands södra slättbygder".
      IF pomr = "GMB" THEN pvaldomrch = "(GMB) Götalands mellanbygder".
      IF pomr = "GNS" THEN pvaldomrch = "(GNS) Götalands norra slättbygder".
      IF pomr = "SS" THEN pvaldomrch = "(SS) Svealands slättbygder".
      IF pomr = "GSK" THEN pvaldomrch = "(GSK) Götalands skogsbygder".
      IF pomr = "SSK" THEN pvaldomrch = "(SSK) Mellersta Sveriges skogsbygder".
      IF pomr = "NN" THEN pvaldomrch = "(NN) Norrland nedre".
      IF pomr = "NÖ" THEN pvaldomrch = "(NÖ) Norrland övre".
      IF pvaldomrch NE ""  THEN DO:
         VisaExcel:DataOut("C6",pvaldomrch).      
      END.
      
      VisaExcel:DataOut("H5",STRING(TODAY)).
      VisaExcel:DataOut("H4",ponr).
      VisaExcel:DataOut("D8",STRING(oktforekpi)).
      
      iColumn = 10.
      cColumn = STRING(iColumn).
      FOR EACH akevard WHERE akevard.MARKNR = emarkval.MARKNR AND akevard.BETECKNING = emarkval.BETECKNING
      AND akevard.L5 = 0 AND akevard.STOLPNR NE 0 :            
         {EXCELFEL.I}
         /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris*/
         IF akevard.FASTPRIS = TRUE AND akevard.KRONOR > 0 THEN iColumn = iColumn.
         ELSE DO:            
            cColumn = STRING(iColumn).
            cRange = "B" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.STOLPNR,">>9") + " " + akevard.BENAMNING).         
            cRange = "E" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.L1)).
               
            cRange = "F" + cColumn.
            VisaExcel:DataOut(cRange,STRING(akevard.L2)).
            
            cRange = "G" + cColumn.
            
            IF akevard.SORT = "Åker" THEN DO:               
               IF mall = 70 OR mall = 71 OR mall = 72 OR mall = 74 THEN DO:
                  IF akevard.L3 < 1  THEN hjaker = "Åker Zon 1 (0-1 m)".
                  ELSE IF akevard.L3 GE 1 AND akevard.L3 < 2 THEN hjaker = "Åker Zon 2 (1-2 m)".
                  ELSE IF akevard.L3 GE 2 AND akevard.L3 < 3 THEN hjaker = "Åker Zon 3 (2-3 m)".
                  ELSE IF akevard.L3 GE 3 AND akevard.L3 < 15 THEN hjaker = "Åker Zon 4 (3-15 m)".
                  ELSE IF akevard.L3 GE 15 THEN hjaker = "Åker Zon 5 (>15 m)".
               END.      
            END.       
            IF akevard.SORT = "Betesmark" THEN hjaker =  "Bete".      
            IF akevard.SORT = "Impediment" THEN VisaExcel:DataOut(cRange,"Impediment(åker)").  
            VisaExcel:DataOut(cRange,hjaker). 
                     
            
            iColumn = iColumn + 1.
            cColumn = STRING(iColumn).
         END.
      END.
   END.
   DEBUGGER:SET-BREAK().
   
   IF spmall = TRUE OR skrivutmall = TRUE  THEN DO:
      VisaExcel:SetDisplayAlerts(FALSE).
      VisaExcel:SaveFileAs(kommando5).      
      IF skrivutmall = TRUE THEN DO:
         VisaExcel:ValjBlad(1).
         VisaExcel:SetScreenUpdating(TRUE).         
         VisaExcel:printmark().                  
      END.      
      VisaExcel:ReleaseExcel(TRUE).
         
      /*VisaExcel:ExcelAppHandle:DisplayAlerts = TRUE.*/
                                      
   END.
   VisaExcel:ReleaseExcel(FALSE).             
                       
   

END PROCEDURE .   




