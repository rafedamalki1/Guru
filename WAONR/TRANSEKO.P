/*TRANSEKO.P*/
{DIRDEF.I}
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}

FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
&Scoped-define NEW NEW
{FAKTTYPDEF.I}
&Scoped-define NEW 
{FAKTTYPSKAP.I}
FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.


FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 

END FUNCTION.
DEFINE VARIABLE superhandle AS HANDLE.
DEFINE VARIABLE vartvar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE kalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE intkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE exkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE summakostvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE hjalpvar AS DECIMAL NO-UNDO. 
DEFINE QUERY kq FOR KOSTREG.
DEFINE QUERY stq FOR SUMTIDDAG.
{TIDUTTT.I}

DEFINE TEMP-TABLE kosttemp     
   FIELD AONR LIKE KOSTREG.AONR 
   FIELD DELNR LIKE KOSTREG.DELNR         
   FIELD BOKKONTO LIKE KOSTREG.BOKKONTO   
   FIELD FAKTNR LIKE KOSTREG.FAKTNR    
   FIELD REGDATUM LIKE KOSTREG.REGDATUM    
   FIELD BENAMNING LIKE KOSTREG.BENAMNING
   FIELD BELOPP LIKE KOSTREG.MTRL   
   FIELD BELOPP1P LIKE KOSTREG.MTRL   
   FIELD BELOPP2P LIKE KOSTREG.MTRL   
   FIELD GRAVARE LIKE KOSTREG.MASKKOST  
   FIELD MASKOVRIG LIKE KOSTREG.MASKKOST     
   FIELD TBELOPP LIKE KOSTREG.MTRL   
   FIELD MTRL LIKE KOSTREG.MTRL   
   FIELD OVRKR LIKE KOSTREG.MTRL 
   FIELD INKOMST LIKE KOSTREG.MTRL   
   INDEX BOK IS PRIMARY BOKKONTO REGDATUM
   INDEX AONR AONR DELNR.

DEFINE TEMP-TABLE kosttemp2
   FIELD ANVANDARE LIKE KOSTREG.ANVANDARE
   FIELD AONR LIKE KOSTREG.AONR 
   FIELD DELNR LIKE KOSTREG.DELNR
   FIELD BENAMNING LIKE KOSTREG.BENAMNING 
   FIELD BETDATUM LIKE KOSTREG.BETDATUM 
   FIELD BOKKONTO LIKE KOSTREG.BOKKONTO    
   FIELD FAKBES LIKE KOSTREG.FAKBES 
   FIELD FAKTNR LIKE KOSTREG.FAKTNR 
  /*FIELD FAKTURERAD LIKE KOSTREG.FAKTURERAD */
   FIELD INKOMST LIKE KOSTREG.INKOMST  
  /* FIELD KOSTAUTO LIKE KOSTREG.KOSTAUTO */
   FIELD LEVKOD LIKE KOSTREG.LEVKOD  
   FIELD GRAVARE LIKE KOSTREG.MASKKOST  
   FIELD MASKOVRIG LIKE KOSTREG.MASKKOST  
   FIELD MOMS LIKE KOSTREG.MOMS 
   FIELD MTRL LIKE KOSTREG.MTRL 
   FIELD OVRKR LIKE KOSTREG.OVRKR 
   FIELD PERSKOST LIKE KOSTREG.PERSKOST 
   FIELD PERSKOST2 LIKE KOSTREG.PERSKOST 
   FIELD RADNR LIKE KOSTREG.RADNR 
   FIELD REGDATUM LIKE KOSTREG.REGDATUM 
   FIELD TRAKTKOST LIKE KOSTREG.TRAKTKOST
   INDEX AONR IS PRIMARY AONR DELNR BOKKONTO REGDATUM.

DEFINE TEMP-TABLE dagtemp
   FIELD PERSONALKOD AS CHARACTER
   FIELD DATUM AS DATE
   FIELD PRIS AS DECIMAL
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ORT LIKE AONRTAB.ORT
   FIELD TIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"  
   FIELD OTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"         
   FIELD BELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD TBELOPP AS DECIMAL
   FIELD LONKOST AS DECIMAL
   FIELD BEFATTNING AS CHARACTER
   FIELD OMRADE AS CHARACTER
   FIELD GEOMRADE AS CHARACTER
              
   INDEX AONR IS PRIMARY AONR DELNR
   INDEX DATUM DATUM
   INDEX PERS PERSONALKOD.
{BOLAGSEKSTART.I}
DEFINE INPUT  PARAMETER ganv AS CHARACTER NO-UNDO.

DEFINE INPUT PARAMETER TABLE FOR uppvaltemp.
DEFINE INPUT PARAMETER TABLE FOR valdaao.
DEFINE OUTPUT PARAMETER TABLE FOR tidut.
DEFINE OUTPUT PARAMETER str AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE OUTPUT PARAMETER str2 AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE OUTPUT PARAMETER str3 AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.

FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR. 
Guru.Konstanter:globforetag = FORETAG.FORETAG.

FIND FIRST uppvaltemp NO-ERROR.
OPEN QUERY aq FOR EACH valdaao NO-LOCK. 

GET FIRST aq NO-LOCK.
DO WHILE AVAILABLE(valdaao):      
   {SUMOPEN.I}   
   GET NEXT aq NO-LOCK.
END.  
{DAGTEMPBOLAG.I}   
RUN huvud_UI.
PROCEDURE huvud_UI :  
   CREATE tidut. 
   SUBSTRING(tidut.UT,60) = STRING(TODAY) + " " + STRING(TIME,"HH:MM").
   CREATE tidut.
   CREATE tidut.
   tidut.UT = uppvaltemp.VALDLISTA. 
   IF uppvaltemp.VISPERAR = TRUE THEN DO: 
      SUBSTRING(tidut.UT,64) = "ÅR " + STRING(YEAR(uppvaltemp.STARTDATUM),"9999").
   END.                        
   ELSE IF uppvaltemp.VISPERAR = FALSE THEN DO:
      SUBSTRING(tidut.UT,64) = "PERIOD " +  STRING(uppvaltemp.STARTDATUM) + 
      " - " + STRING(uppvaltemp.SLUTDATUM).     
   END.
   ELSE DO:
      SUBSTRING(tidut.UT,64) = "VISNING AV ALLT".
   END.
   CREATE tidut.
   {KUURV.I}
   CREATE tidut.
   ASSIGN 
   tidut.UT = "UF=KOSTNADER FRÅN TIDREDOVISNING OCH KOSTNADSREGISTRERING, KA=KALKYLERING".      
   ASSIGN
   nrcol[1] = 1
   nrcol[2] = 2
   nrcol[3] = 3
   nrcol[4] = 4
   nrcol[5] = 5
   nrcol[6] = 6
   nrcol[7] = 7
   nrcol[8] = 8
   nrcol[9] = 9
   nrcol[10] = 10
   nrcol[11] = 11.
   ASSIGN
   breddantal = 11   /*antal kolumner*/
   bredd[1] = 6
   bredd[2] = 8
   bredd[3] = 3
   bredd[4] = 6
   bredd[5] = 5
   bredd[6] = 9
   bredd[7] = 9
   bredd[8] = 9
   bredd[9] = 9
   bredd[10] = 9
   bredd[11] = 9.
   
   
   ASSIGN
   i = 2.     
   utnr[nrcol[1]] = 1.
   DO WHILE i <= breddantal:             
      utnr[i] = utnr[i - 1] + bredd[i - 1] + 1.            
      i = i + 1.
   END.   
   ASSIGN
   str = "".  
   i = 1.
   DO WHILE i <= utnr[breddantal] + bredd[breddantal] - 1:
      str = str + "=".     
      i = i + 1.
   END.   
   i = 2.      
   DO WHILE i <= breddantal:             
      SUBSTRING(str,(utnr[i] - 1),1) = ".".      
      i = i + 1.
   END.          
   CREATE tidut.  
   CREATE tidut.   
   CREATE tidut.             
   ASSIGN                                                                                                       
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = "ENHET/"             
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = "ÖVERTID"         
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = "ÖVERTID"  
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = "LÖN"                                          
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = "TRAKT.".
   str2 = tidut.UT.                 
   CREATE tidut.      
   ASSIGN                               
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = "SIGN"      
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = CAPS(Guru.Konstanter:gaok) 
   SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "DEL"             
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = "DATUM"         
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "PRIS"  
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = "TIMMAR"
   SUBSTRING(tidut.UT,utnr[nrcol[7]]) = "BELOPP"  
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = "TIMMAR" 
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = "BELOPP"
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = "KOSTNAD"
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = "KOSTNAD".
   str3 = tidut.UT.                
   CREATE tidut.      
   tidut.UT = str.
   FOR EACH dagtemp BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.DATUM BY dagtemp.PERSONALKOD: 
      CREATE tidut.      
      ASSIGN                               
      SUBSTRING(tidut.UT,utnr[nrcol[1]]) = dagtemp.PERSONALKOD      
      SUBSTRING(tidut.UT,utnr[nrcol[2]]) = dagtemp.AONR  
      SUBSTRING(tidut.UT,utnr[nrcol[3]]) = STRING(dagtemp.DELNR,Guru.Konstanter:varforetypchar[1])            
      SUBSTRING(tidut.UT,utnr[nrcol[4]]) = STRING(dagtemp.DATUM,"999999")
      SUBSTRING(tidut.UT,utnr[nrcol[5]]) = STRING(dagtemp.PRIS,">>>>9")                                                                       
      SUBSTRING(tidut.UT,utnr[nrcol[6]]) = STRING(dagtemp.TIMMAR,  "->>>>9.99")
      SUBSTRING(tidut.UT,utnr[nrcol[7]]) = STRING(dagtemp.BELOPP,  "->>>>>>>9")
      SUBSTRING(tidut.UT,utnr[nrcol[8]]) = STRING(dagtemp.OTIMMAR, "->>>>9.99") 
      SUBSTRING(tidut.UT,utnr[nrcol[9]]) = STRING(dagtemp.OBELOPP, "->>>>>>>9")
      SUBSTRING(tidut.UT,utnr[nrcol[10]]) = STRING(dagtemp.LONKOST,"->>>>>>>9")
      SUBSTRING(tidut.UT,utnr[nrcol[11]]) = STRING(dagtemp.TBELOPP,"->>>>>>>9").
   END.
   CREATE tidut.
   CREATE tidut.
   CREATE tidut.
   ASSIGN tidut.UT = "VERIFIKAT FRÅN KOSTNADSREGISTRERING".              
   CREATE tidut.         
   CREATE tidut.
   ASSIGN              
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok)         
   SUBSTRING(tidut.UT,12) = "KONTO"                           
   SUBSTRING(tidut.UT,18) = "VER-NR"         
   SUBSTRING(tidut.UT,34) = "DATUM"  
   SUBSTRING(tidut.UT,43) = "BENÄMNING"
   SUBSTRING(tidut.UT,83) = "BELOPP".  
   CREATE tidut.             
   ASSIGN  
   tidut.UT =                              
                                                                               
"==========.=====.===============.========.===================================.=============".                                                                                          
   FOR EACH kosttemp2 NO-LOCK:         
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = kosttemp2.AONR + STRING(kosttemp2.DELNR,Guru.Konstanter:varforetypchar[1])
      SUBSTRING(tidut.UT,12,5) = SUBSTRING(kosttemp2.BOKKONTO,1,5) 
      SUBSTRING(tidut.UT,18) = kosttemp2.FAKTNR         
      SUBSTRING(tidut.UT,34) = STRING(kosttemp2.REGDATUM)
      SUBSTRING(tidut.UT,43) = STRING(kosttemp2.BENAMNING,"x(35)")
      SUBSTRING(tidut.UT,79) = STRING((kosttemp2.MTRL + kosttemp2.OVRKR + kosttemp2.GRAVARE +
      kosttemp2.MASKOVRIG + 
      kosttemp2.PERSKOST + kosttemp2.PERSKOST2 + kosttemp2.TRAKTKOST) - kosttemp2.INKOMST,"->>>>>>>>9.99").                  
      
   END.
   
END PROCEDURE.

PROCEDURE kostreg_UI :   
   GET FIRST kq NO-LOCK.
   DO WHILE AVAILABLE(KOSTREG):     
      CREATE kosttemp2.
      ASSIGN            
      kosttemp2.ANVANDARE = SUBSTRING(KOSTREG.ANVANDARE,1,12) 
      kosttemp2.AONR = KOSTREG.AONR 
      kosttemp2.DELNR = valdaao.DELNR
      kosttemp2.BENAMNING = KOSTREG.BENAMNING 
      kosttemp2.BETDATUM = KOSTREG.BETDATUM 
      kosttemp2.BOKKONTO = KOSTREG.BOKKONTO 
      
      kosttemp2.FAKBES = KOSTREG.FAKBES 
      kosttemp2.FAKTNR = KOSTREG.FAKTNR 
     /* kosttemp2.FAKTURERAD = KOSTREG.FAKTURERAD */
      kosttemp2.INKOMST = KOSTREG.INKOMST  
     /* kosttemp2.KOSTAUTO = KOSTREG.KOSTAUTO */
      kosttemp2.LEVKOD = KOSTREG.LEVKOD  
      kosttemp2.MOMS = KOSTREG.MOMS 
      kosttemp2.RADNR = KOSTREG.RADNR 
      kosttemp2.REGDATUM = KOSTREG.REGDATUM 
      kosttemp2.TRAKTKOST = KOSTREG.TRAKTKOST
      kosttemp2.MASKOVRIG = KOSTREG.MASKKOST
      kosttemp2.MTRL = KOSTREG.MTRL 
      kosttemp2.OVRKR = KOSTREG.OVRKR 
      kosttemp2.PERSKOST = KOSTREG.PERSKOST 
      kosttemp2.PERSKOST2 = 0.
      
      GET NEXT kq NO-LOCK.      
   END.
END PROCEDURE.

PROCEDURE skapadagdag_UI :
   GET FIRST stq NO-LOCK.
   DO WHILE AVAILABLE(SUMTIDDAG):  
      CREATE dagtemp.
      ASSIGN   
      dagtemp.OMRADE = SUMTIDDAG.OMRADE 
      dagtemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD   
      dagtemp.DATUM = SUMTIDDAG.DATUM
      dagtemp.AONR = SUMTIDDAG.AONR
      dagtemp.DELNR = valdaao.DELNR 
      dagtemp.ORT = SUMTIDDAG.ORT
      dagtemp.OBELOPP = SUMTIDDAG.OBELOPP
      dagtemp.BELOPP = SUMTIDDAG.BELOPP 
      dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
      dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR
      dagtemp.PRIS = SUMTIDDAG.PRIS
      dagtemp.LONKOST = SUMTIDDAG.LONKOST 
      dagtemp.TBELOPP = SUMTIDDAG.TBELOPP.
      GET NEXT stq NO-LOCK.      
   END.
END PROCEDURE.




