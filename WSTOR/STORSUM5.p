/*STORSUM5.P SUMMERING AV STÖRNING*/
DEFINE VARIABLE timmar100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE timmar60 AS DECIMAL FORMAT ">9.999" NO-UNDO.
DEFINE TEMP-TABLE summ_temp
   FIELD SPANID LIKE STORNINGSTAB.FELSPANID
   FIELD FELOID LIKE STORNINGSTAB.FELOID
   FIELD ADELID LIKE STORNINGSTAB.ADELID.

DEFINE TEMP-TABLE avd_temp
   FIELD AVDELNINGNR LIKE STORDISTRIKT.AVDELNINGNR   
   FIELD NAMN LIKE STORDISTRIKT.NAMN
   INDEX AVD IS PRIMARY AVDELNINGNR.




DEFINE INPUT PARAMETER TABLE FOR avd_temp.
DEFINE INPUT PARAMETER valfore AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER distvar LIKE STORDISTRIKT.DISTRIKTID NO-UNDO.   
DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER period AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER uttyp AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER driftvar LIKE STORDRIFTOMR.STDRIFTID NO-UNDO.
DEFINE INPUT PARAMETER alla AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER spannvar LIKE SPANNINGSNIV.SPANID NO-UNDO.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR summ_temp.
DEFINE INPUT PARAMETER treminuter AS LOGICAL NO-UNDO.

   {muswait.i}   

   IF valfore = TRUE THEN DO:
      FOR EACH avd_temp USE-INDEX AVD:
         OPEN QUERY dq FOR EACH STORDISTRIKT WHERE 
         STORDISTRIKT.AVDELNINGNR = avd_temp.AVDELNINGNR AND 
         STORDISTRIKT.ARTAL = YEAR(bdatum) USE-INDEX AVDARTAL NO-LOCK.
         GET FIRST dq NO-LOCK.
         DO WHILE AVAILABLE(STORDISTRIKT):
            distvar = STORDISTRIKT.DISTRIKTID.
            RUN distrikt_UI.
            GET NEXT dq NO-LOCK.
         END.
         CLOSE QUERY dq.
      END.         
   END.
   ELSE DO:
      IF alla = TRUE THEN DO: 
         IF period = 1 THEN DO:
            OPEN QUERY sq FOR EACH STORNINGSTAB WHERE YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND
            STORNINGSTAB.STDRIFTID = driftvar AND STORNINGSTAB.FRANSPANID = spannvar AND 
            STORNINGSTAB.STORTYPID = 1 
            USE-INDEX LISTA2 NO-LOCK.       
         END.
         ELSE DO:
            OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.HDATUM >= bdatum AND
            STORNINGSTAB.HDATUM <= avdatum AND
            STORNINGSTAB.STDRIFTID = driftvar AND STORNINGSTAB.FRANSPANID = spannvar AND 
            STORNINGSTAB.STORTYPID = 1 
            USE-INDEX LISTA2 NO-LOCK.
         END.
         GET FIRST sq NO-LOCK.
         DO WHILE AVAILABLE(STORNINGSTAB):

            IF STORNINGSTAB.AVBROTTSTID > 0.05 THEN DO:
               RUN summa_UI.         
            END.
            GET NEXT sq NO-LOCK.
         END.
         CLOSE QUERY sq.      
      END.
      ELSE DO: 
         RUN distrikt_UI.          
      END.
   END.

PROCEDURE distrikt_UI:   
   IF period = 1 THEN DO:
      OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
      YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND STORNINGSTAB.FRANSPANID = spannvar AND 
      STORNINGSTAB.STDRIFTID = driftvar AND STORNINGSTAB.STORTYPID = 1
      USE-INDEX LISTA3 NO-LOCK.    
   END.
   ELSE DO:
      OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
      STORNINGSTAB.HDATUM >= bdatum AND
      STORNINGSTAB.HDATUM <= avdatum AND STORNINGSTAB.FRANSPANID = spannvar AND 
      STORNINGSTAB.STDRIFTID = driftvar AND STORNINGSTAB.STORTYPID = 1
      USE-INDEX LISTA3 NO-LOCK.
   END.
   GET FIRST sq NO-LOCK.
   DO WHILE AVAILABLE(STORNINGSTAB):          
      IF STORNINGSTAB.AVBROTTSTID > 0.05 THEN DO:
         RUN summa_UI.
      END.
      GET NEXT sq NO-LOCK.
   END.
   CLOSE QUERY sq.
END PROCEDURE.

PROCEDURE summa_UI. 
   IF treminuter = TRUE THEN DO:   
      FIND LAST BORTKOPPLAD WHERE BORTKOPPLAD.STORNUMMERID = STORNINGSTAB.STORNUMMERID
      USE-INDEX AVBROTT NO-LOCK NO-ERROR.
      IF AVAILABLE BORTKOPPLAD THEN DO:
         RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT BORTKOPPLAD.ATERDATUM, INPUT STORNINGSTAB.HKLOCKAN,
         INPUT BORTKOPPLAD.ATERKLOCKAN, OUTPUT timmar100, OUTPUT timmar60).
      END.
      ELSE DO:
         RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.HKLOCKAN,
         INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      END.     
      
      IF timmar60 > 0000.03 THEN DO:   
         CREATE summ_temp.
         ASSIGN        
         summ_temp.SPANID = STORNINGSTAB.FRANSPANID   
         summ_temp.ADELID = STORNINGSTAB.ADELID.
      END.
      ELSE RETURN.
   END.
   ELSE DO:  
      CREATE summ_temp.
      ASSIGN        
      summ_temp.SPANID = STORNINGSTAB.FRANSPANID   
      summ_temp.ADELID = STORNINGSTAB.ADELID.
   END.   
   IF STORNINGSTAB.FELOID = 1 THEN summ_temp.FELOID = 1.
   ELSE IF STORNINGSTAB.FELOID > 1 AND STORNINGSTAB.FELOID < 8 THEN summ_temp.FELOID = 2.
   ELSE IF STORNINGSTAB.FELOID > 7 AND STORNINGSTAB.FELOID < 13 THEN summ_temp.FELOID = 3.
   ELSE IF STORNINGSTAB.FELOID > 12 AND STORNINGSTAB.FELOID < 17 THEN summ_temp.FELOID = 4.
   ELSE IF STORNINGSTAB.FELOID > 16 AND STORNINGSTAB.FELOID < 20 THEN summ_temp.FELOID = 5.
   ELSE IF STORNINGSTAB.FELOID = 20 THEN summ_temp.FELOID = 6.
   ELSE IF STORNINGSTAB.FELOID = 21 THEN summ_temp.FELOID = 7.
   ELSE IF STORNINGSTAB.FELOID = 22 THEN summ_temp.FELOID = 8.
   ELSE IF STORNINGSTAB.FELOID = 23 THEN summ_temp.FELOID = 9.
   ELSE summ_temp.FELOID = 8.
END PROCEDURE.
