/*
               KSV Editor
    Copyright: (C) 2000-2001 Serguey Klimoff (bulkl0DD)
     Filename: ALLMaonrbort.P
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2011.05.19 15:16 ELPAO   
     Modified: 2011.05.19 18:14 ELPAO    
     Modified: 
*/
&Scoped-define NEW  NEW 
&Scoped-define SHARED  SHARED 

{FELMEDTEMP.I}

DEFINE VARIABLE KalkClasserStart AS HANDLE NO-UNDO.
RUN Modules\Kalkyl\KalkClasserStart.P PERSISTENT SET KalkClasserStart.
{EXTRADATA.I}
{EXTRATAB.I}
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
RUN EXTRADATAHMT.P PERSISTENT SET edataapph. 
DEFINE VARIABLE fbestapph AS HANDLE NO-UNDO. 
RUN EXTRATABHMT.P PERSISTENT SET fbestapph.
DEFINE VARIABLE markhmth AS HANDLE NO-UNDO.
RUN  MARKHMT.P PERSISTENT SET markhmth.

OPEN QUERY omrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM > 01/01/1991  AND AONRTAB.AONRAVDATUM <= 12/31/2017  NO-LOCK.
GET FIRST omrq NO-LOCK.
DO WHILE AVAILABLE(AONRTAB):
   RUN bort_UI.
   RUN exbort_UI (AONRTAB.AONR, AONRTAB.DELNR).
   RUN refbort (AONRTAB.AONR, AONRTAB.DELNR).
   DO TRANSACTION: 
      GET CURRENT omrq EXCLUSIVE-LOCK.
      DELETE AONRTAB. 
   END.
   GET NEXT omrq NO-LOCK.
END.
OPEN QUERY omrq FOR EACH AONRTAB WHERE AONRTAB.FASTAAONR = TRUE  NO-LOCK.
GET FIRST omrq NO-LOCK.
DO WHILE AVAILABLE(AONRTAB):
   RUN bort_UI.
   RUN exbort_UI (AONRTAB.AONR, AONRTAB.DELNR).
   RUN refbort (AONRTAB.AONR, AONRTAB.DELNR).
   DO TRANSACTION: 
      GET CURRENT omrq EXCLUSIVE-LOCK.
      DELETE AONRTAB. 
   END.
   GET NEXT omrq NO-LOCK.
END.



PROCEDURE bort_UI :
   DEFINE VARIABLE sokvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ejbortkalkvar AS LOGICAL NO-UNDO.
   DO TRANSACTION:
      FOR EACH TIDREGITAB WHERE TIDREGITAB.AONR = AONRTAB.AONR AND
      TIDREGITAB.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
         DELETE TIDREGITAB. 
      END.
   END. 
   
   DO TRANSACTION:
      FOR EACH KALKSPEC WHERE KALKSPEC.AONR = AONRTAB.AONR AND
      KALKSPEC.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
         DELETE KALKSPEC. 
      END.
   END. 
   
   FOR EACH KALKAONR WHERE KALKAONR.AONR = AONRTAB.AONR AND
   KALKAONR.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
      sokvar = "K" + STRING(KALKAONR.KALKNR) + "$" + KALKAONR.OMRADE.
      DO TRANSACTION:
         FIND FIRST ANVPER WHERE ANVPER.ANVANDARE = sokvar EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE ANVPER THEN DELETE ANVPER.
      END.
      RUN bortkalkyl_UI IN KalkClasserStart (INPUT KALKAONR.KALKNR, OUTPUT ejbortkalkvar).
   END.
   DO TRANSACTION:
      FOR EACH KALKAONR WHERE KALKAONR.AONR = AONRTAB.AONR AND
      KALKAONR.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
         DELETE KALKAONR. 
      END.
   END. 
   FIND FIRST  BEREDNING WHERE BEREDNING.AONR = AONRTAB.AONR AND
   BEREDNING.DELNR = AONRTAB.DELNR NO-LOCK NO-ERROR.
   IF AVAILABLE BEREDNING THEN DO:
      RUN BerBort_UI (BEREDNING.BERNR,BEREDNING.OMRADE).
      DO TRANSACTION:
         FIND CURRENT BEREDNING EXCLUSIVE-LOCK.
         DELETE BEREDNING. 
      END.
   END.
 
   
   FOR EACH VARDERING WHERE VARDERING.AONR = AONRTAB.AONR AND
   VARDERING.DELNR = AONRTAB.DELNR NO-LOCK:
      RUN borttag IN markhmth  (INPUT VARDERING.VARDNR).
     
   END.
   DO TRANSACTION:
      FOR EACH VARDERING WHERE VARDERING.AONR = AONRTAB.AONR AND
      VARDERING.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
         DELETE VARDERING.
        
      END.
   END. 
   OPEN QUERY aonrkq FOR EACH AONRKONTKOD WHERE AONRKONTKOD.AONR = AONRTAB.AONR AND
   AONRKONTKOD.DELNR = AONRTAB.DELNR NO-LOCK.
   GET FIRST aonrkq NO-LOCK.
   DO WHILE AVAILABLE(AONRKONTKOD):
      DO TRANSACTION:       
         GET CURRENT aonrkq EXCLUSIVE-LOCK.
         DELETE AONRKONTKOD.    
      END.
      GET NEXT aonrkq NO-LOCK.
   END.
   OPEN QUERY kostq FOR EACH KOSTREG WHERE KOSTREG.AONR = AONRTAB.AONR AND
   KOSTREG.DELNR = AONRTAB.DELNR USE-INDEX KOST NO-LOCK.
   DO TRANSACTION:       
      GET FIRST kostq EXCLUSIVE-LOCK.
      IF AVAILABLE KOSTREG THEN DELETE KOSTREG.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT kostq EXCLUSIVE-LOCK.
         IF AVAILABLE KOSTREG THEN DELETE KOSTREG.    
         ELSE LEAVE.      
      END.         
   END. 




   OPEN QUERY tidq FOR EACH AONRTIDLAGE WHERE AONRTIDLAGE.AONR = AONRTAB.AONR AND
   AONRTIDLAGE.DELNR = AONRTAB.DELNR NO-LOCK.
   GET FIRST tidq NO-LOCK.
   DO WHILE AVAILABLE(AONRTIDLAGE):
      DO TRANSACTION:       
         GET CURRENT tidq EXCLUSIVE-LOCK.
         
         DELETE AONRTIDLAGE.    
      END.
      GET NEXT tidq NO-LOCK.
   END.
   DO TRANSACTION:
      FOR EACH AOTIDLKOPP WHERE AOTIDLKOPP.AONR = AONRTAB.AONR AND AOTIDLKOPP.DELNR = AONRTAB.DELNR EXCLUSIVE-LOCK: 
         DELETE AOTIDLKOPP.  
      END.
   END.
   FOR EACH INKADRESS  WHERE INKADRESS.AONRAONR = AONRTAB.AONR AND
   INKADRESS.AONRDELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
      DELETE INKADRESS.
   END.   
   FOR EACH INKMTRL  WHERE INKMTRL.AONRAONR = AONRTAB.AONR AND
   INKMTRL.AONRDELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
      DELETE INKMTRL.
   END.
   FOR EACH INKBER  WHERE INKBER.AONRAONR = AONRTAB.AONR AND
   INKBER.AONRDELNR = AONRTAB.DELNR EXCLUSIVE-LOCK:
      DELETE INKBER.
   END.         
   
END PROCEDURE.




PROCEDURE exbort_UI :
   DEFINE INPUT PARAMETER vao AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vdnr AS INTEGER NO-UNDO.
   EMPTY TEMP-TABLE inextrakopptemp NO-ERROR.      
   CREATE inextrakopptemp.          
   ASSIGN
   inextrakopptemp.PROGRAM = "FBAONR"                   
   inextrakopptemp.KOPPLACHAR1 = vao
   inextrakopptemp.KOPPLAINT1 =  vdnr      
   inextrakopptemp.KOPPLACHAR2 = ?            
   inextrakopptemp.KOPPLAINT2 =  ?.
   RUN exbort_UI IN fbestapph (INPUT TABLE inextrakopptemp).
   CREATE inextrakopptemp.          
   ASSIGN
   inextrakopptemp.PROGRAM = "INTAONR"                   
   inextrakopptemp.KOPPLACHAR1 = vao
   inextrakopptemp.KOPPLAINT1 =  vdnr      
   inextrakopptemp.KOPPLACHAR2 = ?            
   inextrakopptemp.KOPPLAINT2 =  ?.
   RUN exbort_UI IN fbestapph (INPUT TABLE inextrakopptemp).

   EMPTY TEMP-TABLE inextrakopptemp NO-ERROR.
   CREATE inextrakopptemp.          
   ASSIGN
   inextrakopptemp.PROGRAM = "AOTIDPERS"
   inextrakopptemp.KOPPLACHAR1 = vao    
   inextrakopptemp.KOPPLAINT1 = vdnr 
   inextrakopptemp.KOPPLACHAR2 = ?
   inextrakopptemp.KOPPLAINT2 =  ?.
   RUN exbort_UI IN fbestapph (INPUT TABLE inextrakopptemp).   
   CREATE inextrakopptemp.          
   ASSIGN
   inextrakopptemp.PROGRAM = "AODAGBOK"                   
   inextrakopptemp.KOPPLACHAR1 = vao               
   inextrakopptemp.KOPPLAINT1 = vdnr
   inextrakopptemp.KOPPLACHAR2 = ?            
   inextrakopptemp.KOPPLAINT2 =  ?.   
   RUN exbort_UI IN fbestapph (INPUT TABLE inextrakopptemp). 
   
  
   
END PROCEDURE.
PROCEDURE refbort.   
   DEFINE INPUT PARAMETER aonrref AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER aonrdelnrref AS INTEGER NO-UNDO.
   
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "AOREF"                   
   inextradatatemp.HUVUDCH = aonrref              
   inextradatatemp.HUVUDINT =  aonrdelnrref.         
   RUN exbort_UI IN edataapph (INPUT TABLE inextradatatemp).
   
      
   
END PROCEDURE.


PROCEDURE BerBort_UI :
   DEFINE INPUT  PARAMETER bernvar AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER omrvar AS CHARACTER NO-UNDO.
 
   /*KALKYL-BEREDNING SUNDSVALL*/
   CREATE inextrakopptemp.          
   ASSIGN
   inextrakopptemp.PROGRAM = "KALKBER"                   
   inextrakopptemp.KOPPLACHAR1 = ?
   inextrakopptemp.KOPPLAINT1 = ?
   inextrakopptemp.KOPPLACHAR2 = omrvar
   inextrakopptemp.KOPPLAINT2 =  bernvar.
   RUN exbort_UI IN fbestapph (INPUT TABLE inextrakopptemp). 
   DO TRANSACTION:
      /*
      FIND FIRST BERANV WHERE BERANV.AONR = AONRTAB.AONR  AND 
      BERANV.DELNR = AONRTAB.DELNR USE-INDEX OMR EXCLUSIVE-LOCK NO-ERROR.
       IF AVAILABLE BERANV THEN DELETE BERANV.
       */
        FIND FIRST BERANV WHERE BERANV.AONR = STRING(bernvar)  AND 
        BERANV.OMRADE = omrvar USE-INDEX OMR EXCLUSIVE-LOCK NO-ERROR.
       IF AVAILABLE BERANV THEN DELETE BERANV.
   END.
   DO TRANSACTION: 
      FIND FIRST BETFRIA WHERE BETFRIA.BETNR = bernvar AND
      BETFRIA.FAKTTEXT = omrvar EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE BETFRIA THEN DELETE BETFRIA. 
   END.    
   RUN DELBERE.P (STRING(bernvar),omrvar).
END PROCEDURE.