/*MAILBERAPP.P*/
{STARTFORAPP.I}
{ANMARKD.I}
{DEFBESTU.I} 
{KONVALTEMP.I}
{TTBESTXML.I}
{NAMNDB.I}
DEFINE TEMP-TABLE tempnamn NO-UNDO
   FIELD NAMNH AS HANDLE
   FIELD TORGTH AS HANDLE
   FIELD NODTAB AS CHARACTER.

DEFINE VARIABLE enkabval AS LOGICAL    NO-UNDO.
DEFINE VARIABLE priset AS LOGICAL NO-UNDO.
DEFINE VARIABLE detvar AS LOGICAL NO-UNDO. 
DEFINE VARIABLE datvar AS DATE NO-UNDO.  
DEFINE VARIABLE alla AS LOGICAL NO-UNDO.  
DEFINE VARIABLE vald_lev AS CHARACTER NO-UNDO.  
DEFINE VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO. 
DEFINE VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE VARIABLE valort AS CHARACTER NO-UNDO. 
DEFINE VARIABLE valomrade AS CHARACTER NO-UNDO.
DEFINE VARIABLE epostvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE musz2 AS LOGICAL NO-UNDO.
DEFINE VARIABLE kalkrow AS ROWID NO-UNDO.
DEFINE VARIABLE mailvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE edivar AS LOGICAL NO-UNDO.
DEFINE VARIABLE EDITOR_MEDD AS CHARACTER  VIEW-AS EDITOR SCROLLBAR-VERTICAL SIZE 53 BY 9 FONT 25 NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.        
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE str AS CHARACTER FORMAT "X(130)" NO-UNDO. 
DEFINE VARIABLE str1 AS CHARACTER FORMAT "X(130)" NO-UNDO.
DEFINE VARIABLE str2 AS CHARACTER FORMAT "X(130)" NO-UNDO. 
DEFINE VARIABLE str0 AS CHARACTER FORMAT "X(130)" NO-UNDO.
DEFINE VARIABLE totalt AS DECIMAL NO-UNDO. 
DEFINE VARIABLE totalt2 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE leverant AS CHARACTER NO-UNDO.
DEFINE VARIABLE lev AS CHARACTER NO-UNDO.  
DEFINE VARIABLE sumpris AS DECIMAL NO-UNDO.    
DEFINE VARIABLE totalsum AS DECIMAL NO-UNDO.
DEFINE VARIABLE sumantal AS INTEGER NO-UNDO.
DEFINE VARIABLE xkordvar AS INTEGER NO-UNDO. 
DEFINE VARIABLE stopvar AS LOGICAL NO-UNDO. 
DEFINE VARIABLE prisvar AS INTEGER NO-UNDO.
DEFINE VARIABLE antvar AS INTEGER NO-UNDO. 
DEFINE VARIABLE antvar2 AS INTEGER NO-UNDO.  
DEFINE VARIABLE firstlev AS CHARACTER NO-UNDO.   
DEFINE VARIABLE mtrlrak AS INTEGER NO-UNDO.  
DEFINE VARIABLE mtrlrak2 AS INTEGER NO-UNDO.
DEFINE VARIABLE radrak AS INTEGER NO-UNDO.   
DEFINE VARIABLE langd AS INTEGER NO-UNDO.  
DEFINE VARIABLE upp AS LOGICAL NO-UNDO.            
DEFINE VARIABLE prognamn AS CHARACTER FORMAT "X(41)" NO-UNDO.
DEFINE VARIABLE prognamn2 AS CHARACTER FORMAT "X(41)" NO-UNDO.
DEFINE VARIABLE prognamn3 AS CHARACTER FORMAT "X(80)" NO-UNDO.
DEFINE VARIABLE skick AS LOGICAL NO-UNDO.
DEFINE VARIABLE efel AS CHARACTER FORMAT "X(30)" NO-UNDO.
DEFINE VARIABLE bytgrupp AS CHARACTER NO-UNDO. 
DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE utrec AS RECID NO-UNDO.
DEFINE VARIABLE utrec2 AS RECID NO-UNDO.
DEFINE VARIABLE kant AS INTEGER NO-UNDO.
DEFINE VARIABLE tant AS INTEGER NO-UNDO.
DEFINE VARIABLE uppvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE sidlangd AS INTEGER NO-UNDO.
DEFINE VARIABLE ediraknare AS INTEGER NO-UNDO.
DEFINE VARIABLE anmlangd AS INTEGER NO-UNDO.
DEFINE VARIABLE idvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE numsok AS LOGICAL NO-UNDO.
DEFINE VARIABLE byggnr AS INTEGER NO-UNDO.
DEFINE VARIABLE skapkab AS INTEGER NO-UNDO.
DEFINE VARIABLE bestoff AS CHARACTER NO-UNDO.

DEFINE VARIABLE delbest AS LOGICAL NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER NO-UNDO.

DEFINE VARIABLE dynxml AS HANDLE NO-UNDO.
DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE xmlsparfilnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE okand AS LOGICAL NO-UNDO.
DEFINE VARIABLE fildir AS CHARACTER FORMAT "X(256)" NO-UNDO.
DEFINE VARIABLE filnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE filnamnuppxml AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjkom AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.

{EXTRADATA.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.

DEFINE QUERY mtrlprisq FOR BERMTRL.
DEFINE QUERY upplq FOR BERVAL.
DEFINE QUERY berq FOR BERUPP.
DEFINE QUERY gruppq FOR KONSTGRUPP.
DEFINE QUERY beridq FOR BERID.
DEFINE QUERY skyddq FOR KSKYDD.

DEFINE BUFFER idbuff FOR id_temp.
DEFINE BUFFER mtrlbuff FOR mtrl_temp2. 
DEFINE BUFFER gruppbuff FOR grupp_temp.
DEFINE BUFFER linbuff FOR lin_upp.
DEFINE BUFFER skyddbuff FOR skydd_temp2.

DEFINE TEMP-TABLE Body1
   FIELD UT AS CHARACTER.
   
DEFINE TEMP-TABLE Body2
   FIELD UT AS CHARACTER. 

DEFINE TEMP-TABLE felmeddftptemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.            

PROCEDURE hamtaaonr_UI.
   DEFINE INPUT PARAMETER kalkrow AS ROWID NO-UNDO.
   DEFINE OUTPUT PARAMETER hmtaonr AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER hmtdelnr AS INTEGER NO-UNDO.
   FIND FIRST BEREDNING WHERE ROWID(BEREDNING) = kalkrow NO-LOCK NO-ERROR.
   ASSIGN
   hmtaonr = BEREDNING.AONR
   hmtdelnr = BEREDNING.DELNR.
END PROCEDURE.
PROCEDURE kolraindance_UI.
   DEFINE INPUT PARAMETER bestnr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER hmtaonr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER hmtdelnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER skickad AS DATE NO-UNDO.
   /*EN BESTÄLLNING FÅR BARA SKICKAS ENGÅNG TILL EKONOMISYSTEMET RAINDANCE*/

   RUN FINNSTABELL.P (INPUT "EXTRADATA", OUTPUT bloblog).   
   IF bloblog = FALSE THEN RETURN.
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "RAIND"                   
   inextradatatemp.HUVUDCH = hmtaonr              
   inextradatatemp.HUVUDINT =  hmtdelnr.         
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp WHERE extradatatemp.SOKCHAR[1] = bestnr NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO:      
      skickad = extradatatemp.SOKDATE[1].
   END.   
   ELSE DO:
      skickad = ?.
   END.
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph. 
   edataapph = ?. 
END PROCEDURE.

PROCEDURE sparraindance:
   DEFINE INPUT PARAMETER bestnr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER hmtaonr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER hmtdelnr AS INTEGER NO-UNDO.
   
   RUN FINNSTABELL.P (INPUT "EXTRADATA", OUTPUT bloblog).   
   IF bloblog = FALSE THEN RETURN.
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "RAIND"                   
   inextradatatemp.HUVUDCH = hmtaonr              
   inextradatatemp.HUVUDINT =  hmtdelnr
   inextradatatemp.SOKCHAR[1] =  bestnr
   inextradatatemp.SOKDATE[1] =  TODAY.         
   RUN extraspar_UI IN edataapph (INPUT TABLE inextradatatemp).           
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph. 
   edataapph = ?. 
END PROCEDURE.


PROCEDURE skapalista_UI.
   DEFINE INPUT PARAMETER globforetag2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER epostvar2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bestoff2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vald_lev2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER kalkrow2 AS ROWID NO-UNDO.
   DEFINE INPUT PARAMETER valaonr2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER detvar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER mailvar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER edivar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER priset2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER alla2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER datvar2 AS DATE NO-UNDO.
   DEFINE OUTPUT PARAMETER musz2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR skapa_mtrl.
   DEFINE INPUT PARAMETER TABLE FOR trp_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEFINE INPUT PARAMETER TABLE FOR kon_val.
   DEFINE INPUT PARAMETER delbest2 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddftptemp.
   EMPTY TEMP-TABLE mtrl_temp NO-ERROR. 
   EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE uppl_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE lin_upp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   ASSIGN
   globforetag = globforetag2
   bestoff = bestoff2
   vald_lev = vald_lev2
   kalkrow = kalkrow2
   valaonr =  valaonr2  
   valomrade = valomrade2
   priset =   priset2   
   detvar =   detvar2   
   mailvar =  mailvar2  
   edivar =   edivar2
   alla = alla2
   datvar = datvar2
   delbest = delbest2
   epostvar = epostvar2.  
   FIND FIRST skapa_mtrl NO-LOCK NO-ERROR. 
   
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR.                                                      
   
   str="=====". 
   str1 ="*****".  
   str0 = "-----".     
   
   RUN huvud_UI.   
      
   IF musz = FALSE THEN RUN klar_UI.
   RUN skapa_UI.   
   RUN summa_UI.   
   RUN skicka_UI.
   /* är stoppat i skicka_UI
   IF namndb() = "UTBI" THEN RETURN.
   IF globforetag = "VAST"  OR globforetag = "BORL" OR globforetag = "GRAN" OR globforetag = "SUND" OR globforetag = "SNAT" THEN DO: 
      /*Skickar beställning med FTP*/

      RUN skicka_UI.
   END.
   */
   musz2 = musz.
END PROCEDURE.

PROCEDURE skapalistaah_UI.
   DEFINE INPUT PARAMETER globforetag2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER epostvar2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bestoff2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vald_lev2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER kalkrow2 AS ROWID NO-UNDO.
   DEFINE INPUT PARAMETER valaonr2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER detvar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER mailvar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER edivar2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER priset2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER alla2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER datvar2 AS DATE NO-UNDO.
   DEFINE OUTPUT PARAMETER musz2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR skapa_mtrl.
   DEFINE INPUT PARAMETER TABLE FOR trp_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEFINE INPUT PARAMETER TABLE FOR kon_val.
   DEFINE INPUT PARAMETER delbest2 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddftptemp.
   EMPTY TEMP-TABLE mtrl_temp NO-ERROR. 
   EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE uppl_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE lin_upp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   ASSIGN
   globforetag = globforetag2
   bestoff = bestoff2
   vald_lev = vald_lev2
   kalkrow = kalkrow2
   valaonr =  valaonr2  
   valomrade = valomrade2
   priset =   priset2   
   detvar =   detvar2   
   mailvar =  mailvar2  
   edivar =   edivar2
   alla = alla2
   datvar = datvar2
   delbest = delbest2
   epostvar = epostvar2.  
   FIND FIRST skapa_mtrl NO-LOCK NO-ERROR. 
   
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR.                                                      
   
   str="=====". 
   str1 ="*****".  
   str0 = "-----".     
   
   RUN huvudah_UI.   
      
   IF musz = FALSE THEN RUN klarah_UI.
   /* Inget byggprotokoll till Ahlsell tills vidare Göran Trot 20090416
   RUN skapa_UI.   
   RUN summa_UI.   */
   RUN skickaah_UI.
   /*
   IF namndb() = "UTBI" THEN RETURN.
   IF globforetag = "GRAN" THEN DO:     
      RUN skickaah_UI.
   END.
   */
   musz2 = musz.
END PROCEDURE.


PROCEDURE skicka_UI :
   IF namndb() = "UTBI" THEN RETURN.
   FIND FIRST skapa_mtrl NO-ERROR.
   prognamn = SESSION:TEMP-DIRECTORY.       
   IF globforetag = "GRAN" THEN DO:
      prognamn = "d:\elpool\delad\pro9s\export\onninen\". 
      prognamn3 = "d:\elpool\delad\pro9s\export\onninenkopia\". 
      prognamn3 = prognamn3 + STRING(skapa_mtrl.bestnr) + ".guru".     
   END.
   IF globforetag = "VAST"  THEN DO:
      prognamn3 = "E:\delad\pro9\wrk\bestkopia\" + STRING(skapa_mtrl.bestnr) + ".guru" + STRING(TODAY,"999999") + string(TIME).     
   END.
   prognamn = prognamn + STRING(skapa_mtrl.bestnr) + ".guru".     
   prognamn2 = STRING(skapa_mtrl.bestnr) + ".guru".                                    
   
   OUTPUT TO VALUE(prognamn).
   FOR EACH tidut:                                                              
      PUT UNFORMATTED                                                           
      TRIM(tidut.UT) + CHR(10).                                                 
   END.                                                                         
   OUTPUT CLOSE.
   IF globforetag = "GRAN" THEN DO:
      OS-COPY VALUE(prognamn) VALUE(prognamn3).
   END.
   IF globforetag = "VAST"  THEN DO:   
      OS-COPY VALUE(prognamn) VALUE(prognamn3).
   END.
   
   IF globforetag = "VAST" OR globforetag = "BORL" OR globforetag = "SUND" OR globforetag = "SNAT" THEN DO: 
      IF globforetag = "VAST"  OR globforetag = "CBORL"  THEN DO: 
         /*Skickar beställning med FTP*/
         /*adress = ftp.elma.fi användare = vfabftp lösen =0ms2jpNJ*/
         RUN FTPFILE.P (INPUT "vfabftp@ftp.elma.fi", 
                        INPUT "0ms2jpNJ", 
                        INPUT TRUE, 
                        INPUT 1,
                        INPUT prognamn, 
                        INPUT "out/all.invoices/data/" + prognamn2,
                        INPUT "ftpproxy.vattenfall.se", OUTPUT TABLE felmeddftptemp).                     
         OUTPUT TO VALUE(prognamn) APPEND.
         FOR EACH felmeddftptemp:
            PUT UNFORMATTED
            TRIM(felmeddftptemp.FELMEDD) + CHR(10).      
         END.
         OUTPUT CLOSE.
      END.
      ELSE IF globforetag = "SUND" OR globforetag = "SNAT"  THEN DO: 
         /*Skickar beställning med FTP*/
         RUN FTPFILE.P (INPUT "vfabftp", 
                        INPUT "0ms2jpNJ", 
                        INPUT TRUE, 
                        INPUT 1,
                        INPUT prognamn, 
                        INPUT "out/all.invoices/data/" + prognamn2,
                        INPUT "ftp.elma.fi", OUTPUT TABLE felmeddftptemp).                     
         OUTPUT TO VALUE(prognamn) APPEND.
         FOR EACH felmeddftptemp:
            PUT UNFORMATTED
            TRIM(felmeddftptemp.FELMEDD) + CHR(10).      
         END.
         OUTPUT CLOSE.
      END.
   END.
   
                     
END PROCEDURE.

PROCEDURE skickaah_UI :
   IF namndb() = "UTBI" THEN RETURN.  
   FIND FIRST skapa_mtrl NO-ERROR.
   prognamn = SESSION:TEMP-DIRECTORY.       
   IF globforetag = "GRAN" THEN DO:
      prognamn = "d:\elpool\delad\pro9s\export\ahlsell\". 
      prognamn3 = "d:\elpool\delad\pro9s\export\ahlsellkopia\". 
      prognamn3 = prognamn3 + STRING(skapa_mtrl.bestnr) + ".guru".     
   END.
   
   prognamn = prognamn + STRING(skapa_mtrl.bestnr) + ".guru".     
   prognamn2 = STRING(skapa_mtrl.bestnr) + ".guru".                                    
   
   OUTPUT TO VALUE(prognamn).
   FOR EACH tidut:                                                              
      PUT UNFORMATTED                                                           
      TRIM(tidut.UT) + CHR(10).                                                 
   END.                                                                         
   OUTPUT CLOSE.
   IF globforetag = "GRAN" THEN DO:
      OS-COPY VALUE(prognamn) VALUE(prognamn3).
   END.
   IF namndb() = "UTBI" THEN RETURN.
   
END PROCEDURE.


PROCEDURE anmark_UI :
   DEFINE INPUT PARAMETER anmark AS INTEGER NO-UNDO.
   IF anmark = 1 THEN DO:                  
      CREATE tidut.
      ASSIGN                  
      SUBSTRING(tidut.UT,12) = SUBSTRING(edtext,ednum,edtecken).
   END.  
   ELSE IF anmark = 2 THEN DO:           
      CREATE tidut.
      ASSIGN            
      SUBSTRING(tidut.UT,12) = tidtext.
   END.   
   ELSE IF anmark = 3 THEN DO:           
      CREATE tidut.
      ASSIGN           
      SUBSTRING(tidut.UT,12) = SUBSTRING(edtext,1 + ednum2 * edtecken,edtecken).
   END.                         
END PROCEDURE.
 
PROCEDURE depa2_UI :

   {DEPA2TRP.I}
END PROCEDURE.

PROCEDURE depa3_UI :

   {DEPA3TRP.I}
END PROCEDURE.

PROCEDURE depa_UI :

   {DEPATRP.I} 
END PROCEDURE.


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ett_UI WINDOW-2 
PROCEDURE ett_UI :

   /*ETTTRP.I*/  
   {ETTTRP.I}
END PROCEDURE.

PROCEDURE huvud_UI :

     /*HUVUD*/ 
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO: 
         FIND FIRST skapa_mtrl NO-LOCK NO-ERROR.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "<Order>".
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "<SystemID>GURU</SystemID>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "<Orderhuvud>".
         CREATE tidut.
         IF bestoff = "beställning" THEN DO:
            ASSIGN SUBSTRING(tidut.UT,1) = "<Dokumenttyp>Beställning</Dokumenttyp>".
         END.         
         /*
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,1) = "<Ordertyp>"
         SUBSTRING(tidut.UT,11) = "Normal"
         SUBSTRING(tidut.UT,18) = "</Ordertyp>".
         */
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,1) = "<Datum>"
         SUBSTRING(tidut.UT,8) = STRING(TODAY,"99-99-99") + "</Datum>".         
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,1) = "<Tid>"        
         SUBSTRING(tidut.UT,6) = STRING(TIME,"HH:MM:SS") + "</Tid>".               
         FIND LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR. 
         CREATE tidut.          
         ASSIGN 
         SUBSTRING(tidut.UT,9) = "<Kundnummer>".            
         IF globforetag = "VAST"  THEN DO:
            SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.KUNDNR,"99999") + "</Kundnummer>".
         END.
         ELSE DO:
            SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.KUNDNR,"999999") + "</Kundnummer>".
         END.
         

         IF globforetag = "GKAL" THEN DO:         
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5561827543</Organisationsnr>".
         END.
         ELSE IF globforetag = "SUND" OR globforetag = "SNAT" THEN DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5565027223</Organisationsnr>".
            
         END.
         ELSE IF globforetag = "VAST"  THEN DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5564170800</Organisationsnr>".
         END.
         ELSE IF globforetag = "BORL" THEN DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5560055385</Organisationsnr>".
         END.
         ELSE IF globforetag = "GRAN" THEN DO:            
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5560757287</Organisationsnr>".
         END.
         ELSE DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "</Organisationsnr>".
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Firma>"        
         SUBSTRING(tidut.UT,16) = SUBSTRING(skapa_mtrl.FORE,1,25) + "</Firma>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Gatuadress>"        
         SUBSTRING(tidut.UT,21) = SUBSTRING(skapa_mtrl.L1,1,25) + "</Gatuadress>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Postnummer>".
         IF LENGTH(skapa_mtrl.L2) = 5 THEN        
         SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.L2,"99999") + "</Postnummer>".
         ELSE DO:
            SUBSTRING(tidut.UT,21) = STRING(REPLACE(skapa_mtrl.L2," ",""),"99999") + "</Postnummer>".
            
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Ort>"        
         SUBSTRING(tidut.UT,14) = SUBSTRING(skapa_mtrl.L3,1,20) + "</Ort>".
         /*
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,9) = "<Leveranssätt>"
         SUBSTRING(tidut.UT,23) = "01"
                              Leveranssätt (2 N) 	01	Onninen distribution system
                           	02	Fetching
                           	03	Post
                           	05	Express delivery
                           	06	Van, consignee pay freight
                           	08	Bus
                           	09	Van, Onninen pay freight
                           	11	Air cargo
                           	12	Fetching from other stock
                           	30	Sawing
                           	32	Express-sawing
         SUBSTRING(tidut.UT,9) = "</Leveranssätt>".
         */
         IF skapa_mtrl.KIKONTAKT NE "" THEN DO:
            IF globforetag = "GRAN" OR globforetag = "cELPA" THEN DO:
               /*ES har IB-nummer LEVTRP.KPNR*/
               IF skapa_mtrl.KPNR NE "" THEN DO:
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
                  SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20). 
                  SUBSTRING(tidut.UT,44) = SUBSTRING(skapa_mtrl.KPNR,1,6) + "</Kontaktperson>".
               END.
               ELSE DO:               
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
                  SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20) + "</Kontaktperson>".
               END.
            END.
            ELSE DO:      
               CREATE tidut.
               ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
               SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20) + "</Kontaktperson>".
            END.
         END.
         IF epostvar NE "" THEN DO:         
            CREATE tidut.
            ASSIGN SUBSTRING(tidut.UT,9) = "<e-mail>".
            SUBSTRING(tidut.UT,17) = SUBSTRING(epostvar,1,80) + "</e-mail>".
         END.
          
         CREATE tidut.        
         ASSIGN SUBSTRING(tidut.UT,9) = "<ProjektID>"        
         SUBSTRING(tidut.UT,20) = TRIM(STRING(skapa_mtrl.bestnr))
         + "</ProjektID>".         
         
         /*CREATE tidut.
         IF skapa_mtrl.LEVTID = "normal" OR skapa_mtrl.LEVTID = "snabb" THEN DO:
            ASSIGN SUBSTRING(tidut.UT,9) = "<Leveransdatum>"        
            SUBSTRING(tidut.UT,24) = STRING(skapa_mtrl.LEVTID) + "</Leveransdatum>".
         END.
         ELSE IF skapa_mtrl.LEVTID = "datum" THEN DO:
            ASSIGN SUBSTRING(tidut.UT,9) = "<Leveransdatum>"        
            SUBSTRING(tidut.UT,24) = STRING(skapa_mtrl.DATUM,"99-99-99") + "</Leveransdatum>".
         END.*/
         IF skapa_mtrl.MARK NE "" THEN DO:   
            CREATE tidut.
            ASSIGN SUBSTRING(tidut.UT,9) = "<Marke>"        
            SUBSTRING(tidut.UT,16) = SUBSTRING(skapa_mtrl.MARK,1,20) + "</Marke>".
         END.   
         IF skapa_mtrl.AVIS = TRUE THEN DO: 
            CREATE tidut.         
            ASSIGN SUBSTRING(tidut.UT,9) = "<Avisering>"        
            SUBSTRING(tidut.UT,20) = STRING(skapa_mtrl.AVISPERS)
            + "</Avisering>".
         END.            
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Leveransdatum>"        
         SUBSTRING(tidut.UT,24) = STRING(skapa_mtrl.DATUM,"99-99-99") + "</Leveransdatum>".

         FIND FIRST BEREDNING WHERE ROWID(BEREDNING) = kalkrow NO-LOCK NO-ERROR.
         CREATE tidut.         
         IF globforetag = "GRAN" THEN DO:
            /*enligt Onninen FredrikAleninus 20081218*/
            ASSIGN SUBSTRING(tidut.UT,9) = "<Konto>"        
            SUBSTRING(tidut.UT,16) = BEREDNING.AONR + STRING(BEREDNING.DELNR,"99")
            + "</Konto>".
         END.
         ELSE DO:         
            ASSIGN SUBSTRING(tidut.UT,9) = "<Konto>"        
            SUBSTRING(tidut.UT,16) = BEREDNING.AONR + " " + STRING(BEREDNING.DELNR)
            + "</Konto>".
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Kommentarorderhuvud>".  
         IF skapa_mtrl.KOM NE "" THEN DO:         
            CREATE tidut.         
            SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,1,40).
            IF LENGTH(skapa_mtrl.KOM) > 40 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,41,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 80 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,81,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 120 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,121,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 160 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,161,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 200 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,201,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 240 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,241,40).
            END.

         END.
         
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Kontaktperson inköp:" + STRING(skapa_mtrl.KIKONTAKT).
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Tele:" + STRING(skapa_mtrl.KITELE) +
         " Mobil:" + STRING(skapa_mtrl.KIMOBIL).    
         
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Kontaktperson teknik:" + STRING(skapa_mtrl.KTKONTAKT).
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Tele:" + STRING(skapa_mtrl.KTTELE) +  
         " Mobil:" + STRING(skapa_mtrl.KTMOBIL).        
         IF globforetag = "GRAN" OR globforetag = "cELPA" THEN DO:
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Projektledare:" + STRING(skapa_mtrl.KADR).
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = " Mobil:" + STRING(skapa_mtrl.KORT).        
         END.
         IF epostvar = "" THEN DO:
            IF skapa_mtrl.FAX NE "" THEN DO:
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Orderbekräftelse till faxnr:" + STRING(skapa_mtrl.FAX).
            END.
         END.
         IF globforetag = "VAST"   THEN DO: 
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "får avlämnas utan kvittens" .
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "</Kommentarorderhuvud>".         
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "</Orderhuvud>".                      
      END.
   END.                    
END PROCEDURE.

PROCEDURE huvudah_UI :

     /*HUVUD*/ 
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO: 
         FIND FIRST skapa_mtrl NO-LOCK NO-ERROR.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = '<?xml version="1.0" encoding="ISO-8859-1" ?>'. 
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "<Order>".
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "<SystemID>GURU</SystemID>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "<Orderhuvud>".
         CREATE tidut.
         IF bestoff = "beställning" THEN DO:
            ASSIGN SUBSTRING(tidut.UT,1) = "<Dokumenttyp>Beställning</Dokumenttyp>".
         END.         
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,1) = "<Datum>"
         SUBSTRING(tidut.UT,8) = STRING(TODAY,"99-99-99") + "</Datum>".         
         CREATE tidut. 
         ASSIGN SUBSTRING(tidut.UT,1) = "<Tid>"        
         SUBSTRING(tidut.UT,6) = STRING(TIME,"HH:MM:SS") + "</Tid>".               
         FIND LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR. 
         CREATE tidut.          
         ASSIGN 
         SUBSTRING(tidut.UT,9) = "<Kundnummer>".            
         IF globforetag = "VAST"  THEN DO:
            SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.KUNDNR,"99999") + "</Kundnummer>".
         END.
         ELSE DO:
            SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.KUNDNR,"9999999") + "</Kundnummer>".
         END.
         IF globforetag = "GRAN" THEN DO:            
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "5560757287</Organisationsnr>".
         END.
         ELSE DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,9) = "<Organisationsnr>".
            SUBSTRING(tidut.UT,26) = "</Organisationsnr>".
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Firma>"        
         SUBSTRING(tidut.UT,16) = SUBSTRING(skapa_mtrl.FORE,1,25) + "</Firma>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Gatuadress>"        
         SUBSTRING(tidut.UT,21) = SUBSTRING(skapa_mtrl.L1,1,25) + "</Gatuadress>".
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Postnummer>".
         IF LENGTH(skapa_mtrl.L2) = 5 THEN        
         SUBSTRING(tidut.UT,21) = STRING(skapa_mtrl.L2,"99999") + "</Postnummer>".
         ELSE DO:
            SUBSTRING(tidut.UT,21) = STRING(REPLACE(skapa_mtrl.L2," ",""),"99999") + "</Postnummer>".
            
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Ort>"        
         SUBSTRING(tidut.UT,14) = SUBSTRING(skapa_mtrl.L3,1,20) + "</Ort>".
         IF skapa_mtrl.KIKONTAKT NE "" THEN DO:
            IF globforetag = "GRAN" OR globforetag = "ELPA" THEN DO:
               /*ES har IB-nummer LEVTRP.KPNR*/
               IF skapa_mtrl.KPNR NE "" THEN DO:
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
                  SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20). 
                  SUBSTRING(tidut.UT,44) = SUBSTRING(skapa_mtrl.KPNR,1,6) + "</Kontaktperson>".
               END.
               ELSE DO:               
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
                  SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20) + "</Kontaktperson>".
               END.
            END.
            ELSE DO:      
               CREATE tidut.
               ASSIGN SUBSTRING(tidut.UT,9) = "<Kontaktperson>"        
               SUBSTRING(tidut.UT,24) = SUBSTRING(skapa_mtrl.KIKONTAKT,1,20) + "</Kontaktperson>".
            END.
         END.
         IF epostvar NE "" THEN DO:         
            CREATE tidut.
            ASSIGN SUBSTRING(tidut.UT,9) = "<e-mail>".
            SUBSTRING(tidut.UT,17) = SUBSTRING(epostvar,1,80) + "</e-mail>".
         END.
          
         CREATE tidut.        
         ASSIGN SUBSTRING(tidut.UT,9) = "<Bestallning>"        
         SUBSTRING(tidut.UT,22) = TRIM(STRING(skapa_mtrl.bestnr))
         + "</Bestallning>".         
         IF skapa_mtrl.MARK NE "" THEN DO:   
            CREATE tidut.
            ASSIGN SUBSTRING(tidut.UT,9) = "<Markning>"        
            SUBSTRING(tidut.UT,19) = SUBSTRING(skapa_mtrl.MARK,1,20) + "</Markning>".
         END.   
         IF skapa_mtrl.AVIS = TRUE THEN DO: 
            CREATE tidut.         
            ASSIGN SUBSTRING(tidut.UT,9) = "<Avisering>"        
            SUBSTRING(tidut.UT,20) = STRING(skapa_mtrl.AVISPERS)
            + "</Avisering>".
         END.            
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Leveransdatum>"        
         SUBSTRING(tidut.UT,24) = STRING(skapa_mtrl.DATUM,"99-99-99") + "</Leveransdatum>".

         FIND FIRST BEREDNING WHERE ROWID(BEREDNING) = kalkrow NO-LOCK NO-ERROR.
         CREATE tidut.         
         IF globforetag = "GRAN" THEN DO:
            /*enligt Onninen FredrikAleninus 20081218*/
            ASSIGN SUBSTRING(tidut.UT,9) = "<Konto>"        
            SUBSTRING(tidut.UT,16) = BEREDNING.AONR + STRING(BEREDNING.DELNR,"99")
            + "</Konto>".
         END.
         ELSE DO:         
            ASSIGN SUBSTRING(tidut.UT,9) = "<Konto>"        
            SUBSTRING(tidut.UT,16) = BEREDNING.AONR + " " + STRING(BEREDNING.DELNR)
            + "</Konto>".
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Kommentar>".  
         IF skapa_mtrl.KOM NE "" THEN DO:         
            CREATE tidut.         
            SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,1,40).
            IF LENGTH(skapa_mtrl.KOM) > 40 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,41,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 80 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,81,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 120 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,121,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 160 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,161,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 200 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,201,40).
            END.
            IF LENGTH(skapa_mtrl.KOM) > 240 THEN DO:               
               CREATE tidut.         
               ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,241,40).
            END.
         END.
         
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Kontaktperson inköp:" + STRING(skapa_mtrl.KIKONTAKT).
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Tele:" + STRING(skapa_mtrl.KITELE) +
         " Mobil:" + STRING(skapa_mtrl.KIMOBIL).    
         
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Kontaktperson teknik:" + STRING(skapa_mtrl.KTKONTAKT).
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Tele:" + STRING(skapa_mtrl.KTTELE) +  
         " Mobil:" + STRING(skapa_mtrl.KTMOBIL).        
         IF globforetag = "GRAN" OR globforetag = "ELPA" THEN DO:
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Projektledare:" + STRING(skapa_mtrl.KADR).
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = " Mobil:" + STRING(skapa_mtrl.KORT).        
         END.
         IF epostvar = "" THEN DO:
            IF skapa_mtrl.FAX NE "" THEN DO:
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Orderbekräftelse till faxnr:" + STRING(skapa_mtrl.FAX).
            END.
         END.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "</Kommentar>".         
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,1) = "</Orderhuvud>".                      
      END.
   END.                    
END PROCEDURE.


PROCEDURE id_UI :
   
  {IDTRP.I}              
END PROCEDURE.

PROCEDURE kanmark_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   IF globforetag = "gran" OR globforetag = "elpa" THEN DO:
      FIND FIRST uppl_temp WHERE uppl_temp.NUM = mtrl_temp2.NUM NO-LOCK NO-ERROR.
      IF AVAILABLE uppl_temp THEN DO:                                    
         ASSIGN
         retvar = 1 
         ednum = 1    
         ednum3 = LENGTH(uppl_temp.ANMARK)      
         retvar = INDEX(uppl_temp.ANMARK,CHR(10),ednum)
         edtecken = 50   
         edtext = uppl_temp.ANMARK
         tidtext = "".   
         IF ednum3 > 1 THEN DO:
            CREATE tidut.
            kant = kant + 1.
            CREATE tidut.
            kant = kant + 1.
            ASSIGN SUBSTRING(tidut.UT,1) = "Anmärkning:".      
            {ANMARK2.I}  
         END.
      END.
   END.
END PROCEDURE.

PROCEDURE klar_UI :

   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "<Orderdata>"        
   mtrlrak = 1.
   mtrlrak2 = 0.
   radrak = 0.
   FOR EACH trp_mtrl WHERE trp_mtrl.LEVKOD = vald_lev AND trp_mtrl.ANTAL > 0: 
      IF trp_mtrl.DBEST NE "RETUR" THEN DO:  
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "<Post " + STRING(mtrlrak) + ">".
         radrak = radrak + 1.      
         CREATE tidut.
         IF SUBSTRING(trp_mtrl.ENR,1,1) = "E" THEN DO:
            ASSIGN 
            SUBSTRING(tidut.UT,9) = "<Artikelnr>" + STRING(RIGHT-TRIM(trp_mtrl.ENR)) + "</Artikelnr>".               
         END.
         ELSE DO:
            ASSIGN 
            SUBSTRING(tidut.UT,9) = "<Artikelnr>" + "E" + STRING(RIGHT-TRIM(trp_mtrl.ENR)) + "</Artikelnr>".               
         END.
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Beskrivning>" +        
         STRING(RIGHT-TRIM(trp_mtrl.BENAMNING)) + "</Beskrivning>". 
         radrak = radrak + 1.     
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Enhet>" + STRING(RIGHT-TRIM(trp_mtrl.ENHET)) + "</Enhet>". 
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Antal>" + TRIM(STRING(trp_mtrl.ANTAL))
         + "</Antal>".
         mtrlrak2 = mtrlrak2 + trp_mtrl.ANTAL.
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Pris>" + RIGHT-TRIM(STRING(trp_mtrl.OPRIS))
         + "</Pris>".
         radrak = radrak + 1.         
         /*
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Radkommentar> + RIGHT-TRIM(STRING(trp_mtrl.OPRIS))
         + "</Radkommentar>".
         radrak = radrak + 1.         
         */
         /*
         IF globforetag = "ELPA" OR globforetag = "SUND" OR globforetag = "SNAT" THEN DO:
            FIND FIRST BEREDNING WHERE ROWID(BEREDNING) = kalkrow NO-LOCK NO-ERROR.            
            IF BEREDNING.AONR NE ? THEN DO:               
               FIND FIRST AONRKONTKOD WHERE AONRKONTKOD.AONR = BEREDNING.AONR AND 
               AONRKONTKOD.DELNR = BEREDNING.DELNR NO-LOCK NO-ERROR.
               IF AVAILABLE AONRKONTKOD THEN DO:
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<kontosträng1>" + AONRKONTKOD.K1
                  + "</kontosträng1>".
                  radrak = radrak + 1.
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<kontosträng2>" + AONRKONTKOD.K2
                  + "</kontosträng2>".
                  radrak = radrak + 1.
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<kontosträng3>" + AONRKONTKOD.K3
                  + "</kontosträng3>".
                  radrak = radrak + 1.
                  CREATE tidut.
                  ASSIGN SUBSTRING(tidut.UT,9) = "<kontosträng4>" + AONRKONTKOD.K4 + AONRKONTKOD.K5
                  + "</kontosträng4>".
                  radrak = radrak + 1.                             
               END.   
            END.
         END.
         */
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "</Post " + STRING(mtrlrak) + ">".
         radrak = radrak + 1.
         radrak = radrak + 1.
         mtrlrak = mtrlrak + 1.
      END.      
   END.   
   mtrlrak = mtrlrak - 1.  
   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "</Orderdata>".
   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "<Checksumma>" + STRING(mtrlrak + mtrlrak2) 
   + "</Checksumma>".
     
END PROCEDURE.

PROCEDURE klarah_UI :

   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "<Orderdata>"        
   mtrlrak = 1.
   mtrlrak2 = 0.
   radrak = 0.
   FOR EACH trp_mtrl WHERE trp_mtrl.LEVKOD = vald_lev AND trp_mtrl.ANTAL > 0: 
      IF trp_mtrl.DBEST NE "RETUR" THEN DO:  
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "<Mtrl>".
         radrak = radrak + 1.      
         CREATE tidut.
         IF SUBSTRING(trp_mtrl.ENR,1,1) = "E" THEN DO:
            ASSIGN 
            SUBSTRING(tidut.UT,9) = "<Artikelnr>" + STRING(RIGHT-TRIM(SUBSTRING(trp_mtrl.ENR,2))) + "</Artikelnr>".               
         END.
         ELSE DO:
            ASSIGN 
            SUBSTRING(tidut.UT,9) = "<Artikelnr>" + STRING(RIGHT-TRIM(trp_mtrl.ENR)) + "</Artikelnr>".               
         END.
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Beskrivning>" +        
         STRING(RIGHT-TRIM(trp_mtrl.BENAMNING)) + "</Beskrivning>". 
         radrak = radrak + 1.     
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Enhet>" + STRING(RIGHT-TRIM(trp_mtrl.ENHET)) + "</Enhet>". 
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Antal>" + TRIM(STRING(trp_mtrl.ANTAL))
         + "</Antal>".
         mtrlrak2 = mtrlrak2 + trp_mtrl.ANTAL.
         radrak = radrak + 1.
         CREATE tidut.
         ASSIGN SUBSTRING(tidut.UT,9) = "<Pris>" + RIGHT-TRIM(STRING(trp_mtrl.OPRIS))
         + "</Pris>".
         radrak = radrak + 1.         
         
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "</Mtrl>".
         radrak = radrak + 1.
         radrak = radrak + 1.
         mtrlrak = mtrlrak + 1.
      END.      
   END.   
   mtrlrak = mtrlrak - 1.  
   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "</Orderdata>".
   /*CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "<Checksumma>" + STRING(mtrlrak + mtrlrak2) 
   + "</Checksumma>".*/
   /*ingen packningsbeskrivning tills vidare Göran Trot Ahlsell. Avslut direkt istället*/
   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "</Order>".
     
END PROCEDURE.


PROCEDURE linor_UI :
  
   {LINORTRP.I}  
END PROCEDURE.

PROCEDURE materiel_UI :
  
   CREATE tidut.
   IF SUBSTRING(mtrlbuff.ENR,1,1) = "E" THEN DO:         
      SUBSTRING(tidut.UT,1) = mtrlbuff.ENR.
   END.
   ELSE DO:      
      SUBSTRING(tidut.UT,1) = "E" + mtrlbuff.ENR.
   END.     
   ASSIGN
   SUBSTRING(tidut.UT,13) = SUBSTRING(mtrlbuff.BENAMNING,1,35)
   SUBSTRING(tidut.UT,49) = mtrlbuff.ENHET
   SUBSTRING(tidut.UT,55) = STRING(mtrlbuff.ANTAL,">>>>9").       
   IF numsok = FALSE THEN DO:
      FOR EACH mtrl_temp WHERE mtrl_temp.XKORD = mtrlbuff.XKORD AND
      mtrl_temp.ENR = mtrlbuff.ENR AND mtrl_temp.LEVKOD = mtrlbuff.LEVKOD:
         IF mtrl_temp.MTRLTEXT NE "" THEN DO:
            anmlangd = LENGTH(mtrl_temp.MTRLTEXT).
            CREATE tidut.         
            ASSIGN 
            SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,1,60).
            tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
            anmlangd = anmlangd - 60.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,61,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,121,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,181,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.                              
         END.   
      END.
   END.
   ELSE DO:
      FOR EACH mtrl_temp WHERE mtrl_temp.NUM = mtrlbuff.NUM AND
      mtrl_temp.ENR = mtrlbuff.ENR AND mtrl_temp.LEVKOD = mtrlbuff.LEVKOD:
         IF mtrl_temp.MTRLTEXT NE "" THEN DO:
            anmlangd = LENGTH(mtrl_temp.MTRLTEXT).
            CREATE tidut.         
            ASSIGN 
            SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,1,60).
            tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
            anmlangd = anmlangd - 60.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,61,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,121,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,1) = "Text:" + SUBSTRING(mtrl_temp.MTRLTEXT,181,60).
               tidut.UT = REPLACE(tidut.UT,CHR(10)," ").
               anmlangd = anmlangd - 60.
            END.
         END.   
      END.
   END.       
END PROCEDURE.
 
PROCEDURE nedepa2_UI :
 
   {NEDEPA2.I}
END PROCEDURE.

PROCEDURE nedepa3_UI :
 
   {NEDEPA3.I}
END PROCEDURE.

PROCEDURE nedepa_UI :
 
   {NEDEPA.I}
END PROCEDURE.


PROCEDURE rubrik_UI :
   
   CREATE tidut.      
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                     
   /*SUBSTRING(tidut.UT,49) = "NETTOPRIS"*/         
   SUBSTRING(tidut.UT,49) = "ENHET"
   SUBSTRING(tidut.UT,55) = "ANTAL".
   /*SUBSTRING(tidut.UT,71) = "SUMMA".*/           
   CREATE tidut.         
END PROCEDURE.
 
PROCEDURE skapa_UI :
  
   CREATE tidut. 
   ASSIGN SUBSTRING(tidut.UT,1) = "<Packningsbeskrivning>".
   IF globforetag = "GKAL" THEN musz = musz.
   ELSE DO:   
      IF detvar = TRUE THEN DO:        
         {SKAPATRP.I}         
      END.   
   END.
END PROCEDURE.
 
PROCEDURE skydd_UI :
/*
   {SKYDDTRP.I}
   */
END PROCEDURE.

PROCEDURE summa_UI :
 
   IF globforetag = "GKAL" THEN musz = musz.
   ELSE DO:   
      IF detvar = TRUE THEN DO:
         {SUMMATRP.I}      
      END.   
   END.
   CREATE tidut. 
   ASSIGN SUBSTRING(tidut.UT,1) = "</Packningsbeskrivning>".
   CREATE tidut.
   ASSIGN SUBSTRING(tidut.UT,1) = "</Order>".
END PROCEDURE.
 
PROCEDURE tva_UI :

   {TVATRP.I}
END PROCEDURE.
 
PROCEDURE upplag_UI :
   DEFINE VARIABLE nyanm AS CHARACTER NO-UNDO.
   IF AVAILABLE BERUPP THEN DO:
      IF INDEX(BERUPP.ANMARK,"$") > 0 THEN nyanm = SUBSTRING(BERUPP.ANMARK,1,INDEX(BERUPP.ANMARK,"$") - 1).
      ELSE nyanm = BERUPP.ANMARK.  
      ASSIGN
      retvar = 1
      ednum = 1
      ednum3 = LENGTH(nyanm)
      retvar = INDEX(nyanm,CHR(10),ednum)
      edtecken = 50
      edtext = nyanm
      tidtext = "".  
      {ANMARK2.I}                             
   END.   
END PROCEDURE.







PROCEDURE kskrubr_UI:
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "Ansl.don"
   SUBSTRING(tidut.UT,30) = "E-nummer"
   SUBSTRING(tidut.UT,40) = "Nollklämma"
   SUBSTRING(tidut.UT,55) = "Säkring"
   SUBSTRING(tidut.UT,65) = "Koppl.typ".
   CREATE tidut.
   kant = kant + 1.
   skapkab = 1. 
   FOR EACH BERVAL WHERE BERVAL.AONR = valaonr
   AND BERVAL.OMRADE = valomrade AND 
   BERVAL.NUM = uppl_temp.NUM NO-LOCK BY BERVAL.SKAPNUM:                        
       IF BERVAL.F2 NE "" THEN DO:                        
          ASSIGN                  
          SUBSTRING(tidut.UT,1) = STRING(skapkab)
          SUBSTRING(tidut.UT,10) = TRIM(BERVAL.F2)
          SUBSTRING(tidut.UT,20) = TRIM(BERVAL.F3).
          FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
          AND MTRLBER.F2 = BERVAL.F3 AND 
          MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
          IF AVAILABLE MTRLBER THEN DO:
             SUBSTRING(tidut.UT,30) = MTRLBER.ENR.
             IF MTRLBER.TYPBER = TRUE THEN DO:
                SUBSTRING(tidut.UT,65) = STRING(BERVAL.TYP).
             END.
          END.                           
          ASSIGN
          SUBSTRING(tidut.UT,40) = TRIM(BERVAL.F4)
          SUBSTRING(tidut.UT,55) = TRIM(BERVAL.F5).
          skapkab = skapkab + 1.
          CREATE tidut.
          kant = kant + 1.
       END.
    END.
END PROCEDURE.

PROCEDURE mstnrubr_UI:
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "HSP-förd"
   SUBSTRING(tidut.UT,30) = "LSP-förd"
   SUBSTRING(tidut.UT,40) = "E-nummer"
   SUBSTRING(tidut.UT,55) = "Säkring" .
   CREATE tidut.
   kant = kant + 1.
   skapkab = 1. 
   FOR EACH BERVAL WHERE BERVAL.AONR = valaonr
   AND BERVAL.OMRADE = valomrade AND 
   BERVAL.NUM = uppl_temp.NUM NO-LOCK BY BERVAL.SKAPNUM:                        
       IF BERVAL.F5 NE "" THEN DO:                        
          ASSIGN                  
          SUBSTRING(tidut.UT,1) = STRING(skapkab)
          SUBSTRING(tidut.UT,10) = TRIM(BERVAL.F5)
          SUBSTRING(tidut.UT,20) = TRIM(BERVAL.F2)
          SUBSTRING(tidut.UT,30) = TRIM(BERVAL.F3).
         
          IF BERVAL.F2 NE "" THEN DO:
              FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
              AND MTRLBER.F1 = BERVAL.F2 AND 
              MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
              IF AVAILABLE MTRLBER THEN DO:
                 SUBSTRING(tidut.UT,40) = MTRLBER.ENR.
              END.                           
          END.
          ELSE IF BERVAL.F3 NE "" THEN DO:
              FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
              AND MTRLBER.F2 = BERVAL.F3 AND 
              MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
              IF AVAILABLE MTRLBER THEN DO:
                 SUBSTRING(tidut.UT,40) = MTRLBER.ENR.
              END.                           
          END.
          SUBSTRING(tidut.UT,55) = TRIM(BERVAL.F4).
          skapkab = skapkab + 1.
          CREATE tidut.
          kant = kant + 1.
       END.
    END.
END PROCEDURE.


