/*IMPMTRLSKVT2.P*/
DEFINE TEMP-TABLE tidin   
   FIELD ENR                AS CHARACTER 
   FIELD BENAMNING          AS CHARACTER 
   FIELD ENHET              AS CHARACTER
   FIELD BPRIS              AS CHARACTER
   FIELD NPRIS              AS CHARACTER
   INDEX ENR IS PRIMARY ENR.

DEFINE TEMP-TABLE tidin2   
   FIELD ENR                AS CHARACTER 
   FIELD BENAMNING          AS CHARACTER 
   FIELD ENHET              AS CHARACTER
   FIELD BPRIS              AS DECIMAL
   FIELD NPRIS              AS DECIMAL
   INDEX ENR IS PRIMARY ENR.

DEFINE TEMP-TABLE felmex   
   FIELD ENR                AS CHARACTER 
   FIELD BENAMNING          AS CHARACTER 
   FIELD ENHET              AS CHARACTER
   FIELD BPRIS              AS DECIMAL
   FIELD NPRIS              AS DECIMAL
   INDEX ENR IS PRIMARY ENR.
{TIDUTTT.I}

DEFINE INPUT PARAMETER TABLE FOR tidin.
DEFINE INPUT PARAMETER leverant AS CHARACTER NO-UNDO.

DEFINE INPUT PARAMETER mkat AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR felmex.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
EMPTY TEMP-TABLE felmex NO-ERROR. 
FIND FIRST FORETAG NO-LOCK NO-ERROR.
FOR EACH tidin:
   IF FORETAG.FORETAG = "sund" OR FORETAG.FORETAG = "SNAT" OR FORETAG.FORETAG = "ORBI" OR FORETAG.FORETAG = "celpa" THEN DO:
      IF SUBSTRING(tidin.ENR,1,1) NE  "E" THEN tidin.ENR = "E" + tidin.ENR.
   END.
   ELSE IF SUBSTRING(tidin.ENR,1,1) = "E" THEN tidin.ENR = SUBSTRING(tidin.ENR,2).
   
   /*tidin.ENR  = REPLACE(tidin.ENR,"E","").                                     */
   tidin.ENR = REPLACE(tidin.ENR," ","").   
   tidin.BPRIS = REPLACE(tidin.BPRIS,",",".").   
   tidin.BPRIS = REPLACE(tidin.BPRIS," ","").   
   tidin.NPRIS = REPLACE(tidin.NPRIS,",",".").   
   tidin.NPRIS = REPLACE(tidin.NPRIS," ","").   
END.
FOR EACH tidin:
   CREATE tidin2.
   ASSIGN
   tidin2.ENR = tidin.ENR .
   tidin2.BENAMNING = tidin.BENAMNING .
   tidin2.ENHET = tidin.ENHET.
   tidin2.BPRIS = DECIMAL(tidin.BPRIS) NO-ERROR.
   tidin2.NPRIS = DECIMAL(tidin.NPRIS) NO-ERROR.   
   IF ERROR-STATUS:ERROR = TRUE THEN DO:
      IF AVAILABLE tidin2 THEN DO:              
         CREATE felmex.
         BUFFER-COPY tidin2 TO felmex.
         DELETE tidin2.
      END.
      ERROR-STATUS:ERROR = FALSE.
   END.
END.


   

   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = leverant NO-LOCK NO-ERROR.                
   
   OPEN QUERY qmtrl FOR EACH MTRLBER WHERE MTRLBER.LEVKOD = leverant NO-LOCK.
   
   DO TRANSACTION:
      GET FIRST qmtrl NO-LOCK.
      IF AVAILABLE MTRLBER THEN DO:      
         FIND FIRST tidin2 WHERE tidin2.ENR = MTRLBER.ENR  NO-LOCK NO-ERROR.
         IF NOT AVAILABLE tidin2 THEN DO:             
            FIND FIRST tidut WHERE SUBSTRING(tidut.UT,14,11) = MTRLBER.ENR NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidut THEN DO:                              
               CREATE tidut.      
               ASSIGN         
               SUBSTRING(tidut.UT,1) = MTRLBER.KTYPKOD
               SUBSTRING(tidut.UT,14) = MTRLBER.ENR     
               SUBSTRING(tidut.UT,26) = SUBSTRING(MTRLBER.BENAMNING,1,40)                                     
               SUBSTRING(tidut.UT,68) = MTRLBER.ENHET
               SUBSTRING(tidut.UT,225) = "P".
            END.                   
         END.
      END.
   END.   
   REPEAT:
      DO TRANSACTION:
         GET NEXT qmtrl NO-LOCK.
         IF NOT AVAILABLE MTRLBER THEN LEAVE.
         ELSE DO:
            FIND FIRST tidin2 WHERE tidin2.ENR = MTRLBER.ENR  NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidin2 THEN DO:               
               FIND FIRST tidut WHERE 
               SUBSTRING(tidut.UT,14,11) = MTRLBER.ENR NO-LOCK NO-ERROR.
               IF NOT AVAILABLE tidut THEN DO:                              
                  CREATE tidut.      
                  ASSIGN         
                  SUBSTRING(tidut.UT,1) = MTRLBER.KTYPKOD
                  SUBSTRING(tidut.UT,14) = MTRLBER.ENR     
                  SUBSTRING(tidut.UT,26) = SUBSTRING(MTRLBER.BENAMNING,1,40)                                     
                  SUBSTRING(tidut.UT,68) = MTRLBER.ENHET 
                  SUBSTRING(tidut.UT,225) = "P".
               END.   
            END.         
            
         END.
      END.
   END. 

   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   SUBSTRING(tidut.UT,1) = "KABELSKÅP".
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   
   OPEN QUERY skapq FOR EACH BERSKAP WHERE BERSKAP.ENR NE "" AND
   BERSKAP.LEVKOD = leverant NO-LOCK.   
   DO:
      GET FIRST skapq NO-LOCK.
      IF AVAILABLE BERSKAP THEN DO:      
         FIND FIRST tidin2 WHERE tidin2.ENR = BERSKAP.ENR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE tidin2 THEN DO:                                                    
            CREATE tidut.      
            ASSIGN         
            SUBSTRING(tidut.UT,1) = BERSKAP.KTYPKOD + " " + BERSKAP.KOD
            SUBSTRING(tidut.UT,14) = BERSKAP.ENR     
            SUBSTRING(tidut.UT,26) = SUBSTRING(BERSKAP.BENAMNING,1,40)                                     
            SUBSTRING(tidut.UT,68) = BERSKAP.ENHET
            SUBSTRING(tidut.UT,225) = "P".
            
         END.         
      END.
   END.
   REPEAT:
      DO:
         GET NEXT skapq NO-LOCK.
         IF NOT AVAILABLE BERSKAP THEN LEAVE.
         ELSE DO:
            FIND FIRST tidin2 WHERE tidin2.ENR = BERSKAP.ENR  NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidin2 THEN DO:                                                 
               CREATE tidut.      
               ASSIGN         
               SUBSTRING(tidut.UT,1) = BERSKAP.KTYPKOD + " " + BERSKAP.KOD
               SUBSTRING(tidut.UT,14) = BERSKAP.ENR     
               SUBSTRING(tidut.UT,26) = SUBSTRING(BERSKAP.BENAMNING,1,40)                                     
               SUBSTRING(tidut.UT,68) = BERSKAP.ENHET
               SUBSTRING(tidut.UT,225) = "P".
               
            END.
         END.
      END.
   END.  
   CLOSE QUERY skapq.
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   SUBSTRING(tidut.UT,1) = "STOLPAR".
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.   
   SUBSTRING(tidut.UT,225) = "R".
   OPEN QUERY stolpq FOR EACH BERSTOLP WHERE BERSTOLP.STOLPE = TRUE AND
   BERSTOLP.LEVKOD = leverant NO-LOCK.   
   DO:
      GET FIRST stolpq NO-LOCK.
      IF AVAILABLE BERSTOLP THEN DO:      
         FIND FIRST tidin2 WHERE tidin2.ENR = BERSTOLP.ENR  NO-LOCK NO-ERROR.
         IF NOT AVAILABLE tidin2 THEN DO:                                        
            CREATE tidut.      
            ASSIGN         
            SUBSTRING(tidut.UT,1) = ""
            SUBSTRING(tidut.UT,14) = BERSTOLP.ENR     
            SUBSTRING(tidut.UT,26) = SUBSTRING(BERSTOLP.BENAMNING,1,40)                                     
            SUBSTRING(tidut.UT,68) = BERSTOLP.ENHET
            SUBSTRING(tidut.UT,225) = "P".
            
         END.                  
      END.
   END.
   REPEAT:
      DO TRANSACTION:
         GET NEXT stolpq NO-LOCK.
         IF NOT AVAILABLE BERSTOLP THEN LEAVE.
         ELSE DO:
            FIND FIRST tidin2 WHERE tidin2.ENR = BERSTOLP.ENR  NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidin2 THEN DO:                                                  
               CREATE tidut.      
               ASSIGN         
               SUBSTRING(tidut.UT,1) = ""
               SUBSTRING(tidut.UT,14) = BERSTOLP.ENR     
               SUBSTRING(tidut.UT,26) = SUBSTRING(BERSTOLP.BENAMNING,1,40)                                     
               SUBSTRING(tidut.UT,68) = BERSTOLP.ENHET
               SUBSTRING(tidut.UT,225) = "P".
            END.                     
         END.
      END.
   END.
   CLOSE QUERY stolpq.
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   SUBSTRING(tidut.UT,1) = "STATIONER".
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.   
   SUBSTRING(tidut.UT,225) = "R".
   OPEN QUERY stolpq2 FOR EACH BERSTOLP WHERE BERSTOLP.STOLPE = FALSE AND
   BERSTOLP.LEVKOD = leverant NO-LOCK.
   DO :
      GET FIRST stolpq2 NO-LOCK.
      IF AVAILABLE BERSTOLP THEN DO:      
         FIND FIRST tidin2 WHERE tidin2.ENR = BERSTOLP.ENR  NO-LOCK NO-ERROR.
         IF NOT AVAILABLE tidin2 THEN DO:                                        
            
            CREATE tidut.      
            ASSIGN         
            SUBSTRING(tidut.UT,1) = ""
            SUBSTRING(tidut.UT,14) = BERSTOLP.ENR     
            SUBSTRING(tidut.UT,26) = SUBSTRING(BERSTOLP.BENAMNING,1,40)                                     
            SUBSTRING(tidut.UT,68) = BERSTOLP.ENHET
            SUBSTRING(tidut.UT,225) = "P".
         END.                    
      END.
   END.
   REPEAT:
      DO :
         GET NEXT stolpq2 NO-LOCK.
         IF NOT AVAILABLE BERSTOLP THEN LEAVE.
         ELSE DO:
            FIND FIRST tidin2 WHERE tidin2.ENR = BERSTOLP.ENR  NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidin2 THEN DO:                                                
               CREATE tidut.      
               ASSIGN         
               SUBSTRING(tidut.UT,1) = ""
               SUBSTRING(tidut.UT,14) = BERSTOLP.ENR     
               SUBSTRING(tidut.UT,26) = SUBSTRING(BERSTOLP.BENAMNING,1,40)                                     
               SUBSTRING(tidut.UT,68) = BERSTOLP.ENHET
               SUBSTRING(tidut.UT,225) = "P".
            END.            
         END.
      END.
   END.
   CLOSE QUERY stolpq2.
   
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   SUBSTRING(tidut.UT,1) = "ERSÄTTNINGSLISTAN".
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   CREATE tidut.
   SUBSTRING(tidut.UT,225) = "R".
   RUN Utbyt_UI.
   



PROCEDURE Utbyt_UI :
   OPEN QUERY ersq FOR EACH UTBYTESLISTA WHERE UTBYTESLNAMN.UID = 0 AND UTBYTESLISTA.ORGENR NE "" AND
   UTBYTESLISTA.ORGLEVKOD = leverant NO-LOCK BY UTBYTESLNAMN.UID BY UTBYTESLISTA.ORGLEVKOD BY UTBYTESLISTA.ORGENR.
   GET FIRST ersq NO-LOCK.
   DO WHILE AVAILABLE(UTBYTESLISTA):
      FIND FIRST tidin2 WHERE tidin2.ENR = UTBYTESLISTA.ORGENR  NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidin2 THEN DO:                                                    
         FIND FIRST UTBYTESLNAMN WHERE UTBYTESLNAMN.UID = UTBYTESLISTA.UID NO-LOCK NO-ERROR.
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = UTBYTESLNAMN.UNAMN + " Från lev " + UTBYTESLISTA.ORGLEVKOD
         SUBSTRING(tidut.UT,14) = UTBYTESLISTA.ORGENR
         SUBSTRING(tidut.UT,225) = "P".
      END.         
      GET NEXT ersq NO-LOCK. 
   END.
   CLOSE QUERY ersq.
      
   OPEN QUERY ersq2 FOR EACH UTBYTESLISTA WHERE UTBYTESLNAMN.UID = 0 AND UTBYTESLISTA.BYTTILLENR NE "" AND
   UTBYTESLISTA.BYTTILLLEVKOD = leverant NO-LOCK BY UTBYTESLNAMN.UID BY UTBYTESLISTA.BYTTILLLEVKOD BY UTBYTESLISTA.BYTTILLENR.
   GET FIRST ersq2 NO-LOCK.
   DO WHILE AVAILABLE(UTBYTESLISTA):
      FIND FIRST tidin2 WHERE tidin2.ENR = UTBYTESLISTA.BYTTILLENR  NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidin2 THEN DO:
         FIND FIRST UTBYTESLNAMN WHERE UTBYTESLNAMN.UID = UTBYTESLISTA.UID NO-LOCK NO-ERROR.                                                    
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = UTBYTESLNAMN.UNAMN + " Till lev " + UTBYTESLISTA.BYTTILLLEVKOD
         SUBSTRING(tidut.UT,14) = UTBYTESLISTA.BYTTILLENR
         SUBSTRING(tidut.UT,225) = "P".
      END.
      GET NEXT ersq2 NO-LOCK.         
   END.
   
END PROCEDURE.
