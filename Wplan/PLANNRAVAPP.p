/*PLANNRAVAPP.P*/
/* Uför operationer åt PLANNRAVS.W */
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
{REGVAR.I}

{PLANNRTEMP.I}
DEFINE INPUT PARAMETER vart AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER plannrvar AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER artalvar AS INTEGER NO-UNDO.
DEFINE INPUT-OUTPUT PARAMETER okvar AS LOGICAL NO-UNDO.
DEFINE BUFFER planbuff FOR PLANNRTAB.


/*Koll om kopplade aonr*/
IF vart = 1 THEN DO:
   FIND FIRST PLANNRTAB WHERE PLANNRTAB.PLANNR = plannrvar AND 
   PLANNRTAB.ARTAL = artalvar NO-LOCK NO-ERROR.
   IF PLANNRTAB.UPP = TRUE THEN DO:
      FIND FIRST planbuff WHERE planbuff.PLANNR = PLANNRTAB.PLANNR AND
      planbuff.ARTAL = PLANNRTAB.ARTAL - 1 USE-INDEX PLANNR NO-LOCK NO-ERROR.
      IF planbuff.KOPPAO = TRUE THEN DO:  
         OPEN QUERY aoq FOR EACH AONRTAB WHERE 
         AONRTAB.PLANNR = planbuff.PLANNR AND 
         AONRTAB.ARTAL = planbuff.ARTAL NO-LOCK.
         GET FIRST aoq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):
            IF AONRTAB.AONRAVDATUM = 01/01/91 THEN okvar = TRUE.
            ELSE okvar = okvar.
            GET NEXT aoq NO-LOCK.
         END.      
         CLOSE QUERY aoq.          
      END.      
   END.
   IF okvar = FALSE THEN DO:  
      IF PLANNRTAB.KOPPAO = TRUE THEN DO:
         OPEN QUERY aoq FOR EACH AONRTAB WHERE 
         AONRTAB.PLANNR = PLANNRTAB.PLANNR AND 
         AONRTAB.ARTAL = PLANNRTAB.ARTAL NO-LOCK.
         GET FIRST aoq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):
            IF AONRTAB.AONRAVDATUM = 01/01/91 THEN okvar = TRUE.
            ELSE okvar = okvar.
            GET NEXT aoq NO-LOCK.
         END.      
         CLOSE QUERY aoq.      
      END.
   END.    
END.

/*Avsluta plannr*/
IF vart = 2 THEN DO:
   regdatum = TODAY.
   FIND FIRST PLANNRTAB WHERE PLANNRTAB.PLANNR = plannrvar AND 
   PLANNRTAB.ARTAL = artalvar NO-LOCK NO-ERROR.
   IF PLANNRTAB.UPP = TRUE THEN DO :
      DO TRANSACTION:
         FIND FIRST planbuff WHERE planbuff.PLANNR = PLANNRTAB.PLANNR AND
         planbuff.ARTAL = PLANNRTAB.ARTAL - 1 USE-INDEX PLANNR EXCLUSIVE-LOCK NO-ERROR.
         ASSIGN planbuff.PLANNRAVDATUM = regdatum.     
      END.
      RUN true_UI (INPUT planbuff.PLANNR, INPUT planbuff.ARTAL,INPUT FALSE).
      
   END.
   RUN true_UI (INPUT planbuff.PLANNR, INPUT planbuff.ARTAL,INPUT FALSE).
   DO TRANSACTION:
      FIND CURRENT PLANNRTAB EXCLUSIVE-LOCK NO-ERROR. 
      ASSIGN PLANNRTAB.PLANNRAVDATUM = regdatum.  
   END.
  
END.

PROCEDURE true_UI :
   DEFINE INPUT PARAMETER planrvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER artalvar AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER avslut AS LOGICAL NO-UNDO.
   OPEN QUERY kalkq FOR EACH KALKAONR WHERE KALKAONR.PLANNR = planrvar AND
   KALKAONR.ARTAL = artalvar USE-INDEX PLANR NO-LOCK.
   GET FIRST kalkq NO-LOCK.
   DO WHILE AVAILABLE(KALKAONR):
      DO TRANSACTION:
         GET CURRENT kalkq EXCLUSIVE-LOCK.
         ASSIGN      
         KALKAONR.AKTIV = avslut.                  
         FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = KALKAONR.KALKNR
         EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE FASTSPEC THEN DO:
            FASTSPEC.AKTIV = avslut.
         END.
         FIND FIRST KALKSPEC WHERE KALKSPEC.KALKNR = KALKAONR.KALKNR
         EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE KALKSPEC THEN DO:
            KALKSPEC.AKTIV = avslut.      
         END.
      END.
      GET NEXT kalkq NO-LOCK.
   END.
   RELEASE KALKAONR NO-ERROR.
   RELEASE KALKSPEC NO-ERROR.
   RELEASE FASTSPEC NO-ERROR.
   DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
   DEFINE VARIABLE LocalAppServerHandle AS HANDLE NO-UNDO.
   RUN FINNSTABELL.P (INPUT "KALKHUV", OUTPUT bloblog).
   IF bloblog = TRUE THEN DO:
      /*
      RUN KALKBERAPPDS.p PERSISTENT SET LocalAppServerHandle (INPUT "").
      */
      OPEN QUERY kalkaoq FOR EACH KALKAONR WHERE  KALKAONR.PLANNR = planrvar AND
      KALKAONR.ARTAL = artalvar USE-INDEX PLANR NO-LOCK. 
      GET FIRST kalkaoq NO-LOCK.
      DO WHILE AVAILABLE(KALKAONR):
         /*
         RUN kalkaktiv_UI IN LocalAppServerHandle (INPUT KALKAONR.KALKNR, INPUT KALKAONR.AKTIV).
         */
         DO TRANSACTION:
            FIND FIRST KALKHUV WHERE KALKHUV.KALKNR = KALKAONR.KALKNR EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE KALKHUV THEN DO:
               KALKHUV.AKTIV = KALKAONR.AKTIV.
            END.   
         END.
         RELEASE KALKHUV NO-ERROR.
         GET NEXT kalkaoq NO-LOCK.
      END.
      IF VALID-HANDLE(LocalAppServerHandle) THEN DO:
         RUN avsluta_UI IN LocalAppServerHandle.
         DELETE PROCEDURE LocalAppServerHandle.
      END.      
   END.    
END PROCEDURE.
