/*
     Filename: FAKKAPP.P
      Created: 2003.09.19 15:19ELPAO     
     Modified: 
*/

&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{FAKKOTEMP.I}
              
PROCEDURE laddadatum_UI:
   DEFINE OUTPUT PARAMETER fdat AS DATE NO-UNDO.
   DEFINE OUTPUT PARAMETER tdat AS DATE NO-UNDO.
   
   FIND FIRST FAKTBOKP NO-LOCK NO-ERROR.
   IF NOT AVAILABLE FAKTBOKP THEN DO TRANSACTION:
      CREATE FAKTBOKP.
   END.
   ASSIGN
   fdat = FAKTBOKP.FDATUM
   tdat = FAKTBOKP.TDATUM.   
   RELEASE FAKTBOKP NO-ERROR.
END PROCEDURE.

PROCEDURE laddakfmtemp_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR styrkfmtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR faktureringstyptemp.
   DEFINE OUTPUT PARAMETER TABLE FOR kundtyptemp.
   EMPTY TEMP-TABLE styrkfmtemp NO-ERROR. 
   EMPTY TEMP-TABLE faktureringstyptemp NO-ERROR. 
   EMPTY TEMP-TABLE kundtyptemp NO-ERROR. 
   FOR EACH FAKTURERINGSTYP NO-LOCK.
      CREATE faktureringstyptemp.
      BUFFER-COPY FAKTURERINGSTYP TO faktureringstyptemp.      
   END.
   FOR EACH KUNDTYP NO-LOCK.
      CREATE kundtyptemp.
      BUFFER-COPY KUNDTYP TO kundtyptemp.      
   END.
   
   OPEN QUERY kskq FOR EACH STYRKUND NO-LOCK, 
      EACH KUNDTYP WHERE KUNDTYP.KUNDID = STYRKUND.KUNDID NO-LOCK, 
      EACH KUNDFODRAN WHERE KUNDFODRAN.KUNDKONTOID = STYRKUND.KUNDKONTOID NO-LOCK 
      BY KUNDTYP.KUNDTYP BY KUNDFODRAN.KUNDKONTO.
   GET FIRST kskq NO-LOCK.
   DO WHILE AVAILABLE STYRKUND:
      CREATE styrkfmtemp.
      ASSIGN
      styrkfmtemp.STYRVAL = 5
      styrkfmtemp.KUNDID = KUNDTYP.KUNDID
      styrkfmtemp.KUNDKONTOID = KUNDFODRAN.KUNDKONTOID
      styrkfmtemp.KUNDTYP = KUNDTYP.KUNDTYP
      styrkfmtemp.KUNDFODTEXT = KUNDFODRAN.KUNDFODTEXT
      styrkfmtemp.KUNDKONTO = KUNDFODRAN.KUNDKONTO
      styrkfmtemp.STYRREC = RECID(STYRKUND).
      GET NEXT kskq NO-LOCK.
   END.
   CLOSE QUERY kskq.

   OPEN QUERY ksiq FOR EACH STYRINTAKT NO-LOCK, 
      EACH KUNDTYP WHERE KUNDTYP.KUNDID = STYRINTAKT.KUNDID NO-LOCK, 
      EACH FAKTURERINGSTYP WHERE FAKTURERINGSTYP.FAKTTYPID = STYRINTAKT.FAKTTYPID NO-LOCK, 
      EACH MOMSTAB WHERE MOMSTAB.MOMSID = STYRINTAKT.MOMSID NO-LOCK, 
      EACH INTAKTTAB WHERE INTAKTTAB.INTAKTID = STYRINTAKT.INTAKTID NO-LOCK 
      BY KUNDTYP.KUNDTYP BY FAKTURERINGSTYP.FAKTTYPTEXT BY MOMSTAB.MOMSKOD BY INTAKTTAB.INTAKTKONTO.
   GET FIRST ksiq NO-LOCK.
   DO WHILE AVAILABLE STYRINTAKT:
      CREATE styrkfmtemp.
      ASSIGN
      styrkfmtemp.STYRVAL = 6
      styrkfmtemp.KUNDID = KUNDTYP.KUNDID
      styrkfmtemp.FAKTTYPID = FAKTURERINGSTYP.FAKTTYPID
      styrkfmtemp.INTAKTID = INTAKTTAB.INTAKTID
      styrkfmtemp.MOMSID = MOMSTAB.MOMSID
      styrkfmtemp.KUNDTYP = KUNDTYP.KUNDTYP
      styrkfmtemp.FAKTTYPTEXT = FAKTURERINGSTYP.FAKTTYPTEXT
      styrkfmtemp.MOMSKOD = MOMSTAB.MOMSKOD
      styrkfmtemp.INTAKTKONTO = INTAKTTAB.INTAKTKONTO
      styrkfmtemp.STYRREC = RECID(STYRINTAKT).
      GET NEXT ksiq NO-LOCK.
   END.
   CLOSE QUERY ksiq.

   OPEN QUERY ksmtq FOR EACH STYRMOT NO-LOCK, 
      EACH KUNDTYP WHERE KUNDTYP.KUNDID = STYRMOT.KUNDID NO-LOCK, 
      EACH MOTPART WHERE MOTPART.MOTPARTID = STYRMOT.MOTPARTID NO-LOCK 
      BY KUNDTYP.KUNDTYP BY MOTPART.MOTPART.
   GET FIRST ksmtq NO-LOCK.
   DO WHILE AVAILABLE STYRMOT:
      CREATE styrkfmtemp.
      ASSIGN
      styrkfmtemp.STYRVAL = 7
      styrkfmtemp.KUNDID = KUNDTYP.KUNDID
      styrkfmtemp.MOTPARTID = MOTPART.MOTPARTID
      styrkfmtemp.KUNDTYP = KUNDTYP.KUNDTYP
      styrkfmtemp.MOTPART = MOTPART.MOTPART
      styrkfmtemp.STYRREC = RECID(STYRMOT).
      GET NEXT ksmtq NO-LOCK.
   END.
   CLOSE QUERY ksmtq.

   OPEN QUERY ksmsq FOR EACH STYRMOMS NO-LOCK, 
      EACH KUNDTYP WHERE KUNDTYP.KUNDID = STYRMOMS.KUNDID NO-LOCK, 
      EACH FAKTURERINGSTYP WHERE FAKTURERINGSTYP.FAKTTYPID = STYRMOMS.FAKTTYPID NO-LOCK, 
      EACH MOMSTAB WHERE MOMSTAB.MOMSID = STYRMOMS.MOMSID NO-LOCK 
      BY KUNDTYP.KUNDTYP BY FAKTURERINGSTYP.FAKTTYPTEXT BY MOMSTAB.MOMSKOD.
   GET FIRST ksmsq NO-LOCK.
   DO WHILE AVAILABLE STYRMOMS:
      CREATE styrkfmtemp.
      ASSIGN
      styrkfmtemp.STYRVAL = 8
      styrkfmtemp.KUNDID = KUNDTYP.KUNDID
      styrkfmtemp.FAKTTYPID = FAKTURERINGSTYP.FAKTTYPID
      styrkfmtemp.MOMSID = MOMSTAB.MOMSID
      styrkfmtemp.KUNDTYP = KUNDTYP.KUNDTYP
      styrkfmtemp.FAKTTYPTEXT = FAKTURERINGSTYP.FAKTTYPTEXT
      styrkfmtemp.MOMSKOD = MOMSTAB.MOMSKOD
      styrkfmtemp.STYRREC = RECID(STYRMOMS).
      GET NEXT ksmsq NO-LOCK.
   END.
   CLOSE QUERY ksmsq.
END PROCEDURE.

PROCEDURE laddakontotemp_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR kundfodrantemp.
   DEFINE OUTPUT PARAMETER TABLE FOR intakttemp.
   DEFINE OUTPUT PARAMETER TABLE FOR motparttemp.
   DEFINE OUTPUT PARAMETER TABLE FOR momstemp.
   EMPTY TEMP-TABLE kundfodrantemp NO-ERROR. 
   EMPTY TEMP-TABLE intakttemp NO-ERROR. 
   EMPTY TEMP-TABLE motparttemp NO-ERROR. 
   EMPTY TEMP-TABLE momstemp NO-ERROR. 
   FOR EACH KUNDFODRAN WHERE KUNDFODRAN.BORT = FALSE NO-LOCK.
      CREATE kundfodrantemp.
      BUFFER-COPY KUNDFODRAN TO kundfodrantemp.      
   END.
   FOR EACH INTAKTTAB WHERE INTAKTTAB.BORT = FALSE NO-LOCK.
      CREATE intakttemp.
      BUFFER-COPY INTAKTTAB TO intakttemp.      
   END.
   FOR EACH MOTPART WHERE MOTPART.BORT = FALSE NO-LOCK.
      CREATE motparttemp.
      BUFFER-COPY MOTPART TO motparttemp.      
   END.
   FOR EACH MOMSTAB WHERE MOMSTAB.BORT = FALSE NO-LOCK.
      CREATE momstemp.
      BUFFER-COPY MOMSTAB TO momstemp.      
   END.
END PROCEDURE.


PROCEDURE skapakonto_UI :
   DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER valid AS INTEGER NO-UNDO.
   
   IF val = 1 THEN DO TRANSACTION:
      FIND LAST KUNDFODRAN USE-INDEX KUNDKONTOID NO-ERROR.
      IF AVAILABLE KUNDFODRAN THEN valid = KUNDFODRAN.KUNDKONTOID + 1.
      ELSE valid = 1.
      CREATE KUNDFODRAN.
      ASSIGN
      KUNDFODRAN.BORT = FALSE
      KUNDFODRAN.KUNDKONTOID = valid.      
   END.
   ELSE IF val = 2 THEN DO TRANSACTION:
      FIND LAST INTAKTTAB USE-INDEX INTAKTID NO-ERROR.
      IF AVAILABLE INTAKTTAB THEN valid = INTAKTTAB.INTAKTID + 1.
      ELSE valid = 1.
      CREATE INTAKTTAB.
      ASSIGN
      INTAKTTAB.BORT = FALSE
      INTAKTTAB.INTAKTID = valid.      
   END.
   ELSE IF val = 3 THEN DO TRANSACTION:
      FIND LAST MOTPART USE-INDEX MOTPARTID NO-ERROR.
      IF AVAILABLE MOTPART THEN valid = MOTPART.MOTPARTID + 1.
      ELSE valid = 1.
      CREATE MOTPART.
      ASSIGN
      MOTPART.BORT = FALSE
      MOTPART.MOTPARTID = valid.      
   END.
   ELSE IF val = 4 THEN DO TRANSACTION:
      FIND LAST MOMSTAB USE-INDEX MOMSID NO-ERROR.
      IF AVAILABLE MOMSTAB THEN valid = MOMSTAB.MOMSID + 1.
      ELSE valid = 1.
      CREATE MOMSTAB.
      ASSIGN
      MOMSTAB.BORT = FALSE
      MOMSTAB.MOMSID = valid.      
   END.
   RELEASE INTAKTTAB NO-ERROR.
   RELEASE KUNDFODRAN NO-ERROR.
   RELEASE MOTPART NO-ERROR.
   RELEASE MOMSTAB NO-ERROR.
END PROCEDURE.

PROCEDURE sparadatum_UI:
   DEFINE INPUT PARAMETER fdat AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER tdat AS DATE NO-UNDO.
   
   DO TRANSACTION:
      FIND FIRST FAKTBOKP EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE FAKTBOKP THEN DO:
         ASSIGN
         FAKTBOKP.FDATUM = fdat.
         FAKTBOKP.TDATUM = tdat.
      END.
   END.
   RELEASE FAKTBOKP NO-ERROR.
END PROCEDURE.

PROCEDURE sparatemp_UI:
   DEFINE INPUT PARAMETER TABLE FOR kundfodrantemp.
   DEFINE INPUT PARAMETER TABLE FOR intakttemp.
   DEFINE INPUT PARAMETER TABLE FOR motparttemp.
   DEFINE INPUT PARAMETER TABLE FOR momstemp.

   FOR EACH kundfodrantemp NO-LOCK.
      FIND FIRST KUNDFODRAN WHERE KUNDFODRAN.KUNDKONTOID = kundfodrantemp.KUNDKONTOID EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE KUNDFODRAN THEN DO:
         BUFFER-COPY kundfodrantemp TO KUNDFODRAN.
      END.
   END.
   FOR EACH intakttemp NO-LOCK.
      FIND FIRST INTAKTTAB WHERE INTAKTTAB.INTAKTID = intakttemp.INTAKTID EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE INTAKTTAB THEN DO:
         BUFFER-COPY intakttemp TO INTAKTTAB.
      END.
   END.
   FOR EACH motparttemp NO-LOCK.
      FIND FIRST MOTPART WHERE MOTPART.MOTPARTID = motparttemp.MOTPARTID EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE MOTPART THEN DO:
         BUFFER-COPY motparttemp TO MOTPART.
      END.
   END.
   FOR EACH momstemp NO-LOCK.
      FIND FIRST MOMSTAB WHERE MOMSTAB.MOMSID = momstemp.MOMSID EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE MOMSTAB THEN DO:
         BUFFER-COPY momstemp TO MOMSTAB.
      END.
   END.
   IF AVAILABLE KUNDFODRAN THEN RELEASE KUNDFODRAN.
   IF AVAILABLE INTAKTTAB THEN RELEASE INTAKTTAB.
   IF AVAILABLE MOTPART THEN RELEASE MOTPART.
   IF AVAILABLE MOMSTAB THEN RELEASE MOMSTAB.
END PROCEDURE.

PROCEDURE tabortkonto_UI:
   DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER valid AS INTEGER NO-UNDO.
   DO TRANSACTION:
      IF val = 1 THEN DO:
         FIND FIRST KUNDFODRAN WHERE KUNDFODRAN.KUNDKONTOID = valid EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE KUNDFODRAN THEN KUNDFODRAN.BORT = TRUE.
      END.
      ELSE IF val = 2 THEN DO:
         FIND FIRST INTAKTTAB WHERE INTAKTTAB.INTAKTID = valid EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE INTAKTTAB THEN INTAKTTAB.BORT = TRUE.
      END.
      ELSE IF val = 3 THEN DO:
         FIND FIRST MOTPART WHERE MOTPART.MOTPARTID = valid EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE MOTPART THEN MOTPART.BORT = TRUE.      
      END.
      ELSE IF val = 4 THEN DO:
         FIND FIRST MOMSTAB WHERE MOMSTAB.MOMSID = valid EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE MOMSTAB THEN MOMSTAB.BORT = TRUE.
      END.
   END.
END PROCEDURE.

PROCEDURE tabortstyr_UI:
   DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER valrec AS RECID NO-UNDO.
   DO TRANSACTION:
      IF val = 5 THEN DO:
         FIND FIRST STYRKUND WHERE RECID(STYRKUND) = valrec EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE STYRKUND THEN DELETE STYRKUND.
      END.
      ELSE IF val = 6 THEN DO:
         FIND FIRST STYRINTAKT WHERE RECID(STYRINTAKT) = valrec EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE STYRINTAKT THEN DELETE STYRINTAKT.
      END.
      ELSE IF val = 7 THEN DO:
         FIND FIRST STYRMOT WHERE RECID(STYRMOT) = valrec EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE STYRMOT THEN DELETE STYRMOT.
      END.
      ELSE IF val = 8 THEN DO:
         FIND FIRST STYRMOMS WHERE RECID(STYRMOMS) = valrec EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE STYRMOMS THEN DELETE STYRMOMS.
      END.
   END.
END PROCEDURE.


/*********************************** NYSTYR.W *****************************************/

PROCEDURE sparastyr_UI:
   DEFINE INPUT-OUTPUT PARAMETER valrec AS RECID NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR styrkfmtemp.
   DO TRANSACTION:
      IF valrec = ? THEN DO:                                                   
         FIND FIRST styrkfmtemp WHERE styrkfmtemp.STYRVAL < 5 NO-LOCK NO-ERROR.      
         IF AVAILABLE styrkfmtemp THEN DO:
            IF styrkfmtemp.STYRVAL = 1 THEN DO:
               CREATE STYRKUND.
               BUFFER-COPY styrkfmtemp TO STYRKUND.
               valrec = RECID(STYRKUND).            
            END.
            ELSE IF styrkfmtemp.STYRVAL = 2 THEN DO:
               CREATE STYRINTAKT.
               BUFFER-COPY styrkfmtemp TO STYRINTAKT.
               valrec = RECID(STYRINTAKT).            
            END.
            ELSE IF styrkfmtemp.STYRVAL = 3 THEN DO:
               CREATE STYRMOT.
               BUFFER-COPY styrkfmtemp TO STYRMOT.
               valrec = RECID(STYRMOT).            
            END.
            ELSE IF styrkfmtemp.STYRVAL = 4 THEN DO:
               CREATE STYRMOMS.
               BUFFER-COPY styrkfmtemp TO STYRMOMS.
               valrec = RECID(STYRMOMS).            
            END.
            ASSIGN
            styrkfmtemp.STYRVAL = styrkfmtemp.STYRVAL + 4
            styrkfmtemp.STYRREC = valrec.
         END.
         ELSE DO:
            MESSAGE "Funkar inte bra!!".
         END.
      END.
      ELSE DO:
         FIND FIRST styrkfmtemp WHERE styrkfmtemp.STYRREC = valrec NO-LOCK NO-ERROR.      
         IF AVAILABLE styrkfmtemp THEN DO: 
            IF styrkfmtemp.STYRVAL = 5 THEN DO:
               FIND FIRST STYRKUND WHERE RECID(STYRKUND) =  styrkfmtemp.STYRREC EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE STYRKUND THEN DO:
                  BUFFER-COPY styrkfmtemp TO STYRKUND.
               END.
            END.
            ELSE IF styrkfmtemp.STYRVAL = 6 THEN DO:
               FIND FIRST STYRINTAKT WHERE RECID(STYRINTAKT) =  styrkfmtemp.STYRREC EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE STYRINTAKT THEN DO:
                  BUFFER-COPY styrkfmtemp TO STYRINTAKT.
               END.
            END.
            ELSE IF styrkfmtemp.STYRVAL = 7 THEN DO:
               FIND FIRST STYRMOT WHERE RECID(STYRMOT) =  styrkfmtemp.STYRREC EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE STYRMOT THEN DO:
                  BUFFER-COPY styrkfmtemp TO STYRMOT.
               END.
            END.
            ELSE IF styrkfmtemp.STYRVAL = 8 THEN DO:
               FIND FIRST STYRMOMS WHERE RECID(STYRMOMS) =  styrkfmtemp.STYRREC EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE STYRMOMS THEN DO:
                  BUFFER-COPY styrkfmtemp TO STYRMOMS.
               END.
            END.         
         END.
      END.
   END.
   IF AVAILABLE STYRKUND THEN RELEASE STYRKUND.
   IF AVAILABLE STYRINTAKT THEN RELEASE STYRINTAKT.
   IF AVAILABLE STYRMOT THEN RELEASE STYRMOT.
   IF AVAILABLE STYRMOMS THEN RELEASE STYRMOMS.
END PROCEDURE.
