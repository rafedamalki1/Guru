
DEFINE TEMP-TABLE tempberval NO-UNDO LIKE berval.
DEFINE TEMP-TABLE tempberschakt NO-UNDO LIKE berschakt.
DEFINE TEMP-TABLE tempberlinkab NO-UNDO LIKE berlinkab.
DEFINE TEMP-TABLE tempbermtrl NO-UNDO LIKE bermtrl.
DEFINE TEMP-TABLE tempberupp NO-UNDO LIKE berupp.

DEFINE TEMP-TABLE ao-temp NO-UNDO LIKE aonrtab.
DEFINE TEMP-TABLE ptemp NO-UNDO LIKE PERSONALTAB.



/* göra temptable för varje tabell */
FOR EACH berval NO-LOCK:
   CREATE tempberval.
   BUFFER-COPY BERVAL TO tempberval.
END.

FOR EACH berschakt NO-LOCK:
   CREATE tempberschakt.
   BUFFER-COPY BERSCHAKT TO tempberschakt.
END.

FOR EACH berlinkab NO-LOCK:
   CREATE tempberlinkab.
   BUFFER-COPY BERLINKAB TO tempberlinkab.
END.

FOR EACH bermtrl NO-LOCK:
   CREATE tempbermtrl.
   BUFFER-COPY BERMTRL TO tempbermtrl.
END.

FOR EACH berupp NO-LOCK:
   CREATE tempberupp.
   BUFFER-COPY BERUPP TO tempberupp.
END.


/* stoppa in respektive temptable i .xml fil */
DEFINE VARIABLE hBuf AS HANDLE NO-UNDO.
DEFINE VARIABLE dynxml AS HANDLE NO-UNDO.
/*RUN XMLUTDYN.P PERSISTENT SET dynxml.*/
RUN UTXMLDYN.P PERSISTENT SET dynxml.
hBuf = BUFFER tempberval:HANDLE.
RUN xmlutstart_UI IN dynxml (INPUT hbuf,INPUT hBuf:TABLE,INPUT "start", INPUT "FOR EACH ",INPUT "C:\PROTEMP9\testber.xml").
hBuf = BUFFER tempberschakt:HANDLE.
RUN xmlutstart_UI IN dynxml (INPUT hbuf,INPUT hBuf:TABLE ,INPUT "", INPUT "FOR EACH ",INPUT "").
hBuf = BUFFER tempberlinkab:HANDLE.
RUN xmlutstart_UI IN dynxml (INPUT hbuf,INPUT hBuf:TABLE ,INPUT "", INPUT "FOR EACH ",INPUT "").
hBuf = BUFFER tempbermtrl:HANDLE.
RUN xmlutstart_UI IN dynxml (INPUT hbuf,INPUT hBuf:TABLE ,INPUT "", INPUT "FOR EACH ",INPUT "").
hBuf = BUFFER tempberupp:HANDLE.
RUN xmlutstart_UI IN dynxml (INPUT hbuf,INPUT hBuf:TABLE ,INPUT "", INPUT "FOR EACH ",INPUT "").
h
RUN xmlslut_UI IN dynxml.
RUN OPENDOC.P ("C:\PROTEMP9\testber.xml","","",NO).
IF VALID-HANDLE(dynxml) THEN DELETE PROCEDURE dynxml.    


