/*XRENS.P*/
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE aonrrec AS RECID NO-UNDO.
OPEN QUERY Gq FOR EACH godkoll NO-LOCK.
DO TRANSACTION:
   GET FIRST gq EXCLUSIVE-LOCK.
   IF AVAILABLE godkoll THEN DELETE godkoll.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT gq EXCLUSIVE-LOCK.
      IF AVAILABLE godkoll THEN DELETE godkoll.
      ELSE LEAVE.
   END.
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "GODK" WITH FRAME CC.
OUTPUT CLOSE.
OPEN QUERY vq FOR EACH veckoarbav NO-LOCK.
DO TRANSACTION:
   GET FIRST vq EXCLUSIVE-LOCK.
   IF AVAILABLE veckoarbav THEN DELETE veckoarbav.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT vq EXCLUSIVE-LOCK.
      IF AVAILABLE veckoarbav THEN DELETE veckoarbav.
      ELSE LEAVE.
   END.
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "VECK" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY tq FOR EACH TIDREGITAB NO-LOCK.
DO TRANSACTION:
   GET FIRST tq EXCLUSIVE-LOCK.
   IF AVAILABLE TIDREGITAB THEN DELETE TIDREGITAB.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT tq EXCLUSIVE-LOCK.
      IF AVAILABLE TIDREGITAB THEN DELETE TIDREGITAB.
      ELSE LEAVE.
   END.
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "TID" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY sq FOR EACH SUMTID NO-LOCK.
DO TRANSACTION:
   GET FIRST sq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMTID THEN DELETE SUMTID.   
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT sq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMTID THEN DELETE SUMTID.
      ELSE LEAVE.
   END.
END.
OPEN QUERY sdq FOR EACH SUMTIDDAG NO-LOCK.
DO TRANSACTION:
   GET FIRST sdq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMTIDDAG THEN DELETE SUMTIDDAG.   
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT sdq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMTIDDAG THEN DELETE SUMTIDDAG.
      ELSE LEAVE.
   END.
END.
OPEN QUERY sEq FOR EACH SUMEJLON NO-LOCK.
DO TRANSACTION:
   GET FIRST sEq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMEJLON THEN DELETE SUMEJLON.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT sEq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMEJLON THEN DELETE SUMEJLON.
      ELSE LEAVE.
   END.
END.
OPEN QUERY sLq FOR EACH SUMLON NO-LOCK.
DO TRANSACTION:
   GET FIRST sLq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMLON THEN DELETE SUMLON.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT sLq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMLON THEN DELETE SUMLON.
      ELSE LEAVE.
   END.
END.
OPEN QUERY sTq FOR EACH SUMTRAKT NO-LOCK.
DO TRANSACTION:
   GET FIRST sTq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMTRAKT THEN DELETE SUMTRAKT.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT sTq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMTRAKT THEN DELETE SUMTRAKT.
      ELSE LEAVE.
   END.   
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "SUM" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY Kq FOR EACH KALKYL NO-LOCK.
DO TRANSACTION:
   GET FIRST Kq EXCLUSIVE-LOCK.
   IF AVAILABLE KALKYL THEN DELETE KALKYL.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT Kq EXCLUSIVE-LOCK.
      IF AVAILABLE KALKYL THEN DELETE KALKYL.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY KSq FOR EACH KALKSPEC NO-LOCK.
DO TRANSACTION:
   GET FIRST KSq EXCLUSIVE-LOCK.
   IF AVAILABLE KALKSPEC THEN DELETE KALKSPEC.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT KSq EXCLUSIVE-LOCK.
      IF AVAILABLE KALKSPEC THEN DELETE KALKSPEC.
      ELSE LEAVE.
   END.   
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "KALK" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY aq FOR EACH AONRTAB NO-LOCK.
DO TRANSACTION:
   GET FIRST aq EXCLUSIVE-LOCK.
   
   IF AVAILABLE AONRTAB THEN DO:
      OPEN QUERY aonrkq FOR EACH AONRKONT WHERE AONRKONT.AONR = AONRTAB.AONR AND
AONRKONT.DELNR = AONRTAB.DELNR USE-INDEX AONRKONT NO-LOCK.
DO TRANSACTION:       
   GET FIRST aonrkq EXCLUSIVE-LOCK.
   IF AVAILABLE AONRKONT THEN DELETE AONRKONT.    
END.
REPEAT:  
   DO TRANSACTION:
      GET NEXT aonrkq EXCLUSIVE-LOCK.
      IF AVAILABLE AONRKONT THEN DELETE AONRKONT.    
      ELSE LEAVE.      
   END.         
END.
      DELETE AONRTAB.
   END.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT aq EXCLUSIVE-LOCK.

      IF AVAILABLE AONRTAB THEN DO:
               OPEN QUERY aonrkq FOR EACH AONRKONT WHERE AONRKONT.AONR = AONRTAB.AONR AND
      AONRKONT.DELNR = AONRTAB.DELNR USE-INDEX AONRKONT NO-LOCK.
      DO TRANSACTION:       
         GET FIRST aonrkq EXCLUSIVE-LOCK.
         IF AVAILABLE AONRKONT THEN DELETE AONRKONT.    
      END.
      REPEAT:  
         DO TRANSACTION:
            GET NEXT aonrkq EXCLUSIVE-LOCK.
            IF AVAILABLE AONRKONT THEN DELETE AONRKONT.    
            ELSE LEAVE.      
         END.         
      END.
         DELETE AONRTAB.
      END.
      ELSE LEAVE.
   END.   
END.

      
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "AONR" WITH FRAME CC.
OUTPUT CLOSE.
    
OPEN QUERY kostq FOR EACH KOSTREG  NO-LOCK.
DO TRANSACTION:       
   GET FIRST kostq EXCLUSIVE-LOCK.
   IF AVAILABLE KOSTREG THEN DELETE KOSTREG.    
END.
REPEAT:  
   DO TRANSACTION:
      GET NEXT kostq EXCLUSIVE-LOCK.
      IF AVAILABLE KOSTREG THEN DELETE KOSTREG.    
      ELSE LEAVE.            
   END.          
END.      
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "KOST" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY kalspec2q FOR EACH FASTSPEC WHERE USE-INDEX AONR NO-LOCK.
DO TRANSACTION:       
   GET FIRST kalspec2q EXCLUSIVE-LOCK.
   IF AVAILABLE FASTSPEC THEN DO:
      DELETE FASTSPEC.
   END.    
END.
REPEAT:  
   DO TRANSACTION:
      GET NEXT kalspec2q EXCLUSIVE-LOCK.
      IF AVAILABLE FASTSPEC THEN DO:
         DELETE FASTSPEC.
      END.    
      ELSE LEAVE.      
   END.         
END.                                                                
OPEN QUERY fq FOR EACH FAKTPLAN NO-LOCK.
DO TRANSACTION:
   GET FIRST fq EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTPLAN THEN DELETE FAKTPLAN.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT fq EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTPLAN THEN DELETE FAKTPLAN.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f1q FOR EACH FAKTKOST NO-LOCK.
DO TRANSACTION:
   GET FIRST f1q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTKOST THEN DELETE FAKTKOST.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f1q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTKOST THEN DELETE FAKTKOST.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f2q FOR EACH FAKTTID NO-LOCK.
DO TRANSACTION:
   GET FIRST f2q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTTID THEN DELETE FAKTTID.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f2q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTTID THEN DELETE FAKTTID.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f3q FOR EACH FAKTNAMN NO-LOCK.
DO TRANSACTION:
   GET FIRST f3q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTNAMN THEN DELETE FAKTNAMN.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f3q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTNAMN THEN DELETE FAKTNAMN.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f14q FOR EACH FAKTFRIA NO-LOCK.
DO TRANSACTION:
   GET FIRST f14q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTFRIA THEN DELETE FAKTFRIA.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f14q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTFRIA THEN DELETE FAKTFRIA.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f4q FOR EACH FAKTKOLL NO-LOCK.
DO TRANSACTION:
   GET FIRST f4q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTKOLL THEN DELETE FAKTKOLL.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f4q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTKOLL THEN DELETE FAKTKOLL.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f5q FOR EACH FAKTURERAD NO-LOCK.
DO TRANSACTION:
   GET FIRST f5q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTURERAD THEN DELETE FAKTURERAD.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f5q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTURERAD THEN DELETE FAKTURERAD.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f6q FOR EACH FAKTAONR NO-LOCK.
DO TRANSACTION:
   GET FIRST f6q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTAONR THEN DELETE FAKTAONR.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f6q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTAONR THEN DELETE FAKTAONR.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f7q FOR EACH FAKTREGLER NO-LOCK.
DO TRANSACTION:
   GET FIRST f7q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTREGLER THEN DELETE FAKTREGLER.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f7q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTREGLER THEN DELETE FAKTREGLER.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f8q FOR EACH FAKTOVER NO-LOCK.
DO TRANSACTION:
   GET FIRST f8q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTOVER THEN DELETE FAKTOVER.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f8q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTOVER THEN DELETE FAKTOVER.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY f9q FOR EACH FAKTBEF NO-LOCK.
DO TRANSACTION:
   GET FIRST f9q EXCLUSIVE-LOCK.
   IF AVAILABLE FAKTBEF THEN DELETE FAKTBEF.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT f9q EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTBEF THEN DELETE FAKTBEF.
      ELSE LEAVE.
   END.   
END.
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "FAKT" WITH FRAME CC.
OUTPUT CLOSE.

OPEN QUERY bq FOR EACH BETPLANOVR NO-LOCK.
DO TRANSACTION:
   GET FIRST bq EXCLUSIVE-LOCK.
   IF AVAILABLE BETPLANOVR THEN DELETE BETPLANOVR.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT bq EXCLUSIVE-LOCK.
      IF AVAILABLE BETPLANOVR THEN DELETE BETPLANOVR.
      ELSE LEAVE.
   END.   
END.
OPEN QUERY b1q FOR EACH BETPLANSLUT  NO-LOCK.
DO TRANSACTION:
   GET FIRST b1q EXCLUSIVE-LOCK.
   IF AVAILABLE BETPLANSLUT  THEN DELETE BETPLANSLUT .
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT b1q EXCLUSIVE-LOCK.
      IF AVAILABLE BETPLANSLUT  THEN DELETE BETPLANSLUT .
      ELSE LEAVE.
   END.   
END.
OPEN QUERY b2q FOR EACH BETPLANSTART  NO-LOCK.
DO TRANSACTION:
   GET FIRST b2q EXCLUSIVE-LOCK.
   IF AVAILABLE BETPLANSTART  THEN DELETE BETPLANSTART .
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT b2q EXCLUSIVE-LOCK.
      IF AVAILABLE BETPLANSTART  THEN DELETE BETPLANSTART .
      ELSE LEAVE.
   END.   
END.
OPEN QUERY b3q FOR EACH BETAONR  NO-LOCK.
DO TRANSACTION:
   GET FIRST b3q EXCLUSIVE-LOCK.
   IF AVAILABLE BETAONR  THEN DELETE BETAONR .
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT b3q EXCLUSIVE-LOCK.
      IF AVAILABLE BETAONR  THEN DELETE BETAONR .
      ELSE LEAVE.
   END.   
END.
OPEN QUERY b4q FOR EACH BETPLAN  NO-LOCK.
DO TRANSACTION:
   GET FIRST b4q EXCLUSIVE-LOCK.
   IF AVAILABLE BETPLAN  THEN DELETE BETPLAN .
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT b4q EXCLUSIVE-LOCK.
      IF AVAILABLE BETPLAN  THEN DELETE BETPLAN .
      ELSE LEAVE.
   END.   
END.
   OPEN QUERY faktbefq
   FOR EACH FAKTBEF  NO-LOCK.         
   DO TRANSACTION:       
      GET FIRST faktbefq EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTBEF THEN DELETE FAKTBEF.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT faktbefq EXCLUSIVE-LOCK.
         IF AVAILABLE FAKTBEF THEN DELETE FAKTBEF.    
         ELSE LEAVE.      
      END.         
   END.     
   CLOSE QUERY faktbefq. 
   OPEN QUERY faktreglq
   FOR EACH FAKTREGLER  NO-LOCK.         
   DO TRANSACTION:       
      GET FIRST faktreglq EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTREGLER THEN DELETE FAKTREGLER.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT faktreglq EXCLUSIVE-LOCK.
         IF AVAILABLE FAKTREGLER THEN DELETE FAKTREGLER.    
         ELSE LEAVE.      
      END.         
   END.   
   CLOSE QUERY faktreglq.
   OPEN QUERY faktoverq
   FOR EACH FAKTOVER  NO-LOCK.                 
   DO TRANSACTION:       
      GET FIRST faktoverq EXCLUSIVE-LOCK.
      IF AVAILABLE FAKTOVER THEN DELETE FAKTOVER.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT faktoverq EXCLUSIVE-LOCK.
         IF AVAILABLE FAKTOVER THEN DELETE FAKTOVER.    
         ELSE LEAVE.      
      END.         
   END.
   CLOSE QUERY faktoverq. 
   OPEN QUERY faktaonrq
   FOR EACH FAKTAONR  NO-LOCK.   
   DO TRANSACTION:
      GET FIRST faktaonrq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTAONR):            
         DELETE FAKTAONR.         
         GET NEXT faktaonrq EXCLUSIVE-LOCK.
      END.   
   END.
   CLOSE QUERY faktaonrq.    
   OPEN QUERY faktkollq
   FOR EACH FAKTKOLL  NO-LOCK.
   DO TRANSACTION:
      GET FIRST faktkollq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTKOLL):            
         DELETE FAKTKOLL.         
         GET NEXT faktkollq EXCLUSIVE-LOCK.
      END.   
   END.
   CLOSE QUERY faktkollq.                
                                                      
   DO TRANSACTION:            
      OPEN QUERY fnamnq FOR EACH FAKTNAMN 
      NO-LOCK.
      GET FIRST fnamnq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTNAMN):
         DELETE FAKTNAMN. 
         GET NEXT fnamnq EXCLUSIVE-LOCK.
      END. 
   END.   
   DO TRANSACTION:         
      OPEN QUERY faktstartq
      FOR EACH FAKTSTART  NO-LOCK.        
      GET FIRST faktstartq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTSTART):            
         DELETE FAKTSTART.         
         GET NEXT faktstartq EXCLUSIVE-LOCK.
      END.   
   END.
   OPEN QUERY faktuppplanq
   FOR EACH FAKTUPPPLAN  NO-LOCK.        
   DO TRANSACTION:
      GET FIRST faktuppplanq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTUPPPLAN):            
         DELETE FAKTUPPPLAN.         
         GET NEXT faktuppplanq EXCLUSIVE-LOCK.
      END.         
   END.
   OPEN QUERY faktupparbq
   FOR EACH FAKTUPPARB  NO-LOCK.        
   DO TRANSACTION:
      GET FIRST faktupparbq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTUPPARB):            
         DELETE FAKTUPPARB.         
         GET NEXT faktupparbq EXCLUSIVE-LOCK.
      END.         
   END.
   DO TRANSACTION:         
      OPEN QUERY faktavq
      FOR EACH FAKTAVTALAONR  NO-LOCK.        
      GET FIRST faktstartq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTAVTALAONR):            
         DELETE FAKTAVTALAONR.         
         GET NEXT faktavq EXCLUSIVE-LOCK.
      END.   
   END.
   FOR EACH FAKTPRISLISTA :
      DELETE FAKTPRISLISTA.
   END.
   OPEN QUERY kundbefq
   FOR EACH KUNDBEF  NO-LOCK.                  
      DO TRANSACTION:       
         GET FIRST kundbefq EXCLUSIVE-LOCK.
         IF AVAILABLE KUNDBEF THEN DELETE KUNDBEF.    
      END.
      REPEAT:  
         DO TRANSACTION:
            GET NEXT kundbefq EXCLUSIVE-LOCK.
            IF AVAILABLE KUNDBEF THEN DELETE KUNDBEF.    
            ELSE LEAVE.      
         END.         
      END.  
      CLOSE QUERY kundbefq. 
      OPEN QUERY kundregq
      FOR EACH KUNDREGLER  NO-LOCK.                         
      DO TRANSACTION:       
         GET FIRST kundregq EXCLUSIVE-LOCK.
         IF AVAILABLE KUNDREGLER THEN DELETE KUNDREGLER.    
      END.
      REPEAT:  
         DO TRANSACTION:
            GET NEXT kundregq EXCLUSIVE-LOCK.
            IF AVAILABLE KUNDREGLER THEN DELETE KUNDREGLER.    
            ELSE LEAVE.      
         END.         
      END. 
      CLOSE QUERY kundregq. 
      OPEN QUERY kundovq
      FOR EACH KUNDOVER  NO-LOCK.         
      DO TRANSACTION:       
         GET FIRST kundovq EXCLUSIVE-LOCK.
         IF AVAILABLE KUNDOVER THEN DELETE KUNDOVER.    
      END.
      REPEAT:  
         DO TRANSACTION:
            GET NEXT kundovq EXCLUSIVE-LOCK.
            IF AVAILABLE KUNDOVER THEN DELETE KUNDOVER.    
            ELSE LEAVE.      
         END.         
      END.             
      CLOSE QUERY kundovq.
      OPEN QUERY kpq
      FOR EACH KUNDPRISLIST 
      NO-LOCK.         
      DO TRANSACTION:       
         GET FIRST kpq EXCLUSIVE-LOCK.
         IF AVAILABLE KUNDPRISLIST THEN DELETE KUNDPRISLIST.    
      END.
      REPEAT:  
         DO TRANSACTION:
            GET NEXT kpq EXCLUSIVE-LOCK.
            IF AVAILABLE KUNDPRISLIST THEN DELETE KUNDPRISLIST.    
            ELSE LEAVE.      
         END.         
      END.             
      CLOSE QUERY kundovq.                                             
OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "FAKT2" WITH FRAME CC.
OUTPUT CLOSE.
      
      FOR EACH BESTTAB:
         DELETE BESTTAB. 
      END.   
      FOR EACH KUNDBEF EXCLUSIVE-LOCK :
          DELETE KUNDBEF.         
      END.
      
      FOR EACH OMRPASLAG  EXCLUSIVE-LOCK :
         DELETE OMRPASLAG.         
      END.
      FOR EACH OMRADETAB  EXCLUSIVE-LOCK :
         DELETE OMRADETAB.         
      END.
      FOR EACH OMKOSTNADTAB EXCLUSIVE-LOCK:      
         DELETE OMKOSTNADTAB.     
      END.
RUN BortKalkyl_UI

PROCEDURE BortKalkyl_UI :
   DEFINE INPUT  PARAMETER kalknr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER ejbortkalkvar AS LOGICAL NO-UNDO.
   DEFINE VARIABLE felmedd AS CHARACTER NO-UNDO.
   RUN ConKalkyldb_UI.
   /*kalkstopp1*/
  
   RUN KalkylBort_UI IN LocalAppServerHandle (INPUT kalknr, OUTPUT felmedd).
   /*kalkstopp2*/
   IF felmedd = "" THEN.
   ELSE DO:
      MESSAGE felmedd
      VIEW-AS ALERT-BOX.
      ejbortkalkvar = TRUE.
   END.       
   RUN DisConKalkyldb_UI.  
   
END PROCEDURE.  

OUTPUT TO "/u10/guru/rens.txt" APPEND.
DISPLAY "KLAR" WITH FRAME CC.
OUTPUT CLOSE.
RUN 