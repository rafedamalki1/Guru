&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE huvud_UI WINDOW-2 
PROCEDURE huvud_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
     /*HUVUD*/ 
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.
      ELSE DO:
         IF aoval = FALSE THEN DO:   
            IF globforetag = "NORD" OR 
            globforetag = "ELPA" OR globforetag = "ESAN" OR globforetag = "ESMA" OR
            globforetag = "ETA" THEN DO:
               inder = TRUE.           
            END. 
            IF inder = TRUE THEN DO:                                                                
               str = "======.=====.========.=========.========.=========.========.=========.=========.========".
               str2= "----------------------------------------------------------------------------------------".                 
            END.
            ELSE DO:                                                                                    
               str = "======.=====.========.=========.========.=========.========.=========.=========". 
               str2= "-------------------------------------------------------------------------------".
            END.
            CREATE tidut. 
            SUBSTRING(tidut.UT,60) = STRING(TODAY) + " " + STRING(TIME,"HH:MM").
            CREATE tidut.
            CREATE tidut.             
            IF SEL_UPP = "Det.lista Tid-övertid-trakt./ " + gomrk THEN DO:                          
               tidut.UT = "DETALJERAD LISTA TID-ÖVERTID-TRAKTAMENTEN PERIOD".
            END.
            ELSE DO:
               tidut.UT = "TID-ÖVERTID-TRAKTAMENTEN PERIOD".    
            END.   
            IF RAD_PERIOD = 1 THEN DO: 
               SUBSTRING(tidut.UT,50) = STRING(YEAR(bdatum),"9999").
            END.
            IF RAD_PERIOD = 2 THEN DO:
               SUBSTRING(tidut.UT,50) = STRING(bdatum) + " - " + STRING(avdatum).     
            END.     
            CREATE tidut.  
            CREATE tidut.            
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrk) + " :".    
            IF utomr NE "ALLA" THEN DO:
               FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = utomr 
               USE-INDEX OMR NO-LOCK NO-ERROR.
               IF NOT AVAILABLE OMRADETAB THEN  SUBSTRING(tidut.UT,10) = "OMRADETAB SAKNAS".
               ELSE SUBSTRING(tidut.UT,10) = OMRADETAB.NAMN.
            END.
            ELSE DO: 
               SUBSTRING(tidut.UT,10) = utomr.
            END.       
            CREATE tidut.
            CREATE tidut.                                                 
            ASSIGN                 
            SUBSTRING(tidut.UT,14) = "ARB."
            SUBSTRING(tidut.UT,23) = "ARBETS" 
            SUBSTRING(tidut.UT,33) = "ÖVER."  
            SUBSTRING(tidut.UT,42) = "ÖVERTID"   
            SUBSTRING(tidut.UT,52) = "RES."
            SUBSTRING(tidut.UT,61) = "TRAKT."                  
            SUBSTRING(tidut.UT,71) = "LÖNETILL.".         
            IF inder = TRUE THEN             
            ASSIGN SUBSTRING(tidut.UT,81) = "INDIREKT".     
            CREATE tidut.      
            ASSIGN       
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok)   
            SUBSTRING(tidut.UT,8) = "DELNR"                                     
            SUBSTRING(tidut.UT,14) = "TIMMAR"             
            SUBSTRING(tidut.UT,23) = "KOSTNAD"         
            SUBSTRING(tidut.UT,33) = "TIMMAR"  
            SUBSTRING(tidut.UT,42) = "KOSTNAD"
            SUBSTRING(tidut.UT,52) = "TIMMAR"
            SUBSTRING(tidut.UT,61) = "KOSTNAD"
            SUBSTRING(tidut.UT,71) = "KOSTNAD".  
            IF inder = TRUE THEN ASSIGN SUBSTRING(tidut.UT,81) = "KOSTNAD".                                      
            CREATE tidut.       
            SUBSTRING(tidut.UT,1) = str.             
         END. 
         ELSE DO: 
            IF globforetag = "NORD" OR 
            globforetag = "ELPA" OR globforetag = "ESAN" OR globforetag = "ESMA" OR
            globforetag = "ETA" THEN DO:
               inder = TRUE.           
            END. 
            IF inder = TRUE THEN DO:                                                                
               str = "======.=====.========================================.========.=========.========.=========.========.=========.=========.========".
               str2= "---------------------------------------------------------------------------------------------------------------------------------".                 
            END.
            ELSE DO:                                                                                    
               str = "======.=====.========================================.========.=========.========.=========.========.=========.=========". 
               str2= "------------------------------------------------------------------------------------------------------------------------".
            END.
            CREATE tidut. 
            SUBSTRING(tidut.UT,60) = STRING(TODAY) + " " + STRING(TIME,"HH:MM").
            CREATE tidut.
            CREATE tidut.
            IF SEL_UPP = "Det.lista Tid-övertid-trakt./ " + gomrk THEN DO:                                      
               tidut.UT = "DETALJERAD LISTA TID-ÖVERTID-TRAKTAMENTEN PERIOD". 
            END.
            ELSE DO:
               tidut.UT = "TID-ÖVERTID-TRAKTAMENTEN PERIOD".    
            END.   
            IF RAD_PERIOD = 1 THEN DO: 
               SUBSTRING(tidut.UT,50) = STRING(YEAR(bdatum),"9999").
            END.
            IF RAD_PERIOD = 2 THEN DO:
               SUBSTRING(tidut.UT,50) = STRING(bdatum) + " - " + STRING(avdatum).     
            END.     
            CREATE tidut.  
            CREATE tidut.            
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrk) + " :".    
            IF utomr NE "ALLA" THEN DO:
               FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = utomr 
               USE-INDEX OMR NO-LOCK NO-ERROR.
               IF NOT AVAILABLE OMRADETAB THEN  SUBSTRING(tidut.UT,10) = "OMRADETAB SAKNAS".
               ELSE SUBSTRING(tidut.UT,10) = OMRADETAB.NAMN.
            END.
            ELSE DO: 
               SUBSTRING(tidut.UT,10) = utomr.
            END.       
            CREATE tidut.
            CREATE tidut.                                                 
            ASSIGN                 
            SUBSTRING(tidut.UT,55) = "ARB."
            SUBSTRING(tidut.UT,64) = "ARBETS" 
            SUBSTRING(tidut.UT,74) = "ÖVER."  
            SUBSTRING(tidut.UT,83) = "ÖVERTID"   
            SUBSTRING(tidut.UT,93) = "RES."
            SUBSTRING(tidut.UT,102) = "TRAKT."                  
            SUBSTRING(tidut.UT,112) = "LÖNETILL.".         
            IF inder = TRUE THEN             
            ASSIGN SUBSTRING(tidut.UT,122) = "INDIREKT".     
            CREATE tidut.      
            ASSIGN       
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok)   
            SUBSTRING(tidut.UT,8) = "DELNR" 
            SUBSTRING(tidut.UT,14) = "ORT/BENÄMNING"                                      
            SUBSTRING(tidut.UT,55) = "TIMMAR"             
            SUBSTRING(tidut.UT,64) = "KOSTNAD"         
            SUBSTRING(tidut.UT,74) = "TIMMAR"  
            SUBSTRING(tidut.UT,83) = "KOSTNAD"
            SUBSTRING(tidut.UT,93) = "TIMMAR"
            SUBSTRING(tidut.UT,102) = "KOSTNAD"
            SUBSTRING(tidut.UT,112) = "KOSTNAD".  
            IF inder = TRUE THEN ASSIGN SUBSTRING(tidut.UT,122) = "KOSTNAD".                                      
            CREATE tidut.       
            SUBSTRING(tidut.UT,1) = str.             
         END.   
      END.   
   END.   
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE summa_UI WINDOW-2 
PROCEDURE summa_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
   IF musz = TRUE THEN RETURN.
   FOR EACH slutsum:
      DELETE slutsum.
   END. 
   FOR EACH slutsum1:
      DELETE slutsum1.
   END.
   FOR EACH slutsum2:
      DELETE slutsum2.
   END.
   FOR EACH dagtemp:
      DELETE dagtemp.
   END.  
   FOR EACH restid:
      DELETE restid.
   END.  
   FOR EACH restid2:
      DELETE restid2.
   END.  
   FOR EACH restid3:
      DELETE restid3.
   END.  
   FOR EACH restid4:
      DELETE restid4.
   END.      
   ASSIGN   
   arrhjsum = 0   
   arrhjsumtid = 0  
   arrhjsumotid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0       
   arrhjsumlon = 0.   
   IF utomr NE "ALLA" THEN DO:      
      IF RAD_PERIOD = 1 THEN DO:                                       
         OPEN QUERY arsumq FOR EACH SUMTID 
         WHERE SUMTID.DATUM = bdatum AND SUMTID.GEOMRADE = utomr         
         USE-INDEX GEORGAONR NO-LOCK. 
         GET FIRST arsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTID) TRANSACTION:                                        
            IF SUMTID.DATUM >= 01/01/99 THEN berindvar = 1.15.
            ELSE IF SUMTID.DATUM < 01/01/99 THEN berindvar = 0.70.
            IF SUMTID.PRISTYP = "RESTID..." THEN DO: 
               CREATE restid.
               ASSIGN 
               restid.AONR = SUMTID.AONR
               restid.DELNR = SUMTID.DELNR         
               restid.OMRADE = SUMTID.GEOMRADE
               restid.TIMMAR = restid.TIMMAR + SUMTID.TIMMAR. 
               CREATE dagtemp.
               ASSIGN  
               dagtemp.AONR = SUMTID.AONR
               dagtemp.DELNR = SUMTID.DELNR 
               dagtemp.ORT = SUMTID.ORT     
               dagtemp.INOMRADE = SUMTID.OMRADE  
               dagtemp.OMRADE = SUMTID.GEOMRADE
               dagtemp.PRISTYP = SUMTID.PRISTYP               
               dagtemp.OTIMMAR = SUMTID.OTIMMAR 
               dagtemp.BELOPP = SUMTID.BELOPP 
               dagtemp.OBELOPP = SUMTID.OBELOPP 
               dagtemp.TBELOPP = SUMTID.TBELOPP
               dagtemp.LONKOST = SUMTID.LONKOST
               dagtemp.IKOST = SUMTID.IKOSTNAD * berindvar.             
            END.
            ELSE DO:
               IF SUMTID.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTID.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE dagtemp.
               ASSIGN  
               dagtemp.AONR = SUMTID.AONR
               dagtemp.DELNR = SUMTID.DELNR 
               dagtemp.ORT = SUMTID.ORT     
               dagtemp.INOMRADE = SUMTID.OMRADE  
               dagtemp.OMRADE = SUMTID.GEOMRADE
               dagtemp.PRISTYP = SUMTID.PRISTYP
               dagtemp.TIMMAR = SUMTID.TIMMAR
               dagtemp.OTIMMAR = SUMTID.OTIMMAR 
               dagtemp.BELOPP = SUMTID.BELOPP 
               dagtemp.OBELOPP = SUMTID.OBELOPP 
               dagtemp.TBELOPP = SUMTID.TBELOPP
               dagtemp.LONKOST = SUMTID.LONKOST
               dagtemp.IKOST = SUMTID.IKOSTNAD * berindvar.
            END.
            GET NEXT arsumq NO-LOCK. 
         END.
      END. 
      IF RAD_PERIOD = 2 THEN DO:
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum AND SUMTIDDAG.GEOMRADE = utomr
         USE-INDEX GEORGAONR NO-LOCK.
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG) TRANSACTION:            
            IF SUMTIDDAG.PRISTYP = "RESTID..." THEN DO: 
               IF SUMTIDDAG.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTIDDAG.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE restid.
               ASSIGN  
               restid.AONR = SUMTIDDAG.AONR
               restid.DELNR = SUMTIDDAG.DELNR               
               restid.OMRADE = SUMTIDDAG.GEOMRADE                               
               restid.TIMMAR = restid.TIMMAR + SUMTIDDAG.TIMMAR.   
               CREATE dagtemp.
               ASSIGN    
               dagtemp.AONR = SUMTIDDAG.AONR
               dagtemp.DELNR = SUMTIDDAG.DELNR 
               dagtemp.ORT = SUMTIDDAG.ORT     
               dagtemp.INOMRADE = SUMTIDDAG.OMRADE             
               dagtemp.OMRADE = SUMTIDDAG.GEOMRADE 
               dagtemp.PRISTYP = SUMTIDDAG.PRISTYP
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR 
               dagtemp.BELOPP = SUMTIDDAG.BELOPP 
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP 
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.IKOST = SUMTIDDAG.IKOSTNAD * berindvar.
            END.
            ELSE DO:
               IF SUMTIDDAG.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTIDDAG.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE dagtemp.
               ASSIGN    
               dagtemp.AONR = SUMTIDDAG.AONR
               dagtemp.DELNR = SUMTIDDAG.DELNR 
               dagtemp.ORT = SUMTIDDAG.ORT     
               dagtemp.INOMRADE = SUMTIDDAG.OMRADE             
               dagtemp.OMRADE = SUMTIDDAG.GEOMRADE 
               dagtemp.PRISTYP = SUMTIDDAG.PRISTYP
               dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR 
               dagtemp.BELOPP = SUMTIDDAG.BELOPP 
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP 
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.IKOST = SUMTIDDAG.IKOSTNAD * berindvar.
            END.
            GET NEXT dagsumq NO-LOCK. 
         END.   
      END.      
   END.
   ELSE DO:
      IF RAD_PERIOD = 1 THEN DO:                       
         OPEN QUERY arsumq FOR EACH SUMTID 
         WHERE SUMTID.DATUM = bdatum 
         USE-INDEX GEORGAONR NO-LOCK. 
         GET FIRST arsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTID) TRANSACTION:                           
            IF SUMTID.PRISTYP = "RESTID..." THEN DO: 
               IF SUMTID.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTID.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE restid.
               ASSIGN   
               restid.AONR = SUMTID.AONR
               restid.DELNR = SUMTID.DELNR              
               restid.OMRADE = SUMTID.GEOMRADE
               restid.TIMMAR = restid.TIMMAR + SUMTID.TIMMAR.
               CREATE dagtemp.
               ASSIGN  
               dagtemp.AONR = SUMTID.AONR
               dagtemp.DELNR = SUMTID.DELNR 
               dagtemp.ORT = SUMTID.ORT     
               dagtemp.INOMRADE = SUMTID.OMRADE             
               dagtemp.OMRADE = SUMTID.GEOMRADE
               dagtemp.PRISTYP = SUMTID.PRISTYP               
               dagtemp.OTIMMAR = SUMTID.OTIMMAR 
               dagtemp.BELOPP = SUMTID.BELOPP 
               dagtemp.OBELOPP = SUMTID.OBELOPP 
               dagtemp.TBELOPP = SUMTID.TBELOPP
               dagtemp.LONKOST = SUMTID.LONKOST
               dagtemp.IKOST = SUMTID.IKOSTNAD * berindvar.
            END.
            ELSE DO:
               IF SUMTID.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTID.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE dagtemp.
               ASSIGN  
               dagtemp.AONR = SUMTID.AONR
               dagtemp.DELNR = SUMTID.DELNR 
               dagtemp.ORT = SUMTID.ORT     
               dagtemp.INOMRADE = SUMTID.OMRADE             
               dagtemp.OMRADE = SUMTID.GEOMRADE
               dagtemp.PRISTYP = SUMTID.PRISTYP
               dagtemp.TIMMAR = SUMTID.TIMMAR
               dagtemp.OTIMMAR = SUMTID.OTIMMAR 
               dagtemp.BELOPP = SUMTID.BELOPP 
               dagtemp.OBELOPP = SUMTID.OBELOPP 
               dagtemp.TBELOPP = SUMTID.TBELOPP
               dagtemp.LONKOST = SUMTID.LONKOST
               dagtemp.IKOST = SUMTID.IKOSTNAD * berindvar.
            END.
            GET NEXT arsumq NO-LOCK. 
         END.
      END. 
      IF RAD_PERIOD = 2 THEN DO:
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum 
         USE-INDEX GEORGAONR NO-LOCK.
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG) TRANSACTION:            
            IF SUMTIDDAG.PRISTYP = "RESTID..." THEN DO: 
               IF SUMTIDDAG.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTIDDAG.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE restid.
               ASSIGN     
               restid.AONR = SUMTIDDAG.AONR
               restid.DELNR = SUMTIDDAG.DELNR            
               restid.OMRADE = SUMTIDDAG.GEOMRADE 
               restid.TIMMAR = restid.TIMMAR + SUMTIDDAG.TIMMAR.
               CREATE dagtemp.
               ASSIGN         
               dagtemp.AONR = SUMTIDDAG.AONR
               dagtemp.DELNR = SUMTIDDAG.DELNR 
               dagtemp.ORT = SUMTIDDAG.ORT    
               dagtemp.INOMRADE = SUMTIDDAG.OMRADE            
               dagtemp.OMRADE = SUMTIDDAG.GEOMRADE 
               dagtemp.PRISTYP = SUMTIDDAG.PRISTYP               
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR 
               dagtemp.BELOPP = SUMTIDDAG.BELOPP 
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP 
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.IKOST = SUMTIDDAG.IKOSTNAD * berindvar.
            END.
            ELSE DO:
               IF SUMTIDDAG.DATUM >= 01/01/99 THEN berindvar = 1.15.
               ELSE IF SUMTIDDAG.DATUM < 01/01/99 THEN berindvar = 0.70.
               CREATE dagtemp.
               ASSIGN         
               dagtemp.AONR = SUMTIDDAG.AONR
               dagtemp.DELNR = SUMTIDDAG.DELNR 
               dagtemp.ORT = SUMTIDDAG.ORT    
               dagtemp.INOMRADE = SUMTIDDAG.OMRADE            
               dagtemp.OMRADE = SUMTIDDAG.GEOMRADE 
               dagtemp.PRISTYP = SUMTIDDAG.PRISTYP
               dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR 
               dagtemp.BELOPP = SUMTIDDAG.BELOPP 
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP 
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.IKOST = SUMTIDDAG.IKOSTNAD * berindvar.
            END.
            GET NEXT dagsumq NO-LOCK. 
         END.   
      END.       
   END.        
   FOR EACH dagtemp BREAK BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR:           
      ACCUMULATE 
      dagtemp.BELOPP (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR). 
      ACCUMULATE 
      dagtemp.TIMMAR (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR). 
      ACCUMULATE 
      dagtemp.OTIMMAR (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR). 
      ACCUMULATE 
      dagtemp.OBELOPP (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR).  
      ACCUMULATE 
      dagtemp.TBELOPP (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR). 
      ACCUMULATE 
      dagtemp.LONKOST (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR).
      ACCUMULATE 
      dagtemp.IKOST (TOTAL BY dagtemp.INOMRADE BY dagtemp.OMRADE BY dagtemp.AONR BY dagtemp.DELNR).
      IF LAST-OF(dagtemp.DELNR) THEN DO TRANSACTION:         
         CREATE slutsum.
         ASSIGN 
         slutsum.MED = FALSE
         slutsum.AONR = dagtemp.AONR
         slutsum.DELNR = dagtemp.DELNR  
         slutsum.ORT = dagtemp.ORT               
         slutsum.INOMRADE = dagtemp.INOMRADE   
         slutsum.OMRADE = dagtemp.OMRADE      
         slutsum.BELOPP = (ACCUM TOTAL dagtemp.BELOPP) - arrhjsum                       
         slutsum.TIMMAR = (ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid 
         slutsum.OTIMMAR = (ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumotid
         slutsum.OBELOPP = (ACCUM TOTAL dagtemp.OBELOPP) - arrhjsumove    
         slutsum.TBELOPP = (ACCUM TOTAL dagtemp.TBELOPP) - arrhjsumtra 
         slutsum.LONKOST = (ACCUM TOTAL dagtemp.LONKOST) - arrhjsumlon
         slutsum.IKOST = (ACCUM TOTAL dagtemp.IKOST) - arrhjsumikost.            
         arrhjsum = ACCUM TOTAL dagtemp.BELOPP.  
         arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR. 
         arrhjsumotid = ACCUM TOTAL dagtemp.OTIMMAR.
         arrhjsumove = ACCUM TOTAL dagtemp.OBELOPP.  
         arrhjsumtra = ACCUM TOTAL dagtemp.TBELOPP.       
         arrhjsumlon = ACCUM TOTAL dagtemp.LONKOST. 
         arrhjsumikost = ACCUM TOTAL dagtemp.IKOST.               
      END.                 
   END.         
   IF inder = TRUE THEN DO:           
      ASSIGN
      vardelnr = 0
      varaonr = "".      
      FOR EACH slutsum USE-INDEX AONR:                     
         IF slutsum.INOMRADE NE slutsum.OMRADE THEN NEXT.
         IF vardelnr = slutsum.DELNR AND varaonr = slutsum.AONR THEN DO:
            musz = musz.  
            IF AVAILABLE AONRKONTKOD THEN DO:
               IF TRIM(AONRKONTKOD.K3) = "0" THEN NEXT.               
            END.   
         END.
         ELSE DO:                                           
            ASSIGN
            vardelnr = slutsum.DELNR 
            varaonr = slutsum.AONR.
            FIND FIRST AONRKONTKOD WHERE AONRKONTKOD.AONR = slutsum.AONR AND 
            AONRKONTKOD.DELNR = slutsum.DELNR USE-INDEX AONRKONT NO-LOCK NO-ERROR. 
            IF AVAILABLE AONRKONTKOD THEN DO:
               IF TRIM(AONRKONTKOD.K3) = "0" THEN NEXT.               
            END.    
         END.        
         ASSIGN         
         slutsum.INDEREKT = slutsum.IKOST.                         
      END. 
   END.                   
   ASSIGN   
   arrhjsum = 0   
   arrhjsumtid = 0  
   arrhjsumotid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0       
   arrhjsumlon = 0
   arrhjsumind = 0. 
   FOR EACH slutsum WHERE slutsum.MED = FALSE 
   BREAK BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR:           
      ACCUMULATE 
      slutsum.BELOPP (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR). 
      ACCUMULATE 
      slutsum.TIMMAR (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR). 
      ACCUMULATE 
      slutsum.OTIMMAR (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR). 
      ACCUMULATE 
      slutsum.OBELOPP (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR).  
      ACCUMULATE 
      slutsum.TBELOPP (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR). 
      ACCUMULATE 
      slutsum.LONKOST (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR). 
      ACCUMULATE 
      slutsum.INDEREKT (TOTAL BY slutsum.OMRADE BY slutsum.AONR BY slutsum.DELNR).
      IF LAST-OF(slutsum.DELNR) THEN DO TRANSACTION:
         CREATE slutsumbuff.
         ASSIGN        
         slutsumbuff.MED = TRUE 
         slutsumbuff.OMRADE = slutsum.OMRADE 
         slutsumbuff.AONR = slutsum.AONR
         slutsumbuff.DELNR = slutsum.DELNR  
         slutsumbuff.ORT = slutsum.ORT                                        
         slutsumbuff.BELOPP = (ACCUM TOTAL slutsum.BELOPP) - arrhjsum                       
         slutsumbuff.TIMMAR = (ACCUM TOTAL slutsum.TIMMAR) - arrhjsumtid 
         slutsumbuff.OTIMMAR = (ACCUM TOTAL slutsum.OTIMMAR) - arrhjsumotid
         slutsumbuff.OBELOPP = (ACCUM TOTAL slutsum.OBELOPP) - arrhjsumove    
         slutsumbuff.TBELOPP = (ACCUM TOTAL slutsum.TBELOPP) - arrhjsumtra 
         slutsumbuff.LONKOST = (ACCUM TOTAL slutsum.LONKOST) - arrhjsumlon
         slutsumbuff.INDEREKT = (ACCUM TOTAL slutsum.INDEREKT) - arrhjsumind.             
         arrhjsum = ACCUM TOTAL slutsum.BELOPP.  
         arrhjsumtid = ACCUM TOTAL slutsum.TIMMAR. 
         arrhjsumotid = ACCUM TOTAL slutsum.OTIMMAR.
         arrhjsumove = ACCUM TOTAL slutsum.OBELOPP.  
         arrhjsumtra = ACCUM TOTAL slutsum.TBELOPP.       
         arrhjsumlon = ACCUM TOTAL slutsum.LONKOST.  
         arrhjsumind = ACCUM TOTAL slutsum.INDEREKT.             
      END.                 
   END.              
   FOR EACH slutsum WHERE slutsum.MED = FALSE USE-INDEX MED:
      DELETE slutsum.
   END.     
   ASSIGN   
   arrhjsum = 0   
   arrhjsumtid = 0  
   arrhjsumotid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0       
   arrhjsumlon = 0
   arrhjsumind = 0.      
   FOR EACH slutsum BREAK BY slutsum.OMRADE:           
      ACCUMULATE 
      slutsum.BELOPP (TOTAL BY slutsum.OMRADE). 
      ACCUMULATE 
      slutsum.TIMMAR (TOTAL BY slutsum.OMRADE). 
      ACCUMULATE 
      slutsum.OTIMMAR (TOTAL BY slutsum.OMRADE). 
      ACCUMULATE 
      slutsum.OBELOPP (TOTAL BY slutsum.OMRADE).  
      ACCUMULATE 
      slutsum.TBELOPP (TOTAL BY slutsum.OMRADE). 
      ACCUMULATE 
      slutsum.LONKOST (TOTAL BY slutsum.OMRADE). 
      ACCUMULATE 
      slutsum.INDEREKT (TOTAL BY slutsum.OMRADE).
      IF LAST-OF(slutsum.OMRADE) THEN DO TRANSACTION:
         CREATE slutsum1.
         ASSIGN          
         slutsum1.OMRADE = slutsum.OMRADE      
         slutsum1.BELOPP = (ACCUM TOTAL slutsum.BELOPP) - arrhjsum                       
         slutsum1.TIMMAR = (ACCUM TOTAL slutsum.TIMMAR) - arrhjsumtid 
         slutsum1.OTIMMAR = (ACCUM TOTAL slutsum.OTIMMAR) - arrhjsumotid
         slutsum1.OBELOPP = (ACCUM TOTAL slutsum.OBELOPP) - arrhjsumove    
         slutsum1.TBELOPP = (ACCUM TOTAL slutsum.TBELOPP) - arrhjsumtra 
         slutsum1.LONKOST = (ACCUM TOTAL slutsum.LONKOST) - arrhjsumlon
         slutsum1.INDEREKT = (ACCUM TOTAL slutsum.INDEREKT) - arrhjsumind.             
         arrhjsum = ACCUM TOTAL slutsum.BELOPP.  
         arrhjsumtid = ACCUM TOTAL slutsum.TIMMAR. 
         arrhjsumotid = ACCUM TOTAL slutsum.OTIMMAR.
         arrhjsumove = ACCUM TOTAL slutsum.OBELOPP.  
         arrhjsumtra = ACCUM TOTAL slutsum.TBELOPP.       
         arrhjsumlon = ACCUM TOTAL slutsum.LONKOST.  
         arrhjsumind = ACCUM TOTAL slutsum.INDEREKT.             
      END.                 
   END.         
   CREATE slutsum2.        
   ASSIGN        
   slutsum2.BELOPP = arrhjsum                       
   slutsum2.TIMMAR = arrhjsumtid 
   slutsum2.OTIMMAR = arrhjsumotid
   slutsum2.OBELOPP = arrhjsumove    
   slutsum2.TBELOPP = arrhjsumtra 
   slutsum2.LONKOST = arrhjsumlon
   slutsum2.INDEREKT = arrhjsumind.
                                        
   /*SUMMERING AV RESTID*/
   ASSIGN      
   arrhjsum = 0   
   arrhjsumtid = 0.
   /* TOTALT PÅ VARJE " + CAPS(Guru.Konstanter:gaol)*/  
   FOR EACH restid BREAK BY restid.OMRADE BY restid.AONR BY restid.DELNR:           
      ACCUMULATE 
      restid.TIMMAR (TOTAL BY restid.OMRADE BY restid.AONR BY restid.DELNR).       
      IF LAST-OF(restid.DELNR) THEN DO TRANSACTION:
         CREATE restid2.
         ASSIGN 
         restid2.AONR = restid.AONR
         restid2.DELNR = restid.DELNR
         restid2.OMRADE = restid.OMRADE                              
         restid2.TIMMAR = (ACCUM TOTAL restid.TIMMAR) - arrhjsumtid          
         arrhjsumtid = ACCUM TOTAL restid.TIMMAR.              
      END.                 
   END.  
   /* TOTALT PÅ VARJE " + CAPS(Guru.Konstanter:gomrl)*/ 
   ASSIGN      
   arrhjsumtid = 0.  
   FOR EACH restid2 BREAK BY restid2.OMRADE:           
      ACCUMULATE 
      restid2.TIMMAR (TOTAL BY restid2.OMRADE).       
      IF LAST-OF(restid2.OMRADE) THEN DO TRANSACTION:
         CREATE restid3.
         ASSIGN 
         restid3.AONR = restid2.AONR
         restid3.DELNR = restid2.DELNR
         restid3.OMRADE = restid2.OMRADE                              
         restid3.TIMMAR = (ACCUM TOTAL restid2.TIMMAR) - arrhjsumtid          
         arrhjsumtid = ACCUM TOTAL restid2.TIMMAR.              
      END.                 
   END. 
   /* TOTALT PÅ ALLA " + CAPS(Guru.Konstanter:gomrl)*/ 
   CREATE restid4.
   ASSIGN
   restid4.TIMMAR = arrhjsumtid. 
   /*SLUT SUMMERING AV RESTID*/
                                                            
   IF utomr = "ALLA" THEN DO:
      ASSIGN   
      arrhjsum = 0   
      arrhjsumtid = 0  
      arrhjsumotid = 0    
      arrhjsumove = 0    
      arrhjsumtra = 0       
      arrhjsumlon = 0
      arrhjsumind = 0.         
      CREATE tidut. 
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "SUMMA SAMTLIGA " + CAPS(Guru.Konstanter:gomrl).               
      CREATE tidut.  
      FOR EACH restid4 NO-LOCK:                                 
         ASSIGN                                                       
         arrhjsumotid = arrhjsumotid + restid4.TIMMAR.         
      END.
      IF aoval = FALSE THEN DO:                                                                   
         FOR EACH slutsum2 USE-INDEX OMR NO-LOCK:                                                 
            CREATE tidut.                                 
            ASSIGN                                                                     
            SUBSTRING(tidut.UT,14) = STRING(slutsum2.TIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,23) = STRING(slutsum2.BELOPP,">>>>>>>99")  
            SUBSTRING(tidut.UT,33) = STRING(slutsum2.OTIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,42) = STRING(slutsum2.OBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,52) = STRING(arrhjsumotid,">>>>>>99")
            SUBSTRING(tidut.UT,61) = STRING(slutsum2.TBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,71) = STRING(slutsum2.LONKOST,"->>>>>>99").                           
            ASSIGN           
            arrhjsum =                                
            arrhjsum + slutsum2.BELOPP + slutsum2.OBELOPP + slutsum2.TBELOPP + 
            slutsum2.LONKOST
            arrhjsumtid = arrhjsumtid + slutsum2.TIMMAR + slutsum2.OTIMMAR
            arrhjsumind = arrhjsumind + slutsum2.INDEREKT.    
            IF inder = TRUE THEN DO:
                SUBSTRING(tidut.UT,81) = STRING(slutsum2.INDEREKT,">>>>>>99").
            END. 
         END.                                                    
      END.
      ELSE DO:
         FOR EACH slutsum2 USE-INDEX OMR NO-LOCK:                                                 
            CREATE tidut.                                 
            ASSIGN                                                                     
            SUBSTRING(tidut.UT,55) = STRING(slutsum2.TIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,64) = STRING(slutsum2.BELOPP,">>>>>>>99")  
            SUBSTRING(tidut.UT,74) = STRING(slutsum2.OTIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,83) = STRING(slutsum2.OBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,93) = STRING(arrhjsumotid,">>>>>>99")
            SUBSTRING(tidut.UT,102) = STRING(slutsum2.TBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,112) = STRING(slutsum2.LONKOST,"->>>>>>99").                           
            ASSIGN           
            arrhjsum =                                
            arrhjsum + slutsum2.BELOPP + slutsum2.OBELOPP + slutsum2.TBELOPP + slutsum2.LONKOST
            arrhjsumtid = arrhjsumtid + slutsum2.TIMMAR + slutsum2.OTIMMAR
            arrhjsumind = arrhjsumind + slutsum2.INDEREKT.    
            IF inder = TRUE THEN DO:
                SUBSTRING(tidut.UT,122) = STRING(slutsum2.INDEREKT,">>>>>>99").
            END. 
         END.                       
      END.  
      CREATE tidut.
      CREATE tidut.      
      CREATE tidut.   
      ASSIGN tidut.UT = "TOTALT".        
      CREATE tidut.  
      CREATE tidut.    
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "TOTALT ANTAL TIMMAR :"    
      SUBSTRING(tidut.UT,23) = STRING(arrhjsumtid,">>>>>>99").
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "TOTAL KOSTNAD       :"    
      SUBSTRING(tidut.UT,23) = STRING(arrhjsum + arrhjsumind,">>>>>>99").
      CREATE tidut.   
      CREATE tidut. 
      ASSIGN tidut.UT = str2.    
   END.           
   musz = TRUE.                      
   FOR EACH slutsum1 USE-INDEX OMR NO-LOCK:
      ASSIGN   
      arrhjsum = 0   
      arrhjsumtid = 0  
      arrhjsumotid = 0    
      arrhjsumove = 0    
      arrhjsumtra = 0       
      arrhjsumlon = 0
      arrhjsumind = 0.           
      IF utomr = "ALLA" THEN DO:
         IF utomr2 = slutsum1.OMRADE THEN utomr = utomr.
         ELSE DO:              
            utomr2 = slutsum1.OMRADE. 
            IF musz = TRUE THEN musz = FALSE.
            ELSE DO:
               CREATE tidut.
               ASSIGN tidut.UT = str2.                
            END.
            CREATE tidut. 
            CREATE tidut.
            FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = slutsum1.OMRADE
            USE-INDEX OMR NO-LOCK NO-ERROR.           
            IF NOT AVAILABLE OMRADETAB THEN  SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrl) + " SAKNAS".
            ELSE SUBSTRING(tidut.UT,1) = OMRADETAB.NAMN.                            
            CREATE tidut.
         END.
      END.             
      IF SEL_UPP = "Det.lista Tid-övertid-trakt./ " + gomrk THEN DO:
         IF aoval = FALSE THEN DO:
            FOR EACH slutsum WHERE slutsum.OMRADE = slutsum1.OMRADE:            
               CREATE tidut.                                 
               ASSIGN   
               SUBSTRING(tidut.UT,1) = slutsum.AONR     
               SUBSTRING(tidut.UT,8) = STRING(slutsum.DELNR,">>>")                                                           
               SUBSTRING(tidut.UT,14) = STRING(slutsum.TIMMAR,">>>>>>99")   
               SUBSTRING(tidut.UT,23) = STRING(slutsum.BELOPP,">>>>>>>99")  
               SUBSTRING(tidut.UT,33) = STRING(slutsum.OTIMMAR,">>>>>>99")   
               SUBSTRING(tidut.UT,42) = STRING(slutsum.OBELOPP,">>>>>>>99")
               SUBSTRING(tidut.UT,61) = STRING(slutsum.TBELOPP,">>>>>>>99")
               SUBSTRING(tidut.UT,71) = STRING(slutsum.LONKOST,"->>>>>>99"). 
               FIND FIRST restid2 WHERE restid2.OMRADE = slutsum.OMRADE AND
               restid2.AONR = slutsum.AONR AND restid2.DELNR = slutsum.DELNR
               USE-INDEX OMR NO-LOCK NO-ERROR.  
               IF AVAILABLE restid2 THEN DO:                                 
                  ASSIGN                                         
                  SUBSTRING(tidut.UT,52) = STRING(restid2.TIMMAR,">>>>>>99").             
               END.  
               IF inder = TRUE THEN DO:                               
                  SUBSTRING(tidut.UT,81) = STRING(slutsum.INDEREKT,">>>>>>99").
               END.
            END.
            CREATE tidut.  
            CREATE tidut. 
            SUBSTRING(tidut.UT,1) = "SUMMA:".                                       
            ASSIGN                                                                   
            SUBSTRING(tidut.UT,14) = STRING(slutsum1.TIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,23) = STRING(slutsum1.BELOPP,">>>>>>>99")  
            SUBSTRING(tidut.UT,33) = STRING(slutsum1.OTIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,42) = STRING(slutsum1.OBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,61) = STRING(slutsum1.TBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,71) = STRING(slutsum1.LONKOST,"->>>>>>99"). 
            FIND FIRST restid3 WHERE restid3.OMRADE = slutsum1.OMRADE 
            USE-INDEX OMR NO-LOCK NO-ERROR.  
            IF AVAILABLE restid3 THEN DO:                                 
               ASSIGN                                         
               SUBSTRING(tidut.UT,52) = STRING(restid3.TIMMAR,">>>>>>99").             
            END.  
            IF inder = TRUE THEN DO:                               
               SUBSTRING(tidut.UT,81) = STRING(slutsum1.INDEREKT,">>>>>>99").
            END.
         END.
         ELSE DO: 
            FOR EACH slutsum WHERE slutsum.OMRADE = slutsum1.OMRADE:            
               CREATE tidut.                                 
               ASSIGN   
               SUBSTRING(tidut.UT,1) = slutsum.AONR     
               SUBSTRING(tidut.UT,8) = STRING(slutsum.DELNR,">>>") 
               SUBSTRING(tidut.UT,14) = SUBSTRING(slutsum.ORT,1,40)                                                             
               SUBSTRING(tidut.UT,55) = STRING(slutsum.TIMMAR,">>>>>>99")   
               SUBSTRING(tidut.UT,64) = STRING(slutsum.BELOPP,">>>>>>>99")  
               SUBSTRING(tidut.UT,74) = STRING(slutsum.OTIMMAR,">>>>>>99")   
               SUBSTRING(tidut.UT,83) = STRING(slutsum.OBELOPP,">>>>>>>99")
               SUBSTRING(tidut.UT,102) = STRING(slutsum.TBELOPP,">>>>>>>99")
               SUBSTRING(tidut.UT,112) = STRING(slutsum.LONKOST,"->>>>>>99"). 
               FIND FIRST restid2 WHERE restid2.OMRADE = slutsum.OMRADE AND
               restid2.AONR = slutsum.AONR AND restid2.DELNR = slutsum.DELNR
               USE-INDEX OMR NO-LOCK NO-ERROR.  
               IF AVAILABLE restid2 THEN DO:                                 
                  ASSIGN                                         
                  SUBSTRING(tidut.UT,93) = STRING(restid2.TIMMAR,">>>>>>99").             
               END.  
               IF inder = TRUE THEN DO:                               
                  SUBSTRING(tidut.UT,122) = STRING(slutsum.INDEREKT,">>>>>>99").
               END.
            END. 
            CREATE tidut. 
            CREATE tidut. 
            SUBSTRING(tidut.UT,1) = "SUMMA:".                                            
            ASSIGN                                                                   
            SUBSTRING(tidut.UT,55) = STRING(slutsum1.TIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,64) = STRING(slutsum1.BELOPP,">>>>>>>99")  
            SUBSTRING(tidut.UT,74) = STRING(slutsum1.OTIMMAR,">>>>>>99")   
            SUBSTRING(tidut.UT,83) = STRING(slutsum1.OBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,102) = STRING(slutsum1.TBELOPP,">>>>>>>99")
            SUBSTRING(tidut.UT,112) = STRING(slutsum1.LONKOST,"->>>>>>99"). 
            FIND FIRST restid3 WHERE restid3.OMRADE = slutsum1.OMRADE 
            USE-INDEX OMR NO-LOCK NO-ERROR.  
            IF AVAILABLE restid3 THEN DO:                                 
               ASSIGN                                         
               SUBSTRING(tidut.UT,93) = STRING(restid3.TIMMAR,">>>>>>99").             
            END.  
            IF inder = TRUE THEN DO:                               
               SUBSTRING(tidut.UT,122) = STRING(slutsum1.INDEREKT,">>>>>>99").
            END.
         END.   
      END. 
      ELSE DO:                  
         CREATE tidut.                                 
         ASSIGN                                                                   
         SUBSTRING(tidut.UT,14) = STRING(slutsum1.TIMMAR,">>>>>>99")   
         SUBSTRING(tidut.UT,23) = STRING(slutsum1.BELOPP,">>>>>>>99")  
         SUBSTRING(tidut.UT,33) = STRING(slutsum1.OTIMMAR,">>>>>>99")   
         SUBSTRING(tidut.UT,42) = STRING(slutsum1.OBELOPP,">>>>>>>99")
         SUBSTRING(tidut.UT,61) = STRING(slutsum1.TBELOPP,">>>>>>>99")
         SUBSTRING(tidut.UT,71) = STRING(slutsum1.LONKOST,"->>>>>>99"). 
         FIND FIRST restid3 WHERE restid3.OMRADE = slutsum1.OMRADE 
         USE-INDEX OMR NO-LOCK NO-ERROR.  
         IF AVAILABLE restid3 THEN DO:                                 
            ASSIGN                                         
            SUBSTRING(tidut.UT,52) = STRING(restid3.TIMMAR,">>>>>>99").             
         END.  
         IF inder = TRUE THEN DO:                               
            SUBSTRING(tidut.UT,81) = STRING(slutsum1.INDEREKT,">>>>>>99").
         END.
      END.                                         
      CREATE tidut.      
      CREATE tidut.   
      ASSIGN tidut.UT = "TOTALT".        
      CREATE tidut.  
      CREATE tidut.    
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "TOTALT ANTAL TIMMAR :"    
      SUBSTRING(tidut.UT,23) = STRING((slutsum1.TIMMAR + slutsum1.OTIMMAR),">>>>>>99").
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "TOTAL KOSTNAD       :"    
      SUBSTRING(tidut.UT,23) = 
      STRING((slutsum1.BELOPP + slutsum1.OBELOPP + slutsum1.TBELOPP + 
      slutsum1.LONKOST + slutsum1.INDEREKT),">>>>>>99").      
      CREATE tidut.                         
   END.   
     
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ut_UI WINDOW-2 
PROCEDURE ut_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
  /*UT*/                         
   FIND LAST tidut NO-LOCK NO-ERROR.     
   IF aoval = TRUE THEN RUN EKLOGL.P.  
   ELSE RUN EKLOGS.P. 
        
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE skrivut_UI WINDOW-2 
PROCEDURE skrivut_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
/*UTSKRIFT*/
          
   RUN huvud_UI. 
   IF musz = FALSE THEN DO:
      RUN summa_UI.
   END.             
   musz = FALSE.
END PROCEDURE.
