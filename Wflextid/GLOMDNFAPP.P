/* GLOMDNFAPP.P*/
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}
{SOKDEF.I}
{TIDAPPDEF.I}
DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER pkod AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER inregdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER CMB_KNAPP AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER varaonr AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER vardelnr AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER FILL-IN_TID AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER flexkvst AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER flexkvsl AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER inglobanv AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER sregstart AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER sregslut AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER sregdagnamn AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER sregvnr AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER skommen AS CHARACTER NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
DEFINE NEW SHARED VARIABLE flrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE fldrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER NO-UNDO.    
DEFINE NEW SHARED VARIABLE regstartsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE regslutsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE VARIABLE flexstart AS DECIMAL NO-UNDO. 
DEFINE VARIABLE fstart AS DECIMAL NO-UNDO.     
DEFINE VARIABLE fslut AS DECIMAL NO-UNDO.     
DEFINE VARIABLE flkoll AS DECIMAL NO-UNDO.     
DEFINE VARIABLE maxarbkort AS DECIMAL NO-UNDO.     
DEFINE VARIABLE flexmost AS DECIMAL NO-UNDO.     
DEFINE VARIABLE flexmosl AS DECIMAL NO-UNDO.     
DEFINE VARIABLE seku AS INTEGER NO-UNDO.
DEFINE VARIABLE spslut AS DECIMAL NO-UNDO.
DEFINE VARIABLE kommentar AS CHARACTER NO-UNDO.
DEFINE VARIABLE flhjrec AS RECID NO-UNDO.
DEFINE VARIABLE dagtotal AS DECIMAL NO-UNDO.
DEFINE VARIABLE tid2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE sok1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok2 AS INTEGER NO-UNDO.
DEFINE VARIABLE sok3 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok4 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok5 AS DECIMAL NO-UNDO.
DEFINE VARIABLE kolllu AS INTEGER NO-UNDO.
DEFINE VARIABLE kollfv1 AS DECIMAL NO-UNDO.
DEFINE VARIABLE kollfv2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE foremaxarbkort AS DECIMAL NO-UNDO.
ASSIGN

regdatum = inregdatum
regstart = sregstart
regslut = sregslut
regdagnamn = sregdagnamn
regvnr = sregvnr
kommentar = skommen. 
FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pkod NO-LOCK NO-ERROR.
FIND FIRST AONRTAB WHERE AONRTAB.AONR = varaonr AND AONRTAB.DELNR = vardelnr
NO-LOCK NO-ERROR.
IF AVAILABLE AONRTAB THEN DO:
   FIND FIRST TIMKOSTNADSTAB WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIMKOSTNADSTAB.PRISTYP = AONRTAB.PRISTYP USE-INDEX PRISPERS NO-LOCK NO-ERROR.         
END.
persrec = RECID(PERSONALTAB).
FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
{FORESTYR.I}
FUNCTION klock100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.

FUNCTION klock60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) * 60 / 100 ).

END FUNCTION.
DEFINE BUFFER flexbuff FOR FLEXTID.
DEFINE BUFFER tidbuff FOR TIDREGITAB.
IF vart = "nya" THEN DO:
   RUN REGVEC.P.
   RUN SLUTARB.P.         
   FIND FIRST FLEXTID WHERE FLEXTID.PERSONALKOD = PERSONALTAB.PERSONALKOD
   AND FLEXTID.DATUM = regdatum AND FLEXTID.KNAPP = CMB_KNAPP USE-INDEX FLEX
   NO-LOCK NO-ERROR.
   IF AVAILABLE FLEXTID THEN DO:
      IF CMB_KNAPP = "FLEX IN" OR CMB_KNAPP = "FLEX UT" THEN vart = vart.
      ELSE DO:
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en " + CMB_KNAPP + " registrering.".
         RETURN.
      END.
   END.   
   IF CMB_KNAPP = "IN" THEN DO:     
      FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum AND flexbuff.KOM = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff THEN DO:
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en in-registrering.". 
         RETURN.
      END.
      FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.OVERTIDUTTAG NE "F"
      AND TIDREGITAB.SLUT > FILL-IN_TID AND TIDREGITAB.START < regstart NO-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:         
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en övertidsregistrering med start " + STRING(TIDREGITAB.START) + " och slut " + STRING(TIDREGITAB.SLUT).
         RETURN.
      END.
   END.  
   IF CMB_KNAPP = "UT" THEN DO:     
      FIND LAST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum  USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff AND flexbuff.GICK = TRUE THEN DO:
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en ut-registrering.".
         RETURN.
      END.       
      
      FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.OVERTIDUTTAG NE "F"
      AND TIDREGITAB.START < FILL-IN_TID AND TIDREGITAB.SLUT > regslut NO-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:         
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en övertidsregistrering med start " + STRING(TIDREGITAB.START) + " och slut " + STRING(TIDREGITAB.SLUT).
         RETURN.
      END.
      FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND TIDREGITAB.DATUM = regdatum AND TIDLOG = TRUE 
      AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:
         IF TIDREGITAB.AONR = "140" THEN.
         ELSE IF TIDREGITAB.PRISTYP = "FRÅNVARO." AND FILL-IN_TID > regslut THEN DO:
            CREATE felmeddtemp. 
            felmeddtemp.felmedd = "Frånvaro kan inte registreras utanför ordinarie arbetstid".
            RETURN.
         END.
      END.            
   END.   
   
   IF CMB_KNAPP = "ÖVERTID UT" THEN DO:     
      FIND LAST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum  AND flexbuff.GICK = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff  THEN DO:
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en ut-registrering.".
         RETURN.
      END.   
      FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND TIDREGITAB.DATUM = regdatum AND TIDLOG = TRUE 
      AND TIDREGITAB.OVERTIDUTTAG = "Ö" AND TIDREGITAB.START GE regslut AND TIDREGITAB.START < FILL-IN_TID NO-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:         
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en övertidsregistrering med start :" + STRING(TIDREGITAB.START) + " slut: " + STRING(TIDREGITAB.SLUT).
         RETURN.
      END.
      FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND TIDREGITAB.DATUM = regdatum AND TIDLOG = TRUE 
      AND TIDREGITAB.OVERTIDUTTAG = "K" AND TIDREGITAB.START GE regslut AND TIDREGITAB.START < FILL-IN_TID NO-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:         
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns redan en övertidsregistrering med start :" + STRING(TIDREGITAB.START) + " slut: " + STRING(TIDREGITAB.SLUT).
         RETURN.
      END.
      

   END.   
   IF CMB_KNAPP = "FLEX IN" OR CMB_KNAPP = "FLEX UT" THEN DO:
      FIND LAST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum AND flexbuff.KNAPP = "Övertid ut" AND flexbuff.GICK = TRUE  USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff THEN DO:
         CREATE felmeddtemp. 
         felmeddtemp.felmedd = "Det finns en övertid ut-registrering, det går inte att registrera flex i efterhand.Kontakta flexadministratör".
         RETURN.
      END.   
   END.   
   IF CMB_KNAPP = "FLEX IN" THEN DO:
      FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum AND flexbuff.KNAPP = "In" AND flexbuff.KOM = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff THEN DO:
         IF flexbuff.TID GE FILL-IN_TID THEN DO:         
            CREATE felmeddtemp. 
            felmeddtemp.felmedd = "Det finns redan en In-registrering, det går inte att registrera flex in före denna tid ".
            RETURN.
         END.
         FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
         AND flexbuff.DATUM = regdatum AND flexbuff.KNAPP = "Flex ut" AND flexbuff.TID < FILL-IN_TID  USE-INDEX FLEX NO-LOCK NO-ERROR.
         IF NOT AVAILABLE flexbuff THEN DO:
            CREATE felmeddtemp. 
            felmeddtemp.felmedd = "Det finns redan en In-registrering, då måste det finnas en flex ut innan en flex in-registrering".
            RETURN.
         END.
      END.   
   END.
   IF CMB_KNAPP = "ANNAT IN" THEN DO:
      FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
      AND flexbuff.DATUM = regdatum AND flexbuff.KNAPP = "In" AND flexbuff.KOM = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
      IF AVAILABLE flexbuff THEN DO:
         IF flexbuff.TID GE FILL-IN_TID THEN DO:         
            CREATE felmeddtemp. 
            felmeddtemp.felmedd = "Det finns redan en In-registrering, det går inte att registrera annat in före denna tid ".
            RETURN.
         END.
         FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
         AND flexbuff.DATUM = regdatum AND flexbuff.KNAPP = "Annat ut" AND flexbuff.TID < FILL-IN_TID  USE-INDEX FLEX NO-LOCK NO-ERROR.
         IF NOT AVAILABLE flexbuff THEN DO:
            CREATE felmeddtemp. 
            felmeddtemp.felmedd = "Det finns redan en In-registrering, då måste det finnas en annat ut innan en annat in-registrering".
            RETURN.
         END.
      END.   
   END.
   /* arbetstidsförkortning*/
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:            
      DEFINE BUFFER tidbuff10 FOR TIDREGITAB.
      DEFINE VARIABLE totarbkort AS DECIMAL NO-UNDO.
      DEFINE VARIABLE totarbkorti AS DECIMAL NO-UNDO.
      DEFINE VARIABLE avarfor AS INTEGER NO-UNDO.
      IF AVAILABLE AONRTAB AND AONRTAB.AONR = "160" THEN DO:              
         totarbkort = 0.                       
         FOR EACH tidbuff10 WHERE tidbuff10.PERSONALKOD = PERSONALTAB.PERSONALKOD AND tidbuff10.AONR = "160"
         AND YEAR(tidbuff10.DATUM) = YEAR(regdatum) AND tidbuff10.TIDLOG = TRUE NO-LOCK:
            totarbkort = totarbkort + klock100(tidbuff10.TOTALT).
         END.         
         totarbkorti = totarbkort.         
         IF CMB_KNAPP = "ANNAT IN" THEN DO:
            ASSIGN 
            nytid = regstart.
            RUN TIMSEK.P.
            regstartsek = sekunder.
            nytid = FILL-IN_TID.
            RUN TIMSEK.P.
            regslutsek = sekunder. 
            RUN TOTTID.P.            
            totarbkort = totarbkort +  klock100(nytid).
         END.
         IF CMB_KNAPP = "ANNAT UT" OR CMB_KNAPP = "IN" THEN DO:
            ASSIGN 
            nytid = FILL-IN_TID.
            RUN TIMSEK.P.
            regstartsek = sekunder.
            nytid = regslut.
            RUN TIMSEK.P.
            regslutsek = sekunder. 
            RUN TOTTID.P.            
            totarbkort = totarbkort +  klock100(nytid).
         END. 
         IF Guru.Konstanter:globforetag = "gkal"  THEN foremaxarbkort = 63.
         ELSE IF Guru.Konstanter:globforetag = "SNAT"  THEN foremaxarbkort = 63.
         ELSE IF Guru.Konstanter:globforetag = "LULE"  THEN foremaxarbkort = 63.            
         ELSE foremaxarbkort = 54.     
         avarfor = 0.
         IF Guru.Konstanter:globforetag = "gkal" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "elpa" THEN DO:   
            RUN havafor (INPUT PERSONALTAB.PERSONALKOD, OUTPUT avarfor).                        
         END.         
         IF avarfor > 0 THEN maxarbkort = avarfor.
         ELSE maxarbkort = foremaxarbkort.
         
         IF totarbkort > maxarbkort THEN DO:            
            CREATE felmeddtemp.  
            felmeddtemp.felmedd = "Max " + STRING(maxarbkort) + " timmar per år får skrivas på arbetstidförkortning, du har tidigare skrivit "  + STRING(totarbkorti) + "timmar".
            RETURN.                  
         END.            
      END.  
      IF AVAILABLE AONRTAB AND AONRTAB.AONR = "161" THEN DO:              
         totarbkort = 0.                       
         FOR EACH tidbuff10 WHERE tidbuff10.PERSONALKOD = PERSONALTAB.PERSONALKOD AND tidbuff10.AONR = "161"
         AND YEAR(tidbuff10.DATUM) = YEAR(regdatum) AND tidbuff10.TIDLOG = TRUE NO-LOCK:
            totarbkort = totarbkort + klock100(tidbuff10.TOTALT).
         END.         
         totarbkorti = totarbkort.         
         IF CMB_KNAPP = "ANNAT IN" THEN DO:
            totarbkort = totarbkort +  klock100(FILL-IN_TID) - klock100(regstart).
         END.
         IF CMB_KNAPP = "ANNAT UT" THEN DO:
            totarbkort = totarbkort +  klock100(regslut) - klock100(FILL-IN_TID).
         END.
         IF CMB_KNAPP = "IN" THEN DO:
            totarbkort = totarbkort +  klock100(regslut) - klock100(FILL-IN_TID).
         END.                  
         maxarbkort = 27.       
         IF totarbkort > maxarbkort THEN DO:            
            CREATE felmeddtemp.  
            felmeddtemp.felmedd = "Max " + STRING(maxarbkort) + " timmar per år får skrivas på arbetstidförkortning,du har skrivit"  + STRING(totarbkorti) + "timmar".
            RETURN.                  
         END.            
      END.    
      IF AVAILABLE AONRTAB AND AONRTAB.AONR = "135" THEN DO:              
         totarbkort = 0.                       
         FOR EACH tidbuff10 WHERE tidbuff10.PERSONALKOD = PERSONALTAB.PERSONALKOD AND tidbuff10.AONR = "135"
         AND YEAR(tidbuff10.DATUM) = YEAR(regdatum) AND tidbuff10.TIDLOG = TRUE NO-LOCK:
            totarbkort = totarbkort + klock100(tidbuff10.TOTALT).
         END.         
         totarbkort = totarbkorti.
         IF CMB_KNAPP = "ANNAT IN" THEN DO:
            totarbkort = totarbkort +  klock100(FILL-IN_TID) - klock100(regstart).
         END.
         IF CMB_KNAPP = "ANNAT UT" THEN DO:
            totarbkort = totarbkort +  klock100(regslut) - klock100(FILL-IN_TID).
         END.
         IF CMB_KNAPP = "IN" THEN DO:
            totarbkort = totarbkort +  klock100(regslut) - klock100(FILL-IN_TID).
         END.                           
      END.    
   END.
END.
RUN btnreg_UI.
IF AVAILABLE TIDREGITAB THEN RELEASE TIDREGITAB NO-ERROR.
IF AVAILABLE FLEXTID THEN RELEASE FLEXTID NO-ERROR.
IF AVAILABLE FLEXDAG THEN RELEASE FLEXDAG NO-ERROR.

PROCEDURE btnreg_UI :
   FIND FIRST FLEXAVT WHERE FLEXAVT.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.
   FIND FIRST FLEXREG WHERE FLEXREG.KOD = FLEXAVT.FLEXKOD USE-INDEX FLEXREG NO-LOCK NO-ERROR.
   DO /*TRANSACTION*/:   
      DO TRANSACTION:   
         CREATE FLEXTID. 
         ASSIGN       
         FLEXTID.PERSONALKOD = PERSONALTAB.PERSONALKOD
         FLEXTID.KNAPP = CMB_KNAPP 
         FLEXTID.DATUM = regdatum 
         FLEXTID.TID = FILL-IN_TID      
         FLEXTID.ORSAK = "Glömd registrering" + kommentar 
         FLEXTID.AUTO = "GLOM".   
         IF AVAILABLE AONRTAB THEN DO:
            ASSIGN FLEXTID.AONR = AONRTAB.AONR
            FLEXTID.DELNR = AONRTAB.DELNR.
         END.
         ELSE DO:
            ASSIGN FLEXTID.AONR = ""
            FLEXTID.DELNR = 0.
         END.
         IF vart = "NYA" THEN DO:
            flexstart = FLEXTID.TID. 
         END.   
         flrec = RECID(FLEXTID).
         RUN SLUTARB.P.
         IF FLEXTID.KNAPP = "In" THEN ASSIGN FLEXTID.KOM = TRUE FLEXTID.GICK = FALSE.
         IF FLEXTID.KNAPP = "Ut" THEN ASSIGN FLEXTID.KOM = FALSE FLEXTID.GICK = TRUE. 
         IF FLEXTID.KNAPP = "Övertid ut" THEN ASSIGN FLEXTID.KOM = FALSE FLEXTID.GICK = TRUE. 
         flhjrec = ?.      
         FIND PREV FLEXTID WHERE FLEXTID.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         FLEXTID.DATUM = regdatum USE-INDEX FLEX NO-LOCK NO-ERROR.       
         IF AVAILABLE FLEXTID THEN DO:
            flhjrec = RECID(FLEXTID).
         END.
         FIND FLEXTID WHERE RECID(FLEXTID) = flrec EXCLUSIVE-LOCK NO-ERROR.
         FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
         FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FLEXDAG THEN DO:
            CREATE FLEXDAG.
            ASSIGN FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD
            FLEXDAG.DATUM = FLEXTID.DATUM
            FLEXDAG.KONTROLL = "Ejkontroll"
            FLEXDAG.START = regstart
            FLEXDAG.SLUT = regslut
            FLEXDAG.FELOK = FALSE.
         END.  
         ASSIGN
         fldrec = RECID(FLEXDAG)      
         regdatum = FLEXDAG.DATUM.
         IF FLEXDAG.KONTROLL = "Kontroll" THEN DO:
            ASSIGN FLEXDAG.KONTROLL = "Ejkontroll" FLEXDAG.FELOK = FALSE.
         END. 
      END.
      IF FLEXTID.KNAPP = "In" THEN DO:      
         IF AVAILABLE FLEXREG THEN DO:
            ASSIGN
            flexmost = FLEXREG.MOSTART.
            flexmosl = FLEXREG.MOSLUT.
            /* sommartid*/
            /*k- morgonflex till 9 både sommar och vinter , övriga sommar 8.30 vinter 9 -ändras manuellt i FLEXREG*/         
            IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN DO:
               IF FLEXAVT.FLEXKOD = "K" THEN regdatum = regdatum.               
               ELSE IF flexmosl = 9 THEN ASSIGN flexmosl = 8.30.                                     
            END.
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN DO:
               IF FLEXAVT.FLEXKOD = "K" THEN regdatum = regdatum.
               ELSE IF flexmosl = 9 THEN ASSIGN flexmosl = 8.30.               
                          
            END.
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN DO: 
               IF FLEXAVT.FLEXKOD = "K" THEN regdatum = regdatum.
               ELSE IF flexmosl = 9 THEN ASSIGN flexmosl = 8.30.                                         
            END.
            ELSE DO:
               IF FLEXAVT.FLEXKOD = "K" THEN regdatum = regdatum.
               ELSE  IF flexmosl = 8.30 THEN ASSIGN flexmosl = 9.00.                                       
            END.
            IF PERSONALTAB.DELTID = TRUE THEN DO:
               FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = PERSONALTAB.ANSTALLNING NO-LOCK NO-ERROR.    
               IF AVAILABLE ORDARB THEN DO:
                  sekunder = ORDARB.START1.
                  RUN SEKTIM.P.               
                  IF nytid < regstart THEN DO:                   
                     nytid = flexmosl.
                     RUN TIMSEK.P.
                     seku = sekunder.
                     nytid = regstart.
                     RUN TIMSEK.P.
                     sekunder = seku - ORDARB.START1 + sekunder.
                     RUN SEKTIM.P.
                     flexmosl = nytid.
                     nytid = flexmost.
                     RUN TIMSEK.P.
                     seku = sekunder.
                     nytid = regstart.
                     RUN TIMSEK.P.
                     sekunder = seku - ORDARB.START1 + sekunder.
                     RUN SEKTIM.P.
                     flexmost = nytid.
                  END.               
               END.
            END.
            DO TRANSACTION:            
               FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
               FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
               IF flexmost > FLEXTID.TID THEN ASSIGN FLEXDAG.START = flexmost.            
               ELSE ASSIGN FLEXDAG.START = FLEXTID.TID.                     
            END.
         END.
         
         IF vart = "NYA" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
            ELSE DO TRANSACTION:
               FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               AND TIDREGITAB.DATUM = regdatum AND TIDLOG = TRUE 
               AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE TIDREGITAB THEN DO:                  
                  IF PERSONALTAB.OVERTIDUTTAG = "I" AND FLEXTID.TID < flexmost THEN DO:
                     ASSIGN
                     fstart = FLEXTID.TID.
                     fslut = FLEXDAG.START.
                     RUN nytideo_UI.
                  END.            
                  ASSIGN
                  fstart = FLEXDAG.START
                  fslut = FLEXDAG.SLUT.
                  RUN nytid_UI.                  
               END.
               ELSE DO:         
                  IF FLEXTID.TID < TIDREGITAB.SLUT THEN DO:                   
                     ASSIGN
                     TIDREGITAB.START = FLEXDAG.START.
                     RUN andtid_UI.                     
                     IF AVAILABLE AONRTAB THEN DO:                  
                        ASSIGN
                        TIDREGITAB.AONR = AONRTAB.AONR
                        TIDREGITAB.DELNR = AONRTAB.DELNR.
                        TIDREGITAB.PRISTYP = AONRTAB.PRISTYP.
                        IF AVAILABLE TIMKOSTNADSTAB THEN DO:                     
                           TIDREGITAB.PRIS = TIMKOSTNADSTAB.PRISA.
                           RUN pris_UI.
                        END.
                     END.
                  END.
               END.   
            END.
         END.   
      END.   
      ELSE IF FLEXTID.KNAPP = "Ut" THEN DO: 
         IF AVAILABLE FLEXREG THEN DO:
            /*egentligen borde kollektiv vatten ha en egen anstformtab med arbetstid 7-16 den alla på vatten har är 8-17
            8-17 jämfört med KV flexavtal6-17 gör att de inte har någorn flexmån på kvällen . de borde ha en timme*/
            DO TRANSACTION:            
               FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
               FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
               IF FLEXAVT.FLEXKOD = "KV" AND PERSONALTAB.DELTID = TRUE THEN flexkvsl = flexkvsl + 1.
               IF flexkvsl < FLEXTID.TID THEN ASSIGN FLEXDAG.SLUT = flexkvsl.
               ELSE ASSIGN FLEXDAG.SLUT = FLEXTID.TID.
            END.
         END.   
         IF vart = "NYA" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
            ELSE DO TRANSACTION:
               FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               AND TIDREGITAB.DATUM = regdatum AND TIDLOG = TRUE 
               AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE TIDREGITAB THEN DO:         
                  IF NOT AVAILABLE AONRTAB THEN DO:                                           
                     FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                     AND TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.OVERTIDUTTAG = "F" AND 
                     TIDREGITAB.PRISTYP NE "FRÅNVARO." AND TIDREGITAB.PRISTYP NE "RESTID.." USE-INDEX PKOD NO-LOCK NO-ERROR.
                     IF AVAILABLE TIDREGITAB  THEN DO:
                        FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR NO-LOCK NO-ERROR.
                        IF AVAILABLE AONRTAB THEN DO:
                           FIND FIRST TIMKOSTNADSTAB WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
                           TIMKOSTNADSTAB.PRISTYP = AONRTAB.PRISTYP USE-INDEX PRISPERS NO-LOCK NO-ERROR.         
                        END.
                     END.
                  END.
                  ASSIGN
                  fstart = FLEXDAG.START
                  fslut = FLEXDAG.SLUT.
                  RUN nytid_UI.
                                    
               END.
               ELSE DO:                          
                  ASSIGN TIDREGITAB.SLUT = FLEXDAG.SLUT.
                  RUN andtid_UI. 
                  IF AVAILABLE AONRTAB THEN DO:                  
                     ASSIGN
                     TIDREGITAB.AONR = AONRTAB.AONR
                     TIDREGITAB.DELNR = AONRTAB.DELNR.
                     TIDREGITAB.PRISTYP = AONRTAB.PRISTYP.
                     IF AVAILABLE TIMKOSTNADSTAB THEN DO:                     
                        TIDREGITAB.PRIS = TIMKOSTNADSTAB.PRISA.                  
                     END.
                  END.
               END.
               /*reg tid efter flexgräns EJÖV 20110520 lena*/
               IF PERSONALTAB.OVERTIDUTTAG = "I" AND FLEXTID.TID > flexkvsl THEN DO:
                  CREATE tidbuff.
                  ASSIGN 
                  tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  tidbuff.START = flexkvsl     
                  tidbuff.SLUT = FLEXTID.TID
                  tidbuff.PROGRAM = 'FLEXTID' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv 
                  tidbuff.DATUM = TIDREGITAB.DATUM
                  tidbuff.DAG = TIDREGITAB.DAG
                  tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                  tidbuff.TRAKTAMENTE = TIDREGITAB.TRAKTAMENTE 
                  tidbuff.OVERTIDUTTAG = 'I'
                  tidbuff.AONR = TIDREGITAB.AONR  
                  tidbuff.DELNR = TIDREGITAB.DELNR 
                  tidbuff.PRISTYP = TIDREGITAB.PRISTYP
                  tidbuff.PRIS = TIDREGITAB.PRIS.    
                  RUN pristb_UI.                        
                  ASSIGN
                  nytid = tidbuff.START.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = tidbuff.SLUT.
                  RUN TIMSEK.P.
                  regslutsek = sekunder.
                  regdatum = tidbuff.DATUM.         
                  RUN TOTTID.P.
                  ASSIGN tidbuff.TOTALT = nytid.
                  VALIDATE tidbuff.
               END.   
            END.                        
         END.   
      END.   
      IF FLEXTID.KNAPP = "Flex in" THEN DO:
         FIND flexbuff WHERE RECID(flexbuff) = flrec NO-LOCK NO-ERROR.   
         DO TRANSACTION:         
            FIND PREV flexbuff USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE flexbuff THEN DO:
               IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM = FLEXTID.DATUM AND flexbuff.KNAPP = "Flex ut" THEN DO:
                  ASSIGN flexbuff.GICK = FALSE
                  nytid = flexbuff.TID.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = FLEXTID.TID.
                  RUN TIMSEK.P.
                  regslutsek = sekunder. 
                  RUN TOTTID.P.
                  ASSIGN FLEXDAG.FLARB = 0 - nytid.
               END.
               ELSE IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM = FLEXTID.DATUM AND flexbuff.KNAPP = "Lunch ut" THEN DO:
                  ASSIGN flexbuff.GICK = FALSE
                  nytid = flexbuff.TID.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = FLEXTID.TID.
                  RUN TIMSEK.P.
                  regslutsek = sekunder. 
                  RUN TOTTID.P.
                  ASSIGN FLEXDAG.FLARB = 0 - nytid.
               END.
               ELSE IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM NE FLEXTID.DATUM THEN DO:
                  ASSIGN FLEXTID.KOM = TRUE
                  nytid = regstart.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = FLEXTID.TID.
                  RUN TIMSEK.P.
                  regslutsek = sekunder. 
                  RUN TOTTID.P.
                  ASSIGN FLEXDAG.FLARB = 0 - nytid.
               END.
               ELSE IF flexbuff.PERSONALKOD NE FLEXTID.PERSONALKOD  THEN DO:
                  ASSIGN FLEXTID.KOM = TRUE
                  nytid = regstart.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = FLEXTID.TID.
                  RUN TIMSEK.P.
                  regslutsek = sekunder. 
                  RUN TOTTID.P.
                  ASSIGN FLEXDAG.FLARB = 0 - nytid.
               END.
            END.          
            ELSE DO:
               ASSIGN FLEXTID.KOM = TRUE
               nytid = regstart.
               RUN TIMSEK.P.
               regstartsek = sekunder.
               nytid = FLEXTID.TID.
               RUN TIMSEK.P.
               regslutsek = sekunder. 
               RUN TOTTID.P.
               ASSIGN FLEXDAG.FLARB = 0 - nytid.
            END.
         END.
         IF vart = "NYA" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
            ELSE DO TRANSACTION:
               FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
               AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE TIDREGITAB THEN DO:         
                  ASSIGN
                  fstart = FLEXDAG.START
                  fslut = FLEXTID.TID.
                  RUN flnytid_UI.                  
                  CREATE tidbuff.
                  ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  tidbuff.START = FLEXTID.TID     
                  tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                  tidbuff.DATUM = TIDREGITAB.DATUM
                  tidbuff.DAG = TIDREGITAB.DAG 
                  tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                  tidbuff.TRAKTAMENTE = AONRTAB.TRAKTAMENTE 
                  tidbuff.OVERTIDUTTAG = 'F'
                  tidbuff.AONR = AONRTAB.AONR 
                  tidbuff.DELNR = AONRTAB.DELNR 
                  tidbuff.PRISTYP = AONRTAB.PRISTYP
                  tidbuff.PRIS = TIMKOSTNADSTAB.PRISA
                  tidbuff.RESMAL = kommentar.                    
                  RUN pris2_UI.
                  ASSIGN tidbuff.SLUT = regslut.
                  ASSIGN                  
                  nytid = tidbuff.START.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = tidbuff.SLUT.
                  RUN TIMSEK.P.
                  regslutsek = sekunder.
                  regdatum = tidbuff.DATUM.                 
                  RUN TOTTID.P.
                  ASSIGN tidbuff.TOTALT = nytid.
                  VALIDATE tidbuff.
               END.
               ELSE DO:  
                  IF FLEXTID.TID > TIDREGITAB.START THEN DO:                  
                     ASSIGN 
                     flkoll =  TIDREGITAB.SLUT
                     TIDREGITAB.SLUT = FLEXTID.TID.
                     IF FLEXTID.TID > flkoll THEN flkoll = FLEXTID.TID.
                     RUN flandtid_UI.                                      
                     CREATE tidbuff.
                     ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                     tidbuff.START = FLEXTID.TID     
                     tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                     tidbuff.DATUM = TIDREGITAB.DATUM
                     tidbuff.DAG = TIDREGITAB.DAG 
                     tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                     tidbuff.TRAKTAMENTE = AONRTAB.TRAKTAMENTE 
                     tidbuff.OVERTIDUTTAG = 'F'
                     tidbuff.AONR = AONRTAB.AONR 
                     tidbuff.DELNR = AONRTAB.DELNR 
                     tidbuff.PRISTYP = AONRTAB.PRISTYP
                     tidbuff.PRIS = TIMKOSTNADSTAB.PRISA                  
                     tidbuff.SLUT = flkoll
                     tidbuff.RESMAL = kommentar.                     
                     RUN pris2_UI.
                     ASSIGN                  
                     nytid = tidbuff.START.
                     RUN TIMSEK.P.
                     regstartsek = sekunder.
                     nytid = tidbuff.SLUT.
                     RUN TIMSEK.P.
                     regslutsek = sekunder.
                     regdatum = tidbuff.DATUM.                 
                     RUN TOTTID.P.
                     ASSIGN tidbuff.TOTALT = nytid.
                     VALIDATE tidbuff.
                  END.
               END.   
            END.
         END.   
      END.      
      ELSE IF FLEXTID.KNAPP = "Flex ut" THEN DO:         
         FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
         AND flexbuff.DATUM = regdatum AND flexbuff.GICK = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
         DO TRANSACTION:                     
            FIND FLEXTID WHERE RECID(FLEXTID) = flrec EXCLUSIVE-LOCK NO-ERROR.
            FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
            FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE flexbuff THEN ASSIGN FLEXTID.GICK = FALSE.            
            ELSE DO:   
               ASSIGN FLEXTID.GICK = TRUE.
               nytid = FLEXTID.TID.
               RUN TIMSEK.P.
               regstartsek = sekunder.
               nytid = regslut.
               RUN TIMSEK.P.
               regslutsek = sekunder. 
               RUN TOTTID.P.
               ASSIGN FLEXDAG.FLARB = 0 - nytid.   
            END.     
            IF vart = "NYA" THEN DO:
               IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
               ELSE DO:
                  FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                  AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" AND TIDREGITAB.START = FLEXTID.TID EXCLUSIVE-LOCK NO-ERROR.
                  IF NOT AVAILABLE TIDREGITAB THEN DO:                  
                     FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                     AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                     AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" USE-INDEX PSTART EXCLUSIVE-LOCK NO-ERROR.
                     IF NOT AVAILABLE TIDREGITAB THEN DO:         
                        ASSIGN
                        fstart = FLEXDAG.START
                        fslut = FLEXTID.TID.                        
                        RUN nytid_UI.                   
                        CREATE tidbuff.
                        ASSIGN 
                        tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                        tidbuff.START = FLEXTID.TID     
                        tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                        tidbuff.DATUM = TIDREGITAB.DATUM
                        tidbuff.DAG = TIDREGITAB.DAG 
                        tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                        tidbuff.TRAKTAMENTE = 0 
                        tidbuff.OVERTIDUTTAG = 'F'
                        tidbuff.AONR = "155" 
                        tidbuff.DELNR = 0 
                        tidbuff.PRISTYP = "FRÅNVARO."
                        tidbuff.PRIS = 0.                    
                        ASSIGN tidbuff.SLUT = regslut.                     
                        RUN pris2_UI.
                        ASSIGN                  
                        nytid = tidbuff.START.
                        RUN TIMSEK.P.
                        regstartsek = sekunder.
                        nytid = tidbuff.SLUT.
                        RUN TIMSEK.P.
                        regslutsek = sekunder.
                        regdatum = tidbuff.DATUM.                 
                        RUN TOTTID.P.
                        ASSIGN tidbuff.TOTALT = nytid.
                        VALIDATE tidbuff.
                     END.
                     ELSE DO:                           
                        IF FLEXTID.TID > TIDREGITAB.START THEN DO:                  
                           ASSIGN
                           spslut = TIDREGITAB.SLUT.
                           TIDREGITAB.SLUT = FLEXTID.TID.
                           RUN andtid_UI.                     
                           CREATE tidbuff.
                           ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                           tidbuff.START = FLEXTID.TID     
                           tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                           tidbuff.DATUM = TIDREGITAB.DATUM
                           tidbuff.DAG = TIDREGITAB.DAG 
                           tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                           tidbuff.TRAKTAMENTE = 0 
                           tidbuff.OVERTIDUTTAG = 'F'
                           tidbuff.AONR = "155" 
                           tidbuff.DELNR = 0 
                           tidbuff.PRISTYP = "FRÅNVARO."
                           tidbuff.PRIS = 0.                  
                           ASSIGN tidbuff.SLUT = spslut.
                           RUN pris2_UI.
                           ASSIGN                  
                           nytid = tidbuff.START.
                           RUN TIMSEK.P.
                           regstartsek = sekunder.
                           nytid = tidbuff.SLUT.
                           RUN TIMSEK.P.
                           regslutsek = sekunder.
                           regdatum = tidbuff.DATUM.                 
                           RUN TOTTID.P.
                           ASSIGN tidbuff.TOTALT = nytid.
                           VALIDATE tidbuff.
                        END.                     
                        ELSE IF FLEXTID.TID = TIDREGITAB.START THEN DO:
                           /*In-stämpling  och flex ut samma klockslag*/
                           ASSIGN
                           TIDREGITAB.OVERTIDUTTAG = 'F'
                           TIDREGITAB.AONR = "155" 
                           TIDREGITAB.DELNR = 0 
                           TIDREGITAB.PRISTYP = "FRÅNVARO."
                           TIDREGITAB.PRIS = 0.                                          
                        END.   
                     END.   
                  END.
                  ELSE DO:
                     /*om redan uppdelning gjorts i Tid -byt projekt*/
                     ASSIGN                   
                     TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv                     
                     TIDREGITAB.TRAKTAMENTE = 0
                     TIDREGITAB.AONR = "155" TIDREGITAB.DELNR = 0 TIDREGITAB.PRISTYP = "FRÅNVARO."
                     TIDREGITAB.PRIS = 0.               
                  END.
                END.                     
            END.   
         END.
      END. 
      ELSE IF FLEXTID.KNAPP = "Annat in" THEN DO:
         FIND flexbuff WHERE RECID(flexbuff) = flrec NO-LOCK NO-ERROR.   
         DO TRANSACTION:         
            FIND FLEXTID WHERE RECID(FLEXTID) = flrec EXCLUSIVE-LOCK NO-ERROR.
            FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
            FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            FIND PREV flexbuff USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE flexbuff THEN DO:
               IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM = FLEXTID.DATUM AND flexbuff.KNAPP = "Annat ut" THEN ASSIGN flexbuff.GICK = FALSE.                           
               ELSE IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM = FLEXTID.DATUM AND flexbuff.KNAPP = "Lunch ut" THEN ASSIGN flexbuff.GICK = FALSE.                          
               ELSE IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM NE FLEXTID.DATUM THEN ASSIGN FLEXTID.KOM = TRUE.                           
               ELSE IF flexbuff.PERSONALKOD NE FLEXTID.PERSONALKOD THEN ASSIGN FLEXTID.KOM = TRUE.                           
            END.  
            ELSE ASSIGN FLEXTID.KOM = TRUE.         
            IF vart = "AND" THEN DO:
               IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
               ELSE DO:  
                  FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                  AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.SLUT = flexstart
                  AND TIDREGITAB.GODKAND = ""
                  EXCLUSIVE-LOCK NO-ERROR.
                  IF AVAILABLE TIDREGITAB THEN DO:         
                     FIND FIRST tidbuff WHERE tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                     AND tidbuff.DATUM = regdatum AND tidbuff.TIDLOG = TRUE 
                     AND tidbuff.OVERTIDUTTAG = "F" AND tidbuff.START = flexstart 
                     AND tidbuff.GODKAND = ""
                     EXCLUSIVE-LOCK NO-ERROR.
                     IF AVAILABLE tidbuff THEN DO:        
                        ASSIGN
                        TIDREGITAB.SLUT = FLEXTID.TID.
                        RUN andtid_UI.                     
                        ASSIGN
                        tidbuff.START = FLEXTID.TID.
                        RUN andtid_UI.                     
                     END.                  
                  END.   
               END.
            END. 
         END.
         IF vart = "NYA" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
            ELSE DO TRANSACTION:  
               FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
               AND TIDREGITAB.START LE FLEXTID.TID AND TIDREGITAB.SLUT GE FLEXTID.TID
               AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE TIDREGITAB THEN DO:         
                  ASSIGN
                  fstart = FLEXDAG.START
                  fslut = FLEXTID.TID.
                  RUN nytid_UI.                       
                  ASSIGN
                  sok1 = "TID"
                  sok3 = PERSONALTAB.PERSONALKOD.
                  IF Guru.Konstanter:appcon THEN DO: 
                     RUN FLEXTIDH.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
                     (INPUT 1,INPUT-OUTPUT sok1,INPUT-OUTPUT sok2,INPUT-OUTPUT sok3,
                     INPUT-OUTPUT sok4,INPUT-OUTPUT sok5).            
                  END.
                  ELSE DO:
                     RUN FLEXTIDH.P 
                     (INPUT 1,INPUT-OUTPUT sok1,INPUT-OUTPUT sok2,INPUT-OUTPUT sok3,
                     INPUT-OUTPUT sok4,INPUT-OUTPUT sok5).            
                  END.                  
                  IF sok1 = "FINNS EJ" THEN DO:
                     FIND FIRST AONRTAB WHERE AONRTAB.AONR = varaonr AND AONRTAB.DELNR = vardelnr
                     NO-LOCK NO-ERROR.
                     IF AVAILABLE AONRTAB THEN DO:
                        FIND FIRST TIMKOSTNADSTAB WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
                        TIMKOSTNADSTAB.PRISTYP = AONRTAB.PRISTYP USE-INDEX PRISPERS NO-LOCK NO-ERROR.         
                     END.
                  END.
                  ELSE DO:
                     FIND FIRST AONRTAB WHERE AONRTAB.AONR = sok1 AND AONRTAB.DELNR = sok2 NO-LOCK NO-ERROR.    
                     IF AVAILABLE AONRTAB THEN DO:
                        FIND FIRST TIMKOSTNADSTAB WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
                        TIMKOSTNADSTAB.PRISTYP = AONRTAB.PRISTYP USE-INDEX PRISPERS NO-LOCK NO-ERROR.         
                     END.
                  END.                 
                  ASSIGN
                  fstart = FLEXTID.TID
                  fslut = FLEXDAG.SLUT.
                  /* lägg bara kommentaren på första registreringen*/
                  kommentar = "".
                  RUN nytid_UI.
                                    
               END.
               ELSE DO:         
                 ASSIGN
                 flkoll = TIDREGITAB.SLUT
                 TIDREGITAB.SLUT = FLEXTID.TID.                     
                 RUN andtid_UI.                     
                 CREATE tidbuff.
                 ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                 tidbuff.START = FLEXTID.TID     
                 tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                 tidbuff.DATUM = TIDREGITAB.DATUM
                 tidbuff.DAG = TIDREGITAB.DAG 
                 tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                 tidbuff.TRAKTAMENTE = AONRTAB.TRAKTAMENTE 
                 tidbuff.OVERTIDUTTAG = 'F'
                 tidbuff.AONR = AONRTAB.AONR 
                 tidbuff.DELNR = AONRTAB.DELNR 
                 tidbuff.PRISTYP = AONRTAB.PRISTYP
                 tidbuff.PRIS = TIMKOSTNADSTAB.PRISA.                         
                 ASSIGN tidbuff.SLUT = flkoll.
                 tidbuff.RESMAL = kommentar.
                 RUN pris2_UI.
                 ASSIGN                  
                 nytid = tidbuff.START.
                 RUN TIMSEK.P.
                 regstartsek = sekunder.
                 nytid = tidbuff.SLUT.
                 RUN TIMSEK.P.
                 regslutsek = sekunder.
                 regdatum = tidbuff.DATUM.                 
                 RUN TOTTID.P.
                 ASSIGN tidbuff.TOTALT = nytid.
                 VALIDATE tidbuff.
               END.   
            END.
         END.   
      END.      
      ELSE IF FLEXTID.KNAPP = "Annat ut" THEN DO:         
         
         IF vart = "nya" THEN DO TRANSACTION:
            FIND FLEXTID WHERE RECID(FLEXTID) = flrec EXCLUSIVE-LOCK NO-ERROR.            
            FIND FIRST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
            AND flexbuff.DATUM = regdatum AND flexbuff.GICK = TRUE USE-INDEX FLEX NO-LOCK NO-ERROR.
            IF AVAILABLE flexbuff THEN DO:              
               ASSIGN FLEXTID.GICK = FALSE.   
            END.
            ELSE DO:   
               ASSIGN FLEXTID.GICK = TRUE.
            END.                 
            kolllu = 0.
            IF lunchstarten NE lunchslutet AND FLEXTID.TID GE lunchslutet THEN kolllu = 1.
            IF lunchstarten =  lunchslutet AND FLEXTID.TID > regstart  THEN kolllu =  1.
            IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
               kollfv1 = regslut - 1.
               kollfv2 = FLEXTID.TID + 1.
            END.
            IF Guru.Konstanter:globforetag = "MISV" THEN DO:            
               kollfv1 = klock60(klock100(regslut) - 1.25).
               kollfv2 = klock60(klock100(FLEXTID.TID) + 1.25).
            END.            
            FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
            AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
            AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" USE-INDEX PSTART EXCLUSIVE-LOCK NO-ERROR.
            IF NOT AVAILABLE TIDREGITAB THEN DO:         
               ASSIGN
               fstart = regstart
               fslut =  regslut.
               RUN nytid_UI.               
            END.
            ELSE DO:         
               IF FLEXTID.TID > TIDREGITAB.START THEN DO:                  
                  IF TIDREGITAB.AONR = AONRTAB.AONR AND TIDREGITAB.DELNR = AONRTAB.DELNR  THEN musz = musz.
                  ELSE DO:                       
                     ASSIGN
                     TIDREGITAB.SLUT = FLEXTID.TID.
                     RUN andtid_UI.                     
                     CREATE tidbuff.
                     ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                     tidbuff.START = FLEXTID.TID     
                     tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                     tidbuff.DATUM = TIDREGITAB.DATUM
                     tidbuff.DAG = TIDREGITAB.DAG 
                     tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                     tidbuff.TRAKTAMENTE = AONRTAB.TRAKTAMENTE 
                     tidbuff.OVERTIDUTTAG = 'F'
                     tidbuff.AONR = AONRTAB.AONR 
                     tidbuff.DELNR = AONRTAB.DELNR 
                     tidbuff.PRISTYP = AONRTAB.PRISTYP
                     tidbuff.PRIS = TIMKOSTNADSTAB.PRISA   
                     tidbuff.RESMAL = kommentar.                      
                     ASSIGN tidbuff.SLUT = regslut.
                     RUN pris2_UI.
                     ASSIGN                  
                     nytid = tidbuff.START.
                     RUN TIMSEK.P.
                     regstartsek = sekunder.
                     nytid = tidbuff.SLUT.
                     RUN TIMSEK.P.
                     regslutsek = sekunder.
                     regdatum = tidbuff.DATUM.                 
                     RUN TOTTID.P.
                     ASSIGN tidbuff.TOTALT = nytid.
                     VALIDATE tidbuff.                     
                     IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "elpa" THEN DO:                                           
                        kolllu = 0.
                        IF lunchstarten NE lunchslutet AND FLEXTID.TID GE lunchslutet THEN kolllu = 1.
                        IF lunchstarten =  lunchslutet AND FLEXTID.TID > regstart  THEN kolllu =  1.
                        IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
                           kollfv1 = regslut - 1.
                           kollfv2 = FLEXTID.TID + 1.
                        END.
                        IF Guru.Konstanter:globforetag = "MISV" THEN DO:            
                           kollfv1 = klock60(klock100(regslut) - 1.25).
                           kollfv2 = klock60(klock100(FLEXTID.TID) + 1.25).
                        END.
                        /*halvdagar har ingen lunch*/
                        IF AONRTAB.AONR = "140" AND FLEXTID.TID <  kollfv1 AND kolllu =  1   THEN DO:                             
                           /*special vid friskvård i kombination med flex*/
                           ASSIGN
                           tidbuff.SLUT = kollfv2                 
                           nytid = tidbuff.START.
                           RUN TIMSEK.P.
                           ASSIGN regstartsek = sekunder
                           nytid = tidbuff.SLUT.
                           RUN TIMSEK.P.
                           ASSIGN regslutsek = sekunder
                           regdatum = tidbuff.DATUM.
                           RUN TOTTID.P.
                           ASSIGN tidbuff.TOTALT = nytid.
                           VALIDATE tidbuff.                  
                           CREATE tidbuff.
                           ASSIGN tidbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
                           tidbuff.START = kollfv2     
                           tidbuff.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
                           tidbuff.DATUM = TIDREGITAB.DATUM
                           tidbuff.DAG = TIDREGITAB.DAG 
                           tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
                           tidbuff.TRAKTAMENTE = 0                           
                           tidbuff.OVERTIDUTTAG = 'F'
                           tidbuff.AONR = "155" 
                           tidbuff.DELNR = 0 
                           tidbuff.PRISTYP = "FRÅNVARO."
                           tidbuff.PRIS = 0             
                           tidbuff.SLUT = regslut.
                           RUN pris2_UI.
                           ASSIGN            
                           nytid = tidbuff.START.
                           RUN TIMSEK.P.
                           regstartsek = sekunder.
                           nytid = tidbuff.SLUT.
                           RUN TIMSEK.P.
                           regslutsek = sekunder.
                           regdatum = tidbuff.DATUM.            
                           RUN TOTTID.P.
                           ASSIGN tidbuff.TOTALT = nytid.
                           VALIDATE tidbuff.
                           tidtabrec = RECID(tidbuff).                           
                        END.
                     END.            
                  END.
               END.
            END.                         
            IF AONRTAB.AONR = "140" AND FLEXTID.TID < kollfv1 AND kolllu =  1   THEN DO:               
               ASSIGN 
               FLEXTID.KNAPP = "Flex ut" 
               FLEXTID.TID =  kollfv2.
            END.            
         END.
      END.
      IF  CMB_KNAPP = "Annat in" THEN DO TRANSACTION:         
         FIND LAST flexbuff WHERE flexbuff.PERSONALKOD = PERSONALTAB.PERSONALKOD
         AND flexbuff.DATUM = regdatum  USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE flexbuff AND flexbuff.KNAPP = "Annat ut" THEN DO:
            ASSIGN flexbuff.GICK = FALSE.
         END.         
         FIND LAST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
         AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
         AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" USE-INDEX PSTART EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE TIDREGITAB THEN DO:         
            ASSIGN
            fstart = FLEXDAG.START
            fslut = FLEXDAG.SLUT.
            RUN nytid_UI.            
         END.
      END.
      ELSE IF FLEXTID.KNAPP = "Lunch in" THEN DO:
         FIND flexbuff WHERE RECID(flexbuff) = flrec NO-LOCK NO-ERROR.   
         DO TRANSACTION:         
            FIND FLEXTID WHERE RECID(FLEXTID) = flrec EXCLUSIVE-LOCK NO-ERROR.
            FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
            FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            FIND PREV flexbuff USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE flexbuff THEN DO:
               IF flexbuff.PERSONALKOD = FLEXTID.PERSONALKOD AND 
               flexbuff.DATUM = FLEXTID.DATUM AND flexbuff.KNAPP = "Flex ut" THEN DO:
                  ASSIGN flexbuff.GICK = FALSE
                  nytid = flexbuff.TID.
                  RUN TIMSEK.P.
                  regstartsek = sekunder.
                  nytid = FLEXTID.TID.
                  RUN TIMSEK.P.
                  regslutsek = sekunder. 
                  RUN TOTTID.P.
                  ASSIGN FLEXDAG.FLARB = 0 - nytid.
               END.
            END.
            IF vart = "AND" OR vart = "nya" THEN DO:
               IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
               ELSE DO:
                  FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                  AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.START < flexstart
                  AND TIDREGITAB.SLUT > flexstart AND TIDREGITAB.GODKAND = ""
                  EXCLUSIVE-LOCK NO-ERROR.
                  IF AVAILABLE TIDREGITAB THEN DO:         
                     RUN andtid_UI.                  
                  END.   
               END.
            END.   
         END.
      END.    
      ELSE IF FLEXTID.KNAPP = "Lunch ut" THEN DO:
         IF vart = "AND" OR vart = "nya" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
            ELSE DO TRANSACTION:
               FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
               AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.START < flexstart
               AND TIDREGITAB.SLUT > flexstart AND TIDREGITAB.GODKAND = ""
               EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE TIDREGITAB THEN DO:         
                  RUN andtid_UI.
                  
               END.   
            END.
         END.   
      END.    

      ELSE IF FLEXTID.KNAPP = "Övertid in" THEN DO:                  
         IF regstart = regslut OR FLEXTID.TID > regslut THEN DO:  /*HELG*/            
            IF vart = "NYA" THEN DO:
               IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
               ELSE DO:  
                  FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE  AND TIDREGITAB.START LE FLEXTID.TID
                  AND TIDREGITAB.SLUT GE FLEXTID.TID 
                  AND TIDREGITAB.OVERTIDUTTAG NE "F" AND TIDREGITAB.GODKAND = "" NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE TIDREGITAB THEN DO: 
                     fstart = FLEXTID.TID.                   
                     fslut = FLEXTID.TID.
                     RUN nytidov_UI.               
                  END.               
               END.
            END.
         END.   
         ELSE DO:            
            IF vart = "NYA" THEN DO:
               IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.
               ELSE DO:  
                  FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                  AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                  AND TIDREGITAB.OVERTIDUTTAG = "F" AND TIDREGITAB.GODKAND = "" NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE TIDREGITAB THEN DO:                             
                      ASSIGN
                      fstart = FLEXTID.TID
                      fslut = FLEXDAG.START.
                      RUN nytidov_UI.     
                      ASSIGN
                      fstart = FLEXDAG.START
                      fslut = FLEXDAG.SLUT.
                      DO TRANSACTION:                      
                        RUN nytid_UI.               
                      END.
                  END.               
               END.
            END.   
         END.

      END.
      ELSE IF FLEXTID.KNAPP = "Övertid ut" THEN DO:                  
         IF vart = "NYA" THEN DO:
            IF AVAILABLE GODKOLL AND GODKOLL.DATUM GE regdatum THEN regdatum = regdatum.               
            ELSE DO:            
               IF regstart = regslut OR FLEXTID.TID > regslut THEN DO:  /*HELG*/            
                  FIND FIRST flexbuff WHERE RECID(flexbuff) = flhjrec NO-LOCK NO-ERROR.
                  IF AVAILABLE flexbuff THEN DO:
                     IF flexbuff.KNAPP = "Övertid in"  AND flexbuff.TID GE regslut THEN DO:
                        DO TRANSACTION:                        
                           FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
                           AND TIDREGITAB.DATUM = regdatum AND TIDREGITAB.TIDLOG = TRUE 
                           AND TIDREGITAB.START = flexbuff.TID AND TIDREGITAB.SLUT = flexbuff.TID AND
                           TIDREGITAB.GODKAND = "" EXCLUSIVE-LOCK NO-ERROR.
                           IF AVAILABLE TIDREGITAB THEN ASSIGN TIDREGITAB.SLUT = FLEXTID.TID.                              
                        END.
                        IF AVAILABLE TIDREGITAB THEN RUN andtidov_UI.                                                     
                     END.
                     ELSE DO:
                        RUN overuttolk_UI.                                                      
                     END.
                  END.
               END.
            END.
         END.         
      END.
      
      RUN SLUTARB.P.
   END.
END PROCEDURE.
PROCEDURE nytid_UI :      
   CREATE TIDREGITAB.
   ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
   TIDREGITAB.START = fstart     
   TIDREGITAB.SLUT = fslut   
   TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
   TIDREGITAB.DATUM = regdatum
   TIDREGITAB.DAG = regdagnamn
   TIDREGITAB.VECKONUMMER = regvnr
   TIDREGITAB.TRAKTAMENTE = AONRTAB.TRAKTAMENTE
   TIDREGITAB.OVERTIDUTTAG = 'F'
   TIDREGITAB.AONR = AONRTAB.AONR
   TIDREGITAB.DELNR = AONRTAB.DELNR
   TIDREGITAB.PRISTYP = AONRTAB.PRISTYP
   TIDREGITAB.PRIS = TIMKOSTNADSTAB.PRISA.                         
   RUN pris_UI.
   ASSIGN            
   nytid = TIDREGITAB.START.
   RUN TIMSEK.P.
   regstartsek = sekunder.
   nytid = TIDREGITAB.SLUT.
   RUN TIMSEK.P.
   regslutsek = sekunder.
   regdatum = TIDREGITAB.DATUM.               
   RUN TOTTID.P.
   ASSIGN TIDREGITAB.TOTALT = nytid.   
   TIDREGITAB.RESMAL = kommentar.
   VALIDATE TIDREGITAB.
END PROCEDURE.

PROCEDURE nytideo_UI :      
   CREATE TIDREGITAB.
   ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
   TIDREGITAB.START = fstart     
   TIDREGITAB.SLUT = fslut   
   TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
   TIDREGITAB.DATUM = regdatum
   TIDREGITAB.DAG = regdagnamn
   TIDREGITAB.VECKONUMMER = regvnr
   TIDREGITAB.TRAKTAMENTE = AONRTAB.TRAKTAMENTE
   TIDREGITAB.OVERTIDUTTAG = 'I'
   TIDREGITAB.AONR = AONRTAB.AONR
   TIDREGITAB.DELNR = AONRTAB.DELNR
   TIDREGITAB.PRISTYP = AONRTAB.PRISTYP
   TIDREGITAB.PRIS = TIMKOSTNADSTAB.PRISA.                         
   RUN pris_UI.
   ASSIGN            
   nytid = TIDREGITAB.START.
   RUN TIMSEK.P.
   regstartsek = sekunder.
   nytid = TIDREGITAB.SLUT.
   RUN TIMSEK.P.
   regslutsek = sekunder.
   regdatum = TIDREGITAB.DATUM.               
   RUN TOTTID.P.
   ASSIGN TIDREGITAB.TOTALT = nytid.   
   TIDREGITAB.RESMAL = kommentar.
   VALIDATE TIDREGITAB.
END PROCEDURE.

PROCEDURE andtid_UI :
   ASSIGN
   TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
   nytid = TIDREGITAB.START.
   RUN TIMSEK.P.
   regstartsek = sekunder.
   nytid = TIDREGITAB.SLUT.
   RUN TIMSEK.P.
   regslutsek = sekunder.
   regdatum = TIDREGITAB.DATUM.                  
   RUN TOTTID.P.
   ASSIGN TIDREGITAB.TOTALT = nytid.
   /*TIDREGITAB.RESMAL = kommentar. */
   VALIDATE TIDREGITAB.
END PROCEDURE.


PROCEDURE flnytid_UI :   
   CREATE TIDREGITAB.
   ASSIGN 
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
   TIDREGITAB.START = fstart     
   TIDREGITAB.SLUT = fslut   
   TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
   TIDREGITAB.DATUM = regdatum
   TIDREGITAB.DAG = regdagnamn 
   TIDREGITAB.VECKONUMMER = regvnr
   TIDREGITAB.TRAKTAMENTE = 0 
   TIDREGITAB.OVERTIDUTTAG = 'F'
   TIDREGITAB.AONR = "155" 
   TIDREGITAB.DELNR = 0 
   TIDREGITAB.PRISTYP = "FRÅNVARO."
   TIDREGITAB.PRIS = 0.                         
   RUN pris_UI.
   ASSIGN            
   nytid = TIDREGITAB.START.
   RUN TIMSEK.P.
   regstartsek = sekunder.
   nytid = TIDREGITAB.SLUT.
   RUN TIMSEK.P.
   regslutsek = sekunder.
   regdatum = TIDREGITAB.DATUM.               
   RUN TOTTID.P.
   ASSIGN TIDREGITAB.TOTALT = nytid.
   VALIDATE TIDREGITAB.
END PROCEDURE.

PROCEDURE flandtid_UI :  
  ASSIGN
  TIDREGITAB.PROGRAM = 'GLOMDF' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
  TIDREGITAB.DATUM = regdatum
  TIDREGITAB.DAG = regdagnamn 
  TIDREGITAB.VECKONUMMER = regvnr
  TIDREGITAB.TRAKTAMENTE = 0 
  TIDREGITAB.OVERTIDUTTAG = 'F'
  TIDREGITAB.AONR = "155" 
  TIDREGITAB.DELNR = 0 
  TIDREGITAB.PRISTYP = "FRÅNVARO."
  TIDREGITAB.PRIS = 0.                         
  ASSIGN            
  nytid = TIDREGITAB.START.
  RUN TIMSEK.P.
  regstartsek = sekunder.
  nytid = TIDREGITAB.SLUT.
  RUN TIMSEK.P.
  regslutsek = sekunder.
  regdatum = TIDREGITAB.DATUM.               
  RUN TOTTID.P.
  ASSIGN TIDREGITAB.TOTALT = nytid.
  VALIDATE TIDREGITAB.
END PROCEDURE.

PROCEDURE nytidov_UI :
   {SOKSTART.I}
   ASSIGN
   soktemp.SOKVAL = 1
   soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
   soktemp.SOKCHAR[2] = PERSONALTAB.PERSONALKOD
   soktemp.SOKCHAR[3] = AONRTAB.PRISTYP
   soktemp.SOKCHAR[4] = PERSONALTAB.BEFATTNING 
   soktemp.SOKDATE[1] = regdatum.
   {SOKANROP.I}
   DO TRANSACTION:   
      CREATE TIDREGITAB.
      ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
      TIDREGITAB.START = fstart     
      TIDREGITAB.SLUT = fslut   
      TIDREGITAB.PROGRAM = 'ANDFLEX' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
      TIDREGITAB.DATUM = regdatum
      TIDREGITAB.DAG = regdagnamn
      TIDREGITAB.VECKONUMMER = regvnr
      TIDREGITAB.TRAKTAMENTE = AONRTAB.TRAKTAMENTE
      TIDREGITAB.OVERTIDUTTAG = 'F'
      TIDREGITAB.AONR = AONRTAB.AONR
      TIDREGITAB.DELNR = AONRTAB.DELNR
      TIDREGITAB.PRISTYP = AONRTAB.PRISTYP
      TIDREGITAB.OVERTIDTILL = PERSONALTAB.BEFATTNING
      TIDREGITAB.PRIS = soktemp.SOKDECI[1]
      /*TIDREGITAB.OVERTIDUTTAG = ovut               */
      TIDREGITAB.RESMAL = kommentar.  
   
      ASSIGN            
      nytid = TIDREGITAB.START.
      RUN TIMSEK.P.
      regstartsek = sekunder.
      nytid = TIDREGITAB.SLUT.
      RUN TIMSEK.P.
      regslutsek = sekunder.
      regdatum = TIDREGITAB.DATUM.               
      RUN TOTTID.P.
      ASSIGN TIDREGITAB.TOTALT = nytid.      
   
      tidtabrec = RECID(TIDREGITAB).
   END.
   VALIDATE TIDREGITAB.
   RELEASE TIDREGITAB.
   /*för att tolka övertiden*/
   EMPTY TEMP-TABLE tidapptemp NO-ERROR.                   
   CREATE tidapptemp.
   ASSIGN
   tidapptemp.FORETAG = Guru.Konstanter:globforetag
   tidapptemp.ANVANDARE = Guru.Konstanter:globanv
   tidapptemp.RECPERS = persrec
   tidapptemp.RECTID = tidtabrec
   tidapptemp.DATUM = regdatum.            
   RUN TIDUPPDE.P (INPUT TABLE tidapptemp).                  
   musz = FALSE.   
   RUN TRAKTBER.P.
END PROCEDURE.

PROCEDURE andtidov_UI :
   ASSIGN
   TIDREGITAB.PROGRAM = 'ANDFLEX' + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
   nytid = TIDREGITAB.START.
   RUN TIMSEK.P.
   regstartsek = sekunder.
   nytid = TIDREGITAB.SLUT.
   RUN TIMSEK.P.
   regslutsek = sekunder.
   regdatum = TIDREGITAB.DATUM.                  
   RUN TOTTID.P.
   ASSIGN TIDREGITAB.TOTALT = nytid.
   tidtabrec = RECID(TIDREGITAB).
   VALIDATE TIDREGITAB.
   /*för att tolka övertiden*/
   EMPTY TEMP-TABLE tidapptemp NO-ERROR.                   
   CREATE tidapptemp.
   ASSIGN
   tidapptemp.FORETAG = Guru.Konstanter:globforetag
   tidapptemp.ANVANDARE = Guru.Konstanter:globanv
   tidapptemp.RECPERS = persrec
   tidapptemp.RECTID = tidtabrec
   tidapptemp.DATUM = regdatum.            
   RUN TIDUPPDE.P (INPUT TABLE tidapptemp).                  
   musz = FALSE.   
   RUN TRAKTBER.P.

END PROCEDURE.



PROCEDURE pris_UI :
   /*PRISFOR*/
   {PRISBEFTYP.I}   
END PROCEDURE.

PROCEDURE pristb_UI :
   {PRISBEFTYPTB.I}   
END PROCEDURE.
PROCEDURE pris2_UI :
   IF Guru.Konstanter:varforetypval[4] = 1 THEN DO:         
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = tidbuff.PERSONALKOD
      NO-LOCK NO-ERROR.
      FIND FIRST BEFATTNINGSTAB WHERE BEFATTNINGSTAB.BEFATTNING = PERSONALTAB.BEFATTNING
      NO-LOCK NO-ERROR.
      tidbuff.OVERTIDTILL = BEFATTNINGSTAB.BEFATTNING.
      IF tidbuff.PRISTYP = "FRÅNVARO." OR tidbuff.PRISTYP = "RESTID..." THEN DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = tidbuff.PRISTYP AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM AND 
         PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM     
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
      ELSE IF (Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV") AND tidbuff.PRISTYP = "EJ.KOSTN."  THEN DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = tidbuff.PRISTYP AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM AND 
         PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM     
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
      ELSE IF Guru.Konstanter:globforetag = "ELPA" AND tidbuff.PRISTYP = "EJ.KOSTN."  THEN DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = tidbuff.PRISTYP AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM AND 
         PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM     
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
      ELSE IF (Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV") AND tidbuff.PRISTYP = "FASTPRIS1"  THEN DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = tidbuff.PRISTYP AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM AND 
         PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM     
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
      ELSE IF Guru.Konstanter:globforetag = "ELPA" AND tidbuff.PRISTYP = "FASTPRIS1"  THEN DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = tidbuff.PRISTYP AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM AND 
         PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM     
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
      ELSE DO:
         FIND LAST PERSONALPRIS WHERE PERSONALPRIS.PERSONALKOD = tidbuff.PERSONALKOD AND
         PERSONALPRIS.BEFATTNING = BEFATTNINGSTAB.BEFATTNING AND 
         PERSONALPRIS.STARTDATUM <= tidbuff.DATUM 
         AND PERSONALPRIS.SLUTDATUM >= tidbuff.DATUM 
         NO-LOCK NO-ERROR.
         IF AVAILABLE PERSONALPRIS THEN tidbuff.PRIS = PERSONALPRIS.PRIS.  
         ELSE DO:
            {SOKSTART.I}
            ASSIGN
            soktemp.SOKVAL = 1
            soktemp.SOKINT[1] = Guru.Konstanter:varforetypval[4]
            soktemp.SOKCHAR[2] = tidbuff.PERSONALKOD
            soktemp.SOKCHAR[3] = tidbuff.PRISTYP
            soktemp.SOKCHAR[4] = tidbuff.OVERTIDTILL 
            soktemp.SOKDATE[1] = tidbuff.DATUM.
            {SOKANROP.I}
            tidbuff.PRIS = soktemp.SOKDECI[1].
         END.
      END.
   END.  
END PROCEDURE.

PROCEDURE overuttolk_UI :
   RUN REGVEC.P.
   RUN SLUTARB.P.
   /*Kolla om full arbetstid uppnådd vid ordinarie arbetstids slut*/
   RUN dagtot_UI (INPUT FLEXDAG.START, INPUT lunchstarten , INPUT lunchslutet, INPUT FILL-IN_TID, INPUT FLEXDAG.FLARB, OUTPUT dagtotal).                                                      
   
   IF FLEXREG.FULLARB = TRUE  THEN DO:              
      IF (dagtotal - regtotalt) > 0 THEN DO:
          tid2 =  klock60(klock100(FILL-IN_TID) - klock100(dagtotal) + klock100(regtotalt)).
          /* tid2 - när full arbetstid är uppnådd*/          
          IF tid2 > regslut THEN DO:             
             /*dela upp i flex och övertid*/
             DO TRANSACTION:             
                FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
                FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
                FLEXDAG.SLUT  = tid2.     

                FIND LAST TIDREGITAB WHERE 
                TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.DATUM = regdatum  AND
                TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND TIDREGITAB.OVERTIDUTTAG = 'F' AND
                TIDREGITAB.SLUT = regslut USE-INDEX PSTART EXCLUSIVE-LOCK NO-ERROR.
                IF AVAILABLE TIDREGITAB THEN DO: 
                  ASSIGN TIDREGITAB.SLUT = tid2.
                  nytid = TIDREGITAB.TOTALT.
                  RUN TIMSEK.P.
                  ASSIGN
                  
                  nytid = TIDREGITAB.START.
                  RUN TIMSEK.P.
                  ASSIGN
                  regstartsek = sekunder
                  nytid = TIDREGITAB.SLUT.
                  RUN TIMSEK.P.
                  ASSIGN
                  regslutsek = sekunder
                  regdatum = TIDREGITAB.DATUM
                  regvnr = TIDREGITAB.VECKONUMMER.
                  RUN TOTTID.P.
                  ASSIGN TIDREGITAB.TOTALT = nytid.                                         
                  FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR NO-LOCK NO-ERROR.
   
                  VALIDATE TIDREGITAB. 
                  RELEASE TIDREGITAB.
                END.
             END.
             ASSIGN
             fstart = tid2
             fslut = FLEXTID.TID.
             RUN nytidov_UI.                                                                                                                                                             
          END.
          ELSE DO:
             FIND LAST TIDREGITAB WHERE 
             TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.DATUM = regdatum  AND
             TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND TIDREGITAB.OVERTIDUTTAG = 'F' AND
             TIDREGITAB.SLUT = regslut USE-INDEX PSTART NO-LOCK NO-ERROR.
             FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR NO-LOCK NO-ERROR.
             ASSIGN
             fstart = regslut
             fslut = FLEXTID.TID.
             RUN nytidov_UI.                  
          END.
      END.          
      ELSE DO TRANSACTION:
         /*full arbetstid ej uppnådd - allt är flex*/         
         FIND FIRST FLEXDAG WHERE FLEXDAG.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
         FLEXDAG.DATUM = FLEXTID.DATUM USE-INDEX FLEX EXCLUSIVE-LOCK NO-ERROR.
         FLEXDAG.SLUT  = FLEXTID.TID.
         FIND LAST TIDREGITAB WHERE 
         TIDREGITAB.TIDLOG = TRUE AND TIDREGITAB.DATUM = regdatum  AND
         TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND TIDREGITAB.OVERTIDUTTAG = 'F' AND
         TIDREGITAB.SLUT = regslut USE-INDEX PSTART EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE TIDREGITAB THEN DO: 
           ASSIGN TIDREGITAB.SLUT = FLEXTID.TID.
           nytid = TIDREGITAB.TOTALT.
           RUN TIMSEK.P.
           ASSIGN          
           nytid = TIDREGITAB.START.
           RUN TIMSEK.P.
           ASSIGN
           regstartsek = sekunder
           nytid = TIDREGITAB.SLUT.
           RUN TIMSEK.P.
           ASSIGN
           regslutsek = sekunder
           regdatum = TIDREGITAB.DATUM
           regvnr = TIDREGITAB.VECKONUMMER.
           RUN TOTTID.P.
           ASSIGN TIDREGITAB.TOTALT = nytid.                                         
           VALIDATE TIDREGITAB. 
         END.       
      END.      
   END.
END PROCEDURE.


PROCEDURE dagtot_UI :
   DEFINE INPUT PARAMETER dagstart  AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER lstarten  AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER lslutet AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER dagslut  AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER vflarb AS DECIMAL NO-UNDO.
   DEFINE OUTPUT PARAMETER dagtotal AS DECIMAL NO-UNDO.
   dagtotal = klock60(klock100(dagslut) - klock100(dagstart) - klock100(lslutet) + klock100(lstarten) + klock100(vflarb)).
END PROCEDURE.

{AVAFOR.I}

