/* BYGGVISDYN.P */
{ALLDEF.I}
 /* bara för Guru.Konstanter:gaok */
{GLOBVAR2DEL1.I}
{WHANDLTEMP.I}
DEFINE VARIABLE ordnr         AS INTEGER NO-UNDO.
DEFINE VARIABLE C-WIN         AS HANDLE NO-UNDO.
DEFINE VARIABLE FRAME-DYN AS HANDLE NO-UNDO.   
 
DEFINE VARIABLE BTN_AVS       AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER prisvar      AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER huvprogh      AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER frm AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR whandltemp.
DEFINE VARIABLE brwh AS HANDLE NO-UNDO EXTENT 50.

FIND FIRST whandltemp WHERE NO-LOCK NO-ERROR.
ordnr = 0.
ASSIGN
ordnr = ordnr + 1.
RUN whout_UI (OUTPUT FRAME-DYN).
RUN whout_UI (OUTPUT BTN_AVS).
ON 'VALUE-CHANGED' OF FRAME-DYN PERSISTENT RUN fixastorlek_UI IN THIS-PROCEDURE.
framesizeh = frm.
PROCEDURE whout_UI :
   DEFINE OUTPUT PARAMETER wih AS HANDLE NO-UNDO.
   wih = whandltemp.WF[ordnr].
   ordnr = ordnr + 1.
END PROCEDURE.
PROCEDURE excelproc_UI :
  RUN setmultvar_UI IN brwproc[2] (INPUT TRUE).
  RUN ctrlaproc IN brwproc[2].
  RUN excelproc IN brwproc[2].
END PROCEDURE.
PROCEDURE skapabrw_UI :     
   DEFINE INPUT  PARAMETER brvnr AS INTEGER NO-UNDO.  
   DEFINE INPUT  PARAMETER tthandlez AS HANDLE NO-UNDO.
   DEFINE VARIABLE brwantal AS INTEGER NO-UNDO.
   DEFINE VARIABLE x-multi AS DECIMAL NO-UNDO.
   DEFINE VARIABLE y-multi AS DECIMAL NO-UNDO. 
   DEFINE VARIABLE radvar AS DECIMAL NO-UNDO.
   DEFINE VARIABLE colvar AS DECIMAL NO-UNDO.   
   RUN musw IN huvprogh.
   RUN DYNBRWINIT.P PERSISTENT SET brwproc[brvnr].
   RUN newbrw_UI IN brwproc[brvnr] (INPUT THIS-PROCEDURE).
   RUN brw_UI IN brwproc[brvnr] (OUTPUT brwh[brvnr]).
   RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_BYGG", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Materiel/upplag/byggid/artikel", INPUT FRAME-DYN).
   
   RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
   
   RUN brwstorlek_UI IN brwproc[brvnr](INPUT 50, INPUT 25, INPUT 1.5, INPUT 1.9, INPUT x-multi, INPUT y-multi).
   RUN fieldinit_UI IN brwproc[brvnr].
   RUN createfields_UI IN brwproc[brvnr] (INPUT "UPPLAG", INPUT "Upplag", INPUT 6, INPUT ">>9", INPUT TRUE).

   RUN createfields_UI IN brwproc[brvnr] (INPUT "FRI2", INPUT "Byggid", INPUT 10, INPUT ">>>>>>9", INPUT TRUE).
   RUN createfields_UI IN brwproc[brvnr] (INPUT "FRI3", INPUT "Fri id", INPUT 25, INPUT "x(256)", INPUT TRUE).
   RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT "Enr", INPUT 10, INPUT "x(256)", INPUT TRUE).   
   RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 25, INPUT "x(256)", INPUT TRUE).   
   RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).   
   RUN createfields_UI IN brwproc[brvnr] (INPUT "ANTAL", INPUT "Antal", INPUT 10, INPUT ">>>>>>>9", INPUT TRUE).   
   IF prisvar = 1 THEN DO:   
      RUN createfields_UI IN brwproc[brvnr] (INPUT "PRIS", INPUT "Pris/Enh", INPUT 12, INPUT ">>>>>>>9.99", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TOTPRIS", INPUT "Summa", INPUT 15, INPUT ">>>>>>>9.99", INPUT TRUE).
   END.            
   RUN createfields_UI IN brwproc[brvnr] (INPUT "MTRLTEXT", INPUT "Text", INPUT 40, INPUT "x(256)", INPUT TRUE).    
   RUN fieldslut_UI IN brwproc[brvnr].
   RUN getantal_UI IN brwproc[brvnr].      
   RUN musa IN huvprogh.
END PROCEDURE.

PROCEDURE avs_UI :
   {BORTBRWPROC.I}
END PROCEDURE.
PROCEDURE fixastorlek_UI :   
   IF VALID-HANDLE(brwh[2]) THEN  brwh[2]:WIDTH = FRAME-DYN:WIDTH - brwh[2]:COLUMN.   
END PROCEDURE.

