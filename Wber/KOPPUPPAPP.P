/*KOPPUPPAPP.P*/
{STARTFORAPP.I}
{BERUPPTEMP.I}

PROCEDURE ladda_UI :
   DEFINE INPUT PARAMETER valaonr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR berupptemp.
   EMPTY TEMP-TABLE berupptemp NO-ERROR. 
   FOR EACH BERUPP WHERE BERUPP.AONR = valaonr AND 
   BERUPP.OMRADE = valomrade USE-INDEX OMR NO-LOCK.
      CREATE berupptemp.
      BUFFER-COPY BERUPP TO berupptemp.
      berupptemp.BERROW = ROWID(BERUPP).
      
   END.
   
   {BERUPPLPUNKT.I}
END PROCEDURE.

PROCEDURE laddafavo_UI :
   DEFINE INPUT  PARAMETER fanv AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR favberupptemp.
   EMPTY TEMP-TABLE favberupptemp NO-ERROR. 
   FOR EACH BERUPP WHERE BERUPP.AONR = "FAVO" + fanv NO-LOCK:
      CREATE favberupptemp.
      BUFFER-COPY BERUPP TO favberupptemp.
   END.   
   {BERUPPLPUNKTFAV.I}
END PROCEDURE.

PROCEDURE bort_UI :
   DEFINE INPUT PARAMETER kon_rowid AS ROWID NO-UNDO.
   DO TRANSACTION:
      FIND FIRST BERUPP WHERE ROWID(BERUPP) = kon_rowid EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE BERUPP THEN DO:
         FIND FIRST BERPUNKT WHERE BERPUNKT.AONR = BERUPP.AONR AND  BERPUNKT.OMRADE = BERUPP.OMRADE AND
         BERPUNKT.NUM = BERUPP.UPPLAG AND BERPUNKT.KONSTRUKTIONUPPLAG = FALSE
         EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE BERPUNKT THEN DELETE BERPUNKT.
         DELETE BERUPP.
      END.
   END.
END PROCEDURE.

PROCEDURE spfav_UI :   
   DEFINE INPUT  PARAMETER fanv AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER TABLE FOR efavberupptemp.
   DEFINE VARIABLE berpBuffer AS HANDLE NO-UNDO.
   DEFINE VARIABLE qString AS CHARACTER NO-UNDO.
   CREATE WIDGET-POOL "DynTableUP" NO-ERROR.
   CREATE BUFFER berpBuffer FOR TABLE "BERPUNKT" IN WIDGET-POOL "DynTableUP".
   
   FIND FIRST efavberupptemp NO-LOCK NO-ERROR.   
   DO TRANSACTION:
      FIND FIRST BERUPP WHERE BERUPP.AONR  = "FAVO" + fanv AND BERUPP.ADRESS = efavberupptemp.ADRESS  EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE BERUPP THEN DO:
         CREATE BERUPP.
      END.   
      BUFFER-COPY efavberupptemp TO BERUPP.                 
      qString = " WHERE AONR = '" + BERUPP.AONR + "' AND ANMARK = '" + BERUPP.ADRESS .
      berpBuffer:FIND-FIRST(qString,EXCLUSIVE-LOCK) NO-ERROR.
      IF berpBuffer:AVAILABLE THEN DO:
      END.   
      ELSE DO:
         berpBuffer:BUFFER-CREATE ().
      END.   
      berpBuffer:BUFFER-COPY( BUFFER efavberupptemp:HANDLE,"DELNR,ANMARK,OMRADE").
      ASSIGN
      berpBuffer:BUFFER-FIELD("AONR"):BUFFER-VALUE = BERUPP.AONR
      berpBuffer:BUFFER-FIELD("OMRADE"):BUFFER-VALUE = BERUPP.OMRADE
      berpBuffer:BUFFER-FIELD("NUM"):BUFFER-VALUE = BERUPP.UPPLAG
      berpBuffer:BUFFER-FIELD("ANMARK"):BUFFER-VALUE = BERUPP.ADRESS 
      berpBuffer:BUFFER-FIELD("PUNKTNAMN"):BUFFER-VALUE = efavberupptemp.ORT
      berpBuffer:BUFFER-FIELD("VINKEL"):BUFFER-VALUE = efavberupptemp.POSTNR
      berpBuffer:BUFFER-FIELD("XKORD"):BUFFER-VALUE = efavberupptemp.XKORD * 10000000
      berpBuffer:BUFFER-FIELD("YKORD"):BUFFER-VALUE = efavberupptemp.YKORD * 10000000
      berpBuffer:BUFFER-FIELD("XKORDCH"):BUFFER-VALUE = efavberupptemp.XKORDCH
      berpBuffer:BUFFER-FIELD("YKORDCH"):BUFFER-VALUE = efavberupptemp.YKORDCH.
   END.   
END PROCEDURE.

PROCEDURE tabortfav_UI :   
   DEFINE INPUT  PARAMETER fanv AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER TABLE FOR efavberupptemp.
   DEFINE VARIABLE berpBuffer AS HANDLE NO-UNDO.
   DEFINE VARIABLE qString AS CHARACTER NO-UNDO.
   CREATE WIDGET-POOL "DynTableUP" NO-ERROR.
   CREATE BUFFER berpBuffer FOR TABLE "BERPUNKT" IN WIDGET-POOL "DynTableUP".
   
   FIND FIRST efavberupptemp NO-LOCK NO-ERROR.   
   DO TRANSACTION:
      FIND FIRST BERUPP WHERE BERUPP.AONR  = "FAVO" + fanv AND BERUPP.ADRESS = efavberupptemp.ADRESS  EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE BERUPP THEN DO:                               
         qString = " WHERE AONR = '" + BERUPP.AONR + "' AND ANMARK = '" + BERUPP.ADRESS .
         berpBuffer:FIND-FIRST(qString,EXCLUSIVE-LOCK) NO-ERROR.
         IF berpBuffer:AVAILABLE THEN DO:
            berpBuffer:BUFFER-DELETE ().
         END.                   
         DELETE  BERUPP.
      END.   
   END.   
END PROCEDURE.

PROCEDURE nyupplag_UI :      
   DEFINE INPUT PARAMETER valaonr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR efavberupptemp.
   DEFINE VARIABLE upnr AS INTEGER NO-UNDO.
   DEFINE VARIABLE berpBuffer AS HANDLE NO-UNDO.
   DEFINE VARIABLE qString AS CHARACTER NO-UNDO.
   CREATE WIDGET-POOL "DynTableUP" NO-ERROR.
   CREATE BUFFER berpBuffer FOR TABLE "BERPUNKT" IN WIDGET-POOL "DynTableUP".
   FIND FIRST efavberupptemp NO-LOCK NO-ERROR.
   upnr = 1.
   FIND LAST BERUPP WHERE BERUPP.AONR = valaonr AND 
   BERUPP.OMRADE = valomrade   USE-INDEX OMR NO-LOCK NO-ERROR.
   IF AVAILABLE BERUPP THEN DO:
      upnr = BERUPP.UPPLAG + 1.
   END.       
   DO TRANSACTION:      
      CREATE BERUPP.         
      BUFFER-COPY efavberupptemp TO BERUPP.
      ASSIGN BERUPP.UPPLAG =    upnr.    
      efavberupptemp.UPPLAG = BERUPP.UPPLAG.       
   
      qString = " WHERE AONR = '" + BERUPP.AONR + "' AND ANMARK = '" + BERUPP.ADRESS .
      berpBuffer:FIND-FIRST(qString,EXCLUSIVE-LOCK) NO-ERROR.
      IF berpBuffer:AVAILABLE THEN DO:
      END.   
      ELSE DO:
         berpBuffer:BUFFER-CREATE ().
      END.   
      berpBuffer:BUFFER-COPY( BUFFER efavberupptemp:HANDLE,"DELNR,ANMARK,OMRADE").
      ASSIGN
      berpBuffer:BUFFER-FIELD("AONR"):BUFFER-VALUE = BERUPP.AONR
      berpBuffer:BUFFER-FIELD("OMRADE"):BUFFER-VALUE = BERUPP.OMRADE
      berpBuffer:BUFFER-FIELD("NUM"):BUFFER-VALUE = BERUPP.UPPLAG
      berpBuffer:BUFFER-FIELD("ANMARK"):BUFFER-VALUE = BERUPP.ADRESS 
      berpBuffer:BUFFER-FIELD("PUNKTNAMN"):BUFFER-VALUE = efavberupptemp.ORT
      berpBuffer:BUFFER-FIELD("VINKEL"):BUFFER-VALUE = efavberupptemp.POSTNR
      berpBuffer:BUFFER-FIELD("XKORD"):BUFFER-VALUE = efavberupptemp.XKORD * 10000000
      berpBuffer:BUFFER-FIELD("YKORD"):BUFFER-VALUE = efavberupptemp.YKORD * 10000000
      berpBuffer:BUFFER-FIELD("XKORDCH"):BUFFER-VALUE = efavberupptemp.XKORDCH
      berpBuffer:BUFFER-FIELD("YKORDCH"):BUFFER-VALUE = efavberupptemp.YKORDCH.
   END.   
   
END PROCEDURE.


