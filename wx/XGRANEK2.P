/*XGRANEK2.P*/
DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO. 
DEFINE SHARED VARIABLE persrec AS RECID NO-UNDO. 
DEFINE VARIABLE ekrid AS RECID EXTENT 50 NO-UNDO.
DEFINE VARIABLE aoomrade LIKE AONRTAB.OMRADE NO-UNDO.   
DEFINE VARIABLE org LIKE AONRTAB.OMRADE NO-UNDO.         
DEFINE VARIABLE timtid AS DECIMAL FORMAT "99.99" NO-UNDO. 
DEFINE VARIABLE multi AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE berkostnad AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE totpristim AS DECIMAL FORMAT "99.99" NO-UNDO. 
DEFINE VARIABLE intpristim AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE reskod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE resantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE resbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE ovkod LIKE TIDREGITAB.OVERTIDTILL NO-UNDO. 
DEFINE VARIABLE ovantal LIKE TIDREGITAB.OVERANTAL NO-UNDO.
DEFINE VARIABLE ovbelopp LIKE EKRAPPRESULT.EOVERBELOPP NO-UNDO. 
DEFINE VARIABLE trakod LIKE TIDREGITAB.TRAKTKOD NO-UNDO. 
DEFINE VARIABLE traantal LIKE TIDREGITAB.TRAKTANTAL NO-UNDO.
DEFINE VARIABLE trabelopp LIKE EKRAPPRESULT.ETRAKTBELOPP NO-UNDO. 
DEFINE VARIABLE lonkod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE lonantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE lonbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE berkod LIKE TIDREGITAB.BEREDSKAP NO-UNDO. 
DEFINE VARIABLE bbantal LIKE TIDREGITAB.BERANTAL NO-UNDO.
DEFINE VARIABLE berbelopp LIKE EKRAPPRESULT.EBERBELOPP NO-UNDO.
DEFINE VARIABLE timantal LIKE EKRAPPRESULT.EANTAL NO-UNDO.
DEFINE VARIABLE timbelopp LIKE EKRAPPRESULT.EBELOPP NO-UNDO.
DEFINE VARIABLE kontokod LIKE EKRAPPRESULT.EKOSTNADSSLAG NO-UNDO. 
DEFINE VARIABLE kontokode LIKE EKRAPPRESULT.EKOSTNADSSLAG NO-UNDO. 
DEFINE VARIABLE pkoder LIKE PERSONALTAB.PERSONALKOD NO-UNDO.  
DEFINE VARIABLE fk1 LIKE AONRKONTKO.K1 NO-UNDO. 
DEFINE VARIABLE fk2 LIKE AONRKONTKO.K2 NO-UNDO.
DEFINE VARIABLE fk3 LIKE AONRKONTKO.K3 NO-UNDO.
DEFINE VARIABLE fk4 LIKE AONRKONTKO.K4 NO-UNDO. 
DEFINE VARIABLE fk4i AS INTEGER format "999" NO-UNDO.
DEFINE VARIABLE fk5 LIKE AONRKONTKO.K5 NO-UNDO.  
DEFINE VARIABLE kodanst LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE SHARED TEMP-TABLE ekoforst
   FIELD ENY LIKE EKRAPPRESULT.ENY 
   FIELD EPERSONALKOD LIKE EKRAPPRESULT.EPERSONALKOD 
   FIELD EPROJEKT LIKE EKRAPPRESULT.EPROJEKT 
   FIELD EORG LIKE EKRAPPRESULT.EORG  
   FIELD EGEO LIKE EKRAPPRESULT.EGEO     
   FIELD ETRANSDATUM LIKE EKRAPPRESULT.ETRANSDATUM
   FIELD EOVERJA LIKE EKRAPPRESULT.EOVERJA
   FIELD ERESULTENH LIKE EKRAPPRESULT.ERESULTENH 
   FIELD EBELOPP LIKE  EKRAPPRESULT.EBELOPP 
   FIELD EANTAL  LIKE EKRAPPRESULT.EANTAL 	       
   FIELD ELONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD ELONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    
   FIELD ELONBELOPP LIKE EKRAPPRESULT.ELONBELOPP         
   INDEX PERSORG IS PRIMARY EPERSONALKOD EORG EGEO EPROJEKT ASCENDING.
DEFINE TEMP-TABLE eko
   FIELD EDEBKRED LIKE EKRAPPRESULT.EDEBKRED
   FIELD ENY LIKE EKRAPPRESULT.ENY       
   FIELD ETRANSDATUM LIKE EKRAPPRESULT.ETRANSDATUM  
   FIELD EPROJEKT LIKE EKRAPPRESULT.EPROJEKT 
   FIELD EORG LIKE EKRAPPRESULT.EORG 
/*   FIELD EGEO LIKE EKRAPPRESULT.EGEO       */    
   FIELD ERGL LIKE EKRAPPRESULT.ERGL            /*ANVŽNDS F™R KONTSTRŽNG*/
   FIELD ETD LIKE EKRAPPRESULT.ETD   
   FIELD EKOSTNADSSLAG LIKE EKRAPPRESULT.EKOSTNADSSLAG    
   FIELD EBELOPP LIKE  EKRAPPRESULT.EBELOPP 
   FIELD EANTAL  LIKE EKRAPPRESULT.EANTAL 	       
   FIELD ELONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD ELONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    
   FIELD ELONBELOPP LIKE EKRAPPRESULT.ELONBELOPP         
   INDEX ORG IS PRIMARY ETRANSDATUM EORG EPROJEKT EKOSTNADSSLAG ASCENDING.   
DEFINE BUFFER eko2 FOR eko.
pkoder = "". 
FIND FIRST ekoforst WHERE ekoforst.ENY = FALSE USE-INDEX PERSORG NO-LOCK NO-ERROR.
IF NOT AVAILABLE ekoforst THEN RETURN.        
ekrid[1] = RECID(ekoforst).
REPEAT:
   IF pkoder NE ekoforst.EPERSONALKOD THEN DO:      
      pkoder = ekoforst.EPERSONALKOD.      
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pkoder 
      USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.        
      org = PERSONALTAB.OMRADE. 
      persrec = RECID(PERSONALTAB).
      FIND FIRST ANSTFORMTAB WHERE
      ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      totpristim = TIMKOSTNADSTAB.PRISA.       
      kodanst = ANSTFORMTAB.KOD.
   END.      
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = ekoforst.EPROJEKT AND
   AONRTAB.DELNR = 000 USE-INDEX AONR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE AONRTAB THEN DO:
      aoomrade = org. 
      IF ekoforst.EPROJEKT = "" THEN aoomrade = org. 
      ELSE DO:
         MESSAGE "AONR" ekoforst.EPROJEKT "000 FINNS EJ! KONTAKTA ELPOOL"
         VIEW-AS ALERT-BOX.
      END.
   END.                                           
   ASSIGN                    
   fk1 = "" 
   fk2 = "".         
   FIND FIRST AONRKONTKOD WHERE AONRKONTKOD.AONR = ekoforst.EPROJEKT AND 
   AONRKONTKOD.DELNR = 000 USE-INDEX AONRKONT NO-LOCK NO-ERROR. 
   IF AVAILABLE AONRKONTKOD THEN DO:
      ASSIGN
      fk1 = AONRKONTKOD.K1 
      fk2 = AONRKONTKOD.K2.                
   END.             
   /*TIMMAR OCH PENNGAR*/
   IF ekoforst.EBELOPP = 0 THEN DO:
      persrec = persrec.
   END.                                   
   ELSE DO:
      IF kodanst = 'T' OR kodanst = 'T1' THEN DO:
         kontokod = "997" + SUBSTRING(ekoforst.EORG,1,2).
      END.       
      ELSE DO:
         kontokod = "995" + SUBSTRING(ekoforst.EORG,1,2).
      END.      
      RUN tim_UI.      
   END.         
   DO TRANSACTION: 		    
      FIND ekoforst WHERE RECID(ekoforst) = ekrid[1]
      NO-LOCK NO-ERROR. 
      DELETE ekoforst.
   END.
   FIND FIRST ekoforst WHERE ekoforst.ENY = FALSE USE-INDEX PERSORG NO-LOCK NO-ERROR.
   IF NOT AVAILABLE ekoforst THEN LEAVE.           
   ekrid[1] = RECID(ekoforst).
END.   
FIND FIRST eko USE-INDEX ORG NO-LOCK NO-ERROR.
IF NOT AVAILABLE eko THEN RETURN.        
ekrid[1] = RECID(eko).
REPEAT: 
   DO TRANSACTION:
      FIND FIRST EKRAPPRESULT WHERE EKRAPPRESULT.EDEBKRED = eko.EDEBKRED AND 
      EKRAPPRESULT.EORG = eko.EORG AND 
      EKRAPPRESULT.ETRANSDATUM = eko.ETRANSDATUM AND
      EKRAPPRESULT.EPROJEKT = eko.EPROJEKT AND
      EKRAPPRESULT.EKOSTNADSSLAG = eko.EKOSTNADSSLAG AND
      EKRAPPRESULT.ERGL = eko.ERGL AND
      EKRAPPRESULT.ETD = eko.ETD   
      USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
      IF NOT AVAILABLE EKRAPPRESULT THEN DO:
         CREATE EKRAPPRESULT.
      END.                                                              
      IF eko.ERGL = "" THEN DO:
         ASSIGN
         EKRAPPRESULT.ERGL = "0" + eko.EORG.            /*ANVŽNDS F™R KONTSTRŽNG*/
      END.    
      ELSE DO:                        
         ASSIGN
         EKRAPPRESULT.ERGL = eko.ERGL.            /*ANVŽNDS F™R KONTSTRŽNG*/
      END.                    
      IF eko.EDEBKRED = TRUE THEN DO:                               
         IF INTEGER(eko.EPROJEKT) <= 999 THEN DO:         
            EKRAPPRESULT.EPROJEKT = EKRAPPRESULT.ERGL + eko.EPROJEKT.
         END.
         ELSE EKRAPPRESULT.EPROJEKT = eko.EPROJEKT.                
      END.   
      ELSE EKRAPPRESULT.EPROJEKT = eko.EPROJEKT.
      VALIDATE EKRAPPRESULT.   
      ASSIGN            
      EKRAPPRESULT.EDEBKRED = eko.EDEBKRED
      EKRAPPRESULT.ENY = TRUE 
      EKRAPPRESULT.EORG = eko.EORG         
      EKRAPPRESULT.ETRANSDATUM = eko.ETRANSDATUM
      EKRAPPRESULT.EKOSTNADSSLAG = eko.EKOSTNADSSLAG       
      EKRAPPRESULT.ETD = eko.ETD   
      EKRAPPRESULT.EANTAL = EKRAPPRESULT.EANTAL + eko.EANTAL   
      EKRAPPRESULT.EBELOPP = EKRAPPRESULT.EBELOPP + eko.EBELOPP.                    
   END.
   FIND NEXT eko USE-INDEX ORG NO-LOCK NO-ERROR.
   IF NOT AVAILABLE eko THEN LEAVE.                
END.  
PROCEDURE tim_UI:
   DO TRANSACTION:                 
      IF ekoforst.EORG = ekoforst.EGEO THEN DO:     
         FIND FIRST eko WHERE
         eko.ENY = TRUE AND      
         eko.EORG = ekoforst.EGEO AND 
         eko.ETRANSDATUM = ekoforst.ETRANSDATUM AND
         eko.EPROJEKT = ekoforst.EPROJEKT AND
         eko.EKOSTNADSSLAG = kontokod AND
         eko.ERGL = fk1 AND          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko.ETD = fk2   
         USE-INDEX ORG EXCLUSIVE-LOCK NO-ERROR.  
         IF NOT AVAILABLE eko THEN DO:
            CREATE eko.
         END.    
         ASSIGN         
         eko.EDEBKRED = TRUE 
         eko.ENY = TRUE 
         eko.EORG = ekoforst.EGEO  
         eko.ETRANSDATUM = ekoforst.ETRANSDATUM
         eko.EPROJEKT = ekoforst.EPROJEKT 
         eko.EKOSTNADSSLAG = kontokod 
         eko.ERGL = fk1           /*ANVŽNDS F™R KONTSTRŽNG*/
         eko.ETD = fk2                
         eko.EDEBKRED = TRUE 
         eko.EANTAL = eko.EANTAL + ekoforst.EANTAL  
         eko.EBELOPP = eko.EBELOPP + ekoforst.EBELOPP.                 
         /*KREDIT*/
         IF kodanst = 'T' OR kodanst = 'T1' THEN DO:
            ASSIGN
            kontokod = "99798"
            fk2 = "9700".
         END.       
         ELSE DO:
            ASSIGN
            kontokod = "99508"
            fk2 = "9700".
         END.           
         FIND FIRST eko2 WHERE
         eko2.ENY = TRUE AND         
         eko2.EORG = ekoforst.EGEO AND          
         eko2.ETRANSDATUM = ekoforst.ETRANSDATUM AND         
         eko2.EKOSTNADSSLAG = kontokod AND
         eko2.ERGL = fk1 AND          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko2.ETD = fk2   
         USE-INDEX ORG EXCLUSIVE-LOCK NO-ERROR.  
         IF NOT AVAILABLE eko2 THEN DO:
            CREATE eko2.
         END.    
         ASSIGN              
         eko2.EDEBKRED = FALSE 
         eko2.ENY = TRUE         
         eko2.EORG = ekoforst.EGEO
         eko2.EPROJEKT = "000000"          
         eko2.ETRANSDATUM = ekoforst.ETRANSDATUM         
         eko2.EKOSTNADSSLAG = kontokod
         eko2.ERGL = fk1           /*ANVŽNDS F™R KONTSTRŽNG*/
         eko2.ETD = fk2   
         eko2.EANTAL = eko2.EANTAL + ekoforst.EANTAL  
         eko2.EBELOPP = eko2.EBELOPP + ekoforst.EBELOPP.                     
      END.    
      ELSE DO:     
         FIND FIRST eko WHERE
         eko.ENY = TRUE AND      
         eko.EORG = ekoforst.EGEO AND 
         eko.ETRANSDATUM = ekoforst.ETRANSDATUM AND
         eko.EPROJEKT = ekoforst.EPROJEKT AND
         eko.EKOSTNADSSLAG = kontokod AND 
         eko.ERGL = fk1 AND          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko.ETD = fk2   
         USE-INDEX ORG EXCLUSIVE-LOCK NO-ERROR.  
         IF NOT AVAILABLE eko THEN DO:
            CREATE eko.
         END.    
         ASSIGN         
         eko.EDEBKRED = TRUE 
         eko.ENY = TRUE 
         eko.EORG = ekoforst.EGEO  
         eko.ETRANSDATUM = ekoforst.ETRANSDATUM
         eko.EPROJEKT = ekoforst.EPROJEKT 
         eko.EKOSTNADSSLAG = kontokod              
         eko.ERGL = fk1          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko.ETD = fk2   
         eko.EDEBKRED = TRUE 
         eko.EANTAL = eko.EANTAL + ekoforst.EANTAL  
         eko.EBELOPP = eko.EBELOPP + ekoforst.EBELOPP.                 
         /*KREDIT*/          
         IF kodanst = 'T' OR kodanst = 'T1' THEN DO:           
            ASSIGN
            kontokod = "99799"
            fk2 = "9700".
         END.       
         ELSE DO:            
            ASSIGN
            kontokod = "99509"
            fk2 = "9700".
         END.        
         FIND FIRST eko2 WHERE
         eko2.ENY = TRUE AND         
         eko2.EORG = ekoforst.EORG AND          
         eko2.ETRANSDATUM = ekoforst.ETRANSDATUM AND         
         eko2.EKOSTNADSSLAG = kontokod AND
         eko2.ERGL = STRING("0") + ekoforst.EORG AND          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko2.ETD = fk2   
         USE-INDEX ORG EXCLUSIVE-LOCK NO-ERROR.  
         IF NOT AVAILABLE eko2 THEN DO:
            CREATE eko2.
         END.    
         ASSIGN              
         eko2.EDEBKRED = FALSE 
         eko2.ENY = TRUE         
         eko2.EORG = ekoforst.EORG 
         eko2.EPROJEKT = "000000"         
         eko2.ETRANSDATUM = ekoforst.ETRANSDATUM         
         eko2.EKOSTNADSSLAG = kontokod
         eko2.ERGL = STRING("0") + ekoforst.EORG          /*ANVŽNDS F™R KONTSTRŽNG*/
         eko2.ETD = fk2   
         eko2.EANTAL = eko2.EANTAL + ekoforst.EANTAL  
         eko2.EBELOPP = eko2.EBELOPP + ekoforst.EBELOPP.                     
      END.                                
   END.
END PROCEDURE.

