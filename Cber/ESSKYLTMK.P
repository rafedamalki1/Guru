/*ESSKYLTMALLK.P*/
DEFINE VARIABLE felexcel AS LOGICAL NO-UNDO.
         
                              

DEFINE SHARED VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE SHARED VARIABLE valort AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valomrade AS CHARACTER NO-UNDO.  
DEFINE VARIABLE totheight AS DECIMAL NO-UNDO.
DEFINE VARIABLE markag AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader2 AS INTEGER NO-UNDO.
DEFINE VARIABLE extram AS INTEGER NO-UNDO.
DEFINE VARIABLE emg AS INTEGER NO-UNDO.
DEFINE VARIABLE uColumn  AS INTEGER INITIAL 0.
DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE fnamn2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE link AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytcol AS LOGICAL NO-UNDO.
DEFINE VARIABLE bytacol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytccol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytgcol AS CHARACTER NO-UNDO.
DEFINE VARIABLE radrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE anradrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE hjsakr AS CHARACTER NO-UNDO.
DEFINE VARIABLE antskap AS INTEGER NO-UNDO.
DEFINE VARIABLE hjantskap AS INTEGER NO-UNDO.
DEFINE VARIABLE skapstorlek AS INTEGER NO-UNDO.
DEFINE VARIABLE frikortapph AS HANDLE NO-UNDO.
DEFINE VARIABLE skid AS CHARACTER EXTENT 4 NO-UNDO.
DEFINE VARIABLE lsprak AS INTEGER NO-UNDO.
DEFINE VARIABLE radrak AS INTEGER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE delrak AS INTEGER NO-UNDO.
DEFINE TEMP-TABLE uppfoltemp   
   FIELD FORETAG AS CHARACTER
   FIELD ANVANDARE AS CHARACTER  
   FIELD ALLAMA AS LOGICAL
   FIELD VALVARD AS CHARACTER
   FIELD FORSTA AS LOGICAL
   FIELD STAMP AS LOGICAL.  
{TIDUTTT.I}

DEFINE TEMP-TABLE bskaptemp NO-UNDO
   FIELD ENR       AS CHARACTER FORMAT "X(11)" LABEL "Enr"             
   FIELD BENAMNING AS CHARACTER FORMAT "x(40)" LABEL "Benämning"
   FIELD ENHET     AS CHARACTER FORMAT "x(5)" LABEL "Enhet"    
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"    
   FIELD PRIS      AS DECIMAL   FORMAT ">>>>99.99" INITIAL 0 LABEL "Pris"     
   FIELD LEVKOD    AS CHARACTER FORMAT "x(4)" LABEL "LEV-ID"   
   FIELD MODUL     AS INTEGER   FORMAT ">>>9" INITIAL 0 LABEL "Moduler"  
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"
   FIELD BERSKAPROW AS ROWID
   INDEX KOD IS PRIMARY KTYPKOD KOD
   INDEX MOD KTYPKOD MODUL.
DEFINE TEMP-TABLE bsktemp NO-UNDO
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"       
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"   
   INDEX KOD IS PRIMARY KTYPKOD KOD.
DEFINE SHARED VARIABLE lin_rowid AS ROWID NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE chExcelApplication      AS COM-HANDLE.
DEFINE VARIABLE chWorkbook              AS COM-HANDLE.
DEFINE VARIABLE chWorksheet             AS COM-HANDLE.
DEFINE VARIABLE chChart                 AS COM-HANDLE.
DEFINE VARIABLE chWorksheetRange        AS COM-HANDLE.
DEFINE VARIABLE iCount                  AS INTEGER.
DEFINE VARIABLE iIndex                  AS INTEGER.
DEFINE VARIABLE iMonth                  AS INTEGER.
DEFINE VARIABLE dAnnualQuota            AS DECIMAL.
DEFINE VARIABLE dTotalSalesAmount       AS DECIMAL.
DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.
DEFINE VARIABLE cRange                  AS CHARACTER.
DEFINE VARIABLE radnrS                  AS CHARACTER.
DEFINE VARIABLE pristext                AS CHARACTER.
DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vkab AS CHARACTER NO-UNDO.
DEFINE VARIABLE vkabstl AS CHARACTER NO-UNDO.
DEFINE VARIABLE sidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE bilnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE antfri AS INTEGER NO-UNDO.
&Scoped-define NEW 
&Scoped-define SHARED SHARED
{KONSTRMTRL.I}
{KONVALTEMP.I}     
{LISTMTRL.I}
{KONID.I}   
{FRITEMP.I} 
{BERSKAP.I}
{MARKGRUPP.I}
DEFINE BUFFER kon_valbuff FOR kon_val.   
DEFINE BUFFER kn_valbuff FOR kon_val.   
DEFINE INPUT PARAMETER mall AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR list_mtrl.
DEFINE INPUT PARAMETER TABLE FOR kon_id.
DEFINE INPUT PARAMETER TABLE FOR fri_temp.
DEFINE INPUT PARAMETER TABLE FOR kon_val.
DEFINE INPUT PARAMETER TABLE FOR konstvaltemp.
DEFINE INPUT PARAMETER TABLE FOR berskaptemp.

{GLOBVAR2DEL1.I}  
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
DEFINE TEMP-TABLE blandnamntemp NO-UNDO
   FIELD NAMN AS CHARACTER.

IF mall = 1 THEN DO:       
   /*allmän med flikar*/
   ASSIGN   
   fnamn = "SkyltEONE.xls"
   fnamn2 = "SkyltEONE" + STRING(TIME) + ".xls"
   sidvar = 1.
END.
IF mall = 2 THEN DO:       
   /*allmän utan flikar */
   ASSIGN   
   fnamn = "SkyltEONE.xls"
   fnamn2 = "SkyltEONE" + STRING(TIME) + ".xls"
   sidvar = 1.
END.

IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   {FINNSDYNBLOB.I}
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.   
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).      
   IF resid = ? THEN kommando = SEARCH(fnamn).
   ELSE DO:      
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.      
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).
   END.
   RUN deleteproc_UI IN blobproch.
   IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.
END.
ELSE kommando = SEARCH(fnamn).   
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.  
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN kommando2 = webclienttempdir.
OS-CREATE-DIR VALUE(kommando2) NO-ERROR.
IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
   kommando2 = kommando2 + fnamn2.
END.
ELSE DO:
   kommando2 = kommando2 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn2.
END.
OS-COPY VALUE(kommando) VALUE(kommando2).
kommando = kommando2.

CREATE "Excel.Application" chExcelApplication.
chExcelApplication:Visible = TRUE NO-ERROR.
link = ?.
/*FOREBILDER*/
{LOGGOR.I}
{OPENEXCEL.I}
chWorkbook = chExcelApplication:Workbooks:OPEN(kommando)  NO-ERROR.
chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.        

IF mall = 1 THEN DO: 
   RUN mall1_UI.
END.
ELSE IF mall = 2 THEN DO: 
   RUN mall2_UI.
END.
RELEASE OBJECT chExcelApplication NO-ERROR.      
RELEASE OBJECT chWorkbook NO-ERROR.
RELEASE OBJECT chWorksheet NO-ERROR.      
   
PROCEDURE imageexcel_UI.
   DEFINE INPUT PARAMETER link AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vilkencol AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER inrow AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER incol AS INTEGER NO-UNDO.
   DEFINE VARIABLE cRad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE bild AS CHARACTER NO-UNDO.   
   cRad = STRING(inrow).
   IF cRad = "" THEN DO:
      ASSIGN cRad = "1".
   END.  
   IF totheight = 0 THEN totheight = 1.      
   bild  = vilkencol + cRad.      
   chWorkSheet:range(bild):SELECT NO-ERROR. 
   chWorkSheetRange = chWorkSheet:Pictures:INSERT(link)  NO-ERROR.
   chWorkSheetRange:TOP = totheight  NO-ERROR.
   chWorkSheetRange:LEFT = incol NO-ERROR.
   RELEASE OBJECT chWorkSheetRange NO-ERROR.
   chWorkSheetRange = ?.
   chExcelApplication:VISIBLE = TRUE NO-ERROR.   
   IF cRad = "1" THEN cRad = "0".
   {EXCELFEL.I}
END PROCEDURE.


PROCEDURE bladnamn_UI :
   DEFINE INPUT-OUTPUT PARAMETER inblad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgblad AS CHARACTER NO-UNDO.
   orgblad = inblad.
   i = 1.
   REPEAT:
      FIND FIRST blandnamntemp WHERE blandnamntemp.NAMN = inblad NO-LOCK NO-ERROR.
      IF NOT AVAILABLE blandnamntemp THEN DO:
         CREATE blandnamntemp.
         blandnamntemp.NAMN = inblad.
         LEAVE.
      END.
      i = i + 1.
      inblad = orgblad + " (" + STRING(i) + ")".  
   END.
END PROCEDURE.
PROCEDURE utexcel_UI :
   DEFINE INPUT PARAMETER typsnitt AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER storlek AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER varde AS CHARACTER NO-UNDO.
   IF varde = "" THEN RETURN.
   IF varde = ? THEN RETURN.
   ASSIGN
   chWorkSheet:Range(cRange):Font:NAME = typsnitt NO-ERROR.
   chWorkSheet:Range(cRange):Font:SIZE = storlek  NO-ERROR.
   chWorkSheet:Range(cRange):Value = varde NO-ERROR.  
   {EXCELFEL.I}
END PROCEDURE.

PROCEDURE mall1_UI :   
   antskap = 0.      
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE.
      IF kon_val.GRUPP = 0 OR kon_val.GRUPP = 35 THEN antskap = antskap + 1.         
   END.
   hjantskap = 2.
   IF antskap > 1 THEN DO:
      REPEAT:         
         IF hjantskap > antskap THEN LEAVE.            
         sidvar = hjantskap - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantskap = hjantskap + 1.
         {EXCELFEL2.I}
      END.
   END.   
   ASSIGN      
   sidvar = 1
   i = 1.   
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE  USE-INDEX ORD:
      IF kon_val.GRUPP = 0 OR kon_val.GRUPP = 35 THEN DO:     
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         IF Guru.GlobalaVariabler:plusaonr NE "" THEN DO:
            ASSIGN
            iColumn = 4         
            cColumn = STRING(iColumn)
            cRange = "E" + cColumn.         
            RUN utexcel_UI (INPUT "polo",INPUT 10,INPUT SUBSTRING(valort,1,24)).
            ASSIGN
            iColumn = 4         
            cColumn = STRING(iColumn)
            cRange = "G" + cColumn.         
            RUN utexcel_UI (INPUT "polo",INPUT 10,INPUT Guru.GlobalaVariabler:plusaonr + STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])).      
            FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
            IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN DO:
               assign               
               iColumn = 4
               cColumn = STRING(iColumn). 
               cRange = "C" + cColumn.  
               RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT kon_id.FRI3).
            END.
         END.
         IF kon_val.GRUPP = 0 THEN DO:      
            /*KABELSKÅP*/
            FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
            IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Skyltar KSK Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
            ELSE bilnamn = "Skyltar KSK Id " + STRING(kon_val.ID2).                     
            RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
            chWorkSheet:Name = bilnamn NO-ERROR.         
            FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.               
            ASSIGN   
            skid[1] = "a"
            skid[2] = "c"
            skid[3] = "e"
            skid[4] = "g"                  
            i = 1.
            lsprak = 1.
            radrak = 50.
            FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:       
               FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
               kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
               IF AVAILABLE kon_valbuff THEN DO:
                  IF lsprak > 16 THEN.
                  ELSE DO:               
                     assign 
                     iColumn = radrak
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.                
                     RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_temp.KABADR).
                     ASSIGN
                     iColumn = radrak + 1
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.
                     IF fri_temp.SAKR > 0 THEN RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A"). 
                     i = i + 1.
                     IF i > 4 THEN DO:
                         i = 1.
                         radrak = radrak + 3.
                     END.                  
                  END.
                  lsprak = lsprak + 1.
               END.
            END.                                       
         END.
         ELSE DO:
            /*STATION*/
            FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
            IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Skyltar STN Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
            ELSE bilnamn = "Skyltar STN Id " + STRING(kon_val.ID2).   
            /*bilnamn = "Skyltar STN Id " + STRING(kon_val.ID2) NO-ERROR.*/          
            RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
            chWorkSheet:Name = bilnamn NO-ERROR.            
            EMPTY TEMP-TABLE fri_tempm  NO-ERROR. 
            FOR EACH fri_temp WHERE fri_temp.NUM = kon_val.NUM:
               CREATE fri_tempm.
               BUFFER-COPY fri_temp TO fri_tempm.
            END.            
            FOR EACH fri_tempm :        
               /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
               FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_tempm.NUM AND kon_valbuff.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
               IF AVAILABLE kon_valbuff  THEN DO:
                  fri_tempm.KTYPKOD =  kon_valbuff.F5.            
                  FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
                  konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
                  IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
                  ELSE DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 10.            
                     ELSE DO:
                        FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
                        konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
                        IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.       
                        ELSE DO:
                           IF Guru.Konstanter:globforetag = "fors" THEN DO:
                              FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 36 AND
                              konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                              IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                              ELSE DO:
                                 FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 41 AND
                                 konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                 IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                                 ELSE DO:
                                    FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 35 AND
                                    konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                    IF AVAILABLE konsttemp THEN fri_tempm.LSP = 10.
                                 END.   
                              END.   
                           END.
                           IF Guru.Konstanter:globforetag = "gran" THEN DO:
                              FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 54 AND
                              konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                              IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                              ELSE DO:
                                 FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 56 AND
                                 konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                 IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                                 ELSE DO:
                                    FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 55 AND
                                    konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                    IF AVAILABLE konsttemp THEN fri_tempm.LSP = 10.
                                    ELSE DO:
                                       FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 59 AND
                                       konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                       IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                                       ELSE DO:
                                          FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 60 AND
                                          konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                          IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.
                                          ELSE DO:
                                             FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 58 AND
                                             konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                                             IF AVAILABLE konsttemp THEN fri_tempm.LSP = 10.
                                          END.
                                       END.
                                    END.
                                 END.   
                              END.   
                           END.                  
                        END.        
                     END.
                  END.
               END.        
            END.
            FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.         
            IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN DO:
               assign 
               radrak = 10
               /*skid[1] = "a"*/
               iColumn = radrak
               cColumn = STRING(iColumn)
               cRange = "A" + cColumn.
               delrak = INDEX(kon_id.FRI3, " " , 1).
               IF delrak > 0 THEN DO:         
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT SUBSTRING(kon_id.FRI3,1,delrak)).
                  ASSIGN            
                  iColumn = radrak + 1
                  cColumn = STRING(iColumn)
                  cRange = "A" + cColumn.
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT SUBSTRING(kon_id.FRI3,delrak)).            
               END.         
               ELSE RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT kon_id.FRI3).          
            END.               
            {EXCELFEL2.I}            
            ASSIGN   
            skid[1] = "a"
            skid[2] = "c"
            skid[3] = "e"
            skid[4] = "g"                  
            i = 1
            radrak = 50
            lsprak = 1.
            FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
               IF lsprak > 16 THEN.
               ELSE DO:           
                  FIND FIRST  kon_valbuff WHERE  kon_valbuff.NUM = fri_tempm.NUM  AND
                  kon_valbuff.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
                  IF AVAILABLE  kon_valbuff THEN DO:           
                     assign 
                     iColumn = radrak
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.                
                     RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_tempm.KABADR).
                     ASSIGN
                     iColumn = radrak + 1
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.
                     IF fri_tempm.SAKR > 0 THEN RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_tempm.SAKR) + "A"). 
                     i = i + 1.
                     IF i > 4 THEN DO:
                         i = 1.
                         radrak = radrak + 3.
                     END.
                  END.
               END.
               lsprak = lsprak + 1.
            END.                                       
            ASSIGN   
            skid[1] = "a"
            skid[2] = "e"                              
            i = 1.
            radrak = 24.
            FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP > 1 USE-INDEX NUM:       
               FIND FIRST  kon_valbuff WHERE  kon_valbuff.NUM = fri_tempm.NUM  AND
               kon_valbuff.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
               IF AVAILABLE  kon_valbuff THEN DO:           
                  IF fri_tempm.KABADR BEGINS "tra" THEN DO:                  
                     ASSIGN
                     iColumn = 89
                     cColumn = STRING(iColumn)
                     cRange = "A" + cColumn.                  
                     RUN utexcel_UI (INPUT "POLO",INPUT 45,INPUT fri_tempm.KABADR). 
                  END.
                  ELSE DO:               
                     assign 
                     iColumn = radrak
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.                               
                     RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_tempm.LSP) + " kV").
                     ASSIGN
                     iColumn = radrak + 1
                     cColumn = STRING(iColumn)
                     cRange = skid[i] + cColumn.
                     RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_tempm.KABADR). 
                     i = i + 1.
                     IF i > 2 THEN DO:
                         i = 1.
                         radrak = radrak + 3.
                     END.
                  END.
               END.
            END.                                          
         END.
         RELEASE OBJECT chWorksheet NO-ERROR. 
         sidvar = sidvar + 1.
      END.      
   END.
END PROCEDURE.

PROCEDURE mall2_UI :   
   
   ASSIGN   
   sidvar = 1
   i = 1.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_val THEN DO:
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.            
      IF Guru.GlobalaVariabler:plusaonr NE "" THEN DO:
         ASSIGN
         iColumn = 4         
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.         
         RUN utexcel_UI (INPUT "polo",INPUT 10,INPUT SUBSTRING(valort,1,24)).
         ASSIGN
         iColumn = 4         
         cColumn = STRING(iColumn)
         cRange = "G" + cColumn.         
         RUN utexcel_UI (INPUT "polo",INPUT 10,INPUT Guru.GlobalaVariabler:plusaonr + STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])).     
         FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
         IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN DO:
            assign             
            iColumn = 4
            cColumn = STRING(iColumn)
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT kon_id.FRI3).
         END.
      END.
      IF kon_val.GRUPP = 0 THEN DO:      
         /*KABELSKÅP*/
         FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
         IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Skyltar KSK Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
         ELSE bilnamn = "Skyltar KSK Id " + STRING(kon_val.ID2).                  
         RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
         chWorkSheet:Name = bilnamn NO-ERROR.         
         FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.            
         ASSIGN   
         skid[1] = "a"
         skid[2] = "c"
         skid[3] = "e"
         skid[4] = "g"                  
         i = 1.
         lsprak = 1.
         radrak = 50.
         FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:       
            FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
            kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
            IF AVAILABLE kon_valbuff THEN DO:
               IF lsprak > 16 THEN.
               ELSE DO:               
                  assign 
                  iColumn = radrak
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.                
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_temp.KABADR).
                  ASSIGN
                  iColumn = radrak + 1
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.
                  IF fri_temp.SAKR > 0 THEN RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A"). 
                  i = i + 1.
                  IF i > 4 THEN DO:
                      i = 1.
                      radrak = radrak + 3.
                  END.                  
               END.
               lsprak = lsprak + 1.
            END.
         END.                                       
      END.
      ELSE DO:
         /*STATION*/
         FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
         IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Skyltar STN Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
         ELSE bilnamn = "Skyltar STN Id " + STRING(kon_val.ID2).                  
         RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
         chWorkSheet:Name = bilnamn NO-ERROR.         
         EMPTY TEMP-TABLE fri_tempm  NO-ERROR. 
         FOR EACH fri_temp WHERE fri_temp.NUM = kon_val.NUM:
            CREATE fri_tempm.
            BUFFER-COPY fri_temp TO fri_tempm.
         END.         
         FOR EACH fri_tempm :        
            /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
            FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_tempm.NUM AND kon_valbuff.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
            IF AVAILABLE kon_valbuff  THEN DO:
               fri_tempm.KTYPKOD =  kon_valbuff.F5.            
               FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
               konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
               IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
               ELSE DO:
                  FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
                  konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
                  IF AVAILABLE konsttemp THEN fri_tempm.LSP = 10.            
                  ELSE DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_valbuff.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 20.               
                  END.
               END.
            END.        
         END.
         FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.      
         IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN DO:
            assign 
            radrak = 10            
            iColumn = radrak
            cColumn = STRING(iColumn)
            cRange = "A" + cColumn.
            delrak = INDEX(kon_id.FRI3, " " , 1).
            IF delrak > 0 THEN DO:         
               RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT SUBSTRING(kon_id.FRI3,1,delrak)).
               ASSIGN            
               iColumn = radrak + 1
               cColumn = STRING(iColumn)
               cRange = "A" + cColumn.
               RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT SUBSTRING(kon_id.FRI3,delrak)).            
            END.         
            ELSE RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT kon_id.FRI3).          
         END.               
         {EXCELFEL2.I}         
         ASSIGN   
         skid[1] = "a"
         skid[2] = "c"
         skid[3] = "e"
         skid[4] = "g"                  
         i = 1
         radrak = 50
         lsprak = 1.
         FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
            IF lsprak > 16 THEN.
            ELSE DO:           
               FIND FIRST  kon_valbuff WHERE  kon_valbuff.NUM = fri_tempm.NUM  AND
               kon_valbuff.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
               IF AVAILABLE  kon_valbuff THEN DO:           
                  assign 
                  iColumn = radrak
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.                
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_tempm.KABADR).
                  ASSIGN
                  iColumn = radrak + 1
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.
                  IF fri_tempm.SAKR > 0 THEN RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_tempm.SAKR) + "A"). 
                  i = i + 1.
                  IF i > 4 THEN DO:
                      i = 1.
                      radrak = radrak + 3.
                  END.
               END.
            END.
            lsprak = lsprak + 1.
         END.                                       
         ASSIGN   
         skid[1] = "a"
         skid[2] = "e"                           
         i = 1.
         radrak = 24.
         FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP > 1 USE-INDEX NUM:       
            FIND FIRST  kon_valbuff WHERE  kon_valbuff.NUM = fri_tempm.NUM  AND
            kon_valbuff.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
            IF AVAILABLE  kon_valbuff THEN DO:           
               IF fri_tempm.KABADR BEGINS "tra" THEN DO:                  
                  ASSIGN
                  iColumn = 89
                  cColumn = STRING(iColumn)
                  cRange = "A" + cColumn.                  
                  RUN utexcel_UI (INPUT "POLO",INPUT 45,INPUT fri_tempm.KABADR). 
               END.
               ELSE DO:               
                  assign 
                  iColumn = radrak
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.                               
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT STRING(fri_tempm.LSP) + " kV").
                  ASSIGN
                  iColumn = radrak + 1
                  cColumn = STRING(iColumn)
                  cRange = skid[i] + cColumn.
                  RUN utexcel_UI (INPUT "POLO",INPUT 10,INPUT fri_tempm.KABADR). 
                  i = i + 1.
                  IF i > 2 THEN DO:
                      i = 1.
                      radrak = radrak + 3.
                  END.
               END.
            END.
         END.                                       

      END.
      RELEASE OBJECT chWorksheet NO-ERROR.     
   END.
END PROCEDURE.

