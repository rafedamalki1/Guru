/*MRAPPAPP.P*/
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}

{DEPATEMP.I}
&Scoped-define NEW 
&Scoped-define SHARED 
{ANVTEMPS.I}
{MTRLTEMP.I}
{SPECMTRLTEMP.I}
DEFINE VARIABLE str AS CHARACTER FORMAT "X(86)" NO-UNDO.    
DEFINE VARIABLE str1 AS CHARACTER FORMAT "X(86)" NO-UNDO.
DEFINE VARIABLE str2 AS CHARACTER FORMAT "X(86)" NO-UNDO.
DEFINE VARIABLE antal AS INTEGER NO-UNDO.
DEFINE VARIABLE antal2 AS INTEGER NO-UNDO.
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE totalt AS DECIMAL NO-UNDO. 
DEFINE VARIABLE deltot AS DECIMAL NO-UNDO.
DEFINE VARIABLE spara AS DECIMAL FORMAT "9.99" NO-UNDO.
DEFINE VARIABLE spara2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE ingaende AS INTEGER NO-UNDO.   
DEFINE VARIABLE inkop AS DECIMAL NO-UNDO.
DEFINE VARIABLE stodat AS DATE NO-UNDO.
DEFINE VARIABLE mini AS DECIMAL NO-UNDO.        
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.         
DEFINE VARIABLE varpaslag AS DECIMAL FORMAT "->9.99" NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjbdat AS DATE NO-UNDO.
DEFINE VARIABLE hjavdat AS DATE NO-UNDO.
/*DEFINE VARIABLE lpl AS INTEGER NO-UNDO.*/

{EXTRADATA.I}
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
DEFINE VARIABLE totpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE totant AS INTEGER NO-UNDO.

DEFINE TEMP-TABLE valdlev NO-UNDO
   FIELD LEVNAMN AS CHARACTER
   FIELD LEVKOD AS CHARACTER.

DEFINE TEMP-TABLE best_temp NO-UNDO
    FIELD ENR AS CHARACTER
    FIELD BENAMNING AS CHARACTER
    FIELD ANTAL AS INTEGER
    FIELD PRIS AS DECIMAL
    FIELD SUMMA AS DECIMAL.
    
DEFINE TEMP-TABLE slutsum NO-UNDO
   FIELD ENR AS CHARACTER  
   FIELD BENAMNING AS CHARACTER   
   FIELD SUMMA AS DECIMAL.   

DEFINE TEMP-TABLE inbal NO-UNDO
   FIELD ENR AS CHARACTER
   FIELD FACKID AS CHARACTER  
   FIELD BENAMNING AS CHARACTER
   FIELD ENHET AS CHARACTER    
   FIELD IB AS INTEGER.  
   
DEFINE TEMP-TABLE best_tab NO-UNDO
   FIELD ENR AS CHARACTER  
   FIELD BENAMNING AS CHARACTER
   FIELD ENHET AS CHARACTER    
   FIELD ANTAL AS DECIMAL.    
   
DEFINE TEMP-TABLE slutsum2 NO-UNDO
   FIELD ENR AS CHARACTER  
   FIELD BENAMNING AS CHARACTER
   FIELD ENHET AS CHARACTER    
   FIELD ANTAL AS DECIMAL.   


DEFINE TEMP-TABLE tempbetaonr NO-UNDO
   FIELD ENR AS CHARACTER  
   FIELD BENAMNING AS CHARACTER
   FIELD ENHET AS CHARACTER    
   FIELD LEVKOD AS CHARACTER.   
{TMPUT.i}
/*DEFINE TEMP-TABLE temp_ut NO-UNDO
 FIELD BENAMNING  AS CHARACTER 
 FIELD BESTKVANT  AS DECIMAL 
 FIELD BESTPUNKT  AS INTEGER
 FIELD BPRIS      AS DECIMAL 
 FIELD DEPNR      AS INTEGER 
 FIELD ENHET      AS CHARACTER  
 FIELD ENR        AS CHARACTER 
 FIELD FACKID     AS CHARACTER 
 FIELD IB         AS INTEGER 
 FIELD IBDATUM    AS DATE 
 FIELD INVANT     AS INTEGER 
 FIELD INVDATUM   AS DATE  
 FIELD LAGER      AS LOGICAL 
 FIELD LEVKOD     AS CHARACTER
 FIELD NPRIS      AS DECIMAL 
 FIELD OMSATT     AS DECIMAL 
 FIELD SALDO      AS INTEGER
 INDEX ENR ENR.*/

DEFINE TEMP-TABLE skapa_mtrl NO-UNDO          
   FIELD FORE AS CHARACTER
   FIELD KADR AS CHARACTER  
   FIELD KPNR AS CHARACTER
   FIELD KORT AS CHARACTER
   FIELD BOX AS CHARACTER FORMAT "X(5)"
   FIELD FAX AS CHARACTER
   FIELD KIKONTAKT AS CHARACTER                            
   FIELD KITELE AS CHARACTER        
   FIELD BESTNAMN AS CHARACTER    
   FIELD TELE AS CHARACTER
   FIELD ADR AS CHARACTER
   FIELD PNR AS CHARACTER
   FIELD ORT AS CHARACTER
   FIELD KONTAKT AS CHARACTER 
   FIELD FAXK AS CHARACTER
   FIELD FAKADR AS CHARACTER
   FIELD FAKPNR AS CHARACTER
   FIELD FAKORT AS CHARACTER
   FIELD LEVADR AS CHARACTER
   FIELD LEVPNR AS CHARACTER
   FIELD LEVORT AS CHARACTER   
   FIELD DATUM AS DATE
   FIELD DATUM2 AS DATE
   FIELD MARK AS CHARACTER FORMAT "X(35)"   
   FIELD KOM AS CHARACTER FORMAT "X(40)".

DEFINE TEMP-TABLE off_mtrl NO-UNDO    
    FIELD TOTALT AS DECIMAL.    

DEFINE TEMP-TABLE rak_mtrl NO-UNDO   
    FIELD ENR AS CHARACTER
    FIELD BENAMNING AS CHARACTER
    FIELD ENHET AS CHARACTER
    FIELD BPRIS AS DECIMAL       
    FIELD NPRIS AS DECIMAL        
    FIELD LEVKOD AS CHARACTER
    FIELD MARK AS LOGICAL       
    FIELD SALDO AS INTEGER.    
&Scoped-define NEW  
&Scoped-define SHARED  
{BESTMTRLDEP.I}

DEFINE TEMP-TABLE bdeptmp NO-UNDO
   FIELD ENR AS CHARACTER LABEL "Enr"
   FIELD BENAMNING AS CHARACTER LABEL "Benämning"
   FIELD LEVKOD AS CHARACTER
   FIELD ANTAL AS INTEGER  LABEL "Antal"
   FIELD PRIS AS DECIMAL
   FIELD TOTAL AS DECIMAL 
   FIELD ENHET AS CHARACTER   
   FIELD LEVNAMN AS CHARACTER 
   FIELD BESTDATUM AS DATE 
   FIELD LEVDATUM AS DATE    
   FIELD INKBESTID AS INTEGER 
   FIELD ORDERNUMMER    AS CHARACTER
   FIELD BESTNR AS INTEGER 
   FIELD TRUMMANR AS INTEGER   
   FIELD DEPNR AS INTEGER
   FIELD PROJDEPNR AS INTEGER
   FIELD REST AS LOGICAL    
   FIELD TRUMMAPLATS AS CHARACTER  
   INDEX ENR IS PRIMARY  ENR   
   INDEX INKOP INKBESTID BESTNR TRUMMANR ENR. 
   DEFINE TEMP-TABLE bdeptmp2 LIKE bdeptmp.

   DEFINE TEMP-TABLE brudeptmp NO-UNDO
   FIELD LEVKOD AS CHARACTER   
   FIELD LEVNAMN AS CHARACTER 
   FIELD BESTDATUM AS DATE 
   FIELD LEVDATUM AS DATE    
   FIELD INKBESTID AS INTEGER 
   FIELD ORDERNUMMER    AS CHARACTER
   FIELD BESTNR AS INTEGER 
   FIELD TRUMMANR AS INTEGER   
   FIELD DEPNR AS INTEGER
   FIELD PROJDEPNR AS INTEGER
   FIELD REST AS LOGICAL    
   FIELD TRUMMAPLATS AS CHARACTER     
   INDEX INKOP INKBESTID BESTNR TRUMMANR .
   
   



{TIDUTTT.I}
FIND FIRST FORETAG NO-LOCK NO-ERROR.
ASSIGN Guru.Konstanter:globforetag = FORETAG.FORETAG.
{FORESTYR.I}
{DYNHMT.I}

str=
"=======================================================================================".      
   
PROCEDURE lista1_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.
   RUN huvud_UI (INPUT dpnr,INPUT-OUTPUT TABLE tidut).
   RUN rubrik_UI(INPUT TABLE valdlev,INPUT-OUTPUT TABLE tidut). 
   RUN klar_UI  (INPUT dpnr, INPUT TABLE valdlev, INPUT-OUTPUT TABLE tidut). 
END PROCEDURE.

PROCEDURE lista2_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud2_UI(INPUT sterat, INPUT bodatum, INPUT avodatum, INPUT dpnr, INPUT-OUTPUT TABLE tidut).
   RUN rubrik2_UI(INPUT-OUTPUT TABLE tidut).
   RUN skapa_UI ( INPUT bodatum, INPUT avodatum, INPUT dpnr, INPUT-OUTPUT TABLE tidut).         
END PROCEDURE.

PROCEDURE lista34_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   . 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.
   IF listnr = 3 OR listnr = 4 THEN DO:
      RUN huvud3_UI (INPUT listnr,INPUT sterat, INPUT bodatum, INPUT dpnr,INPUT tret, INPUT-OUTPUT TABLE tidut).
      RUN rubrik3_UI (INPUT sterat, INPUT-OUTPUT TABLE tidut).
      RUN inkop_UI (INPUT sterat, INPUT bodatum, INPUT dpnr, INPUT-OUTPUT TABLE tidut).
      /*RUN klar3_UI.
      RUN klarare_UI. 
      RUN klarast_UI. */
   END.
END PROCEDURE.

PROCEDURE lista56_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.
   IF listnr = 5 OR listnr = 6 THEN DO:
      RUN huvud4_UI (INPUT listnr, INPUT sterat,INPUT dpnr, INPUT-OUTPUT TABLE tidut).
      RUN rubrik4_UI (INPUT listnr, INPUT sterat, INPUT-OUTPUT TABLE tidut).   
      RUN klar4_UI (INPUT listnr, INPUT sterat,INPUT dpnr, INPUT-OUTPUT TABLE tidut).
   END.
END PROCEDURE.

PROCEDURE lista7_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.      
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud5_UI (INPUT sterat, INPUT dpnr,INPUT kkyl, INPUT frod, INPUT tret, INPUT-OUTPUT TABLE tidut).
   RUN rubrik5_UI(INPUT sterat, INPUT-OUTPUT TABLE tidut).   
   RUN klar5_UI(INPUT sterat, INPUT dpnr,INPUT kkyl, INPUT frod, INPUT tret, INPUT-OUTPUT TABLE tidut).    
END PROCEDURE.

PROCEDURE lista8_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud6_UI (INPUT dpnr , INPUT-OUTPUT TABLE tidut).
   RUN rubrik6_UI ( INPUT-OUTPUT TABLE tidut).   
   RUN klar6_UI (INPUT dpnr , INPUT-OUTPUT TABLE tidut).    
END PROCEDURE.

PROCEDURE lista9_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud7_UI  ( INPUT dpnr , INPUT-OUTPUT TABLE tidut).
   RUN rubrik7_UI ( INPUT-OUTPUT TABLE tidut).   
   RUN klar7_UI ( INPUT dpnr , INPUT-OUTPUT TABLE tidut).    
END PROCEDURE.

PROCEDURE lista10_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   assign
   hjbdat = bdatum
   hjavdat = avdatum.
   EMPTY TEMP-TABLE tidut NO-ERROR.      
   RUN huvud8_UI (INPUT dpnr, INPUT-OUTPUT TABLE tidut).
   RUN rubrik8_UI (INPUT dpnr, INPUT-OUTPUT TABLE tidut).        /*klar8_ui och klar9_UI*/
   
   
END PROCEDURE.

PROCEDURE lista11_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud11_UI(INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod, INPUT-OUTPUT TABLE tidut).
   RUN rubrik11_UI (INPUT sterat, INPUT-OUTPUT TABLE tidut).
   RUN klar11_UI (INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod,INPUT msek6, INPUT-OUTPUT TABLE tidut). 
   IF msek6 = FALSE THEN RUN totalt_UI (INPUT sterat, INPUT dpnr, INPUT tret, INPUT-OUTPUT TABLE tidut).   
END PROCEDURE.



PROCEDURE lista12_UI :   
   DEFINE INPUT PARAMETER vaonr AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER vdelnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER vort AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR skapa_mtrl.   
   DEFINE INPUT PARAMETER TABLE FOR spec_mtrl.   
   DEFINE INPUT PARAMETER TABLE FOR off_mtrl.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud12_UI (INPUT vaonr ,INPUT vdelnr,INPUT vort, INPUT dpnr,INPUT TABLE skapa_mtrl, INPUT-OUTPUT TABLE tidut).
   RUN rubrik12_UI ( INPUT-OUTPUT TABLE tidut).
   RUN klar12_UI (INPUT TABLE spec_mtrl,INPUT TABLE off_mtrl,INPUT msek6, INPUT-OUTPUT TABLE tidut). 
   IF msek6 = FALSE THEN RUN totalt2_UI ( INPUT-OUTPUT TABLE tidut).   

   /*RUN huvud_UI.
   RUN rubrik_UI.
   IF musz = FALSE THEN RUN klar_UI.   
   RUN totalt_UI.    */
END PROCEDURE.

PROCEDURE lista13_UI :   
   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR best_mtrl.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   
   CREATE tidut. 
   FOR EACH best_mtrl USE-INDEX ENR:                      
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = best_mtrl.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(best_mtrl.BENAMNING,1,35)               
      SUBSTRING(tidut.UT,50) = best_mtrl.ENHET.
      OPEN QUERY bestq FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND
      BESTDEP.LEVDATUM = ? AND BESTDEP.ENR = best_mtrl.ENR AND BESTDEP.BERED = FALSE AND 
      BESTDEP.LEVNAMN = "" NO-LOCK BY BESTDEP.BESTDATUM.
      GET FIRST bestq NO-LOCK.
      DO WHILE AVAILABLE(BESTDEP):   
         ASSIGN       
         SUBSTRING(tidut.UT,56) = STRING(BESTDEP.ANTAL,">>>>9")
         SUBSTRING(tidut.UT,62) = STRING(BESTDEP.BESTDATUM).
         CREATE tidut.                                
         GET NEXT bestq NO-LOCK.
      END.
      CLOSE QUERY bestq.
      CREATE tidut.   
      CREATE tidut. 
   END.                                           
   
END PROCEDURE.


PROCEDURE lista14_UI :   
   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   {AMERICANEUROPEAN.I}
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                  
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Depå"
   SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
   CREATE tidut.
   CREATE tidut. 
   ASSIGN        
   SUBSTRING(tidut.UT,1) = "Ändrade priser"         
   SUBSTRING(tidut.UT,47) = STRING(TODAY)
   SUBSTRING(tidut.UT,57) = STRING(TIME,"HH:MM:SS").                                                                       
   CREATE tidut. 
   CREATE tidut.           
   ASSIGN
   str=                                                                    
"===========.==============================.======.======.======.=========.=====".     
   SUBSTRING(tidut.UT,1) = str.                     
   CREATE tidut.     
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                        
   SUBSTRING(tidut.UT,44) = "PRIS"
   SUBSTRING(tidut.UT,51) = "NYPRIS"
   SUBSTRING(tidut.UT,58) = "ANV"
   SUBSTRING(tidut.UT,65) = "DATUM"
   SUBSTRING(tidut.UT,75) = "KLOCK"
   SUBSTRING(tidut.UT,82) = "DEPÅNR".                         
   CREATE tidut.       
   SUBSTRING(tidut.UT,1) = str. 


   CREATE tidut. 
   OPEN QUERY utq FOR EACH BETAONR 
   NO-LOCK BY BETAONR.BETNR DESCENDING.
   GET FIRST utq NO-LOCK.
   DO WHILE AVAILABLE(BETAONR):
      IF BETAONR.EXTRAANM = STRING(dpnr) OR BETAONR.EXTRAANM = ""  THEN DO:
         kommando = SESSION:TEMP-DIRECTORY + "BETAONR.TXT".
         
         OUTPUT TO VALUE(kommando).
         PUT BETAONR.AONR FORMAT "X(256)" SKIP.
         OUTPUT CLOSE.               
         
         EMPTY TEMP-TABLE tempbetaonr NO-ERROR.
         INPUT FROM VALUE(kommando) CONVERT TARGET "iso8859-1" SOURCE "iso8859-1" NO-ECHO.
         REPEAT:
            DO TRANSACTION: 
               CREATE tempbetaonr.
               ASSIGN.
               IMPORT DELIMITER ";" tempbetaonr.
            END.               
         END.
         FIND FIRST tempbetaonr NO-LOCK NO-ERROR.
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = tempbetaonr.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(tempbetaonr.BENAMNING,1,30)              
         SUBSTRING(tidut.UT,44) = STRING(BETAONR.EXTRAPRIS)
         SUBSTRING(tidut.UT,51) = STRING(BETAONR.KALKPRIS)
         SUBSTRING(tidut.UT,58) = BETAONR.ANM
         SUBSTRING(tidut.UT,65) = STRING(DATE(BETAONR.BETNR))
         SUBSTRING(tidut.UT,75) = STRING(BETAONR.DELNR,"HH:MM").
         SUBSTRING(tidut.UT,82) = BETAONR.EXTRAANM.
      END.        
      GET NEXT utq NO-LOCK.
   END.                    
   CLOSE QUERY utq.  
    str=
"=============================================================================".         
   CREATE tidut.      
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.                                        
   {EUROPEANAMERICAN.I}
END PROCEDURE.

PROCEDURE lista31_UI :   
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL  NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEBUGGER:SET-BREAK().
   
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud31_UI(INPUT vdpnr,INPUT pdpnr,INPUT utg,INPUT levtill,INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod, INPUT-OUTPUT TABLE tidut).
   RUN rubrik31_UI (INPUT utg,INPUT sterat, INPUT-OUTPUT TABLE tidut).
   RUN klar31_UI (INPUT vdpnr,INPUT pdpnr,INPUT utg,INPUT levtill, INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod,INPUT msek6, INPUT-OUTPUT TABLE tidut). 
   IF msek6 = FALSE THEN RUN totalt_UI (INPUT sterat, INPUT dpnr, INPUT tret, INPUT-OUTPUT TABLE tidut).   
END PROCEDURE.

PROCEDURE lista32_UI :
   DEFINE INPUT PARAMETER vlplats AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER utg AS LOGICAL  NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEBUGGER:SET-BREAK().
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud32_UI(INPUT vlplats, INPUT vdpnr,INPUT pdpnr,INPUT utg,INPUT levtill,INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod, INPUT-OUTPUT TABLE tidut).
   RUN rubrik32_UI (INPUT utg,INPUT sterat, INPUT-OUTPUT TABLE tidut).
   RUN klar32_UI (INPUT vlplats, INPUT vdpnr,INPUT pdpnr,INPUT utg,INPUT levtill, INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod,INPUT msek6, INPUT-OUTPUT TABLE tidut). 
   IF msek6 = FALSE THEN RUN totalt32_UI (INPUT levtill, INPUT sterat, INPUT dpnr, INPUT tret, INPUT-OUTPUT TABLE tidut).   
END PROCEDURE.

PROCEDURE lista33_UI :   
   DEFINE INPUT PARAMETER vlplats AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL  NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEBUGGER:SET-BREAK().
   EMPTY TEMP-TABLE tidut NO-ERROR.   
   RUN huvud32_UI(INPUT vlplats,INPUT vdpnr,INPUT pdpnr, INPUT utg,INPUT levtill,INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod, INPUT-OUTPUT TABLE tidut).
   RUN rubrik33_UI ( INPUT utg,INPUT sterat, INPUT-OUTPUT TABLE tidut).
   RUN klar33_UI (INPUT vlplats, INPUT vdpnr,INPUT pdpnr, INPUT utg,INPUT levtill, INPUT sterat, INPUT dpnr,INPUT tret,INPUT leverantorkod,INPUT msek6, INPUT-OUTPUT TABLE tidut). 
   IF msek6 = FALSE THEN RUN totalt32_UI (INPUT levtill, INPUT sterat, INPUT dpnr, INPUT tret, INPUT-OUTPUT TABLE tidut).   
END PROCEDURE.

PROCEDURE inkop_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   FIND FIRST MTRLDEP WHERE MTRLDEP.DEPNR = dpnr AND 
   MTRLDEP.IBDATUM = ? NO-LOCK NO-ERROR.
   /*ASSIGN
   stopdat = MTRLDEP.INVDATUM.*/
   OPEN QUERY ink FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND 
   BESTDEP.BESTDATUM >= bodatum AND BESTDEP.BESTDATUM <= MTRLDEP.INVDATUM AND BESTDEP.LEVNAMN = "" NO-LOCK.
   GET FIRST ink NO-LOCK.   
   DO WHILE AVAILABLE(BESTDEP):      
      CREATE best_tab.
      ASSIGN
      best_tab.ENR = BESTDEP.ENR 
      best_tab.BENAMNING = BESTDEP.BENAMNING
      best_tab.ENHET = BESTDEP.ENHET
      best_tab.ANTAL = BESTDEP.ANTAL.                             
      GET NEXT ink NO-LOCK.      
   END. 
   arrhjsum = 0.
   FOR EACH best_tab BREAK BY best_tab.ENR:   
      ACCUMULATE best_tab.ANTAL 
      (TOTAL BY best_tab.ENR).       
      IF LAST-OF (best_tab.ENR) THEN DO:
         CREATE slutsum2.
         ASSIGN                            
         slutsum2.ENR = best_tab.ENR
         slutsum2.BENAMNING = best_tab.BENAMNING 
         slutsum2.ENHET = best_tab.ENHET                     
         slutsum2.ANTAL = (ACCUM TOTAL best_tab.ANTAL) - arrhjsum                                
         arrhjsum = ACCUM TOTAL best_tab.ANTAL.           
      END.
   END. 
   
   OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
   AND MTRLDEP.IBDATUM = bodatum NO-LOCK. 
   GET FIRST mtrlq NO-LOCK.
   DO WHILE AVAILABLE(MTRLDEP):
      CREATE inbal. 
      ASSIGN
      inbal.ENR = MTRLDEP.ENR  
      inbal.FACKID = MTRLDEP.FACKID
      inbal.BENAMNING = MTRLDEP.BENAMNING
      inbal.ENHET = MTRLDEP.ENHET
      inbal.IB = MTRLDEP.IB.
      GET NEXT mtrlq NO-LOCK.  
   END. 
   CLOSE QUERY mtrlq.
   /*klar3_ui*/
   IF sterat = 1 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.FACKID.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE ingaende = 0.         
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE inkop = 0.
         
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,10) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.          
      END.
      CLOSE QUERY mtrlq. 
   END.                                              
   IF sterat = 2 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.ENR.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE ingaende = 0.         
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE inkop = 0.         
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,13) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.               
      END. 
      CLOSE QUERY mtrlq. 
   END.                                             
   IF sterat = 3 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.BENAMNING.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE DO:
            ingaende = 0.
         END.
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE DO:
            inkop = 0.
         END.                            
         CREATE tidut.      
         ASSIGN                              
         SUBSTRING(tidut.UT,1) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                    
         SUBSTRING(tidut.UT,32) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,41) = MTRLDEP.ENR               
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.              
      END. 
      CLOSE QUERY mtrlq. 
   END.                            
   /*klarare_ui*/
   FIND FIRST inbal NO-LOCK NO-ERROR.
   IF AVAILABLE inbal THEN DO:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut. 
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "==================================================".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "MATERIEL SOM FANNS LAGERFÖRT VID PERIODENS INGÅNG,".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "MEN EJ VID INVENTERING.".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "==================================================".
      CREATE tidut. 
      CREATE tidut.               
      SUBSTRING(tidut.UT,1) = str.
      IF sterat = 1 THEN DO: 
         FOR EACH inbal BY inbal.FACKID:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN
            SUBSTRING(tidut.UT,1) = inbal.FACKID  
            SUBSTRING(tidut.UT,10) = inbal.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(inbal.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.                                              
      IF sterat = 2 THEN DO: 
         FOR EACH inbal BY inbal.ENR:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN                                
            SUBSTRING(tidut.UT,1) = inbal.ENR
            SUBSTRING(tidut.UT,13) = inbal.FACKID              
            SUBSTRING(tidut.UT,22) = SUBSTRING(inbal.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.                                             
      IF sterat = 3 THEN DO: 
         FOR EACH inbal BY inbal.BENAMNING:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN                            
            SUBSTRING(tidut.UT,1) = SUBSTRING(inbal.BENAMNING,1,30)     
            SUBSTRING(tidut.UT,32) = inbal.FACKID  
            SUBSTRING(tidut.UT,41) = inbal.ENR                                 
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.
   END.
   
   /*klarast_ui*/
   FIND FIRST slutsum2 NO-LOCK NO-ERROR.
   IF AVAILABLE slutsum2 THEN DO:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut. 
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "====================================================".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "MATERIEL SOM EJ FANNS LAGERFÖRT VID PERIODENS INGÅNG".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "OCH VID INVENTERING, MEN SOM INKÖPTS UNDER PERIODEN.".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "====================================================".
      CREATE tidut. 
      CREATE tidut.               
      SUBSTRING(tidut.UT,1) = str.
      IF sterat = 1 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.ENR:                        
            CREATE tidut.      
            ASSIGN            
            SUBSTRING(tidut.UT,10) = slutsum2.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(slutsum2.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.                                              
      IF sterat = 2 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.ENR:                         
            CREATE tidut.      
            ASSIGN           
            SUBSTRING(tidut.UT,1) = slutsum2.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(slutsum2.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.                                             
      IF sterat = 3 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.BENAMNING:                        
            CREATE tidut.      
            ASSIGN                              
            SUBSTRING(tidut.UT,1) = SUBSTRING(slutsum2.BENAMNING,1,30)                
            SUBSTRING(tidut.UT,41) = slutsum2.ENR                      
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.
   END.   
      
END PROCEDURE.



PROCEDURE huvud_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   
    
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
      /*IF musz = TRUE THEN musz = musz.   
      ELSE DO:                   */
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "LISTA " + CAPS(Guru.Konstanter:genk) + " - PRISER FÖR DEPÅ"
         SUBSTRING(tidut.UT,34) = DEPA.BENAMNING 
         SUBSTRING(tidut.UT,50) = STRING(TODAY)
         SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS").                                                               
         CREATE tidut.                   
         CREATE tidut.         
      /*END.*/
   END.                    
END PROCEDURE.


PROCEDURE huvud2_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
   
      CREATE tidut. 
      ASSIGN        
      SUBSTRING(tidut.UT,1) = "VOLYMVÄRDE FÖR DEPÅ"
      SUBSTRING(tidut.UT,21) = DEPA.BENAMNING 
      SUBSTRING(tidut.UT,40) = STRING(TODAY)
      SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").                                                               
      CREATE tidut.
      IF sterat = 1 THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,1) = "PERIOD:"
         SUBSTRING(tidut.UT,9) = STRING(YEAR(bodatum)).
      END.                   
      IF sterat = 2 THEN DO: 
         ASSIGN
         SUBSTRING(tidut.UT,1) = "PERIOD:"
         SUBSTRING(tidut.UT,9) = STRING(bodatum)
         SUBSTRING(tidut.UT,19) = "-"
         SUBSTRING(tidut.UT,21) = STRING(avodatum).
      END.                                                
      CREATE tidut.                                    
      CREATE tidut.         
   
   END.                    
END PROCEDURE.


PROCEDURE huvud3_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
      /*IF musz = TRUE THEN musz = musz.   
      ELSE DO:                   */
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "FÖRBRUKNING / " + CAPS(Guru.Konstanter:genk) + " FÖR DEPÅ"
         SUBSTRING(tidut.UT,29) = DEPA.BENAMNING
         SUBSTRING(tidut.UT,64) = STRING(TIME,"HH:MM:SS"). 
         CREATE tidut.
         IF listnr = 3 THEN SUBSTRING(tidut.UT,1) = "BERÄKNAT PÅ INVENTERADE VÄRDEN".                                                              
         IF listnr = 4 THEN SUBSTRING(tidut.UT,1) = "BERÄKNAT PÅ TEORETISKA VÄRDEN".                                                            
         CREATE tidut. 
         FIND FIRST MTRLDEP WHERE MTRLDEP.DEPNR = dpnr AND 
         MTRLDEP.IBDATUM = ? NO-LOCK NO-ERROR.
         IF tret = 2 THEN stodat = TODAY.
         ELSE stodat = MTRLDEP.INVDATUM.
         /*ASSIGN
         stopdat = MTRLDEP.INVDATUM.*/
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ FACK-ID"
            SUBSTRING(tidut.UT,40) = "GÄLLER PERIOD:"
            SUBSTRING(tidut.UT,54) = STRING(bodatum)
            SUBSTRING(tidut.UT,62) = "-"
            SUBSTRING(tidut.UT,64) = STRING(stodat).
         END.                   
         IF sterat = 2 THEN DO: 
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ " + CAPS(Guru.Konstanter:genk)
            SUBSTRING(tidut.UT,40) = "GÄLLER PERIOD:"
            SUBSTRING(tidut.UT,54) = STRING(bodatum)
            SUBSTRING(tidut.UT,63) = "-"
            SUBSTRING(tidut.UT,65) = STRING(stodat).
         END.                                       
         IF sterat = 3 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ BENÄMNING"
            SUBSTRING(tidut.UT,40) = "GÄLLER PERIOD:"
            SUBSTRING(tidut.UT,54) = STRING(bodatum)
            SUBSTRING(tidut.UT,62) = "-"
            SUBSTRING(tidut.UT,64) = STRING(stodat).
         END.                  
         CREATE tidut.                                    
         CREATE tidut.         
      /*END.*/
   END.                    
END PROCEDURE.


PROCEDURE huvud4_UI :   

   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
      /*IF musz = TRUE THEN musz = musz.   
      ELSE DO:                   */
         CREATE tidut. 

         IF listnr = 5 THEN ASSIGN SUBSTRING(tidut.UT,1) = "INVENTERAT LAGER FÖR DEPÅ".
         ELSE IF listnr = 6 THEN ASSIGN SUBSTRING(tidut.UT,1) = "TEORETISKT LAGER FÖR DEPÅ".
         ASSIGN
         SUBSTRING(tidut.UT,27) = DEPA.BENAMNING.                                                               
         CREATE tidut.
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ FACK-ID"
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                   
         IF sterat = 2 THEN DO: 
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ " + CAPS(Guru.Konstanter:genk)
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                                       
         IF sterat = 3 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ BENÄMNING"
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                  
         CREATE tidut.                                    
         CREATE tidut.         
      /*END.*/
   END.                    
END PROCEDURE.


PROCEDURE huvud5_UI :      
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   .
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
      /*IF musz = TRUE THEN musz = musz.   
      ELSE DO:                   */
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "KOSTNADSMINIMERAD BESTÄLLNINGSKVANTITET FÖR DEPÅ"
         SUBSTRING(tidut.UT,50) = DEPA.BENAMNING.                                                               
         CREATE tidut.
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ FACK-ID"
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                   
         IF sterat = 2 THEN DO: 
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ " + CAPS(Guru.Konstanter:genk)
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                                       
         IF sterat = 3 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,1) = "SORTERAT PÅ BENÄMNING"
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         END.                  
         CREATE tidut.                                    
         CREATE tidut.
         ASSIGN 
         SUBSTRING(tidut.UT,1) = "KALKYLRÄNTA:"
         SUBSTRING(tidut.UT,13) = STRING(kkyl)
         SUBSTRING(tidut.UT,18) = "%"
         SUBSTRING(tidut.UT,22) = "FÖRRÅDSSÄRKOSTNAD:"
         SUBSTRING(tidut.UT,41) = STRING(frod)
         SUBSTRING(tidut.UT,46) = "%"
         SUBSTRING(tidut.UT,50) = "ORDERSÄRKOSTNAD:"
         SUBSTRING(tidut.UT,66) = STRING(tret)
         SUBSTRING(tidut.UT,72) = "Kr".
         CREATE tidut.                                    
         CREATE tidut.
      /*END.*/
   END.                    
END PROCEDURE.


PROCEDURE huvud6_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:   
      
      
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                  
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = "DEPÅ"
      SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
      CREATE tidut.
      CREATE tidut. 
      ASSIGN        
      SUBSTRING(tidut.UT,1) = "SALDO - BESTÄLLNINGSPUNKT"         
      SUBSTRING(tidut.UT,47) = STRING(TODAY)
      SUBSTRING(tidut.UT,57) = STRING(TIME,"HH:MM:SS").                                                                       
      CREATE tidut.                          
      
   END.                    
END PROCEDURE.



PROCEDURE huvud7_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:
      FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:                   
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "VÄRDE PÅ LAGER FÖR DEPÅ"
         SUBSTRING(tidut.UT,27) = DEPA.BENAMNING 
         SUBSTRING(tidut.UT,40) = STRING(TODAY)
         SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").                                                                                         
         CREATE tidut.                                    
         CREATE tidut.         
      END.
   END.                    
END PROCEDURE.



PROCEDURE huvud8_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:
         FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "DEPÅ"
         SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
         CREATE tidut.
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "ÖKADE / MINSKADE SALDON"         
         SUBSTRING(tidut.UT,47) = STRING(TODAY)
         SUBSTRING(tidut.UT,57) = STRING(TIME,"HH:MM:SS").                                                                       
         CREATE tidut.                         
      END.
   END.                    
END PROCEDURE.


PROCEDURE huvud11_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:
         FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "DEPÅ"
         SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,39) = STRING(TODAY)
            SUBSTRING(tidut.UT,59) = STRING(TIME,"HH:MM:SS"). 
         END.
         ELSE DO:
            ASSIGN
            SUBSTRING(tidut.UT,57) = STRING(TODAY)
            SUBSTRING(tidut.UT,67) = STRING(TIME,"HH:MM:SS"). 
         END.        
         CREATE tidut.
         CREATE tidut.         
         IF sterat = 1 THEN DO:  
            SUBSTRING(tidut.UT,1) = "SPECIFIKATION AV MATERIEL FÖR EJ FÄRDIG LEVERANS NR:".
         END.
         ELSE DO: 
            SUBSTRING(tidut.UT,1) = "SPECIFIKATION AV MATERIEL FÖR FÄRDIGA LEVERANSER BESTÄLLNING NR:".  
         END. 
         IF sterat = 1 THEN DO:
            ASSIGN     
            SUBSTRING(tidut.UT,53) = STRING(tret).
         END.
         ELSE DO:
            ASSIGN     
            SUBSTRING(tidut.UT,65) = STRING(tret).
         END.   
         IF sterat = 1 THEN DO:
            CREATE tidut.
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = leverantorkod NO-LOCK NO-ERROR.       
            IF AVAILABLE LEVERANTOR THEN DO:                    
               ASSIGN
               SUBSTRING(tidut.UT,1) = "FÖR LEVERANTÖR " 
               SUBSTRING(tidut.UT,16) = LEVERANTOR.LEVNAMN.
            END.   
         END.                                                                          
         CREATE tidut.
         CREATE tidut. 
         FIND FIRST BESTDEP WHERE BESTDEP.BESTNR = tret AND 
         BESTDEP.DEPNR = dpnr NO-LOCK NO-ERROR.            
         ASSIGN                              
         SUBSTRING(tidut.UT,1) = "BESTÄLLARE:"
         SUBSTRING(tidut.UT,13) = BESTDEP.BESTALLARE         
         SUBSTRING(tidut.UT,40) = "BESTÄLLNINGSDATUM:"        
         SUBSTRING(tidut.UT,59) = STRING(BESTDEP.BESTDATUM).          
         CREATE tidut.             
      END.   
   END.                    
END PROCEDURE.

PROCEDURE huvud31_UI :   
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:
         FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "DEPÅ"
         SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,39) = STRING(TODAY)
            SUBSTRING(tidut.UT,59) = STRING(TIME,"HH:MM:SS"). 
         END.
         ELSE DO:
            ASSIGN
            SUBSTRING(tidut.UT,57) = STRING(TODAY)
            SUBSTRING(tidut.UT,67) = STRING(TIME,"HH:MM:SS"). 
         END.        
         CREATE tidut.
         CREATE tidut.  
         IF utg = FALSE THEN DO:       
            FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND  BESTDEPAO.INKBESTID = tret NO-LOCK NO-ERROR.
            IF AVAILABLE BESTDEPAO THEN DO:
               IF sterat = 1 THEN DO:  
                  SUBSTRING(tidut.UT,1) = "Specifikation av materiel för ej färdig leverans" .            
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "================================================" .
                  CREATE tidut.
               END.
               ELSE DO: 
                  SUBSTRING(tidut.UT,1) = "Specifikation av materiel för färdig leverans" .
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "=============================================" .
                  CREATE tidut.
                    
               END. 
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Projektnummer: " .
               SUBSTRING(tidut.UT,20) = BESTDEPAO.AONRAONR + " " + STRING(BESTDEPAO.AONRDELNR) .
               SUBSTRING(tidut.UT,1) = "Projektnummer: " .
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Bestnr: ".
               SUBSTRING(tidut.UT,20) =  STRING(BESTDEPAO.INKBESTID).
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Ordernummer: ".
               SUBSTRING(tidut.UT,20) =  BESTDEPAO.ORDERNUMMER .
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Beställningsdatum: ".
               SUBSTRING(tidut.UT,20) =  STRING(BESTDEPAO.BESTDATUM).
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Tid: ".
               SUBSTRING(tidut.UT,20) = STRING(BESTDEPAO.BESTTID,"HH:MM:SS").
               IF sterat = 1 THEN DO:
                  /*Om REST = bestallare = den som restrapporterade Lena 20200131*/
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND  BESTDEPAO.INKBESTID = tret AND BESTDEPAO.LEVDATUM = ? NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE BESTDEPAO THEN DO:
                     FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND  BESTDEPAO.INKBESTID = tret  NO-LOCK NO-ERROR.
                  END.
               END.
               
               
               CREATE tidut.                      
               ASSIGN                               
               SUBSTRING(tidut.UT,1) = "Beställt av:"
               SUBSTRING(tidut.UT,20) = BESTDEPAO.BESTALLARE.
               IF sterat = 2 THEN DO:
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "Lev-datum: ".
                  SUBSTRING(tidut.UT,20) =  STRING(BESTDEPAO.LEVDATUM).    
               END.            
            END.                           
            CREATE tidut.
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = leverantorkod NO-LOCK NO-ERROR.  
            IF AVAILABLE LEVERANTOR THEN DO:                     
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Leverantör " 
               SUBSTRING(tidut.UT,20) = LEVERANTOR.LEVNAMN.                   
               CREATE tidut.
            END.                
         END.   
         ELSE IF utg = TRUE THEN DO:
            FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.BESTNR = tret NO-LOCK NO-ERROR.
            IF AVAILABLE BESTDEPAO THEN DO:
               FIND FIRST DEPA WHERE DEPA.Dep-Nr = BESTDEPAO.DEPNR NO-LOCK NO-ERROR.
                
               SUBSTRING(tidut.UT,1) = "Specifikation av materiel för UTTAG" .            
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "=========================================" .
               CREATE tidut.
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Uttag från depå: " 
               SUBSTRING(tidut.UT,20) = STRING(BESTDEPAO.DEPNR)
               SUBSTRING(tidut.UT,30) = DEPA.Benamning.
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Uttag nr: " .
               SUBSTRING(tidut.UT,20) = STRING(BESTDEPAO.BESTNR).
                
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Projektnummer: " .
               SUBSTRING(tidut.UT,20) = BESTDEPAO.AONRAONR + " " + STRING(BESTDEPAO.AONRDELNR) .
               
               
               SUBSTRING(tidut.UT,1) = "Uttaget datum: ".
               SUBSTRING(tidut.UT,20) =  STRING(BESTDEPAO.BESTDATUM).
               
               CREATE tidut.                      
               ASSIGN                               
               SUBSTRING(tidut.UT,1) = "Beställt av:"
               SUBSTRING(tidut.UT,20) = BESTDEPAO.BESTALLARE.
                           
            END.                           
            CREATE tidut.
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = leverantorkod NO-LOCK NO-ERROR.     
            IF AVAILABLE LEVERANTOR THEN DO:                      
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Leverantör " 
               SUBSTRING(tidut.UT,20) = LEVERANTOR.LEVNAMN.                   
               CREATE tidut.
            END.     
         END.
         ELSE IF utg = ? THEN DO:
            FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.TRUMMANR = tret NO-LOCK NO-ERROR.
            IF AVAILABLE BESTDEPAO THEN DO:
               FIND FIRST DEPA WHERE DEPA.Dep-Nr = BESTDEPAO.DEPNR NO-LOCK NO-ERROR.
                
               SUBSTRING(tidut.UT,1) = "Specifikation av materiel för TRUMMA" .            
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "=========================================" .
               CREATE tidut.
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Trumma från depå: " 
               SUBSTRING(tidut.UT,20) = STRING(BESTDEPAO.DEPNR)
               SUBSTRING(tidut.UT,30) = DEPA.Benamning.
               CREATE tidut.
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Id: " .
               SUBSTRING(tidut.UT,20) = STRING(BESTDEPAO.TRUMMANR).
               FIND FIRST TRUMMADEP WHERE TRUMMADEP.DEPNR = BESTDEPAO.DEPNR AND TRUMMADEP.TRUMMANR = BESTDEPAO.TRUMMANR NO-LOCK NO-ERROR.
               IF AVAILABLE TRUMMADEP  THEN DO:
                  SUBSTRING(tidut.UT,30) = "Trumma namn:" .
                  SUBSTRING(tidut.UT,45) = TRUMMADEP.TRUMMAPLATS.                                                
               END.
                
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "Projektnummer: " .
               SUBSTRING(tidut.UT,20) = BESTDEPAO.AONRAONR + " " + STRING(BESTDEPAO.AONRDELNR) .
               
               
               SUBSTRING(tidut.UT,1) = "Uttaget datum: ".
               SUBSTRING(tidut.UT,20) =  STRING(BESTDEPAO.BESTDATUM).
               
               CREATE tidut.                      
               ASSIGN                               
               SUBSTRING(tidut.UT,1) = "Beställt av:"
               SUBSTRING(tidut.UT,20) = BESTDEPAO.BESTALLARE.
                           
            END.                           
            CREATE tidut.
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = leverantorkod NO-LOCK NO-ERROR.     
            IF AVAILABLE LEVERANTOR THEN DO:                      
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Leverantör " 
               SUBSTRING(tidut.UT,20) = LEVERANTOR.LEVNAMN.                   
               CREATE tidut.
            END.     
         END.
      END.      
   END.                    
END PROCEDURE.

PROCEDURE huvud32_UI :   
   DEFINE INPUT PARAMETER vlplats AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:
         FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "DEPÅ"
         SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
         IF sterat = 1 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,39) = STRING(TODAY)
            SUBSTRING(tidut.UT,59) = STRING(TIME,"HH:MM:SS"). 
         END.
         ELSE DO:
            ASSIGN
            SUBSTRING(tidut.UT,57) = STRING(TODAY)
            SUBSTRING(tidut.UT,67) = STRING(TIME,"HH:MM:SS"). 
         END.        
         CREATE tidut.
         CREATE tidut.

         FIND FIRST LAGERPLATSKOPP WHERE LAGERPLATSKOPP.PROJDEPNR = pdpnr AND LAGERPLATSKOPP.LAGERPLATSI = vlplats AND LAGERPLATSKOPP.uttaget = FALSE
         AND LAGERPLATSKOPP.AONRAONR NE "" NO-LOCK NO-ERROR.
         IF AVAILABLE LAGERPLATSKOPP THEN DO:
            IF levtill = 33 THEN DO:
               SUBSTRING(tidut.UT,1) = "Summerat materiel för alla inköp /uttag /trummor till P-plats: " + STRING(LAGERPLATSKOPP.LAGERPLATSI) + " " + LAGERPLATSKOPP.LAGERPLATSc .            
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "=====================================================================" .
            END.
            ELSE DO:   
               SUBSTRING(tidut.UT,1) = "Specifikation av materiel för alla inköp /uttag /trummor till P-plats: " + STRING(LAGERPLATSKOPP.LAGERPLATSI) + " " + LAGERPLATSKOPP.LAGERPLATSc .            
               CREATE tidut.
               SUBSTRING(tidut.UT,1) = "=====================================================================" .
            END.   
            CREATE tidut.
            CREATE tidut.
            SUBSTRING(tidut.UT,1) = "P-plats: " .
            SUBSTRING(tidut.UT,20) = STRING(LAGERPLATSKOPP.LAGERPLATSI) + " " + LAGERPLATSKOPP.LAGERPLATSC .
            FIND FIRST AONRTAB WHERE AONRTAB.AONR =  LAGERPLATSKOPP.AONRAONR AND AONRTAB.DELNR = LAGERPLATSKOPP.AONRDELNR NO-LOCK NO-ERROR.
            CREATE tidut.
            SUBSTRING(tidut.UT,1) = "Projektnummer: " .                       
            SUBSTRING(tidut.UT,20) = LAGERPLATSKOPP.AONRAONR + " " + STRING(LAGERPLATSKOPP.AONRDELNR) + " " + AONRTAB.ORT.
            CREATE tidut.         
            
            
            EMPTY TEMP-TABLE brudeptmp  NO-ERROR. 
            FOR EACH LAGERPLATSKOPP  WHERE LAGERPLATSKOPP.PROJDEPNR = pdpnr AND LAGERPLATSKOPP.LAGERPLATSI = vlplats AND LAGERPLATSKOPP.uttaget = FALSE USE-INDEX PROJDEPNR NO-LOCK:
               CREATE brudeptmp.    
               BUFFER-COPY LAGERPLATSKOPP TO brudeptmp.
               IF brudeptmp.TRUMMANR > 0 THEN DO:
                  FIND FIRST TRUMMADEP WHERE TRUMMADEP.DEPNR = brudeptmp.DEPNR AND TRUMMADEP.TRUMMANR = brudeptmp.TRUMMANR NO-LOCK NO-ERROR.
                  IF AVAILABLE TRUMMADEP THEN brudeptmp.TRUMMAPLATS = TRUMMADEP.TRUMMAPLATS.
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = brudeptmp.PROJDEPNR AND  BESTDEPAO.DEPNR = brudeptmp.DEPNR AND BESTDEPAO.TRUMMANR = brudeptmp.TRUMMANR
                  AND BESTDEPAO.UTTAGET = FALSE NO-LOCK NO-ERROR.
                  IF AVAILABLE BESTDEPAO THEN brudeptmp.BESTDATUM = BESTDEPAO.BESTDATUM.
               END.      
               IF brudeptmp.INKBESTID > 0 THEN DO:
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.INKBESTID = brudeptmp.INKBESTID NO-LOCK NO-ERROR.
                  IF AVAILABLE BESTDEPAO  THEN DO:
                      brudeptmp.ORDERNUMMER = BESTDEPAO.ORDERNUMMER.
                      brudeptmp.BESTDATUM = BESTDEPAO.BESTDATUM.
                  END.     
               END.
               IF brudeptmp.BESTNR > 0 THEN DO:
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = brudeptmp.PROJDEPNR AND BESTDEPAO.DEPNR = brudeptmp.DEPNR AND BESTDEPAO.BESTNR = brudeptmp.BESTNR NO-LOCK NO-ERROR.
                  IF AVAILABLE BESTDEPAO  THEN brudeptmp.BESTDATUM = BESTDEPAO.BESTDATUM.
               END.   
            END.
            FOR EACH brudeptmp USE-INDEX INKOP NO-LOCK:                      
               IF brudeptmp.INKBESTID > 0 THEN DO:                  
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "Bestnr: ".
                  SUBSTRING(tidut.UT,10) =  STRING(brudeptmp.INKBESTID).
                  SUBSTRING(tidut.UT,19) = "Ordernr: ".
                  SUBSTRING(tidut.UT,30) =  brudeptmp.ORDERNUMMER .            
                  SUBSTRING(tidut.UT,63) = "Beställningsdatum: ".
                  SUBSTRING(tidut.UT,82) =  STRING(brudeptmp.BESTDATUM).                  
               END.                  
               ELSE IF brudeptmp.BESTNR > 0 THEN DO:                  
                  FIND DEPA WHERE DEPA.DEP-NR = brudeptmp.DEPNR NO-LOCK NO-ERROR.
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "Uttag: ".
                  SUBSTRING(tidut.UT,10) =  STRING(brudeptmp.BESTNR).
                  SUBSTRING(tidut.UT,19) = "Från depå: ".          
                  SUBSTRING(tidut.UT,30) =  DEPA.BENAMNING.                   
                  SUBSTRING(tidut.UT,63) = "Uttag datum: ".
                  SUBSTRING(tidut.UT,82) =  STRING(brudeptmp.BESTDATUM).
               END.
               ELSE IF brudeptmp.TRUMMANR > 0 THEN DO:                  
                  FIND DEPA WHERE DEPA.DEP-NR = brudeptmp.DEPNR NO-LOCK NO-ERROR.
                  CREATE tidut.
                  SUBSTRING(tidut.UT,1) = "Trumma: ".
                  SUBSTRING(tidut.UT,10) =   brudeptmp.TRUMMAPLATS  + "  " +   STRING(brudeptmp.TRUMMANR).                     
                  SUBSTRING(tidut.UT,19) = "Från depå: ".          
                  SUBSTRING(tidut.UT,30) =  DEPA.BENAMNING.                   
                  SUBSTRING(tidut.UT,63) = "Uttag datum: ".
                  SUBSTRING(tidut.UT,82) =  STRING(brudeptmp.BESTDATUM).                  
               END.   
            END.
            
            /*FOR EACH LAGERPLATSKOPP  WHERE LAGERPLATSKOPP.PROJDEPNR = pdpnr AND LAGERPLATSKOPP.LAGERPLATSI = vlplats AND LAGERPLATSKOPP.uttaget = FALSE USE-INDEX PROJDEPNR NO-LOCK:          
               IF LAGERPLATSKOPP.INKBESTID > 0 THEN DO:
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.INKBESTID = LAGERPLATSKOPP.INKBESTID NO-LOCK NO-ERROR.
                  IF AVAILABLE BESTDEPAO  THEN DO:
                     CREATE tidut.
                     SUBSTRING(tidut.UT,1) = "Bestnr: ".
                     SUBSTRING(tidut.UT,10) =  STRING(LAGERPLATSKOPP.INKBESTID).
                     SUBSTRING(tidut.UT,19) = "Ordernr: ".
                     SUBSTRING(tidut.UT,30) =  BESTDEPAO.ORDERNUMMER .            
                     SUBSTRING(tidut.UT,63) = "Beställningsdatum: ".
                     SUBSTRING(tidut.UT,82) =  STRING(BESTDEPAO.BESTDATUM).
                  END.
               END.                  
               ELSE IF LAGERPLATSKOPP.BESTNR > 0 THEN DO:
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = LAGERPLATSKOPP.PROJDEPNR AND BESTDEPAO.DEPNR = LAGERPLATSKOPP.DEPNR AND BESTDEPAO.BESTNR = LAGERPLATSKOPP.BESTNR NO-LOCK NO-ERROR.
                  IF AVAILABLE BESTDEPAO  THEN DO:
                     FIND DEPA WHERE DEPA.DEP-NR = LAGERPLATSKOPP.DEPNR NO-LOCK NO-ERROR.
                     CREATE tidut.
                     SUBSTRING(tidut.UT,1) = "Uttag: ".
                     SUBSTRING(tidut.UT,10) =  STRING(LAGERPLATSKOPP.BESTNR).
                     SUBSTRING(tidut.UT,19) = "Från depå: ".          
                     SUBSTRING(tidut.UT,30) =  DEPA.BENAMNING.                   
                     SUBSTRING(tidut.UT,63) = "Uttag datum: ".
                     SUBSTRING(tidut.UT,82) =  STRING(BESTDEPAO.BESTDATUM).
                     
                  END.
               END.
               ELSE IF LAGERPLATSKOPP.TRUMMANR > 0 THEN DO:
                  FIND FIRST BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = LAGERPLATSKOPP.PROJDEPNR AND  BESTDEPAO.DEPNR = LAGERPLATSKOPP.DEPNR AND BESTDEPAO.TRUMMANR = LAGERPLATSKOPP.TRUMMANR
                  AND BESTDEPAO.UTTAGET = FALSE NO-LOCK NO-ERROR.
                  
                  IF AVAILABLE BESTDEPAO  THEN DO:
                     FIND DEPA WHERE DEPA.DEP-NR = LAGERPLATSKOPP.DEPNR NO-LOCK NO-ERROR.
                     CREATE tidut.
                     SUBSTRING(tidut.UT,1) = "Trumma: ".
                     SUBSTRING(tidut.UT,10) =  STRING(LAGERPLATSKOPP.TRUMMANR).
                     
                     SUBSTRING(tidut.UT,19) = "Från depå: ".          
                     SUBSTRING(tidut.UT,30) =  DEPA.BENAMNING.                   
                     SUBSTRING(tidut.UT,63) = "Uttag datum: ".
                     SUBSTRING(tidut.UT,82) =  STRING(BESTDEPAO.BESTDATUM).
                     FIND FIRST TRUMMADEP WHERE TRUMMADEP.DEPNR = BESTDEPAO.DEPNR AND TRUMMADEP.TRUMMANR = BESTDEPAO.TRUMMANR NO-LOCK NO-ERROR.
                     IF AVAILABLE TRUMMADEP  THEN DO:
                        SUBSTRING(tidut.UT,10) =   TRUMMADEP.TRUMMAPLATS  + "  " +   STRING(LAGERPLATSKOPP.TRUMMANR).                                                
                     END.   
                  END.
               END.   
                     
            END.*/          
            CREATE tidut.
         END.        
                      
      END.   
   END.                    
END PROCEDURE.


PROCEDURE huvud12_UI :   
   DEFINE INPUT PARAMETER vaonr  AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER vdelnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER vort  AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER TABLE FOR skapa_mtrl.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   DO TRANSACTION:   
      
      IF musz = TRUE THEN musz = musz.   
      ELSE DO:
         IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "LULE"  OR Guru.Konstanter:globforetag = "SNAT" OR
         Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "KRAF" {GLOBVES.I} THEN DO:
            FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Depå:"
            SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
            CREATE tidut.
            SUBSTRING(tidut.UT,1) = "Specifikation av materiel för uttag".
            ASSIGN
            SUBSTRING(tidut.UT,40) = STRING(TODAY)
            SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
            CREATE tidut.                        
            FIND FIRST skapa_mtrl NO-LOCK NO-ERROR.
            IF AVAILABLE skapa_mtrl THEN DO:            
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Köpare"
               SUBSTRING(tidut.UT,30) = "Säljare".
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = skapa_mtrl.BESTNAMN
               SUBSTRING(tidut.UT,30) = skapa_mtrl.FORE. 
               CREATE tidut.    
               ASSIGN
               SUBSTRING(tidut.UT,1) = skapa_mtrl.ADR
               SUBSTRING(tidut.UT,30) = skapa_mtrl.KADR.
               IF skapa_mtrl.BOX NE "" THEN ASSIGN
               SUBSTRING(tidut.UT,55) = "BOX:"
               SUBSTRING(tidut.UT,60) = STRING(skapa_mtrl.BOX).    
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.PNR)
               SUBSTRING(tidut.UT,8) = skapa_mtrl.ORT
               SUBSTRING(tidut.UT,30) = STRING(skapa_mtrl.KPNR)
               SUBSTRING(tidut.UT,38) = skapa_mtrl.KORT.  
               CREATE tidut. 
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Referens"
               SUBSTRING(tidut.UT,30) = "Referens".
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = skapa_mtrl.KONTAKT
               SUBSTRING(tidut.UT,30) = skapa_mtrl.KIKONTAKT.
               CREATE tidut.
               ASSIGN                                       
               SUBSTRING(tidut.UT,1) = "Tele:"
               SUBSTRING(tidut.UT,6) = STRING(skapa_mtrl.TELE)
               SUBSTRING(tidut.UT,30) = "Tele:"
               SUBSTRING(tidut.UT,36) = STRING(skapa_mtrl.KITELE).
               IF skapa_mtrl.FAX NE "" THEN ASSIGN
               SUBSTRING(tidut.UT,50) = "Fax:"
               SUBSTRING(tidut.UT,56) = STRING(skapa_mtrl.FAX).                                                           
               CREATE tidut.
            END.            
            CREATE tidut.
            SUBSTRING(tidut.UT,1) = str.
            CREATE tidut.
            &Scoped-define FORMATNAMN vaonr
            {AOFORMAT2.I}
            CREATE tidut.            
            ASSIGN                                                               
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok) + ": " + formataonr + " " + 
            "DELNR: " + STRING(vdelnr,Guru.Konstanter:varforetypchar[1]).
            CREATE tidut.
            ASSIGN                                                               
            SUBSTRING(tidut.UT,1) = Guru.Konstanter:gaonamnk + ": " + vort.               
            CREATE tidut. 
            CREATE tidut. 
            IF AVAILABLE skapa_mtrl THEN DO:            
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Uttagsdatum:"
               SUBSTRING(tidut.UT,13) = STRING(skapa_mtrl.DATUM,"9999/99/99") + " TILL " + STRING(skapa_mtrl.DATUM2,"9999/99/99").
               CREATE tidut.  
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Kommentarer:"
               SUBSTRING(tidut.UT,13) = STRING(skapa_mtrl.KOM).                          
               CREATE tidut.         
            END.
            SUBSTRING(tidut.UT,1) = str.
            CREATE tidut.
            CREATE tidut.
         END.
         ELSE DO:         
            FIND DEPA WHERE DEPA.DEP-NR = dpnr NO-LOCK NO-ERROR.                   
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Depå"
            SUBSTRING(tidut.UT,6) = DEPA.BENAMNING.
            CREATE tidut.
            CREATE tidut. 
            ASSIGN        
            SUBSTRING(tidut.UT,1) = "Specifikation av materiel för uttag"         
            SUBSTRING(tidut.UT,47) = STRING(TODAY)
            SUBSTRING(tidut.UT,57) = STRING(TIME,"HH:MM:SS").                                                                       
            CREATE tidut.                 
            ASSIGN                                                               
            SUBSTRING(tidut.UT,1) = Guru.Konstanter:gaonamnk + ": " + vort.
            CREATE tidut.  
            ASSIGN                                                               
            SUBSTRING(tidut.UT,1) = "AO-nummer: " + vaonr + " " + 
            "Delnr: " + STRING(vdelnr,Guru.Konstanter:varforetypchar[1]).   
            CREATE tidut.      
         END.   
      END.
   END.                    
                
END PROCEDURE.


PROCEDURE klar_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
   AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.ENR. 
   GET FIRST mtrlq NO-LOCK.
   DO WHILE AVAILABLE(MTRLDEP):    
      CREATE tidut.      
      ASSIGN
      SUBSTRING(tidut.UT,1) = MTRLDEP.ENR      
      SUBSTRING(tidut.UT,13) = SUBSTRING(MTRLDEP.BENAMNING,1,30) 
      antal = 44.
      FOR EACH valdlev NO-LOCK BY valdlev.LEVKOD.
         FIND FIRST MTRL WHERE MTRL.LEVKOD = valdlev.LEVKOD AND MTRL.ENR = MTRLDEP.ENR
         AND MTRL.KALKNR = 0 USE-INDEX LEV NO-LOCK NO-ERROR.
         IF AVAILABLE MTRL THEN DO:                       
            ASSIGN
            SUBSTRING(tidut.UT,antal) = STRING(MTRL.NPRIS)                                  
            antal = antal + 11.
         END.
         ELSE DO:
            antal = antal + 11.
         END.
      END. 
      GET NEXT mtrlq NO-LOCK.         
   END. 
   CLOSE QUERY mtrlq.                            
END PROCEDURE.


/*PROCEDURE klar2_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   deltot = 0.
   FOR EACH slutsum BY slutsum.SUMMA DESCENDING:
      deltot = deltot + slutsum.SUMMA.
      IF deltot / totalt >= 0.78 THEN DO:
         ASSIGN
         spara = deltot / totalt      
         spara2 = deltot.
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = slutsum.ENR      
         SUBSTRING(tidut.UT,13) = SUBSTRING(slutsum.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,62) = STRING(slutsum.SUMMA,">>>>>>9").
         CREATE tidut.
         SUBSTRING(tidut.UT,62) = "==========".
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,44) = STRING((deltot / totalt) * 100,">99")
         SUBSTRING(tidut.UT,48) = "% AV OMSÄTT."
         SUBSTRING(tidut.UT,62) = STRING(deltot,">>>>>>9")
         deltot = 0. 
         CREATE tidut.
         CREATE tidut.
      END.
      ELSE DO:
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = slutsum.ENR      
         SUBSTRING(tidut.UT,13) = SUBSTRING(slutsum.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,62) = STRING(slutsum.SUMMA,">>>>>>9"). 
      END.
   END. 
   CREATE tidut.
   SUBSTRING(tidut.UT,62) = "==========".
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,44) = STRING((1 - spara) * 100,">99")
   SUBSTRING(tidut.UT,48) = "% AV OMSÄTT."
   SUBSTRING(tidut.UT,62) = STRING(totalt - spara2,">>>>>>9").
   CREATE tidut. 
   SUBSTRING(tidut.UT,62) = "==========".
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,44) = "TOTAL OMSÄTT."
   SUBSTRING(tidut.UT,62) = STRING(totalt,">>>>>>9").
                        
END PROCEDURE.*/

/*PROCEDURE klar3_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   IF sterat = 1 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.FACKID.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE DO:
            ingaende = 0.
         END.
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE DO:
            inkop = 0.
         END.                   
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,10) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.          
      END.
      CLOSE QUERY mtrlq. 
   END.                                              
   IF sterat = 2 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.ENR.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE DO:
            ingaende = 0.
         END.
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE DO:
            inkop = 0.
         END.                                           
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,13) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.               
      END. 
      CLOSE QUERY mtrlq. 
   END.                                             
   IF sterat = 3 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.BENAMNING.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):
         FIND FIRST inbal WHERE inbal.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE inbal THEN DO:
            ingaende = inbal.IB.
            DELETE inbal.
         END.   
         ELSE DO:
            ingaende = 0.
         END.
         FIND FIRST slutsum2 WHERE slutsum2.ENR = MTRLDEP.ENR NO-ERROR.
         IF AVAILABLE slutsum2 THEN DO:
            inkop = slutsum2.ANTAL.
            DELETE slutsum2.
         END.
         ELSE DO:
            inkop = 0.
         END.                            
         CREATE tidut.      
         ASSIGN                              
         SUBSTRING(tidut.UT,1) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                    
         SUBSTRING(tidut.UT,32) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,41) = MTRLDEP.ENR               
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING((ingaende + inkop) - MTRLDEP.INVANT)
         SUBSTRING(tidut.UT,68) = STRING(inkop).
         GET NEXT mtrlq NO-LOCK.              
      END. 
      CLOSE QUERY mtrlq. 
   END.                            
END PROCEDURE.*/


PROCEDURE klar4_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   totalt = 0.   
   IF sterat = 1 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.FACKID.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):           
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,10) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET.
         IF listnr = 5 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.INVANT)
            SUBSTRING(tidut.UT,65) = STRING((MTRLDEP.INVANT * MTRLDEP.NPRIS),"->>>>>9.99")
            totalt = totalt + (MTRLDEP.INVANT * MTRLDEP.NPRIS).
         END.
         IF listnr = 6 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            SUBSTRING(tidut.UT,65) = STRING(((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS,"->>>>>9.99")
            totalt = totalt + ((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS. 
         END.
         GET NEXT mtrlq NO-LOCK.            
      END. 
      CLOSE QUERY mtrlq. 
   END.                                              
   IF sterat = 2 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.ENR.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):                         
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,13) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET.
         IF listnr = 5 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.INVANT)
            SUBSTRING(tidut.UT,65) = STRING((MTRLDEP.INVANT * MTRLDEP.NPRIS),"->>>>>9.99")
            totalt = totalt + (MTRLDEP.INVANT * MTRLDEP.NPRIS).
         END.
         IF listnr = 6 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            SUBSTRING(tidut.UT,65) = STRING(((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS,"->>>>>9.99")
            totalt = totalt + ((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS. 
         END.
         
         GET NEXT mtrlq NO-LOCK.         
      END. 
      CLOSE QUERY mtrlq.
   END.                                             
   IF sterat = 3 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.BENAMNING. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):        
         CREATE tidut.      
         ASSIGN                              
         SUBSTRING(tidut.UT,1) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                    
         SUBSTRING(tidut.UT,32) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,41) = MTRLDEP.ENR               
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET.
         IF listnr = 5 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.INVANT)
            SUBSTRING(tidut.UT,65) = STRING((MTRLDEP.INVANT * MTRLDEP.NPRIS),"->>>>>9.99")
            totalt = totalt + (MTRLDEP.INVANT * MTRLDEP.NPRIS).
         END.
         IF listnr = 6 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            SUBSTRING(tidut.UT,65) = STRING(((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS,"->>>>>9.99")
            totalt = totalt + ((MTRLDEP.BESTKVANT / 2) + MTRLDEP.BESTPUNKT)
            * MTRLDEP.NPRIS. 
         END.         
         GET NEXT mtrlq NO-LOCK.          
      END. 
      CLOSE QUERY mtrlq.
   END.  
   CREATE tidut.
   CREATE tidut.     
   str=                                                                    
"===============================================================.===========". 
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.           
   ASSIGN
   SUBSTRING(tidut.UT,59) = "SUMMA:" 
   SUBSTRING(tidut.UT,65) = STRING(totalt,"->>>>>9.99").                          
END PROCEDURE.


PROCEDURE klar5_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF sterat = 1 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.FACKID.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP): 
         mini = SQRT(((MTRLDEP.NPRIS * MTRLDEP.OMSATT * tret) / 
         ((kkyl + frod) * MTRLDEP.NPRIS))).          
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,10) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.BESTKVANT)
         SUBSTRING(tidut.UT,65) = STRING(mini,">>>>9"). 
         GET NEXT mtrlq NO-LOCK.         
      END. 
      CLOSE QUERY mtrlq.
   END.                                              
   IF sterat = 2 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.ENR.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP):  
         IF MTRLDEP.NPRIS > 0  THEN
         mini = SQRT(((MTRLDEP.NPRIS * MTRLDEP.OMSATT * tret) / 
         ((kkyl + frod) * MTRLDEP.NPRIS))).                     
         ELSE mini = 0.
         CREATE tidut.      
         ASSIGN         
         SUBSTRING(tidut.UT,1) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,13) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,22) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.BESTKVANT)         
         SUBSTRING(tidut.UT,65) = STRING(mini,">>>>9").
         GET NEXT mtrlq NO-LOCK.        
      END. 
      CLOSE QUERY mtrlq.
   END.                                             
   IF sterat = 3 THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
      AND MTRLDEP.IBDATUM = ? NO-LOCK BY MTRLDEP.BENAMNING.
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLDEP): 
         mini = SQRT(((MTRLDEP.NPRIS * MTRLDEP.OMSATT * tret) / 
         ((kkyl + frod) * MTRLDEP.NPRIS))).                                   
         CREATE tidut.      
         ASSIGN                              
         SUBSTRING(tidut.UT,1) = SUBSTRING(MTRLDEP.BENAMNING,1,30)                    
         SUBSTRING(tidut.UT,32) = MTRLDEP.FACKID  
         SUBSTRING(tidut.UT,41) = MTRLDEP.ENR               
         SUBSTRING(tidut.UT,53) = MTRLDEP.ENHET
         SUBSTRING(tidut.UT,59) = STRING(MTRLDEP.BESTKVANT)
         SUBSTRING(tidut.UT,65) = STRING(mini,">>>>9").
         GET NEXT mtrlq NO-LOCK.         
      END.                                             
      CLOSE QUERY mtrlq.
   END.                            
END PROCEDURE.


PROCEDURE klar6_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   CREATE tidut. 
   OPEN QUERY utq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr AND
   MTRLDEP.LAGER = TRUE USE-INDEX ENR
   NO-LOCK.
   GET FIRST utq NO-LOCK.
   DO WHILE AVAILABLE(MTRLDEP): 
      IF MTRLDEP.SALDO < MTRLDEP.BESTPUNKT THEN DO:             
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = MTRLDEP.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(MTRLDEP.BENAMNING,1,30)              
         SUBSTRING(tidut.UT,44) = MTRLDEP.ENHET    
         SUBSTRING(tidut.UT,50) = STRING(MTRLDEP.BESTPUNKT)
         SUBSTRING(tidut.UT,57) = STRING(MTRLDEP.SALDO).
         musz = FALSE.          
         OPEN QUERY bestq FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND
         BESTDEP.LEVDATUM = ? AND BESTDEP.ENR = MTRLDEP.ENR AND BESTDEP.BERED = FALSE AND 
         BESTDEP.BERED = FALSE AND BESTDEP.LEVNAMN = "" NO-LOCK BY BESTDEP.BESTDATUM.
         GET FIRST bestq NO-LOCK.
         DO WHILE AVAILABLE(BESTDEP):   
            IF musz = FALSE THEN DO:
               ASSIGN       
               SUBSTRING(tidut.UT,64) = STRING(BESTDEP.ANTAL,">>>>9")
               SUBSTRING(tidut.UT,70) = STRING(BESTDEP.BESTDATUM)
               musz = TRUE.
            END.
            ELSE DO:   
               CREATE tidut.  
               ASSIGN       
               SUBSTRING(tidut.UT,64) = STRING(BESTDEP.ANTAL,">>>>9")
               SUBSTRING(tidut.UT,70) = STRING(BESTDEP.BESTDATUM).
            END.                                 
            GET NEXT bestq NO-LOCK.
         END.
         CLOSE QUERY bestq.
         musz = FALSE.
      END.   
      GET NEXT utq NO-LOCK.
   END.                    
   CLOSE QUERY utq.  
    str=
"=============================================================================".         
   CREATE tidut.      
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.                        
END PROCEDURE.


PROCEDURE klar7_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   totalt = 0. 
   EMPTY TEMP-TABLE tmp_ut NO-ERROR.
   
   OPEN QUERY mtrlq FOR EACH MTRLDEP WHERE MTRLDEP.DEPNR = dpnr 
   AND MTRLDEP.IBDATUM = ? USE-INDEX ENR NO-LOCK.
   GET FIRST mtrlq NO-LOCK.
   DO WHILE AVAILABLE(MTRLDEP):                         
      CREATE tmp_ut.
      BUFFER-COPY MTRLDEP TO tmp_ut.            
      GET NEXT mtrlq NO-LOCK.              
   END. 
   CLOSE QUERY mtrlq.   
   /*FIFO*/
   FIND FIRST FORETAG NO-LOCK NO-ERROR.
   /*IF FORETAG.FORETAG = "ELPA" OR FORETAG.FORETAG = "LULE" OR FORETAG.FORETAG = "BODE" THEN DO:*/
   IF Guru.Konstanter:varforetypval[54] = 1 THEN DO:
      RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
      FOR EACH tmp_ut:      
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
         EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "FIFO"                                  
         inextradatatemp.HUVUDINT =  dpnr
         inextradatatemp.HUVUDCH =  tmp_ut.ENR.                    
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         ASSIGN
         totpris = 0
         totant = 0.
         FOR EACH extradatatemp:
            
            ASSIGN
            totpris = totpris + (extradatatemp.SOKDEC[1] * extradatatemp.SOKINT[1])
            totant = totant + extradatatemp.SOKINT[1].
         END.
         
         FIND FIRST extradatatemp NO-LOCK NO-ERROR.
         IF AVAILABLE extradatatemp THEN DO: 
            IF totpris > 0 AND totant > 0  THEN tmp_ut.NPRIS = totpris / totant.            
            ELSE tmp_ut.NPRIS = 0.
         END.
      END.
      IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph. 
      edataapph = ?.
   END.
   FOR EACH tmp_ut USE-INDEX ENR:                         
      CREATE tidut.      
      ASSIGN         
      SUBSTRING(tidut.UT,1) = tmp_ut.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(tmp_ut.BENAMNING,1,30)                             
      SUBSTRING(tidut.UT,44) = tmp_ut.ENHET
      SUBSTRING(tidut.UT,50) = STRING(tmp_ut.SALDO)
      SUBSTRING(tidut.UT,56) = STRING(tmp_ut.SALDO * tmp_ut.NPRIS,"->>>>>9.99")
      totalt = totalt + (tmp_ut.SALDO * tmp_ut.NPRIS).      
   END.    
   CREATE tidut.
   CREATE tidut.     
   str=                                                                    
"======================================================.===========". 
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.           
   ASSIGN
   SUBSTRING(tidut.UT,50) = "SUMMA:" 
   SUBSTRING(tidut.UT,60) = STRING(totalt,"->>>>>>>9.99").
                    
END PROCEDURE.


PROCEDURE klar8_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   str2 = 
"=================================================================================================================================". 
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = str2.
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = "ÖKADE SALDON".
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str2.
   RUN rubrik10_UI.
   CREATE tidut.  
   totalt = 0.
   /*OPEN QUERY utq FOR EACH BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = FALSE AND BERBEST.DEPNR = dpnr USE-INDEX LISTA
   NO-LOCK.*/
   OPEN QUERY utq FOR EACH BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = FALSE AND BERBEST.DEPNR = dpnr
   AND (BERBEST.LEVDATUM >= hjavdat AND BERBEST.LEVDATUM <= hjbdat) NO-LOCK BY BERBEST.LEVDATUM DESCENDING BY BERBEST.ENR.
   GET FIRST utq NO-LOCK.
   DO WHILE AVAILABLE(BERBEST):              
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = BERBEST.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(BERBEST.BENAMNING,1,25)  
      SUBSTRING(tidut.UT,39) = SUBSTRING(BERBEST.BESTALLARE,1,10) 
      SUBSTRING(tidut.UT,50) = STRING(BERBEST.LEVDATUM)               
      SUBSTRING(tidut.UT,59) = STRING(BERBEST.PRIS,"->>>>>.99")
      SUBSTRING(tidut.UT,69) = BERBEST.ENHET    
      SUBSTRING(tidut.UT,75) = STRING(BERBEST.ANTAL,">>>>9")
      SUBSTRING(tidut.UT,81) = STRING(BERBEST.PRIS * BERBEST.ANTAL,"->>>>>>.99")
      SUBSTRING(tidut.UT,92) = SUBSTRING(BERBEST.BENAMNING,60) 
      totalt = totalt + (BERBEST.PRIS * BERBEST.ANTAL). 
      GET NEXT utq NO-LOCK.
   END.                    
   CLOSE QUERY utq.  
    str=
"================================================================================.=========.======================================".         
   CREATE tidut.      
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.
   CREATE tidut.         
   SUBSTRING(tidut.UT,65) = "SUMMA ÖKADE:".
   CREATE tidut.         
   SUBSTRING(tidut.UT,78) = STRING(totalt,"->>>>>>>>>.99").
   CREATE tidut.         
   SUBSTRING(tidut.UT,78) = "=============".                          
END PROCEDURE.


PROCEDURE klar9_UI :   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   str2 = 
"=================================================================================================================================". 
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = str2.
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = "MINSKADE SALDON".
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str2.
   RUN rubrik10_UI.
   CREATE tidut.  
   totalt = 0.
   /*OPEN QUERY utq FOR EACH BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = TRUE AND BERBEST.DEPNR = dpnr USE-INDEX LISTA
   NO-LOCK.*/
   OPEN QUERY utq FOR EACH BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = TRUE AND BERBEST.DEPNR = dpnr 
   AND (BERBEST.LEVDATUM >= hjavdat AND BERBEST.LEVDATUM <= hjbdat) NO-LOCK BY BERBEST.LEVDATUM DESCENDING BY BERBEST.ENR.
   GET FIRST utq NO-LOCK.
   DO WHILE AVAILABLE(BERBEST):              
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = BERBEST.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(BERBEST.BENAMNING,1,25) 
      SUBSTRING(tidut.UT,39) = SUBSTRING(BERBEST.BESTALLARE,1,10)   
      SUBSTRING(tidut.UT,50) = STRING(BERBEST.LEVDATUM)       
      SUBSTRING(tidut.UT,59) = STRING(BERBEST.PRIS,"->>>>>.99")
      SUBSTRING(tidut.UT,69) = BERBEST.ENHET    
      SUBSTRING(tidut.UT,75) = STRING(BERBEST.ANTAL,">>>>9")
      SUBSTRING(tidut.UT,81) = STRING(BERBEST.PRIS * BERBEST.ANTAL,"->>>>>>.99")
      SUBSTRING(tidut.UT,92) = SUBSTRING(BERBEST.BENAMNING,60) 
      totalt = totalt + (BERBEST.PRIS * BERBEST.ANTAL). 
      GET NEXT utq NO-LOCK.
   END.                    
   CLOSE QUERY utq.  
    str=
"================================================================================.=========.======================================".         
   CREATE tidut.      
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.
   CREATE tidut.         
   SUBSTRING(tidut.UT,62) = "SUMMA MINSKADE:".
   CREATE tidut.         
   SUBSTRING(tidut.UT,78) = STRING(totalt,"->>>>>>>>>.99").
   CREATE tidut.         
   SUBSTRING(tidut.UT,78) = "=============".                          
END PROCEDURE.


PROCEDURE klar11_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   IF sterat = 1 THEN DO:
      CREATE tidut.        
      OPEN QUERY bestq FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND BESTDEP.BESTNR = tret
      AND BESTDEP.LEVKOD = leverantorkod AND BESTDEP.LEVDATUM = ?  NO-LOCK.
      GET FIRST bestq NO-LOCK.
      DO WHILE AVAILABLE(BESTDEP):                            
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = BESTDEP.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEP.BENAMNING,1,40)                           
         SUBSTRING(tidut.UT,64) = BESTDEP.ENHET    
         SUBSTRING(tidut.UT,70) = STRING(BESTDEP.ANTAL,">>>>9").         
         totalt = totalt + BESTDEP.PRIS * BESTDEP.ANTAL.
         IF msek6 = FALSE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,54) = STRING(BESTDEP.PRIS,">>>>99.99")
            SUBSTRING(tidut.UT,76) = STRING(BESTDEP.PRIS * BESTDEP.ANTAL,">>>>>9").
         END.
         GET NEXT bestq NO-LOCK.
      END.         
   END.
   ELSE DO:
      CREATE tidut. 
      OPEN QUERY bestq FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND BESTDEP.BESTNR = tret
      AND BESTDEP.LEVDATUM NE ? NO-LOCK BY BESTDEP.LEVKOD BY BESTDEP.ENR.
      GET FIRST bestq NO-LOCK. 
      DO WHILE AVAILABLE(BESTDEP):   
         FIND FIRST  LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEP.LEVKOD 
         USE-INDEX LEV NO-LOCK NO-ERROR.                
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = BESTDEP.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEP.BENAMNING,1,25).
         IF BESTDEP.BERED = FALSE THEN         
         SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10).
         ELSE SUBSTRING(tidut.UT,39) = "RETUR".
         ASSIGN
         SUBSTRING(tidut.UT,50) = STRING(BESTDEP.LEVDATUM)                   
         SUBSTRING(tidut.UT,69) = BESTDEP.ENHET    
         SUBSTRING(tidut.UT,75) = STRING(BESTDEP.ANTAL,">>>>9").         
         totalt = totalt + BESTDEP.PRIS * BESTDEP.ANTAL.  
         IF msek6 = FALSE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING(BESTDEP.PRIS,">>>>99.99")
            SUBSTRING(tidut.UT,81) = STRING(BESTDEP.PRIS * BESTDEP.ANTAL,">>>>>9").
         END.
         GET NEXT bestq NO-LOCK.
      END.         
   END.                                         
END PROCEDURE.

PROCEDURE klar31_UI :
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.   
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   
   IF utg = FALSE THEN DO:
      
      IF sterat = 1 THEN DO:
           
         CREATE tidut.        
         OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.INKBESTID = tret
         /*AND BESTDEPAO.LEVKOD = leverantorkod*/ AND BESTDEPAO.LEVDATUM = ?  
         AND BESTDEPAO.UTTAGET = FALSE  NO-LOCK BY BESTDEPAO.ENR.
         GET FIRST bestq NO-LOCK.
         DO WHILE AVAILABLE(BESTDEPAO):                            
            CREATE tidut.      
            ASSIGN  
            SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
            SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,40)                           
            SUBSTRING(tidut.UT,64) = BESTDEPAO.ENHET    
            SUBSTRING(tidut.UT,70) = STRING(BESTDEPAO.ANTAL,">>>>9").         
            totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.
            IF msek6 = FALSE THEN DO:
               ASSIGN
               SUBSTRING(tidut.UT,54) = STRING(BESTDEPAO.PRIS,">>>>99.99")
               SUBSTRING(tidut.UT,76) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
            END.
            GET NEXT bestq NO-LOCK.
         END.         
      END.
      ELSE IF  sterat = 2 THEN DO:
         CREATE tidut. 
         OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND  BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.INKBESTID = tret
         AND BESTDEPAO.LEVDATUM NE ? NO-LOCK BY BESTDEPAO.LEVKOD BY BESTDEPAO.ENR.
         GET FIRST bestq NO-LOCK. 
         DO WHILE AVAILABLE(BESTDEPAO):   
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEPAO.LEVKOD 
            USE-INDEX LEV NO-LOCK NO-ERROR.                
            CREATE tidut.      
            ASSIGN  
            SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
            SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,25).
            IF BESTDEPAO.BERED = FALSE THEN         
            SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10).
            ELSE SUBSTRING(tidut.UT,39) = "RETUR".
            ASSIGN
            SUBSTRING(tidut.UT,50) = STRING(BESTDEPAO.LEVDATUM)                   
            SUBSTRING(tidut.UT,69) = BESTDEPAO.ENHET    
            SUBSTRING(tidut.UT,75) = STRING(BESTDEPAO.ANTAL,">>>>9").         
            totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.  
            IF msek6 = FALSE THEN DO:
               ASSIGN
               SUBSTRING(tidut.UT,59) = STRING(BESTDEPAO.PRIS,">>>>99.99")
               SUBSTRING(tidut.UT,81) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
            END.
            GET NEXT bestq NO-LOCK.
         END.         
      END.
      ELSE DO:
         
         /*oavsett om det är mottagen eller ej*/
         CREATE tidut. 
         OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND  BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.INKBESTID = tret
         /*AND BESTDEPAO.LEVDATUM NE ?*/ NO-LOCK BY BESTDEPAO.LEVKOD BY BESTDEPAO.ENR.
         GET FIRST bestq NO-LOCK. 
         DO WHILE AVAILABLE(BESTDEPAO):   
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEPAO.LEVKOD 
            USE-INDEX LEV NO-LOCK NO-ERROR.                
            CREATE tidut.      
            ASSIGN  
            SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
            SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,25).
            IF BESTDEPAO.BERED = FALSE THEN         
            SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10).
            ELSE SUBSTRING(tidut.UT,39) = "RETUR".
            
            IF BESTDEPAO.LEVDATUM NE ? THEN SUBSTRING(tidut.UT,50) = STRING(BESTDEPAO.LEVDATUM).
            ASSIGN                    
            SUBSTRING(tidut.UT,69) = BESTDEPAO.ENHET    
            SUBSTRING(tidut.UT,75) = STRING(BESTDEPAO.ANTAL,">>>>9").         
            totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.  
            IF msek6 = FALSE THEN DO:
               ASSIGN
               SUBSTRING(tidut.UT,59) = STRING(BESTDEPAO.PRIS,">>>>99.99")
               SUBSTRING(tidut.UT,81) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
            END.
            GET NEXT bestq NO-LOCK.
         END.         
      END.
   END.
   ELSE IF utg = TRUE THEN DO:
      CREATE tidut. 
      OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.BESTNR = tret
      /*AND BESTDEPAO.LEVDATUM NE ?*/ NO-LOCK BY BESTDEPAO.LEVKOD BY BESTDEPAO.ENR.
      GET FIRST bestq NO-LOCK. 
      DO WHILE AVAILABLE(BESTDEPAO):   
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEPAO.LEVKOD 
         USE-INDEX LEV NO-LOCK NO-ERROR.                
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,25)                 
         SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10)                                     
         SUBSTRING(tidut.UT,69) = BESTDEPAO.ENHET    
         SUBSTRING(tidut.UT,75) = STRING(BESTDEPAO.ANTAL,">>>>9").
         IF BESTDEPAO.LEVDATUM NE ? THEN  SUBSTRING(tidut.UT,50) = STRING(BESTDEPAO.LEVDATUM).         
         totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.  
         IF msek6 = FALSE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,59) = STRING(BESTDEPAO.PRIS,">>>>99.99")
            SUBSTRING(tidut.UT,81) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
         END.
         GET NEXT bestq NO-LOCK.
      END. 
   END.
   ELSE IF utg = ? THEN DO:
      /*IF sterat = 1 THEN DO:*/         
         CREATE tidut. 
         OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.TRUMMANR = tret
         AND BESTDEPAO.UTTAGET = FALSE /*AND BESTDEPAO.LEVDATUM NE ?*/ NO-LOCK BY BESTDEPAO.LEVKOD BY BESTDEPAO.ENR.
         GET FIRST bestq NO-LOCK. 
         DO WHILE AVAILABLE(BESTDEPAO):   
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEPAO.LEVKOD 
            USE-INDEX LEV NO-LOCK NO-ERROR.                
            CREATE tidut.      
            ASSIGN  
            SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
            SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,25)                 
            SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10)                                     
            SUBSTRING(tidut.UT,69) = BESTDEPAO.ENHET    
            SUBSTRING(tidut.UT,75) = STRING(BESTDEPAO.ANTAL,">>>>9").
            IF BESTDEPAO.LEVDATUM NE ? THEN  SUBSTRING(tidut.UT,50) = STRING(BESTDEPAO.LEVDATUM).         
            totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.  
            IF msek6 = FALSE THEN DO:
               ASSIGN
               SUBSTRING(tidut.UT,59) = STRING(BESTDEPAO.PRIS,">>>>99.99")
               SUBSTRING(tidut.UT,81) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
            END.
            GET NEXT bestq NO-LOCK.
         END.
      /*END.      
      ELSE  DO:
      
         CREATE tidut. 
         OPEN QUERY bestq FOR EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND BESTDEPAO.DEPNR = vdpnr AND BESTDEPAO.TRUMMANR = tret
          /*AND BESTDEPAO.LEVDATUM NE ?*/ NO-LOCK BY BESTDEPAO.LEVKOD BY BESTDEPAO.ENR.
         GET FIRST bestq NO-LOCK. 
         DO WHILE AVAILABLE(BESTDEPAO):   
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = BESTDEPAO.LEVKOD 
            USE-INDEX LEV NO-LOCK NO-ERROR.                
            CREATE tidut.      
            ASSIGN  
            SUBSTRING(tidut.UT,1) = BESTDEPAO.ENR
            SUBSTRING(tidut.UT,13) = SUBSTRING(BESTDEPAO.BENAMNING,1,25)                 
            SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10)                                     
            SUBSTRING(tidut.UT,69) = BESTDEPAO.ENHET    
            SUBSTRING(tidut.UT,75) = STRING(BESTDEPAO.ANTAL,">>>>9").
            IF BESTDEPAO.LEVDATUM NE ? THEN  SUBSTRING(tidut.UT,50) = STRING(BESTDEPAO.LEVDATUM).         
            totalt = totalt + BESTDEPAO.PRIS * BESTDEPAO.ANTAL.  
            IF msek6 = FALSE THEN DO:
               ASSIGN
               SUBSTRING(tidut.UT,59) = STRING(BESTDEPAO.PRIS,">>>>99.99")
               SUBSTRING(tidut.UT,81) = STRING(BESTDEPAO.PRIS * BESTDEPAO.ANTAL,">>>>>9").
            END.
            GET NEXT bestq NO-LOCK.
         END.
      END.   */    
   END.                                               
                                                  
END PROCEDURE.

PROCEDURE klar32_UI : 
   DEFINE INPUT PARAMETER vlplats AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.  
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DEBUGGER:SET-BREAK().
   
   EMPTY TEMP-TABLE bdeptmp NO-ERROR.       
   OPEN QUERY bestq FOR EACH LAGERPLATSKOPP WHERE LAGERPLATSKOPP.PROJDEPNR = pdpnr AND LAGERPLATSKOPP.LAGERPLATSI = vlplats 
   AND LAGERPLATSKOPP.UTTAGET = FALSE USE-INDEX PROJDEPNR  NO-LOCK, 
   EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND  BESTDEPAO.DEPNR = LAGERPLATSKOPP.DEPNR AND BESTDEPAO.LAGERPLATSI = LAGERPLATSKOPP.LAGERPLATSI 
   AND BESTDEPAO.INKBESTID = LAGERPLATSKOPP.INKBESTID AND BESTDEPAO.BESTNR = LAGERPLATSKOPP.BESTNR AND BESTDEPAO.TRUMMANR = LAGERPLATSKOPP.TRUMMANR
   AND BESTDEPAO.UTTAGET = FALSE NO-LOCK.
   GET FIRST bestq NO-LOCK.
   DO WHILE AVAILABLE(BESTDEPAO):
      IF LAGERPLATSKOPP.INKBESTID > 0 OR LAGERPLATSKOPP.BESTNR > 0 OR LAGERPLATSKOPP.TRUMMANR > 0  THEN DO:
         IF LAGERPLATSKOPP.TRUMMANR > 0 AND BESTDEPAO.UTTAGET = TRUE THEN.
         ELSE DO:
            CREATE bdeptmp.
            BUFFER-COPY BESTDEPAO TO bdeptmp.
         END.   
      END.                                  
      GET NEXT bestq NO-LOCK.
   END. 
   CREATE tidut.
   FOR EACH bdeptmp  USE-INDEX INKOP NO-LOCK:
      FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = bdeptmp.LEVKOD USE-INDEX LEV NO-LOCK NO-ERROR.                
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = bdeptmp.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(bdeptmp.BENAMNING,1,25)                                 
      SUBSTRING(tidut.UT,39) = STRING(bdeptmp.BESTDATUM).
      IF bdeptmp.LEVDATUM NE ? THEN 
      SUBSTRING(tidut.UT,50) = STRING(bdeptmp.LEVDATUM).  
      ASSIGN                  
      SUBSTRING(tidut.UT,69) = bdeptmp.ENHET    
      SUBSTRING(tidut.UT,75) = STRING(bdeptmp.ANTAL,">>>>9").         
      totalt = totalt + bdeptmp.PRIS * bdeptmp.ANTAL.  
      IF msek6 = FALSE THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,59) = STRING(bdeptmp.PRIS,">>>>99.99")
         SUBSTRING(tidut.UT,81) = STRING(bdeptmp.PRIS * bdeptmp.ANTAL,">>>>>9").
      END.
      SUBSTRING(tidut.UT,90) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10).
      IF bdeptmp.INKBESTID > 0 THEN DO:
         ASSIGN         
         SUBSTRING(tidut.UT,101) = STRING(bdeptmp.INKBESTID)
         SUBSTRING(tidut.UT,112) = bdeptmp.ORDERNUMMER.
         SUBSTRING(tidut.UT,128) = STRING(bdeptmp.REST,"Ja/Nej").
      END.   
      ELSE IF bdeptmp.BESTNR > 0 THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,101) = STRING(bdeptmp.BESTNR)
         SUBSTRING(tidut.UT,112) = "UTTAG".
      END.
      ELSE IF bdeptmp.TRUMMANR > 0 THEN DO:
         /*ASSIGN
         SUBSTRING(tidut.UT,101) = STRING(bdeptmp.TRUMMANR)*/
         FIND FIRST TRUMMADEP WHERE TRUMMADEP.DEPNR = bdeptmp.DEPNR AND TRUMMADEP.TRUMMANR = bdeptmp.TRUMMANR NO-LOCK NO-ERROR.
         IF AVAILABLE TRUMMADEP  THEN DO:                  
            SUBSTRING(tidut.UT,101) = TRUMMADEP.TRUMMAPLATS.
         END.   
         SUBSTRING(tidut.UT,112) = "TRUMMA".
      END.   
   END.
   
      
              
              
                                         
END PROCEDURE.


PROCEDURE klar33_UI :  
   DEFINE INPUT PARAMETER vlplats AS INTEGER NO-UNDO. 
   DEFINE INPUT PARAMETER vdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER pdpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   DEBUGGER:SET-BREAK().
   EMPTY TEMP-TABLE bdeptmp2 NO-ERROR. 
   EMPTY TEMP-TABLE bdeptmp NO-ERROR.
      
   CREATE tidut.
   
   OPEN QUERY bestq FOR EACH LAGERPLATSKOPP WHERE LAGERPLATSKOPP.PROJDEPNR = pdpnr AND LAGERPLATSKOPP.LAGERPLATSI = vlplats AND LAGERPLATSKOPP.UTTAGET = FALSE USE-INDEX PROJDEPNR  NO-LOCK, 
   EACH BESTDEPAO WHERE BESTDEPAO.PROJDEPNR = pdpnr AND  BESTDEPAO.DEPNR = LAGERPLATSKOPP.DEPNR AND BESTDEPAO.LAGERPLATSI = LAGERPLATSKOPP.LAGERPLATSI 
   AND BESTDEPAO.INKBESTID = LAGERPLATSKOPP.INKBESTID AND BESTDEPAO.BESTNR = LAGERPLATSKOPP.BESTNR AND BESTDEPAO.TRUMMANR = LAGERPLATSKOPP.TRUMMANR
   AND BESTDEPAO.UTTAGET = FALSE  NO-LOCK.
   GET FIRST bestq NO-LOCK.
   DO WHILE AVAILABLE(BESTDEPAO):
      IF LAGERPLATSKOPP.INKBESTID > 0 OR LAGERPLATSKOPP.BESTNR > 0 OR LAGERPLATSKOPP.TRUMMANR > 0  THEN DO:
         IF LAGERPLATSKOPP.TRUMMANR > 0 AND BESTDEPAO.UTTAGET = TRUE THEN.
         ELSE DO:
            CREATE bdeptmp.
            BUFFER-COPY BESTDEPAO TO bdeptmp.
         END.   
      END.                                  
      GET NEXT bestq NO-LOCK.
   END. 
          
   FOR EACH bdeptmp BREAK BY bdeptmp.ENR :      
   ACCUMULATE bdeptmp.ANTAL (TOTAL BY bdeptmp.ENR ).            
      IF LAST-OF(bdeptmp.ENR) THEN DO TRANSACTION:
         CREATE bdeptmp2.
         ASSIGN                                 
         bdeptmp2.ENR = bdeptmp.ENR
         bdeptmp2.LEVKOD = bdeptmp.LEVKOD
         bdeptmp2.BENAMNING = bdeptmp.BENAMNING 
         bdeptmp2.ENHET = bdeptmp.ENHET            
         bdeptmp2.PRIS = bdeptmp.PRIS.                                                               
         bdeptmp2.ANTAL = (ACCUM TOTAL BY bdeptmp.ENR bdeptmp.ANTAL).                             
      END.        
   END.
   FOR EACH bdeptmp2 USE-INDEX ENR NO-LOCK:
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = bdeptmp2.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(bdeptmp2.BENAMNING,1,25).                                 
      IF msek6 = FALSE THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,39) = STRING(bdeptmp2.PRIS,">>>>99.99").         
      END.  
      ASSIGN                  
      SUBSTRING(tidut.UT,49) = bdeptmp2.ENHET    
      SUBSTRING(tidut.UT,55) = STRING(bdeptmp2.ANTAL,">>>>9").         
      totalt = totalt + bdeptmp2.PRIS * bdeptmp2.ANTAL.  
      IF msek6 = FALSE THEN DO:
         ASSIGN         
         SUBSTRING(tidut.UT,61) = STRING(bdeptmp2.PRIS * bdeptmp2.ANTAL,">>>>>9").
      END.
      FIND FIRST  LEVERANTOR WHERE LEVERANTOR.LEVKOD = bdeptmp2.LEVKOD   USE-INDEX LEV NO-LOCK NO-ERROR.
      IF AVAILABLE LEVERANTOR THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,70) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10).
      END.         
   END.        
                                         
END PROCEDURE.


PROCEDURE klar12_UI :         
   DEFINE INPUT PARAMETER TABLE FOR spec_mtrl.   
   DEFINE INPUT PARAMETER TABLE FOR off_mtrl.   
   DEFINE INPUT PARAMETER msek6 AS LOGICAL NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE rak_mtrl NO-ERROR.
   
   FOR EACH spec_mtrl:
      CREATE rak_mtrl.
      ASSIGN
      rak_mtrl.ENR = spec_mtrl.ENR
      rak_mtrl.BENAMNING = spec_mtrl.BENAMNING
      rak_mtrl.ENHET = spec_mtrl.ENHET
      rak_mtrl.SALDO = spec_mtrl.SALDO
      rak_mtrl.NPRIS = spec_mtrl.NPRIS.

   END.   
   totalt = 0.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "LULE"  OR Guru.Konstanter:globforetag = "SNAT" OR
   Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "KRAF" {GLOBVES.I} THEN DO:
      FOR EACH rak_mtrl:    
         totalt = totalt + (rak_mtrl.NPRIS * rak_mtrl.SALDO).      
      END.
      FIND FIRST off_mtrl NO-LOCK NO-ERROR.
      IF AVAILABLE off_mtrl THEN DO:
         varpaslag = off_mtrl.TOTALT / totalt. 
      END.
      ELSE DO:
         varpaslag = 1.
      END. 
      FOR EACH rak_mtrl:
         rak_mtrl.NPRIS = rak_mtrl.NPRIS * varpaslag.
      END.     
      totalt = 0.      
      FOR EACH rak_mtrl:                      
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = rak_mtrl.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(rak_mtrl.BENAMNING,1,31)                  
         SUBSTRING(tidut.UT,55) = rak_mtrl.ENHET    
         SUBSTRING(tidut.UT,61) = STRING(rak_mtrl.SALDO,">>>>9").         
         totalt = totalt + (rak_mtrl.NPRIS * rak_mtrl.SALDO).
         IF msek6 = FALSE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,45) = STRING(rak_mtrl.NPRIS,">>>>>9.99")
            SUBSTRING(tidut.UT,67) = STRING(rak_mtrl.NPRIS * rak_mtrl.SALDO,">>>>>9.99").
         END.
      END.
   END.
   ELSE DO:
      FOR EACH spec_mtrl:                      
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = spec_mtrl.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(spec_mtrl.BENAMNING,1,31)                  
         SUBSTRING(tidut.UT,55) = spec_mtrl.ENHET    
         SUBSTRING(tidut.UT,61) = STRING(spec_mtrl.SALDO,">>>>9").         
         IF msek6 = FALSE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,45) = STRING(spec_mtrl.BPRIS,">>>>>9.99")
            SUBSTRING(tidut.UT,67) = STRING(spec_mtrl.BPRIS * spec_mtrl.SALDO,">>>>>9.99").
         END.
      END.                                           
   END.   

END PROCEDURE.


/*PROCEDURE klarare_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   FIND FIRST inbal NO-LOCK NO-ERROR.
   IF AVAILABLE inbal THEN DO:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut. 
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "==================================================".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "MATERIEL SOM FANNS LAGERFÖRT VID PERIODENS INGÅNG,".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "MEN EJ VID INVENTERING.".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "==================================================".
      CREATE tidut. 
      CREATE tidut.               
      SUBSTRING(tidut.UT,1) = str.
      IF sterat = 1 THEN DO: 
         FOR EACH inbal BY inbal.FACKID:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN
            SUBSTRING(tidut.UT,1) = inbal.FACKID  
            SUBSTRING(tidut.UT,10) = inbal.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(inbal.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.                                              
      IF sterat = 2 THEN DO: 
         FOR EACH inbal BY inbal.ENR:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN                                
            SUBSTRING(tidut.UT,1) = inbal.ENR
            SUBSTRING(tidut.UT,13) = inbal.FACKID              
            SUBSTRING(tidut.UT,22) = SUBSTRING(inbal.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.                                             
      IF sterat = 3 THEN DO: 
         FOR EACH inbal BY inbal.BENAMNING:            
            FIND FIRST slutsum2 WHERE slutsum2.ENR = inbal.ENR NO-ERROR.
            IF AVAILABLE slutsum2 THEN DO:
               inkop = slutsum2.ANTAL.
               DELETE slutsum2.
            END.
            ELSE DO:
               inkop = 0.
            END.                   
            CREATE tidut.      
            ASSIGN                            
            SUBSTRING(tidut.UT,1) = SUBSTRING(inbal.BENAMNING,1,30)     
            SUBSTRING(tidut.UT,32) = inbal.FACKID  
            SUBSTRING(tidut.UT,41) = inbal.ENR                                 
            SUBSTRING(tidut.UT,53) = inbal.ENHET
            SUBSTRING(tidut.UT,59) = STRING(inbal.IB + inkop)
            SUBSTRING(tidut.UT,68) = STRING(inkop).         
         END. 
      END.
   END.
   ELSE DO:
      sterat = sterat.
   END.                                  
END PROCEDURE.


PROCEDURE klarast_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER frod AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER kkyl AS DECIMAL NO-UNDO.
   DEFINE INPUT PARAMETER leverantorkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   FIND FIRST slutsum2 NO-LOCK NO-ERROR.
   IF AVAILABLE slutsum2 THEN DO:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut. 
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "====================================================".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "MATERIEL SOM EJ FANNS LAGERFÖRT VID PERIODENS INGÅNG".
      CREATE tidut.
      SUBSTRING(tidut.UT,15) = "OCH VID INVENTERING, MEN SOM INKÖPTS UNDER PERIODEN.".
      CREATE tidut. 
      SUBSTRING(tidut.UT,15) = "====================================================".
      CREATE tidut. 
      CREATE tidut.               
      SUBSTRING(tidut.UT,1) = str.
      IF sterat = 1 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.ENR:                        
            CREATE tidut.      
            ASSIGN            
            SUBSTRING(tidut.UT,10) = slutsum2.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(slutsum2.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.                                              
      IF sterat = 2 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.ENR:                         
            CREATE tidut.      
            ASSIGN           
            SUBSTRING(tidut.UT,1) = slutsum2.ENR
            SUBSTRING(tidut.UT,22) = SUBSTRING(slutsum2.BENAMNING,1,30)                          
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.                                             
      IF sterat = 3 THEN DO: 
         FOR EACH slutsum2 BY slutsum2.BENAMNING:                        
            CREATE tidut.      
            ASSIGN                              
            SUBSTRING(tidut.UT,1) = SUBSTRING(slutsum2.BENAMNING,1,30)                
            SUBSTRING(tidut.UT,41) = slutsum2.ENR                      
            SUBSTRING(tidut.UT,53) = slutsum2.ENHET
            SUBSTRING(tidut.UT,59) = STRING(slutsum2.ANTAL)
            SUBSTRING(tidut.UT,68) = STRING(slutsum2.ANTAL).         
         END. 
      END.
   END.
   ELSE DO:
      sterat = sterat.
   END.                                  
END PROCEDURE.*/


PROCEDURE rubrik_UI :
   
   DEFINE INPUT PARAMETER TABLE FOR valdlev. 
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
      ASSIGN
      str=                                                                    
"===========.==============================.".
      CREATE tidut.      
      ASSIGN         
      SUBSTRING(tidut.UT,44) = "PRIS".
      CREATE tidut.      
      ASSIGN        
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                       
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      antal = 44.
      FOR EACH valdlev BY valdlev.LEVKOD:           
         ASSIGN
         SUBSTRING(tidut.UT,antal) = valdlev.LEVNAMN 
         antal = antal + 11.
      END.                                      
      CREATE tidut.               
      ASSIGN
      SUBSTRING(tidut.UT,1) = str
      antal2 = 44.
      DO WHILE antal NE 44:  
         ASSIGN
         SUBSTRING(tidut.UT,antal2) = "==========."                                                        
         antal2 = antal2 + 11
         antal = antal - 11.   
      END.     
END PROCEDURE.


PROCEDURE rubrik2_UI :
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
      ASSIGN
      str=                                                                    
"===========.==============================.=================.==========". 
      CREATE tidut.
      SUBSTRING(tidut.UT,62) = "OMSÄTTNING".                                          
      CREATE tidut.       
      ASSIGN        
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                       
      SUBSTRING(tidut.UT,13) = "BENÄMNING"      
      SUBSTRING(tidut.UT,62) = "I KR".                                
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.   
END PROCEDURE.


PROCEDURE rubrik3_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF sterat = 1 THEN DO:  
      ASSIGN
      str=                                                                    
"========.===========.==============================.=====.========.========".                  
      CREATE tidut. 
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "TOT."
      SUBSTRING(tidut.UT,68) = "INKÖP".
      CREATE tidut.          
      ASSIGN  
      SUBSTRING(tidut.UT,1) = "FACK-ID"         
      SUBSTRING(tidut.UT,10) = CAPS(Guru.Konstanter:genk)                                                                       
      SUBSTRING(tidut.UT,22) = "BENÄMNING" 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "FÖRBRUK."
      SUBSTRING(tidut.UT,68) = "I ÅR".                                
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 2 THEN DO:  
      ASSIGN
      str=                                                                    
"===========.========.==============================.=====.========.========".                  
      CREATE tidut.
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "TOT."
      SUBSTRING(tidut.UT,68) = "INKÖP".
      CREATE tidut.        
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)      
      SUBSTRING(tidut.UT,13) = "FACK-ID"                                                                        
      SUBSTRING(tidut.UT,22) = "BENÄMNING"
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "FÖRBUK."
      SUBSTRING(tidut.UT,68) = "I ÅR".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 3 THEN DO:  
      ASSIGN
      str=                                                                    
"==============================.========.===========.=====.=====.========.========".                  
      CREATE tidut.
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "TOT."
      SUBSTRING(tidut.UT,68) = "INKÖP".
      CREATE tidut.              
      ASSIGN
      SUBSTRING(tidut.UT,1) = "BENÄMNING"      
      SUBSTRING(tidut.UT,32) = "FACK-ID"             
      SUBSTRING(tidut.UT,41) = CAPS(Guru.Konstanter:genk)                                                                                 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "FÖRBRUK."
      SUBSTRING(tidut.UT,68) = "I ÅR".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.           
END PROCEDURE.


PROCEDURE rubrik4_UI :
   DEFINE INPUT PARAMETER listnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF sterat = 1 THEN DO:  
      ASSIGN
      str=                                                                    
"========.===========.==============================.=====.=====.===========".                  
      CREATE tidut. 
      
      IF listnr = 5 THEN ASSIGN SUBSTRING(tidut.UT,59) = "INV.".
      ELSE IF listnr = 6 THEN ASSIGN SUBSTRING(tidut.UT,59) = "TEOR.".
      ASSIGN
      SUBSTRING(tidut.UT,65) = "LAGER".
      CREATE tidut.          
      ASSIGN  
      SUBSTRING(tidut.UT,1) = "FACK-ID"         
      SUBSTRING(tidut.UT,10) = CAPS(Guru.Konstanter:genk)                                                                       
      SUBSTRING(tidut.UT,22) = "BENÄMNING" 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "VÄRDE"
      SUBSTRING(tidut.UT,65) = "I KR".                                
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 2 THEN DO:  
      ASSIGN
      str=                                                                    
"===========.========.==============================.=====.=====.===========".                  
      CREATE tidut.
      IF listnr = 5 THEN ASSIGN SUBSTRING(tidut.UT,59) = "INV.".
      ELSE IF listnr = 6 THEN ASSIGN SUBSTRING(tidut.UT,59) = "TEOR.".
      ASSIGN            
      SUBSTRING(tidut.UT,65) = "LAGER". 
      CREATE tidut.        
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)      
      SUBSTRING(tidut.UT,13) = "FACK-ID"                                                                        
      SUBSTRING(tidut.UT,22) = "BENÄMNING"
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "VÄRDE"
      SUBSTRING(tidut.UT,65) = "I KR".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 3 THEN DO:  
      ASSIGN
      str=                                                                    
"==============================.========.===========.=====.=====.===========".                  
      CREATE tidut.
      IF listnr = 5 THEN ASSIGN SUBSTRING(tidut.UT,59) = "INV.".
      ELSE IF listnr = 6 THEN ASSIGN SUBSTRING(tidut.UT,59) = "TEOR.".
      ASSIGN            
      SUBSTRING(tidut.UT,65) = "LAGER". 
      CREATE tidut.              
      ASSIGN
      SUBSTRING(tidut.UT,1) = "BENÄMNING"      
      SUBSTRING(tidut.UT,32) = "FACK-ID"             
      SUBSTRING(tidut.UT,41) = CAPS(Guru.Konstanter:genk)                                                                                 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "VÄRDE"
      SUBSTRING(tidut.UT,65) = "I KR".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.           
END PROCEDURE.



PROCEDURE rubrik5_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF sterat = 1 THEN DO:  
      ASSIGN
      str=                                                                    
"========.===========.==============================.=====.=====.=====.=======".                  
      CREATE tidut. 
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "BEST"
      SUBSTRING(tidut.UT,65) = "OPT"
      SUBSTRING(tidut.UT,71) = "NY BEST".
      CREATE tidut.          
      ASSIGN  
      SUBSTRING(tidut.UT,1) = "FACK-ID"         
      SUBSTRING(tidut.UT,10) = CAPS(Guru.Konstanter:genk)                                                                       
      SUBSTRING(tidut.UT,22) = "BENÄMNING" 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "KVANT"
      SUBSTRING(tidut.UT,65) = "KVANT"     
      SUBSTRING(tidut.UT,71) = "KVANT".                                
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 2 THEN DO:  
      ASSIGN
      str=                                                                    
"===========.========.==============================.=====.=====.=====.=======".                  
      CREATE tidut.
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "BEST"
      SUBSTRING(tidut.UT,65) = "OPT"
      SUBSTRING(tidut.UT,71) = "NY BEST". 
      CREATE tidut.        
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)      
      SUBSTRING(tidut.UT,13) = "FACK-ID"                                                                        
      SUBSTRING(tidut.UT,22) = "BENÄMNING"
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "KVANT"
      SUBSTRING(tidut.UT,65) = "KVANT"      
      SUBSTRING(tidut.UT,71) = "KVANT".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.            
   IF sterat = 3 THEN DO:  
      ASSIGN
      str=                                                                    
"==============================.========.===========.=====.=====.=====.=======".                  
      CREATE tidut.
      ASSIGN      
      SUBSTRING(tidut.UT,59) = "BEST"
      SUBSTRING(tidut.UT,65) = "OPT"
      SUBSTRING(tidut.UT,71) = "NY BEST". 
      CREATE tidut.              
      ASSIGN
      SUBSTRING(tidut.UT,1) = "BENÄMNING"      
      SUBSTRING(tidut.UT,32) = "FACK-ID"             
      SUBSTRING(tidut.UT,41) = CAPS(Guru.Konstanter:genk)                                                                                 
      SUBSTRING(tidut.UT,53) = "ENHET"
      SUBSTRING(tidut.UT,59) = "KVANT"
      SUBSTRING(tidut.UT,65) = "KVANT"      
      SUBSTRING(tidut.UT,71) = "KVANT".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str. 
   END.           
END PROCEDURE.


PROCEDURE rubrik6_UI :   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   CREATE tidut.           
   ASSIGN
   str=                                                                    
"===========.==============================.=====.======.======.=====.========".     
   SUBSTRING(tidut.UT,1) = str.                  
   CREATE tidut.                   
   ASSIGN
   SUBSTRING(tidut.UT,50) = "BEST."
   SUBSTRING(tidut.UT,64) = "BEST."
   SUBSTRING(tidut.UT,70) = "BEST.".
   CREATE tidut.     
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                        
   SUBSTRING(tidut.UT,44) = "ENHET"
   SUBSTRING(tidut.UT,50) = "PUNKT"
   SUBSTRING(tidut.UT,57) = "SALDO"
   SUBSTRING(tidut.UT,64) = "ANTAL"
   SUBSTRING(tidut.UT,70) = "DATUM".                         
   CREATE tidut.       
   SUBSTRING(tidut.UT,1) = str.                                                            
END PROCEDURE.


PROCEDURE rubrik7_UI :   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   CREATE tidut.  
   ASSIGN
   str=                                                                    
"===========.==============================.=====.=====.===========".  
   SUBSTRING(tidut.UT,1) = str.                   
   CREATE tidut. 
   SUBSTRING(tidut.UT,56) = "VÄRDE".  
   CREATE tidut.      
   ASSIGN
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)      
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                                                                   
   SUBSTRING(tidut.UT,44) = "ENHET"
   SUBSTRING(tidut.UT,50) = "SALDO"
   SUBSTRING(tidut.UT,56) = "I KR".                         
   CREATE tidut.       
   SUBSTRING(tidut.UT,1) = str. 
END PROCEDURE.


PROCEDURE rubrik8_UI :
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   FIND FIRST BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = FALSE AND BERBEST.DEPNR = dpnr 
   AND (BERBEST.LEVDATUM >= hjavdat AND BERBEST.LEVDATUM <= hjbdat) USE-INDEX LISTA
   NO-LOCK NO-ERROR. 
   IF AVAILABLE BERBEST THEN RUN klar8_UI (INPUT dpnr, INPUT-OUTPUT TABLE tidut). 
   ELSE musz = musz.
   FIND FIRST BERBEST WHERE BERBEST.SVINN = TRUE AND
   BERBEST.UTTAG = TRUE AND BERBEST.DEPNR = dpnr
   AND (BERBEST.LEVDATUM >= hjavdat AND BERBEST.LEVDATUM <= hjbdat) USE-INDEX LISTA
   NO-LOCK NO-ERROR. 
   IF AVAILABLE BERBEST THEN RUN klar9_UI (INPUT dpnr, INPUT-OUTPUT TABLE tidut).
   ELSE musz = musz.                  
END PROCEDURE.


PROCEDURE rubrik10_UI :   
   
   ASSIGN
   str=                                                                    
"===========.=========================.==========.========.=========.=====.=====.==========.======================================".                  
   CREATE tidut.      
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING" 
   SUBSTRING(tidut.UT,39) = "ANVÄNDARE"   
   SUBSTRING(tidut.UT,50) = "DATUM"                  
   SUBSTRING(tidut.UT,59) = "PRIS"  
   SUBSTRING(tidut.UT,69) = "ENHET"
   SUBSTRING(tidut.UT,75) = "ANTAL"
   SUBSTRING(tidut.UT,81) = "SUMMA"                         
   SUBSTRING(tidut.UT,92) = "KOMMENTAR".                         
   CREATE tidut.       
   SUBSTRING(tidut.UT,1) = str.                                                            
END PROCEDURE.


PROCEDURE rubrik11_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   IF sterat = 1 THEN DO:  
      ASSIGN
      str=                                                                    
"===========.========================================.=========.=====.=====.======".                  
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
      SUBSTRING(tidut.UT,13) = "BENÄMNING"                 
      SUBSTRING(tidut.UT,54) = "PRIS"  
      SUBSTRING(tidut.UT,64) = "ENHET"
      SUBSTRING(tidut.UT,70) = "ANTAL"
      SUBSTRING(tidut.UT,76) = "SUMMA".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.  
   END.
   ELSE DO:
      ASSIGN
      str=                                                                    
"===========.=========================.==========.========.=========.=====.=====.======".                  
      CREATE tidut. 
      SUBSTRING(tidut.UT,50) = "LEVERANS".     
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      SUBSTRING(tidut.UT,39) = "LEVERANTÖR"
      SUBSTRING(tidut.UT,50) = "DATUM"                      
      SUBSTRING(tidut.UT,59) = "PRIS"  
      SUBSTRING(tidut.UT,69) = "ENHET"
      SUBSTRING(tidut.UT,75) = "ANTAL"
      SUBSTRING(tidut.UT,81) = "SUMMA".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.  
   END.          
END PROCEDURE.
PROCEDURE rubrik31_UI :      
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF utg = FALSE THEN DO:
      IF sterat = 1 THEN DO:  
         ASSIGN
         str=                                                                    
   "===========.========================================.=========.=====.=====.======".                  
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
         SUBSTRING(tidut.UT,13) = "BENÄMNING"                 
         SUBSTRING(tidut.UT,54) = "PRIS"  
         SUBSTRING(tidut.UT,64) = "ENHET"
         SUBSTRING(tidut.UT,70) = "ANTAL"
         SUBSTRING(tidut.UT,76) = "SUMMA".                         
         CREATE tidut.       
         SUBSTRING(tidut.UT,1) = str.  
      END.
      ELSE DO:
         ASSIGN
         str=                                                                    
   "===========.=========================.==========.========.=========.=====.=====.======".                  
         CREATE tidut. 
         SUBSTRING(tidut.UT,50) = "LEVERANS".     
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
         SUBSTRING(tidut.UT,13) = "BENÄMNING"
         SUBSTRING(tidut.UT,39) = "LEVERANTÖR"
         SUBSTRING(tidut.UT,50) = "DATUM"                      
         SUBSTRING(tidut.UT,59) = "PRIS"  
         SUBSTRING(tidut.UT,69) = "ENHET"
         SUBSTRING(tidut.UT,75) = "ANTAL"
         SUBSTRING(tidut.UT,81) = "SUMMA".                         
         CREATE tidut.       
         SUBSTRING(tidut.UT,1) = str.  
      END.
   END.
   ELSE DO:
      ASSIGN
         str=                                                                    
   "===========.=========================.==========.========.=========.=====.=====.======".                  
         CREATE tidut. 
         SUBSTRING(tidut.UT,50) = "LEVERANS".     
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
         SUBSTRING(tidut.UT,13) = "BENÄMNING"
         SUBSTRING(tidut.UT,39) = "LEVERANTÖR"
         SUBSTRING(tidut.UT,50) = "DATUM"                      
         SUBSTRING(tidut.UT,59) = "PRIS"  
         SUBSTRING(tidut.UT,69) = "ENHET"
         SUBSTRING(tidut.UT,75) = "ANTAL"
         SUBSTRING(tidut.UT,81) = "SUMMA".                         
         CREATE tidut.       
         SUBSTRING(tidut.UT,1) = str.
   END.                
END PROCEDURE.

PROCEDURE rubrik32_UI :     
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   
      ASSIGN
      str=                                                                    
"===========.=========================.==========.========.=========.=====.=====.======.==========.==========.================.====.".                  
      CREATE tidut. 
      SUBSTRING(tidut.UT,39) = "BEST".
      SUBSTRING(tidut.UT,50) = "LEVERERAT".
      SUBSTRING(tidut.UT,99) = "BESTNR/".
         
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      SUBSTRING(tidut.UT,39) = "DATUM"
      SUBSTRING(tidut.UT,50) = "DATUM"                      
      SUBSTRING(tidut.UT,59) = "PRIS"  
      SUBSTRING(tidut.UT,69) = "ENHET"
      SUBSTRING(tidut.UT,75) = "ANTAL"
      SUBSTRING(tidut.UT,81) = "SUMMA"
      SUBSTRING(tidut.UT,88) = "LEVERANTÖR"
      SUBSTRING(tidut.UT,99) = "UTTAG NR"      
      SUBSTRING(tidut.UT,110) = "ORDERNUMMER"
      SUBSTRING(tidut.UT,128) = "REST".
                   
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.  
             
END PROCEDURE.

PROCEDURE rubrik33_UI :   
   DEFINE INPUT PARAMETER utg AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   
      ASSIGN
      str=                                                                    
"===========.=========================.=========.=====.=====.======.==========.".                  
      CREATE tidut. 
            
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
                            
      SUBSTRING(tidut.UT,39) = "PRIS"  
      SUBSTRING(tidut.UT,49) = "ENHET"
      SUBSTRING(tidut.UT,55) = "ANTAL"
      SUBSTRING(tidut.UT,61) = "SUMMA"
      SUBSTRING(tidut.UT,68) = "LEVERANTÖR".
                   
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.  
             
END PROCEDURE.



PROCEDURE rubrik12_UI :      
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   ASSIGN
      str=                                                                    
"===========.===============================.=========.=====.=====.=========".                  
      CREATE tidut.      
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
      SUBSTRING(tidut.UT,13) = "BENÄMNING"                     
      SUBSTRING(tidut.UT,45) = "PRIS"  
      SUBSTRING(tidut.UT,55) = "ENHET"
      SUBSTRING(tidut.UT,61) = "ANTAL"
      SUBSTRING(tidut.UT,67) = "SUMMA".                         
      CREATE tidut.       
      SUBSTRING(tidut.UT,1) = str.         
   
END PROCEDURE.


PROCEDURE skapa_UI :   
   DEFINE INPUT PARAMETER bodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avodatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   OPEN QUERY ink FOR EACH BESTDEP WHERE BESTDEP.DEPNR = dpnr AND 
   BESTDEP.BESTDATUM >= bodatum AND BESTDEP.BESTDATUM <= avodatum AND BESTDEP.LEVNAMN = "" NO-LOCK.
   GET FIRST ink NO-LOCK.   
   DO WHILE AVAILABLE(BESTDEP):      
      CREATE best_temp.
      ASSIGN
      best_temp.ENR = BESTDEP.ENR 
      best_temp.BENAMNING = BESTDEP.BENAMNING      
      best_temp.ANTAL = BESTDEP.ANTAL
      best_temp.PRIS = BESTDEP.PRIS
      best_temp.SUMMA = BESTDEP.ANTAL * BESTDEP.PRIS.                             
      GET NEXT ink NO-LOCK.      
   END. 
   arrhjsum = 0.
   FOR EACH best_temp BREAK BY best_temp.ENR:   
      ACCUMULATE best_temp.SUMMA 
      (TOTAL BY best_temp.ENR).       
      IF LAST-OF (best_temp.ENR) THEN DO:
         CREATE slutsum.
         ASSIGN                            
         slutsum.ENR = best_temp.ENR
         slutsum.BENAMNING = best_temp.BENAMNING          
         slutsum.SUMMA = (ACCUM TOTAL best_temp.SUMMA) - arrhjsum                                
         arrhjsum = ACCUM TOTAL best_temp.SUMMA.           
      END.
   END. 
   totalt = 0.
   FOR EACH slutsum NO-LOCK:
      totalt = totalt + slutsum.SUMMA.
   END.          
   deltot = 0.
   FOR EACH slutsum BY slutsum.SUMMA DESCENDING:
      deltot = deltot + slutsum.SUMMA.
      IF deltot / totalt >= 0.78 THEN DO:
         ASSIGN
         spara = deltot / totalt      
         spara2 = deltot.
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = slutsum.ENR      
         SUBSTRING(tidut.UT,13) = SUBSTRING(slutsum.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,62) = STRING(slutsum.SUMMA,">>>>>>9").
         CREATE tidut.
         SUBSTRING(tidut.UT,62) = "==========".
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,44) = STRING((deltot / totalt) * 100,">99")
         SUBSTRING(tidut.UT,48) = "% AV OMSÄTT."
         SUBSTRING(tidut.UT,62) = STRING(deltot,">>>>>>9")
         deltot = 0. 
         CREATE tidut.
         CREATE tidut.
      END.
      ELSE DO:
         CREATE tidut.      
         ASSIGN
         SUBSTRING(tidut.UT,1) = slutsum.ENR      
         SUBSTRING(tidut.UT,13) = SUBSTRING(slutsum.BENAMNING,1,30)                          
         SUBSTRING(tidut.UT,62) = STRING(slutsum.SUMMA,">>>>>>9"). 
      END.
   END. 
   CREATE tidut.
   SUBSTRING(tidut.UT,62) = "==========".
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,44) = STRING((1 - spara) * 100,">99")
   SUBSTRING(tidut.UT,48) = "% AV OMSÄTT."
   SUBSTRING(tidut.UT,62) = STRING(totalt - spara2,">>>>>>9").
   CREATE tidut. 
   SUBSTRING(tidut.UT,62) = "==========".
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,44) = "TOTAL OMSÄTT."
   SUBSTRING(tidut.UT,62) = STRING(totalt,">>>>>>9").

END PROCEDURE.


PROCEDURE totalt_UI :   
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   IF sterat = 1 THEN DO:
      str=
"==========================================================================.======".      
      CREATE tidut. 
      CREATE tidut.      
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      CREATE tidut.         
      SUBSTRING(tidut.UT,63) = "TOTAL SUMMA:".
      CREATE tidut.         
      SUBSTRING(tidut.UT,76) = STRING(totalt,">>>>>99").
      CREATE tidut.         
      SUBSTRING(tidut.UT,76) = "=======".   
   END.
   ELSE DO:
      str=
"===============================================================================.======".      
      CREATE tidut. 
      CREATE tidut.      
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      CREATE tidut.         
      SUBSTRING(tidut.UT,68) = "TOTAL SUMMA:".
      CREATE tidut.         
      SUBSTRING(tidut.UT,81) = STRING(totalt,">>>>99").
      CREATE tidut.         
      SUBSTRING(tidut.UT,81) = "======".   
   END.     
   IF sterat = 2 THEN DO:
      str=
"======================================================================================".
      FIND FIRST BESTDEP WHERE BESTDEP.DEPNR = dpnr AND BESTDEP.BESTNR = tret
      AND BESTDEP.LEVDATUM = ? NO-LOCK NO-ERROR.                           
      IF AVAILABLE BESTDEP THEN DO:
         CREATE tidut.
         CREATE tidut.  
         SUBSTRING(tidut.UT,1) = str.
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = "OBS! DET FINNS EJ FÄRDIGA LEVERANSER PÅ DETTA BESTÄLLNINGSNUMMER.".  
      END.
   END.               
END PROCEDURE.

PROCEDURE totalt32_UI :   
   DEFINE INPUT PARAMETER levtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER sterat AS INTEGER NO-UNDO.   
   DEFINE INPUT PARAMETER dpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER tret AS INTEGER NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   IF levtill = 33 THEN DO:
      
      str=
"===============================================================================".      
      CREATE tidut. 
      CREATE tidut.      
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      CREATE tidut.         
      SUBSTRING(tidut.UT,48) = "TOTAL SUMMA:".
      CREATE tidut.         
      SUBSTRING(tidut.UT,61) = STRING(totalt,">>>>99").
      CREATE tidut.         
      SUBSTRING(tidut.UT,61) = "======".
   END.
   ELSE DO:   
   
   str=                                                                    
"===========.=========================.==========.========.=========.=====.=====.======.==========.==========.================.====.".
 /*     str=
"===============================================================================.======.".*/      
      CREATE tidut. 
      CREATE tidut.      
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      CREATE tidut.         
      SUBSTRING(tidut.UT,68) = "TOTAL SUMMA:".
      CREATE tidut.         
      SUBSTRING(tidut.UT,81) = STRING(totalt,">>>>99").
      CREATE tidut.         
      SUBSTRING(tidut.UT,81) = "======".   
   END.      
END PROCEDURE.


PROCEDURE totalt2_UI :      
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.   
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "SNAT" OR
   Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "KRAF" {GLOBVES.I} THEN DO:
      totalt = totalt.
   END.
   ELSE DO:   
      FOR EACH spec_mtrl:    
         totalt = totalt + (spec_mtrl.BPRIS * spec_mtrl.SALDO).      
      END. 
   END.   
   str=
"=================================================================.=========".      
   CREATE tidut. 
   CREATE tidut.      
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.
   CREATE tidut.         
   SUBSTRING(tidut.UT,54) = "TOTAL SUMMA:".
   CREATE tidut.         
   SUBSTRING(tidut.UT,67) = STRING(totalt,">>>>>9.99").
   CREATE tidut.         
   SUBSTRING(tidut.UT,67) = "=========". 


END PROCEDURE.






