 /*SULOHOGIASTA.P  filformatet 214007 from 20170824*/
{LESAMMAN.I}
{STANSLONEDEF.I}  
DEFINE INPUT PARAMETER kordatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER koranv LIKE ANVANDARE.ANVANDARE NO-UNDO.
DEFINE INPUT PARAMETER gkorvar AS CHARACTER NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR stanslonefil.


RUN sammut_UI (INPUT 1).
&Scoped-define NEW   
&Scoped-define SHARED 
{LONEDEF.I}

DEFINE NEW SHARED VARIABLE fnytid AS DECIMAL FORMAT "-99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE vkdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.     
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.

DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER NO-UNDO.    
DEFINE NEW SHARED VARIABLE korvar AS CHARACTER NO-UNDO.

DEFINE VARIABLE antal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.   /*LÖN*/
DEFINE VARIABLE antalet LIKE PHJALP.PPAR8 NO-UNDO.   /*LÖN*/
DEFINE VARIABLE personal LIKE PERSONALTAB.PERSONALKOD.      /*LÖN*/
DEFINE VARIABLE pnr LIKE PERSONALTAB.PERSONNUMMER.      /*LÖN*/
DEFINE VARIABLE vecknr LIKE TIDREGITAB.VECKONUMMER.      /*LÖN*/
DEFINE VARIABLE overrapp1 AS CHARACTER FORMAT "X(250)".      /*LÖN*/
DEFINE VARIABLE rapphj1 AS CHARACTER FORMAT "X(9)".      /*HJÄLP ANTAL*/
DEFINE VARIABLE rapphj2 AS CHARACTER FORMAT "X(11)".      /*HJÄLP belopp*/
DEFINE VARIABLE datrapphj1 AS DATE FORMAT "999999".      /*HJÄLP datum*/
DEFINE VARIABLE rec AS RECID.
DEFINE VARIABLE para AS LOGICAL NO-UNDO.
DEFINE VARIABLE avtal1 LIKE PERSONALTAB.ANSTALLNING NO-UNDO.
DEFINE VARIABLE avtal LIKE ANSTFORMTAB.KOD NO-UNDO.  
DEFINE VARIABLE oversum AS INTEGER NO-UNDO. 
DEFINE VARIABLE total AS INTEGER NO-UNDO.
DEFINE VARIABLE oa1 AS INTEGER NO-UNDO.
DEFINE VARIABLE oa2 AS INTEGER NO-UNDO.
DEFINE VARIABLE oa3 AS INTEGER NO-UNDO.
DEFINE VARIABLE t2 AS INTEGER NO-UNDO.
DEFINE VARIABLE t3 AS INTEGER NO-UNDO.
DEFINE VARIABLE bryt AS LOGICAL NO-UNDO.
DEFINE VARIABLE nod AS LOGICAL NO-UNDO.
DEFINE VARIABLE seku AS INTEGER NO-UNDO.
DEFINE VARIABLE anstperson LIKE PERSONALTAB.PERSONNUMMER NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE prognamn AS CHARACTER FORMAT "X(41)" NO-UNDO.
DEFINE VARIABLE prognamn5 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE prognamn3 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE prognamn4 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE filut AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonfil AS CHARACTER NO-UNDO.
DEFINE VARIABLE lorsak AS CHARACTER NO-UNDO.
DEFINE VARIABLE stdat  AS DATE NO-UNDO.
DEFINE VARIABLE sldat AS DATE NO-UNDO.
DEFINE VARIABLE rgr AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonant AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonkr AS CHARACTER NO-UNDO.
DEFINE VARIABLE berkrav AS LOGICAL NO-UNDO.
DEFINE VARIABLE bedat AS DATE NO-UNDO.
DEFINE VARIABLE beredant AS DECIMAL NO-UNDO.
DEFINE VARIABLE sumoverk AS DECIMAL NO-UNDO.
DEFINE VARIABLE sumovertot AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidkom AS CHARACTER NO-UNDO.
DEFINE VARIABLE skapnyber AS LOGICAL NO-UNDO.

DEFINE BUFFER tidbuff FOR TIDREGITAB.
DEFINE TEMP-TABLE pa90filen
   FIELD PPERSONNUMMER AS CHARACTER 
   FIELD PNR AS CHARACTER FORMAT "X(10)"
   FIELD PANSTNR AS CHARACTER
   FIELD PDATUMET AS CHARACTER FORMAT "X(6)"
   FIELD MANAD AS INTEGER
   FIELD UTDATUM AS DATE
   FIELD PTILLAGG LIKE TIDREGITAB.LONTILLAGG
   FIELD PTI  AS DECIMAL
   FIELD PANTAL AS DECIMAL
   FIELD PKR AS DECIMAL
   FIELD PKOD LIKE ANSTFORMTAB.KOD
   FIELD POMR LIKE PERSONALTAB.OMRADE
   FIELD ORSAK AS CHARACTER
   FIELD VIJUDID AS CHARACTER
   FIELD PSORT AS CHARACTER FORMAT "XX"
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   INDEX PPERSKOD IS PRIMARY PPERSONNUMMER PTILLAGG.
   

DEFINE BUFFER pa90filenbuff FOR pa90filen.
DEFINE BUFFER lonebuff FOR lonefil.
DEFINE TEMP-TABLE persber
   FIELD PPERSONNUMMER AS CHARACTER FORMAT "999999-9999"
   FIELD berstdat AS DATE
   FIELD bersldat AS DATE
   FIELD bersttid AS DECIMAL
   FIELD bersltid AS DECIMAL
   FIELD blart1 AS character
   FIELD bertid1 AS DECIMAL
   FIELD blart2 AS character
   FIELD bertid2 AS DECIMAL
   FIELD blart3 AS character
   FIELD bertid3 AS DECIMAL    
    
   INDEX PPERSONNUMMER IS PRIMARY PPERSONNUMMER berstdat bersttid.

FUNCTION klock100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.
{AMERICANEUROPEAN.I}
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.

IF Guru.Konstanter:globforetag = "SNAT" THEN DO:
   prognamn5 = "D:\DELAD\PRO10S\BACKEXPORT\lonelnat\".
   /*SNATBERGET*/   
END.            
ELSE IF Guru.Konstanter:globforetag = "ELPA" THEN prognamn5 = "\\pc112\delad\pro9s\korning\".

EMPTY TEMP-TABLE lonefil NO-ERROR.    
EMPTY TEMP-TABLE stanslonefil NO-ERROR. 
ASSIGN

vkdatum = kordatum
korvar = gkorvar.

OPEN QUERY pq FOR EACH PERSONALTAB WHERE PERSONALTAB.PERSMASK = TRUE
AND PERSONALTAB.BRAVO = TRUE
USE-INDEX PERSONALKOD NO-LOCK.
GET FIRST pq NO-LOCK.
DO WHILE AVAILABLE(PERSONALTAB):
   /*ASSIGN 
   sumoverk = 0
   sumovertot = 0.
   RUN overkoll_UI.
   sumovertot = sumoverk.*/      
   personal = PERSONALTAB.PERSONALKOD.
   avtal1 = PERSONALTAB.ANSTALLNING.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = avtal1
   USE-INDEX ANSTF NO-LOCK NO-ERROR.
   avtal = ANSTFORMTAB.KOD.
   FIND FIRST UTRYCKNING WHERE UTRYCKNING.KOD = avtal USE-INDEX UT
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE UTRYCKNING THEN para = FALSE.
   ELSE para = UTRYCKNING.PARA8.
   anstperson = "".
   bedat = ?.
   OPEN QUERY tq FOR EACH TIDREGITAB WHERE
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIDREGITAB.GODKAND BEGINS "G" AND TIDREGITAB.VECKOKORD = korvar AND
   TIDREGITAB.DATUM <= vkdatum
   USE-INDEX PSTART NO-LOCK.   
   GET FIRST tq NO-LOCK.
   DO WHILE AVAILABLE(TIDREGITAB):
      IF (TIDREGITAB.TRAKTKOD = " "  OR TIDREGITAB.TRAKTANTAL = 0) AND
      (TIDREGITAB.LONTILLAGG = " "  OR TIDREGITAB.LONTILLANTAL = 0) AND
      (TIDREGITAB.OKOD1 = " " OR TIDREGITAB.OANT1 = 0) AND
      (TIDREGITAB.OKOD2 = " " OR TIDREGITAB.OANT2 = 0) AND
      (TIDREGITAB.OKOD3 = " " OR TIDREGITAB.OANT3 = 0) AND
      (TIDREGITAB.BEREDSKAP = " " /*OR TIDREGITAB.BERANTAL = 0*/)
      THEN DO:
         IF TIDREGITAB.OVERTIDTILL = "TIMANSTÄLLD" AND TIDREGITAB.TOTALT > 0 THEN DO:                                                                     
	         IF TIDREGITAB.PRISTYP = "FRÅNVARO." THEN nytid = nytid.
	         ELSE DO:
   	         CREATE lonefil.
   	         ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER   	         
   	         lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	         lonefil.PLONTILLAGG = "012"
   	         lonefil.PLONTILLANTAL = TIDREGITAB.TOTALT
   	         lonefil.PDATUM = TIDREGITAB.DATUM
   	         lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	         lonefil.AONR = TIDREGITAB.AONR
   	         lonefil.DELNR = TIDREGITAB.DELNR
   	         lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
   	         lonefil.PAVTAL = avtal
               lonefil.PSORT = "TI"
               lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.               
               lonefil.PLONTILLANTAL = klock100(lonefil.PLONTILLANTAL).
               CREATE stanslonefil.
               BUFFER-COPY lonefil TO stanslonefil.
               ASSIGN
               stanslonefil.START = TIDREGITAB.START
               stanslonefil.SLUT = TIDREGITAB.SLUT
               stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT)
               stanslonefil.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG
               stanslonefil.HEROSORT = "TIMTID".
               
	         END.    
         END.
         ELSE DO:
            
            /*om resans start slut hamnar utan löneart skapa en tom post med start slut*/
            IF TIDREGITAB.RESMAL BEGINS "Resans start:" OR TIDREGITAB.RESMAL BEGINS "Resans slut:"  OR 
            TIDREGITAB.RESMAL BEGINS "Utlandsresans start:" OR TIDREGITAB.RESMAL BEGINS "Utlandsresans slut:" THEN DO:
               CREATE stanslonefil.                          
               ASSIGN stanslonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
               stanslonefil.ANSTNR = PERSONALTAB.ANSTNR               
               stanslonefil.PDATUM = TIDREGITAB.DATUM
               stanslonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
               stanslonefil.AONR = TIDREGITAB.AONR
               stanslonefil.DELNR = TIDREGITAB.DELNR
               stanslonefil.MANAD = MONTH(TIDREGITAB.DATUM)
               stanslonefil.PAVTAL = avtal
               stanslonefil.START = TIDREGITAB.START
               stanslonefil.SLUT = TIDREGITAB.SLUT
               stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT).               
               stanslonefil.HEROSORT = "RESA".
               stanslonefil.PPAR8 = 0.
               stanslonefil.OVERTIDUTTAG = PERSONALTAB.OVERTIDUTTAG.              
               IF TIDREGITAB.ENFLERDAGS NE "" THEN DO:
                  stanslonefil.RESMAL = TIDREGITAB.RESMAL.
                  stanslonefil.PPAR8 = 1.
               END.                
            END.
            /*de som ej får ersättning för sin restid ska ändå med*/
            IF TIDREGITAB.PRISTYP = "RESTID..." AND PERSONALTAB.OVERTIDUTTAG = "I" THEN DO:               
               CREATE stanslonefil.                          
               ASSIGN stanslonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
               stanslonefil.ANSTNR = PERSONALTAB.ANSTNR               
               stanslonefil.PDATUM = TIDREGITAB.DATUM
               stanslonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
               stanslonefil.AONR = TIDREGITAB.AONR
               stanslonefil.DELNR = TIDREGITAB.DELNR
               stanslonefil.MANAD = MONTH(TIDREGITAB.DATUM)
               stanslonefil.PAVTAL = avtal
               stanslonefil.START = TIDREGITAB.START
               stanslonefil.SLUT = TIDREGITAB.SLUT
               stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT).               
               stanslonefil.HEROSORT = "RESTID".
               stanslonefil.PPAR8 = 0.
               stanslonefil.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG.              
               IF TIDREGITAB.ENFLERDAGS NE "" THEN DO:
                  stanslonefil.RESMAL = TIDREGITAB.RESMAL.
                  stanslonefil.PPAR8 = 1.
               END.              
            END.      
         END.   
      END.
      ELSE DO :    
       
	     IF TIDREGITAB.LONTILLAGG NE " " AND TIDREGITAB.LONTILLANTAL NE 0 THEN DO TRANSACTION:	                
   	     CREATE lonefil.
   	     ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	     lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	     lonefil.PLONTILLAGG = TIDREGITAB.LONTILLAGG
   	     lonefil.PLONTILLANTAL = TIDREGITAB.LONTILLANTAL
   	     lonefil.PDATUM = TIDREGITAB.DATUM
   	     lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	     lonefil.AONR = TIDREGITAB.AONR
           lonefil.DELNR = TIDREGITAB.DELNR
           lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
           lonefil.PAVTAL = avtal
           lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.           
           IF TIDREGITAB.ENFLERDAGS NE "" THEN DO:
              lonefil.RESMAL = TIDREGITAB.RESMAL.              
           END.          
           FIND FIRST LONTILL WHERE LONTILL.LONTILLAGG = lonefil.PLONTILLAGG
           AND LONTILL.KOD = lonefil.PAVTAL USE-INDEX LON NO-LOCK NO-ERROR.       
           IF AVAILABLE LONTILL THEN DO:              
              ASSIGN lonefil.PSORT = LONTILL.ENHET.
              IF LONTILL.ENHET = "TI" THEN DO:                 
                 lonefil.PLONTILLANTAL = klock100(lonefil.PLONTILLANTAL).
                 IF lonefil.PLONTILLAGG = "4506" OR lonefil.PLONTILLAGG = "4574" OR lonefil.PLONTILLAGG = "0237" THEN DO: 
                    IF ( lonefil.PLONTILLANTAL - TRUNCATE(lonefil.PLONTILLANTAL,0)) GE 0 AND ( lonefil.PLONTILLANTAL - TRUNCATE(lonefil.PLONTILLANTAL,0)) < 0.26 THEN lonefil.PLONTILLANTAL = TRUNCATE(lonefil.PLONTILLANTAL,0).
                    ELSE IF ( lonefil.PLONTILLANTAL - TRUNCATE(lonefil.PLONTILLANTAL,0)) GE 0.26  AND ( lonefil.PLONTILLANTAL - TRUNCATE(lonefil.PLONTILLANTAL,0)) < 0.76 THEN lonefil.PLONTILLANTAL = TRUNCATE(lonefil.PLONTILLANTAL,0) + 0.50.
                    ELSE  IF ( lonefil.PLONTILLANTAL - TRUNCATE(lonefil.PLONTILLANTAL,0)) GE 0.76  THEN lonefil.PLONTILLANTAL = TRUNCATE(lonefil.PLONTILLANTAL,0) + 1.                  
                 END.                 
              END.              
                                          
              /*Utlägg - kronor ska ut i antalskolumnen för att lönepersonalen ska kunna checka
              att kvitto finns innan utbetalning görs. GÖRS INTE VID STANSNING 20220914 Lena 
              812-8319             
              821-821              
              823-823
              825-8259
              831-8101
              832-6990
              */
              /*IF lonefil.PLONTILLAGG = "8319" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.
             
              IF lonefil.PLONTILLAGG = "821" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.              
              IF lonefil.PLONTILLAGG = "823" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.
              IF lonefil.PLONTILLAGG = "8259" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.
              IF lonefil.PLONTILLAGG = "8101" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.
              IF lonefil.PLONTILLAGG = "6990" THEN DO: 
                 IF LONTILL.ENHET = "KR" THEN ASSIGN lonefil.PSORT = "ST".                                     
              END.*/              
              CREATE stanslonefil.
              BUFFER-COPY lonefil TO stanslonefil.
              stanslonefil.PPAR8 = 0.
              IF TIDREGITAB.TIDLOG = TRUE THEN DO:
                 ASSIGN
                 stanslonefil.START = TIDREGITAB.START
                 stanslonefil.SLUT = TIDREGITAB.SLUT
                 stanslonefil.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG
                 stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT).
                 IF lonefil.PLONTILLAGG = "4610" OR lonefil.PLONTILLAGG = "4611" THEN stanslonefil.HEROSORT = "RESTID". 
                 ELSE stanslonefil.HEROSORT = "TILLÄGG".
              END.   
              ELSE stanslonefil.HEROSORT = "TILLÄGG".
              IF TIDREGITAB.ENFLERDAGS NE "" THEN DO:                 
                 stanslonefil.PPAR8 = 1.
              END.
              /*ta bort lart 190-vilart 191 arbete under veckovila som ger flextidstimmar borttaget 20221101 Lena*/
              IF stanslonefil.PLONTILLAGG = "190" THEN DO:
                 DELETE stanslonefil.
              END.   
              FIND FIRST LONTILL WHERE LONTILL.LONTILLAGG = stanslonefil.PLONTILLAGG
               AND LONTILL.KOD = stanslonefil.PAVTAL USE-INDEX LON NO-LOCK NO-ERROR.
               IF AVAILABLE LONTILL AND SUBSTRING(LONTILL.TYPKOD,1,3) = "BIL" THEN DELETE stanslonefil.
               ELSE IF NOT AVAILABLE LONTILL THEN DO:
                  FIND FIRST LONTILL WHERE LONTILL.LONTILLAGG = stanslonefil.PLONTILLAGG USE-INDEX LON NO-LOCK NO-ERROR.
                  IF AVAILABLE LONTILL AND SUBSTRING(LONTILL.TYPKOD,1,3) = "BIL" THEN DELETE lonefil.
                  ELSE IF AVAILABLE LONTILL THEN DO: 
                     ASSIGN 
                     stanslonefil.PLONTILLAGG = LONTILL.VILART     
                     stanslonefil.KLARTEXT = LONTILL.LONKODTEXT.
                      IF LONTILL.ERSATTNING > 0 THEN stanslonefil.KLARTEXT = stanslonefil.KLARTEXT  + " ( " +  STRING(LONTILL.ERSATTNING)  + " kr) ". 
                  END.
               END.
               ELSE IF AVAILABLE LONTILL THEN DO: 
                  ASSIGN 
                  stanslonefil.PLONTILLAGG = LONTILL.VILART
                  stanslonefil.KLARTEXT = LONTILL.LONKODTEXT.                  
                  IF LONTILL.ERSATTNING > 0 THEN stanslonefil.KLARTEXT = stanslonefil.KLARTEXT  + " ( " +  STRING(LONTILL.ERSATTNING)  + " kr) ".
               END.       
           END.
   	  END.          
        IF TIDREGITAB.OANT1 NE 0 OR TIDREGITAB.OANT2 NE 0 OR TIDREGITAB.OANT3 NE 0
   	  THEN DO TRANSACTION:                       
           /*Övertid-beredskap*/
           berkrav = FALSE.
           FOR EACH tidbuff WHERE tidbuff.PERSONALKOD = TIDREGITAB.PERSONALKOD AND
           tidbuff.DATUM = TIDREGITAB.DATUM AND tidbuff.BEREDSKAP NE "" USE-INDEX PSTART NO-LOCK:
              IF TIDREGITAB.START GE tidbuff.BEREDSKAPSTART AND
              TIDREGITAB.START < tidbuff.BEREDSKAPSLUT THEN berkrav = TRUE.
           END.                   
   	     nytid = TIDREGITAB.OANT1.
   	     RUN TIMSEK.P.
   	     oa1 = sekunder.  
   	     nytid = TIDREGITAB.OANT2.
   	     RUN TIMSEK.P. 
   	     oa2 = sekunder.
   	     oversum = oa1 + sekunder.
   	     nytid = TIDREGITAB.OANT3.
   	     RUN TIMSEK.P.
   	     oa3 = sekunder.
   	     oversum = oversum + sekunder.
   	     nytid = TIDREGITAB.TOTALT.
   	     RUN TIMSEK.P.
   	     total = sekunder.  
   	     /*IF TIDREGITAB.OVERAUTO = FALSE  THEN DO:  */
           DO:
              otidkom = "".           
   	        IF TIDREGITAB.OKOD1 NE "" THEN DO:
   	           CREATE lonefil.
   	           ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	           lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	           lonefil.POVERTIDTILL = TIDREGITAB.OKOD1
   	           lonefil.POVERANTAL = TIDREGITAB.OANT1
   	           lonefil.PDATUM = TIDREGITAB.DATUM
   	           lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	           lonefil.AONR = TIDREGITAB.AONR
                 lonefil.DELNR = TIDREGITAB.DELNR
                 lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
                 lonefil.PAVTAL = avtal
                 lonefil.TID = TRUE
                 lonefil.START = TIDREGITAB.OST1
                 lonefil.SLUT = TIDREGITAB.OSL1
                 lonefil.PSORT = "TI"
                 lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
                 lonefil.POVERANTAL = klock100(lonefil.POVERANTAL).
                 IF berkrav = TRUE THEN lonefil.BERKOLL = TRUE.
                 FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = lonefil.POVERTIDTILL AND OVERKOD.KOD = lonefil.PAVTAL USE-INDEX OVER NO-LOCK NO-ERROR.
                 IF AVAILABLE OVERKOD THEN DO:
                    otidkom = OVERKOD.LONKODTEXT + "  " + STRING(lonefil.POVERANTAL,">9.99") + " tim".    
                 END.   
                  
                                                      
   	        END.    
   	        IF TIDREGITAB.OKOD2 NE "" THEN DO:
   	           CREATE lonefil.
   	           ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	           lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	           lonefil.POVERTIDTILL = TIDREGITAB.OKOD2
   	           lonefil.POVERANTAL = TIDREGITAB.OANT2
   	           lonefil.PDATUM = TIDREGITAB.DATUM
   	           lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	           lonefil.AONR = TIDREGITAB.AONR
   	           lonefil.DELNR = TIDREGITAB.DELNR
   	           lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
   	           lonefil.PAVTAL = avtal
                 lonefil.TID = TRUE
                 lonefil.START = TIDREGITAB.OST2
                 lonefil.SLUT = TIDREGITAB.OSL2
                 lonefil.PSORT = "TI"
                 lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
                 lonefil.POVERANTAL = klock100(lonefil.POVERANTAL).
                 IF berkrav = TRUE THEN lonefil.BERKOLL = TRUE.
                 FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = lonefil.POVERTIDTILL AND OVERKOD.KOD = lonefil.PAVTAL USE-INDEX OVER NO-LOCK NO-ERROR.
                 IF AVAILABLE OVERKOD THEN DO:
                    otidkom = otidkom + " " + OVERKOD.LONKODTEXT + " " + STRING(lonefil.POVERANTAL,">9.99") + " tim".    
                 END.
                                                   
   	        END.   
   	        IF TIDREGITAB.OKOD3 NE "" THEN DO:
   	           CREATE lonefil.
   	           ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	           lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	           lonefil.POVERTIDTILL = TIDREGITAB.OKOD3
   	           lonefil.POVERANTAL = TIDREGITAB.OANT3
   	           lonefil.PDATUM = TIDREGITAB.DATUM
   	           lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	           lonefil.AONR = TIDREGITAB.AONR
   	           lonefil.DELNR = TIDREGITAB.DELNR
   	           lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
   	           lonefil.PAVTAL = avtal
                 lonefil.TID = TRUE                 
                 lonefil.START = TIDREGITAB.OST3
                 lonefil.SLUT = TIDREGITAB.OSL3
                 lonefil.PSORT = "TI"
                 lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
                 lonefil.POVERANTAL = klock100(lonefil.POVERANTAL).
                 IF berkrav = TRUE THEN lonefil.BERKOLL = TRUE.
                 FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = lonefil.POVERTIDTILL AND OVERKOD.KOD = lonefil.PAVTAL USE-INDEX OVER NO-LOCK NO-ERROR.
                 IF AVAILABLE OVERKOD THEN DO:
                    otidkom = otidkom + " " + OVERKOD.LONKODTEXT + " " + STRING(lonefil.POVERANTAL,">9.99") + " tim".    
                 END.                                  
   	        END.
   	        CREATE stanslonefil.
              BUFFER-COPY lonefil TO stanslonefil.
              
              ASSIGN
              stanslonefil.START = TIDREGITAB.START
              stanslonefil.SLUT = TIDREGITAB.SLUT
              stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT)
              stanslonefil.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG
              stanslonefil.HEROSORT = "ÖVERTID"
              stanslonefil.RESMAL = otidkom. 
              
               
                                                  
   	     END.
        END.
        IF TIDREGITAB.TRAKTKOD NE " " AND TIDREGITAB.TRAKTANTAL NE 0
   	  THEN DO TRANSACTION:
   	     CREATE lonefil.
   	     ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	     lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	     lonefil.PTRAKTKOD = TIDREGITAB.TRAKTKOD
   	     lonefil.PTRAKTANTAL = TIDREGITAB.TRAKTANTAL
   	     lonefil.PDATUM = TIDREGITAB.DATUM
   	     lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	     lonefil.AONR = TIDREGITAB.AONR
           lonefil.DELNR = TIDREGITAB.DELNR
           lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
           lonefil.PAVTAL = PERSONALTAB.TRAAVTAL
           lonefil.TID = FALSE
           lonefil.PSORT = "ST"
           lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
           
           CREATE stanslonefil.
           BUFFER-COPY lonefil TO stanslonefil.           
           ASSIGN
           stanslonefil.START = TIDREGITAB.START
           stanslonefil.SLUT = TIDREGITAB.SLUT
           stanslonefil.PLONTILLAGG = TIDREGITAB.TRAKTKOD
           stanslonefil.PLONTILLANTAL = TIDREGITAB.TRAKTANTAL
           stanslonefil.OVERTIDUTTAG = PERSONALTAB.OVERTIDUTTAG           
           stanslonefil.RESMAL = TIDREGITAB.RESMAL
           stanslonefil.HEROSORT = "TILLÄGG".
           stanslonefil.PPAR8 = 0.
           IF TIDREGITAB.ENFLERDAGS NE "" THEN DO:              
              stanslonefil.PPAR8 = 1.
           END.
           FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAKTKOD = stanslonefil.PLONTILLAGG
           AND TRAKTATAB.TRAAVTAL = stanslonefil.PAVTAL USE-INDEX TRAAV NO-LOCK NO-ERROR.
           IF NOT AVAILABLE TRAKTATAB  THEN DO:
              FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAKTKOD = stanslonefil.PLONTILLAGG USE-INDEX TRAAV NO-LOCK NO-ERROR.
           END.
           IF AVAILABLE TRAKTATAB THEN DO: 
              ASSIGN stanslonefil.PLONTILLAGG = TRAKTATAB.VILART.
              stanslonefil.KLARTEXT = TRAKTATAB.FORKL.    
              IF TRAKTATAB.ERSATTNING > 0 THEN stanslonefil.KLARTEXT = stanslonefil.KLARTEXT  + " ( " +  STRING(TRAKTATAB.ERSATTNING)  + " kr) ".        
           END.           
   	  END.
   	  IF TIDREGITAB.BEREDSKAP NE " " /*AND TIDREGITAB.BERANTAL NE 0*/  THEN DO TRANSACTION:
   	     /*ta med pass där de har jobbat hela tid dvs TIDREGITAB.BERANTAL = 0*/
   	     CREATE lonefil.
   	     ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	     lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	     lonefil.PBEREDSKAP = TIDREGITAB.BEREDSKAP
   	     lonefil.PBERANTAL = TIDREGITAB.BERANTAL
   	     lonefil.PDATUM = TIDREGITAB.DATUM
   	     lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	     lonefil.AONR = TIDREGITAB.AONR
           lonefil.DELNR = TIDREGITAB.DELNR
           lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
           lonefil.PAVTAL = PERSONALTAB.BEREDSKAPSAVTAL
           lonefil.START = TIDREGITAB.BEREDSKAPSTART
           lonefil.SLUT = TIDREGITAB.BEREDSKAPSLUT
           lonefil.TID = TRUE           
           lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.           
           lonefil.PBERANTAL = klock100(lonefil.PBERANTAL).
           FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL AND
           BERKOD.BEREDSKAP = lonefil.PBEREDSKAP USE-INDEX BERE NO-LOCK NO-ERROR.  
           IF AVAILABLE BERKOD AND BERKOD.ENHET = "TI" THEN DO:
              ASSIGN lonefil.PSORT = "TI".
           END.
           ELSE ASSIGN lonefil.PSORT = "st".           
           
   	  END.                    
        IF TIDREGITAB.OVERTIDTILL = "TIMANSTÄLLD" AND TIDREGITAB.TOTALT > 0 THEN DO:                                                                     
	         IF TIDREGITAB.PRISTYP = "FRÅNVARO." THEN nytid = nytid.
	         ELSE DO:
   	         CREATE lonefil.
   	         ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
   	         lonefil.PANSTNR = PERSONALTAB.ANSTNR
   	         lonefil.PLONTILLAGG = "012"
   	         lonefil.PLONTILLANTAL = TIDREGITAB.TOTALT
   	         lonefil.PDATUM = TIDREGITAB.DATUM
   	         lonefil.PVECKONUMMER = TIDREGITAB.VECKONUMMER
   	         lonefil.AONR = TIDREGITAB.AONR
   	         lonefil.DELNR = TIDREGITAB.DELNR
   	         lonefil.MANAD = MONTH(TIDREGITAB.DATUM)
   	         lonefil.PAVTAL = avtal
               lonefil.PSORT = "TI"
               lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
               lonefil.PLONTILLANTAL = klock100(lonefil.PLONTILLANTAL).        
               CREATE stanslonefil.
               BUFFER-COPY lonefil TO stanslonefil.
               IF TIDREGITAB.TIDLOG = TRUE THEN DO:
                  ASSIGN
                  stanslonefil.START = TIDREGITAB.START
                  stanslonefil.SLUT = TIDREGITAB.SLUT
                  stanslonefil.TOTALT = klock100(TIDREGITAB.TOTALT)
                  stanslonefil.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG
                  stanslonefil.HEROSORT = "TIMTID".
               END.       
	         END.    
         END.
      END.
      GET NEXT tq.
   END.
   GET NEXT pq.
END.
FOR EACH lonefil WHERE lonefil.PPERSONNUMMER = " ":
  DELETE lonefil.
END.


IF korvar = "" THEN DO:
   /* arbete på veckovila  lart 060 ger plusflex istället -lart skall EJ över till lön*/
   /*FOR EACH lonefil  WHERE lonefil.PLONTILLAGG = "190":
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = lonefil.PPERSONNUMMER NO-LOCK NO-ERROR.
      IF AVAILABLE PERSONALTAB THEN DO:
         FIND FIRST FLEXAVT WHERE FLEXAVT.PERSONALKOD = PERSONALTAB.PERSONALKOD 
         USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.            
         IF AVAILABLE FLEXAVT AND FLEXAVT.FLEXTID = TRUE THEN DO:
            CREATE FLBET.
            ASSIGN
            FLBET.PERSONALKOD = PERSONALTAB.PERSONALKOD
            FLBET.DATUM = lonefil.PDATUM
            FLBET.TIMMAR = lonefil.PLONTILLANTAL
            FLBET.ANVANDARE = "Arb.u.veckovila".
            FIND FIRST FLEXSALDO WHERE FLEXSALDO.PERSONALKOD =  PERSONALTAB.PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.
            IF NOT AVAILABLE FLEXSALDO THEN DO:
               CREATE FLEXSALDO.              
               ASSIGN FLEXSALDO.PERSONALKOD = PERSONALTAB.PERSONALKOD.
            END.         
            ASSIGN FLBET.ACCFORE = FLEXSALDO.PERIODFLEX.   
            nytid = FLEXSALDO.PERIODFLEX.
            RUN TIMSEK.P.
            seku = sekunder.
            nytid = FLBET.TIMMAR.
            RUN TIMSEK.P.
            sekunder = seku + sekunder.
            RUN FSEKTIM.P.
            ASSIGN FLEXSALDO.PERIODFLEX = fnytid  FLBET.ACCEFTER = fnytid. 
         END.
      END.
      
      DELETE lonefil.
   END.*/
   /* arbete på veckovila  lart 060 ger plusflex istället -lart skall EJ över till lön
   lontillagg = 190 vilart = 191
   FOR EACH stanslonefil WHERE stanslonefil.PLONTILLAGG = "191": 
      DELETE  stanslonefil.  
   END.
   FOR EACH stanslonefil WHERE stanslonefil.PLONTILLAGG = "190": 
      DELETE  stanslonefil.  
   END.*/
END.

FOR EACH FLBET WHERE FLBET.DATUM = vkdatum AND FLBET.ANVANDARE = "flexkörning" AND FLBET.ACCEFTER = -10 NO-LOCK:
   /*löneavdrag under - 10 timmar flex*/
   FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = FLBET.PERSONALKOD AND PERSONALTAB.AKTIV = TRUE
   AND PERSONALTAB.PERSMASK = TRUE  NO-LOCK NO-ERROR.
   IF AVAILABLE PERSONALTAB THEN DO:
      CREATE lonefil.
      ASSIGN lonefil.PPERSONNUMMER = PERSONALTAB.PERSONNUMMER
      lonefil.PANSTNR = PERSONALTAB.ANSTNR
      lonefil.PLONTILLAGG = "619"
      lonefil.PLONTILLANTAL = FLBET.TIMMAR
      lonefil.PDATUM = FLBET.DATUM  
     /* lonefil.AONR = TIDREGITAB.AONR
      lonefil.DELNR = TIDREGITAB.DELNR*/
      lonefil.MANAD = MONTH(FLBET.DATUM)
      lonefil.PAVTAL = ""
      lonefil.PSORT = "TI"
      lonefil.NAMN = PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.               
      lonefil.PLONTILLANTAL = klock100(lonefil.PLONTILLANTAL).
      CREATE stanslonefil.
      BUFFER-COPY lonefil TO stanslonefil.
      stanslonefil.HEROSORT = "LÖNEAVDRAG".
      
   END.   
   

END.

FOR EACH lonefil where lonefil.PLONTILLAGG NE "":   
   FIND FIRST LONTILL WHERE LONTILL.LONTILLAGG = lonefil.PLONTILLAGG
   AND LONTILL.KOD = lonefil.PAVTAL USE-INDEX LON NO-LOCK NO-ERROR.
   IF AVAILABLE LONTILL AND SUBSTRING(LONTILL.TYPKOD,1,3) = "BIL" THEN DELETE lonefil.
   ELSE IF NOT AVAILABLE LONTILL THEN DO:
      FIND FIRST LONTILL WHERE LONTILL.LONTILLAGG = lonefil.PLONTILLAGG USE-INDEX LON NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL AND SUBSTRING(LONTILL.TYPKOD,1,3) = "BIL" THEN DELETE lonefil.
      ELSE IF AVAILABLE LONTILL THEN DO: 
         ASSIGN lonefil.PLONTILLAGG = LONTILL.VILART.         
      END.
   END.
   ELSE IF AVAILABLE LONTILL THEN DO: 
      ASSIGN lonefil.PLONTILLAGG = LONTILL.VILART.      
   END.
   
END.
FOR EACH lonefil where lonefil.POVERTIDTILL NE "":
   FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = lonefil.POVERTIDTILL
   AND OVERKOD.KOD = lonefil.PAVTAL USE-INDEX OVER NO-LOCK NO-ERROR.
   IF NOT AVAILABLE OVERKOD THEN DO:
      FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = lonefil.POVERTIDTILL USE-INDEX OVER NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE OVERKOD THEN DO: 
      ASSIGN lonefil.POVERTIDTILL = OVERKOD.VILART.      
        /*Övertid-beredskap*/
      IF lonefil.BERKOLL = TRUE THEN DO:
         IF lonefil.POVERTIDTILL = "200"  THEN lonefil.POVERTIDTILL = "260".
         IF lonefil.POVERTIDTILL = "201"  THEN lonefil.POVERTIDTILL = "261".
         IF lonefil.POVERTIDTILL = "202"  THEN lonefil.POVERTIDTILL = "262".
         IF lonefil.POVERTIDTILL = "215"  THEN lonefil.POVERTIDTILL = "263".
         IF lonefil.POVERTIDTILL = "216"  THEN lonefil.POVERTIDTILL = "264".
         IF lonefil.POVERTIDTILL = "217"  THEN lonefil.POVERTIDTILL = "265".
      END.
      
   END.
END.

      

EMPTY TEMP-TABLE persber NO-ERROR. 

FOR EACH lonefil WHERE  lonefil.PBEREDSKAP NE "" BY lonefil.PPERSONNUMMER BY lonefil.PDATUM BY lonefil.START BY lonefil.SLUT:
   
   FIND LAST persber  WHERE persber.PPERSONNUMMER = lonefil.PPERSONNUMMER AND persber.bersldat = lonefil.PDATUM USE-INDEX PPERSONNUMMER  NO-ERROR.
   IF NOT AVAILABLE persber THEN DO:
      FIND LAST persber  WHERE persber.PPERSONNUMMER = lonefil.PPERSONNUMMER AND persber.bersldat = (lonefil.PDATUM - 1) USE-INDEX PPERSONNUMMER NO-ERROR.
      IF NOT AVAILABLE persber THEN DO:              
         CREATE persber.
         ASSIGN 
         persber.PPERSONNUMMER = lonefil.PPERSONNUMMER
         persber.berstdat = lonefil.PDATUM
         persber.bersldat = lonefil.PDATUM
         persber.bersttid = lonefil.START
         persber.bersltid = lonefil.SLUT                           
         persber.blart1 = lonefil.PBEREDSKAP
         persber.bertid1 = lonefil.PBERANTAL.                                      
      END.
      ELSE DO:
         IF lonefil.PDATUM = (persber.bersldat + 1)  AND persber.bersltid = 24 AND lonefil.START = 00 THEN DO:
            ASSIGN 
            persber.bersldat = lonefil.PDATUM
            persber.bersltid = lonefil.SLUT.
            IF lonefil.PBEREDSKAP = persber.blart1 THEN DO:
               persber.bertid1 = persber.bertid1 + lonefil.PBERANTAL.
            END.            
            ELSE IF persber.blart2 = "" THEN DO:
               ASSIGN 
               persber.blart2 = lonefil.PBEREDSKAP
               persber.bertid2 = lonefil.PBERANTAL.
            END.   
            ELSE IF lonefil.PBEREDSKAP = persber.blart2 THEN DO:
               persber.bertid2 = persber.bertid2 + lonefil.PBERANTAL.
            END.
            ELSE IF persber.blart3 = "" THEN DO:
               ASSIGN 
               persber.blart3 = lonefil.PBEREDSKAP
               persber.bertid3 = lonefil.PBERANTAL.
            END.
            ELSE IF lonefil.PBEREDSKAP = persber.blart3 THEN DO:
               persber.bertid3 = persber.bertid3 + lonefil.PBERANTAL.
            END.       
            
         END.      
         ELSE DO:
            CREATE persber.
            ASSIGN 
            persber.PPERSONNUMMER = lonefil.PPERSONNUMMER
            persber.berstdat = lonefil.PDATUM
            persber.bersldat = lonefil.PDATUM
            persber.bersttid = lonefil.START
            persber.bersltid = lonefil.SLUT
            persber.blart1 = lonefil.PBEREDSKAP
            persber.bertid1 = lonefil.PBERANTAL.
        END.
      END.      
   END.
   ELSE DO:
      IF persber.bersldat = lonefil.PDATUM THEN DO:
         skapnyber = FALSE.
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = lonefil.PPERSONNUMMER AND PERSONALTAB.AKTIV = TRUE USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.      
         IF NOT AVAILABLE PERSONALTAB  THEN FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = lonefil.PPERSONNUMMER  USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.            
         persrec = RECID(PERSONALTAB).   
         regdatum = lonefil.PDATUM.      
         RUN REGVEC.P.
         RUN SLUTARB.P.
         IF lonefil.START = persber.bersltid THEN persber.bersltid = lonefil.SLUT.
         ELSE IF persber.bersltid GE regstart AND lonefil.START = regslut THEN persber.bersltid = lonefil.SLUT.
         ELSE IF regstart = regslut THEN skapnyber = TRUE.
         /*arbetstid 8-17 men beredskap 16-24 0-7 inte bra 
         hårdkodning*/         
         ELSE IF regstart = 8 AND regslut = 17 THEN DO:  
            IF persber.bersltid GE 7 AND persber.bersltid LE 8  THEN persber.bersltid = lonefil.SLUT.
            ELSE IF persber.bersltid < 7  THEN skapnyber = TRUE.            
            ELSE IF  lonefil.START GE 16 AND lonefil.START LE 17 THEN persber.bersltid = lonefil.SLUT.
            ELSE IF  lonefil.START > 17 THEN skapnyber = TRUE.
            ELSE IF lonefil.START > regstart AND lonefil.START < regslut THEN persber.bersltid = lonefil.SLUT.
            ELSE skapnyber = TRUE.  
         END.             
         ELSE IF persber.bersltid < regstart THEN  skapnyber = TRUE.
         ELSE IF persber.bersltid > regslut THEN  skapnyber = TRUE.
         ELSE IF lonefil.START > regstart AND lonefil.START < regslut THEN persber.bersltid = lonefil.SLUT.
         
         IF skapnyber = TRUE THEN DO:
            CREATE persber.
            ASSIGN 
            persber.PPERSONNUMMER = lonefil.PPERSONNUMMER
            persber.berstdat = lonefil.PDATUM
            persber.bersldat = lonefil.PDATUM
            persber.bersttid = lonefil.START
            persber.bersltid = lonefil.SLUT
            persber.blart1 = lonefil.PBEREDSKAP
            persber.bertid1 = lonefil.PBERANTAL.            
         END.     
         ELSE DO:
            IF lonefil.PBEREDSKAP = persber.blart1 THEN DO:
               persber.bertid1 = persber.bertid1 + lonefil.PBERANTAL.
            END.            
            ELSE IF persber.blart2 = "" THEN DO:
               ASSIGN 
               persber.blart2 = lonefil.PBEREDSKAP
               persber.bertid2 = lonefil.PBERANTAL.
            END.   
            ELSE IF lonefil.PBEREDSKAP = persber.blart2 THEN DO:
               persber.bertid2 = persber.bertid2 + lonefil.PBERANTAL.
            END.
            ELSE IF persber.blart3 = "" THEN DO:
               ASSIGN 
               persber.blart3 = lonefil.PBEREDSKAP
               persber.bertid3 = lonefil.PBERANTAL.
            END.
            ELSE IF lonefil.PBEREDSKAP = persber.blart3 THEN DO:
               persber.bertid3 = persber.bertid3 + lonefil.PBERANTAL.
            END.
         END.    
      END.
      ELSE DO:
         IF lonefil.PDATUM = (persber.bersldat + 1)  AND persber.bersltid = 24 AND lonefil.START = 00 THEN DO:
            ASSIGN 
            persber.bersldat = lonefil.PDATUM
            persber.bersltid = lonefil.SLUT.
            IF lonefil.PBEREDSKAP = persber.blart1 THEN DO:
               persber.bertid1 = persber.bertid1 + lonefil.PBERANTAL.
            END.            
            ELSE IF persber.blart2 = "" THEN DO:
               ASSIGN 
               persber.blart2 = lonefil.PBEREDSKAP
               persber.bertid2 = lonefil.PBERANTAL.
            END.   
            ELSE IF lonefil.PBEREDSKAP = persber.blart2 THEN DO:
               persber.bertid2 = persber.bertid2 + lonefil.PBERANTAL.
            END.
            ELSE IF persber.blart3 = "" THEN DO:
               ASSIGN 
               persber.blart3 = lonefil.PBEREDSKAP
               persber.bertid3 = lonefil.PBERANTAL.
            END.
            ELSE IF lonefil.PBEREDSKAP = persber.blart3 THEN DO:
               persber.bertid3 = persber.bertid3 + lonefil.PBERANTAL.
            END. 
         END.      
         ELSE DO:
            CREATE persber.
            ASSIGN 
            persber.PPERSONNUMMER = lonefil.PPERSONNUMMER
            persber.berstdat = lonefil.PDATUM
            persber.bersldat = lonefil.PDATUM
            persber.bersttid = lonefil.START
            persber.bersltid = lonefil.SLUT
            persber.blart1 = lonefil.PBEREDSKAP
            persber.bertid1 = lonefil.PBERANTAL.
        END.
     END.       
   END.
END.
FOR EACH persber WHERE NO-LOCK:
   IF persber.blart1 NE "" THEN DO:
      FIND FIRST BERKOD WHERE BERKOD.BEREDSKAP = persber.blart1   USE-INDEX BERE NO-LOCK NO-ERROR.         
      IF AVAILABLE BERKOD THEN DO:
         persber.blart1 = BERKOD.VILART.
      END.
   END.
   IF persber.blart2 NE "" THEN DO:
      FIND FIRST BERKOD WHERE BERKOD.BEREDSKAP = persber.blart2   USE-INDEX BERE NO-LOCK NO-ERROR.         
      IF AVAILABLE BERKOD THEN DO:
         persber.blart2 = BERKOD.VILART.
      END.
   END.
   IF persber.blart3 NE "" THEN DO:
      FIND FIRST BERKOD WHERE BERKOD.BEREDSKAP = persber.blart3   USE-INDEX BERE NO-LOCK NO-ERROR.         
      IF AVAILABLE BERKOD THEN DO:
         persber.blart3 = BERKOD.VILART.
      END.
   END.      
         
   CREATE stanslonefil.  
   ASSIGN
   stanslonefil.PPERSONNUMMER = persber.PPERSONNUMMER
   stanslonefil.STARTDATUM = persber.berstdat
   stanslonefil.SLUTDATUM = persber.bersldat
   stanslonefil.BERSTART = persber.bersttid
   stanslonefil.BERSLUT = persber.bersltid 
   stanslonefil.HEROSORT = "BEREDSKAP".
   IF persber.blart1 NE "" THEN DO:
      stanslonefil.resmal  = persber.blart1 + " " + STRING(persber.bertid1,">9.99") + " tim".
   END.
   IF persber.blart2 NE "" THEN DO:
      stanslonefil.resmal  = stanslonefil.resmal + " " + persber.blart2 + " " + STRING(persber.bertid2,">9.99") + " tim".
   END.
   IF persber.blart3 NE "" THEN DO:
      stanslonefil.resmal  = stanslonefil.resmal + " " + persber.blart3 + " " + STRING(persber.bertid3,">9.99") + " tim".
   END.   
             
END.
FOR EACH stanslonefil:

   FIND FIRST PERSONALTAB WHERE PERSONALTAB.AKTIV = TRUE AND PERSONALTAB.PERSONNUMMER = stanslonefil.PPERSONNUMMER NO-LOCK NO-ERROR.
   IF NOT AVAILABLE PERSONALTAB THEN DO:
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = stanslonefil.PPERSONNUMMER NO-LOCK NO-ERROR.
   END.      
   FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
   FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR NO-LOCK NO-ERROR.
   FIND FIRST JURPERS WHERE JURPERS.JUDID = AVDELNING.POSTANST NO-LOCK NO-ERROR.
   IF AVAILABLE JURPERS THEN DO:
      ASSIGN stanslonefil.VIJUDID = JURPERS.VIJUDID.
   END.
END.

FOR EACH lonefil where lonefil.PBEREDSKAP NE "":
   FIND FIRST BERKOD WHERE BERKOD.BEREDSKAP = lonefil.PBEREDSKAP 
   AND BERKOD.BEREDSKAPSAVTAL = lonefil.PAVTAL USE-INDEX BERE NO-LOCK NO-ERROR.
   IF NOT AVAILABLE BERKOD THEN DO:
      FIND FIRST BERKOD WHERE BERKOD.BEREDSKAP = lonefil.PBEREDSKAP USE-INDEX BERE NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE BERKOD THEN DO: 
      ASSIGN lonefil.PBEREDSKAP = BERKOD.VILART.      
   END.   
   
END.
FOR EACH lonefil where lonefil.PTRAKTKOD NE "":
   FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAKTKOD = lonefil.PTRAKTKOD
   AND TRAKTATAB.TRAAVTAL = lonefil.PAVTAL USE-INDEX TRAAV NO-LOCK NO-ERROR.
   IF NOT AVAILABLE TRAKTATAB  THEN DO:
      FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAKTKOD = lonefil.PTRAKTKOD USE-INDEX TRAAV NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE TRAKTATAB THEN DO: 
      ASSIGN lonefil.PTRAKTKOD = TRAKTATAB.VILART.

   END.
END.

FOR EACH lonefil :
   lonefil.MANAD = MONTH(lonefil.PDATUM).   
END.


FOR EACH lonefil BREAK BY lonefil.PPERSONNUMMER BY lonefil.PLONTILLAGG BY lonefil.MANAD:  
   ACCUMULATE lonefil.PLONTILLANTAL (TOTAL BY lonefil.PPERSONNUMMER BY lonefil.PLONTILLAGG BY lonefil.MANAD).
   IF LAST-OF(lonefil.MANAD) THEN DO:
      IF lonefil.PLONTILLAGG NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSONNUMMER = lonefil.PPERSONNUMMER
         pa90filen.PANSTNR = lonefil.PANSTNR               
         pa90filen.UTDATUM = lonefil.PDATUM
         pa90filen.MANAD = lonefil.MANAD
         pa90filen.PTILLAGG = lonefil.PLONTILLAGG
         pa90filen.PSORT = lonefil.PSORT
         pa90filen.PANTAL = (ACCUM TOTAL BY lonefil.MANAD  lonefil.PLONTILLANTAL).
         
         /* avrundning på ob till jämna halvtimmar per löneart*/
         IF pa90filen.PTILLAGG = "310" OR pa90filen.PTILLAGG = "311" OR pa90filen.PTILLAGG = "312" THEN DO:
           IF ( pa90filen.PANTAL  - TRUNCATE(pa90filen.PANTAL ,0)) > 0 AND ( pa90filen.PANTAL  - TRUNCATE(pa90filen.PANTAL ,0)) < 0.50 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL ,0) + 0.50.         
           ELSE IF ( pa90filen.PANTAL  - TRUNCATE(pa90filen.PANTAL ,0)) > 0.50  THEN pa90filen.PANTAL  = TRUNCATE(pa90filen.PANTAL ,0) + 1.
         END.
      END.     
   END.   
END.
FOR EACH lonefil BREAK BY lonefil.PPERSONNUMMER BY lonefil.POVERTIDTILL BY lonefil.MANAD :     
   ACCUMULATE lonefil.POVERANTAL (TOTAL BY lonefil.PPERSONNUMMER BY lonefil.POVERTIDTILL BY lonefil.MANAD).    
   IF LAST-OF(lonefil.MANAD) THEN DO:
      IF lonefil.POVERTIDTILL NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSONNUMMER = lonefil.PPERSONNUMMER
         pa90filen.PANSTNR = lonefil.PANSTNR
         pa90filen.UTDATUM = lonefil.PDATUM
         pa90filen.MANAD = lonefil.MANAD
         pa90filen.PTILLAGG = lonefil.POVERTIDTILL
         pa90filen.PSORT = lonefil.PSORT
         /*pa90filen.POMR = lonefil.POMR*/
         /*pa90filen.ORSAK = "ÖTID"*/
         pa90filen.PANTAL = (ACCUM TOTAL BY  lonefil.MANAD lonefil.POVERANTAL).
         
         /*avrundning övertid
         0 - 0.124 = 0
         0.125 - 0.374 = 0.25
         0.375 - 0.624 = 0.50
         0.625 - 0.874 = 0.75
         0.875 - 0.99  = 1      */
         
         IF ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) > 0 AND ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) < 0.125 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL,0).
         ELSE IF ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) GE 0.125 AND ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) < 0.375 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL,0) + 0.25.
         ELSE IF ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) GE 0.375 AND ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) < 0.625 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL,0) + 0.5.
         ELSE IF ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) GE 0.625 AND ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) < 0.875 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL,0) + 0.75.                  
         ELSE IF ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) GE 0.875 AND ( pa90filen.PANTAL - TRUNCATE(pa90filen.PANTAL,0)) < 0.99 THEN pa90filen.PANTAL = TRUNCATE(pa90filen.PANTAL,0) + 1.                  
         IF pa90filen.PANTAL = 0 THEN DELETE pa90filen.
      END.     
   END.   
END.
FOR EACH lonefil BREAK BY lonefil.PPERSONNUMMER BY lonefil.PTRAKTKOD BY lonefil.MANAD :     
   ACCUMULATE lonefil.PTRAKTANTAL (TOTAL BY lonefil.PPERSONNUMMER BY lonefil.PTRAKTKOD BY lonefil.MANAD).    
   IF LAST-OF(lonefil.MANAD) THEN DO:
      IF lonefil.PTRAKTKOD NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSONNUMMER = lonefil.PPERSONNUMMER
         pa90filen.PANSTNR = lonefil.PANSTNR
         pa90filen.UTDATUM = lonefil.PDATUM
         pa90filen.MANAD = lonefil.MANAD
         pa90filen.PTILLAGG = lonefil.PTRAKTKOD
         pa90filen.PSORT = lonefil.PSORT         
         pa90filen.PANTAL = (ACCUM TOTAL BY  lonefil.MANAD lonefil.PTRAKTANTAL).
         

      END.      
   END.   
END.
FOR EACH lonefil BREAK BY lonefil.PPERSONNUMMER BY lonefil.PBEREDSKAP BY lonefil.MANAD BY lonefil.AONR BY lonefil.DELNR :     
   ACCUMULATE lonefil.PBERANTAL (TOTAL BY lonefil.PPERSONNUMMER BY lonefil.PBEREDSKAP BY lonefil.MANAD BY lonefil.AONR BY lonefil.DELNR).    
   IF LAST-OF(lonefil.DELNR) THEN DO:
      IF lonefil.PBEREDSKAP NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSONNUMMER = lonefil.PPERSONNUMMER
         pa90filen.PANSTNR = lonefil.PANSTNR
         pa90filen.UTDATUM = lonefil.PDATUM
         pa90filen.MANAD = lonefil.MANAD
         pa90filen.PTILLAGG = lonefil.PBEREDSKAP
         pa90filen.PSORT = lonefil.PSORT         
         pa90filen.ORSAK = "BERE"
         pa90filen.AONR = lonefil.AONR
         pa90filen.DELNR = lonefil.DELNR
         pa90filen.PANTAL = (ACCUM TOTAL BY  lonefil.DELNR lonefil.PBERANTAL).
         

      END.      
   END.   
END.


FOR EACH pa90filen:
      
   IF pa90filen.PSORT = "KR"  THEN DO:
      ASSIGN
      pa90filen.PKR = pa90filen.PANTAL 
      pa90filen.PANTAL = 0.
   END.
END.


IF  Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
   FOR EACH pa90filen:               
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.AKTIV = TRUE AND PERSONALTAB.PERSONNUMMER = pa90filen.PPERSONNUMMER NO-LOCK NO-ERROR.
      IF NOT AVAILABLE PERSONALTAB THEN DO:
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = pa90filen.PPERSONNUMMER NO-LOCK NO-ERROR.
      END.      
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
      FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR NO-LOCK NO-ERROR.
      FIND FIRST JURPERS WHERE JURPERS.JUDID = AVDELNING.POSTANST NO-LOCK NO-ERROR.
      IF AVAILABLE JURPERS THEN DO:
         ASSIGN pa90filen.VIJUDID = JURPERS.VIJUDID.
      END.
   END.   
END.
/*födda 2000-2029 ska ha årta som börjar på 20- inte 19  Lena 20191112*/
FOR EACH pa90filen WHERE LENGTH(pa90filen.PPERSONNUMMER) = 10:
   IF SUBSTRING(pa90filen.PPERSONNUMMER,1,1) = "0" THEN pa90filen.PPERSONNUMMER = "20" + pa90filen.PPERSONNUMMER.
   ELSE IF SUBSTRING(pa90filen.PPERSONNUMMER,1,1) = "1" THEN pa90filen.PPERSONNUMMER = "20" + pa90filen.PPERSONNUMMER.
   ELSE IF SUBSTRING(pa90filen.PPERSONNUMMER,1,1) = "2" THEN pa90filen.PPERSONNUMMER = "20" + pa90filen.PPERSONNUMMER.
   ELSE pa90filen.PPERSONNUMMER = "19" + pa90filen.PPERSONNUMMER.
END.   


IF korvar = "" THEN DO:
   prognamn3 = prognamn5 + "pa2.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.   
END.
ELSE DO:
   prognamn3 = prognamn5 + "pa2omk.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.   
END.
FOR EACH pa90filen BY pa90filen.PPERSONNUMMER BY pa90filen.PTILLAGG:
  EXPORT pa90filen.
END. 


FOR EACH pa90filen:
   
    
   /*nya hogialarter*/      
   IF pa90filen.PTILLAGG = "844" THEN pa90filen.PKR = (-1) * pa90filen.PKR.  /* avdrag traktamente utland kronor*/   
   IF pa90filen.PTILLAGG = "950" THEN pa90filen.PKR = (-1) * pa90filen.PKR.  /* löneavdrag mobil kronor*/

END.

EMPTY TEMP-TABLE pa90fil NO-ERROR. 


RUN sammut_UI (INPUT 2).
{EUROPEANAMERICAN.I}





   
  
   
