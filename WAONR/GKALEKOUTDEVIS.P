/*GKALEKOUTDEVIS.P*/
DEFINE TEMP-TABLE felmeddtemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.
{TIDUTTT.I}

DEFINE TEMP-TABLE tidutstart
   FIELD UT AS CHARACTER FORMAT "X(132)".
DEFINE TEMP-TABLE tidutslut
   FIELD UT AS CHARACTER FORMAT "X(132)".
DEFINE TEMP-TABLE slutut
   FIELD VDATUM AS DATE
   FIELD FTG AS CHARACTER
   FIELD DEBKRED AS LOGICAL 
   FIELD FELDEBKRED AS LOGICAL
   FIELD ANTAL AS DECIMAL 
   FIELD BELOPP AS DECIMAL       
   FIELD K1 AS CHARACTER
   FIELD K2 AS CHARACTER
   FIELD K3 AS CHARACTER
   FIELD K4 AS CHARACTER
   FIELD K5 AS CHARACTER
   FIELD BIL AS CHARACTER
   FIELD K2POS8 AS CHARACTER
   INDEX ORG IS PRIMARY FTG DEBKRED K1 K2 K3 K4 K5.
DEFINE INPUT PARAMETER feltider AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER vkdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER skarpvar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR slutut.

DEFINE VARIABLE filut AS CHARACTER NO-UNDO.
DEFINE VARIABLE filutkopia AS CHARACTER NO-UNDO.

DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnk AS CHARACTER NO-UNDO.


DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnrstart AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE utnrslut AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcolstart AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcolslut AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE ekofil AS CHARACTER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.              
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE summmallab AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallabch AS CHARACTER NO-UNDO.
DEFINE VARIABLE summmallaant AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallaantch AS CHARACTER NO-UNDO.
DEFINE VARIABLE beloppchar AS CHARACTER NO-UNDO.
DEFINE VARIABLE nolldummy AS CHARACTER NO-UNDO.
DEFINE VARIABLE verifnummervar AS INTEGER NO-UNDO.
DEFINE VARIABLE ftpanv AS CHARACTER NO-UNDO.
DEFINE VARIABLE ftplord AS CHARACTER NO-UNDO. 
{AMERICANEUROPEAN.I}
FOR EACH INTERNFAKTKOLL WHERE YEAR(INTERNFAKTKOLL.VDATUM) = YEAR(vkdatum) NO-LOCK:
   verifnummervar = verifnummervar + 1.   
END.
verifnummervar = verifnummervar + 1.
nolldummy = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000".

FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
DEFINE VARIABLE cklockan AS CHARACTER NO-UNDO.
DEFINE VARIABLE cklockan2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE cklockan3 AS CHARACTER NO-UNDO.
DEFINE VARIABLE cklockan4 AS CHARACTER NO-UNDO.
cklockan = REPLACE(STRING(TIME,"hh:mm:ss"),":","").
cklockan2 = REPLACE(STRING(TIME + 5,"hh:mm:ss"),":","").
cklockan3 = REPLACE(STRING(TIME + 10,"hh:mm:ss"),":","").
cklockan4 = REPLACE(STRING(TIME + 15,"hh:mm:ss"),":","").
IF Guru.Konstanter:globforetag = "ELPA" THEN DO:        
   ASSIGN
   prognamn = "\\pc112\DELAD\PRO9\guru\EXPORT\"
   prognamnk = "\\pc112\DELAD\PRO9\guru\EXKOPIA\". 
END.
ELSE IF Guru.Konstanter:globforetag = "GKAL" THEN DO:
   ASSIGN
   prognamn = "d:\DELAD\server\PRO9s\EXPORT\"
   prognamnk = "d:\DELAD\server\PRO9s\EXPORT\EXKOPIA\".    
   
END.

ASSIGN
nrcolstart[1] = 1
nrcolstart[2] = 2
nrcolstart[3] = 3
nrcolstart[4] = 4
nrcolstart[5] = 5
nrcolstart[6] = 6
nrcolstart[7] = 7
nrcolstart[8] = 8.
ASSIGN
nrcolslut[1] = 1
nrcolslut[2] = 2
nrcolslut[3] = 3
nrcolslut[4] = 4
nrcolslut[5] = 5
nrcolslut[6] = 6
nrcolslut[7] = 7
nrcolslut[8] = 8
nrcolslut[9]  = 9
nrcolslut[10] = 10
nrcolslut[11] = 11
nrcolslut[12] = 12
nrcolslut[13] = 13
nrcolslut[14] = 14
nrcolslut[15] = 15.
ASSIGN
nrcol[1] = 1
nrcol[2] = 2
nrcol[3] = 3
nrcol[4] = 4
nrcol[5] = 5
nrcol[6] = 6
nrcol[7] = 7
nrcol[8] = 8
nrcol[9]  = 9
nrcol[10] = 10
nrcol[11] = 11
nrcol[12] = 12
nrcol[13] = 13
nrcol[14] = 14
nrcol[15] = 15
nrcol[16] = 16
nrcol[17] = 17
nrcol[18] = 18
nrcol[19] = 19
nrcol[20] = 20
nrcol[21] = 21
nrcol[22] = 22
nrcol[23] = 23
nrcol[24] = 24
nrcol[25] = 25
nrcol[26] = 26.
ASSIGN
breddantal = 8   /*antal kolumner*/
bredd[1] = 2
bredd[2] = 3
bredd[3] = 5
bredd[4] = 3
bredd[5] = 6
bredd[6] = 6
bredd[7] = 3
bredd[8] = 222.
ASSIGN
i = 2.     
utnrstart[1] = 1.
DO WHILE i <= breddantal:             
   utnrstart[i] = utnrstart[i - 1] + bredd[i - 1].            
   i = i + 1.
END.
ASSIGN
breddantal = 15   /*antal kolumner*/
bredd[1] = 2
bredd[2] = 10
bredd[3] = 10
bredd[4] = 10
bredd[5] = 10 
bredd[6] = 18 
bredd[7] = 18 
bredd[8]  = 18 
bredd[9]  = 10 
bredd[10] = 10 
bredd[11] = 10 
bredd[12] = 10 
bredd[13] = 18 
bredd[14] = 18 
bredd[15] = 78. 
ASSIGN
i = 2.     
utnrslut[1] = 1.
DO WHILE i <= breddantal:             
   utnrslut[i] = utnrslut[i - 1] + bredd[i - 1].            
   i = i + 1.
END.

ASSIGN
breddantal = 26   /*antal kolumner*/
bredd[1] = 2
bredd[2] = 5
bredd[3] = 10
bredd[4] = 3
bredd[5] = 3 
bredd[6] = 9 
bredd[7] = 2 
bredd[8] = 2 
bredd[9] = 2 
bredd[10] = 2 
bredd[11] = 10 
bredd[12] = 10 
bredd[13] = 10
bredd[14] = 10 
bredd[15] = 10 
bredd[16] = 10 
bredd[17] = 10 
bredd[18] = 10 
bredd[19] = 10 
bredd[20] = 10 
bredd[21] = 15 
bredd[22] = 15 
bredd[23] = 11 
bredd[24] = 12 
bredd[25] = 36 
bredd[26] = 21. 
ASSIGN
i = 2.     
utnr[1] = 1.
DO WHILE i <= breddantal:             
   utnr[i] = utnr[i - 1] + bredd[i - 1].            
   i = i + 1.
END.
RUN startft_UI (INPUT "N6\",INPUT "ELNAT",INPUT "100").
cklockan = cklockan2.
RUN startft_UI (INPUT "M7\",INPUT "HANDEL",INPUT "180").
cklockan = cklockan3.
RUN startft_UI (INPUT "V2\",INPUT "VARME",INPUT "105").
cklockan = cklockan4.
/*SÄVSJÖ*/
RUN startft_UI (INPUT "SEAB\",INPUT "SEAB",INPUT "150").
{EUROPEANAMERICAN.I}
PROCEDURE startft_UI:
   DEFINE INPUT PARAMETER mappvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER ftgvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER ftgnr AS CHARACTER NO-UNDO.
   ASSIGN
   filut = ""
   filutkopia = ""
   summmallab      = 0
   summmallabch    = ""
   summmallaant    = 0
   summmallaantch  = "".
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   EMPTY TEMP-TABLE tidutstart NO-ERROR.
   EMPTY TEMP-TABLE tidutslut NO-ERROR. 
   ASSIGN
   filut = prognamn + mappvar 
   filutkopia = prognamnk + mappvar.
   IF SEARCH(filut) = ? THEN DO:
      OS-CREATE-DIR VALUE(filut).
   END.
   IF SEARCH(filutkopia) = ? THEN DO:
      OS-CREATE-DIR VALUE(filutkopia).
   END.
   ASSIGN
   ekofil = ftgvar + STRING(TODAY,"99999999") + cklockan + ".txt".
   ASSIGN
   filut = filut + ekofil 
   filutkopia = filutkopia + ekofil.
   RUN poster_UI (INPUT ftgnr).
   /*RUN ftp_UI.*/
   
   RUN NetftpS_UI.
  
END.

PROCEDURE NetftpS_UI :
   DEFINE VARIABLE FtpNet AS Helpers.FtpNet.
   DEFINE VARIABLE ftpip AS CHARACTER NO-UNDO.
   DEFINE VARIABLE prognamn2 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE FtpResult AS CHARACTER NO-UNDO.
   ftpNet = NEW Helpers.FtpNet().
   ftpanv =  CHR(103) + CHR(101) + CHR(112). 
   ftplord = CHR(118) + CHR(115) + CHR(102) + CHR(49) + CHR(55) + CHR(103) + CHR(103) + CHR(114) .
   ftpip = "192.168.69.35:2121". 
   prognamn2 = "ftp://192.168.69.35:2121/InEconoma/" + ekofil.
   FtpResult = ftpNet:Skicka(ftpanv, ftplord,prognamn2,filut).
   
   OUTPUT TO D:\delad\server\PRO9S\autotid.txt APPEND.
   PUT UNFORMATTED  STRING(TODAY) STRING(TIME,"hh:mm:ss")  " ekonomi ftp " FtpResult SKIP.
   OUTPUT CLOSE.
   
   
   
END PROCEDURE.


PROCEDURE ftp_UI:
   /*InGuru InHR InEconoma*/
   IF skarpvar = FALSE THEN RETURN.
   /*192.121.243.27*/
   ASSIGN   
        ftpanv =  CHR(103) + CHR(101) + CHR(112) 
        ftplord = CHR(118) + CHR(115) + CHR(102) + CHR(49) + CHR(55) + CHR(103) + CHR(103) + CHR(114) . 
        RUN FTPFILE.P (INPUT ftpanv, 
                        INPUT ftplord,
                        INPUT TRUE, INPUT 1,
                   INPUT filut, INPUT "/InEconoma/" + ekofil,
                   INPUT "192.168.69.34", OUTPUT TABLE felmeddtemp).   
                   /*Anders Olsson Elpool i Umeå AB  30 maj 2022 13:22:42 
                    192.168.69.35:2121 SKA BYTAS
                    CHR(49) + CHR(57) + CHR(50) + CHR(46) + CHR(49) + CHR(54) + CHR(56) + CHR(46) + CHR(54) + CHR(57) + CHR(46) + CHR(51) + CHR(53) + CHR(58) + CHR(50) + CHR(49) + CHR(50) + CHR(49)
                   */                 
   OUTPUT TO D:\delad\server\PRO9S\autotid.txt APPEND.
   PUT "ekonomi ftp" SKIP.
   FOR EACH felmeddtemp:
      PUT UNFORMATTED felmeddtemp.FELMEDD SKIP.
   END.
   OUTPUT CLOSE.
   
   
   FIND FIRST felmeddtemp NO-LOCK NO-ERROR.
   IF AVAILABLE felmeddtemp THEN DO:
      IF felmeddtemp.FELMEDD = 'Fil skickad...' THEN DO:
         OS-DELETE VALUE(filut).
      END.
   END.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.
    
      
END PROCEDURE.

PROCEDURE poster_UI:
   DEFINE INPUT PARAMETER id AS CHARACTER NO-UNDO.
   OPEN QUERY sq FOR EACH slutut WHERE slutut.FTG = id.
   GET FIRST sq.
   IF AVAILABLE slutut THEN DO:
      RUN startpost_UI.
      OUTPUT TO VALUE(filut) APPEND CONVERT TARGET "iso8859-1".
      FIND FIRST tidutstart NO-LOCK NO-ERROR.
      PUT UNFORMATTED tidutstart.UT AT 1 SKIP.         
      DO WHILE AVAILABLE(slutut):
         RUN ut_UI.
         GET NEXT sq.
      END.
      FOR EACH tidut: 
         PUT UNFORMATTED tidut.UT AT 1 SKIP.         
      END.
      RUN slutpost_UI (INPUT id).
      FIND FIRST tidutslut NO-LOCK NO-ERROR.
      PUT UNFORMATTED tidutslut.UT AT 1 SKIP.         
      OUTPUT CLOSE.
   END.
   OS-COPY VALUE(filut) VALUE(filutkopia).
END PROCEDURE.
PROCEDURE startpost_UI:
   CREATE tidutstart.
   ASSIGN   
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[1]]) = "10"
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[2]]) = "430"
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[3]]) = "08806"
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[4]]) = "GUR"
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[5]]) = STRING(TODAY,"999999") 
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[6]]) = cklockan
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[7]]) = "EKO"
   SUBSTRING(tidutstart.UT,utnrstart[nrcolstart[8]]) = "".      
END PROCEDURE.
PROCEDURE slutpost_UI:
   DEFINE INPUT PARAMETER id AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjantal AS INTEGER NO-UNDO.
   DEFINE VARIABLE hjnoll AS CHARACTER NO-UNDO.
   hjantal = 0.
   REPEAT:
      hjantal = hjantal + 1.
      IF hjantal > utnrslut[nrcolslut[8]] THEN LEAVE.
      hjnoll = hjnoll + "0".
   END.
   hjantal = 0.
   FOR EACH slutut WHERE slutut.FTG = id:
      hjantal = hjantal + 1.
   END.
   summmallab = summmallab.
   summmallaant = summmallaant.
   RUN cobolantal_UI (INPUT 18,INPUT summmallab,OUTPUT summmallabch).   
   RUN cobolantal_UI (INPUT 18,INPUT summmallaant,OUTPUT summmallaantch).
   CREATE tidutslut.
   ASSIGN   
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[1]]) = "50"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[2]]) = STRING(hjantal,"9999999999")                                                     
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[3]]) = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[4]]) = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[5]]) = "0000000000"
      /*
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[6]]) = summmallabch
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[7]]) = summmallaantch
   */                                               
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[6]]) = "000000000000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[7]]) = "000000000000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[8]])  = "000000000000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[9]])  = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[10]]) = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[11]]) = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[12]]) = "0000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[13]]) = "000000000000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[14]]) = "000000000000000000"
   SUBSTRING(tidutslut.UT,utnrslut[nrcolslut[15]]) = "".  
END PROCEDURE.
PROCEDURE cobolantal_UI:
   DEFINE INPUT PARAMETER nollantal AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER intal AS DECIMAL NO-UNDO.
   DEFINE OUTPUT PARAMETER uttalch AS CHARACTER NO-UNDO.
   DEFINE VARIABLE intalhel AS INTEGER NO-UNDO.
   DEFINE VARIABLE slutch AS CHARACTER NO-UNDO.
   intalhel = intal * 100.
   IF intalhel >= 0 THEN DO:
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "0" THEN slutch = "0".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "1" THEN slutch = "1".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "2" THEN slutch = "2".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "3" THEN slutch = "3".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "4" THEN slutch = "4".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "5" THEN slutch = "5".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "6" THEN slutch = "6".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "7" THEN slutch = "7".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "8" THEN slutch = "8".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "9" THEN slutch = "9".
   END.                                                             
   IF intalhel < 0 THEN DO:
      intalhel = intalhel * -1.
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "0" THEN slutch = "p".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "1" THEN slutch = "q".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "2" THEN slutch = "r".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "3" THEN slutch = "s".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "4" THEN slutch = "t".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "5" THEN slutch = "u".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "6" THEN slutch = "v".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "7" THEN slutch = "w".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "8" THEN slutch = "x".
      IF SUBSTRING(STRING(intalhel),LENGTH(STRING(intalhel)),1) = "9" THEN slutch = "y".
   END.                            
   uttalch = STRING(intalhel).
   uttalch = SUBSTRING(uttalch,1,LENGTH(uttalch) - 1) + slutch.
   IF LENGTH(uttalch) = nollantal THEN RETURN.
   uttalch = SUBSTRING(nolldummy,1,nollantal - LENGTH(uttalch)) + uttalch.
END PROCEDURE.

PROCEDURE ut_UI:   
   IF feltider = TRUE THEN DO:
         /*TIDFELAR*/
      IF slutut.FELDEBKRED = TRUE THEN DO:
         ASSIGN
         summmallab = summmallab + slutut.BELOPP.
         summmallaant = summmallaant + slutut.ANTAL.
      END.
   END.
   ELSE DO:
      IF slutut.DEBKRED = TRUE THEN DO:
         ASSIGN
         summmallab = summmallab + slutut.BELOPP.
         summmallaant = summmallaant + slutut.ANTAL.
      END.
   END.
   
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = "20" 
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = "08806".
   IF slutut.FTG = "100" THEN SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "0880610000".
   IF slutut.FTG = "105" THEN SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "0880620000".
   IF slutut.FTG = "180" THEN SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "0880630000".
   IF slutut.FTG = "150" THEN SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "0880660000".
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = "200"    
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "505"                  
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = STRING(verifnummervar,"999999999")
   SUBSTRING(tidut.UT,utnr[nrcol[7]]) = SUBSTRING(STRING(YEAR(vkdatum),"9999"),3,2)   
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = STRING(MONTH(vkdatum),"99")
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = STRING(0,"99")
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = STRING(DAY(vkdatum),"99")
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = slutut.FTG.
/*
ftg = kontodel 1
k5 = kontodel 2
k1 = kontodel 3
k2 = kontodel 4
k4 = kontodel 5*/
   IF slutut.K5 NE "" THEN DO:                                                
      SUBSTRING(tidut.UT,utnr[nrcol[12]]) =  slutut.K5 + SUBSTRING(nolldummy,1,5 - LENGTH(slutut.K5)).
   END.
   ELSE SUBSTRING(tidut.UT,utnr[nrcol[12]]) = "".
   IF slutut.K1 NE "" THEN DO:
      SUBSTRING(tidut.UT,utnr[nrcol[13]]) =  slutut.K1 + SUBSTRING(nolldummy,1,3 - LENGTH(slutut.K1)).
   END.
   ELSE SUBSTRING(tidut.UT,utnr[nrcol[13]]) = "".
   
   IF slutut.K2 NE "" THEN DO:
      SUBSTRING(tidut.UT,utnr[nrcol[14]]) = slutut.K2 + SUBSTRING(nolldummy,1,4 - LENGTH(slutut.K2)).
   END.
   ELSE SUBSTRING(tidut.UT,utnr[nrcol[14]]) = "".
   
   IF slutut.K4 NE "" THEN DO:
      SUBSTRING(tidut.UT,utnr[nrcol[15]]) = SUBSTRING(nolldummy,1,6 - LENGTH(slutut.K4)) + slutut.K4.
   END.
   ELSE SUBSTRING(tidut.UT,utnr[nrcol[15]]) = "".
   /*
   IF slutut.K5 NE "" THEN DO:
      SUBSTRING(tidut.UT,utnr[nrcol[16]]) = slutut.K5 + SUBSTRING(nolldummy,1,10 - LENGTH(slutut.K5)).
   END.
   
   ELSE SUBSTRING(tidut.UT,utnr[nrcol[16]]) = "".
   */
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[17]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[18]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[19]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[20]]) = "".
   IF feltider = TRUE THEN DO:
      /*TIDFELAR*/
      /*KREDIT*/
      IF slutut.FELDEBKRED = FALSE THEN DO:
         RUN cobolantal_UI (INPUT 15,INPUT (slutut.BELOPP * -1),OUTPUT beloppchar).   
         SUBSTRING(tidut.UT,utnr[nrcol[21]]) = beloppchar.
         RUN cobolantal_UI (INPUT 15,INPUT (slutut.ANTAL * -1),OUTPUT beloppchar).   
      END.
      ELSE DO:
         RUN cobolantal_UI (INPUT 15,INPUT slutut.BELOPP,OUTPUT beloppchar).   
         SUBSTRING(tidut.UT,utnr[nrcol[21]]) = beloppchar.
         RUN cobolantal_UI (INPUT 15,INPUT slutut.ANTAL,OUTPUT beloppchar).   
      END.
   END.
   ELSE DO:
      /*KREDIT*/
      IF slutut.DEBKRED = FALSE THEN DO:
         RUN cobolantal_UI (INPUT 15,INPUT (slutut.BELOPP * -1),OUTPUT beloppchar).   
         SUBSTRING(tidut.UT,utnr[nrcol[21]]) = beloppchar.
         RUN cobolantal_UI (INPUT 15,INPUT (slutut.ANTAL * -1),OUTPUT beloppchar).   
      END.
      ELSE DO:
         RUN cobolantal_UI (INPUT 15,INPUT slutut.BELOPP,OUTPUT beloppchar).   
         SUBSTRING(tidut.UT,utnr[nrcol[21]]) = beloppchar.
         RUN cobolantal_UI (INPUT 15,INPUT slutut.ANTAL,OUTPUT beloppchar).   
      END.
   END.
   
   /*SUBSTRING(tidut.UT,utnr[nrcol[22]]) = beloppchar.*/
                                          
   SUBSTRING(tidut.UT,utnr[nrcol[22]]) = "000000000000000".
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[23]]) = STRING(0,"99999999999")
   SUBSTRING(tidut.UT,utnr[nrcol[24]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[25]]) = "Tidredovisning från Guru"
   SUBSTRING(tidut.UT,utnr[nrcol[26]]) = "". 
END PROCEDURE. 
