/*
               KSV Editor
    Copyright: (C) 2000-2001 Serguey Klimoff (bulkl0DD)
     Filename: XREADDOC.P
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2005.12.08 11:02 ELPAO   
     Modified: 
*/

DEFINE TEMP-TABLE ttData NO-UNDO
    FIELD Data AS CHARACTER EXTENT 4 FORMAT "X(10)".

EMPTY TEMP-TABLE ttData.
RUN ReadWordFiles("d:\Temp\test1.doc,d:\Temp\test2.doc").

FOR EACH ttData:
    DISPLAY ttData WITH DOWN.
END.

PROCEDURE ReadWordFiles:
    DEFINE INPUT PARAMETER pFileList AS CHARACTER NO-UNDO.    
    DEFINE VARIABLE chWord    AS COM-HANDLE NO-UNDO.
    DEFINE VARIABLE cx        AS INTEGER    NO-UNDO.
    CREATE "Word.Application" chWord NO-ERROR.
    IF ERROR-STATUS:ERROR THEN
        RETURN.
    DO cx = 1 TO NUM-ENTRIES(pFileList):
        RUN ReadWordFile(ENTRY(cx, pFileList), chWord).
    END.
    chWord:QUIT(,,).
    RELEASE OBJECT chWord.
END PROCEDURE.

PROCEDURE ReadWordFile:
    DEFINE INPUT PARAMETER pFileName AS CHARACTER  NO-UNDO.
    DEFINE INPUT PARAMETER chWord    AS COM-HANDLE NO-UNDO.
    DEFINE VARIABLE chDoc     AS COM-HANDLE NO-UNDO.
    DEFINE VARIABLE chContent AS COM-HANDLE NO-UNDO.
    DEFINE VARIABLE cText     AS CHARACTER  NO-UNDO.

    chDoc = chWord:Documents:OPEN (pFileName,  /*FileName*/
                                   FALSE,      /*ConfirmConversions*/
                                   TRUE,       /*ReadOnly*/
                                   FALSE,      /*AddToRecentFiles*/
                                   "",         /*PasswordDocument*/
                                   "",         /*PasswordTemplate*/
                                   FALSE,      /*Revert*/
                                   "",         /*WritePasswordDocument*/
                                   "",         /*WritePasswordTemplate*/
                                   0,          /*Format*/
                                   ,           /*Encoding*/
                                   ,           /*Visible*/
                                   ,           /*OpenAndRepair*/
                                   ,           /*DocumentDirection*/
                                               /*NoEncodingDialog*/
                                  ).
    chDoc:Activate().
    chContent = chDoc:ActiveWindow:Selection.
    chContent:HomeKey(6, 0).
    REPEAT:
        chContent:EndOf(5, 1).
        cText = chContent:TEXT.
        /*Perform   text   proccesing  in  desired  way. In the case described
        (vide supra) I guess it should look like smth kinda vide infra*/
        CREATE ttData.
        ASSIGN
            Data[1] = TRIM(SUBSTRING(cText, 1, 9))
            Data[2] = TRIM(SUBSTRING(cText, 10, 4))
            Data[3] = TRIM(SUBSTRING(cText, 14, 8))
            Data[4] = TRIM(SUBSTRING(cText, 22)).
        chContent:StartOf(5, 0).
        IF chContent:MoveDown(5, 1, 0) = 0 THEN LEAVE.
    END.

    RELEASE OBJECT chContent.
    chDoc:CLOSE(,,).
    RELEASE OBJECT chDoc.
END PROCEDURE.
