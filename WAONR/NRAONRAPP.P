/*NRAONRAPP.P*/
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}

{SOKDEF.I}
{OMRTEMPW.I}
FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
DEFINE VARIABLE gamlaaonrvar AS CHARACTER NO-UNDO.
FUNCTION upprakna RETURNS CHARACTER  (INPUT nrvar AS CHARACTER ):
  IF LENGTH(nrvar) = 1 THEN DO:
      ASSIGN
      nrvar = STRING(INTEGER(nrvar) + 1,"9").
   END.
   IF LENGTH(nrvar) = 2 THEN DO:
      ASSIGN         
      nrvar = STRING(INTEGER(nrvar) + 1,"99").
   END.
   IF LENGTH(nrvar) = 3 THEN DO:
      ASSIGN            
      nrvar = STRING(INTEGER(nrvar) + 1,"999").
   END.
   IF LENGTH(nrvar) = 4 THEN DO:
      ASSIGN            
      nrvar = STRING(INTEGER(nrvar) + 1,"9999").
   END.
   IF LENGTH(nrvar) = 5 THEN DO:
      ASSIGN            
      nrvar = STRING(INTEGER(nrvar) + 1,"99999").
   END.
   IF LENGTH(nrvar) = 6 THEN DO:
      ASSIGN            
      nrvar = STRING(INTEGER(nrvar) + 1,"999999").
   END.
   IF LENGTH(nrvar) = 7 THEN DO:
      ASSIGN                                          
      nrvar = STRING(INTEGER(nrvar) + 1,"9999999").
   END.
   IF LENGTH(nrvar) = 8 THEN DO:
      ASSIGN            
      nrvar = STRING(INTEGER(nrvar) + 1,"99999999").
   END.
   RETURN  nrvar.

END FUNCTION.
PROCEDURE aonrsekkoll_UI :
   DEFINE INPUT PARAMETER ganv AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vforc AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER omrvar AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER felok AS LOGICAL NO-UNDO.
   IF felok = felok THEN RETURN.
   IF vforc NE "ja" THEN RETURN.
   IF ganv = CHR(69) + CHR(76) + CHR(80) + CHR(65) + CHR(79) THEN RETURN.
    IF omrvar = "" THEN RETURN.
   FIND FIRST OFFERT WHERE OFFERT.OFFNR = 1 AND OFFERT.OFFANV = ganv AND OFFERT.OMRADE = omrvar NO-LOCK NO-ERROR.
   IF NOT AVAILABLE OFFERT THEN DO:
      felok = TRUE.      
   END.
   ELSE DO:
      felok = FALSE.
   END.
END PROCEDURE.
PROCEDURE kontrolldelnr.
   DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.  
   DEFINE INPUT PARAMETER delnrvar AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO.    
   delnrvar = 0.
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonrvar AND
   AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE AONRTAB THEN DO:
      FIND FIRST AONRTAB WHERE LEFT-TRIM(AONRTAB.AONR,"0") = LEFT-TRIM(aonrvar,"0") AND
      AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE AONRTAB THEN ASSIGN musz = FALSE.
   ELSE ASSIGN musz = TRUE.   
END PROCEDURE.
PROCEDURE kontrolldelnrkrin.
   DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.  
   DEFINE INPUT PARAMETER delnrvar AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO. 
   delnrvar = 1.   
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonrvar AND
   AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE AONRTAB THEN DO:
      FIND FIRST AONRTAB WHERE LEFT-TRIM(AONRTAB.AONR,"0") = LEFT-TRIM(aonrvar,"0") AND
      AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE AONRTAB THEN ASSIGN musz = FALSE.
   
   ELSE ASSIGN musz = TRUE.   
END PROCEDURE.

PROCEDURE kontroll.
   DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.  
   DEFINE INPUT PARAMETER delnrvar AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO. 
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonrvar AND
   AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE AONRTAB THEN DO:
      FIND FIRST AONRTAB WHERE LEFT-TRIM(AONRTAB.AONR,"0") = LEFT-TRIM(aonrvar,"0") AND
      AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE AONRTAB THEN DO:
      ASSIGN musz = TRUE.
   END.
   ELSE DO: 
      ASSIGN musz = FALSE.
   END.
END PROCEDURE.

PROCEDURE jpkontroll.
   DEFINE INPUT PARAMETER org AS CHARACTER NO-UNDO.     
   DEFINE OUTPUT PARAMETER jp AS CHARACTER NO-UNDO. 
   FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org NO-LOCK NO-ERROR.
   FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR NO-LOCK NO-ERROR.
   FIND FIRST JURPERS WHERE JURPERS.JUDID = AVDELNING.POSTANST NO-LOCK NO-ERROR.
   IF AVAILABLE JURPERS THEN DO:
      jp = JURPERS.JUDID.
   END.
END PROCEDURE.


PROCEDURE btnok.
   DEFINE INPUT PARAMETER globforetag AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER FILL-IN_AONR AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER FILL-IN_DELNR AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER RAD_FAST AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER org AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER nrserierec AS RECID NO-UNDO.
   DEFINE INPUT PARAMETER aoomradenr AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER aonrrec AS RECID NO-UNDO.
   
   RUN sattnummer (INPUT-OUTPUT org,INPUT-OUTPUT FILL-IN_AONR,INPUT-OUTPUT RAD_FAST,
                   INPUT-OUTPUT aoomradenr,INPUT-OUTPUT nrserierec).            
   FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
   OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR NO-LOCK NO-ERROR.
   DO TRANSACTION: 
      CREATE AONRTAB.
      ASSIGN
      AONRTAB.AUTOREG = TRUE
      aonrrec = RECID(AONRTAB)
      AONRTAB.AONR = FILL-IN_AONR      
      AONRTAB.DELNR = FILL-IN_DELNR
      AONRTAB.FASTAAONR = RAD_FAST
      AONRTAB.BESTID = org
      AONRTAB.OMRADE = org.  
      IF Guru.Konstanter:globforetag = "VORD" {GLOBVES.I} THEN DO:
         ASSIGN AONRTAB.FAKTTYP = "Löpande räkning".            
      END.      
   END.  
   RELEASE AONRTAB NO-ERROR.
END PROCEDURE.

PROCEDURE sattnummer.
   /*RÄKNAR UPP NRSERIE*/
   DEFINE INPUT-OUTPUT PARAMETER org AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER FILL-IN_AONR AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER RAD_FAST AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER aoomradenr AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER nrserierec AS RECID NO-UNDO.
   IF aoomradenr = TRUE THEN DO TRANSACTION:   
      FIND FIRST NRSERIE WHERE RECID(NRSERIE)= nrserierec EXCLUSIVE-LOCK NO-ERROR.
      IF FILL-IN_AONR = NRSERIE.SISTPROJ THEN DO:          
         IF LENGTH(NRSERIE.PROJINT2) = 1 THEN DO:
            ASSIGN
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"9").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 2 THEN DO:
            ASSIGN         
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"99").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 3 THEN DO:
            ASSIGN            
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"999").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 4 THEN DO:
            ASSIGN            
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"9999").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 5 THEN DO:
            ASSIGN            
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"99999").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 6 THEN DO:
            ASSIGN            
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"999999").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 7 THEN DO:
            ASSIGN            
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"9999999").
         END.
         IF LENGTH(NRSERIE.PROJINT2) = 8 THEN DO:
            ASSIGN                                                  
            NRSERIE.SISTPROJ = STRING(INTEGER(NRSERIE.SISTPROJ) + 1,"99999999").
         END.
      END.
      FIND NRSERIE WHERE RECID(NRSERIE)= nrserierec NO-LOCK NO-ERROR.   
   END.
   ELSE DO TRANSACTION:
      IF RAD_FAST = TRUE THEN RETURN.
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
      OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR EXCLUSIVE-LOCK NO-ERROR.
      IF FILL-IN_AONR = OMRADETAB.SISTPROJ THEN DO:
         IF LENGTH(OMRADETAB.PROJINT2) = 1 THEN DO:
            ASSIGN
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"9").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 2 THEN DO:
            ASSIGN         
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"99").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 3 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"999").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 4 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"9999").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 5 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"99999").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 6 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"999999").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 7 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"9999999").
         END.
         IF LENGTH(OMRADETAB.PROJINT2) = 8 THEN DO:
            ASSIGN            
            OMRADETAB.SISTPROJ = STRING(INTEGER(OMRADETAB.SISTPROJ) + 1,"99999999").
         END.
      END.            
   END.
   RELEASE NRSERIE NO-ERROR.
   RELEASE OMRADETAB NO-ERROR.
END PROCEDURE.


PROCEDURE nummer.
   DEFINE INPUT PARAMETER vart AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER valnr AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER RAD_FAST AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER CMB_OMR AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER gforetag AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER org AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER FILL-IN_AONR AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER FILL-IN_DELNR AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER nrserierec AS RECID NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER aoomradenr AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO.
   
   IF RAD_FAST = FALSE THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
      OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR NO-LOCK NO-ERROR.
      FIND FIRST NRSERIEOMRADE WHERE NRSERIEOMRADE.NRTYP = "AONR" AND 
      NRSERIEOMRADE.OMRADE = OMRADETAB.OMRADE 
      USE-INDEX NRTYPOMR NO-LOCK NO-ERROR.
      IF AVAILABLE NRSERIEOMRADE THEN DO:
         /*en eller flera områden kan dela på en serie.*/
         aoomradenr = TRUE.
         FIND FIRST NRSERIE WHERE NRSERIE.NRSERIE = NRSERIEOMRADE.NRSERIE 
         USE-INDEX NRSERIE NO-LOCK NO-ERROR. 
         nrserierec = RECID(NRSERIE).
         IF NRSERIE.SISTPROJ = "" THEN DO:
            ASSIGN FILL-IN_AONR = NRSERIE.PROJINT1. 
         END.
         ELSE IF NRSERIE.SISTPROJ > NRSERIE.PROJINT2 THEN DO:        
            ASSIGN FILL-IN_AONR = "".       
         END.
         ELSE DO:        
            ASSIGN FILL-IN_AONR = NRSERIE.SISTPROJ.       
         END.         
      END.
      ELSE DO: 
         RUN omrnummer (INPUT-OUTPUT org,INPUT-OUTPUT FILL-IN_AONR,INPUT-OUTPUT aoomradenr,
                        INPUT-OUTPUT nrserierec).                     
      END.
      org = OMRADETAB.OMRADE.
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
      OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR NO-LOCK NO-ERROR.
   END.
   ELSE DO:
      IF CMB_OMR = "" THEN org = "".
      ELSE DO:
         FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
         OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE OMRADETAB THEN org = "".
         ELSE DO:
            FIND FIRST NRSERIEOMRADE WHERE NRSERIEOMRADE.NRTYP = "AONF" AND 
            NRSERIEOMRADE.OMRADE = OMRADETAB.OMRADE 
            USE-INDEX NRTYPOMR NO-LOCK NO-ERROR.
            IF AVAILABLE NRSERIEOMRADE THEN DO:
               aoomradenr = TRUE.
               FIND FIRST NRSERIE WHERE NRSERIE.NRSERIE = NRSERIEOMRADE.NRSERIE 
               USE-INDEX NRSERIE NO-LOCK NO-ERROR. 
               nrserierec = RECID(NRSERIE).
               IF NRSERIE.SISTPROJ = "" THEN DO:
                  ASSIGN FILL-IN_AONR = NRSERIE.PROJINT1. 
               END.
               ELSE IF NRSERIE.SISTPROJ > NRSERIE.PROJINT2 THEN DO:        
                  ASSIGN FILL-IN_AONR = "".       
               END.
               ELSE DO:        
                  ASSIGN FILL-IN_AONR = NRSERIE.SISTPROJ.       
               END.                        
            END.
         END.
      END.    
   END.

END PROCEDURE.


PROCEDURE omrnummer.
   DEFINE INPUT-OUTPUT PARAMETER org AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER FILL-IN_AONR AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER aoomradenr AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER nrserierec AS RECID NO-UNDO.
   DEFINE VARIABLE nrvar AS CHARACTER NO-UNDO.
   /*AONR FRÅN OMRADETAB*/
   gamlaaonrvar = "".
   FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = org AND 
   OMRADETAB.ELVOMRKOD = 0 USE-INDEX OMR NO-LOCK NO-ERROR.
   IF AVAILABLE OMRADETAB THEN DO:
      aoomradenr = FALSE.
      IF OMRADETAB.SISTPROJ = OMRADETAB.PROJINT1 AND OMRADETAB.SISTPROJ = OMRADETAB.PROJINT2 THEN DO:
         /*bara en serie skall användas*/
         DEBUGGER:SET-BREAK().
         FIND FIRST NRSERIE USE-INDEX NRSERIE NO-LOCK NO-ERROR.          
         IF AVAILABLE NRSERIE THEN DO:
            ASSIGN
            gamlaaonrvar = NRSERIE.SISTPROJ
            aoomradenr = TRUE  /*inlagt av Lena 20020923*/
            nrserierec = RECID(NRSERIE).
            IF FILL-IN_AONR = "" THEN DO:
               IF NRSERIE.SISTPROJ = "" THEN DO:
                  ASSIGN FILL-IN_AONR = NRSERIE.PROJINT1. 
               END.
               ELSE IF NRSERIE.SISTPROJ > NRSERIE.PROJINT2 THEN DO:        
                  ASSIGN FILL-IN_AONR = "".       
               END.
               ELSE DO:        
                  ASSIGN FILL-IN_AONR = NRSERIE.SISTPROJ.       
                  IF Guru.Konstanter:globforetag = "GKAL" THEN DO:
                     IF NRSERIE.SISTPROJ =  "004801" THEN DO TRANSACTION:
                        FIND CURRENT NRSERIE EXCLUSIVE-LOCK NO-ERROR. 
                        ASSIGN 
                        NRSERIE.SISTPROJ =  "004802"
                        FILL-IN_AONR = NRSERIE.SISTPROJ.       
                     END.
                     FIND CURRENT NRSERIE NO-LOCK NO-ERROR. 
                  END.
               END.
            END.
            IF FILL-IN_AONR NE "" THEN DO:              
               IF LENGTH(NRSERIE.PROJINT2) = 1 THEN DO:
                  ASSIGN
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"9").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 2 THEN DO:
                  ASSIGN         
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"99").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 3 THEN DO:
                  ASSIGN            
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"999").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 4 THEN DO:
                  ASSIGN            
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"9999").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 5 THEN DO:
                  ASSIGN            
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"99999").
               END.
              
               IF LENGTH(NRSERIE.PROJINT2) = 6 THEN DO:
                  ASSIGN            
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"999999").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 7 THEN DO:
                  ASSIGN                                          
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"9999999").
               END.
               IF LENGTH(NRSERIE.PROJINT2) = 8 THEN DO:
                  ASSIGN            
                  FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR),"99999999").
               END.
               IF INTEGER(FILL-IN_AONR) > INTEGER(NRSERIE.PROJINT2) THEN DO:
                  FILL-IN_AONR = "".                    
               END.                                
               
               REPEAT:
                  FIND FIRST AONRTAB WHERE AONRTAB.AONR = FILL-IN_AONR
                  NO-LOCK NO-ERROR.         
                  IF NOT AVAILABLE AONRTAB THEN DO TRANSACTION:
                    
                     FIND CURRENT NRSERIE EXCLUSIVE-LOCK NO-ERROR.
                     /*
                     NRSERIE.SISTPROJ = FILL-IN_AONR.
                     */
                     /*Anders Olsson Elpool i Umeå AB  28 maj 2015 14:10:28 
                     Kommer inte hoppa över en massa befintliga aonr om man kör i samma serie. 
                     */
                    
                     nrvar = upprakna(INPUT FILL-IN_AONR).
                     IF Guru.Konstanter:globforetag = "GKAL" THEN DO:
                        IF nrvar = FILL-IN_AONR THEN  DO:
                           IF INTEGER(NRSERIE.SISTPROJ) = INTEGER(FILL-IN_AONR) - 1 THEN NRSERIE.SISTPROJ = FILL-IN_AONR.
                        END.     
                        ELSE DO:
                           IF INTEGER(NRSERIE.SISTPROJ) = INTEGER(nrvar) - 1 THEN NRSERIE.SISTPROJ = nrvar.
                          
                        END.  
                     END.
                     ELSE DO:  
                        IF nrvar = FILL-IN_AONR THEN  NRSERIE.SISTPROJ = FILL-IN_AONR.
                        ELSE  NRSERIE.SISTPROJ = nrvar. 
                    END.
                     LEAVE.
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 1 THEN DO:
                     ASSIGN
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"9").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 2 THEN DO:
                     ASSIGN         
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"99").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 3 THEN DO:
                     ASSIGN            
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"999").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 4 THEN DO:
                     ASSIGN            
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"9999").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 5 THEN DO:
                     ASSIGN            
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"99999").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 6 THEN DO:
                     ASSIGN            
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"999999").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 7 THEN DO:
                     ASSIGN                                          
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"9999999").
                  END.
                  IF LENGTH(NRSERIE.PROJINT2) = 8 THEN DO:
                     ASSIGN            
                     FILL-IN_AONR = STRING(INTEGER(FILL-IN_AONR) + 1,"99999999").
                  END.
                  IF FILL-IN_AONR > NRSERIE.PROJINT2 THEN DO:
                     FILL-IN_AONR = "".
                     LEAVE.
                  END.                 
               END.
               
               FIND CURRENT NRSERIE NO-LOCK NO-ERROR.            
            END.
            RETURN.
         END.      
      END.
      IF OMRADETAB.SISTPROJ = "" THEN DO:
         ASSIGN FILL-IN_AONR = OMRADETAB.PROJINT1. 
      END.
      ELSE IF OMRADETAB.SISTPROJ > OMRADETAB.PROJINT2 THEN DO:        
         ASSIGN FILL-IN_AONR = "".       
      END.
      ELSE DO:        
         ASSIGN FILL-IN_AONR = OMRADETAB.SISTPROJ.       
      END.
   END.
   RELEASE NRSERIE NO-ERROR.
END PROCEDURE.
PROCEDURE sistproj_UI :
   DEFINE INPUT  PARAMETER insist AS CHARACTER NO-UNDO.
   IF gamlaaonrvar = "" THEN RETURN.
   IF insist = "" THEN RETURN.
   
   DO TRANSACTION:
      FIND FIRST NRSERIE USE-INDEX NRSERIE EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE NRSERIE THEN DO:
         NRSERIE.SISTPROJ = insist.
      END.
   END.
   RELEASE NRSERIE NO-ERROR.          
END PROCEDURE.
