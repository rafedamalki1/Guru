/*BERBESTAPP.P*/
{STARTFORAPP.I}
{DEFBESTU.I}
{ANMARKD.I}
{KONVALTEMP.I}
DEFINE TEMP-TABLE elev_temp NO-UNDO LIKE lev_temp.
DEFINE VARIABLE priset AS LOGICAL NO-UNDO.         
DEFINE VARIABLE detvar AS LOGICAL NO-UNDO. 
DEFINE VARIABLE datvar AS DATE NO-UNDO.  
DEFINE VARIABLE alla AS LOGICAL NO-UNDO.  
DEFINE VARIABLE vald_lev AS CHARACTER NO-UNDO.  
DEFINE VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO. 

DEFINE VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE VARIABLE valort AS CHARACTER NO-UNDO. 
DEFINE VARIABLE valomrade AS CHARACTER NO-UNDO.
DEFINE VARIABLE epostvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE mailvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE edivar AS LOGICAL NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.        
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE str AS CHARACTER FORMAT "X(130)" NO-UNDO. 
DEFINE VARIABLE str1 AS CHARACTER FORMAT "X(130)" NO-UNDO.
DEFINE VARIABLE str2 AS CHARACTER FORMAT "X(130)" NO-UNDO. 
DEFINE VARIABLE str0 AS CHARACTER FORMAT "X(130)" NO-UNDO.
DEFINE VARIABLE totalt AS DECIMAL NO-UNDO. 
DEFINE VARIABLE totalt2 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE leverant AS CHARACTER NO-UNDO.
DEFINE VARIABLE lev AS CHARACTER NO-UNDO.  
DEFINE VARIABLE sumpris AS DECIMAL NO-UNDO.    
DEFINE VARIABLE totalsum AS DECIMAL NO-UNDO.
DEFINE VARIABLE sumantal AS INTEGER NO-UNDO.
DEFINE VARIABLE xkordvar AS INTEGER NO-UNDO. 
DEFINE VARIABLE stopvar AS LOGICAL NO-UNDO. 
DEFINE VARIABLE prisvar AS INTEGER NO-UNDO.
DEFINE VARIABLE antvar AS INTEGER NO-UNDO. 
DEFINE VARIABLE antvar2 AS INTEGER NO-UNDO.  
DEFINE VARIABLE firstlev AS CHARACTER NO-UNDO.   
DEFINE VARIABLE upp AS LOGICAL NO-UNDO.   
DEFINE VARIABLE bytgrupp AS CHARACTER NO-UNDO. 
DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE utrec AS RECID NO-UNDO.
DEFINE VARIABLE utrec2 AS RECID NO-UNDO.
DEFINE VARIABLE kant AS INTEGER NO-UNDO.
DEFINE VARIABLE tant AS INTEGER NO-UNDO.
DEFINE VARIABLE uppvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE sidlangd AS INTEGER NO-UNDO.
DEFINE VARIABLE ediraknare AS INTEGER NO-UNDO.
DEFINE VARIABLE anmlangd AS INTEGER NO-UNDO.
DEFINE VARIABLE idvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE numsok AS LOGICAL NO-UNDO.
DEFINE VARIABLE byggnr AS INTEGER NO-UNDO.
DEFINE VARIABLE skapkab AS INTEGER NO-UNDO.
DEFINE VARIABLE enkabval AS LOGICAL    NO-UNDO.
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE refkontp AS CHARACTER NO-UNDO.
DEFINE VARIABLE berbestapph AS HANDLE NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{EXTRADATA.I}
DEFINE VARIABLE delbest AS LOGICAL NO-UNDO.
       
DEFINE QUERY mtrlprisq FOR BERMTRL. 
DEFINE QUERY upplq FOR BERVAL. 
DEFINE QUERY berq FOR BERUPP.   
DEFINE QUERY gruppq FOR KONSTGRUPP. 
DEFINE QUERY beridq FOR BERID. 
DEFINE QUERY skyddq FOR KSKYDD.

DEFINE BUFFER idbuff FOR id_temp.
DEFINE BUFFER mtrlbuff FOR mtrl_temp2. 
DEFINE BUFFER gruppbuff FOR grupp_temp.
DEFINE BUFFER uppbuff FOR uppl_temp.
DEFINE BUFFER linbuff FOR lin_upp.
DEFINE BUFFER skyddbuff FOR skydd_temp2.
   str=
"=============================================================================".  
   str1 =
"*****************************************************************************".  
   str0 = 
"-----------------------------------------------------------------------------".

PROCEDURE hmtmed_UI :
   DEFINE INPUT PARAMETER vald_lev AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER enrvar AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER medvar AS CHARACTER NO-UNDO.
   medvar = "".
   FIND FIRST MTRLSPEC WHERE MTRLSPEC.ENR = enrvar AND 
   MTRLSPEC.LEVKOD = vald_lev NO-LOCK NO-ERROR.
   IF AVAILABLE MTRLSPEC THEN DO:
      medvar = MTRLSPEC.MED.
   END.

END PROCEDURE.

PROCEDURE skapalista_UI :
   DEFINE INPUT PARAMETER globforetag2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER epostvar2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER globsids2  AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vald_lev2  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valaonr2   AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER priset2    AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER detvar2    AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER mailvar2   AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER edivar2    AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER datvar2    AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER alla2 AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER emusz AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR lev_temp.
   DEFINE INPUT PARAMETER TABLE FOR trp_mtrl.
   DEFINE INPUT PARAMETER TABLE FOR skapa_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   DEFINE INPUT PARAMETER TABLE FOR kon_val.
   DEFINE INPUT PARAMETER delbest2 AS LOGICAL NO-UNDO.
   ASSIGN
   globforetag = globforetag2
   globsids = globsids2  
   vald_lev = vald_lev2 
   valaonr =  valaonr2  
   valomrade = valomrade2
   priset =   priset2   
   detvar =   detvar2   
   mailvar =  mailvar2  
   edivar =   edivar2
   datvar = datvar2
   alla = alla2
   delbest = delbest2
   epostvar = epostvar2.   
   EMPTY TEMP-TABLE tidut NO-ERROR.
   EMPTY TEMP-TABLE mtrl_temp NO-ERROR. 
   EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE uppl_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp NO-ERROR. 
   EMPTY TEMP-TABLE grupp_temp2 NO-ERROR. 
   EMPTY TEMP-TABLE lin_upp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp NO-ERROR. 
   EMPTY TEMP-TABLE skydd_temp2 NO-ERROR. 
   ASSIGN      
   tant = 0
   sidlangd = globsids - 3.   
   
  
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR.        
   RUN huvud_UI.
   IF detvar = FALSE THEN DO:
      RUN rubrik_UI.
      IF musz = FALSE THEN RUN klar_UI.
      RUN totalt_UI.         
   END.
   ELSE DO:  
      RUN rubrik_UI.
      IF musz = FALSE THEN RUN klar_UI.
      RUN totalt_UI.  
      IF globforetag = "GKAL" THEN musz = musz.
      ELSE DO:   
         RUN skapa_UI.
         RUN summa_UI.                              
      END.
   END.
   emusz = musz.
  
END PROCEDURE.

PROCEDURE anmark_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/           
   DEFINE INPUT PARAMETER anmark AS INTEGER NO-UNDO.     
   IF anmark = 2 THEN DO:                
      ASSIGN             
      SUBSTRING(tidut.UT,12) = tidtext.
      CREATE tidut.
   END.   
   IF uppvar = TRUE THEN tant = tant + 1.   
   ELSE kant = kant + 1.
END PROCEDURE.

PROCEDURE bryt_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   IF kant > sidlangd THEN tant = (kant - (sidlangd - tant)).
   ELSE DO:
      IF kant > sidlangd - tant THEN DO:         
         FIND tidut WHERE RECID(tidut) = utrec NO-LOCK NO-ERROR.
         DELETE tidut.
         kant = kant - 1.
         FIND tidut WHERE RECID(tidut) = utrec2 NO-LOCK NO-ERROR.
         ASSIGN
         SUBSTRING(tidut.UT,132) = "$"
         tant = kant.
      END.
      ELSE DO:
         tant = tant + kant.
         IF tant = sidlangd THEN tant = 0.
      END.
   END.   
END PROCEDURE.

PROCEDURE depa2_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   {DEPA2TRP.I}
END PROCEDURE.

PROCEDURE depa3_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   {DEPA3TRP.I}
END PROCEDURE.

PROCEDURE depa_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   {DEPATRP.I} 
END PROCEDURE.

PROCEDURE ett_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   {ETTTRP.I}
END PROCEDURE.

PROCEDURE huvud_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   /*HUVUD*/ 
   
   DO TRANSACTION:         
      IF musz = TRUE THEN musz = musz.   
      ELSE DO: 
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = vald_lev NO-LOCK NO-ERROR.           
         CREATE tidut. 
         ASSIGN        
         SUBSTRING(tidut.UT,1) = "Beställning" 
         SUBSTRING(tidut.UT,40) = STRING(TODAY)
         SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
         CREATE tidut.  
         CREATE tidut.             
         SUBSTRING(tidut.UT,1) = STRING(LEVERANTOR.LEVNAMN).
         FIND FIRST skapa_mtrl NO-LOCK NO-ERROR.
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.LADR).   
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.LPNR)   
         SUBSTRING(tidut.UT,8) = STRING(skapa_mtrl.LORT).  
         CREATE tidut. 
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.LKONTAKT).
         CREATE tidut.
         ASSIGN                                       
         SUBSTRING(tidut.UT,1) = "Tele:"
         SUBSTRING(tidut.UT,6) = SUBSTRING(skapa_mtrl.LTELE,1,19).                                                           
         CREATE tidut.
         ASSIGN                                       
         SUBSTRING(tidut.UT,1) = "Fax:"
         SUBSTRING(tidut.UT,6) = SUBSTRING(skapa_mtrl.LTELE,20).
         CREATE tidut. 
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = str.
         CREATE tidut.
         ASSIGN                                       
         SUBSTRING(tidut.UT,1) = "Kundnummer:"
         SUBSTRING(tidut.UT,13) = STRING(skapa_mtrl.KUNDNR).
         FIND FIRST BEREDNING WHERE BEREDNING.BERAONR = valaonr AND 
         BEREDNING.OMRADE = valomrade NO-LOCK NO-ERROR.
         FIND FIRST AONRTAB WHERE AONRTAB.AONR = BEREDNING.AONR AND
         AONRTAB.DELNR = BEREDNING.DELNR USE-INDEX AONR NO-LOCK NO-ERROR.            
         ASSIGN                                       
         SUBSTRING(tidut.UT,40) = Guru.Konstanter:gaok + ":" + AONRTAB.AONR + " Delnr:" + 
         STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1]).
         CREATE tidut.
         SUBSTRING(tidut.UT,40) = "Benämning:" + AONRTAB.ORT.

         CREATE tidut.
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Leveransadress:" 
         SUBSTRING(tidut.UT,40) = "Faktureringsdress:".        
         FIND DEPA WHERE DEPA.BENAMNING = skapa_mtrl.DEPA NO-LOCK NO-ERROR.
         CREATE tidut. 
         CREATE tidut.
         IF skapa_mtrl.L1 = " " THEN DO:
            ASSIGN     
            SUBSTRING(tidut.UT,1) = "Se adress!"
            SUBSTRING(tidut.UT,40) = DEPA.FIRMA.
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,40) = DEPA.FAKADRESS.
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,40) = DEPA.FAKPNR   
            SUBSTRING(tidut.UT,48) = DEPA.FAKORT.         
            CREATE tidut.               
         END.
         ELSE DO:
            ASSIGN     
            SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.FORE)
            SUBSTRING(tidut.UT,40) = DEPA.FIRMA.
            CREATE tidut. 
            ASSIGN
            SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.L1)
            SUBSTRING(tidut.UT,40) = DEPA.FAKADRESS.            
            CREATE tidut.
            ASSIGN    
            SUBSTRING(tidut.UT,1) = STRING(skapa_mtrl.L2)   
            SUBSTRING(tidut.UT,8) = STRING(skapa_mtrl.L3)
            SUBSTRING(tidut.UT,40) = DEPA.FAKPNR   
            SUBSTRING(tidut.UT,48) = DEPA.FAKort.         
            CREATE tidut.
         END.      
         IF globforetag = "ELPA" OR globforetag = "GRAN" THEN DO:
            IF skapa_mtrl.KPNR NE "" THEN DO:
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "IB-nr:" + STRING(skapa_mtrl.KPNR).            
            END.
            /*IF skapa_mtrl.KADR NE "" THEN DO:           
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Projektledare:" + STRING(skapa_mtrl.KADR).
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = " Mobil:" + STRING(skapa_mtrl.KORT).        
            END.*/
         END.
         CREATE tidut.          
         IF skapa_mtrl.DATUM NE ? THEN DO:
            ASSIGN       
            SUBSTRING(tidut.UT,1) = "Leveransdag:" + STRING(skapa_mtrl.DATUM).               
         END.
         ELSE DO:                                            
            ASSIGN       
            SUBSTRING(tidut.UT,1) = "Leveransdag:Omgående".               
         END.                     
         IF skapa_mtrl.AVIS = TRUE THEN DO:
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Avisering:" + STRING(skapa_mtrl.AVISPERS).            
         END.
         RUN sidfot_UI.         
         CREATE tidut.         
         CREATE tidut.
         ASSIGN                                                
         SUBSTRING(tidut.UT,40) = "Kontaktperson inköp:".        
         CREATE tidut.
         SUBSTRING(tidut.UT,40) = STRING(skapa_mtrl.KIKONTAKT).         
         CREATE tidut.         
         ASSIGN
         SUBSTRING(tidut.UT,40) = "Tele:"
         SUBSTRING(tidut.UT,46) = STRING(skapa_mtrl.KITELE)                                 
         SUBSTRING(tidut.UT,60) = "Fax:"
         SUBSTRING(tidut.UT,65) = STRING(skapa_mtrl.FAX). 
         CREATE tidut.         
         ASSIGN
         SUBSTRING(tidut.UT,40) = "Mobiltele:"
         SUBSTRING(tidut.UT,50) = STRING(skapa_mtrl.KIMOBIL). 
         IF globforetag = "ELPA" OR globforetag = "SUND" OR globforetag = "SNAT" THEN DO:            
            CREATE tidut.         
            ASSIGN
            SUBSTRING(tidut.UT,40) = "Orderbekräftelse till epost:".
            CREATE tidut. 
            SUBSTRING(tidut.UT,40) = epostvar. 
         END.
         ELSE DO:
            CREATE tidut.         
            ASSIGN
            SUBSTRING(tidut.UT,40) = "Epost:"
            SUBSTRING(tidut.UT,47) = epostvar. 
         END.                  
         IF skapa_mtrl.KTKONTAKT NE "" THEN DO:         
            CREATE tidut.
            CREATE tidut.
            ASSIGN                                                
            SUBSTRING(tidut.UT,40) = "Kontaktperson teknik:".         
            CREATE tidut.
            SUBSTRING(tidut.UT,40) = STRING(skapa_mtrl.KTKONTAKT).          
            CREATE tidut.            
            ASSIGN
            SUBSTRING(tidut.UT,40) = "Tele:"
            SUBSTRING(tidut.UT,46) = STRING(skapa_mtrl.KTTELE).  
            CREATE tidut.         
            ASSIGN
            SUBSTRING(tidut.UT,40) = "Mobiltele:"
            SUBSTRING(tidut.UT,50) = STRING(skapa_mtrl.KTMOBIL).                   
         END.
         IF globforetag = "ELPA" OR globforetag = "GRAN" THEN DO:
            IF skapa_mtrl.KADR NE "" THEN DO:         
               CREATE tidut.
               CREATE tidut.
               ASSIGN                                                
               SUBSTRING(tidut.UT,40) = "Projektledare:".         
               CREATE tidut.
               SUBSTRING(tidut.UT,40) = STRING(skapa_mtrl.KADR).          
               CREATE tidut.         
               ASSIGN
               SUBSTRING(tidut.UT,40) = "Mobiltele:"
               SUBSTRING(tidut.UT,50) = STRING(skapa_mtrl.KORT).                   
            END.
            /*ccc*/
            FIND FIRST BEREDNING WHERE BEREDNING.BERAONR = valaonr AND 
            BEREDNING.OMRADE = valomrade NO-LOCK NO-ERROR.
            IF AVAILABLE BEREDNING THEN DO:
               RUN kontaktp_UI (INPUT BEREDNING.AONR, INPUT BEREDNING.DELNR,OUTPUT refkontp).
               IF refkontp NE "" THEN DO:
                  CREATE tidut.
                  CREATE tidut.
                  ASSIGN                                                
                  SUBSTRING(tidut.UT,40) = "Beställarens kontaktperson:".         
                  CREATE tidut.
                  SUBSTRING(tidut.UT,40) = refkontp.                         
               END.
            END.
         END.
         IF globforetag = "ELPA" OR globforetag = "SUND" OR globforetag = "SNAT" THEN DO:
            FIND FIRST BEREDNING WHERE BEREDNING.BERAONR = valaonr AND 
            BEREDNING.OMRADE = valomrade NO-LOCK NO-ERROR.
            IF BEREDNING.AONR NE ? THEN DO:
               CREATE tidut.
               FIND FIRST AONRKONTKOD WHERE AONRKONTKOD.AONR = BEREDNING.AONR AND 
               AONRKONTKOD.DELNR = BEREDNING.DELNR NO-LOCK NO-ERROR.
               IF AVAILABLE AONRKONTKOD THEN
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Kontosträng:" + AONRKONTKOD.K1 + " " + AONRKONTKOD.K2 + " " +
               AONRKONTKOD.K3 + " " + AONRKONTKOD.K4 + " " + AONRKONTKOD.K5. 
            END.
         END.
         CREATE tidut.
      END.
   END.                    
END PROCEDURE.

PROCEDURE id_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   {IDTRP.I}                     
END PROCEDURE.

PROCEDURE kanmark_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   IF globforetag = "gran" OR globforetag = "elpa" THEN DO:
      FIND FIRST uppl_temp WHERE uppl_temp.NUM = mtrl_temp2.NUM NO-LOCK NO-ERROR.
      IF AVAILABLE uppl_temp THEN DO:                                    
         ASSIGN
         retvar = 1 
         ednum = 1    
         ednum3 = LENGTH(uppl_temp.ANMARK)      
         retvar = INDEX(uppl_temp.ANMARK,CHR(10),ednum)
         edtecken = 50   
         edtext = uppl_temp.ANMARK
         tidtext = "".   
         IF ednum3 > 1 THEN DO:
            CREATE tidut.
            kant = kant + 1.
            CREATE tidut.
            kant = kant + 1.
            ASSIGN SUBSTRING(tidut.UT,1) = "Anmärkning:".      
            {ANMARK2.I}  
         END.
      END.

   END.
END PROCEDURE.

PROCEDURE klar_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   CREATE tidut. 
   FOR EACH trp_mtrl WHERE trp_mtrl.LEVKOD = vald_lev AND trp_mtrl.ANTAL > 0: 
      IF trp_mtrl.DBEST NE "RETUR" THEN DO:              
         CREATE tidut.      
         ASSIGN  
         SUBSTRING(tidut.UT,1) = trp_mtrl.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(trp_mtrl.BENAMNING,1,35)                               
         SUBSTRING(tidut.UT,49) = trp_mtrl.ENHET    
         SUBSTRING(tidut.UT,55) = STRING(trp_mtrl.ANTAL,">>>>9").
         IF priset = TRUE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,61) = STRING(trp_mtrl.OPRIS,">>>>>9.99")
            SUBSTRING(tidut.UT,71) = STRING(trp_mtrl.ANTAL * trp_mtrl.OPRIS,">>>>>>9").
         END.   
      END.   
   END.                                           
END PROCEDURE.

PROCEDURE linor_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/  
   {LINORTRP.I}  
END PROCEDURE.


PROCEDURE materiel_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/  
   CREATE tidut.
   ASSIGN
   kant = kant + 1
   SUBSTRING(tidut.UT,1) = mtrlbuff.ENR
   SUBSTRING(tidut.UT,13) = SUBSTRING(mtrlbuff.BENAMNING,1,35)            
   SUBSTRING(tidut.UT,49) = mtrlbuff.ENHET
   SUBSTRING(tidut.UT,55) = STRING(mtrlbuff.ANTAL,">>>>9").
   IF priset = TRUE THEN DO:
      ASSIGN       
      SUBSTRING(tidut.UT,61) = STRING(mtrlbuff.PRIS,">>>>>9.99")
      SUBSTRING(tidut.UT,71) = STRING(mtrlbuff.TOTPRIS,">>>>>>9").
      sumpris = sumpris + mtrlbuff.TOTPRIS.  
   END.   
   IF numsok = FALSE THEN DO:
      FOR EACH mtrl_temp WHERE mtrl_temp.XKORD = mtrlbuff.XKORD AND
      mtrl_temp.ENR = mtrlbuff.ENR AND mtrl_temp.LEVKOD = mtrlbuff.LEVKOD:
         IF mtrl_temp.MTRLTEXT NE "" THEN DO:
            anmlangd = LENGTH(mtrl_temp.MTRLTEXT).
            CREATE tidut.         
            ASSIGN 
            SUBSTRING(tidut.UT,1) = "Text:".
            ASSIGN 
            SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,1,60).            
            anmlangd = anmlangd - 60.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,61,60).               
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,121,60).               
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,181,60).               
               anmlangd = anmlangd - 60.
            END.                              
         END.   
      END.
   END.
   ELSE DO:
      FOR EACH mtrl_temp WHERE mtrl_temp.NUM = mtrlbuff.NUM AND
      mtrl_temp.ENR = mtrlbuff.ENR AND mtrl_temp.LEVKOD = mtrlbuff.LEVKOD:
         IF mtrl_temp.MTRLTEXT NE "" THEN DO:
            anmlangd = LENGTH(mtrl_temp.MTRLTEXT).
            CREATE tidut.         
            ASSIGN 
            SUBSTRING(tidut.UT,1) = "Text:".
            ASSIGN 
            SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,1,60).            
            anmlangd = anmlangd - 60.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,61,60).               
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,121,60).               
               anmlangd = anmlangd - 60.
            END.
            IF anmlangd > 0 THEN DO:
               CREATE tidut.
               ASSIGN 
               SUBSTRING(tidut.UT,13) = SUBSTRING(mtrl_temp.MTRLTEXT,181,60).               
               anmlangd = anmlangd - 60.
            END.
         END.   
      END.
   END.    
END PROCEDURE.


PROCEDURE nedepa2_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
   {NEDEPA2.I}
END PROCEDURE.

PROCEDURE nedepa3_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
  {NEDEPA3.I}   
   
END PROCEDURE.

PROCEDURE nedepa_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
   {NEDEPA.I}
END PROCEDURE.

PROCEDURE rubrik_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   

   CREATE tidut.      
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                                 
   SUBSTRING(tidut.UT,49) = "ENHET"
   SUBSTRING(tidut.UT,55) = "ANTAL".
   IF priset = TRUE THEN DO:
      ASSIGN
      SUBSTRING(tidut.UT,61) = "NETTOPRIS"
      SUBSTRING(tidut.UT,71) = "SUMMA".                         
   END.   
   CREATE tidut.  
   kant = kant + 2.  
END PROCEDURE.


PROCEDURE sidfot_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
   IF skapa_mtrl.MARK NE "" THEN DO:   
      CREATE tidut.                                   
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Märkning:" + STRING(skapa_mtrl.MARK).
   END.
   IF skapa_mtrl.KOM NE "" THEN DO:   
      CREATE tidut.                                    
      ASSIGN      
      SUBSTRING(tidut.UT,1) = "Kommentarer:" + SUBSTRING(skapa_mtrl.KOM,1,65).
      
      IF LENGTH(skapa_mtrl.KOM) > 65 THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,66,80).
      END.
      IF LENGTH(skapa_mtrl.KOM) > 145 THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,146,80).
      END.
      IF LENGTH(skapa_mtrl.KOM) > 225 THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(skapa_mtrl.KOM,226).
      END.

      
   END.   
END PROCEDURE.

PROCEDURE skapa_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/    
   {SKAPATRP.I}
END PROCEDURE.

PROCEDURE skydd_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   /*
   {SKYDDTRP.I}
   */
END PROCEDURE.


PROCEDURE summa_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/ 
   {SUMMATRP.I}   
END PROCEDURE.


PROCEDURE totalt_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   IF priset = TRUE THEN DO:
     /*SUMMERING AV ALLA ENR*/
      ASSIGN
      totalt = 0 
      totalt2 = 0.  
      FOR EACH trp_mtrl WHERE trp_mtrl.LEVKOD = vald_lev: 
         IF trp_mtrl.DBEST NE "RETUR" THEN DO:
            totalt = totalt + (trp_mtrl.OPRIS * trp_mtrl.ANTAL).      
         END.   
      END. 
      str=
   "=====================================================================.=======".      
      CREATE tidut. 
      CREATE tidut.      
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      CREATE tidut.         
      SUBSTRING(tidut.UT,58) = "Summa totalt:".            
      SUBSTRING(tidut.UT,71) = STRING(totalt,">>>>>>9").
      CREATE tidut.         
      SUBSTRING(tidut.UT,71) = "=======".       
   END.   
END PROCEDURE.

PROCEDURE tva_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   {TVATRP.I}   
END PROCEDURE.

PROCEDURE upplag_UI :
/* -----------------------------------------------------------
  Purpose:
  Parameters:  <none>
  Notes:
-------------------------------------------------------------*/
   DEFINE VARIABLE nyanm AS CHARACTER NO-UNDO.
   IF AVAILABLE BERUPP THEN DO:
      IF INDEX (BERUPP.ANMARK,"$") > 0 THEN nyanm = SUBSTRING(BERUPP.ANMARK,1,INDEX(BERUPP.ANMARK,"$") - 1).
      ELSE nyanm = BERUPP.ANMARK.  
      ASSIGN
      retvar = 1
      ednum = 1
      ednum3 = LENGTH(nyanm)
      retvar = INDEX(nyanm,CHR(10),ednum)
      edtecken = 50
      edtext = nyanm
      tidtext = "".
      {ANMARK2.I}
   END.
END PROCEDURE.

PROCEDURE kskrubr_UI:
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "Ansl.don"
   SUBSTRING(tidut.UT,30) = "E-nummer"
   SUBSTRING(tidut.UT,40) = "Nollklämma"
   SUBSTRING(tidut.UT,55) = "Säkring"
   SUBSTRING(tidut.UT,65) = "Koppl.typ".
   CREATE tidut.
   kant = kant + 1.
   skapkab = 1. 
   FOR EACH BERVAL WHERE BERVAL.AONR = valaonr
   AND BERVAL.OMRADE = valomrade AND 
   BERVAL.NUM = uppl_temp.NUM NO-LOCK BY BERVAL.SKAPNUM:                        
       IF BERVAL.F2 NE "" THEN DO:                        
          ASSIGN                  
          SUBSTRING(tidut.UT,1) = STRING(skapkab)
          SUBSTRING(tidut.UT,10) = TRIM(BERVAL.F2)
          SUBSTRING(tidut.UT,20) = TRIM(BERVAL.F3).
          FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
          AND MTRLBER.F2 = BERVAL.F3 AND 
          MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
          IF AVAILABLE MTRLBER THEN DO:
             SUBSTRING(tidut.UT,30) = MTRLBER.ENR.
             IF MTRLBER.TYPBER = TRUE THEN DO:
                SUBSTRING(tidut.UT,65) = STRING(BERVAL.TYP).
             END.
          END.                           
          ASSIGN
          SUBSTRING(tidut.UT,40) = TRIM(BERVAL.F4)
          SUBSTRING(tidut.UT,55) = TRIM(BERVAL.F5).
          skapkab = skapkab + 1.
          CREATE tidut.
          kant = kant + 1.
       END.
    END.
END PROCEDURE.

PROCEDURE mstnrubr_UI:
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "HSP-förd"
   SUBSTRING(tidut.UT,30) = "LSP-förd"
   SUBSTRING(tidut.UT,40) = "E-nummer"
   SUBSTRING(tidut.UT,55) = "Säkring" .
   CREATE tidut.
   kant = kant + 1.
   skapkab = 1. 
   FOR EACH BERVAL WHERE BERVAL.AONR = valaonr
   AND BERVAL.OMRADE = valomrade AND 
   BERVAL.NUM = uppl_temp.NUM NO-LOCK BY BERVAL.SKAPNUM:                        
       IF BERVAL.F5 NE "" THEN DO:                        
          ASSIGN                  
          SUBSTRING(tidut.UT,1) = STRING(skapkab)
          SUBSTRING(tidut.UT,10) = TRIM(BERVAL.F5)
          SUBSTRING(tidut.UT,20) = TRIM(BERVAL.F2)
          SUBSTRING(tidut.UT,30) = TRIM(BERVAL.F3).
         
          IF BERVAL.F2 NE "" THEN DO:
              FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
              AND MTRLBER.F1 = BERVAL.F2 AND 
              MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
              IF AVAILABLE MTRLBER THEN DO:
                 SUBSTRING(tidut.UT,40) = MTRLBER.ENR.
              END.                           
          END.
          ELSE IF BERVAL.F3 NE "" THEN DO:
              FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = BERVAL.KTYPKOD
              AND MTRLBER.F2 = BERVAL.F3 AND 
              MTRLBER.MODUL > 0 NO-LOCK NO-ERROR.
              IF AVAILABLE MTRLBER THEN DO:
                 SUBSTRING(tidut.UT,40) = MTRLBER.ENR.
              END.                           
          END.
          SUBSTRING(tidut.UT,55) = TRIM(BERVAL.F4).
          skapkab = skapkab + 1.
          CREATE tidut.
          kant = kant + 1.
       END.
    END.
END PROCEDURE.

PROCEDURE kontaktp_UI:
   DEFINE INPUT PARAMETER aonrref AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER aonrdelnrref AS INTEGER NO-UNDO.   
   DEFINE OUTPUT PARAMETER refkon AS CHARACTER NO-UNDO.
   RUN FINNSTABELL.P (INPUT "EXTRADATA", OUTPUT bloblog).   
   IF bloblog = FALSE THEN RETURN.
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "AOREF"                   
   inextradatatemp.HUVUDCH = aonrref              
   inextradatatemp.HUVUDINT =  aonrdelnrref.         
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO:
      ASSIGN
      refkon = extradatatemp.SOKCHAR[5].   
   END.   
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph. 
   edataapph = ?. 
END PROCEDURE.

