/*GRANAHLS.P NY MATERIELKATALOG AHLSELL GRANINGE, ELEKTROSKANDIA VESAB*/
DEFINE VARIABLE leverant AS CHARACTER NO-UNDO.
DEFINE VARIABLE leverant2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE forevar AS CHARACTER NO-UNDO.
DEFINE VARIABLE E1 AS INTEGER NO-UNDO.
DEFINE VARIABLE E2 AS INTEGER NO-UNDO.
DEFINE VARIABLE B1 AS INTEGER NO-UNDO.
DEFINE VARIABLE B2 AS INTEGER NO-UNDO.
DEFINE VARIABLE ENH1 AS INTEGER NO-UNDO.
DEFINE VARIABLE ENH2 AS INTEGER NO-UNDO.
DEFINE VARIABLE NP1 AS INTEGER NO-UNDO.
DEFINE VARIABLE NP2 AS INTEGER NO-UNDO.
DEFINE VARIABLE BP1 AS INTEGER NO-UNDO.
DEFINE VARIABLE BP2 AS INTEGER NO-UNDO.
DEFINE VARIABLE decivar AS INTEGER NO-UNDO.
DEFINE VARIABLE pos2 AS INTEGER NO-UNDO.
DEFINE VARIABLE utfil AS CHARACTER NO-UNDO.
DEFINE VARIABLE sokfil AS CHARACTER NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER NO-UNDO.

DEFINE VARIABLE words AS CHARACTER FORMAT "X(132)" NO-UNDO.
DEFINE VARIABLE progvar AS INTEGER NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{EXTRADATA.I}

{NAMNDB.I}
DEFINE INPUT PARAMETER katavar AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER valfil AS INTEGER NO-UNDO.

DEFINE TEMP-TABLE tidin
   FIELD TIN AS CHARACTER FORMAT "X(256)".

{TIDUTTT.I}

DEFINE BUFFER mtrlbuff FOR MTRL.

/*MAIN*/
{AMERICANEUROPEAN.I}
progvar = valfil.
FIND FIRST FORETAG NO-LOCK NO-ERROR.
forevar = FORETAG.FORETAG.
IF forevar = "GRAN" THEN DO:
   IF valfil = 1 THEN DO:   
      ASSIGN
      leverant = "2" /*Ahlsell*/
      leverant2 = "". 
      progvar = 3.
   END.
   ELSE DO:
      ASSIGN
      leverant = "1" /*Onnine*/
      leverant2 = "". 
      progvar = 3.
   END.
END.
ELSE IF forevar = "SUND" OR forevar = "SNAT" THEN DO:
   IF valfil = 1 THEN DO:   
      ASSIGN
      leverant = "11". /*Elektroskandia*/
      leverant2 = "". 
   END.
   ELSE DO:
      ASSIGN
      leverant = "1" /*Onnine*/
      leverant2 = "". 
   END.
END.
ELSE IF forevar = "CELPA" THEN DO:
   
   IF valfil = 1 THEN DO:   
      /*SUND*/
      ASSIGN
      leverant = "1". /*Elektroskandia*/
      leverant2 = "". 
   END.
   ELSE DO:
      ASSIGN
      leverant = "5" /*Onnine*/
      /*leverant = "16" /*Onnine vesab*/*/
      leverant2 = "". 
   END.
END.
ELSE DO:
   IF valfil = 1 THEN DO:   
      ASSIGN
      leverant = "1" /*ES total*/
      leverant2 = "". 
   END.
   ELSE DO:
      ASSIGN
      leverant = "16" /*Onninen*/
      leverant2 = "18". 
   END.
END.
IF katavar = 1 THEN DO:
   IF OPSYS = "UNIX" THEN DO:
      kommando = SEARCH("quoter").
      IF kommando = ? THEN DO:          
         RETURN.       
      END.   
   END.
   ELSE DO:      
      kommando = SEARCH("quoter.exe").
      IF forevar = "GRAN" THEN DO:
         OUTPUT TO d:\elpool\delad\pro9\wrk\koll.txt APPEND.
         PUT "kommando: " kommando " " substring(FORETAG.FORETAG,1,10) SKIP.
         OUTPUT CLOSE.
      END.
      IF kommando = ? THEN RETURN.       
   END.
   
   IF forevar = "GRAN" AND namndb() = "GRANNORD" THEN DO:
      IF valfil = 1 THEN DO:      
         ASSIGN
         utfil = "d:\elpool\delad\pro9\wrk\nyahlsell.txt"
         /*dlcvar = "\\granguru\guru_ser\delad\klient\pro9\dlc\bin\QUOTER.EXE"*/
         wtidvar = "d:\elpool\delad\pro9\wrk\nyahlsell.q".
      END.
      ELSE DO:
         ASSIGN
         utfil = "d:\elpool\delad\pro9\wrk\nyonninen.txt".
      END.
   END.
   ELSE IF forevar = "GRAN" AND namndb() = "GRANES" THEN DO:
      IF valfil = 1 THEN DO:      
         ASSIGN
         utfil = "d:\elpool\delad\pro9\wrk\nyahlsell.txt"
         wtidvar = "d:\elpool\delad\pro9\wrk\nyahlsell.q".
      END.
      ELSE DO:
         ASSIGN
         utfil = "d:\elpool\delad\pro9\wrk\nyonninen.txt".
      END.
   END.
   ELSE IF forevar = "sund" OR forevar = "SNAT" THEN DO:
      IF valfil = 1 THEN DO:      
         ASSIGN
         utfil = "d:\delad\klient\pro9\wrk\nyelekt.txt".
         wtidvar = "d:\delad\klient\pro9\wrk\nyelekt.q".
      END.
      ELSE DO:
         ASSIGN
         utfil = "d:\delad\klient\pro9\wrk\nyonninen.txt".
      END.
   END.
   ELSE IF forevar = "ELPA" THEN DO:
      IF valfil = 1 THEN DO:               
         utfil = "C:\nyelekt.txt".
         wtidvar = "C:\nyelekt.q".
         /*utfil = "F:\elpool\elpnj\mtrlelpool\nyelekt.txt".
         wtidvar = "F:\elpool\elpnj\mtrlelpool\nyelekt.q".*/
         /*utfil = "f:\elpool\elpnj\SUND\elektroskandia\nyelekt.txt".
         wtidvar = "f:\elpool\elpnj\SUND\elektroskandia\nyelekt.q".*/
      END.
      ELSE DO:
         /*i ELEP.p tas filen*/
         ASSIGN
          utfil = "C:\nyonninen.txt".  
          /*utfil = "F:\elpool\elpnj\ats\onninen\Netto\nyonninen.txt".*/
         /*utfil = "f:\elpool\elpnj\VESAB\onninen\nyonninen.txt".*/
         /*utfil = "f:\elpool\elpnj\Esgraninge\onninen\nyonninen.txt".*/
      END.
   END.
   ELSE DO:      
      IF valfil = 1 THEN DO:      
         ASSIGN
         utfil = "e:\delad\pro9\guru\nyelekt.txt"
         /*dlcvar = "/usr/dlc9/bin/QUOTER.EXE"*/
         wtidvar = "e:\delad\pro9\guru\nyelekt.q".
      END.
      ELSE DO:
         ASSIGN
         utfil = "e:\delad\pro9\guru\nyonninen.txt".
      END.
   END.      
   sokfil = SEARCH(utfil).
   IF sokfil = ? THEN DO:
      RETURN.
   END.
   /*OPEN QUERY mtrlq FOR EACH MTRL WHERE MTRL.KALKNR = 0 AND 
   MTRL.LEVKOD = leverant USE-INDEX LEV NO-LOCK.
   DO TRANSACTION:
      GET FIRST mtrlq EXCLUSIVE-LOCK.
      IF AVAILABLE MTRL THEN DO:
         DELETE MTRL.         
      END.  
   END.
   REPEAT:      
      DO TRANSACTION:
         GET NEXT mtrlq EXCLUSIVE-LOCK.
         IF AVAILABLE MTRL THEN DO:
            DELETE MTRL.
         END.
         ELSE LEAVE.   
      END.
   END.                  
   CLOSE QUERY mtrlq.*/ 
   IF progvar = 1 THEN DO:   
      EMPTY TEMP-TABLE tidin NO-ERROR.       
      OS-COMMAND SILENT VALUE(kommando) VALUE(utfil) > VALUE(wtidvar).   
      IF OS-ERROR > 0 THEN DO:         
         RETURN.
      END.   
      IF forevar = "GRAN" THEN DO:
         INPUT FROM VALUE(wtidvar) CONVERT TARGET "iso8859-1" SOURCE "ibm850" NO-ECHO.
      END.
      ELSE IF forevar = "VAST"  OR forevar = "VOST" OR forevar = "VSYD" OR
      forevar = "VORD" OR forevar = "ELPA" THEN DO:
         INPUT FROM VALUE(wtidvar) CONVERT TARGET "iso8859-1" SOURCE "iso8859-1" NO-ECHO.
      END.
      ELSE DO:
         INPUT FROM VALUE(wtidvar) CONVERT TARGET "iso8859-1" SOURCE "iso8859-1" NO-ECHO.
      END.
      /*iso8859-1 swedish-7-bit ibm850"*/
      REPEAT:
         SET words VIEW-AS EDITOR INNER-CHARS 50 INNER-LINES 3 WITH FRAME DDD WIDTH 80.
         CREATE tidin.
         ASSIGN tidin.TIN = words.
      END.
      INPUT CLOSE. 
      OS-DELETE VALUE(wtidvar).
      
      FOR EACH tidin WHERE tidin.TIN = "":
         DELETE tidin.
      END.            
      decivar = 2.    
      IF forevar = "GRAN" THEN DO:
         ASSIGN
         E1 = 1
         E2 = 8
         B1 = 9
         B2 = 48
         ENH1 = 57
         ENH2 = 59
         NP1 = 69
         NP2 = 77
         BP1 = 60
         BP2 = 68
         pos2 = 77.
      END.
      ELSE IF forevar = "SUND" OR forevar = "SNAT" OR forevar = "cELPA"  THEN DO:
         ASSIGN
         E1 = 18
         E2 = 25
         B1 = 26
         B2 = 50
         ENH1 = 51
         ENH2 = 52
         NP1 = 86
         NP2 = 94
         BP1 = 74
         BP2 = 82
         pos2 = 94.
      END.
      ELSE DO:
         ASSIGN
         E1 = 19
         E2 = 25
         B1 = 26
         B2 = 50
         ENH1 = 51
         ENH2 = 52
         NP1 = 86
         NP2 = 94
         BP1 = 74
         BP2 = 82
         pos2 = 94.
      END.
      RUN CREMTRLU.P (INPUT decivar, INPUT pos2, INPUT leverant, INPUT E1, INPUT E2, INPUT B1, 
                     INPUT B2, INPUT ENH1, INPUT ENH2, INPUT BP1, INPUT BP2, INPUT NP1, 
                     INPUT NP2, INPUT TABLE tidin). 
   END.
   ELSE IF progvar = 3 THEN DO:
      /*Es stanardiserade inläsning för både onninen och ahlsell*/

   END.
   /*ELSE DO:
      IF forevar = "VAST"  OR forevar = "elpa" THEN DO:
         /*  sparade länkar till Storel*/
          RUN ELEFSE.P (INPUT leverant).
      END.
      ELSE RUN ELEF.P (INPUT leverant).
   END.
   
   OPEN QUERY mq2 FOR EACH MTRL WHERE MTRL.KALKNR = 0 AND 
   MTRL.LEVKOD = leverant AND MTRL.ENR = "" USE-INDEX LEV NO-LOCK.
   DO TRANSACTION:
      GET FIRST mq2 EXCLUSIVE-LOCK.
      IF AVAILABLE MTRL THEN DELETE MTRL.
   END.   
   REPEAT:
      DO TRANSACTION:
         GET NEXT mq2 EXCLUSIVE-LOCK.
         IF AVAILABLE MTRL THEN DELETE MTRL.
         ELSE LEAVE.
      END.
   END.*/
END.

RUN EXTRADATAHMT.P PERSISTENT SET edataapph.                      
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "INLKAT"                   
inextradatatemp.HUVUDCH = leverant.                    
                    
RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
FIND FIRST extradatatemp NO-LOCK NO-ERROR.
IF NOT AVAILABLE extradatatemp THEN DO:
   CREATE extradatatemp.
   ASSIGN
   extradatatemp.PROGRAM = "INLKAT"                   
   extradatatemp.HUVUDCH = leverant.  
END.
ASSIGN
extradatatemp.SOKDATE[1] = TODAY 
extradatatemp.SOKCHAR[1] = STRING(TIME,"hh:mm") 
extradatatemp.SOKCHAR[2] =  "AUTO".
RUN extraspar_UI IN edataapph (INPUT TABLE extradatatemp). 
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
EMPTY TEMP-TABLE extradatatemp NO-ERROR. 

/*IF forevar = "VAST"  OR forevar = "VOST" OR forevar = "VSYD" OR
forevar = "VORD" OR  forevar = "ELPA" THEN DO:
   /*Uppd. priser för Lev 12(ericsson) med Lev 16*/
   RUN PRISUPP7.P.
   /*Kopiera in extramateriel OM DET INTE REDAN FINNS I KATALOGEN FÖR DÅ TAR VI BORT DEN*/
   OPEN QUERY mtrlq1 FOR EACH MTRL WHERE MTRL.LEVKOD = leverant2 AND
   MTRL.KALKNR = 0 USE-INDEX LEV NO-LOCK.
   DO TRANSACTION:
      GET FIRST mtrlq1 EXCLUSIVE-LOCK.
      IF AVAILABLE MTRL THEN DO:
         FIND FIRST mtrlbuff WHERE mtrlbuff.ENR = MTRL.ENR AND mtrlbuff.LEVKOD = leverant
         AND mtrlbuff.KALKNR = 0 NO-LOCK NO-ERROR.
         IF AVAILABLE mtrlbuff THEN DO:
            DELETE MTRL.
         END.
         ELSE DO:
            CREATE mtrlbuff.
            ASSIGN
            mtrlbuff.ENR = MTRL.ENR
            mtrlbuff.BENAMNING = MTRL.BENAMNING
            mtrlbuff.ENHET = MTRL.ENHET
            mtrlbuff.LEVKOD = leverant
            mtrlbuff.NPRIS = MTRL.NPRIS
            mtrlbuff.BPRIS = MTRL.BPRIS
            mtrlbuff.KALKNR = 0.
         END.                  
      END.
   END.   
   REPEAT:
      DO TRANSACTION:
         GET NEXT mtrlq1 EXCLUSIVE-LOCK.
         IF AVAILABLE MTRL THEN DO:
            FIND FIRST mtrlbuff WHERE mtrlbuff.ENR = MTRL.ENR AND mtrlbuff.LEVKOD = leverant
            AND mtrlbuff.KALKNR = 0 NO-LOCK NO-ERROR.
            IF AVAILABLE mtrlbuff THEN DO:
               DELETE MTRL.
            END.
            ELSE DO:
               CREATE mtrlbuff.
               ASSIGN
               mtrlbuff.ENR = MTRL.ENR
               mtrlbuff.BENAMNING = MTRL.BENAMNING
               mtrlbuff.ENHET = MTRL.ENHET
               mtrlbuff.LEVKOD = leverant
               mtrlbuff.NPRIS = MTRL.NPRIS
               mtrlbuff.BPRIS = MTRL.BPRIS
               mtrlbuff.KALKNR = 0.
            END.                  
         END.
         ELSE LEAVE.
      END.
   END.   
   CLOSE QUERY mtrlq1.
END.

/*Kopiera in extramateriel*/
/*
OPEN QUERY mtrlq1 FOR EACH MTRL WHERE MTRL.LEVKOD = leverant2 AND
MTRL.KALKNR = 0 USE-INDEX LEV NO-LOCK.
GET FIRST mtrlq1 NO-LOCK.
DO WHILE AVAILABLE(MTRL):
   FIND FIRST mtrlbuff WHERE mtrlbuff.ENR = MTRL.ENR AND mtrlbuff.LEVKOD = leverant
   AND mtrlbuff.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE mtrlbuff THEN leverant = leverant.
   ELSE DO TRANSACTION:
      CREATE mtrlbuff.
      ASSIGN
      mtrlbuff.ENR = MTRL.ENR
      mtrlbuff.BENAMNING = MTRL.BENAMNING
      mtrlbuff.ENHET = MTRL.ENHET
      mtrlbuff.LEVKOD = leverant
      mtrlbuff.NPRIS = MTRL.NPRIS
      mtrlbuff.BPRIS = MTRL.BPRIS
      mtrlbuff.KALKNR = 0.
   END.                  
   GET NEXT mtrlq1 NO-LOCK.
END. 
CLOSE QUERY mtrlq1.

IF forevar = "VAST"  OR forevar = "VOST" OR forevar = "VSYD" OR
forevar = "VORD" THEN DO:
   /*kopiera in astrom och noratel*/
   OPEN QUERY mtrlq2 FOR EACH MTRL WHERE MTRL.LEVKOD = "14" AND
   MTRL.KALKNR = 0 USE-INDEX LEV NO-LOCK.
   GET FIRST mtrlq2 NO-LOCK.
   DO WHILE AVAILABLE(MTRL):
      FIND FIRST mtrlbuff WHERE mtrlbuff.ENR = MTRL.ENR AND mtrlbuff.LEVKOD = leverant
      AND mtrlbuff.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE mtrlbuff THEN leverant = leverant.
      ELSE DO TRANSACTION:
         CREATE mtrlbuff.
         BUFFER-COPY MTRL TO mtrlbuff
         ASSIGN         
         mtrlbuff.LEVKOD = leverant.         
      END.                  
      GET NEXT mtrlq2 NO-LOCK.
   END.
   CLOSE QUERY mtrlq2.
   OPEN QUERY mtrlq3 FOR EACH MTRL WHERE MTRL.LEVKOD = "15" AND
   MTRL.KALKNR = 0 USE-INDEX LEV NO-LOCK.
   GET FIRST mtrlq3 NO-LOCK.
   DO WHILE AVAILABLE(MTRL):
      FIND FIRST mtrlbuff WHERE mtrlbuff.ENR = MTRL.ENR AND mtrlbuff.LEVKOD = leverant
      AND mtrlbuff.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE mtrlbuff THEN leverant = leverant.
      ELSE DO TRANSACTION:
         CREATE mtrlbuff.
         BUFFER-COPY MTRL TO mtrlbuff
         ASSIGN         
         mtrlbuff.LEVKOD = leverant.         
      END.                  
      GET NEXT mtrlq3 NO-LOCK.
   END.
   CLOSE QUERY mtrlq3.
END.
*/
/*Uppdatera priser i gjorda bered. för vald lev.*/
RUN PRISUBER.P (INPUT leverant).      
/*Uppdatera priser i adm.bered. för vald lev.*/
RUN BERKOLL2.P (INPUT leverant, INPUT-OUTPUT TABLE tidut).
/*Uppdatera satsers priser i bered. för vald lev.*/
RUN PRISUPP6.P (INPUT leverant, INPUT forevar).
/*Priser i depåer*/
IF forevar = "sund"  OR forevar = "SNAT" THEN.
ELSE DO:
   FOR EACH DEPA NO-LOCK.
      FIND FIRST MTRLDEP WHERE MTRLDEP.DEPNR = DEPA.DEP-NR AND MTRLDEP.IBDATUM = ? 
      AND MTRLDEP.LEVKOD = leverant NO-LOCK NO-ERROR.
      IF AVAILABLE MTRLDEP THEN DO:       
         RUN DEPKOLL.P (INPUT leverant, INPUT DEPA.DEP-NR, INPUT-OUTPUT TABLE tidut).      
      END.   
   END.
END.
IF forevar = "VAST"  OR forevar = "VOST" OR forevar = "VSYD" OR
forevar = "VORD" OR  forevar = "CELPA" THEN DO:
   leverant = "12".
   /*Uppdatera priser i gjorda bered. för vald lev.*/
   RUN PRISUBER.P (INPUT leverant).      
   /*Uppdatera priser i adm.bered. för vald lev.*/
   RUN BERKOLL2.P (INPUT leverant, INPUT-OUTPUT TABLE tidut).
   FOR EACH DEPA NO-LOCK.
      FIND FIRST MTRLDEP WHERE MTRLDEP.DEPNR = DEPA.DEP-NR AND MTRLDEP.IBDATUM = ? 
      AND MTRLDEP.LEVKOD = leverant NO-LOCK NO-ERROR.
      IF AVAILABLE MTRLDEP THEN DO:       
         RUN DEPKOLL.P (INPUT leverant, INPUT DEPA.DEP-NR, INPUT-OUTPUT TABLE tidut).      
      END.   
   END.
END.*/
{EUROPEANAMERICAN.I}