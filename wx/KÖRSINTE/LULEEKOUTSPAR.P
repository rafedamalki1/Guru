/*D:\DELAD\PRO9\GURU\LULEEKOUTSPAR.P*/
DEFINE TEMP-TABLE felmeddtemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.
{TIDUTTT.I}

DEFINE TEMP-TABLE slutut
   FIELD ORT AS CHARACTER
   FIELD VDATUM AS DATE
   FIELD FTG AS CHARACTER
   FIELD DEBKRED AS LOGICAL 
   FIELD FELDEBKRED AS LOGICAL
   FIELD ANTAL AS DECIMAL 
   FIELD BELOPP AS DECIMAL       
   FIELD K1 AS CHARACTER
   FIELD K2 AS CHARACTER
   FIELD K3 AS CHARACTER
   FIELD K4 AS CHARACTER
   FIELD K5 AS CHARACTER
   FIELD BIL AS CHARACTER
   FIELD K2POS8 AS CHARACTER
   INDEX ORG IS PRIMARY FTG DEBKRED K1 K2 K3 K4 K5.
DEFINE INPUT PARAMETER feltider AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER vkdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER skarpvar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR slutut.

DEFINE VARIABLE filut AS CHARACTER NO-UNDO.
DEFINE VARIABLE filutkopia AS CHARACTER NO-UNDO.

DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnk AS CHARACTER NO-UNDO.


DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE ekofil AS CHARACTER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.              
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE summmallab AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallabch AS CHARACTER NO-UNDO.
DEFINE VARIABLE summmallaant AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallaantch AS CHARACTER NO-UNDO.
DEFINE VARIABLE beloppchar AS CHARACTER NO-UNDO.
DEFINE VARIABLE nolldummy AS CHARACTER NO-UNDO.
DEFINE VARIABLE verifnummervar AS INTEGER NO-UNDO.
{NAMNDB.I}
&Scoped-define NEW NEW
{REGVAR.I}

IF namndb() = "UTBI" THEN RETURN.
regar = YEAR(TODAY).
IF MONTH(TODAY) = 1 THEN regmannamn = "jan".
ELSE IF MONTH(TODAY) = 2 THEN regmannamn = "feb".
ELSE IF MONTH(TODAY) = 3 THEN regmannamn = "mar". 
ELSE IF MONTH(TODAY) = 4 THEN regmannamn = "apr". 
ELSE IF MONTH(TODAY) = 5 THEN regmannamn = "maj". 
ELSE IF MONTH(TODAY) = 6 THEN regmannamn = "jun".
ELSE IF MONTH(TODAY) = 7 THEN regmannamn = "jul".
ELSE IF MONTH(TODAY) = 8 THEN regmannamn = "aug". 
ELSE IF MONTH(TODAY) = 9 THEN regmannamn = "sep".
ELSE IF MONTH(TODAY) = 10 THEN regmannamn = "okt". 
ELSE IF MONTH(TODAY) = 11 THEN regmannamn = "nov".
ELSE IF MONTH(TODAY) = 12 THEN regmannamn = "dec".
{AMERICANEUROPEAN.I}
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.   
IF Guru.Konstanter:globforetag = "ELPA" THEN DO:        
   ASSIGN
   prognamn = "D:\DELAD\PRO9S\EXPORT\tidguru"
   prognamnk = "d:\DELAD\PRO9S\EXKOPIA\tidguru" + STRING(YEAR(TODAY)) + regmannamn.
END.
ELSE IF Guru.Konstanter:globforetag = "LULE" THEN DO:
   ASSIGN   
   prognamn = "D:\elpool\DELAD\PRO9s\EXPORT\tidguru"
   prognamnk = "D:\elpool\DELAD\PRO9s\EXKOPIA\tidguru" + STRING(YEAR(TODAY)) + regmannamn.
   
END.
/*
GUDIM1 4 TEXT('Konto')                                                   
GUDIM2 3 TEXT('AO')                                                      
GUDIM3 4 TEXT('Rgr')                                                     
GUDIM4 9 TEXT('Projekt')                                                 
GUBDAT 10 0 TEXT('Bokf.datum') Format: ÅÅÅÅMMDD + två blanka              
GUBELX 17 3 TEXT('Belopp i SEK') 17 inkl. 3 dec                           
GUTEXT 30 TEXT('Verifikattext')                                           
GUPERI 8 0 TEXT('Period') Format: ÅÅÅÅMM + två blanka                 
GUDOTY 3 TEXT('Verifikattyp')                                            
GUIDNO 7 0 TEXT('Verifikatnummer')                                       
GUTID1 6 2 TEXT('Ant tim normaltid')                                     
GUBEL1 17 3 TEXT('Belopp normaltid')                                      
GUTID2 6 2 TEXT('Ant tim övertid')                                       
GUBEL2 17 3 TEXT('Belopp övertid')                                        
GUTID3 6 2 TEXT('Ant tim kval. övertid')                                 
GUBEL3 17 3 TEXT('Belopp kval. övertid')                                
*/

ASSIGN
nrcol[1] = 1
nrcol[2] = 2
nrcol[3] = 3
nrcol[4] = 4
nrcol[5] = 5
nrcol[6] = 6
nrcol[7] = 7
nrcol[8] = 8
nrcol[9]  = 9
nrcol[10] = 10
nrcol[11] = 11
nrcol[12] = 12
nrcol[13] = 13
nrcol[14] = 14
nrcol[15] = 15
nrcol[16] = 16.
ASSIGN
breddantal = 16   /*antal kolumner*/
bredd[1] = 4    
bredd[2] = 3    
bredd[3] = 4    
bredd[4] = 9    
bredd[5] = 10   
bredd[6] = 17   
bredd[7] = 30   
bredd[8] = 8    
bredd[9] = 3    
bredd[10] = 11    
bredd[11] = 6   
bredd[12] = 17  
bredd[13] = 6   
bredd[14] = 17  
bredd[15] = 6   
bredd[16] = 17.

ASSIGN
i = 2.     
utnr[1] = 1.
DO WHILE i <= breddantal:             
   utnr[i] = utnr[i - 1] + bredd[i - 1].            
   i = i + 1.
END.

RUN poster_UI.
RUN ut_UI.
{EUROPEANAMERICAN.I}
PROCEDURE poster_UI:
   IF feltider = TRUE THEN DO:
      /*TIDFELAR*/
      /*KREDIT*/
      FOR EACH slutut WHERE slutut.FELDEBKRED = FALSE:
         RUN skaputpost_UI (INPUT -1).
      END.
      FOR EACH slutut WHERE slutut.FELDEBKRED = TRUE:
         RUN skaputpost_UI (INPUT 1).
      END.
   END.
   ELSE DO:
      FOR EACH slutut WHERE slutut.DEBKRED = TRUE:
         RUN skaputpost_UI (INPUT 1).
      END.
      FOR EACH slutut WHERE slutut.DEBKRED = FALSE:
         RUN skaputpost_UI (INPUT -1).
      END.
   END.
   
END PROCEDURE.

PROCEDURE skaputpost_UI :
   DEFINE INPUT PARAMETER teckenvar AS INTEGER NO-UNDO.
   
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = slutut.K5
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[3]]) = slutut.K3
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = slutut.K1 + slutut.K2
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = STRING(slutut.VDATUM,"99999999")  
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = SUBSTRING(STRING(slutut.VDATUM,"99999999"),1,6)
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = "TI"
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = "".      
   IF slutut.K1 NE "" THEN SUBSTRING(tidut.UT,utnr[nrcol[7]]) = SUBSTRING(slutut.ORT,1,30).  
   IF teckenvar * slutut.BELOPP >= 0 THEN DO:
      IF slutut.K4 = "" THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[11]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,">>9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[12]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,">>>>>>>>>>>>9.999")). 
      END.
      ELSE IF slutut.K4 = "ENKE" THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[13]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,">>9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[14]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,">>>>>>>>>>>>9.999")).
      END.
      ELSE DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[15]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,">>9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[16]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,">>>>>>>>>>>>9.999")).
      END.
   END.
   ELSE DO:
      IF slutut.K4 = "" THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[11]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,"->9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[12]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,"->>>>>>>>>>>9.999")). 
      END.
      ELSE IF slutut.K4 = "ENKE" THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[13]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,"->9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[14]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,"->>>>>>>>>>>9.999")).
      END.
      ELSE DO:
         ASSIGN
         SUBSTRING(tidut.UT,utnr[nrcol[15]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,"->9.99"))       
         SUBSTRING(tidut.UT,utnr[nrcol[16]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,"->>>>>>>>>>>9.999")).
      END.
   END.
END PROCEDURE.

PROCEDURE ut_UI:   
    OUTPUT TO VALUE(prognamn) APPEND.
    FOR EACH tidut:
       PUT UNFORMATTED tidut.UT AT 1 SKIP.
    END.
    OUTPUT CLOSE.
    OUTPUT TO VALUE(prognamnK) APPEND.
    PUT "ny fil " TODAY AT 1 SKIP.
    FOR EACH tidut:
       PUT UNFORMATTED tidut.UT AT 1 SKIP.
    END.
    OUTPUT CLOSE.
END PROCEDURE.       
