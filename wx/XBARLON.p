 /* SUMDAG.P SUMMER TIDREGTABAR/DAG   */
/* RESTID 
RESTID KAN KOMMA MED LÖNETILLÄGG ELLER MED ÖVERTIDSTILLÄGG
MED LÖNETILLÄGG:
res_UI BERÄKNAR KOSTNADEN.
skapa_UI SKAPAR EN tilltab MED PRISTYP 'RESTID...' OCH FÅR LÖNEKOSTNADEN FRÅN res_UI.
restid_UI SKAPAR EN restid MED PRISTYP 'RESTID...' OCH FÅR TIMMAR = RESTIDSTIMMAR.
MED ÖVERTID:
ekforst SKAPAS.
ANTAL = 0 
OTIMMAR = 0
OANT1 BERÄKNAS   
OANT2 BERÄKNAS
OANT3 BERÄKNAS
restid_UI SKAPAR EN restid MED PRISTYP 'RESTID...' OCH FÅR TIMMAR = RESTIDSTIMMAR.
over_UI BERÄKNAR KOSTNADEN.
DAGS FÖR SUMMERING:        
ekforst OCH ÖVRIGA TABELER SUMMERAS TILL  slutsum PER PERSON AONR DATUM OCH PRISTYP.
VARJE slutsum SKAPAR EN NY SUMTIDDAG.
VARJE restid  SKAPAR EN NY SUMTIDDAG.
ALLTSÅ HAMNAR TIMMAR RESTID OCH ÖVERTIDSKOSTNAD EJ PÅ SAMMA REGISTRERING.
RESTIDSTIMMAR MED LÖNETILLÄGG OCH MED ÖVERTID FÅR ALLTSÅ VAR SIN REGISTRERING OM MAN 
HAR RESTID MED LÖNETILLÄGG OCH MED ÖVERTID SAMMA DAG.
ALLTSÅ KAN DET FINNAS TRE SUMTIDDAG 
EN MED TIMMAR FÖR LÖNETILLÄGSRESTID
EN MED TIMMAR FÖR ÖVERTIDSTILLÄGG
EN MED KOSTNADER FÖR ÖVERTIDSTILLÄGG
sumtill_UI SUMMERAR LÖNETILLÄGGSKOSTNADERNA.         
VARJE tilltab SÖKER UPP EN SUMTIDDAG MED SAMMA PERSON AONR DATUM OCH PRISTYP
OCH SUMMERAR IN KOSTNADERNA.
ALLTSÅ KAN LÖNETILÄGGSKOSTNDER FÖR RESTID HAMNA PÅ NÅGON AV DE OVAN NÄMDA SUMTIDDAG 
DÄRFÖR SÖKES DEN SUMTID SOM HAR ÖVERTIDKOSTNAD MAN FÅR DÅ:
EN MED TIMMAR FÖR LÖNETILLÄGSRESTID
EN MED TIMMAR FÖR ÖVERTIDSTILLÄGG
EN MED KOSTNADER FÖR ÖVERTIDSTILLÄGG OCH KOSTNADER FÖR LÖNETILLÄGG
FINS DET BARA ÖVERTID FÅS TVÅ POSTER:                             
EN MED TIMMAR FÖR ÖVERTIDSTILLÄGG
EN MED KOSTNADER FÖR ÖVERTIDSTILLÄGG.
FINS DET BARA LÖNETILLÄGG FÅS EN POST:                             
EN MED TIMMAR FÖR LÖNETILLÄGSRESTID OCH MED KOSTNADER FÖR LÖNETILLÄGSRESTID.

*/

DEFINE NEW SHARED VARIABLE aonrrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE aonrrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE printer LIKE SKRIVARDEF.UTSKRIFTSTYP NO-UNDO.
DEFINE NEW SHARED VARIABLE printer1 LIKE SKRIVARDEF.SKRIVARID NO-UNDO.
DEFINE NEW SHARED VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE globanv LIKE ANVANDARE.ANVANDARE NO-UNDO.
DEFINE NEW SHARED VARIABLE globlos LIKE ANVANDARE.AV-LOSEN NO-UNDO.
DEFINE NEW SHARED VARIABLE globforetag LIKE FORETAG.FORETAG NO-UNDO.
DEFINE NEW SHARED VARIABLE plusaonr LIKE TIDREGITAB.AONR NO-UNDO.
DEFINE NEW SHARED VARIABLE plusdnr LIKE TIDREGITAB.DELNR NO-UNDO.
DEFINE NEW SHARED VARIABLE plusrec AS RECID  NO-UNDO.
DEFINE NEW SHARED VARIABLE plustidrec AS RECID  NO-UNDO.
DEFINE NEW SHARED VARIABLE plustid AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE plusdval LIKE PROGVAL.JANEJ NO-UNDO.
DEFINE NEW SHARED VARIABLE succelval LIKE PROGVAL.JANEJ NO-UNDO.     
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE bdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE avdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE bilforare AS LOGICAL FORMAT "JA/NEJ" NO-UNDO.
DEFINE NEW SHARED VARIABLE enflerdygns AS LOGICAL FORMAT "ENDAGS/FLERDYGNS" NO-UNDO.
DEFINE NEW SHARED VARIABLE vart AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE NEW SHARED VARIABLE klocka LIKE TIDREGITAB.START NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE muszval AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE vartgamla AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten LIKE ARBETSTIDTAB.LUNCHSTART NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet LIKE ARBETSTIDTAB.LUNCHSLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.   
DEFINE NEW SHARED VARIABLE regstartsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE regslutsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE bustart3 LIKE TIDREGITAB.START NO-UNDO. 

DEFINE TEMP-TABLE ekoforst
   FIELD OMRADE LIKE PERSONALTAB.OMRADE 
   FIELD PERSONALKOD LIKE EKRAPPRESULT.EPERSONALKOD 
   FIELD AONR LIKE EKRAPPRESULT.EPROJEKT 
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD DATUM LIKE TIDREGITAB.DATUM
   FIELD ORG LIKE EKRAPPRESULT.EORG  
   FIELD PRIS LIKE TIDREGITAB.PRIS   
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP    
   FIELD BELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD ANTAL AS DECIMAL
   FIELD OTIMMAR AS DECIMAL             
 /*  FIELD LONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD LONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    */
   FIELD LONBELOPP LIKE EKRAPPRESULT.ELONBELOPP  
   FIELD OANT1 LIKE TIDREGITAB.OANT1 
   FIELD OANT2 LIKE TIDREGITAB.OANT2 
   FIELD OANT3 LIKE TIDREGITAB.OANT3 
   FIELD OKOD1 LIKE TIDREGITAB.OKOD1 
   FIELD OKOD2 LIKE TIDREGITAB.OKOD2 
   FIELD OKOD3 LIKE TIDREGITAB.OKOD3   
   FIELD TRAKTKOD LIKE TIDREGITAB.TRAKTKOD 
   FIELD TRAKTANTAL LIKE TIDREGITAB.TRAKTANTAL 
   FIELD TRAAVTAL LIKE PERSONALTAB.TRAAVTAL      
   FIELD TBELOPP LIKE EKRAPPRESULT.EBELOPP
   INDEX PERSAO IS PRIMARY PERSONALKOD AONR DELNR ASCENDING
   INDEX ORGAONR ORG AONR DELNR ASCENDING.
DEFINE TEMP-TABLE slutsum               
   FIELD OMRADE LIKE PERSONALTAB.OMRADE 
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP
   FIELD DATUM LIKE TIDREGITAB.DATUM 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL AS DECIMAL LABEL "TIMMAR"          
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR"
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"         
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.  
DEFINE TEMP-TABLE oversum   
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD DATUM LIKE TIDREGITAB.DATUM
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL LIKE EKRAPPRESULT.EANTAL                 
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP              
   FIELD OVERTIDTILL LIKE TIDREGITAB.OVERTIDTILL
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.     
DEFINE TEMP-TABLE traktsum   
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP
   FIELD DATUM LIKE TIDREGITAB.DATUM
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL LIKE EKRAPPRESULT.EANTAL                 
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP              
   FIELD TRAKTKOD LIKE TIDREGITAB.TRAKTKOD
   FIELD TRAAVTAL LIKE PERSONALTAB.TRAAVTAL
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.      
DEFINE TEMP-TABLE tilltab               
   FIELD OMRADE LIKE PERSONALTAB.OMRADE                                    
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD  
   FIELD AONR LIKE TIDREGITAB.AONR  
   FIELD DELNR LIKE TIDREGITAB.DELNR       
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP   
   FIELD DATUM LIKE TIDREGITAB.DATUM            
   FIELD TBELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD LBELOPP AS DECIMAL    
   FIELD IKOST LIKE SUMTID.IKOSTNAD 
   FIELD TYPKOD LIKE LONTILL.TYPKOD
   FIELD VECKOKORD LIKE TIDREGITAB.VECKOKORD   
   INDEX PERSONALKOD IS PRIMARY PERSONALKOD AONR DELNR PRISTYP.    
DEFINE TEMP-TABLE overtidhj 
   FIELD PERSONALKOD LIKE ekoforst.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS    
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP
   FIELD DATUM LIKE TIDREGITAB.DATUM   
   FIELD AONR LIKE EKRAPPRESULT.EPROJEKT 
   FIELD DELNR LIKE TIDREGITAB.DELNR     
   FIELD BELOPP LIKE TIDREGITAB.PRIS
   FIELD OVERTIDTILL LIKE TIDREGITAB.OVERTIDTILL   
   FIELD OVERANTAL LIKE TIDREGITAB.OVERANTAL.           
DEFINE TEMP-TABLE restid               
   FIELD OMRADE LIKE PERSONALTAB.OMRADE 
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD DATUM LIKE TIDREGITAB.DATUM         
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL AS DECIMAL LABEL "RTIMMAR"                
   INDEX PERSONALKOD IS PRIMARY PERSONALKOD AONR DELNR ASCENDING.     
DEFINE TEMP-TABLE ejlon
   FIELD AONR LIKE SUMEJLON.AONR 
   FIELD DATUM LIKE SUMEJLON.DATUM 
   FIELD DELNR LIKE SUMEJLON.DELNR 
   FIELD LONKOST LIKE SUMEJLON.LONKOST 
   FIELD PERSONALKOD LIKE SUMEJLON.PERSONALKOD 
   FIELD PRISTYP LIKE SUMEJLON.PRISTYP 
   FIELD TYPKOD LIKE SUMEJLON.TYPKOD 
   FIELD VECKOKORD LIKE SUMEJLON.VECKOKORD
   INDEX AONR IS PRIMARY AONR DELNR DATUM PERSONALKOD PRISTYP TYPKOD.
   
DEFINE VARIABLE vartypkod LIKE LONTILL.TYPKOD NO-UNDO.         
DEFINE VARIABLE omrpers LIKE PERSONALTAB.OMRADE NO-UNDO.
DEFINE VARIABLE tidtim AS DECIMAL NO-UNDO. 
DEFINE VARIABLE otidtim AS DECIMAL NO-UNDO.
DEFINE VARIABLE tid100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim1 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE arrhjsum2 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsum3 AS DECIMAL NO-UNDO.  

DEFINE VARIABLE nattpers LIKE TIDREGITAB.PERSONALKOD NO-UNDO.    
DEFINE VARIABLE nattpris LIKE TIDREGITAB.PRIS NO-UNDO.   
DEFINE VARIABLE nattaonr LIKE AONRTAB.AONR NO-UNDO.  
DEFINE VARIABLE nattdelnr LIKE AONRTAB.DELNR NO-UNDO.  
DEFINE VARIABLE nattaoomr LIKE AONRTAB.OMRADE NO-UNDO.  
DEFINE VARIABLE ovkod LIKE TIDREGITAB.OVERTIDTILL NO-UNDO. 
DEFINE VARIABLE ovantal LIKE TIDREGITAB.OVERANTAL NO-UNDO.
DEFINE VARIABLE ovbelopp LIKE EKRAPPRESULT.EOVERBELOPP NO-UNDO. 
DEFINE VARIABLE multi AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE kodanst LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE VARIABLE traav LIKE PERSONALTAB.TRAAVTAL NO-UNDO. 
DEFINE VARIABLE pkod LIKE PERSONALTAB.PERSONALKOD NO-UNDO. 
DEFINE VARIABLE reskod LIKE TIDREGITAB.LONTILLAGG NO-UNDO.  
DEFINE VARIABLE resantal AS DECIMAL NO-UNDO. 
DEFINE VARIABLE resbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE totpristim AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE interpristim AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE trakod LIKE TIDREGITAB.TRAKTKOD NO-UNDO. 
DEFINE VARIABLE traantal LIKE TIDREGITAB.TRAKTANTAL NO-UNDO.
DEFINE VARIABLE trabelopp LIKE EKRAPPRESULT.ETRAKTBELOPP NO-UNDO. 
DEFINE VARIABLE lonkod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE lonantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE lonbeloppv LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE typover LIKE EKRAPPRESULT.ERESULTENH NO-UNDO.   
DEFINE VARIABLE kollvecka LIKE VECKONATT.VECKOKORD NO-UNDO.
DEFINE VARIABLE inder AS LOGICAL NO-UNDO.
DEFINE VARIABLE sumtidrec AS RECID NO-UNDO.
DEFINE BUFFER tidbuff FOR TIDREGITAB.
DEFINE QUERY sumarq FOR SUMTID.
DEFINE QUERY sumq FOR SUMTIDDAG.
DEFINE QUERY tidq FOR TIDREGITAB.
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG. 
IF FORETAG.PROGRAM = "PLUSD" THEN plusdval = TRUE.
			     ELSE plusdval = FALSE.
/*SUMERING/DAG*/

OPEN QUERY sumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.VECKOKORD NE " " AND 
YEAR(SUMTIDDAG.DATUM) = 1998 NO-LOCK.
DO TRANSACTION:
   GET FIRST sumq EXCLUSIVE-LOCK.
   IF SUMTIDDAG.PERSONALKOD = "430" OR SUMTIDDAG.PERSONALKOD = "534" OR
   SUMTIDDAG.PERSONALKOD = "535" OR SUMTIDDAG.PERSONALKOD = "619" OR
   SUMTIDDAG.PERSONALKOD = "703" THEN musz = musz.
   ELSE DO:
      ASSIGN
      SUMTIDDAG.IKOSTNAD = SUMTIDDAG.BELOPP
      SUMTIDDAG.LONKOST = 0. 
   END.         
END.                                             
REPEAT:
   DO TRANSACTION:
      GET NEXT sumq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMTIDDAG THEN DO:
         IF SUMTIDDAG.PERSONALKOD = "430" OR SUMTIDDAG.PERSONALKOD = "534" OR
         SUMTIDDAG.PERSONALKOD = "535" OR SUMTIDDAG.PERSONALKOD = "619" OR
         SUMTIDDAG.PERSONALKOD = "703" THEN musz = musz.
         ELSE DO:
            ASSIGN
            SUMTIDDAG.IKOSTNAD = SUMTIDDAG.BELOPP
            SUMTIDDAG.LONKOST = 0. 
         END. 
      END. 
      ELSE LEAVE.
   END.    
END.
CLOSE QUERY sumq.
OPEN QUERY sumarq FOR EACH SUMTID WHERE SUMTID.VECKOKORD NE " " AND 
YEAR(SUMTID.DATUM) = 1998 NO-LOCK.
DO TRANSACTION:
   GET FIRST sumarq EXCLUSIVE-LOCK.
   IF SUMTID.PERSONALKOD = "430" OR SUMTID.PERSONALKOD = "534" OR
   SUMTID.PERSONALKOD = "535" OR SUMTID.PERSONALKOD = "619" OR
   SUMTID.PERSONALKOD = "703" THEN musz = musz.
   ELSE DO:
      ASSIGN
      SUMTID.IKOSTNAD = 0
      SUMTID.LONKOST = 0.      
   END.         
END.                                             
REPEAT:
   DO TRANSACTION:
      GET NEXT sumarq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMTID THEN DO:
         IF SUMTID.PERSONALKOD = "430" OR SUMTID.PERSONALKOD = "534" OR
         SUMTID.PERSONALKOD = "535" OR SUMTID.PERSONALKOD = "619" OR
         SUMTID.PERSONALKOD = "703" THEN musz = musz.
         ELSE DO:
            ASSIGN
            SUMTID.IKOSTNAD = 0
            SUMTID.LONKOST = 0.
         END. 
      END. 
      ELSE LEAVE.
   END. 
END.

CLOSE QUERY sumq.        
OPEN QUERY ejlonq FOR EACH SUMEJLON WHERE 
YEAR(SUMEJLON.DATUM) = 1998 NO-LOCK.
DO TRANSACTION:
   GET FIRST ejlonq EXCLUSIVE-LOCK.
   IF AVAILABLE SUMEJLON THEN DELETE SUMEJLON.            
END.                                             
REPEAT:
   DO TRANSACTION:
      GET NEXT ejlonq EXCLUSIVE-LOCK.
      IF AVAILABLE SUMEJLON THEN DELETE SUMEJLON. 
      ELSE LEAVE.
   END.   
END.      

ASSIGN 
kollvecka = ""
pkod = " ".
RUN sumtid_UI.   /*TID FÖR EJ VECKOKÖRDA*/
ASSIGN   
kollvecka = ""
pkod = " ".
RUN sumtill_UI.  /*TILL FÖR EJ VECKOKÖRDA*/      
IF globforetag = "NORD" THEN DO:
   FOR EACH ejlon where ejlon.LONKOST > 0 NO-LOCK:
      DO TRANSACTION:
         FIND FIRST SUMEJLON WHERE SUMEJLON.AONR = ejlon.AONR AND
         SUMEJLON.DELNR = ejlon.DELNR AND SUMEJLON.DATUM = ejlon.DATUM AND
         SUMEJLON.PERSONALKOD = ejlon.PERSONALKOD AND
         SUMEJLON.PRISTYP = ejlon.PRISTYP AND SUMEJLON.TYPKOD = ejlon.TYPKOD
         USE-INDEX TYPKOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE SUMEJLON THEN CREATE SUMEJLON.
         ASSIGN
         SUMEJLON.AONR = ejlon.AONR
         SUMEJLON.DATUM = ejlon.DATUM 
         SUMEJLON.DELNR = ejlon.DELNR 
         SUMEJLON.LONKOST = SUMEJLON.LONKOST + ejlon.LONKOST
         SUMEJLON.PERSONALKOD = ejlon.PERSONALKOD
         SUMEJLON.PRISTYP = ejlon.PRISTYP
         SUMEJLON.TYPKOD = ejlon.TYPKOD
         SUMEJLON.VECKOKORD = ejlon.VECKOKORD.
      END.   
   END.
END.   

/*SUMMERIG/DAG*/
FOR EACH SUMTIDDAG WHERE YEAR(SUMTIDDAG.DATUM) = 1998 AND SUMTIDDAG.VECKOKORD NE "" NO-LOCK 
BREAK BY SUMTIDDAG.PERSONALKOD BY SUMTIDDAG.AONR BY SUMTIDDAG.DELNR BY SUMTIDDAG.PRISTYP:
   IF SUMTIDDAG.PERSONALKOD = "430" OR SUMTIDDAG.PERSONALKOD = "534" OR
   SUMTIDDAG.PERSONALKOD = "535" OR SUMTIDDAG.PERSONALKOD = "619" OR
   SUMTIDDAG.PERSONALKOD = "703" THEN musz = musz.
   ELSE DO:
      ACCUMULATE SUMTIDDAG.LONKOST 
      (TOTAL BY SUMTIDDAG.PERSONALKOD BY SUMTIDDAG.AONR BY SUMTIDDAG.DELNR BY 
      SUMTIDDAG.PRISTYP).
      ACCUMULATE SUMTIDDAG.IKOSTNAD 
      (TOTAL BY SUMTIDDAG.PERSONALKOD BY SUMTIDDAG.AONR BY SUMTIDDAG.DELNR BY 
      SUMTIDDAG.PRISTYP). 
       
      IF LAST-OF(SUMTIDDAG.PRISTYP) THEN DO TRANSACTION:
         FIND FIRST SUMTID WHERE YEAR(SUMTID.DATUM) = YEAR(SUMTIDDAG.DATUM) AND 
         SUMTID.VECKOKORD NE "" AND
         SUMTID.PERSONALKOD = SUMTIDDAG.PERSONALKOD AND
         SUMTID.AONR = SUMTIDDAG.AONR AND SUMTID.DELNR = SUMTIDDAG.DELNR AND
         SUMTID.OMRADE = SUMTIDDAG.OMRADE AND SUMTID.PRISTYP = SUMTIDDAG.PRISTYP  
         USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.       
         IF NOT AVAILABLE SUMTID THEN DO:
            
            musz = musz.           
         END.   
         ELSE DO:
            ASSIGN
            SUMTID.LONKOST = SUMTID.LONKOST + (ACCUM TOTAL SUMTIDDAG.LONKOST) - arrhjsum.                       
            SUMTID.IKOSTNAD = SUMTID.IKOSTNAD + (ACCUM TOTAL SUMTIDDAG.IKOSTNAD) - arrhjsum2.
            arrhjsum = ACCUM TOTAL SUMTIDDAG.LONKOST. 
            arrhjsum2 = ACCUM TOTAL SUMTIDDAG.IKOSTNAD.             
         END.            
      END.
   END. 
END.
      
   
/* **********************  Internal Procedures  *********************** */


PROCEDURE noll_UI:
   ASSIGN    
   lonbeloppv = 0
   resbelopp = 0
   trabelopp = 0    
   ovbelopp = 0                    
   ovkod = " "         
   tidtim = 0
   otidtim = 0
   tid100 = 0
   otidtim1 = 0
   otidtim2 = 0
   otidtim3 = 0
   inder = TRUE.       
END PROCEDURE.      
PROCEDURE over_UI:
   typover = "OVE".
   multi = 0.
   FIND FIRST OVERKOD WHERE OVERKOD.KOD = kodanst AND
   OVERKOD.OVERTIDTILL = ovkod 
   USE-INDEX OVER NO-LOCK NO-ERROR.
   IF AVAILABLE OVERKOD THEN DO:
      multi = OVERKOD.MULTIP.      
   END.       
   ovbelopp = (nattpris + (nattpris * multi)) * ovantal.    
   IF AVAILABLE TIDREGITAB THEN DO:
      IF nattpris = 0 AND TIDREGITAB.TIDLOG = FALSE THEN DO:       
         ovbelopp = (totpristim + (totpristim * multi)) * ovantal.
      END.
   END.
END.
PROCEDURE res_UI:
   multi = 0.          
   FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
   LONTILL.LONTILLAGG = reskod
   USE-INDEX LON NO-LOCK NO-ERROR.
   IF AVAILABLE LONTILL THEN DO:
      multi = LONTILL.MULTIP.      
   END.
   ELSE RETURN.
   typover = SUBSTRING(LONTILL.TYPKOD,1,3).
   IF SUBSTRING(LONTILL.TYPKOD,1,3) = "EJE" THEN RETURN.     
   IF SUBSTRING(LONTILL.TYPKOD,1,3) = "REL" THEN DO:
      nattpris = TIDREGITAB.PRIS.
      resbelopp = (nattpris * multi) * resantal.    
      IF SUBSTRING(LONTILL.TYPKOD,9,5) = "EJIND" THEN inder = FALSE.                                 
      ELSE inder = TRUE.       
   END.
   ELSE IF SUBSTRING(LONTILL.TYPKOD,1,3) = "RES" THEN DO:      
      nattpris = TIDREGITAB.PRIS.
      ovbelopp = (nattpris + (nattpris * multi)) * resantal.
      inder = FALSE.                                            
   END.
   ELSE DO:      /*BORDE ALLDRIG INTRÄFFA*/     
      resbelopp = (nattpris + (nattpris * multi)) * resantal.       
      IF SUBSTRING(LONTILL.TYPKOD,9,5) = "EJIND" THEN inder = FALSE.                                 
      ELSE inder = TRUE. 
   END.      
   IF SUBSTRING(LONTILL.TYPKOD,1,3) = "EJE" THEN musz = musz.
   ELSE DO:     
      CREATE ejlon.
      ASSIGN
      ejlon.AONR = TIDREGITAB.AONR 
      ejlon.DATUM = TIDREGITAB.DATUM 
      ejlon.DELNR = TIDREGITAB.DELNR 
      ejlon.LONKOST = resbelopp + ovbelopp
      ejlon.PERSONALKOD = TIDREGITAB.PERSONALKOD 
      ejlon.PRISTYP = TIDREGITAB.PRISTYP 
      ejlon.TYPKOD = LONTILL.TYPKOD 
      ejlon.VECKOKORD = TIDREGITAB.VECKOKORD.
   END.
   
                                   
END PROCEDURE.
PROCEDURE lon_UI:
   ASSIGN
   lonbeloppv = 0
   multi = 0     
   typover = "LON".
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND 
   AONRTAB.DELNR = TIDREGITAB.DELNR
   USE-INDEX AONR NO-LOCK NO-ERROR.        
   FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
   LONTILL.LONTILLAGG = TIDREGITAB.LONTILLAGG 
   USE-INDEX LON NO-LOCK NO-ERROR.
   IF AVAILABLE LONTILL THEN DO:
      ASSIGN
      multi = LONTILL.MULTIP
      typover = SUBSTRING(LONTILL.TYPKOD,1,3).
      IF SUBSTRING(LONTILL.TYPKOD,9,5) = "EJIND" THEN inder = FALSE. 
      ELSE inder = TRUE.                  
   END.                      
   ELSE RETURN.
   IF typover = "EJE" THEN RETURN.  
   IF typover = "RES" THEN DO:       
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = pkod AND
      TIMKOSTNADSTAB.PRISTYP = 'RESTID...' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      ovbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTAB.PRISA * multi)) * lonantal.        
      inder = FALSE.
   END. 
   ELSE IF typover = "REL" THEN DO:      
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = pkod AND
      TIMKOSTNADSTAB.PRISTYP = 'RESTID...' USE-INDEX PRISPERS NO-LOCK NO-ERROR.      
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      lonbeloppv = (TIMKOSTNADSTAB.PRISA * multi) * lonantal.             
   END. 
   ELSE IF typover = "RE2" THEN DO:
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR. 
      IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:  
         IF globforetag = "NORD" THEN DO:                                      
            FIND FIRST TIMKOSTNADSTAB WHERE 
            TIMKOSTNADSTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
            TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" 
            USE-INDEX PRISPERS NO-LOCK NO-ERROR.                             
         END.
      END.
      ASSIGN               
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      lonbeloppv = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTAB.PRISA * multi)) * lonantal.              
   END.
   ELSE IF typover =  "OVE" THEN DO:    
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR. 
      IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:  
         IF globforetag = "NORD" THEN DO:                                      
            FIND FIRST TIMKOSTNADSTAB WHERE 
            TIMKOSTNADSTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
            TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" 
            USE-INDEX PRISPERS NO-LOCK NO-ERROR.                             
         END.
      END.
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).	                           		 
      ovbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTAB.PRISA * multi)) * lonantal.       
      inder = FALSE.
   END. 
   ELSE IF typover = "TRA" THEN DO:
      trabelopp = lonantal * LONTILL.ERSATTNING.
      inder = FALSE.
   END.
   ELSE DO:
      FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
      LONTILL.LONTILLAGG = lonkod USE-INDEX LON NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL THEN DO:
         IF LONTILL.ENHET = "KR" THEN DO:
            lonbeloppv = lonantal.
            lonantal = 0.
         END.
         ELSE IF LONTILL.ENHET = "TI" THEN DO:
            nytid = lonantal.
            RUN TIMSEK.P.
            lonantal = (sekunder / 3600). 
            lonbeloppv = lonantal * LONTILL.ERSATTNING.
         END.
         ELSE DO:
             lonbeloppv = lonantal * LONTILL.ERSATTNING.           
         END.         
         IF globforetag  = "NORD" THEN DO:
            IF lonkod = "FRUK" OR 
            lonkod = "LUNC" OR 
            lonkod = "MIDD" OR 
            lonkod = "FRLU" OR
            lonkod = "FRMI" OR 
            lonkod = "LUMI" OR 
            lonkod = "FLMI" THEN DO:
               lonkod = "850".
               lonbeloppv = lonbeloppv * -1 * LONTILL.ERSATTNING.
            END.
         END.
         IF globforetag = 'GRAN' OR globforetag = "GADM" OR 
         globforetag = 'ROSL' OR globforetag = 'MALA'  THEN DO:                                                   
            IF lonkod = "720" OR 
            lonkod = "721" OR 
            lonkod = "722" OR 
            lonkod = "726" OR
            lonkod = "727" OR 
            lonkod = "728" OR 
            lonkod = "729" THEN DO:               
               lonbeloppv = lonbeloppv * -1.
            END.
         END.
      END.         
   END.
   IF SUBSTRING(LONTILL.TYPKOD,1,3) = "EJE" THEN musz = musz.
   ELSE DO:     
      CREATE ejlon.
      ASSIGN
      ejlon.AONR = TIDREGITAB.AONR 
      ejlon.DATUM = TIDREGITAB.DATUM 
      ejlon.DELNR = TIDREGITAB.DELNR 
      ejlon.LONKOST = lonbeloppv + ovbelopp
      ejlon.PERSONALKOD = TIDREGITAB.PERSONALKOD 
      ejlon.PRISTYP = TIDREGITAB.PRISTYP 
      ejlon.TYPKOD = LONTILL.TYPKOD 
      ejlon.VECKOKORD = TIDREGITAB.VECKOKORD.     
   END.      
   resbelopp = lonbeloppv.                                   
END PROCEDURE.  
       
PROCEDURE skapa_UI:
   IF typover = "EJE" THEN RETURN.
   DO TRANSACTION:      
      IF typover = "RES" OR typover = "REL" THEN DO:
         FIND FIRST tilltab WHERE tilltab.DATUM = regdatum AND 
         tilltab.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
         tilltab.AONR = TIDREGITAB.AONR AND tilltab.DELNR = TIDREGITAB.DELNR AND
         tilltab.PRISTYP = "RESTID..."   
         USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE tilltab THEN DO: 
            CREATE tilltab.                   
         END.
         ASSIGN                          
         tilltab.OMRADE = omrpers 
         tilltab.PERSONALKOD = TIDREGITAB.PERSONALKOD  
         tilltab.AONR = TIDREGITAB.AONR  
         tilltab.DELNR = TIDREGITAB.DELNR  
         tilltab.PRISTYP = "RESTID..."   
         tilltab.DATUM = regdatum
         tilltab.VECKOKORD = TIDREGITAB.VECKOKORD
         tilltab.TBELOPP = tilltab.TBELOPP + trabelopp 
         tilltab.OBELOPP = tilltab.OBELOPP + ovbelopp
         tilltab.LBELOPP = tilltab.LBELOPP + resbelopp.
      END.
      ELSE DO:
         FIND FIRST tilltab WHERE tilltab.DATUM = regdatum AND 
         tilltab.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
         tilltab.AONR = TIDREGITAB.AONR AND tilltab.DELNR = TIDREGITAB.DELNR AND
         tilltab.PRISTYP = TIDREGITAB.PRISTYP   
         USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE tilltab THEN DO: 
            CREATE tilltab.                   
         END.
         ASSIGN                          
         tilltab.OMRADE = omrpers 
         tilltab.PERSONALKOD = TIDREGITAB.PERSONALKOD  
         tilltab.AONR = TIDREGITAB.AONR  
         tilltab.DELNR = TIDREGITAB.DELNR  
         tilltab.PRISTYP = TIDREGITAB.PRISTYP   
         tilltab.DATUM = regdatum
         tilltab.VECKOKORD = TIDREGITAB.VECKOKORD
         tilltab.TBELOPP = tilltab.TBELOPP + trabelopp 
         tilltab.OBELOPP = tilltab.OBELOPP + ovbelopp
         tilltab.LBELOPP = tilltab.LBELOPP + resbelopp.        
      END.
      IF inder = TRUE THEN DO:
         tilltab.IKOST = tilltab.IKOST + resbelopp.
      END.
   END.                                     
END PROCEDURE.	   
PROCEDURE nattpris_UI:
   IF globforetag = "NORD" THEN DO:
      IF nattpers NE TIDREGITAB.PERSONALKOD THEN DO:
         ASSIGN
         nattaoomr = " "
         nattaonr = " "
         nattdelnr = 0.
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD
         USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.
         nattpers = TIDREGITAB.PERSONALKOD.
         IF nattaonr = TIDREGITAB.AONR AND nattdelnr = TIDREGITAB.DELNR THEN DO:
            nattaonr = nattaonr.
         END.
         ELSE DO:
            FIND FIRST AONRTAB WHERE 
            AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR 
            USE-INDEX AONR NO-LOCK NO-ERROR.
            ASSIGN 
            nattaoomr = AONRTAB.OMRADE
            nattaonr = TIDREGITAB.AONR 
            nattdelnr = TIDREGITAB.DELNR.
         END.    
         IF nattaoomr NE " " THEN DO:                        
            IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:                                
               FIND FIRST TIMKOSTNADSTAB WHERE 
               TIMKOSTNADSTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
               TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" 
               USE-INDEX PRISPERS NO-LOCK NO-ERROR.
               nattpris = TIMKOSTNADSTAB.PRISA.                  
            END.
            ELSE DO:
               nattpris = TIDREGITAB.PRIS.
            END.     
         END. 
         ELSE DO:
            nattpris = TIDREGITAB.PRIS.
         END.           
      END.
      ELSE DO:  
         IF nattaonr = TIDREGITAB.AONR AND nattdelnr = TIDREGITAB.DELNR THEN DO:
            nattaonr = nattaonr.
         END.                   
         ELSE DO:
            FIND FIRST AONRTAB WHERE 
            AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR 
            USE-INDEX AONR NO-LOCK NO-ERROR.
            ASSIGN   
            nattaoomr = AONRTAB.OMRADE
            nattaonr = TIDREGITAB.AONR 
            nattdelnr = TIDREGITAB.DELNR.
         END.    
         IF nattaoomr NE " " THEN DO:                        
            IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:                                    
               FIND FIRST TIMKOSTNADSTAB WHERE 
               TIMKOSTNADSTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
               TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" 
               USE-INDEX PRISPERS NO-LOCK NO-ERROR.
               nattpris = TIMKOSTNADSTAB.PRISA.                  
            END.
            ELSE DO:
               nattpris = TIDREGITAB.PRIS.
            END.     
         END. 
         ELSE DO:
            nattpris = TIDREGITAB.PRIS.
         END.   
      END.    
   END.
   ELSE DO: 
      nattpris = TIDREGITAB.PRIS.
   END.
END PROCEDURE.
PROCEDURE nattpris2_UI.
   IF globforetag = "NORD" THEN DO:
      FIND FIRST AONRTAB WHERE 
      AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR 
      USE-INDEX AONR NO-LOCK NO-ERROR.
      IF omrpers = AONRTAB.OMRADE THEN DO:
         nattpris = totpristim.
      END.    
      ELSE DO:                                 
         FIND FIRST TIMKOSTNADSTAB WHERE 
         TIMKOSTNADSTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD AND 
         TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" 
         USE-INDEX PRISPERS NO-LOCK NO-ERROR.
         nattpris = TIMKOSTNADSTAB.PRISA.                  
      END.
   END.         
   ELSE DO: 
      nattpris = totpristim.
   END.
END PROCEDURE.	   

PROCEDURE pers_UI:
   FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pkod 
   USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
   USE-INDEX ANSTF NO-LOCK NO-ERROR.  
   IF AVAILABLE PERSONALTAB THEN DO:
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR.                  
      ASSIGN
      kodanst = ANSTFORMTAB.KOD                                                
      totpristim = TIMKOSTNADSTAB.PRISA 
      omrpers = PERSONALTAB.OMRADE      
      traav = PERSONALTAB.TRAAVTAL.      
   END.   
END PROCEDURE.
PROCEDURE sumtid_UI:   
   OPEN QUERY tidq FOR EACH TIDREGITAB WHERE TIDREGITAB.VECKOKORD NE "" AND 
   YEAR(TIDREGITAB.DATUM) = 1998 AND TIDREGITAB.TIDLOG = TRUE AND
   TIDREGITAB.PRISTYP = 'RESTID...' AND TIDREGITAB.LONTILLAGG NE " " NO-LOCK.   
   GET FIRST tidq NO-LOCK.
   DO WHILE AVAILABLE(TIDREGITAB):
      IF TIDREGITAB.PERSONALKOD = "430" OR TIDREGITAB.PERSONALKOD = "534" OR
      TIDREGITAB.PERSONALKOD = "535" OR TIDREGITAB.PERSONALKOD = "619" OR
      TIDREGITAB.PERSONALKOD = "703" THEN musz = musz.
      ELSE DO:   
         regdatum = TIDREGITAB.DATUM.
         IF pkod NE TIDREGITAB.PERSONALKOD THEN DO:
            pkod = TIDREGITAB.PERSONALKOD.
            RUN pers_UI.                                   
         END.                                     
         RUN nattpris_UI.
         IF TIDREGITAB.PRISTYP = 'RESTID...' AND TIDREGITAB.LONTILLAGG NE " " 
         THEN DO TRANSACTION: 
            RUN noll_UI.	                            
            ASSIGN  
            reskod = TIDREGITAB.LONTILLAGG
            nytid = TIDREGITAB.LONTILLANTAL.
            /*nattpris = TIDREGITAB.PRIS. SÄTTS I NATTPRIS_UI*/ 
            RUN TIMSEK.P.
            resantal = (sekunder / 3600).
            RUN res_UI.		 
            RUN skapa_UI.   
            RUN noll_UI.                               	            	       
         END.	
      END.
      GET NEXT tidq NO-LOCK.
   END.       
   CLOSE QUERY tidq.           
   ASSIGN   
   pkod = " "  
   arrhjsum = 0
   arrhjsum2 = 0
   arrhjsum3 = 0.    
   
END PROCEDURE.
PROCEDURE sumtill_UI: 
   OPEN QUERY tidq FOR EACH TIDREGITAB WHERE TIDREGITAB.VECKOKORD NE "" AND 
   YEAR(TIDREGITAB.DATUM) = 1998 AND 
   TIDREGITAB.TIDLOG = FALSE NO-LOCK.    
   GET FIRST tidq NO-LOCK.
   DO WHILE AVAILABLE(TIDREGITAB):
      /*ÖVERTIDTILLÄGG*/
      /*ÖVERTIDS KOD FÅR BELOPPET ENKELÖTID OCH KVALÖTID * ANTAL*/      
      IF TIDREGITAB.AONR = "" THEN regdatum = regdatum.
      ELSE IF TIDREGITAB.PERSONALKOD = "430" OR TIDREGITAB.PERSONALKOD = "534" OR
      TIDREGITAB.PERSONALKOD = "535" OR TIDREGITAB.PERSONALKOD = "619" OR
      TIDREGITAB.PERSONALKOD = "703" THEN musz = musz.
      ELSE DO:                
         regdatum = TIDREGITAB.DATUM.	       
         IF pkod NE TIDREGITAB.PERSONALKOD THEN DO:
            pkod = TIDREGITAB.PERSONALKOD.
            RUN pers_UI.
         END.
         RUN noll_UI.
         RUN nattpris2_UI.
         IF TIDREGITAB.OKOD1 NE " " THEN DO: 
            ASSIGN            	      
            ovkod = TIDREGITAB.OKOD1
            nytid = TIDREGITAB.OANT1.
            RUN TIMSEK.P.
            ovantal = (sekunder / 3600).
            RUN over_UI.		      
            RUN skapa_UI.   
         END.	  
         RUN noll_UI.
         IF TIDREGITAB.OKOD2 NE " " THEN DO: 
            ASSIGN            	
            ovkod = TIDREGITAB.OKOD2
            nytid = TIDREGITAB.OANT2.
            RUN TIMSEK.P.
            ovantal = (sekunder / 3600).	      
            RUN over_UI.      
            RUN skapa_UI.     		  
         END.                 
         RUN noll_UI.
         IF TIDREGITAB.OKOD3 NE " " THEN DO: 
            ASSIGN            	      
            ovkod = TIDREGITAB.OKOD3
            nytid = TIDREGITAB.OANT3.
            RUN TIMSEK.P.
            ovantal = (sekunder / 3600).
            RUN over_UI.      
            RUN skapa_UI.  	    		  
         END.        
         RUN noll_UI.
         IF TIDREGITAB.LONTILLAGG NE " " THEN DO:
            ASSIGN	       
            lonkod = TIDREGITAB.LONTILLAGG
            lonantal = TIDREGITAB.LONTILLANTAL.
            RUN lon_UI.
            RUN skapa_UI.   		    
         END.
         RUN noll_UI.            
      END.
      GET NEXT tidq NO-LOCK.		 
   END.
   CLOSE QUERY tidq.    
   FOR EACH tilltab USE-INDEX PERSONALKOD NO-LOCK:
      DO TRANSACTION:
         FIND FIRST SUMTIDDAG WHERE SUMTIDDAG.DATUM = tilltab.DATUM AND 
         SUMTIDDAG.PERSONALKOD = tilltab.PERSONALKOD AND
         SUMTIDDAG.AONR = tilltab.AONR AND SUMTIDDAG.DELNR = tilltab.DELNR AND
         SUMTIDDAG.OMRADE = tilltab.OMRADE AND SUMTIDDAG.PRISTYP = tilltab.PRISTYP  
         USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.       
         IF NOT AVAILABLE SUMTIDDAG THEN DO:
            CREATE SUMTIDDAG.
            ASSIGN
            SUMTIDDAG.OMRADE = tilltab.OMRADE. 
         END.   
         ELSE DO:
            sumtidrec = RECID(SUMTIDDAG).
            IF SUMTIDDAG.PRISTYP = 'RESTID...'  AND SUMTIDDAG.OBELOPP = 0 THEN DO:
               OPEN QUERY sumq FOR EACH SUMTIDDAG WHERE 
               SUMTIDDAG.DATUM = tilltab.DATUM AND 
               SUMTIDDAG.PERSONALKOD = tilltab.PERSONALKOD AND
               SUMTIDDAG.AONR = tilltab.AONR AND 
               SUMTIDDAG.DELNR = tilltab.DELNR AND
               SUMTIDDAG.OMRADE = tilltab.OMRADE AND 
               SUMTIDDAG.PRISTYP = tilltab.PRISTYP  
               USE-INDEX PERSONALKOD NO-LOCK.
               GET FIRST sumq NO-LOCK.
               DO WHILE AVAILABLE(SUMTIDDAG):
                  IF SUMTIDDAG.OBELOPP > 0 THEN sumtidrec = RECID(SUMTIDDAG).
                  GET NEXT sumq NO-LOCK.
               END.                  
            END.
            FIND SUMTIDDAG WHERE RECID(SUMTIDDAG) = sumtidrec EXCLUSIVE-LOCK NO-ERROR.
         END.
         ASSIGN                              
         SUMTIDDAG.VECKOKORD = tilltab.VECKOKORD  
         SUMTIDDAG.PERSONALKOD = tilltab.PERSONALKOD    
         SUMTIDDAG.DATUM = tilltab.DATUM 
         SUMTIDDAG.AUTODATUM = TODAY
         SUMTIDDAG.AONR = tilltab.AONR   
         SUMTIDDAG.DELNR = tilltab.DELNR 
         SUMTIDDAG.PRISTYP = tilltab.PRISTYP    
         SUMTIDDAG.IKOSTNAD = SUMTIDDAG.IKOSTNAD + tilltab.IKOST
         SUMTIDDAG.LONKOST = SUMTIDDAG.LONKOST + tilltab.LBELOPP.
      end.    
   END.             
END PROCEDURE.	



