
/*---------------------------------------------------------
  File: XFRMSIZE.P
  Purpose: Changes the size and shape of the panel.  This
  routine spaces the buttons to fill the available space.
  
  Input Parameters: 
    ph_frame    - the handle of the frame
    pd_height-p - the desired height (in pixels)
    pd_width-p  - the desired width  (in pixels)

  Notes:
    This procedure assumes that the target frame:
       - is not hidden
       - is not scrollable
       - has a single iteration without column labels
---------------------------------------------------------*/
DEFINE INPUT PARAMETER ph_frame    AS HANDLE  NO-UNDO.
DEFINE INPUT PARAMETER pd_height-p AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER pd_width-p  AS INTEGER NO-UNDO.
DEFINE VAR x-border AS INTEGER NO-UNDO.
DEFINE VAR y-border AS INTEGER NO-UNDO.
DEFINE VAR x-mult AS DECIMAL NO-UNDO.
DEFINE VAR y-mult AS DECIMAL NO-UNDO.
DEFINE VAR h AS HANDLE  NO-UNDO.
DEFINE VARIABLE hidvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE fh AS HANDLE NO-UNDO.
DEFINE SHARED VARIABLE globforetag AS CHARACTER NO-UNDO.

hidvar = ph_frame:HIDDEN.
ASSIGN 
ph_frame:HIDDEN     = YES
ph_frame:SCROLLABLE = YES.
ph_frame:HIDDEN     = NO.
IF pd_height-p > ph_frame:VIRTUAL-HEIGHT-PIXELS THEN ph_frame:VIRTUAL-HEIGHT-PIXELS = pd_height-p.
IF pd_width-p > ph_frame:VIRTUAL-WIDTH-PIXELS THEN ph_frame:VIRTUAL-WIDTH-PIXELS = pd_width-p.
ASSIGN 
x-border = ph_frame:BORDER-LEFT-PIXELS + ph_frame:BORDER-RIGHT-PIXELS
y-border = ph_frame:BORDER-TOP-PIXELS + ph_frame:BORDER-BOTTOM-PIXELS
x-mult = (pd_width-p - x-border) / (ph_frame:WIDTH-PIXELS - x-border) 
y-mult = (pd_height-p - y-border) / (ph_frame:HEIGHT-PIXELS - y-border).
IF globmaxforand = 0 THEN globmaxforand = y-mult.
/*                        
ASSIGN 
ph_frame:WIDTH-PIXELS  = pd_width-p
ph_frame:HEIGHT-PIXELS = pd_height-p.
*/
ASSIGN 
h = ph_frame:CURRENT-ITERATION 
h = h:FIRST-CHILD.             
DO WHILE VALID-HANDLE(h):
  fh = h:FRAME.  
  IF h:TYPE eq "FRAME":U THEN DO:        
     RUN VALUE(THIS-PROCEDURE:FILE-NAME)
             (INPUT h,INPUT h:HEIGHT-PIXELS * y-mult, INPUT h:WIDTH-PIXELS * x-mult).    
  END.  
  ELSE DO:
     IF h:TYPE = "BUTTON" THEN DO:
        /*OBS! borde gälla alla meny knappar med bilder*/
        IF h:HEIGHT = 1.92 AND h:WIDTH = 7.5 THEN DO:
           x-mult = x-mult. 
        END.
        ELSE IF h:HEIGHT = 2.33 AND h:WIDTH = 7.25 THEN DO:
           x-mult = x-mult. 
        END.
        ELSE do: 
           RUN barabredd_UI.              
        END.
     END.
     ELSE IF h:TYPE = "TEXT" THEN DO:
        RUN barabredd_UI.   
     END.  
     ELSE IF h:TYPE = "LITERAL" THEN DO:                       
        RUN barabredd_UI.
     END.  
     ELSE IF h:TYPE = "FILL-IN" THEN DO:
        RUN barabredd_UI.       
     END.     
     ELSE IF h:TYPE = "RECTANGLE" THEN DO:
        IF h:HEIGHT = 0.08 THEN DO:  
           h:WIDTH-PIXELS = h:WIDTH-PIXELS * x-mult.
        END.
        ELSE DO:  
           RUN barabredd_UI.
           ASSIGN
           h:WIDTH-PIXELS = h:WIDTH-PIXELS * x-mult.
           IF fh:NAME NE "FRAME-BARABREDD" THEN h:HEIGHT-PIXELS = h:HEIGHT-PIXELS * y-mult NO-ERROR.
        END.
     END.
     ELSE DO:      
         IF h:TYPE = "browse" THEN DO:
            RUN barabredd_UI.       
         END.
         ELSE RUN barabredd_UI.        
         ASSIGN
         h:WIDTH-PIXELS = h:WIDTH-PIXELS * x-mult.
         IF fh:NAME NE "FRAME-BARABREDD" THEN
         h:HEIGHT-PIXELS = h:HEIGHT-PIXELS * y-mult NO-ERROR.
      END.        
   END.
   /* Check the new frame size of the frame against the new
     size of the child. */
   ASSIGN 
   pd_width-p = MAX (pd_width-p,h:X + h:WIDTH-PIXELS + x-border)
   pd_height-p = MAX (pd_height-p,h:Y + h:HEIGHT-PIXELS + y-border).
   h = h:NEXT-SIBLING.
END.
ASSIGN 
ph_frame:SCROLLABLE    = no
ph_frame:WIDTH-PIXELS  = pd_width-p
ph_frame:HEIGHT-PIXELS = pd_height-p
ph_frame:HIDDEN        = hidvar.
PROCEDURE barabredd_UI :
   h:X = h:X * x-mult.
   IF fh:NAME = "FRAME-BARABREDD" THEN RETURN.
   h:Y = h:Y * y-mult.    
END PROCEDURE.


