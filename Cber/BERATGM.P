/*BERATGM.P*/
{ENRJMF.I}
&Scoped-define NEW 
{SOKDEF.I}
DEFINE SHARED VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valomrade AS CHARACTER NO-UNDO. 
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
{BERATGMWID.I}
{HOPALLA.I}
ON 'CHOOSE' OF BTN_AVBATG PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_KORATGT PERSISTENT RUN vart_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-DBLCLICK' OF SEL_UPP PERSISTENT RUN vart_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF SEL_UPP PERSISTENT RUN vselupp_UI IN THIS-PROCEDURE.

PROCEDURE btnavb_UI :
   RUN avb_UI IN huvprogh.
   RETURN.
END PROCEDURE.
PROCEDURE vselupp_UI :   
   IF SEL_UPP:SCREEN-VALUE = "Ersätt/Lägg till/Ta bort - materiel." THEN SEL_UPP:TOOLTIP = "Byt en artikel mot en annan/Lägg till en eller flera artiklar där en artikel förekommer".                
END PROCEDURE.
PROCEDURE main_UI :
   DEFINE INPUT PARAMETER vart AS INTEGER NO-UNDO.
   DEBUGGER:SET-BREAK().
   SEL_UPP:LIST-ITEMS = "".
   {SOKSTART.I}
   ASSIGN
   soktemp.SOKVAL = 59   
   soktemp.SOKINT[1] = 1
   soktemp.SOKLOG[1] = FALSE
   soktemp.SOKLOG[2] = FALSE
   soktemp.SOKCHAR[1] = valaonr
   soktemp.SOKCHAR[2] = valomrade.
   {SOKANROP.I}
   IF soktemp.SOKLOG[2] = FALSE THEN DO:
      status-ok = SEL_UPP:ADD-LAST("Ersätt/Lägg till/Ta bort - materiel.").        
      status-ok = SEL_UPP:ADD-LAST("Byt leverantör i beredningen").            
      status-ok = SEL_UPP:ADD-LAST("Ersätt/Lägg till/Ta bort - kalkylkoder.").       
      IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:
         status-ok = SEL_UPP:ADD-LAST("Jämför leverantörspriser för beredning").         
      END.
   END.
   ELSE DO:
      /*delinköp*/
      status-ok = SEL_UPP:ADD-LAST("Ersätt/Lägg till/Ta bort - materiel. Byt leverantör").        
   END. 
END PROCEDURE.
            

PROCEDURE vart_UI :
  
   IF SEL_UPP:SCREEN-VALUE = "Jämför leverantörspriser för beredning" THEN DO:
      RUN jmfprisvaltmtrl_UI.
      RETURN.
   END.     
   {muswait.i}
   {AVBGOM2.I}
   IF SEL_UPP:SCREEN-VALUE = "Ersätt/Lägg till/Ta bort - materiel." THEN DO:           
      RUN BERXTILLYU.W (INPUT 1).
   END.  
   ELSE IF SEL_UPP:SCREEN-VALUE = "Byt leverantör i beredningen" THEN DO:           
      RUN BERXTILLYU.W (INPUT 2).
   END.
   IF SEL_UPP:SCREEN-VALUE = "Ersätt/Lägg till/Ta bort - kalkylkoder." THEN DO:           
      RUN BERXTILLYU.W (INPUT 3).
   END.
   
   
   
   {AVBFRAM2.I}
   {musarrow.i}
END PROCEDURE.

PROCEDURE jmfprisvaltmtrl_UI:
   DEFINE VARIABLE nettoh AS HANDLE NO-UNDO.
   DEFINE VARIABLE jmfhelp AS HANDLE NO-UNDO.
   Guru.GlobalaVariabler:jmfPrisEnrTTh:EMPTY-TEMP-TABLE() NO-ERROR.
   IF Guru.Konstanter:appcon THEN DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh.
   END. 
   RUN JmfMtrBer_UI IN nettoh (INPUT valaonr, INPUT valomrade, OUTPUT TABLE enrjmf).
   jmfhelp = Guru.GlobalaVariabler:jmfPrisEnrTTh .
   
   Guru.GlobalaVariabler:jmfPrisEnrTTh =  TEMP-TABLE enrjmf:HANDLE:DEFAULT-BUFFER-HANDLE.
   Guru.Konstanter:MtrlHelpStart().
   RUN jmfmtrpris_UI IN Guru.Konstanter:MtrlClasserStart.
 /*måste finnas där tappar värdet annars*/
   Guru.GlobalaVariabler:jmfPrisEnrTTh = jmfhelp.
 
   IF VALID-HANDLE(nettoh) THEN DO:
      DELETE PROCEDURE nettoh NO-ERROR.   
      nettoh = ?.
   END.
END PROCEDURE.
PROCEDURE borthand_UI :   
   {BORTBRWPROC.I}      
END PROCEDURE.
