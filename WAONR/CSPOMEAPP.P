/*CSPOMEAPP.P*/
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}

DEFINE TEMP-TABLE intakttemp NO-UNDO
   FIELD AONR         LIKE KOSTREG.AONR
   FIELD DELNR        LIKE KOSTREG.DELNR   
   FIELD BOKKONTO     LIKE KOSTREG.BOKKONTO
   FIELD INTINTAKT    AS DECIMAL
   FIELD EXTERNINTAKT AS DECIMAL
   FIELD RESULTAT     AS DECIMAL
   INDEX AONR IS PRIMARY AONR DELNR BOKKONTO.
DEFINE TEMP-TABLE inkomsttemp NO-UNDO
   FIELD AONR         LIKE KOSTREG.AONR
   FIELD DELNR        LIKE KOSTREG.DELNR   
   FIELD BOKKONTO     LIKE KOSTREG.BOKKONTO
   FIELD INKOMST    AS DECIMAL   
   INDEX AONR IS PRIMARY AONR DELNR BOKKONTO.

FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
&Scoped-define NEW NEW
{FAKTTYPDEF.I}
&Scoped-define NEW 
{FAKTTYPSKAP.I}
FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.


FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 

END FUNCTION.
DEFINE VARIABLE superhandle AS HANDLE.
DEFINE VARIABLE vartvar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE kalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE intkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE exkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE summakostvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE hjalpvar AS DECIMAL NO-UNDO. 
DEFINE QUERY fq FOR FAKTINTAKTKONT,FAKTURERAD.
DEFINE QUERY fkq FOR FAKTINTAKTKONTKRED,FAKTKRED.
DEFINE QUERY kq FOR KOSTREG.
DEFINE QUERY sq FOR SUMTID.
DEFINE QUERY stq FOR SUMTIDDAG.
DEFINE QUERY tq FOR TIDREGITAB.
{DIRDEF.I}
{PHMT.I}
{KALKTEMP.I}
FIND FIRST FORETAG NO-LOCK NO-ERROR.
IF FORETAG.FORETAG = "GRIT" THEN DO:
   RUN GRITIN.P PERSISTENT SET superhandle (INPUT 1).
   THIS-PROCEDURE:ADD-SUPER-PROCEDURE (superhandle).
END.


DEFINE TEMP-TABLE dagtemp
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD
   FIELD NAMN AS CHARACTER 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ORT LIKE AONRTAB.ORT
   FIELD PERSMASK LIKE SUMTIDDAG.PERSMASK
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"           
   FIELD TIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"         
   FIELD NTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"         
   FIELD OATIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"
   FIELD ABELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"           
   FIELD BTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR" 
   FIELD NBTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"
   FIELD OBTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"
   FIELD BBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"           
   FIELD OTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"  
   FIELD NOTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"
   FIELD OOTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"
   FIELD OBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"           
   FIELD BEFATTNING AS CHARACTER           
   FIELD LONKOST AS DECIMAL
   FIELD OMRADE AS CHARACTER
   FIELD GEOMRADE AS CHARACTER
   FIELD MANAD AS INTEGER
   INDEX AONR IS PRIMARY AONR DELNR. 

{SKVSUM.I}

   
DEFINE INPUT PARAMETER TABLE FOR uppvaltemp.
DEFINE INPUT PARAMETER TABLE FOR valperstemp.
DEFINE OUTPUT PARAMETER TABLE FOR skvsum.

DEFINE NEW SHARED VARIABLE fastrec AS RECID NO-UNDO.
DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE xtypmtrl AS INTEGER NO-UNDO.
DEFINE VARIABLE monpris LIKE EBRPRIS.MONT NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE kalkvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE ingakostver AS LOGICAL NO-UNDO.
DEFINE VARIABLE stim AS DECIMAL NO-UNDO.   
DEFINE VARIABLE o50 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o75 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o100 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE stimk AS DECIMAL NO-UNDO.   
DEFINE VARIABLE o50k AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o75k AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o100k AS DECIMAL NO-UNDO.

DEFINE VARIABLE str AS CHARACTER FORMAT "X(256)" NO-UNDO.
DEFINE VARIABLE pekod AS CHARACTER NO-UNDO.
DEFINE VARIABLE aokod AS CHARACTER NO-UNDO.
DEFINE VARIABLE delkod AS INTEGER NO-UNDO.

/*BEREDNING*/
{LISTDEF.I} 

FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR. 
Guru.Konstanter:globforetag = FORETAG.FORETAG.

EMPTY TEMP-TABLE dagtemp  NO-ERROR. 
EMPTY TEMP-TABLE skvsum NO-ERROR. 

EMPTY TEMP-TABLE forsum NO-ERROR. 

FIND FIRST uppvaltemp NO-ERROR.

OPEN QUERY aq FOR EACH valperstemp NO-LOCK. 
GET FIRST aq NO-LOCK.
GET NEXT aq  NO-LOCK.
IF AVAILABLE valperstemp THEN ingakostver = TRUE.
ELSE ingakostver = FALSE.
IF uppvaltemp.DELNRKOLL = FALSE THEN ingakostver = TRUE.
GET FIRST aq NO-LOCK.
DO WHILE AVAILABLE(valperstemp):      
   {SUPEOPEN.I}   
   GET NEXT aq NO-LOCK.
END.      
RUN summa_UI.

{GDPRLOGGCLIENT.I}


PROCEDURE skapadag_UI :   
   GET FIRST sq NO-LOCK.
   DO WHILE AVAILABLE(SUMTID):     
      IF Guru.Konstanter:globforetag = "GKAL" AND SUMTID.PERSMASK = FALSE THEN DO:
         /*Kalmar vill ha med tiskrivning maskiner -ej kostnadsregistreringar*/         
         CREATE dagtemp.
         ASSIGN       
         dagtemp.PERSONALKOD = SUMTID.PERSONALKOD
         dagtemp.NAMN = SUBSTRING(SUMTID.FORNAMN,1,1) + "." + 
         SUBSTRING(SUMTID.EFTERNAMN,1,30)
         dagtemp.AONR = SUMTID.AONR
         dagtemp.DELNR = SUMTID.DELNR 
         dagtemp.ORT = SUMTID.ORT
         dagtemp.PERSMASK = SUMTID.PERSMASK
         dagtemp.BELOPP = SUMTID.BELOPP + SUMTID.OBELOPP
         dagtemp.TIMMAR = SUMTID.TIMMAR + SUMTID.OTIMMAR.
         dagtemp.NTIMMAR = SUMTID.TIMMAR. 
         dagtemp.OATIMMAR = SUMTID.OTIMMAR. 
         dagtemp.ABELOPP = dagtemp.BELOPP.
         dagtemp.BEFATTNING = SUBSTRING(SUMTID.BEFATTNING,1,20).
         dagtemp.LONKOST = SUMTID.LONKOST.
         dagtemp.MANAD = MONTH(SUMTID.DATUM).
         dagtemp.GEOMRADE = SUMTID.GEOMRADE. 
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + SUMTID.PERSONALKOD.
                  
      END.
      ELSE IF SUMTID.PERSMASK = FALSE THEN musz = musz.
      ELSE IF SUMTID.PRISTYP = "RESTID..." THEN DO: 
       
      END.
      ELSE DO:
         CREATE dagtemp.
         ASSIGN         
         dagtemp.PERSONALKOD = SUMTID.PERSONALKOD
         dagtemp.NAMN = SUBSTRING(SUMTID.FORNAMN,1,1) + "." + 
         SUBSTRING(SUMTID.EFTERNAMN,1,30)
         dagtemp.AONR = SUMTID.AONR
         dagtemp.DELNR = SUMTID.DELNR 
         dagtemp.ORT = SUMTID.ORT
         dagtemp.PERSMASK = SUMTID.PERSMASK
         dagtemp.BELOPP = SUMTID.BELOPP + SUMTID.OBELOPP
         dagtemp.TIMMAR = SUMTID.TIMMAR + SUMTID.OTIMMAR.
         dagtemp.NTIMMAR = SUMTID.TIMMAR. 
         dagtemp.OATIMMAR = SUMTID.OTIMMAR. 
         dagtemp.ABELOPP = dagtemp.BELOPP.
         dagtemp.LONKOST = SUMTID.LONKOST.
         dagtemp.MANAD = MONTH(SUMTID.DATUM).
         dagtemp.GEOMRADE = SUMTID.GEOMRADE. 
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + SUMTID.PERSONALKOD.
      END.                               
      GET NEXT sq NO-LOCK.      
   END.
   
      
END PROCEDURE.

PROCEDURE skapadagdag_UI :
   GET FIRST stq NO-LOCK.
   DO WHILE AVAILABLE(SUMTIDDAG):  
      IF Guru.Konstanter:globforetag = "GKAL" AND SUMTIDDAG.PERSMASK = FALSE THEN DO:
         /*Kalmar vill ha med tiskrivning maskiner -ej kostnadsregistreringar*/         
         CREATE dagtemp.
         ASSIGN          
         dagtemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD
         dagtemp.NAMN = SUBSTRING(SUMTIDDAG.FORNAMN,1,1) + "." + 
         SUBSTRING(SUMTIDDAG.EFTERNAMN,1,30)
         dagtemp.AONR = SUMTIDDAG.AONR
         dagtemp.DELNR = SUMTIDDAG.DELNR 
         dagtemp.ORT = SUMTIDDAG.ORT
         dagtemp.PERSMASK = SUMTIDDAG.PERSMASK         
         dagtemp.BELOPP = SUMTIDDAG.BELOPP + SUMTIDDAG.OBELOPP
         dagtemp.TIMMAR = SUMTIDDAG.TIMMAR + SUMTIDDAG.OTIMMAR.
         dagtemp.NTIMMAR = SUMTIDDAG.TIMMAR. 
         dagtemp.OATIMMAR = SUMTIDDAG.OTIMMAR.    
         dagtemp.ABELOPP = dagtemp.BELOPP.
         dagtemp.BEFATTNING = SUBSTRING(SUMTIDDAG.BEFATTNING,1,20).
         dagtemp.LONKOST = SUMTIDDAG.LONKOST.
         dagtemp.MANAD = MONTH(SUMTIDDAG.DATUM).
         dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE. 
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + SUMTIDDAG.PERSONALKOD.         
      END.
      ELSE IF SUMTIDDAG.PERSMASK = FALSE THEN musz = musz.
      ELSE IF SUMTIDDAG.PRISTYP = "RESTID..." THEN musz = musz.               
      ELSE DO:
         CREATE dagtemp.
         ASSIGN         
         dagtemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD
         dagtemp.NAMN = SUBSTRING(SUMTIDDAG.FORNAMN,1,1) + "." + 
         SUBSTRING(SUMTIDDAG.EFTERNAMN,1,30)
         dagtemp.AONR = SUMTIDDAG.AONR
         dagtemp.DELNR = SUMTIDDAG.DELNR 
         dagtemp.ORT = SUMTIDDAG.ORT
         dagtemp.PERSMASK = SUMTIDDAG.PERSMASK
         dagtemp.BELOPP = SUMTIDDAG.BELOPP + SUMTIDDAG.OBELOPP
         dagtemp.TIMMAR = SUMTIDDAG.TIMMAR + SUMTIDDAG.OTIMMAR.
         dagtemp.NTIMMAR = SUMTIDDAG.TIMMAR. 
         dagtemp.OATIMMAR = SUMTIDDAG.OTIMMAR.    
         dagtemp.ABELOPP = dagtemp.BELOPP.
         dagtemp.LONKOST = SUMTIDDAG.LONKOST.
         dagtemp.MANAD = MONTH(SUMTIDDAG.DATUM).
         dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE. 
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + SUMTIDDAG.PERSONALKOD.
      END.
      GET NEXT stq NO-LOCK.      
   END.
   /* arbetstidsförkortning */
   IF Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      GET FIRST tq NO-LOCK.
      DO WHILE AVAILABLE(TIDREGITAB):        
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD =  TIDREGITAB.PERSONALKOD NO-LOCK NO-ERROR.
         CREATE dagtemp.
         ASSIGN          
         dagtemp.PERSONALKOD = TIDREGITAB.PERSONALKOD
         dagtemp.NAMN = SUBSTRING(PERSONALTAB.FORNAMN,1,1) + "." + 
         SUBSTRING(PERSONALTAB.EFTERNAMN,1,30)
         dagtemp.AONR = "160"
         dagtemp.DELNR = 0            
         dagtemp.PERSMASK = TRUE.
         dagtemp.BELOPP =  0.                  
         dagtemp.TIMMAR = klockan100(TIDREGITAB.LONTILLANTAL).
         dagtemp.NTIMMAR = klockan100(TIDREGITAB.LONTILLANTAL).          
         FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR NO-LOCK NO-ERROR.
         IF AVAILABLE AONRTAB THEN DO: 
            dagtemp.ORT = AONRTAB.ORT. 
         END.   
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + PERSONALTAB.PERSONALKOD.
         GET NEXT tq NO-LOCK.      
      END.
   END.
   
END PROCEDURE.
PROCEDURE summa_UI.
   /*PERSONER*/
   FOR EACH dagtemp NO-LOCK 
   BREAK BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK: 
      ACCUMULATE dagtemp.BELOPP (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.NTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.OATIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.ABELOPP (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.NOTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.OOTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.OBELOPP (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.BTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK).        
      ACCUMULATE dagtemp.NBTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.OBTIMMAR (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.BBELOPP (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      ACCUMULATE dagtemp.LONKOST (TOTAL BY dagtemp.MANAD BY dagtemp.PERSONALKOD BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.PERSMASK). 
      IF LAST-OF(dagtemp.PERSMASK) THEN DO:
         CREATE forsum.
         ASSIGN 
         forsum.PERSONALKOD = dagtemp.PERSONALKOD
         forsum.NAMN = dagtemp.NAMN
         forsum.AONR = dagtemp.AONR
         forsum.DELNR = dagtemp.DELNR
         forsum.ORT = dagtemp.ORT          
         forsum.MANAD = dagtemp.MANAD          
         forsum.GEOMRADE = dagtemp.GEOMRADE          
         forsum.BELOPP = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.BELOPP)                      
         forsum.TIMMAR = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.TIMMAR) 
         forsum.NTIMMAR = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.NTIMMAR) 
         forsum.OATIMMAR = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.OATIMMAR) 
         forsum.ABELOPP = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.ABELOPP).                      
         forsum.LONKOST = (ACCUM TOTAL BY dagtemp.PERSMASK dagtemp.LONKOST).                      
   
      END.     
   END.
   
   FOR EACH forsum:
      /*kärnprocess*/
      FIND FIRST AONRTAB WHERE AONRTAB.AONR = forsum.AONR AND AONRTAB.DELNR = forsum.DELNR NO-LOCK NO-ERROR.
      IF AVAILABLE AONRTAB THEN DO:
         forsum.KARNOMRADE = AONRTAB.OMRADE.
         forsum.DELPROC = AONRTAB.PKOD.
         FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE =  AONRTAB.OMRADE NO-LOCK NO-ERROR.
         IF AVAILABLE OMRADETAB THEN DO:
            forsum.KARNNAMN = OMRADETAB.NAMN.
         END.
         FIND FIRST PRIORITET WHERE PRIORITET.PKOD = AONRTAB.PKOD NO-LOCK NO-ERROR.
         IF AVAILABLE PRIORITET  THEN DO:
            forsum.DELPROCNAMN = PRIORITET.P-BENAMNING.
         END.   
      END.             
      FIND FIRST AONRKONTKOD WHERE AONRKONTKOD.AONR = forsum.AONR AND AONRKONTKOD.DELNR = forsum.DELNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE AONRKONTKOD THEN DO:
         CREATE skvsum.  
         BUFFER-COPY forsum TO skvsum.         
      END.
      ELSE DO:      
         FOR EACH AONRKONTKOD WHERE AONRKONTKOD.AONR = forsum.AONR AND AONRKONTKOD.DELNR = forsum.DELNR NO-LOCK:
            CREATE skvsum.
            BUFFER-COPY forsum TO skvsum.
            ASSIGN
            skvsum.GEOMRADE = AONRKONTKOD.K1
            skvsum.TIMMAR = AONRKONTKOD.SATS% / 100 * forsum.TIMMAR.
            
            FIND FIRST KONTO WHERE KONTO.KONTO = "K1" AND KONTO.KONTONR = skvsum.GEOMRADE  NO-LOCK NO-ERROR.
            IF AVAILABLE KONTO THEN DO:
               skvsum.GEONAMN = KONTO.BENAMNING.
            END.            
         END.
      END.
   END.
   
            
END PROCEDURE.

   

