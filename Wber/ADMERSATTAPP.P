/*ADMERSATTAPP.P*/
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
{ERSATTTEMP.I}
/*DEFINE TEMP-TABLE bersattemp NO-UNDO
   FIELD NAMN AS CHARACTER
   FIELD ANVANDARE AS CHARACTER
   FIELD BESTID AS CHARACTER
   FIELD OMRADE AS CHARACTER
   FIELD BEN1 AS CHARACTER
   FIELD BEN2 AS CHARACTER
   FIELD MTRLROW AS ROWID.*/
{MTRLKOMTEMP.I}
/*DEFINE TEMP-TABLE mtrlkomtemp NO-UNDO
   FIELD ENR AS CHARACTER
   FIELD BENAMNING AS CHARACTER
   FIELD KOMMENTAR AS CHARACTER
   FIELD LEVKOD AS CHARACTER
   FIELD OMREGTID AS DECIMAL
/*   FIELD MTRLROW AS ROWID*/
   INDEX ENR IS PRIMARY ENR ASCENDING.

DEFINE TEMP-TABLE emtrlkomtemp NO-UNDO LIKE mtrlkomtemp.*/



PROCEDURE admsparmtrlk_UI:  
   DEFINE INPUT PARAMETER TABLE FOR emtrlkomtemp. 
   FIND FIRST emtrlkomtemp NO-LOCK NO-ERROR.
   IF AVAILABLE emtrlkomtemp THEN DO:                     
      FIND FIRST ANSVARIGTAB WHERE ANSVARIGTAB.OMREGTID = 1 AND ANSVARIGTAB.PERSONALKOD = emtrlkomtemp.ENR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE ANSVARIGTAB THEN DO:
         CREATE ANSVARIGTAB.
         ASSIGN
         ANSVARIGTAB.PERSONALKOD = emtrlkomtemp.ENR
         ANSVARIGTAB.EFTERNAMN = emtrlkomtemp.KOMMENTAR
         ANSVARIGTAB.OMREGTID = 1
         ANSVARIGTAB.FORNAMN = emtrlkomtemp.LEVKOD.            
      END.
      ELSE DO:
         ASSIGN
         ANSVARIGTAB.EFTERNAMN = emtrlkomtemp.KOMMENTAR
         ANSVARIGTAB.OMREGTID = 1
         ANSVARIGTAB.FORNAMN = emtrlkomtemp.LEVKOD.
      END.               
      RELEASE ANSVARIGTAB NO-ERROR.
   END.   
END PROCEDURE.





PROCEDURE admbortmtrlk_UI:   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR emtrlkomtemp. 
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp. 

   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST emtrlkomtemp NO-ERROR.
   DO TRANSACTION:         
      FIND FIRST ANSVARIGTAB WHERE ANSVARIGTAB.PERSONALKOD = emtrlkomtemp.ENR AND ANSVARIGTAB.OMREGTID = 1 EXCLUSIVE-LOCK NO-ERROR.                            
      IF AVAILABLE ANSVARIGTAB THEN DO:        
         DELETE ANSVARIGTAB.                     
      END.
   END.
   RELEASE ANSVARIGTAB NO-ERROR.
END PROCEDURE.


PROCEDURE kolllev_UI:
   DEFINE INPUT PARAMETER lkod AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   kollev = FALSE.
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = lkod NO-LOCK NO-ERROR.
   IF AVAILABLE LEVERANTOR THEN DO:
      kollev = TRUE.
   END.
END PROCEDURE.


PROCEDURE kollenr_UI:
   DEFINE INPUT PARAMETER lkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER senr AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   kollev = FALSE.
   FIND FIRST MTRL WHERE MTRL.LEVKOD = lkod AND MTRL.ENR = senr AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:
      kollev = TRUE.
   END.
END PROCEDURE.

PROCEDURE kollenrn_UI:
   DEFINE INPUT PARAMETER lkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER senr AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER enrben AS CHARACTER NO-UNDO.
   kollev = FALSE.
   FIND FIRST MTRL WHERE MTRL.LEVKOD = lkod AND MTRL.ENR = senr AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:
      kollev = TRUE.
      enrben = MTRL.BENAMNING.
   END.
END PROCEDURE.

PROCEDURE kollenrk_UI:
   
   DEFINE INPUT PARAMETER senr AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER kolllevk AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER enrben AS CHARACTER NO-UNDO.
   kollev = FALSE.   
   FIND FIRST MTRL WHERE MTRL.LEVKOD = kolllevk AND MTRL.ENR = senr AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:
      ASSIGN
      kollev = TRUE      
      enrben = MTRL.BENAMNING.
   END.
   ELSE DO:
      FIND FIRST MTRL WHERE  MTRL.ENR = senr AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE MTRL THEN DO:
         ASSIGN
         kollev = TRUE
         kolllevk = MTRL.LEVKOD
         enrben = MTRL.BENAMNING.
      END.
   END.
END PROCEDURE.

PROCEDURE kollenrke_UI:
   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR kersattemp.                    
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   /*DEFINE INPUT PARAMETER senr AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER kollev AS LOGICAL NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER kolllevk AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER enrben AS CHARACTER NO-UNDO.*/
   
   kollev = FALSE.
   FIND FIRST kersattemp NO-ERROR.
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = kersattemp.NAMN NO-LOCK NO-ERROR.
   IF NOT AVAILABLE LEVERANTOR THEN DO:
      kollev = TRUE.   
   END.
   /* läs in även om enr inte finns  för översättning 20140131
   FIND FIRST MTRL WHERE MTRL.LEVKOD = kersattemp.NAMN AND MTRL.ENR = kersattemp.ANVANDARE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF NOT AVAILABLE MTRL THEN DO:      
      kollev = TRUE.            
   END.
   ELSE kersattemp.BEN1 = MTRL.BENAMNING.*/
   FIND FIRST MTRL WHERE MTRL.LEVKOD = kersattemp.NAMN AND MTRL.ENR = kersattemp.ANVANDARE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:            
      kersattemp.BEN1 = MTRL.BENAMNING.
   END.   
   FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = kersattemp.BESTID NO-LOCK NO-ERROR.
   IF NOT AVAILABLE LEVERANTOR THEN DO:
      kollev = TRUE.   
   END.
   /* läs in även om enr inte finns  för översättning 20140131
   FIND FIRST MTRL WHERE MTRL.LEVKOD = kersattemp.BESTID AND MTRL.ENR = kersattemp.OMRADE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF NOT AVAILABLE MTRL THEN DO:      
      kollev = TRUE.            
   END.
   ELSE kersattemp.BEN2 = MTRL.BENAMNING.*/
   FIND FIRST MTRL WHERE MTRL.LEVKOD = kersattemp.BESTID AND MTRL.ENR = kersattemp.OMRADE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:      
      kersattemp.BEN2 = MTRL.BENAMNING.            
   END.

END PROCEDURE.

PROCEDURE hmtben_UI:
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR bersattemp. 
   FOR EACH bersattemp:   
      FIND FIRST MTRL WHERE MTRL.LEVKOD = bersattemp.NAMN AND MTRL.ENR = bersattemp.ANVANDARE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE MTRL THEN DO:         
         bersattemp.BEN1 = MTRL.BENAMNING.
      END.
      FIND FIRST MTRL WHERE MTRL.LEVKOD = bersattemp.BESTID AND MTRL.ENR = bersattemp.OMRADE AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE MTRL THEN DO:         
         bersattemp.BEN2 = MTRL.BENAMNING.
      END.
   END.
END PROCEDURE.


PROCEDURE hmtbenk_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR mtrlkomtemp. 
   
   EMPTY TEMP-TABLE mtrlkomtemp NO-ERROR. 
   OPEN QUERY kommq FOR EACH ANSVARIGTAB WHERE ANSVARIGTAB.OMREGTID = 1 AND ANSVARIGTAB.EFTERNAMN NE "" NO-LOCK. 
   GET FIRST kommq NO-LOCK.
   DO WHILE AVAILABLE(ANSVARIGTAB):
      DO TRANSACTION:         
         CREATE mtrlkomtemp.
         ASSIGN
         mtrlkomtemp.ENR = ANSVARIGTAB.PERSONALKOD
         mtrlkomtemp.LEVKOD = ANSVARIGTAB.FORNAMN
         mtrlkomtemp.KOMMENTAR = ANSVARIGTAB.EFTERNAMN
         mtrlkomtemp.OMREGTID = 1.00.
         FIND FIRST MTRL WHERE MTRL.LEVKOD = ANSVARIGTAB.FORNAMN AND MTRL.ENR = mtrlkomtemp.ENR AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
         IF AVAILABLE MTRL THEN DO:         
            mtrlkomtemp.BENAMNING = MTRL.BENAMNING.
         END.
         IF NOT AVAILABLE MTRL THEN DO:
            FIND FIRST MTRL WHERE MTRL.ENR = mtrlkomtemp.ENR AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
            IF AVAILABLE MTRL THEN DO:         
               mtrlkomtemp.BENAMNING = MTRL.BENAMNING.
            END.
         END.

      END.
      GET NEXT kommq NO-LOCK.
   END.
   CLOSE QUERY kommq.   



   /*FIND FIRST HUVUDLEV WHERE HUVUDLEV.DEP-NR = 999 NO-LOCK NO-ERROR.
   FOR EACH emtrlkomtemp:   
      FIND FIRST MTRL WHERE MTRL.LEVKOD = HUVUDLEV.LEVKOD AND MTRL.ENR = emtrlkomtemp.ENR AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE MTRL THEN DO:         
         emtrlkomtemp.BENAMNING = MTRL.BENAMNING.
      END.
      IF NOT AVAILABLE MTRL THEN DO:      
         FIND FIRST MTRL WHERE MTRL.ENR = emtrlkomtemp.ENR AND MTRL.KALKNR = 0 NO-LOCK NO-ERROR.
         IF AVAILABLE MTRL THEN DO:         
            emtrlkomtemp.BENAMNING = MTRL.BENAMNING.
         END.
      END.
   END.       */
END PROCEDURE.

PROCEDURE bortblank_UI:  
   OPEN QUERY bortq FOR EACH ANSVARIGTAB WHERE ANSVARIGTAB.OMREGTID = 1 AND ANSVARIGTAB.EFTERNAMN = "" NO-LOCK. 
   GET FIRST bortq NO-LOCK.
   DO WHILE AVAILABLE(ANSVARIGTAB):
      DO TRANSACTION:         
         FIND CURRENT ANSVARIGTAB EXCLUSIVE-LOCK.
         DELETE ANSVARIGTAB.
      END.
      GET NEXT bortq NO-LOCK.
   END.
   CLOSE QUERY bortq.   
   RELEASE ANSVARIGTAB NO-ERROR.
   
END PROCEDURE.
