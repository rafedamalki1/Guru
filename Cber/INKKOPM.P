/*INKKOPM.P*/
/*INKMTRL.PRIS o ORGINAL ENR OCH LEV PRIS
  INKMTRL.PRISINK = NYTT ENR ELLER LEV PRIS
  BYTARE MAN INTE ENR ELLER LEV ÄR DESSA LIKA 
  
  ehandelskap_UI skickar
  fardigbest_UI sätter inkbestid
  bestklar_UI meddelar
  
  */ 
{INKKOPOWID.I}
DEFINE VARIABLE elementhidden AS CHARACTER NO-UNDO.
DEFINE VARIABLE felpaAdressBestOrdning AS CHARACTER NO-UNDO.
DEFINE VARIABLE lastinkDirekt AS INTEGER NO-UNDO.
DEFINE VARIABLE InkListorDS AS HANDLE NO-UNDO.  
DEFINE VARIABLE Konstgrupptth AS HANDLE NO-UNDO.
DEFINE VARIABLE Konstgruppbuffh AS HANDLE NO-UNDO.
DEFINE VARIABLE Konstruktiontth AS HANDLE NO-UNDO.
DEFINE VARIABLE Konstruktionbuffh AS HANDLE NO-UNDO.
DEFINE VARIABLE Konvaltth AS HANDLE NO-UNDO.
DEFINE VARIABLE Konvalbuffh AS HANDLE NO-UNDO.
DEFINE VARIABLE Mtrlbertth AS HANDLE NO-UNDO.
DEFINE VARIABLE Mtrlberbuffh AS HANDLE NO-UNDO.
DEFINE VARIABLE radprojladd AS CHARACTER NO-UNDO EXTENT 10.
DEFINE VARIABLE inkarbart AS INTEGER NO-UNDO.
DEFINE VARIABLE orgdir AS CHARACTER NO-UNDO. 
DEFINE VARIABLE qH AS HANDLE NO-UNDO.   
DEFINE VARIABLE arbansvar AS CHARACTER NO-UNDO.
{MTRLJAM.I}
{SOKDEF.I}

{TIDUTTTNEW.I}
{BERSTOLP.I}
{SELGAds.I}
{ESLAGERSTATUSTT.I}
{BestGuruTT.I}
DEFINE VARIABLE sellistavar AS CHARACTER NO-UNDO.
DEFINE VARIABLE cmblev1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE cmblev2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE cmblev3 AS CHARACTER NO-UNDO.
DEFINE NEW SHARED VARIABLE lin_rowid AS ROWID NO-UNDO.  /*lena*/
DEFINE VARIABLE excelnamn AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE inkberh AS HANDLE NO-UNDO.
DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE SHARED VARIABLE inkopvart AS CHARACTER NO-UNDO. 
DEFINE VARIABLE aonrortben AS CHARACTER NO-UNDO.
DEFINE VARIABLE nettoh AS HANDLE NO-UNDO.
DEFINE VARIABLE laddaproch AS HANDLE NO-UNDO.
DEFINE VARIABLE brwh AS HANDLE NO-UNDO EXTENT 50.
DEFINE VARIABLE leftbrwh AS HANDLE NO-UNDO.
DEFINE VARIABLE rightbrwh AS HANDLE NO-UNDO.
DEFINE VARIABLE leftqueh AS HANDLE NO-UNDO.
DEFINE VARIABLE rightqueh AS HANDLE NO-UNDO.
DEFINE VARIABLE leftbufh AS HANDLE NO-UNDO.
DEFINE VARIABLE rightbufh AS HANDLE NO-UNDO.

DEFINE VARIABLE idvarlabel AS CHARACTER NO-UNDO.
DEFINE VARIABLE totalsum AS DECIMAL NO-UNDO.
DEFINE VARIABLE ediben AS CHARACTER NO-UNDO.
DEFINE VARIABLE brwfocus AS INTEGER NO-UNDO.

DEFINE VARIABLE kontrollbest AS LOGICAL NO-UNDO.

DEFINE VARIABLE delleftbrwok AS LOGICAL NO-UNDO.
DEFINE VARIABLE inkaddr AS ROWID NO-UNDO.
DEFINE VARIABLE feladresskoll AS LOGICAL NO-UNDO.
DEFINE VARIABLE valpersval AS INTEGER NO-UNDO.
DEFINE VARIABLE clobdynh AS HANDLE NO-UNDO.
DEFINE VARIABLE clobidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE berben AS CHARACTER NO-UNDO.
DEFINE VARIABLE aosok AS CHARACTER NO-UNDO.
DEFINE VARIABLE posok AS CHARACTER NO-UNDO.
DEFINE VARIABLE begvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE stjarnvar AS INTEGER NO-UNDO.

DEFINE VARIABLE visaejpris AS LOGICAL NO-UNDO.
DEFINE VARIABLE visatoms AS LOGICAL NO-UNDO.
DEFINE VARIABLE visabygg AS LOGICAL NO-UNDO.
DEFINE VARIABLE visauppl AS LOGICAL NO-UNDO.
DEFINE VARIABLE visaskylt AS LOGICAL NO-UNDO.
DEFINE VARIABLE visadelaupp AS LOGICAL NO-UNDO.
DEFINE VARIABLE visadelamed AS INTEGER NO-UNDO.
DEFINE VARIABLE visastolp AS LOGICAL NO-UNDO.
DEFINE VARIABLE blinkoll AS LOGICAL NO-UNDO.
DEFINE VARIABLE norrbnr AS CHARACTER NO-UNDO.
DEFINE VARIABLE mellanbnr AS CHARACTER NO-UNDO.
DEFINE VARIABLE vastostbnr AS CHARACTER NO-UNDO.
DEFINE VARIABLE ehandelskap AS LOGICAL NO-UNDO.
DEFINE VARIABLE vistogpris AS LOGICAL NO-UNDO.
DEFINE VARIABLE tidadresID AS INTEGER NO-UNDO.
DEFINE VARIABLE dbasnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE bepost AS CHARACTER NO-UNDO.
DEFINE TEMP-TABLE felmeddftptemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.

inkaddr = ?.
{SMTPDEF3.I}


DEFINE VARIABLE UserId1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE Pwd AS CHARACTER NO-UNDO.
DEFINE VARIABLE ItemNo AS CHARACTER NO-UNDO.
DEFINE VARIABLE GetAvailableStockResult AS CHARACTER NO-UNDO.
DEFINE VARIABLE hWebService AS HANDLE NO-UNDO.
DEFINE VARIABLE hExternKundServiceSoap AS HANDLE NO-UNDO.
DEFINE VARIABLE resultvar AS CHARACTER NO-UNDO.

/*LAGERPLATSKOPPLING SNAT*/
DEFINE VARIABLE logresult AS LOGICAL NO-UNDO.
DEFINE VARIABLE fbdep AS LOGICAL NO-UNDO.

DEFINE VARIABLE leveransaoapph AS HANDLE NO-UNDO.
&Scoped-define NEW NEW  
&Scoped-define SHARED SHARED
{LAGERTRUM.I}
&Scoped-define NEW   
&Scoped-define SHARED SHARED
{AOBESTMTRLDEP.I}


FUNCTION GetAvailableStock RETURNS CHARACTER
  (INPUT UserId1 AS CHARACTER,
   INPUT Pwd AS CHARACTER,
   INPUT ItemNo AS CHARACTER)
  IN hExternKundServiceSoap.

DEFINE VARIABLE berstolpapph AS HANDLE NO-UNDO.
IF Guru.Konstanter:appcon THEN DO:   
   RUN BERSTOLPAPP.P PERSISTENT SET berstolpapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN BERSTOLPAPP.P PERSISTENT SET berstolpapph.
END. 
RUN laddastolp_UI IN berstolpapph (OUTPUT TABLE berstolptemp).
DEFINE VARIABLE btnnovit AS HANDLE NO-UNDO.
IF NOT VALID-HANDLE(clobdynh) THEN DO:
   IF Guru.Konstanter:appcon THEN DO:
      RUN CLOBDYN.P PERSISTENT SET clobdynh ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      RUN CLOBDYN.P PERSISTENT SET clobdynh.       
   END.
  
  
END.
PROCEDURE InkAvs_UI :
   
END PROCEDURE.
PROCEDURE startclient_UI :
   RUN main_UI.
END PROCEDURE. 
PROCEDURE main_UI :
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE listanr AS INTEGER NO-UNDO.
   /*
   IF Guru.Konstanter:mtrlsekvar[6] = TRUE THEN RETURN.
   */
   ASSIGN
   BTN_JMFSALDO:LABEL = "Listor/~növrigt" 
   BTN_BEST:LABEL  = "Beställn~ningar".
   /*OBS DEFAULT VÄRDEN ÄVEN ÄVEN UNDER summeradress_UI*/
   
   /*
    "Projektpackning", 1,
"Snabbleverans", 2,
"Ej tagit ställning", 3
   */
   {PROJPACK.I}
   FILL-IN-DEPFORTID:ROW = FILL-IN-DEPKUNDNRTID:ROW. 
   FILL-IN-ALTFORTID:ROW = FILL-IN-DEPKUNDNRTID:ROW.
   FILL-IN-ALTFOR:ROW = FILL-IN-DEPLEVADR:ROW.
   FILL-IN-ALTFOR:HIDDEN = TRUE.
   FILL-IN-ALTFORTID:HIDDEN = TRUE.
   IF Guru.Konstanter:globforetag = "cGRAN" THEN DO:
      FILL-IN-ALTFOR:HIDDEN = FALSE.
      FILL-IN-ALTFOR:LABEL = "Alt. Beställare".
      FILL-IN-ALTFORTID:HIDDEN = FALSE.
      FILL-IN-ALTFORTID:LABEL = "Alt. Beställare".
   END.    
   RAD_PROJ:DELETE("Projektpackning").
   RAD_PROJ:DELETE("Snabbleverans").
   RAD_PROJ:DELETE("Ej tagit ställning").
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      RAD_PROJ:ADD-LAST(radprojladd[2], 2).
      RAD_PROJ:ADD-LAST(radprojladd[4], 4).
      RAD_PROJ:ADD-LAST(radprojladd[1], 1).
      RAD_PROJ:SCREEN-VALUE = STRING(2). 
      
   END.
   ELSE DO:
      RAD_PROJ:ADD-LAST(radprojladd[1], 1).
      IF Guru.Konstanter:globforetag = "ELPA" THEN RAD_PROJ:ADD-LAST(radprojladd[4], 4).
      RAD_PROJ:ADD-LAST(radprojladd[2], 2).
      RAD_PROJ:ADD-LAST(radprojladd[3], 3).
      RAD_PROJ:SCREEN-VALUE = STRING(1).
   END.
   
   
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "GRAN"  THEN DO:
      RAD_PROJ:DELETE("Ej tagit ställning").
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN RAD_PROJ:SCREEN-VALUE = STRING(2).
   END.
   ELSE IF Guru.Konstanter:globforetag = "ELPA" {GLOBVES.I} THEN DO:
      RAD_PROJ:SCREEN-VALUE = STRING(3).
   END.  
   
   
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
      RAD_PROJ:SCREEN-VALUE = STRING(2).
      RAD_PROJ:HIDDEN = TRUE.
   END. 
   ASSIGN
   BTN_GJORDA:HIDDEN = FALSE
   BTN_JMFSALDO:HIDDEN = FALSE
   BTN_BEST:HIDDEN = FALSE.
   IF Guru.Konstanter:globforetag = "VAST" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      RUN hmtbstavroptt_UI IN inkberh (OUTPUT TABLE avropptt).
      FOR EACH avropptt WHERE NO-LOCK:
         status-ok = CMB_KOPARE:ADD-LAST(avropptt.NAMN).
         IF avropptt.ORDNING = 1 THEN CMB_KOPARE:SCREEN-VALUE = avropptt.NAMN.
      END.
   END.
   ASSIGN
   CMB_KOPARE:HIDDEN = TRUE
   FILL-IN-PNnummer:HIDDEN = TRUE.
   FILL-IN-PNnummerTID:HIDDEN = TRUE.    
   RUN SetWindowLongA IN Guru.Konstanter:hpApi (BTN_JMFSALDO:HWND,-16,1409294336,OUTPUT ReturnValue).
   RUN SendMessageA IN Guru.Konstanter:hpApi (BTN_JMFSALDO:HWND,244,1409294336,1,OUTPUT ReturnValue).
   RUN SetWindowLongA IN Guru.Konstanter:hpApi (BTN_BEST:HWND,-16,1409294336,OUTPUT ReturnValue).
   RUN SendMessageA IN Guru.Konstanter:hpApi (BTN_BEST:HWND,244,1409294336,1,OUTPUT ReturnValue).
   ASSIGN
   RAD_PROJ:TOOLTIP = "Välj " + radprojladd[2] + " för mindre beställningar som EJ ska projektförpackas!."
   /*RAD_PROJ:TOOLTIP = "Välj snabbleverans för mindre beställningar som EJ ska projektförpackas!."*/
   FILL-IN-KIKONTAKT:TOOLTIP = "För att få vallista på personer tryck högra mustangenten."
   FILL-IN-KTKONTAKT:TOOLTIP = "För att få vallista på personer tryck högra mustangenten."
   FILL-IN-PLKONTAKT:TOOLTIP = "För att få vallista på personer tryck högra mustangenten.".
   EDIT_LINFO:TOOLTIP = "Dubbel-klicka här för att ändra storlek.".
   
   RUN buttplace_UI.
       
   Guru.GlobalaVariabler:collefth = ?.
   RUN buttrow2_UI IN framesizeh (INPUT 8). 
   Guru.GlobalaVariabler:colrighth = BTN_VISA.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_MANBEST.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_EHANDEL.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   
   
    
  
   RUN SaldoGoma_UI.
   
   
   
   
   CMB_DEPVAL:HIDDEN = TRUE.
   IF Guru.GlobalaVariabler:GuruDepa = TRUE  THEN  CMB_DEPVAL:HIDDEN = FALSE.
   Guru.GlobalaVariabler:collefth = ?.
   RUN buttrow2_UI IN framesizeh (INPUT CMB_LEVTILL:ROW + 1.2). 
   Guru.GlobalaVariabler:colrighth = BTN_BYTLEV.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_INKANTAL.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_MTRLTABORT.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   Guru.GlobalaVariabler:colrighth = BTN_MTRLENDASTMARK.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   Guru.GlobalaVariabler:colrighth = BTN_ORGENR.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   
   Guru.GlobalaVariabler:collefth = ?.
   RUN buttrow2_UI IN framesizeh (INPUT BTN_LBYTENR:ROW).
   BTN_LBORT:ROW = BTN_LBYTENR:ROW. 
   Guru.GlobalaVariabler:colrighth = BTN_STATUSKOLL.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   Guru.GlobalaVariabler:colrighth = BTN_LVISA.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_LMANBEST.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_LEHANDEL.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   
   BTN_LBORTALLT:ROW =  BTN_LVISA:ROW.  
   BTN_LBORTALLT:COLUMN =  BTN_LBORT:COLUMN.
   
                      
   BTN_SNABB:LOAD-IMAGE("BILDER\xbtn_sspara.gif") NO-ERROR.
   BTN_MTRL:LOAD-IMAGE("BILDER\xbtn_mtrl.gif") NO-ERROR.
   BTN_ADD:LOAD-IMAGE("BILDER\xbtn_addr.gif") NO-ERROR.
   BTN_BEST:LOAD-IMAGE("BILDER\xbtn_bestall.gif") NO-ERROR.
   BTN_GJORDA:LOAD-IMAGE("BILDER\xbtn_tidigarebe.gif") NO-ERROR.
   BTN_JMFSALDO:LOAD-IMAGE("BILDER\xbtn_inkopjmf.gif") NO-ERROR. 
   BTN_MANBEST:LOAD-IMAGE("BILDER\xbtn_bestman.gif") NO-ERROR. 
   
   
   
   BTN_EHANDEL:LOAD-IMAGE("BILDER\xbtn_bestel.gif") NO-ERROR.  
   BTN_LMANBEST:LOAD-IMAGE("BILDER\xbtn_bestman.gif") NO-ERROR. 
   BTN_LEHANDEL:LOAD-IMAGE("BILDER\xbtn_bestel.gif") NO-ERROR.
   
   IF Guru.Konstanter:gaok BEGINS "s" THEN BTN_ATER:LOAD-IMAGE ("BILDER\xbtn_aterSO.gif") NO-ERROR.
   ELSE IF Guru.Konstanter:gaok BEGINS "P" THEN BTN_ATER:LOAD-IMAGE ("BILDER\xbtn_aterPRO.gif") NO-ERROR.
   ELSE IF Guru.Konstanter:gaok BEGINS "A" THEN BTN_ATER:LOAD-IMAGE ("BILDER\xbtn_aterAO.gif") NO-ERROR.
   ELSE DO:
      BTN_ATER:LOAD-IMAGE ("BILDER\xbtn_aterAO.gif").
   END.   
  
   ASSIGN  
   BTN_ANDRALEVK:HIDDEN = TRUE 
   BTN_BORTLEVK:HIDDEN = TRUE
   BTN_NYLEVK:HIDDEN = TRUE.
   
   /*
   BTN_ATER:LABEL = "Åter~n" + Guru.Konstanter:gaok + "-meny".
 
   RUN SetWindowLongA IN Guru.Konstanter:hpApi (BTN_ATER:HWND,-16,1409294336,OUTPUT ReturnValue).
   RUN SendMessageA IN Guru.Konstanter:hpApi (BTN_ATER:HWND,244,1409294336,1,OUTPUT ReturnValue). 
   */
   SEL_LISTOR:SCREEN-VALUE = "Visa gjorda beställningar".
   sellistavar = SEL_LISTOR:SCREEN-VALUE. 
 /*
   SEL_LISTOR:SCREEN-VALUE = "Visa gjorda beställningar".
 */ 
   RUN smtrlentry_UI.
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
      RUN inkgrundDirekt_UI IN inkberh (INPUT Guru.GlobalaVariabler:DirektAo,INPUT Guru.GlobalaVariabler:DirektDelnr,INPUT Guru.Konstanter:globanv, OUTPUT berben, OUTPUT aonrortben).
      berben = berben + " " + aonrortben.
      inkaonrvar = Guru.GlobalaVariabler:DirektAo.
      inkdelnrvar = Guru.GlobalaVariabler:DirektDelnr.
   END.  
   ELSE DO: 
      RUN inkgrund_UI IN inkberh (INPUT inkbervar,INPUT inkomrvar,INPUT Guru.Konstanter:globanv, OUTPUT berben, OUTPUT aonrortben).
      RUN hmtaonr_UI  IN inkberh (OUTPUT inkaonrvar, OUTPUT  inkdelnrvar).
      RUN Kundvallista_UI IN inkberh (OUTPUT listanr).
      Guru.GlobalaVariabler:KundListId = listanr.
   END.
  
   RUN ttladda_UI.
   RUN levladd_UI. 
   RUN konstladda_UI IN inkberh 
   (OUTPUT TABLE bblabeltemp,OUTPUT TABLE ink_urval,
    OUTPUT TABLE ink_val,OUTPUT TABLE inkber_mtrl,OUTPUT TABLE ink_mtrl,OUTPUT TABLE inkbest_mtrl,
    OUTPUT TABLE ink_urdisp,OUTPUT TABLE bort_mtrl, OUTPUT TABLE beruppinktemp,
    OUTPUT TABLE inkadresstemp, OUTPUT TABLE tidinkadresstemp, OUTPUT TABLE idinktemp,OUTPUT lastinkDirekt).
   RUN adressfav_UI IN inkberh (INPUT Guru.Konstanter:globanv,OUTPUT TABLE inkadresskoptemp).
   RUN kundref_UI IN inkberh (OUTPUT TABLE kontaktperstemp).
   RUN kundrefav_UI IN inkberh (OUTPUT TABLE kontaktperstemp2).
   
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN.
   ELSE RUN laddadepsaldo_UI IN inkberh (INPUT 1,  OUTPUT TABLE depa_mtrl).
   
   IF Guru.GlobalaVariabler:GuruDepa = TRUE  THEN DO:  
      /*snatdepå*/    
      status-ok = CMB_DEPVAL:DELETE("Item 1").
      FOR EACH depatemp NO-LOCK:     
         /*2-Drift och underhållslager och 7-Passivt felavhjälpningslager ska inte gå att plocka från lena  20190515*/
         IF depatemp.Dep-Nr = 1 OR depatemp.Dep-Nr = 7 OR depatemp.Dep-Nr = 8  THEN . 
         ELSE status-ok = CMB_DEPVAL:ADD-LAST(depatemp.Benamning).
      END.  
      /*depatemp.Dep-Nr = 1  ANVÄNDS EJ I INKÖP*/  
      FIND FIRST depatemp WHERE depatemp.Dep-Nr = 2 NO-ERROR.
      CMB_DEPVAL:SCREEN-VALUE = depatemp.Benamning.
      RUN DepVal_UI.        
   END. 
   blinkoll = FALSE.
   RUN blinkabkoll_UI IN inkberh (INPUT inkbervar,INPUT inkomrvar, OUTPUT blinkoll ).
   IF blinkoll = TRUE THEN DO:      
      MESSAGE "Denna beredning innehåller kablar upplagda via den gamla funktionen Lin/Kab. Dessa kablar går ej att beställa via den nya Inköpsrutinen."   VIEW-AS ALERT-BOX.
   END.      
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/               
      EMPTY TEMP-TABLE ikmtrltemp NO-ERROR. 
      FIND FIRST inkber_mtrl WHERE NO-LOCK NO-ERROR.
      IF AVAILABLE inkber_mtrl THEN       
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE inkber_mtrl, OUTPUT TABLE ikmtrltemp).
      FIND FIRST bort_mtrl WHERE NO-LOCK NO-ERROR.
      IF AVAILABLE bort_mtrl THEN 
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE bort_mtrl, OUTPUT TABLE ikmtrltemp APPEND).
      FIND FIRST ink_mtrl WHERE NO-LOCK NO-ERROR.
      IF AVAILABLE ink_mtrl THEN 
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE ink_mtrl, OUTPUT TABLE ikmtrltemp APPEND).      
   END.   
   RUN skapabrw_UI (INPUT 1, TEMP-TABLE ink_urdisp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 2, TEMP-TABLE ink_val:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 3, TEMP-TABLE ink_mtrl:DEFAULT-BUFFER-HANDLE).
   /*
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[3] (INPUT "kund DESCENDING by enr").
   */
   
   RUN skapabrw_UI (INPUT 4, TEMP-TABLE inkbest_mtrl:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[4] (INPUT "kund DESCENDING by enr BY LEVKODINK").
  
   RUN summtrl_UI.
   FIND FIRST beruppinktemp WHERE NO-LOCK NO-ERROR.
   RAD_UPPKONST:SCREEN-VALUE = STRING(1).
   IF AVAILABLE beruppinktemp THEN DO:
      RUN skapabrw_UI (INPUT 5, TEMP-TABLE beruppinktemp:DEFAULT-BUFFER-HANDLE).
   END.
   ELSE DO:
      /*   
      RAD_UPPKONST:HIDDEN = TRUE.
      */
   END.  
   RUN skapabrw_UI (INPUT 6, TEMP-TABLE bort_mtrl:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[6] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 7, TEMP-TABLE inkadresstemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 8, TEMP-TABLE inkbest_mtrl:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[8] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 9, TEMP-TABLE inkadresstemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 10, TEMP-TABLE tidinkadresstemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 11, TEMP-TABLE depatemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 12, TEMP-TABLE levkontakttemp:DEFAULT-BUFFER-HANDLE).
   
   RUN skapabrw_UI (INPUT 13, TEMP-TABLE fastanmtemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 14, TEMP-TABLE personaltemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 15, TEMP-TABLE tidinkadresstemp:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 16, TEMP-TABLE mtrltemp:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[16] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 17, TEMP-TABLE tidink_mtrl:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[17] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 18, TEMP-TABLE inkadresskoptemp:DEFAULT-BUFFER-HANDLE). 
   RUN skapabrw_UI (INPUT 19, TEMP-TABLE kontaktperstemp:DEFAULT-BUFFER-HANDLE).
   
   RUN skapabrw_UI (INPUT 20, TEMP-TABLE mtrltemp:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[20] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 21, TEMP-TABLE inkbest_mtrl:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[21] (INPUT "kund DESCENDING by enr"). 
   RUN skapabrw_UI (INPUT 22, TEMP-TABLE kontaktperstemp2:DEFAULT-BUFFER-HANDLE).
   RUN skapabrw_UI (INPUT 23, TEMP-TABLE beruppinktemp:DEFAULT-BUFFER-HANDLE).
   RUN InkListorDS_UI.
   RUN skapabrw_UI (INPUT 24, TEMP-TABLE mtrltemp:DEFAULT-BUFFER-HANDLE).
   IF Guru.Konstanter:globnetprissortvar = 1 THEN  RUN setcolindex_UI IN brwproc[24] (INPUT "kund DESCENDING by enr").
   RUN skapabrw_UI (INPUT 25, Konvalbuffh).
   
   RUN radadress_UI.
   RUN fixastorlek_UI.   
   RUN DYNARROW.P PERSISTENT SET Arrowbrwproc[24] (INPUT brwh[2],INPUT brwh[1],
                                                        INPUT BTN_BACKMTRL, INPUT BTN_ALLBACKMTRL,
                                                        INPUT ?, INPUT ?).   
   RUN DYNARROW.P PERSISTENT SET Arrowbrwproc[25] (INPUT brwh[1],INPUT brwh[2],
                                                        INPUT BTN_OVERMTRL, INPUT BTN_ALLOVERMTRL,
                                                        INPUT ?, INPUT ?).
   
   
   FRAME-BERVAL:VISIBLE = TRUE.
   FRAME-INKDIREKT:VISIBLE = TRUE.
   FRAME-INKDIREKT:MOVE-TO-TOP().
   FRAME-BERVAL:MOVE-TO-TOP().
   FRAME-MTRLVAL:VISIBLE = FALSE.
   /*
   FRAME-BERVAL:BGCOLOR = 5.                                                    
   FRAME-MTRLVAL:BGCOLOR = 3.
    */
    /*triggers*/
   ON 'CHOOSE' OF BTN_SNABB PERSISTENT RUN fbtnsnabb_UI IN THIS-PROCEDURE. 
   ON 'CHOOSE' OF BTN_MTRLBACK PERSISTENT RUN kon_mtrlback_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_BYTLEV PERSISTENT RUN levbyt_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_ORGENR PERSISTENT RUN orgenr_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_INKANTAL PERSISTENT RUN antalmatrl_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_MTRLTABORT PERSISTENT RUN bortmatrl_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_MTRLENDASTMARK PERSISTENT RUN bortEjMarkmatrl_UI IN THIS-PROCEDURE.
      
   ON 'CHOOSE' OF BTN_ATERMTRL PERSISTENT RUN atermtrl_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_MTRL PERSISTENT RUN btnmtrl_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_BEST PERSISTENT RUN inkbest_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_ADD PERSISTENT RUN btnadress_UI IN THIS-PROCEDURE.
  
   ON 'CHOOSE' OF BTN_JMFSALDO PERSISTENT RUN lagerSaldo_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_GJORDA PERSISTENT RUN btngjorda_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LEVBORT PERSISTENT RUN btnlevbort_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_ANDRALEVK PERSISTENT RUN andralevk_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_BORTLEVK PERSISTENT RUN bortlevk_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_NYLEVK PERSISTENT RUN nylevk_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF m_Vlj_Personal PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 1). /*POPUP-MENU-FILL-IN-KIKONTAKT*/
   ON 'CHOOSE' OF m_Vlj_Kundreferens PERSISTENT RUN valkundref_UI IN THIS-PROCEDURE (INPUT 5). /*POPUP-MENU-FILL-IN-KIKONTAKT*/
    
   ON 'CHOOSE' OF m_Vlj_Personal2 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 2). /*POPUP-MENU-FILL-IN-KIKONTAKT*/
   ON 'CHOOSE' OF m_Vlj_Personal3 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 3). /*POPUP-MENU-FILL-IN-PLKONTAKT*/
   ON 'CHOOSE' OF m_Vlj_Personal4 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 4). /*POPUP-MENU-FILL-IN-AVISPERS*/
   ON 'CHOOSE' OF m_Vlj_extern_person PERSISTENT RUN extervalpers_UI IN THIS-PROCEDURE (INPUT 1). /*POPUP-MENU-FILL-IN-AVISPERS*/
   
   ON 'CHOOSE' OF BTN_VISA PERSISTENT RUN visabest_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_MANBEST PERSISTENT RUN manbest_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_EHANDEL PERSISTENT RUN elbest_UI IN THIS-PROCEDURE.
  
   
   ON 'CHOOSE' OF BTN_LMANBEST PERSISTENT RUN lmanbest_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LEHANDEL PERSISTENT RUN lelbest_UI IN THIS-PROCEDURE.
    
   ON 'CHOOSE' OF BTN_OK PERSISTENT RUN btnok_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_ATER PERSISTENT RUN btnater_UI IN THIS-PROCEDURE. 
   
   ON 'CHOOSE' OF BTN_AVB PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LVISA PERSISTENT RUN listvisa_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LBYTENR PERSISTENT RUN btnbytenr_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_BYTENRBE PERSISTENT RUN btnbytenrbe_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LBORT PERSISTENT RUN btnbortenr_UI IN THIS-PROCEDURE.
   ON 'CHOOSE' OF BTN_LBORTALLT PERSISTENT RUN btnbortenralla_UI IN THIS-PROCEDURE.
   
   ON 'CHOOSE' OF BTN_STATUSKOLL PERSISTENT RUN btnstatus_UI IN THIS-PROCEDURE.
   
   ON 'CHOOSE' OF BTN_ADRESSKOLL PERSISTENT RUN btnadressk_UI IN THIS-PROCEDURE.
  
   ON 'CHOOSE' OF BTN_ATERBE PERSISTENT RUN btnatermtrl_UI IN THIS-PROCEDURE. 
   
   ON 'CHOOSE' OF BTN_OVERMTRLDIREKT PERSISTENT RUN listaDirektover_UI  IN THIS-PROCEDURE.
   
   ON 'MOUSE-SELECT-CLICK' OF FILL-IN-AVIS PERSISTENT RUN avismc_UI IN THIS-PROCEDURE.
   ON 'LEAVE' OF FILL-IN-AVIS PERSISTENT RUN avileave_UI IN THIS-PROCEDURE.
   ON 'LEAVE' OF FILL-IN-KIEPOST PERSISTENT RUN leaveepost_UI IN THIS-PROCEDURE.
   ON 'LEAVE' OF FILL-IN-MARK PERSISTENT RUN leavemark_UI IN THIS-PROCEDURE.
   /*
   ON 'MOUSE-MENU-CLICK'      OF FILL-IN-MARK PERSISTENT RUN mmdatum_UI IN THIS-PROCEDURE.               
   */
   ON 'VALUE-CHANGED' OF RAD_PROJ PERSISTENT RUN radproj_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF RAD_ADRESS PERSISTENT RUN radadress_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF RAD_UPPKONST PERSISTENT RUN raduppk_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF RAD_VALDMTRL PERSISTENT RUN radvaldmk_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF SEL_LISTOR PERSISTENT RUN sellistorvc_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF FRAME-MTRL PERSISTENT RUN fixastorlek_UI IN THIS-PROCEDURE.
   ON 'VALUE-CHANGED' OF CMB_DEPVAL PERSISTENT RUN laddadep_UI IN THIS-PROCEDURE.
   
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[4] PERSISTENT RUN bestmtrlinfodbclic_UI IN THIS-PROCEDURE. 
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[9] PERSISTENT RUN adrmouseseldbclic_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[10] PERSISTENT RUN tidmouseseldbclic_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[11] PERSISTENT RUN depmouseseldbclic_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[12] PERSISTENT RUN konmouseseldbclic_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[13] PERSISTENT RUN kommouseseldbclic_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[14] PERSISTENT RUN mdbrwpers_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[19] PERSISTENT RUN mdbrwpers_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[18] PERSISTENT RUN mdkopierlevadress_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[22] PERSISTENT RUN Externavispers_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK' OF brwh[23] PERSISTENT RUN mdkopierUpplevadress_UI IN THIS-PROCEDURE.    
   ON 'MOUSE-SELECT-DBLCLICK' OF EDIT_LINFO PERSISTENT RUN mdeditline_UI IN THIS-PROCEDURE.  
   ON 'MOUSE-MENU-CLICK'      OF FILL-IN-DATUM PERSISTENT RUN mmdatum_UI IN THIS-PROCEDURE.
   ON 'ANY-KEY':U OF FILL-IN-BENBYT PERSISTENT RUN akben_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-BENBYT PERSISTENT RUN musbendubb_UI IN THIS-PROCEDURE.
   ON 'ANY-KEY':U OF FILL-IN-BENBYTBE PERSISTENT RUN akbenbe_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-BENBYTBE PERSISTENT RUN musbendubbbe_UI IN THIS-PROCEDURE.
   ON 'ANY-KEY':U OF FILL-IN-ENRBYT PERSISTENT RUN akenr_UI IN THIS-PROCEDURE.
   ON 'ANY-KEY':U OF FILL-IN-ENRBYTBE PERSISTENT RUN akenrbe_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-ENRBYT PERSISTENT RUN musenrdubb_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-ENRBYTBE PERSISTENT RUN musenrdubbbe_UI IN THIS-PROCEDURE.
 
   ON 'ANY-KEY':U OF FILL-IN-BENDIREKT PERSISTENT RUN akbenD_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-BENDIREKT PERSISTENT RUN musbendubbD_UI IN THIS-PROCEDURE.
   ON 'ANY-KEY':U OF FILL-IN-ENRDIREKT PERSISTENT RUN akenrD_UI IN THIS-PROCEDURE.
   ON 'MOUSE-SELECT-DBLCLICK':U OF FILL-IN-ENRDIREKT PERSISTENT RUN musenrdubbD_UI IN THIS-PROCEDURE.
   ON 'LEAVE':U OF FILL-IN-KIKONTAKT PERSISTENT RUN LeaveKikontakt_UI IN THIS-PROCEDURE.
   IF Guru.Konstanter:globforetag = "GRAN" THEN m_Vlj_Kundreferens:SENSITIVE = FALSE.
   
   IF Guru.Konstanter:globforetag = "VAST" THEN DO:
      FILL-IN-KIKONTAKT:SENSITIVE = TRUE.
      FILL-IN-KIMOBIL:SENSITIVE = FALSE.
      FILL-IN-KIEPOST:SENSITIVE = FALSE.
      FILL-IN-KITELE:SENSITIVE = FALSE.
   END.
   
   /*pga av problem med inkadress*/
   BTN_LEVBORT:HIDDEN = TRUE.
   
   /*
   
   RUN whout_UI (OUTPUT BTN_BYTENRBE).
   RUN whout_UI (OUTPUT RECT-SOKBE).
   RUN whout_UI (OUTPUT IMAGE-SOKBE).
   RUN whout_UI (OUTPUT BTN_ATERBE).
   */
  
	/*extra trigg*/
   RUN setcolindex_UI IN brwproc[1] (INPUT "AONRAONR BY AONRDELNR BY BERORDNR"). 
   RUN openbdynspec_UI IN brwproc[1]. 	
   RUN setcolindex_UI IN brwproc[2] (INPUT "AONRAONR BY AONRDELNR BY BERORDNR").    
   RUN openbdynspec_UI IN brwproc[2].
   RUN entryextra_UI IN brwproc[3]  (INPUT "kmtrlentry_UI", INPUT THIS-PROCEDURE).
   RUN entryextra_UI IN brwproc[4]  (INPUT "smtrlentry_UI", INPUT THIS-PROCEDURE). 
   RUN setcolindex_UI IN brwproc[7] (INPUT "LEVKODINK").   
   RUN setcolsortvar_UI IN brwproc[7] (INPUT "AKTIV = TRUE").
   RUN openbdynspec_UI IN brwproc[7]. 
   RUN setcolindex_UI IN brwproc[9] (INPUT "LEVKODINK").
      
   RUN setcolsortvar_UI IN brwproc[9] (INPUT "AKTIV = TRUE").
   RUN openbdynspec_UI IN brwproc[9].
   RUN setdescvarcol_UI IN brwproc[10] (INPUT TRUE).
   RUN setcolindex_UI IN brwproc[12] (INPUT "LEVKONTAKT"). 
   RUN setdescvarcol_UI IN brwproc[15] (INPUT TRUE).
   RUN setcolindex_UI IN brwproc[15] (INPUT " BESTDATUM DESCENDING by KLOCKAN ").
   RUN openbdynspec_UI IN brwproc[15].
   RUN resetcolindex_UI IN brwproc[15].
    
   
   /*ORDERNUMMER
      "BESTDATUM"
      "KLOCKAN"
   */
   
   RUN setcolindex_UI IN brwproc[18] (INPUT "LEVKODINK  by LEVADRESS"). 
   
   RUN overextra_UI IN Arrowbrwproc[24]  (INPUT "selkonback_UI", INPUT THIS-PROCEDURE).
   RUN aoverextra_UI IN Arrowbrwproc[24] (INPUT "aselkonback_UI", INPUT THIS-PROCEDURE).
   RUN overextra_UI IN Arrowbrwproc[25]  (INPUT "selkonover_UI", INPUT THIS-PROCEDURE). 
   RUN aoverextra_UI IN Arrowbrwproc[25] (INPUT "aselkonover_UI", INPUT THIS-PROCEDURE).
   
    
   
   
   RUN setapplyvc IN framesizeh (INPUT FRAME-MTRL).
   
   IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
      FILL-IN-MARK:LABEL = "E-post".      
   END. 
   
  
   ASSIGN
   FILL-IN-ENRBYTBE:LABEL = Guru.Konstanter:genk
   FILL-IN-ENRBYT:LABEL = Guru.Konstanter:genk
   FILL-IN-ENRDIREKT:LABEL = Guru.Konstanter:genk
   BTN_OK:PRIVATE-DATA = "ejh"
   BTN_AVB:PRIVATE-DATA = "ejh"
   BTN_ALLBACKMTRL:PRIVATE-DATA = "ejh"
   BTN_ALLOVERMTRL:PRIVATE-DATA = "ejh"
   BTN_BACKMTRL:PRIVATE-DATA = "ejh"
   BTN_OVERMTRL:PRIVATE-DATA = "ejh"
   BTN_MTRLBACK:PRIVATE-DATA = "ejh"
   TOG_VHU:CHECKED = TRUE
   BTN_LBYTENR:LABEL = "Byt " + Guru.Konstanter:genk
   BTN_LBORT:LABEL = "Ta bort " + Guru.Konstanter:genk
   BTN_LBORTALLT:LABEL = "Ta bort ALLA " + Guru.Konstanter:genk + "!"
   FILL-IN-IB:LABEL = Guru.Konstanter:grefbefk
   FILL-IN-IBTID:LABEL = Guru.Konstanter:grefbefk
   brwh[14]:HIDDEN = TRUE
   brwh[19]:HIDDEN = TRUE.
   brwh[22]:HIDDEN = TRUE.
   RUN sellistor_UI. 
   RUN btnmtrl_UI.
   RUN raduppk_UI.
   RUN radvaldmk_UI.
   RUN columnstotempdyn_UI IN brwproc[4].
   RUN columnstotempdyn_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[4].
   RUN grundinst_UI.
  
   IF inkopvart NE "AONRM" THEN BTN_ATER:HIDDEN = TRUE.
   c-win:TITLE = "Inköp för :" + berben.
	/*kc
	
	ASSIGN
   BTN_JMFSALDO:NO-FOCUS = TRUE
   BTN_INK:NO-FOCUS = TRUE 
   BTN_BEST:NO-FOCUS = TRUE. 
	
	*/
	
	RUN brwheigt_UI IN brwproc[9] (INPUT 4).
	RUN brwheigt_UI IN brwproc[10] (INPUT 4).
	RUN brwheigt_UI IN brwproc[11] (INPUT 4).
	RUN brwheigt_UI IN brwproc[12] (INPUT 4).
	RUN brwheigt_UI IN brwproc[13] (INPUT 4).
	RUN brwheigt_UI IN brwproc[10] (INPUT 4). 
   
	EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "FAVO"                   
   inextradatatemp.HUVUDCH = Guru.Konstanter:globanv              
   inextradatatemp.HUVUDINT =  ?.   
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   

   
END PROCEDURE.
PROCEDURE LeaveKikontakt_UI :
   IF Guru.Konstanter:globforetag = "GRAN" THEN FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(FILL-IN-KIKONTAKT:SCREEN-VALUE).
END PROCEDURE.
PROCEDURE SaldoGoma_UI :
   
END PROCEDURE.
PROCEDURE buttplace_UI :
   ASSIGN
   Guru.GlobalaVariabler:collefth = ?.
   Guru.GlobalaVariabler:colrighth = BTN_MTRL:HANDLE.      
   RUN buttcolm_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   Guru.GlobalaVariabler:colrighth = BTN_ADD:HANDLE.      
   RUN buttcolm_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   Guru.GlobalaVariabler:colrighth = BTN_BEST:HANDLE.      
   RUN buttcolm_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   
   Guru.GlobalaVariabler:colrighth = BTN_GJORDA:HANDLE.           
   RUN buttcolm_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).  
   Guru.GlobalaVariabler:colrighth = BTN_JMFSALDO:HANDLE.           
   RUN buttcolm_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).      
   Guru.GlobalaVariabler:collefth = BTN_ATER.
   Guru.GlobalaVariabler:colrighth = BTN_SNABB.      
   RUN buttcolh_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
END PROCEDURE.
PROCEDURE skapabrw_UI : 
   DEFINE INPUT  PARAMETER brvnr AS INTEGER NO-UNDO.  
   DEFINE INPUT  PARAMETER tthandlez AS HANDLE NO-UNDO.
   DEFINE VARIABLE brwantal AS INTEGER NO-UNDO.
   DEFINE VARIABLE x-multi AS DECIMAL NO-UNDO.
   DEFINE VARIABLE y-multi AS DECIMAL NO-UNDO. 
   DEFINE VARIABLE radvar AS DECIMAL NO-UNDO.
   DEFINE VARIABLE colvar AS DECIMAL NO-UNDO.
   IF VALID-HANDLE(huvprogh) THEN RUN musw IN huvprogh.
   RUN DYNBRWINIT.P PERSISTENT SET brwproc[brvnr].
   RUN newbrw_UI IN brwproc[brvnr] (INPUT THIS-PROCEDURE).
   RUN brw_UI IN brwproc[brvnr] (OUTPUT brwh[brvnr]).
   /*FRAME-MTRL*/
   IF brvnr = 1 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_UKON", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Välj konstruktioner", INPUT FRAME-BERVAL).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 32, INPUT 10, INPUT 1.5, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      FIND FIRST bblabeltemp USE-INDEX KOD NO-LOCK NO-ERROR.
      RUN fieldinit_UI IN brwproc[brvnr].   
      
      IF AVAILABLE bblabeltemp THEN RUN createfields_UI IN brwproc[brvnr] (INPUT "ID2", INPUT bblabeltemp.ID2, INPUT 5, INPUT "x(256)", INPUT TRUE).
      ELSE RUN createfields_UI IN brwproc[brvnr] (INPUT "ID2", INPUT "ID2", INPUT 5, INPUT "x(256)", INPUT TRUE).
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "FRI3", INPUT "Fri id", INPUT 7, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "UPPLAG", INPUT "Uppl", INPUT 3, INPUT ">>>", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "KOMBINERAD", INPUT "Ko", INPUT 1.5, INPUT ">>", INPUT TRUE).   
      
      IF AVAILABLE bblabeltemp THEN RUN createfields_UI IN brwproc[brvnr] (INPUT "F1", INPUT bblabeltemp.F1, INPUT 10, INPUT "x(256)", INPUT TRUE).
      ELSE                          RUN createfields_UI IN brwproc[brvnr] (INPUT "F1", INPUT "F1", INPUT 10, INPUT "x(256)", INPUT TRUE).
      
                  
      /*
      RUN createfields_UI IN brwproc[brvnr] (INPUT "F2", INPUT bblabeltemp.F2, INPUT 10, INPUT "x(256)", INPUT TRUE).      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BERORDNR", INPUT "ORD", INPUT 3, INPUT ">>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "NUM", INPUT "NUM", INPUT 3, INPUT ">>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BERORDNR", INPUT "ORD", INPUT 3, INPUT ">>9", INPUT TRUE).
      */
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "vcbrwukon_UI", INPUT THIS-PROCEDURE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).                      
   END.  
   ELSE IF brvnr = 2 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KON", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Valda konstruktioner", INPUT FRAME-BERVAL).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 27, INPUT 10, INPUT 37.8, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
                                      
      IF AVAILABLE bblabeltemp THEN   RUN createfields_UI IN brwproc[brvnr] (INPUT "ID2", INPUT bblabeltemp.ID2, INPUT 5, INPUT "x(256)", INPUT TRUE).
      ELSE RUN createfields_UI IN brwproc[brvnr] (INPUT "ID2", INPUT "ID2", INPUT 5, INPUT "x(256)", INPUT TRUE).
                
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "FRI3", INPUT "Fri id", INPUT 7, INPUT "x(256)", INPUT TRUE).
      IF AVAILABLE bblabeltemp THEN RUN createfields_UI IN brwproc[brvnr] (INPUT "ID2", INPUT bblabeltemp.F1, INPUT 5, INPUT "x(256)", INPUT TRUE).
      ELSE RUN createfields_UI IN brwproc[brvnr] (INPUT "F1", INPUT "F1", INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ANMARK", INPUT "ANM", INPUT 10, INPUT "x(256)", INPUT TRUE).     
           /*          
      RUN createfields_UI IN brwproc[brvnr] (INPUT "F2", INPUT bblabeltemp.F2, INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "UPPLAG", INPUT "Upplag", INPUT 4, INPUT ">>9", INPUT TRUE).      
      */     
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "vcbrwkon_UI", INPUT THIS-PROCEDURE).
      
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).    
         
   END.  
   ELSE IF brvnr = 3 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KONMTRL", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Vald materiel", INPUT FRAME-BERVAL).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 55, INPUT 10, INPUT 68.6, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].    
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 6.5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 3.5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 5, INPUT ">>>>>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 4, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "MTRLTEXT", INPUT "Mtrl text", INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TILL", INPUT "Till", INPUT 4, INPUT "x(256)", INPUT TRUE).
      /*
      RUN createfields_UI IN brwproc[brvnr] (INPUT "PRISINK", INPUT "Pris", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      */
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "kmtrlentry_UI", INPUT THIS-PROCEDURE).            
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispkonmtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).
               
   END.  
   ELSE IF brvnr = 4 THEN DO:
       
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_SUMMTRL", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Vald materiel", INPUT FRAME-MTRL).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      radvar = 5.
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 100, INPUT 14.5, INPUT 2.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 25, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 4, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
         RUN createfields_UI IN brwproc[brvnr] (INPUT "PRISINK", INPUT "Pris", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      END.
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 4, INPUT "x(256)", INPUT TRUE).
      
      
     /*
      RUN VisibleField_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT FALSE).
       */                                                                 
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ANTALILAGER", INPUT "Lagersaldo", INPUT 10, INPUT "->>>>>9", INPUT TRUE).
      RUN VisibleField_UI IN brwproc[brvnr] (INPUT "ANTALILAGER", INPUT FALSE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SVAR", INPUT "Anm", INPUT 14, INPUT "x(256)", INPUT TRUE).
      RUN VisibleField_UI IN brwproc[brvnr] (INPUT "SVAR", INPUT FALSE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SVARMTRL", INPUT "EgenPrislista", INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN VisibleField_UI IN brwproc[brvnr] (INPUT "SVARMTRL", INPUT FALSE).
      /*kalmar depåändring abc*/
      /*SNATVISNING*/
      IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "UMEA" OR Guru.Konstanter:globforetag = "gkal" OR Guru.Konstanter:globforetag = "KRAF"  OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
         /*snatdepå*/
         RUN createfields_UI IN brwproc[brvnr] (INPUT "DEPASALDO", INPUT "Dep.saldo", INPUT 20, INPUT "->>>>>>9", INPUT TRUE).                
      END.
      ELSE IF Guru.Konstanter:globforetag = "SNAT"  THEN DO:
         /*snatdepå*/
         IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
            RUN createfields_UI IN brwproc[brvnr] (INPUT "DEPASALDO", INPUT "Dep.saldo", INPUT 20, INPUT "->>>>>>9", INPUT TRUE).
         END.                   
      END.
      ELSE EMPTY TEMP-TABLE depa_mtrl NO-ERROR.
      RUN createfields_UI IN brwproc[brvnr] (INPUT "MTRLTEXT", INPUT "Mtrl text", INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TILL", INPUT "Till", INPUT 4, INPUT "x(256)", INPUT TRUE).
      
       
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "smtrlentry_UI", INPUT THIS-PROCEDURE).      
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispsummtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).  
      RUN settitlenum_UI IN brwproc[brvnr] (INPUT TRUE).
      RUN setsortvar_UI  IN brwproc[brvnr] (INPUT " BY LEVKODINK").      
      IF Guru.GlobalaVariabler:GuruDepa = TRUE  THEN DO: 
         RUN addmenuitemDyn_UI IN brwproc[brvnr] (INPUT "Visa trummor",INPUT "vistrum_UI").
      END.      
         
   END.
   IF brvnr = 5 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_UPP", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Välj upplag", INPUT FRAME-BERVAL).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 32, INPUT 10, INPUT 1.5, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "UPPLAG", INPUT "Upplag", INPUT 4, INPUT ">>>", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ADRESS", INPUT "Adress", INPUT 40, INPUT "x(256)", INPUT TRUE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).  
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "vcbrwupp_UI", INPUT THIS-PROCEDURE).                      
   END.
   ELSE IF brvnr = 6 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_BORTMTRL", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Vald materiel", INPUT FRAME-MTRL).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 55, INPUT 10, INPUT 68.6, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].  
                       
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 6.5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 3.5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 5, INPUT ">>>>>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 10, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 4, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TILL", INPUT "Till", INPUT 4, INPUT "x(256)", INPUT TRUE).
      /*
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "kmtrlentry_UI", INPUT THIS-PROCEDURE).
      */ 
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispbortmtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).     
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.
   /*FRAME-GRANSKA*/  
   ELSE IF brvnr = 7 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_SUMLEV", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Beställningar", INPUT FRAME-GRANSKA).     
      brwh[brvnr]:PRIVATE-DATA = "ejh".     
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 50, INPUT 5.5, INPUT 1.5, INPUT 1, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SKICKATSTATUS", INPUT "Staus", INPUT 4, INPUT "x(256)", INPUT TRUE).           
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "visalevmtrl_UI", INPUT THIS-PROCEDURE).
         
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.  
   ELSE IF brvnr = 8 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_LEVMTRL", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Materiel per leverantör", INPUT FRAME-GRANSKA).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                          bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 100, INPUT 18.5, INPUT 1.5, INPUT 8, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 35, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TILL", INPUT "Till", INPUT 4, INPUT "x(256)", INPUT TRUE).          
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdisplevmtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.   
   /*FRAME-ADRESSER*/
   ELSE IF brvnr = 9 THEN DO:
      
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_LEVADRESS", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Beställningar", INPUT FRAME-ADRESSER).
      /*brwh[brvnr]:PRIVATE-DATA = "ejh".*/
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      brwh[9]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT 1, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
     
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SKICKATSTATUS", INPUT "Staus", INPUT 4, INPUT "x(256)", INPUT TRUE).
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "visaadress_UI", INPUT THIS-PROCEDURE).
        
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).
      
                
   END.
   ELSE IF brvnr = 10 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_TIDIGARE", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Tidigare lev.adresser (Dubbelklick för val)", INPUT FRAME-ADRESSER).
    /*
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      */
      brwh[10]:SCROLLBAR-VERTICAL = FALSE.
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
            radvar = 5. 
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ORDERNUMMER", INPUT "Best nr", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BESTDATUM", INPUT "Beställningsdatum", INPUT 8, INPUT "99/99/99", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVADRESS", INPUT "Leverans Adress", INPUT 12, INPUT "x(256)", INPUT TRUE).
      /*     
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 12, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SKICKATSTATUS", INPUT "Staus", INPUT 4, INPUT "x(256)", INPUT TRUE).           
        */    
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.
   ELSE IF brvnr = 11 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_DEPA", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Depåadresser (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      /*
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      */
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[11]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "Dep-Nr", INPUT "Dep-Nr", INPUT 5, INPUT ">>>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "Benamning", INPUT "Depå", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVADRESS", INPUT "Leverans Adress", INPUT 15, INPUT "x(256)", INPUT TRUE).
      /*
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVPNR", INPUT "LevAdress", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVORT", INPUT "LevOrt", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "FAXNR", INPUT "FaxNr", INPUT 15, INPUT "x(256)", INPUT TRUE).
      */    
         
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "depdat_UI", INPUT THIS-PROCEDURE).      
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.
   ELSE IF brvnr = 12 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_LEVKONTAKT", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Leverantörskontakter (Dubbelklick för val)", INPUT FRAME-ADRESSER).
     /*
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      */
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[12]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKONTAKT", INPUT "Kontakt", INPUT 25, INPUT "x(256)", INPUT TRUE). 
     
      RUN setmenudyn_UI IN brwproc[brvnr] (INPUT 1,INPUT "Ny",INPUT "nylevk_UI", INPUT THIS-PROCEDURE).  
      RUN setmenudyn_UI IN brwproc[brvnr] (INPUT 1,INPUT "Ändra",INPUT "andralevk_UI", INPUT THIS-PROCEDURE).
      RUN setmenudyn_UI IN brwproc[brvnr] (INPUT 1,INPUT "Ta bort",INPUT "bortlevk_UI", INPUT THIS-PROCEDURE).
      RUN tooltip_UI  IN brwproc[brvnr] ("Tryck högra mustangenten för lägga till,ändra eller ta bort poster!").
                                       
   END.  
   ELSE IF brvnr = 13 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_ANM", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Kommentarer (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[13]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "OMRADE", INPUT "Lev-id", INPUT 5, INPUT "x(6)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ANMARK", INPUT "Kommentarer", INPUT 15, INPUT "x(256)", INPUT TRUE).                                     
   END.  
   ELSE IF brvnr = 14 THEN DO:      
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_VALPERS", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Välj Personal (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*    
                                       bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[14]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 40, INPUT 15, INPUT 80, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "PERSONALKOD", INPUT "Enhet/!Sign", INPUT 5, INPUT "x(10)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "FORNAMN", INPUT "Förnamn", INPUT 6, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "EFTERNAMN", INPUT "Efternamn", INPUT 15, INPUT "x(256)", INPUT TRUE).
      IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
         IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
            RUN createfields_UI IN brwproc[brvnr] (INPUT "ANSTNR", INPUT "IFS-id", INPUT 15, INPUT "x(256)", INPUT TRUE).
         END.   
      END.
      RUN leaveextra_UI IN brwproc[brvnr] (INPUT "leavebrwpers_UI", INPUT THIS-PROCEDURE).                                      
   END. 
   /*FRAME-LISTOR*/
   ELSE IF brvnr = 15 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_TIDIGAREL", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Tidigare beställningar", INPUT FRAME-LISTOR).    
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 100, INPUT 6, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ORDERNUMMER", INPUT "Best nr", INPUT 12, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BESTDATUM", INPUT "Beställningsdatum", INPUT 11, INPUT "99/99/99", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "KLOCKAN", INPUT "Tid", INPUT 6, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ANVANDARE", INPUT "Beställt av", INPUT 9, INPUT "x(256)", INPUT TRUE).
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 12, INPUT "x(256)", INPUT TRUE).       
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "SKICKATSTATUS", INPUT "Status", INPUT 12, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "PACKNING", INPUT "Packning", INPUT 12, INPUT "x(256)", INPUT TRUE).
     
       
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANMNUMMER", INPUT "Anmodan", INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKORDERNUMMER", INPUT "Order", INPUT 8, INPUT "x(256)", INPUT TRUE).
     
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "tidigarebest_UI", INPUT THIS-PROCEDURE). 
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispstidigare_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).                                                          
      
   END.    
   ELSE IF brvnr = 16 THEN DO:      
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_MTRL", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Materiellista", INPUT FRAME-LISTOR).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 53, INPUT 12, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 6.5, INPUT "x(10)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 27, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
         RUN createfields_UI IN brwproc[brvnr] (INPUT "NPRIS", INPUT "Pris", INPUT 9, INPUT ">>>>99.99", INPUT TRUE). 
      END.
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispsokmtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).                                                          
   END. 
   ELSE IF brvnr = 17 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_BESLEVMTRL", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Materiel per leverantör", INPUT FRAME-LISTOR).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                          bredd     höjd     kol      rad*/
      radvar = 5.
      colvar = 5. 
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 51, INPUT 8, INPUT colvar, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 27, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 6, INPUT ">>>>>9", INPUT TRUE).   
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispbestmtrl_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).
                  
   END.  
    /*FRAME-ADRESSER*/
   ELSE IF brvnr = 18 THEN DO:
      /*
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KOPILEVADRESS", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Favorit/Senaste leveransadress (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      */
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KOPILEVADRESS", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "", INPUT FRAME-ADRESSER).
      /*brwh[brvnr]:PRIVATE-DATA = "ejh".*/
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 5, INPUT 1.5, INPUT 1, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVADRESS", INPUT "Leverans Adress", INPUT 15, INPUT "x(256)", INPUT TRUE).                            
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).    
      RUN setmenudyn_UI IN brwproc[brvnr] (INPUT 1,INPUT "Ta bort post",INPUT "favoadressbort_UI", INPUT THIS-PROCEDURE).
      RUN tooltip_UI  IN brwproc[brvnr] ("Tryck högra mustangenten för att ta bort poster!").      
   END.
   ELSE IF brvnr = 19 THEN DO:      
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KUNDREF", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Välj Din kunds referens (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[19]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 40, INPUT 8, INPUT 80, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "NAMN", INPUT "Namn", INPUT 45, INPUT "x(256)", INPUT TRUE).
      RUN leaveextra_UI IN brwproc[brvnr] (INPUT "leavebrwpers_UI", INPUT THIS-PROCEDURE).                                      
   END.
   /*FRAME-bytenr*/
   ELSE IF brvnr = 20 THEN DO:
           
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_MTRLBE", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Materiellista", INPUT FRAME-BYTENR).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 53, INPUT 12, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 6.5, INPUT "x(10)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 27, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      /*
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).
      */
      IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
         RUN createfields_UI IN brwproc[brvnr] (INPUT "NPRIS", INPUT "Pris", INPUT 9, INPUT ">>>>99.99", INPUT TRUE). 
      END.
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispsokmtrlbe_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).                                                          
   END. 
   ELSE IF brvnr = 21 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_BESLEVMTRLBE", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Materiel per leverantör", INPUT FRAME-BYTENR).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                          bredd     höjd     kol      rad*/
      radvar = 5.
      colvar = 5. 

      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 70, INPUT 8, INPUT colvar, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 8, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 27, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      /*INKANTAL var inkommenterat jag la tillbaka det på efterfrågan 20140605 lena*/
      RUN createfields_UI IN brwproc[brvnr] (INPUT "INKANTAL", INPUT "Antal", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
         RUN createfields_UI IN brwproc[brvnr] (INPUT "PRISINK", INPUT "Pris", INPUT 6, INPUT ">>>>>9", INPUT TRUE).
      END.
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVNAMN", INPUT "Leverantör", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKODINK", INPUT "Lev-id", INPUT 5, INPUT "x(256)", INPUT TRUE).   
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispbestmtrlbe_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).
                  
   END. 
   ELSE IF brvnr = 22 THEN DO:      
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_EXTERNAVS", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Välj Din referens (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[22]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 40, INPUT 15, INPUT 80, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "MOBIL", INPUT "Mobil", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "NAMN", INPUT "Namn", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "EPOST", INPUT "E-post", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "TELEFON", INPUT "Telefon", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN leaveextra_UI IN brwproc[brvnr] (INPUT "leavebrwpers_UI", INPUT THIS-PROCEDURE). 
                                          
   END.
    
   ELSE IF brvnr = 23 THEN DO:
      /*
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_UPPLAG", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Upplagsadresser (Dubbelklick för val)", INPUT FRAME-ADRESSER).
      */
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_UPPLAG", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "", INPUT FRAME-ADRESSER).
      
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      brwh[23]:SCROLLBAR-VERTICAL = FALSE.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 45, INPUT 10, INPUT 1.5, INPUT radvar, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].
      RUN createfields_UI IN brwproc[brvnr] (INPUT "UPPLAG", INPUT "Upplag", INPUT 5, INPUT ">>>9", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "Adress", INPUT "Adress", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "POSTNR", INPUT "Postnr", INPUT 5, INPUT "xxx xx", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ORT", INPUT "Ort", INPUT 20, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "XKORDCH", INPUT "X", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "YKORDCH", INPUT "Y", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).            
   END.
   ELSE IF brvnr = 24 THEN DO:   
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_MTRLD", INPUT 124, INPUT 10, INPUT TRUE, INPUT TRUE, INPUT "Materiellista", INPUT FRAME-INKDIREKT).
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      radvar = 5.
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 27, INPUT 5, INPUT 37.8, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].           
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENR", INPUT Guru.Konstanter:genk, INPUT 10, INPUT "x(10)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 40, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "ENHET", INPUT "Enhet", INPUT 5, INPUT "x(256)", INPUT TRUE).
      RUN createfields_UI IN brwproc[brvnr] (INPUT "LEVKOD", INPUT "Lev", INPUT 5, INPUT "x(256)", INPUT TRUE).      
      IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
         RUN createfields_UI IN brwproc[brvnr] (INPUT "NPRIS", INPUT "Pris", INPUT 9, INPUT ">>>>99.99", INPUT TRUE). 
      END.
      RUN dynprogextra IN brwproc[brvnr] (INPUT "rowdispsokmtrlD_UI",INPUT THIS-PROCEDURE).
      RUN rowdispextrakor IN  brwproc[brvnr] (INPUT TRUE).                                                          
   END. 
   
   ELSE IF brvnr = 25 THEN DO:
      RUN brwegenskap_UI IN brwproc[brvnr] (INPUT tthandlez,INPUT "BRW_KONVAL", INPUT 124, INPUT 10, INPUT FALSE, INPUT TRUE, INPUT "Direktinköp Materiellistor", INPUT FRAME-INKDIREKT).
      brwh[brvnr]:PRIVATE-DATA = "ejh".
      RUN getsizf_UI IN framesizeh (OUTPUT x-multi, OUTPUT y-multi).
      /*                                     bredd     höjd     kol      rad*/
      RUN brwstorlek_UI IN brwproc[brvnr](INPUT 20, INPUT 6, INPUT 1, INPUT 1.9, INPUT x-multi, INPUT y-multi).
      RUN fieldinit_UI IN brwproc[brvnr].    
      
      RUN createfields_UI IN brwproc[brvnr] (INPUT "BENAMNING", INPUT "Benämning", INPUT 15, INPUT "x(256)", INPUT TRUE).
      RUN vcextra_UI IN brwproc[brvnr] (INPUT "mtrlistadirekt_UI", INPUT THIS-PROCEDURE).            
      
      RUN brwsetupstop_UI IN brwproc[brvnr] (INPUT 1).
               
   END.
   
   RUN fieldslut_UI IN brwproc[brvnr].
   IF brvnr = 13 THEN RUN cellabel_UI IN brwproc[brvnr] (INPUT "OMRADE", INPUT "Lev-id"). 
  
   IF VALID-HANDLE(huvprogh) THEN  RUN musa IN huvprogh.
END PROCEDURE.

PROCEDURE infoes_UI :
   DEFINE INPUT  PARAMETER valenr AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER brwname AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER dynbrwph AS HANDLE NO-UNDO.  
   DEFINE VARIABLE levnamnvar AS CHARACTER NO-UNDO.
   
   RUN cellvalue_UI IN dynbrwph (INPUT "LEVNAMN", OUTPUT levnamnvar).
   IF levnamnvar = ? OR levnamnvar = "" THEN DO:
      
      IF brwname = "BRW_MTRL" OR brwname = "BRW_BESLEVMTRL" THEN RUN cellvalue_UI IN brwproc[15] (INPUT "LEVNAMN", OUTPUT levnamnvar).
      IF brwname = "BRW_MTRLBE" THEN RUN cellvalue_UI IN brwproc[21] (INPUT "LEVNAMN", OUTPUT levnamnvar). 
   END.   
   {LEVLANK.I}       
END PROCEDURE.
PROCEDURE fixastorlek_UI :
  
   RUN buttplace_UI.
      
   brwh[9]:ROW = 1.   
   brwh[10]:ROW = brwh[9]:ROW + brwh[9]:HEIGHT + 0.1. 
   IF brwh[10]:HIDDEN = FALSE THEN DO:
      brwh[11]:ROW = brwh[10]:ROW + brwh[10]:HEIGHT + 0.1.
      brwh[11]:HEIGHT = brwh[10]:HEIGHT.
   END.   
   ELSE DO:
      brwh[11]:ROW = brwh[9]:ROW + brwh[9]:HEIGHT + 0.1.
      brwh[11]:HEIGHT = brwh[10]:HEIGHT * 2.
   END.   
   RAD_ADRESS:ROW = brwh[11]:ROW + brwh[11]:HEIGHT + 0.1.
   brwh[18]:ROW = RAD_ADRESS:ROW + RAD_ADRESS:HEIGHT + 0.1.
  
   RAD_ADRESS:HEIGHT = 0.5.
   brwh[23]:ROW = brwh[18]:ROW. 
   brwh[23]:HEIGHT = brwh[18]:HEIGHT.
   
   brwh[12]:ROW = brwh[18]:ROW + brwh[18]:HEIGHT + 0.1.
   
   ASSIGN 
   BTN_ANDRALEVK:ROW = brwh[12]:ROW + brwh[12]:HEIGHT + 0.1
   BTN_BORTLEVK:ROW = brwh[12]:ROW + brwh[12]:HEIGHT + 0.1
   BTN_NYLEVK:ROW = brwh[12]:ROW + brwh[12]:HEIGHT + 0.1.  
   IF BTN_NYLEVK:HIDDEN = FALSE THEN brwh[13]:ROW = BTN_NYLEVK:ROW + BTN_NYLEVK:HEIGHT + 0.1.
   ELSE brwh[13]:ROW = brwh[12]:ROW + brwh[12]:HEIGHT + 0.1.
   brwh[14]:ROW = brwh[10]:ROW.
   brwh[22]:ROW = brwh[10]:ROW.  
   brwh[19]:ROW = brwh[18]:ROW. 
   brwh[15]:ROW = SEL_LISTOR:ROW.
   brwh[15]:COLUMNS = SEL_LISTOR:COLUMNS + SEL_LISTOR:WIDTH + 1.
   brwh[16]:ROW = brwh[15]:ROW + brwh[15]:HEIGHT + 0.5.
   brwh[17]:ROW = brwh[16]:ROW.
   brwh[17]:COLUMNS = brwh[16]:COLUMNS + brwh[16]:WIDTH + 1. 
   brwh[17]:HEIGHT = brwh[16]:HEIGHT.
   
   brwh[21]:ROW = brwh[20]:ROW.
   brwh[21]:COLUMNS = brwh[20]:COLUMNS + brwh[20]:WIDTH + 1. 
   brwh[21]:HEIGHT = brwh[20]:HEIGHT.
   FRAME-TIDADRESSER:ROW = brwh[16]:ROW.
   RAD_PROJ:ROW = FILL-IN-BESTNR:ROW.
   RAD_PROJ:COLUMNS = FILL-IN-BESTNR:COLUMNS + FILL-IN-BESTNR:WIDTH + 1.
   
   
   
   RUN PlaceraKnapp_UI.
   Guru.GlobalaVariabler:StartRadForKnappar = BTN_ATERMTRL:ROW. 
   
   Guru.Konstanter:PlaceraKnapparLodratt(CMB_DEPVAL).               
 
   Guru.GlobalaVariabler:StartRadForKnappar = FILL-IN-BYTLEV:ROW.
   Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-BYTLEV). 
   Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-BYTLEV-2).
   Guru.Konstanter:PlaceraKnapparLodratt(CMB_LEVTILL).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_BYTLEV).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_INKANTAL).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_MTRLTABORT).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_MTRLENDASTMARK).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_ORGENR).
   
   RUN editlineorg_UI.
  
   
  /*
   BTN_ATERMTRL:ROW = brwh[4]:ROW.
   ASSIGN 
   FRAME-BERVAL:HEIGHT = BTN_ATERMTRL:ROW - 1
   FRAME-BERVAL:WIDTH = FRAME-MTRL:WIDTH - 5.
   */
   
   FRAME-BERVAL:WIDTH = FRAME-MTRL:WIDTH - 5.
   FRAME-BERVAL:HEIGHT = brwh[1]:ROW  + brwh[1]:HEIGHT.  
   ASSIGN
   FRAME-MTRLVAL:ROW = FRAME-BERVAL:ROW 
   FRAME-MTRLVAL:HEIGHT = FRAME-BERVAL:HEIGHT
   FRAME-MTRLVAL:WIDTH = FRAME-BERVAL:WIDTH.
   
   BTN_ATERMTRL:ROW = FRAME-BERVAL:HEIGHT + 1.
   brwh[4]:ROW = BTN_ATERMTRL:ROW.
   
   /*
   brwh[4]:ROW = brwh[1]:ROW + FRAME-BERVAL:HEIGHT + 0.5.
   */
   brwh[4]:HEIGHT = FRAME-MTRL:HEIGHT - (brwh[4]:ROW).
   brwh[4]:WIDTH =  CMB_LEVTILL:COLUMN  - (brwh[4]:COLUMN + 2). 
   BTN_ATERMTRL:ROW = brwh[4]:ROW.
   /*DIREKT*/
     
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
      ASSIGN 
      FRAME-BERVAL:HIDDEN = TRUE
      FRAME-INKDIREKT:HIDDEN = FALSE.
   END.
   ELSE DO:
      ASSIGN
      FRAME-BERVAL:HIDDEN = FALSE 
      FRAME-INKDIREKT:HIDDEN = TRUE.
   END.      
   ASSIGN
   FRAME-INKDIREKT:ROW = FRAME-BERVAL:ROW
   FRAME-INKDIREKT:HEIGHT = FRAME-BERVAL:HEIGHT
   FRAME-INKDIREKT:WIDTH = FRAME-BERVAL:WIDTH. 
    
   ASSIGN 
   BTN_OVERMTRLDIREKT:ROW = brwh[24]:ROW + 2
   brwh[24]:ROW = 1
   brwh[25]:ROW = brwh[24]:ROW
   
   CMB_LEVDIREKT:ROW = brwh[25]:ROW +  brwh[25]:HEIGHT-CHARS + 0.2
   RECT-SOKDIREKT:ROW = CMB_LEVDIREKT:ROW + 1 
   FILL-IN-ENRDIREKT:ROW = RECT-SOKDIREKT:ROW  + 0.2
   IMAGE-SOKDIREKT:ROW = FILL-IN-ENRDIREKT:ROW 
   FILL-IN-BENDIREKT:ROW = FILL-IN-ENRDIREKT:ROW + 0.8
   RAD_SOKDIREKT:ROW = FILL-IN-BENDIREKT:ROW + 0.8.
   ASSIGN 
   FILL-IN-ENRDIREKT:HEIGHT = 0.8.
   CMB_LEVDIREKT:HEIGHT = FILL-IN-ENRDIREKT:HEIGHT.
   FILL-IN-BENDIREKT:HEIGHT = FILL-IN-ENRDIREKT:HEIGHT.
   
   ASSIGN 
   brwh[25]:COLUMNS = 2
   CMB_LEVDIREKT:COLUMNS = brwh[25]:COLUMNS + 10
   FILL-IN-ENRDIREKT:COLUMNS = CMB_LEVDIREKT:COLUMNS + 1
   FILL-IN-BENDIREKT:COLUMNS = FILL-IN-ENRDIREKT:COLUMNS
   RAD_SOKDIREKT:WIDTH = brwh[2]:WIDTH - 5
  
   RECT-SOKDIREKT:COLUMNS = brwh[25]:COLUMNS
   RECT-SOKDIREKT:WIDTH = brwh[24]:WIDTH
   RECT-SOKDIREKT:HEIGHT = 3
   IMAGE-SOKDIREKT:COLUMNS = RECT-SOKDIREKT:COLUMNS + 0.1
   RAD_SOKDIREKT:COLUMNS = IMAGE-SOKDIREKT:COLUMNS + 0.1.
   
   ASSIGN
   brwh[24]:COLUMNS = RECT-SOKDIREKT:COLUMNS + RECT-SOKDIREKT:WIDTH + 1.
   IF FRAME-INKDIREKT:HEIGHT - 1 > 4 THEN brwh[24]:HEIGHT = FRAME-INKDIREKT:HEIGHT - 1.
   brwh[24]:WIDTH = FRAME-INKDIREKT:WIDTH - (brwh[24]:COLUMNS + 10). 
   BTN_OVERMTRLDIREKT:COLUMNS = FRAME-INKDIREKT:WIDTH - 5.
   RUN WIDGETDEFVERSION.P (INPUT 3, INPUT CMB_LEVDIREKT).
   RUN WIDGETDEFVERSION.P (INPUT 3, INPUT FILL-IN-ENRDIREKT).
   RUN WIDGETDEFVERSION.P (INPUT 3, INPUT FILL-IN-BENDIREKT).
    /*DIREKT*/
   FRAME-ALMAN:ROW = FILL-IN-DEPLPNR:ROW.
   FRAME-ALMAN:COLUMNS = FILL-IN-DEPLEVADR:COLUMNS.
   FRAME-ALMAN:HEIGHT = 17.
   FRAME-ALMAN:WIDTH = 47.
      
END PROCEDURE.
PROCEDURE PlaceraKnapp_UI :
   Guru.GlobalaVariabler:StartKolumnForKnappar = DEFAULT-FRAME:WIDTH-CHARS.  
   Guru.Konstanter:PlaceraKnapparVagrattFranHoger(BTN_OK).
   Guru.Konstanter:PlaceraKnapparVagrattFranHoger(BTN_SNABB).
   Guru.GlobalaVariabler:StartRadForKnappar = BTN_OK:ROW.
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_OK).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_AVB).
   BTN_AVB:COLUMN = BTN_OK:COLUMN.
   Guru.GlobalaVariabler:StartKolumnForKnappar = FRAME-ALMAN:WIDTH-CHARS.  
   Guru.Konstanter:PlaceraKnapparVagrattFranHoger(BTN_KLAR-alm).
   Guru.Konstanter:PlaceraKnapparVagrattFranHoger(BTN_AVB-alm).
   RUN PlaceraFillAdress_UI.
END PROCEDURE.

PROCEDURE PlaceraFillAdress_UI :
   
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      Guru.GlobalaVariabler:StartRadForKnappar = FILL-IN-ALTFOR:ROW.  
      Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-ALTFOR).
      Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-DEPLEVADR).
   END.    
  
   Guru.GlobalaVariabler:StartRadForKnappar = FILL-IN-DEPKUNDNRTID:ROW.
   Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-DEPKUNDNRTID).
   Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-DEPFORTID).
   Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-ALTFORTID).
   Guru.GlobalaVariabler:StartRadForKnappar = brwh[9]:ROW.
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[9]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[10]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[11]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[12]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[13]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[14]).
   Guru.Konstanter:PlaceraKnapparLodratt(RAD_ADRESS).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[18]).
   Guru.Konstanter:PlaceraKnapparLodratt(brwh[23]).
    
   
END PROCEDURE.

PROCEDURE editlineorg_UI :
   EDIT_LINFO:WIDTH = 5.
   ASSIGN
   EDIT_LINFO:FONT =  Guru.Konstanter:varforetypval[26]
   EDIT_LINFO:READ-ONLY = TRUE
   EDIT_LINFO:HEIGHT = brwh[16]:HEIGHT.
   EDIT_LINFO:ROW = brwh[16]:ROW.  
   EDIT_LINFO:COLUMNS = brwh[17]:COLUMNS + brwh[17]:WIDTH + 1.
   EDIT_LINFO:WIDTH = FRAME-LISTOR:WIDTH - (EDIT_LINFO:COLUMNS + 1).
END PROCEDURE.
PROCEDURE mdeditline_UI :
   IF EDIT_LINFO:ROW = brwh[16]:ROW THEN DO:
      ASSIGN 
      EDIT_LINFO:ROW = brwh[16]:ROW - 1
      EDIT_LINFO:COLUMNS = 30.
      ASSIGN
      EDIT_LINFO:HEIGHT = FRAME-LISTOR:HEIGHT - (EDIT_LINFO:ROW + 1).
      EDIT_LINFO:WIDTH = FRAME-LISTOR:WIDTH - (EDIT_LINFO:COLUMNS + 1).
      EDIT_LINFO:MOVE-TO-TOP().   
   END.
   ELSE RUN editlineorg_UI.   
END PROCEDURE.
PROCEDURE frame_UI :
   DEFINE INPUT  PARAMETER vad AS CHARACTER NO-UNDO.
   IF FRAME-ADRESSER:HIDDEN = FALSE THEN RUN sparaadress_UI.
   RUN grundinst_UI.
   ASSIGN
   FRAME-ADRESSER:HIDDEN = TRUE
   FRAME-GRANSKA:HIDDEN = TRUE
   FRAME-MTRL:HIDDEN = TRUE
   FRAME-BYTENR:HIDDEN = TRUE. 
   FRAME-LISTOR:HIDDEN = TRUE.
   IF vad = "MTRL" THEN DO:
      FRAME-MTRL:HIDDEN = FALSE.
      IF INTEGER(RAD_UPPKONST:SCREEN-VALUE) > 2 THEN RUN btnatermtrl_UI.   
   END.   
   IF vad = "GRAN" THEN FRAME-GRANSKA:HIDDEN = FALSE.
   IF vad = "ADR" THEN FRAME-ADRESSER:HIDDEN = FALSE.
   IF vad = "LIST" THEN FRAME-LISTOR:HIDDEN = FALSE.
END PROCEDURE.

PROCEDURE btnvit_UI :
   DEFINE INPUT PARAMETER btnh AS HANDLE NO-UNDO.
   DEFINE VARIABLE btnlabel AS CHARACTER NO-UNDO.
   IF btnnovit NE ? THEN DO:
      btnlabel = btnnovit:IMAGE.
      btnlabel = REPLACE(btnlabel,"_vit.gif",".gif"). 
      btnnovit:LOAD-IMAGE (btnlabel) NO-ERROR.
   END.
   btnlabel = btnh:IMAGE.
   btnlabel = REPLACE(btnlabel,".gif","_vit.gif"). 
   btnh:LOAD-IMAGE (btnlabel) NO-ERROR.
   btnnovit = btnh.   
END PROCEDURE.

PROCEDURE listvisa_UI :
   DEFINE VARIABLE felmedd AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levidvar1 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levidvar2 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levidvar3 AS CHARACTER NO-UNDO.
   
   IF sellistavar = "Jämför pris" AND Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:
   /*KÖRS EJ*/
      RUN levkoll_UI IN inkberh (INPUT CMB_LEV1:SCREEN-VALUE,OUTPUT felmedd, OUTPUT levidvar1).
      IF felmedd NE "" THEN DO:
         MESSAGE felmedd VIEW-AS ALERT-BOX.
         RETURN.
      END.
      RUN levkoll_UI IN inkberh (INPUT CMB_LEV2:SCREEN-VALUE,OUTPUT felmedd, OUTPUT levidvar2).
      IF felmedd NE "" THEN DO:
         MESSAGE felmedd VIEW-AS ALERT-BOX.
         RETURN.
      END.
      RUN levkoll_UI IN inkberh (INPUT CMB_LEV3:SCREEN-VALUE,OUTPUT felmedd, OUTPUT levidvar3).
      IF felmedd NE "" THEN DO:
         MESSAGE felmedd VIEW-AS ALERT-BOX.
         RETURN.
      END.
      
      cmblev1 = CMB_LEV1:SCREEN-VALUE.
      cmblev2 = CMB_LEV2:SCREEN-VALUE.
      cmblev3 = CMB_LEV3:SCREEN-VALUE.
   
      RUN InkMinneSpar_UI IN inkberh (INPUT Guru.Konstanter:globanv, INPUT cmblev1,INPUT cmblev2,INPUT cmblev3).
      
      IF levidvar1 = levidvar2 THEN levidvar2 = ?.
      IF levidvar1 = levidvar3 THEN levidvar3 = ?.
      IF levidvar2 = levidvar3 THEN levidvar3 = ?.
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
             
      RUN jmpris_UI IN inkberh (INPUT levidvar1,INPUT levidvar2, INPUT levidvar3,
      INPUT RAD_OPT:SCREEN-VALUE,INPUT TOG_VEJT:CHECKED,INPUT TOG_VHU:CHECKED,     
      INPUT TABLE ink_mtrl,OUTPUT TABLE summtrljam,OUTPUT TABLE saknastmp).
      {AVBGOM2.I}      
      
      RUN INKJAM.W (INPUT levidvar1,INPUT levidvar2, INPUT levidvar3,
      INPUT RAD_OPT:SCREEN-VALUE,
      INPUT TOG_VEJT:CHECKED,INPUT TOG_VHU:CHECKED,
      INPUT TABLE summtrljam,INPUT TABLE saknastmp).
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
      EMPTY TEMP-TABLE summtrljam NO-ERROR. 
      EMPTY TEMP-TABLE saknastmp NO-ERROR. 
      {AVBFRAM2.I} 
   END.
   ELSE IF sellistavar = "Visa gjorda beställningar" THEN DO:
      RUN visagamlabest_UI.
   END.      
END PROCEDURE.
PROCEDURE sellistorvc_UI :
   sellistavar = SEL_LISTOR:SCREEN-VALUE.
   RUN sellistor_UI.
END PROCEDURE.
PROCEDURE sellistor_UI :
   ASSIGN
   brwh[15]       :HIDDEN = TRUE
   brwh[16]       :HIDDEN = TRUE
   brwh[17]       :HIDDEN = TRUE
   EDIT_LINFO     :HIDDEN = TRUE
   CMB_LEV1       :HIDDEN = TRUE
   CMB_LEV2       :HIDDEN = TRUE
   CMB_LEV3       :HIDDEN = TRUE
   CMB_LEVBYTENR  :HIDDEN = TRUE
   FILL-IN-ENRBYT :HIDDEN = TRUE
   FILL-IN-BENBYT :HIDDEN = TRUE
   RAD_SOK        :HIDDEN = TRUE
   BTN_LBYTENR    :HIDDEN = TRUE
   BTN_LBORT      :HIDDEN = TRUE
   BTN_LBORTALLT  :HIDDEN = TRUE
   BTN_STATUSKOLL :HIDDEN = TRUE
   BTN_LEHANDEL   :HIDDEN = TRUE
   BTN_LMANBEST  :HIDDEN = TRUE 
   BTN_LVISA      :HIDDEN = TRUE
   RECT-SOK       :HIDDEN = TRUE
   IMAGE-SOK      :HIDDEN = TRUE
   RAD_OPT        :HIDDEN = TRUE
   TOG_VEJT      :HIDDEN = TRUE
   TOG_VHU       :HIDDEN = TRUE. 
   FRAME-TIDADRESSER:HIDDEN = TRUE.  
   IF sellistavar = "Jämför pris" THEN DO:
      TOG_VHU:CHECKED = FALSE .
      ASSIGN
      RAD_OPT        :HIDDEN = FALSE
      CMB_LEV1       :HIDDEN = FALSE
      CMB_LEV2       :HIDDEN = FALSE
      CMB_LEV3       :HIDDEN = FALSE
      BTN_LVISA      :HIDDEN = FALSE
      TOG_VEJT      :HIDDEN = FALSE
      TOG_VHU       :HIDDEN = FALSE.       
   END.   
   ELSE IF sellistavar = "Visa gjorda beställningar" THEN DO:
      /*
      IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "FORS" THEN DO:
         ASSIGN
         brwh[15]       :HIDDEN = FALSE
         brwh[16]       :HIDDEN = FALSE
         brwh[17]       :HIDDEN = FALSE
         EDIT_LINFO     :HIDDEN = FALSE
         CMB_LEVBYTENR  :HIDDEN = FALSE
         FILL-IN-ENRBYT :HIDDEN = FALSE
         FILL-IN-BENBYT :HIDDEN = FALSE
         RAD_SOK        :HIDDEN = FALSE
         BTN_LBYTENR    :HIDDEN = FALSE
         BTN_LBORT      :HIDDEN = FALSE 
         RECT-SOK       :HIDDEN = FALSE
         IMAGE-SOK      :HIDDEN = FALSE.
      END.
      */   
      ASSIGN
         brwh[15]       :HIDDEN = FALSE
         brwh[16]       :HIDDEN = FALSE
         brwh[17]       :HIDDEN = FALSE
         EDIT_LINFO     :HIDDEN = FALSE
         CMB_LEVBYTENR  :HIDDEN = FALSE
         FILL-IN-ENRBYT :HIDDEN = FALSE
         FILL-IN-BENBYT :HIDDEN = FALSE
         RAD_SOK        :HIDDEN = FALSE
         BTN_LBYTENR    :HIDDEN = FALSE
         BTN_LBORT      :HIDDEN = FALSE
         BTN_LBORTALLT  :HIDDEN = FALSE
         BTN_STATUSKOLL :HIDDEN = FALSE  
         RECT-SOK       :HIDDEN = FALSE
         IMAGE-SOK      :HIDDEN = FALSE.
      ASSIGN
      BTN_LEHANDEL   :HIDDEN = FALSE
      BTN_LMANBEST  :HIDDEN = FALSE
      BTN_LVISA      :HIDDEN = FALSE.   
    
   END.
   ELSE IF sellistavar = "Ändra adresser" THEN DO:
      
      brwh[15]       :HIDDEN = FALSE.
      FRAME-TIDADRESSER:HIDDEN = FALSE.
      FRAME-TIDADRESSER:MOVE-TO-TOP().
   END.   
END PROCEDURE.
PROCEDURE btnavb_UI :
   MESSAGE "OBS! Vill du spara dina ändringar?"
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO-CANCEL TITLE "Spara ändringar?" UPDATE svar AS LOGICAL.         
   IF svar THEN DO:
      APPLY "CHOOSE" TO BTN_OK.         
   END.
   ELSE IF NOT svar THEN DO:    
      RUN hndbort_UI.
      RUN inksattslut_UI IN inkberh.
                            
      RUN avsluta_UI IN huvprogh.
   END.                    
   ELSE DO:
      RETURN NO-APPLY.
   END. 
   
   
END PROCEDURE.
PROCEDURE btnater_UI :
   inkopvart = "MAONR".
   RUN btnok_UI.
END PROCEDURE.

PROCEDURE btnok_UI :
   
   /*
   RUN adresskoll_UI.
   */
   RUN fbtnsnabb_UI.
   
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
      FIND FIRST ink_mtrl WHERE ink_mtrl.BESTORDNING = 0 NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN RUN inksatt_UI IN inkberh (INPUT FALSE).
   END.
   ELSE DO:   
      FIND FIRST ink_val NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_val THEN RUN inksatt_UI IN inkberh (INPUT FALSE).
   END.
   RUN hndbort_UI.
   RUN avsluta_UI IN huvprogh.
END PROCEDURE.
PROCEDURE hndbort_UI :
   IF VALID-HANDLE(clobdynh) THEN DELETE PROCEDURE clobdynh.
   IF VALID-HANDLE(dynxmlOE10) THEN DELETE PROCEDURE dynxmlOE10.
   IF VALID-HANDLE(berstolpapph) THEN DELETE PROCEDURE berstolpapph.
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph. 
   edataapph = ?.
   clobdynh = ?.
   dynxmlOE10 = ?.
   berstolpapph = ?.
   
   clobdynh = ?.
   dynxmlOE10 = ?.
   berstolpapph = ?.
   {BORTBRWPROC.I}   
END PROCEDURE.
PROCEDURE grundinst_UI :
   DEBUGGER:SET-BREAK().
   IF Guru.Konstanter:globforetag = "GRAN"  THEN DO:
      FILL-IN-IB:HIDDEN = TRUE.
      FILL-IN-PLKONTAKT:HIDDEN = TRUE.
      FILL-IN-PLMOBIL:HIDDEN = TRUE.
      FILL-IN-IBTID:HIDDEN = TRUE.
      FILL-IN-PLKONTAKTTID:HIDDEN = TRUE.
      FILL-IN-PLMOBILTID:HIDDEN = TRUE.
      FILL-IN-DEPKUNDNRTID:HIDDEN = TRUE.
      FILL-IN-DEPKUNDNR:HIDDEN = TRUE.
      FILL-IN-ALTFOR:HIDDEN = TRUE.
      FILL-IN-ALTFORTID:HIDDEN = TRUE.
      FILL-IN-KIMOBIL:HIDDEN = TRUE.
      FILL-IN-KIMOBILTID:HIDDEN = TRUE.
      FILL-IN-KIEPOST:HIDDEN = TRUE.
      FILL-IN-KIEPOSTTID:HIDDEN = TRUE.
      FILL-IN-MARK:HIDDEN = TRUE.
      FILL-IN-MARKTID:HIDDEN = TRUE.
      FILL-IN-KOM:HIDDEN = TRUE.
      FILL-IN-KOMTID:HIDDEN = TRUE.
      TOG_KAB:HIDDEN = TRUE.
      FILL-IN-AVIS:HIDDEN = TRUE.
      FILL-IN-AVISTID:HIDDEN = TRUE.
      FILL-IN-AVISPERS:HIDDEN = TRUE.
      FILL-IN-AVISPERSTID:HIDDEN = TRUE.
      brwh[11]:HIDDEN = TRUE.
      brwh[12]:HIDDEN = TRUE.
      brwh[13]:HIDDEN = TRUE.
   END.
   ELSE DO:
      ASSIGN 
      FILL-IN-IB:SCREEN-VALUE = ""
      FILL-IN-PLKONTAKT:SCREEN-VALUE = ""
      FILL-IN-PLMOBIL:SCREEN-VALUE = "".
      FILL-IN-IB:HIDDEN  = TRUE.
      FILL-IN-PLKONTAKT:HIDDEN  = TRUE.
      FILL-IN-PLMOBIL:HIDDEN  = TRUE.
      FILL-IN-IBTID:HIDDEN  = TRUE.
      FILL-IN-PLKONTAKTTID:HIDDEN  = TRUE.
      FILL-IN-PLMOBILTID:HIDDEN  = TRUE.
   END.   
END PROCEDURE.
PROCEDURE btnmtrl_UI :
   RUN frame_UI (INPUT "MTRL").
   RUN btnvit_UI (INPUT BTN_MTRL).     
END PROCEDURE.


PROCEDURE btngjorda_UI :
   /*
   SEL_LISTOR:HIDDEN = TRUE.
   */
   SEL_LISTOR:HIDDEN = FALSE.
   SEL_LISTOR:SCREEN-VALUE = "Visa gjorda beställningar".
   sellistavar = SEL_LISTOR:SCREEN-VALUE .
   RUN sellistor_UI. 
  
   RUN frame_UI (INPUT "LIST").   
  /*
   SEL_LISTOR:SCREEN-VALUE = ?.
   sellistavar = "Visa gjorda beställningar".
   RUN sellistor_UI.
   */
   
   RUN btnvit_UI (INPUT BTN_GJORDA). 
    APPLY "VALUE-CHANGED" TO brwh[15].   
END PROCEDURE.
PROCEDURE inkbest_UI :
   DEFINE VARIABLE sparlevid AS CHARACTER NO-UNDO.
   RUN btnvit_UI (INPUT BTN_BEST).
   
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.
   IF AVAILABLE inkadresstemp THEN sparlevid = inkadresstemp.LEVKODINK.
   ELSE sparlevid = ?.   
   RUN summeradress_UI.
   IF NOT AVAILABLE inkadresstemp THEN DO:
      MESSAGE "Det finns inga beställningar färdiga att skicka!"
      VIEW-AS ALERT-BOX.
      APPLY "CHOOSE" TO BTN_MTRL.
      RETURN.
   END.
   IF inkaddr = ? THEN DO:
      IF AVAILABLE inkadresstemp THEN inkaddr = ROWID(inkadresstemp).
      FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = inkaddr NO-LOCK NO-ERROR.
   END. 
       
   RUN frame_UI (INPUT "GRAN").
   RUN openbdynspec_UI IN brwproc[7].
   RUN getfirst_UI IN brwproc[7].
   IF sparlevid NE ? THEN DO:
      FIND FIRST inkadresstemp WHERE inkadresstemp.LEVKODINK = sparlevid AND inkadresstemp.AKTIV = TRUE NO-LOCK NO-ERROR.
      IF AVAILABLE inkadresstemp THEN RUN setlastrowid_UI IN brwproc[7] (INPUT ROWID(inkadresstemp)).
   END.   
      
   RUN lastselectdyn_UI IN brwproc[7].
   
END PROCEDURE.
PROCEDURE btnlevbort_UI:
   
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.
     
   antraknare = 1.
   IF brwh[7]:NUM-SELECTED-ROWS = 0 THEN RETURN.
   MESSAGE "Vill Ni ta bort vald materiel för denna levarantör?"    
   VIEW-AS ALERT-BOX  
   QUESTION BUTTONS YES-NO TITLE "Ta bort leverantör!" UPDATE svar AS LOGICAL .         
   IF svar = FALSE THEN DO:
      RETURN.
   END.
   
   DO WHILE antraknare LE brwh[7]:NUM-SELECTED-ROWS:
      RUN fetrowid_UI IN brwproc[7] (INPUT antraknare, OUTPUT brwrowut).
      FIND FIRST inkadresstemp WHERE ROWID(inkadresstemp) = brwrowut NO-LOCK NO-ERROR.
      FOR EACH ink_mtrl WHERE ink_mtrl.LEVKODINK = inkadresstemp.LEVKODINK:
         CREATE bort_mtrl.
         BUFFER-COPY ink_mtrl TO bort_mtrl. 
         DELETE ink_mtrl.
         FIND FIRST ink_mtrlb WHERE ink_mtrlb.AONRAONR = bort_mtrl.AONRAONR AND ink_mtrlb.AONRDELNR = bort_mtrl.AONRDELNR AND 
         ink_mtrlb.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrlb THEN DO:
            FIND FIRST ink_val  WHERE ink_val.AONRAONR = bort_mtrl.AONRAONR AND ink_val.AONRDELNR = bort_mtrl.AONRDELNR AND 
            ink_val.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
            IF AVAILABLE ink_val THEN DO:
               RUN ejtmultibr_UI IN brwproc[2] (INPUT ROWID(ink_val)).
               /* 
               RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(ink_val)).
               RUN lastselectdyn_UI IN brwproc[2].
               */
               APPLY "CHOOSE" TO BTN_BACKMTRL.
            END.               
         END.
      END.                   
      IF inkaddr = ROWID(inkadresstemp) THEN DO:
         FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) NE inkaddr NO-LOCK NO-ERROR.
         IF AVAILABLE inkadresssparb THEN inkaddr = ROWID(inkadresssparb).       
         ELSE inkaddr = ?.
      END.    
      DELETE inkadresstemp.
      IF antraknare = brwh[7]:NUM-SELECTED-ROWS THEN RUN selnextprevrow_UI IN brwproc[7].                                                                     
      antraknare = antraknare + 1.
   END.      
   
   RUN columnstotempdyn_UI IN brwproc[3].
   RUN openbdynspec_UI IN brwproc[3].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[7].
   RUN lastselectdyn_UI IN brwproc[7].      
   RUN summtrl_UI.
END PROCEDURE.
PROCEDURE fbtnsnabb_UI :
   {muswait.i} 
   
   IF FRAME-ADRESSER:HIDDEN = FALSE THEN RUN sparaadress_UI.
   
   RUN spara_UI IN inkberh (INPUT TABLE inkadresstemp,INPUT TABLE ink_mtrl). 
   RUN adressfavspar_UI IN inkberh (INPUT Guru.Konstanter:globanv,INPUT TABLE inkadresskoptemp).
   RUN tidadressspar_UI.
   {musarrow.i}     
END PROCEDURE.
PROCEDURE visabest_UI :
   {AMERICANEUROPEAN.I}
   RUN bestskaptidin_UI (INPUT 1).
   {EUROPEANAMERICAN.I}       
END PROCEDURE.
  
PROCEDURE manbest_UI:
   {AMERICANEUROPEAN.I}
   RUN bestskaptidin_UI (INPUT 2).
   {EUROPEANAMERICAN.I}   
END PROCEDURE.
PROCEDURE lagerSaldo_UI :
   DEFINE VARIABLE queryvar AS CHARACTER NO-UNDO.
   RUN smtrlentry_UI.
  
   RUN lagerSaldo_UI IN brwproc[4]. 
   
   /*TARBORT DE SOM EJ ÄR ÄNDRADE*/
   queryvar = "FOR EACH " + Guru.GlobalaVariabler:jmfPrisEnrTTh:TABLE + " WHERE RETUR = FALSE ". 
   RUN CreateCustomQuery(INPUT Guru.GlobalaVariabler:jmfPrisEnrTTh,INPUT queryvar,OUTPUT qh).   
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-DELETE().
      qH:GET-NEXT().
   END.
   queryvar = "FOR EACH " + Guru.GlobalaVariabler:jmfPrisEnrTTh:TABLE. 
   RUN CreateCustomQuery(INPUT Guru.GlobalaVariabler:jmfPrisEnrTTh,INPUT queryvar,OUTPUT qh).   
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      IF Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("OutputLEVKOD"):BUFFER-VALUE = Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("InputLEVKOD"):BUFFER-VALUE THEN DO:
         Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-DELETE().
      END.   
      qH:GET-NEXT().
   END.
   /*byter lev*/
   Guru.GlobalaVariabler:jmfPrisEnrTTh:FIND-FIRST("WHERE  ",NO-LOCK) NO-ERROR.
   IF Guru.GlobalaVariabler:jmfPrisEnrTTh:AVAILABLE THEN DO:
      MESSAGE "OBS! Vill Ni byta levarantör enligt val?"    
      VIEW-AS ALERT-BOX  
      QUESTION BUTTONS YES-NO 
      UPDATE svar AS LOGICAL .
      IF svar THEN DO:
         queryvar = "FOR EACH " + Guru.GlobalaVariabler:jmfPrisEnrTTh:TABLE.
         RUN CreateCustomQuery(INPUT Guru.GlobalaVariabler:jmfPrisEnrTTh,INPUT queryvar,OUTPUT qh).   
         qH:GET-FIRST().
         DO WHILE qH:QUERY-OFF-END = FALSE:
            RUN dselectfoc_UI IN brwproc[4].   
            /*
            MESSAGE Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("InputLEVKOD"):BUFFER-VALUE 
            Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("OutputLEVKOD"):BUFFER-VALUE
            Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("ENR"):BUFFER-VALUE 
            Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("ANTAL"):BUFFER-VALUE
            Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("RETUR"):BUFFER-VALUE
            VIEW-AS ALERT-BOX.
            */
            FIND FIRST levtemp WHERE levtemp.LEVKOD = Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("OutputLEVKOD"):BUFFER-VALUE NO-LOCK NO-ERROR.
            CMB_LEVTILL:SCREEN-VALUE = levtemp.LEVNAMN.
            
            FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("InputLEVKOD"):BUFFER-VALUE  AND 
            inkbest_mtrl.ENR = Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("ENR"):BUFFER-VALUE  AND
            inkbest_mtrl.INKANTAL = Guru.GlobalaVariabler:jmfPrisEnrTTh:BUFFER-FIELD("ANTAL"):BUFFER-VALUE 
            NO-LOCK NO-ERROR.
            RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
            RUN lastselectdyn_UI IN brwproc[4].
            RUN levbytE_UI (INPUT "").
            qH:GET-NEXT().
         END.
      END.   
   END.
         
   
   

END PROCEDURE.




PROCEDURE KontrollEnrMtrl_UI :
   EMPTY TEMP-TABLE eslagersatatustt NO-ERROR. 
   FOR EACH inkbest_mtrl WHERE NO-LOCK:
      CREATE eslagersatatustt.
      ASSIGN
      eslagersatatustt.LEVKOD = inkbest_mtrl.LEVKODINK
      eslagersatatustt.ENR = inkbest_mtrl.ENR
      eslagersatatustt.UTANEENR = inkbest_mtrl.ENR 
      eslagersatatustt.BENAMNING = inkbest_mtrl.BENAMNING
      eslagersatatustt.ANTAL = inkbest_mtrl.INKANTAL.
      eslagersatatustt.TTRECID = RECID(inkbest_mtrl).
      IF eslagersatatustt.UTANEENR BEGINS "E" THEN eslagersatatustt.UTANEENR = SUBSTRING(eslagersatatustt.UTANEENR,2). 
                                                                    
   END. 
   
   RUN KontrollEnrMtrl_UI IN inkberh (INPUT-OUTPUT TABLE eslagersatatustt).
   
END PROCEDURE.






PROCEDURE elbest_UI :
   {AMERICANEUROPEAN.I}
   RUN bestskaptidin_UI (INPUT 3).
   {EUROPEANAMERICAN.I}
END PROCEDURE.
PROCEDURE btnstatus_UI :
   DEFINE VARIABLE tidink AS INTEGER NO-UNDO.
   brwh[15]:SELECT-FOCUSED-ROW() NO-ERROR.
   IF NOT AVAILABLE tidinkadresstemp THEN DO:
      RETURN NO-APPLY. 
   END.
   tidink = tidinkadresstemp.INKBESTID.
   RUN tidadress_UI IN inkberh (OUTPUT TABLE tidinkadresstemp).
   
   FIND FIRST tidinkadresstemp WHERE tidinkadresstemp.INKBESTID = tidink NO-LOCK NO-ERROR.
   RUN setlastrowid_UI IN brwproc[15] (INPUT ROWID(tidinkadresstemp)).
   RUN openbdynspec_UI IN brwproc[15].
   RUN lastselectdyn_UI IN brwproc[15]. 
   
END PROCEDURE.
PROCEDURE btnbortenralla_UI :
   DEFINE VARIABLE bovar AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   MESSAGE 
   "VARNING! VARNING! VARNING! VARNING! VARNING!" SKIP
   "OBS! Vill du ta bort hela denna beställning?" SKIP
   "Det går ej att ångra detta! Det sparas direkt."
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Ta bort " + Guru.Konstanter:genl UPDATE svar AS LOGICAL.
   IF svar = FALSE THEN RETURN.
   
   FOR EACH tidink_mtrl WHERE NO-LOCK:
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      EMPTY TEMP-TABLE eink_val NO-ERROR. 
      CREATE etidink_mtrl.
      BUFFER-COPY tidink_mtrl TO etidink_mtrl.
     /* etidink_mtrl.ENR = tidink_mtrl.ENRORG.*/ 
      bovar = 0.
      FIND FIRST inkadresstemp WHERE inkadresstemp.LEVKODINK = etidink_mtrl.LEVKODINK AND 
      inkadresstemp.AKTIV = TRUE NO-ERROR.       
      IF AVAILABLE inkadresstemp THEN bovar = inkadresstemp.BESTORDNING.  
      RUN bortenr_UI  IN inkberh (INPUT bovar,INPUT TABLE etidink_mtrl,OUTPUT TABLE eink_val,OUTPUT TABLE ink_mtrl APPEND).
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      FOR EACH eink_val:
         FIND FIRST ink_urdisp WHERE ink_urdisp.NUM = eink_val.NUM NO-LOCK NO-ERROR.
         IF AVAILABLE ink_urdisp THEN DO:
            RUN avmark_UI IN brwproc[1].
            FIND FIRST ink_urdisp WHERE ink_urdisp.NUM = eink_val.NUM NO-LOCK NO-ERROR.
            RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(ink_urdisp)).     
            RUN lastselectdyn_UI IN brwproc[1].
            APPLY "CHOOSE" TO BTN_OVERMTRL.
         END.   
            
         FIND FIRST ink_val WHERE ink_val.NUM = eink_val.NUM NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_val THEN DO:
            CREATE ink_val.
            BUFFER-COPY eink_val TO ink_val.
         END.
         RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(ink_val)).
         
      END.   
      EMPTY TEMP-TABLE eink_val NO-ERROR.
      DELETE tidink_mtrl.  
      RUN openbdynspec_UI IN brwproc[2].
      RUN lastselectdyn_UI IN brwproc[2].
      /*
      APPLY "VALUE-CHANGED" TO brwh[2].
      */
      RUN summtrl_UI.   
      RUN selnextprevrow_UI IN brwproc[17].               
      RUN openbdynspec_UI IN brwproc[17].
      RUN lastselectdyn_UI IN brwproc[17].     
   END.   
END PROCEDURE.
PROCEDURE btnbortenr_UI :
   DEFINE VARIABLE bovar AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   IF brwh[17]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Inget är valt att ta bort!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.      
   RUN selectrowid_UI IN brwproc[17] (OUTPUT brwrow). 
   FIND FIRST tidink_mtrl WHERE ROWID(tidink_mtrl) = brwrow NO-LOCK NO-ERROR.     
   MESSAGE "OBS! Vill du ta bort " tidink_mtrl.ENR "?" SKIP
   "Det går ej att ångra detta! Det sparas direkt."
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Ta bort " + Guru.Konstanter:genl UPDATE svar AS LOGICAL.
   IF svar = TRUE THEN DO:
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      EMPTY TEMP-TABLE eink_val NO-ERROR. 
      CREATE etidink_mtrl.
      BUFFER-COPY tidink_mtrl TO etidink_mtrl.
     /* etidink_mtrl.ENR = tidink_mtrl.ENRORG.*/ 
      bovar = 0.
      FIND FIRST inkadresstemp WHERE inkadresstemp.LEVKODINK = etidink_mtrl.LEVKODINK AND 
      inkadresstemp.AKTIV = TRUE NO-ERROR.       
      IF AVAILABLE inkadresstemp THEN bovar = inkadresstemp.BESTORDNING. 
      RUN bortenr_UI  IN inkberh (INPUT bovar,INPUT TABLE etidink_mtrl,OUTPUT TABLE eink_val,OUTPUT TABLE ink_mtrl APPEND).
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      FOR EACH eink_val:
         FIND FIRST ink_urdisp WHERE ink_urdisp.NUM = eink_val.NUM NO-LOCK NO-ERROR.
         IF AVAILABLE ink_urdisp THEN DO:
            RUN avmark_UI IN brwproc[1].
            FIND FIRST ink_urdisp WHERE ink_urdisp.NUM = eink_val.NUM NO-LOCK NO-ERROR.
            RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(ink_urdisp)).     
            RUN lastselectdyn_UI IN brwproc[1].
            APPLY "CHOOSE" TO BTN_OVERMTRL.
         END.   
            
         FIND FIRST ink_val WHERE ink_val.NUM = eink_val.NUM NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_val THEN DO:
            CREATE ink_val.
            BUFFER-COPY eink_val TO ink_val.
         END.
         RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(ink_val)).
         
      END.   
      EMPTY TEMP-TABLE eink_val NO-ERROR.
      DELETE tidink_mtrl.  
      RUN openbdynspec_UI IN brwproc[2].
      RUN lastselectdyn_UI IN brwproc[2].
      /*
      APPLY "VALUE-CHANGED" TO brwh[2].
      */
      RUN summtrl_UI.   
      RUN selnextprevrow_UI IN brwproc[17].               
      RUN openbdynspec_UI IN brwproc[17].
      RUN lastselectdyn_UI IN brwproc[17].     
   END.
   ELSE RETURN.             
END PROCEDURE. 
PROCEDURE btnbytenr_UI :
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   IF brwh[16]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Inget är valt för att byta till!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.
   IF brwh[17]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Inget är valt för att byta från!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.      
   RUN selectrowid_UI IN brwproc[16] (OUTPUT brwrow). 
   FIND FIRST mtrltemp WHERE ROWID(mtrltemp) = brwrow NO-LOCK NO-ERROR.
   RUN selectrowid_UI IN brwproc[17] (OUTPUT brwrow). 
   FIND FIRST tidink_mtrl WHERE ROWID(tidink_mtrl) = brwrow NO-LOCK NO-ERROR.     
   MESSAGE "OBS! Vill du byta " tidink_mtrl.ENR " mot " mtrltemp.ENR "?" SKIP
   "Det går ej att ångra detta! Det sparas direkt."
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Byta " + Guru.Konstanter:genl UPDATE svar AS LOGICAL.
   IF svar = TRUE THEN DO:
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      ASSIGN
      tidink_mtrl.BENAMNING = mtrltemp.BENAMNING 
      tidink_mtrl.PRISINK = mtrltemp.NPRIS
      tidink_mtrl.ENHET = mtrltemp.ENHET.
      CREATE etidink_mtrl.
      BUFFER-COPY tidink_mtrl TO etidink_mtrl.
      etidink_mtrl.ENRORG = tidink_mtrl.ENR.
      ASSIGN
      tidink_mtrl.ENR = mtrltemp.ENR
      etidink_mtrl.ENR = mtrltemp.ENR.
    
      RUN bytenr_UI IN inkberh (INPUT TABLE etidink_mtrl).
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.      
      RUN setlastrowid_UI IN brwproc[17] (INPUT ROWID(tidink_mtrl)).         
      RUN openbdynspec_UI IN brwproc[17].
      RUN lastselectdyn_UI IN brwproc[17].     
   END.
   ELSE RETURN.            
   
END PROCEDURE.

PROCEDURE btnbytenrbe_UI :
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   IF brwh[20]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Inget är valt för att byta till!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.
   IF brwh[21]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Inget är valt för att byta från!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.      
   RUN selectrowid_UI IN brwproc[20] (OUTPUT brwrow). 
   FIND FIRST mtrltemp WHERE ROWID(mtrltemp) = brwrow NO-LOCK NO-ERROR.
   
   RUN selectrowid_UI IN brwproc[21] (OUTPUT brwrow). 
   FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = brwrow NO-LOCK NO-ERROR.     
   MESSAGE "OBS! Vill du byta " inkbest_mtrl.ENR " mot " mtrltemp.ENR "?" SKIP
   "OBS! Byter på alla konstruktioner!"
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Byta " + Guru.Konstanter:genl UPDATE svar AS LOGICAL.
   IF svar = TRUE THEN DO:
      RUN bytenr_UI.
      /*
      EMPTY TEMP-TABLE etidink_mtrl NO-ERROR.
      ASSIGN
      tidink_mtrl.BENAMNING = mtrltemp.BENAMNING 
      tidink_mtrl.PRISINK = mtrltemp.NPRIS
      tidink_mtrl.ENHET = mtrltemp.ENHET.
      CREATE etidink_mtrl.
      BUFFER-COPY tidink_mtrl TO etidink_mtrl.
      etidink_mtrl.ENRORG = tidink_mtrl.ENR.
      ASSIGN
      tidink_mtrl.ENR = mtrltemp.ENR
      etidink_mtrl.ENR = mtrltemp.ENR.
    
      RUN bytenr_UI IN inkberh (INPUT TABLE etidink_mtrl).
      */
      
           
   END.
   ELSE RETURN.            
   
END PROCEDURE.
PROCEDURE bytenr_UI :
   DEFINE VARIABLE levidvar AS CHARACTER NO-UNDO.
   levidvar = inkbest_mtrl.LEVKODINK.
   FOR EACH ink_mtrl WHERE ink_mtrl.LEVKODINK = inkbest_mtrl.LEVKODINK AND ink_mtrl.ENR = inkbest_mtrl.ENR:
      ASSIGN
      ink_mtrl.BENAMNING = mtrltemp.BENAMNING 
      ink_mtrl.PRISINK = mtrltemp.NPRIS
      ink_mtrl.ENHET = mtrltemp.ENHET
      ink_mtrl.ENR = mtrltemp.ENR.
   END.
   /*RUN dubblev_UI.*/ 
   RUN summtrl_UI.
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/               
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE inkbest_mtrl, OUTPUT TABLE ikmtrltemp APPEND).      
   END.      
   RUN columnstotempdyn_UI IN brwproc[3].   
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = levidvar AND inkbest_mtrl.ENR = mtrltemp.ENR USE-INDEX LEVENR NO-LOCK NO-ERROR.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.
   RUN columnstotempdyn_UI IN brwproc[4].
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = levidvar AND inkbest_mtrl.ENR = mtrltemp.ENR USE-INDEX LEVENR NO-LOCK NO-ERROR.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[21] (INPUT ROWID(inkbest_mtrl)).         
   END.
   RUN openbdynspec_UI IN brwproc[21].
   RUN lastselectdyn_UI IN brwproc[21].
END PROCEDURE. 
PROCEDURE visagamlabest_UI :
   {AMERICANEUROPEAN.I}
   RUN gamlalistor_UI (INPUT 11).
   {EUROPEANAMERICAN.I}
      
END PROCEDURE.
PROCEDURE lmanbest_UI:
   {AMERICANEUROPEAN.I}
   RUN gamlalistor_UI (INPUT 12).
   {EUROPEANAMERICAN.I}
   
END PROCEDURE.
PROCEDURE lelbest_UI :
   {AMERICANEUROPEAN.I}
   RUN gamlalistor_UI (INPUT 13).
   {EUROPEANAMERICAN.I}   
END PROCEDURE.

PROCEDURE gamlalistor_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO.
   IF NOT AVAILABLE tidinkadresstemp THEN DO:
      MESSAGE "Ingen beställning är vald!"
      VIEW-AS ALERT-BOX.
      RETURN. 
   END.
   IF vad = 12 OR vad = 13 THEN DO:
      MESSAGE "VARNING! VARNING! VARNING! VARNING! VARNING!" SKIP
      "OBS! Du skickar en redan en beställd beställning"
      VIEW-AS ALERT-BOX
      QUESTION BUTTONS YES-NO TITLE "Gammal beställning" UPDATE svar AS LOGICAL.         
      IF svar THEN.
      ELSE RETURN.
   END.   
   RUN tidigaremtrl_UI.
   RUN DepVal_UI.
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.INKBESTID = tidinkadresstemp.INKBESTID NO-LOCK NO-ERROR.
   IF NOT AVAILABLE inkbest_mtrl THEN DO:
      FOR EACH tidink_mtrl WHERE tidink_mtrl.INKBESTID = tidinkadresstemp.INKBESTID NO-LOCK:
         CREATE inkbest_mtrl.
         BUFFER-COPY tidink_mtrl TO inkbest_mtrl.
         RUN depmtrl_UI.
      END.
   END. 
   
   RUN setcolsortvar_UI IN brwproc[8] (INPUT "inkbest_mtrl.INKBESTID = " + STRING(tidinkadresstemp.INKBESTID)).
   RUN openbdynspec_UI IN brwproc[8]. 
   RUN bestskaptidin_UI (INPUT vad).
   FOR EACH ink_mtrl WHERE  ink_mtrl.INKBESTID = tidinkadresstemp.INKBESTID:
      DELETE ink_mtrl.
   END. 
   FOR EACH ink_val WHERE  ink_val.INKBESTID = tidinkadresstemp.INKBESTID:
      DELETE ink_val.
   END. 
   FOR EACH inkbest_mtrl WHERE  inkbest_mtrl.INKBESTID = tidinkadresstemp.INKBESTID:
      DELETE inkbest_mtrl.
   END. 
   RUN setcolsortvar_UI IN brwproc[8] (INPUT "").
   RUN openbdynspec_UI IN brwproc[8].
   BUFFER-COPY inkadresssparb TO tidinkadresstemp.  
   RUN tidigarebest_UI.
   RUN openbdynspec_UI IN brwproc[15].
   RUN lastselectdyn_UI IN brwproc[15].    
END PROCEDURE.

PROCEDURE bestklar_UI :
   
   IF kontrollbest = FALSE THEN DO:
      RETURN.
   END. 
   kontrollbest = FALSE. 
   RUN tlage_UI IN inkberh (INPUT inkadresssparb.LEVNAMN).        
   IF Guru.Konstanter:globforetag = "cBORL" THEN RUN sparraindance_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER,INPUT inkadresssparb.AONRAONR,INPUT inkadresssparb.AONRDELNR).
   MESSAGE "Beställning klar!"
   VIEW-AS ALERT-BOX.
   ehandelskap = FALSE.  
END PROCEDURE.       
PROCEDURE ehandelskap_UI :
   visaejpris = FALSE.
   visauppl = FALSE.
   visatoms = TRUE. 
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
      IF  Guru.Konstanter:AppSpringSet[1] = "ONENO" OR Guru.Konstanter:AppSpringSet[1] = "ONENOUTBI" THEN.
      ELSE DO: 
         MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
         VIEW-AS ALERT-BOX.
         RETURN.
      END.
      IF inkadresssparb.IEXTRAINT[1] = 2 THEN RUN bestpaskarmmtrl_UI.
      ELSE RUN bestpaskarmbygg_UI.
      RUN bestOneNordic_UI.
   END.   
   ELSE IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
      MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
      VIEW-AS ALERT-BOX.
      RETURN.
   END.
   
   ELSE IF inkadresssparb.LEVNAMN = "Onninen" OR inkadresssparb.LEVNAMN = "Onninen avrop" THEN DO:
      IF Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "KRIN" OR Guru.Konstanter:globforetag = "cVAST" OR Guru.Konstanter:globforetag = "CGKAL" OR Guru.Konstanter:globforetag = "GRAN" OR 
         Guru.Konstanter:globforetag = "ELPA" THEN DO:
            visaejpris = TRUE.
        
         IF inkadresssparb.IEXTRAINT[1] = 2 THEN RUN bestpaskarmmtrl_UI.
         ELSE RUN bestpaskarmbygg_UI.
         bepost = "".
         RUN hmtkundnrepost_UI IN inkberh (INPUT inkadresssparb.KUNDNR , OUTPUT bepost) .
         RUN bestonninen_UI.
         
         RUN ehandmail_UI.
      END.   
      ELSE DO:
         MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
         VIEW-AS ALERT-BOX.
         RETURN.
      END.   
   END.
   ELSE IF inkadresssparb.LEVNAMN = "Elektroskandia" OR inkadresssparb.LEVNAMN BEGINS "Elektroskandia avrop" THEN DO:      
      
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST" OR  Guru.Konstanter:globforetag = "KRAF" OR Guru.Konstanter:globforetag = "LAPP" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
         IF inkadresssparb.IEXTRAINT[1] = 2 THEN RUN bestpaskarmmtrl_UI.
         ELSE RUN bestpaskarmbygg_UI.
         /*
         RUN bestpaskarmbygg_UI.
         */
         /*VATTENSRM*/
         IF Guru.Konstanter:globforetag = "CVAST" THEN RUN bestGuru_UI.
         ELSE DO:
            IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN RUN bestelektro_UI (INPUT "svallelnat").
            IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST" THEN  RUN bestelektro_UI (INPUT "VATTENFALL").
            IF Guru.Konstanter:globforetag = "KRAF" THEN  RUN bestelektro_UI (INPUT "KRAFT").
            IF Guru.Konstanter:globforetag = "LAPP" THEN RUN bestelektro_UI (INPUT "lapplandguru").
         END.   
      END.   
      ELSE DO:
         MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
         VIEW-AS ALERT-BOX.   
         RETURN. 
      END.   
   END.
   ELSE IF inkadresssparb.LEVNAMN = "Ahlsell" THEN DO:
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:
      END.   
      ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
         RUN kollaha_UI IN inkberh (INPUT Guru.Konstanter:globanv,OUTPUT musz).      
         IF musz = TRUE THEN musz = FALSE.
         ELSE DO:
            MESSAGE "Du är inte behörigt att göra elektronisk beställning för " inkadresssparb.LEVNAMN
            VIEW-AS ALERT-BOX.   
            RETURN. 
         END.
      END.
      ELSE IF Guru.Konstanter:globforetag = "SNAT" THEN DO:
      END.            
      ELSE DO:
         MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
         VIEW-AS ALERT-BOX.   
         RETURN. 
      END.
      IF inkadresssparb.IEXTRAINT[1] = 2 THEN.
      ELSE RUN bestpaskarmbygg_UI.
      RUN bestahlsell_UI.
   END.
   ELSE IF inkadresssparb.LEVNAMN = "Selga"  THEN DO:      
      
      IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
         IF inkadresssparb.IEXTRAINT[1] = 2 THEN RUN bestpaskarmmtrl_UI.
         ELSE RUN bestpaskarmbygg_UI.         
         IF Guru.Konstanter:globforetag = "GKAL" THEN  RUN bestselga_UI.
      END.   
      ELSE DO:
         MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
         VIEW-AS ALERT-BOX.   
         RETURN. 
      END.   
   END.
   ELSE DO:
      MESSAGE "Elektronisk beställning är ej i drift för " inkadresssparb.LEVNAMN
      VIEW-AS ALERT-BOX.   
      RETURN. 
   END.         
   ehandelskap = TRUE.
END PROCEDURE.

PROCEDURE bestelektro_UI :
   DEFINE INPUT  PARAMETER IDSender AS CHARACTER NO-UNDO.
   
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE filnamnsp AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE extraradut AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   
   DEFINE VARIABLE kommandoquery2 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery3 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery11 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery12 AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjid AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
   DEFINE VARIABLE infillong AS LONGCHAR NO-UNDO.
   EMPTY TEMP-TABLE tempnamn NO-ERROR. 
   
   EMPTY TEMP-TABLE ProjectOrder NO-ERROR.
   EMPTY TEMP-TABLE tempheader NO-ERROR.
   EMPTY TEMP-TABLE tempmessage NO-ERROR.
   EMPTY TEMP-TABLE Order NO-ERROR. 
   EMPTY TEMP-TABLE bDeliveryAddress NO-ERROR.  
   EMPTY TEMP-TABLE bForeignDeliveryAddress NO-ERROR.
   EMPTY TEMP-TABLE Buyer NO-ERROR.  
   EMPTY TEMP-TABLE Seller NO-ERROR.  
   EMPTY TEMP-TABLE DeliveryAddress NO-ERROR.
   EMPTY TEMP-TABLE ForeignDeliveryAddress NO-ERROR.  
   EMPTY TEMP-TABLE Passage NO-ERROR.    
   EMPTY TEMP-TABLE BuildingPart NO-ERROR.  
   EMPTY TEMP-TABLE OrderRows NO-ERROR.
   
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   DEFINE VARIABLE hjkom AS CHARACTER NO-UNDO.
   RUN konstskap_UI.
   RUN upplagskap_UI.
   RUN uttabelektro_UI.
      
   CREATE ProjectOrder.
   ASSIGN
   ProjectOrder.ut =   "".
   CREATE tempheader.
   ASSIGN
   tempheader.ut =   "".   
   CREATE tempmessage.
   ASSIGN
   tempmessage.SenderID =  IDSender 
   tempmessage.MessageType = "ORDERS"
   tempmessage.ReceiverId  =  "SESKA"
   tempmessage.MessageDate = STRING(TODAY,"9999-99-99").
   
   hjkom = inkadresssparb.KOMMENTAR + " Kontaktperson inköp:" + STRING(inkadresssparb.IKONTAKT).
   IF STRING(inkadresssparb.ITELE) NE "" THEN hjkom = hjkom +  " Tele:" + STRING(STRING(inkadresssparb.ITELE)).
   IF inkadresssparb.IMOBIL NE "" THEN hjkom = hjkom +  " Mobil:" + STRING(inkadresssparb.IMOBIL).    
   hjkom = hjkom + "Kontaktperson teknik:" + STRING(inkadresssparb.TKONTAKT).
   IF inkadresssparb.TTELE NE "" THEN hjkom = hjkom +  " Tele:" + STRING(inkadresssparb.TTELE).
   IF inkadresssparb.TMOBIL NE "" THEN hjkom = hjkom +  " Mobil:" + STRING(inkadresssparb.TMOBIL).
   CREATE Order.
   ASSIGN
   Order.BuyerOrderNumber    = TRIM(STRING(inkadresssparb.ORDERNUMMER))  
   Order.RegistrationDate    = STRING(TODAY,"9999-99-99") 
   Order.ObjectID            = "GRUNDOBJ"      
   Order.CurrencyCode        = "SEK"         
   Order.DeliveryNoteText    = inkadresssparb.AVISPERS 
   Order.GoodsMarking        = inkadresssparb.MARKERING   
      /*     
   Order.DeliveryTermCode    = ""
   */ 
   Order.DeliveryTermCity    = inkadresssparb.LEVORT
   Order.SplitDelivery       = "N"
   Order.BuyerInvoiceNumber  = ""
   Order.OrderChange         = "N"    
   Order.AKG                 = "".
   
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      Order.BuyerOrderNumber = "".         
   END.
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      Order.OrderText           = "OBS! SPECIFIKA KABELLÄNGDER " + hjkom.      
   END.    
   ELSE DO:
      Order.OrderText           = "OBS! HELA KABELLÄNGDER " + hjkom.
   END.
   IF Order.DeliveryNoteText = "" THEN Order.DeliveryNoteText = STRING(inkadresssparb.TKONTAKT).
   DEFINE VARIABLE cbuyer AS CHARACTER NO-UNDO.
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:
      tempmessage.SenderID = tempmessage.SenderID + "2".
      cbuyer = REPLACE(inkadresssparb.IEXTRACHAR[3],"NORR","").
      cbuyer = REPLACE(cbuyer,"NORR",""). 
      cbuyer = REPLACE(cbuyer,"MELLAN","").
      cbuyer = REPLACE(cbuyer,"VÄST-ÖST","").
      Order.BuyerOrderNumber = TRIM(cbuyer).    
         
   END.      
   
   CREATE buyer. 
   ASSIGN
   buyer.BuyerID      = STRING(inkadresssparb.KUNDNR,"99999")
   buyer.Name         = inkadresssparb.FORETAG
   buyer.Handler      = inkadresssparb.IKONTAKT
   buyer.Phone        = inkadresssparb.ITELE
   buyer.Fax          = inkadresssparb.IFAX.
   ASSIGN
   buyer.MobilePhone  = inkadresssparb.IMOBIL
   buyer.Reference    = TRIM(STRING(inkadresssparb.ORDERNUMMER))
   buyer.eMailAddress = inkadresssparb.IEPOST.
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:
      buyer.Reference = inkadresssparb.IEXTRACHAR[4].       
   END.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      
      IF INDEX(inkadresssparb.ORDERNUMMER,"-") > 1 THEN DO:
         buyer.Reference = TRIM(SUBSTRING(inkadresssparb.ORDERNUMMER,1,INDEX(inkadresssparb.ORDERNUMMER,"-") - 1)).
      END.         
   END.
   
   RUN hmtpben_UI IN inkberh (OUTPUT buyer.ProjectName).
   /* 
   <BuyerOrderNumber>16403202-182</BuyerOrderNumber> BORT
   
   buyer.ProjectName = "Depå beställning".*/ 
 
   CREATE bDeliveryAddress.
   ASSIGN
   bDeliveryAddress.Name       = inkadresssparb.FORETAG
   bDeliveryAddress.Street     = inkadresssparb.LEVADRESS
   bDeliveryAddress.City       = inkadresssparb.LEVORT
   bDeliveryAddress.PostalCode = STRING(REPLACE(inkadresssparb.LEVPNR," ",""),"99999")
   bDeliveryAddress.CountryCode= "SE".

   CREATE bForeignDeliveryAddress.
   ASSIGN
   bForeignDeliveryAddress.Address1   = ""
   bForeignDeliveryAddress.Address2   = ""
   bForeignDeliveryAddress.Address3   = ""
   bForeignDeliveryAddress.Address4   = ""
   bForeignDeliveryAddress.Address5   = ""
   bForeignDeliveryAddress.GateCountryCode  = "".

   
   CREATE seller.
   ASSIGN
   seller.SellerID   = "ELEKTROSKANDIA"
   seller.Name       = "Elektroskandia AB"
   seller.Handler    = inkadresssparb.GKONTAKT
   seller.Phone      = inkadresssparb.GTELE
   seller.Fax        = inkadresssparb.GFAX.
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      RUN bestelektrodep_UI.
   END.
   ELSE IF inkadresssparb.IEXTRAINT[1] = 4 THEN DO :
      RUN bestelektroUpplag_UI.
     
   END.   
   ELSE IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO :
      
      FOR EACH beruppinktemp:
         IF beruppinktemp.UPPLAG = ? THEN NEXT.
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
         ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN NEXT.
         CREATE passage. 
         ASSIGN
         passage.PassageID     = STRING(beruppinktemp.UPPLAG)
         passage.PassageName   = beruppinktemp.Adress.
         IF beruppinktemp.XKORDCH = "" THEN  passage.Infotext      = beruppinktemp.ANMARK.
         ELSE  passage.Infotext      = "X=" + STRING(beruppinktemp.XKORDCH) + " Y=" + STRING(beruppinktemp.YKORDCH) + " " + beruppinktemp.ANMARK.
         
         CREATE DeliveryAddress.
         ASSIGN
         
         DeliveryAddress.PassageID     = STRING(beruppinktemp.UPPLAG)
         DeliveryAddress.Name        = SUBSTRING(beruppinktemp.Adress,1,35)
         DeliveryAddress.Street      = SUBSTRING(beruppinktemp.Adress,35,35)
         DeliveryAddress.City        = beruppinktemp.ORT
         DeliveryAddress.PostalCode  = beruppinktemp.POSTNR
         DeliveryAddress.CountryCode = "".
         CREATE ForeignDeliveryAddress.
         ASSIGN
         ForeignDeliveryAddress.PassageID     = STRING(beruppinktemp.UPPLAG)
         ForeignDeliveryAddress.Address1    = ""
         ForeignDeliveryAddress.Address2    = ""
         ForeignDeliveryAddress.Address3    = ""
         ForeignDeliveryAddress.Address4    = ""
         ForeignDeliveryAddress.Address5    = ""
         ForeignDeliveryAddress.GateCountryCode = "" .            
      END.  
      FIND FIRST ink_mtrl WHERE ink_mtrl.UPPLAG = ? AND ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
      NO-LOCK NO-ERROR.
      IF AVAILABLE ink_mtrl THEN DO:  
         CREATE passage. 
         ASSIGN
         passage.PassageID     = "Ingen"
         passage.PassageName   = "Materiel ej kopplat till upplag"
         passage.Infotext       = "Materiel till depå".
         CREATE DeliveryAddress.
         ASSIGN
         DeliveryAddress.PassageID     = "Ingen"
         DeliveryAddress.Name        = inkadresssparb.FORETAG
         DeliveryAddress.Street      = ""
         DeliveryAddress.City        = ""
         DeliveryAddress.PostalCode  = ""
         DeliveryAddress.CountryCode = "".
         CREATE ForeignDeliveryAddress.
         ASSIGN
         ForeignDeliveryAddress.PassageID   = "Ingen"
         ForeignDeliveryAddress.Address1    = ""
         ForeignDeliveryAddress.Address2    = ""
         ForeignDeliveryAddress.Address3    = ""
         ForeignDeliveryAddress.Address4    = ""
         ForeignDeliveryAddress.Address5    = ""
         ForeignDeliveryAddress.GateCountryCode = "" .
      END. 
      FOR EACH ink_val WHERE ink_val.KOMBINERAD > 0 :
         FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
         kombkontroll.KOMBINERAD = ink_val.KOMBINERAD NO-LOCK NO-ERROR.
         IF NOT AVAILABLE kombkontroll THEN CREATE kombkontroll.
         ASSIGN 
         kombkontroll.AONRAONR = ink_val.AONRAONR  
         kombkontroll.AONRDELNR = ink_val.AONRDELNR  
         kombkontroll.KOMBINERAD = ink_val.KOMBINERAD.
         FIND FIRST idinktemp WHERE idinktemp.AONRAONR = ink_val.AONRAONR AND idinktemp.AONRDELNR = ink_val.AONRDELNR AND
         idinktemp.NUM = ink_val.NUM NO-LOCK NO-ERROR.
         IF kombkontroll.KOMBID = ? OR kombkontroll.KOMBID = "" THEN DO:
            IF AVAILABLE idinktemp THEN DO:
               FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
               USE-INDEX KOD NO-LOCK NO-ERROR.
               IF AVAILABLE bblabeltemp  THEN DO:
                  IF bblabeltemp.ID2 NE "" AND STRING(idinktemp.FRI2) NE "" THEN kombkontroll.KOMBID = bblabeltemp.ID2 + ":" + " " + STRING(idinktemp.FRI2) + " ".
               END.
               IF idinktemp.FRI3 NE "" THEN DO:      
                  IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
                     kombkontroll.KOMBID = kombkontroll.KOMBID +  "Littera" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
                  END.
                  ELSE DO:
                     kombkontroll.KOMBID = kombkontroll.KOMBID +  "Fri ID" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
                  END.
               END.
            END.
            kombkontroll.NUM = ink_val.NUM.
         END.          
      END.   
      FOR EACH beruppinktemp: 
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
         ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN NEXT.
         VAL:
         FOR EACH ink_val WHERE ink_val.AONRAONR = inkadresssparb.AONRAONR AND ink_val.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_val.UPPLAG = beruppinktemp.UPPLAG AND 
         ink_val.INKBESTID = inkadresssparb.INKBESTID AND  ink_val.VISAD = FALSE
         USE-INDEX UPPBERORDNR:
            FIND FIRST ink_valb WHERE ROWID(ink_valb) = ROWID(ink_val) NO-LOCK NO-ERROR.
            RUN skapaeinkmtrl_UI. 
            ink_val.VISAD = TRUE.
            IF ink_val.KOMBINERAD > 0 THEN DO:
               FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
               ink_valb.KOMBINERAD = ink_val.KOMBINERAD AND  
               ink_valb.NUM NE ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID:
                  RUN skapaeinkmtrl_UI.
                  ink_valb.VISAD = TRUE.
               END.
               FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
               kombkontroll.NUM = ink_val.NUM NO-LOCK NO-ERROR.
               IF NOT AVAILABLE kombkontroll THEN DO:
                  NEXT VAL.
               END.
            END.        
            hjid = "".
            FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
            ink_mtrl.NUM = ink_val.NUM AND      
            ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND  
            ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
            NO-LOCK NO-ERROR.
            IF NOT AVAILABLE ink_mtrl THEN NEXT VAL.
             
            FIND FIRST passage WHERE passage.PassageID = STRING(ink_val.UPPLAG) NO-LOCK NO-ERROR.
            FIND FIRST idinktemp WHERE idinktemp.AONRAONR = ink_val.AONRAONR AND idinktemp.AONRDELNR = ink_val.AONRDELNR AND
            idinktemp.NUM = ink_val.NUM NO-LOCK NO-ERROR.
            IF AVAILABLE idinktemp THEN DO:
               FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
               USE-INDEX KOD NO-LOCK NO-ERROR.
               IF AVAILABLE bblabeltemp  THEN DO:
                  IF bblabeltemp.ID2 NE "" AND STRING(idinktemp.FRI2) NE "" THEN hjid = hjid +  bblabeltemp.ID2 + ":" + " " + STRING(idinktemp.FRI2) + " ".
               END.
               IF idinktemp.FRI3 NE "" THEN DO:      
                  IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
                     hjid = hjid +  "Littera" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
                  END.
                  ELSE DO:
                     hjid = hjid +   " " + STRING(idinktemp.FRI3) + " ".
                     /*Lena 20180412 ta bort Fri id- texten blir mer än 30 tecken
                     hjid = hjid +  "Fri ID" + ":" + " " + STRING(idinktemp.FRI3) + " ".*/       
                          
                  END.
               END.
            END.
            
            CREATE buildingpart.  
            IF beruppinktemp.UPPLAG = ?  THEN  buildingpart.PassageID        = "Ingen".
            ELSE buildingpart.PassageID        = STRING(beruppinktemp.UPPLAG).      
             
            IF NOT AVAILABLE idinktemp THEN DO:
               ASSIGN 
               /*            buildingpart.BuildingPartID   = "Ingen" */
               /*            buildingpart.PartName         = "Ingen".*/
               /*TESTA */
               buildingpart.BuildingPartID   = STRING(ink_val.NUM).
               buildingpart.PartName         = "Ingen" + STRING(ink_val.NUM).
            END.
            ELSE DO:
               ASSIGN
               buildingpart.BuildingPartID   = STRING(ink_val.NUM).
               buildingpart.PartName         = hjid.
            END.
            RUN hmtkonst_UI IN inkberh (INPUT ink_val.GRUPP,OUTPUT hjid). 
            buildingpart.Infotext         = hjid + " " + ink_val.F1 + " " + ink_val.ANMARK.
           
         END.          
      END.
      FOR EACH ink_val WHERE ink_val.VISAD = TRUE:
         ink_val.VISAD = FALSE.
      END.   
      DEFINE VARIABLE hjnum AS INTEGER NO-UNDO. 
      hjrakn = 1.
       
      
      FOR EACH eink_mtrl WHERE eink_mtrl.INKANTAL > 0 USE-INDEX UPPLAG:
         hjnum = eink_mtrl.NUM.
         IF eink_mtrl.KOMBINERAD > 0 THEN DO:
            FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = eink_mtrl.AONRAONR  AND kombkontroll.AONRDELNR = eink_mtrl.AONRDELNR AND 
            kombkontroll.KOMBINERAD = eink_mtrl.KOMBINERAD NO-LOCK NO-ERROR.
            IF AVAILABLE kombkontroll THEN DO:
               hjnum = kombkontroll.NUM. 
            END.
         END.  
         FIND FIRST idinktemp WHERE idinktemp.AONRAONR = eink_mtrl.AONRAONR AND idinktemp.AONRDELNR = eink_mtrl.AONRDELNR AND
         idinktemp.NUM = hjnum NO-LOCK NO-ERROR.              
       
         CREATE OrderRows.  
         IF eink_mtrl.UPPLAG = ?  THEN  DO:
            OrderRows.PassageID        = "Ingen".
         END.   
         ELSE OrderRows.PassageID        = STRING(eink_mtrl.UPPLAG).      
         IF NOT AVAILABLE idinktemp THEN DO:
            /*om konstruktionen ej identifierad*/
            /*         OrderRows.BuildingPartID           = "Ingen". */
            /*TESTA*/
            OrderRows.BuildingPartID           = STRING(hjnum).         
         END.
         ELSE DO:
            FIND FIRST ink_val WHERE ink_val.AONRAONR = eink_mtrl.AONRAONR  AND ink_val.AONRDELNR = eink_mtrl.AONRDELNR AND 
            ink_val.NUM = eink_mtrl.NUM NO-LOCK NO-ERROR.
            IF ink_val.KOMBINERAD > 0 THEN DO:
               FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
               kombkontroll.KOMBINERAD = ink_val.KOMBINERAD NO-LOCK NO-ERROR.
               OrderRows.BuildingPartID           = STRING(kombkontroll.NUM).
            END.   
            ELSE OrderRows.BuildingPartID           = STRING(idinktemp.NUM).
         END.
         ASSIGN
         OrderRows.BuyerRowNumber           = STRING(hjrakn)
         OrderRows.BuyerArticleNumber       = ""
         OrderRows.BuyerArticleDescription  = eink_mtrl.BENAMNING
         OrderRows.SellerRowNumber          = STRING(hjrakn)
         OrderRows.SellerArticleNumber      = eink_mtrl.ENR
         OrderRows.SellerArticleDescription = eink_mtrl.BENAMNING
         OrderRows.OrderedQuantity          = STRING(DECIMAL(OrderRows.OrderedQuantity) + eink_mtrl.INKANTAL)
         OrderRows.UnitCode                 = SUBSTRING(eink_mtrl.ENHET,1,2)
         OrderRows.Price                    = STRING(eink_mtrl.PRISINK)
         OrderRows.PriceType                = "1"
         OrderRows.RequestedDeliveryDate    = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
         OrderRows.Discount                 = ""
         OrderRows.NewRequestedDeliveryDate  = ""
         OrderRows.DynamicArticle            = "".
         IF SUBSTRING(OrderRows.SellerArticleNumber,1,1) NE "E"  THEN OrderRows.SellerArticleNumber = "E" + OrderRows.SellerArticleNumber.
         OrderRows.Comment                = eink_mtrl.MTRLTEXT.
         hjrakn = hjrakn + 1.
         RUN orderbuff_UI (INPUT-OUTPUT hjrakn).
          
      END.
      /*"depå"*/
      FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.            
      END.
      FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      eink_mtrl.INKBESTID = inkadresssparb.INKBESTID AND 
      eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND eink_mtrl.TILL = "depå"
      NO-LOCK NO-ERROR.
      IF AVAILABLE eink_mtrl THEN DO:
         FIND FIRST passage WHERE passage.PassageID = "Ingen" NO-LOCK NO-ERROR.
         IF NOT AVAILABLE passage THEN DO:      
            CREATE passage. 
            ASSIGN
            passage.PassageID     = "Ingen"
            passage.PassageName   = "Materiel ej kopplat till upplag"
            passage.Infotext       = "Materiel till depå".
         END.
         CREATE buildingpart.  
         ASSIGN
         buildingpart.PassageID        = "Ingen"      
         buildingpart.BuildingPartID   = "Depå"
         buildingpart.PartName         = "Till depå"
         /*buildingpart.Infotext         = "Materiel till depå"*/.
      END.
      
      FOR EACH eink_mtrl WHERE 
      eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
      eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND 
      eink_mtrl.TILL = "depå" 
      USE-INDEX LEVENR:      
         CREATE OrderRows.  
         OrderRows.PassageID        = "Ingen".
         ASSIGN
         OrderRows.BuildingPartID           = "Depå"
         OrderRows.BuyerRowNumber           = STRING(hjrakn)
         OrderRows.BuyerArticleNumber       = ""
         OrderRows.BuyerArticleDescription  = ""
         OrderRows.SellerRowNumber          = STRING(hjrakn)
         OrderRows.SellerArticleNumber      = eink_mtrl.ENR
         OrderRows.SellerArticleDescription = eink_mtrl.BENAMNING
         OrderRows.OrderedQuantity          = STRING(DECIMAL(OrderRows.OrderedQuantity) + eink_mtrl.INKANTAL)
         OrderRows.UnitCode                 = SUBSTRING(eink_mtrl.ENHET,1,2)
         OrderRows.Price                    = STRING(eink_mtrl.PRISINK)
         OrderRows.PriceType                = "1"
         OrderRows.RequestedDeliveryDate    = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
         OrderRows.Discount                 = ""
         OrderRows.NewRequestedDeliveryDate  = ""
         OrderRows.DynamicArticle            = "".
         IF SUBSTRING(OrderRows.SellerArticleNumber,1,1) NE "E"  THEN OrderRows.SellerArticleNumber = "E" + OrderRows.SellerArticleNumber.
                
         hjrakn = hjrakn + 1.
      END.
      /*
      /*Linor/kablar*/
     
      */
   END.   
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   prognamn = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
   {SESSIONTEMPDIR.I}
   IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN prognamn = webclienttempdir.
   sparfilnamn = prognamn + "gurubest" + "\". 
   OS-CREATE-DIR VALUE(sparfilnamn) NO-ERROR.
   sparfilnamn = prognamn + "gurubest" + "\" + "bestkopia\". 
   OS-CREATE-DIR VALUE(sparfilnamn) NO-ERROR.
   sparfilnamn = prognamn + "gurubest" + "\".
   filnamnsp = sparfilnamn + "bestkopia\" + REPLACE(TRIM(STRING(inkadresssparb.ORDERNUMMER))," ","").
   sparfilnamn = sparfilnamn + REPLACE(TRIM(STRING(inkadresssparb.ORDERNUMMER))," ","") + ".xml".
   
   sparfilnamn = REPLACE(sparfilnamn,",","").         
   {UTXKMLKOLL.I}
   RUN VALUE(vxmlpro) PERSISTENT SET dynxml (INPUT FALSE).
   
  /*GAMLA RUN radbryt_UI IN dynxml (INPUT TRUE).*/ 
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      /*dessa tabeller ska bara ha en nivå inga värden*/
      ejnivtab = "tempheader,Order".
      /*fält vars värde ska ut vid ett senare tillfälle*/
      /*
      extraradut = "ProjectName,DeliveryTermCity,DeliveryTermCode,SplitDelivery,BuyerInvoiceNumber,OrderChange,AKG,PassageID,BuildingPartID,NewRequestedDeliveryDate,DynamicArticle".
      */
      extraradut = "ProjectName,DeliveryTermCity,DeliveryTermCode,BuyerInvoiceNumber,OrderChange,AKG,PassageID,BuildingPartID,NewRequestedDeliveryDate,DynamicArticle".
      RUN creatnodniv_UI IN dynxml (INPUT 5).
      RUN encod_UI IN dynxml (INPUT "ISO-8859-1").
      RUN xmlutstartniv_UI IN dynxml (INPUT "ns0:Orders",INPUT sparfilnamn,INPUT "http://Elektroskandia.ESXML.Order",INPUT "xmlns:ns0").
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "Order" NO-LOCK NO-ERROR.
   END.
   ELSE DO:   
      ejnivtab = "tempheader,ProjectOrder".
      extraradut = "ProjectName".
      RUN creatnodniv_UI IN dynxml (INPUT 5).
      RUN encod_UI IN dynxml (INPUT "ISO-8859-1").
      RUN xmlutstartniv_UI IN dynxml (INPUT "ns0:ProjectOrders",INPUT sparfilnamn,INPUT "http://Elektroskandia.ESXML.ProjectOrder",INPUT "xmlns:ns0").
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "ProjectOrder" NO-LOCK NO-ERROR.
   END.   
   IF AVAILABLE tempnamn THEN DO:
      ASSIGN
      nivar = 1.
      kommandoquery = "FOR EACH " + tempnamn.NODTAB.
      RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT tempnamn.NODTAB,INPUT ejnivtab,INPUT extraradut).                     
   END.
   /*obs! order ska nu ha rader*/
   ejnivtab = REPLACE(ejnivtab,",Order","").
   FOR EACH tempnamn:              
      IF tempnamn.NODTAB = "tempheader" THEN DO:      
         ASSIGN
         nivar = 2.
         kommandoquery = "FOR EACH " + tempnamn.NODTAB.
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT "Header",INPUT ejnivtab,INPUT extraradut).                     
      END.
      ELSE IF tempnamn.NODTAB = "tempmessage" THEN DO:       
         ASSIGN
         nivar = 3.
         kommandoquery = "FOR EACH " + tempnamn.NODTAB.
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT "Message",INPUT ejnivtab,INPUT extraradut).                     
      END.
      ELSE IF tempnamn.NODTAB = "Order"  OR  tempnamn.NODTAB = "Seller" OR tempnamn.NODTAB = "Buyer"  THEN DO:
         IF tempnamn.NODTAB = "Order" AND inkadresssparb.IEXTRAINT[1] = 2  THEN RUN subnivkom_UI  IN dynxml (INPUT TRUE).
         ELSE RUN subnivkom_UI  IN dynxml (INPUT FALSE).
         ASSIGN
         nivar = 3.
         kommandoquery = "FOR EACH " + tempnamn.NODTAB.
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT tempnamn.NODTAB,INPUT ejnivtab,INPUT extraradut ).                     
      END.
      ELSE IF tempnamn.NODTAB = "bDeliveryAddress"  THEN DO:       
         ASSIGN
          nivar = 4.
          kommandoquery = "FOR EACH " + tempnamn.NODTAB.
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT "DeliveryAddress",INPUT ejnivtab,INPUT extraradut).                              
      END.
      ELSE IF  tempnamn.NODTAB = "bForeignDeliveryAddress" THEN DO:       
         ASSIGN
         nivar = 4.
         kommandoquery = "FOR EACH " + tempnamn.NODTAB.
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT "ForeignDeliveryAddress",INPUT ejnivtab,INPUT extraradut). 
         RUN extraut_UI IN dynxml (INPUT 3,INPUT "ProjectName").
         
      END.
   END.
   
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      FOR EACH tempnamn WHERE  tempnamn.NODTAB = "OrderRows":   
         RUN subnivkom_UI  IN dynxml (INPUT TRUE).
         ASSIGN
         nivar = 2.
         kommandoquery = "FOR EACH OrderRows  NO-LOCK".
         RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT tempnamn.NODTAB,INPUT ejnivtab,INPUT extraradut).            
      END.
      RUN subnivkom_UI  IN dynxml (INPUT FALSE).
   END.
   ELSE DO:
     
      IF inkadresssparb.IEXTRAINT[2] = 331 THEN DO :
         FOR EACH tempnamn WHERE  tempnamn.NODTAB = "Passage":      
            ASSIGN
            nivar = 2.
            kommandoquery = "FOR EACH Passage  NO-LOCK".
            kommandoquery2 = "FOR EACH buildingpart  WHERE buildingpart.PassageID = '".
            kommandoquery3 = "FOR EACH OrderRows  WHERE OrderRows.PassageID = '".
            kommandoquery11 = "FOR EACH DeliveryAddress  WHERE DeliveryAddress.PassageID = '".
            kommandoquery12 = "FOR EACH ForeignDeliveryAddress  WHERE ForeignDeliveryAddress.PassageID = '".
            RUN inladd_UI IN dynxml 
               (INPUT kommandoquery2, INPUT kommandoquery3,INPUT kommandoquery11,INPUT kommandoquery12, INPUT "PassageID",INPUT "BuildingPartID",
               INPUT TEMP-TABLE buildingpart:DEFAULT-BUFFER-HANDLE, INPUT TEMP-TABLE OrderRows:DEFAULT-BUFFER-HANDLE,
               INPUT TEMP-TABLE DeliveryAddress:DEFAULT-BUFFER-HANDLE,INPUT TEMP-TABLE ForeignDeliveryAddress:DEFAULT-BUFFER-HANDLE).
            RUN huvnivut_UI IN dynxml (INPUT nivar,INPUT TEMP-TABLE Passage:DEFAULT-BUFFER-HANDLE,INPUT kommandoquery).            
         END.
      END.
      ELSE DO:   
         FOR EACH tempnamn WHERE  tempnamn.NODTAB = "Passage":      
            ASSIGN
            nivar = 2.
            kommandoquery = "FOR EACH Passage  NO-LOCK".
            kommandoquery2 = "FOR EACH buildingpart  WHERE buildingpart.PassageID = '".
            kommandoquery3 = "FOR EACH OrderRows  WHERE OrderRows.PassageID = '".
            kommandoquery11 = "FOR EACH DeliveryAddress  WHERE DeliveryAddress.PassageID = '".
            kommandoquery12 = "FOR EACH ForeignDeliveryAddress  WHERE ForeignDeliveryAddress.PassageID = '".
            RUN inladd_UI IN dynxml 
               (INPUT kommandoquery2, INPUT kommandoquery3,INPUT kommandoquery11,INPUT kommandoquery12, INPUT "PassageID",INPUT "BuildingPartID",
               INPUT TEMP-TABLE buildingpart:DEFAULT-BUFFER-HANDLE, INPUT TEMP-TABLE OrderRows:DEFAULT-BUFFER-HANDLE,
               INPUT TEMP-TABLE DeliveryAddress:DEFAULT-BUFFER-HANDLE,INPUT TEMP-TABLE ForeignDeliveryAddress:DEFAULT-BUFFER-HANDLE).
            RUN huvnivut_UI IN dynxml (INPUT nivar,INPUT TEMP-TABLE Passage:DEFAULT-BUFFER-HANDLE,INPUT kommandoquery).            
         END.
      END.    
   END.
   
    /*NYA*/
   RUN xmlutslutvar_UI  IN dynxml (OUTPUT infillong).
   RUN xmlslut_UI IN dynxml.
   
   IF VALID-HANDLE(dynxml) THEN DELETE PROCEDURE dynxml NO-ERROR.
   filnamnsp = filnamnsp + STRING(TODAY,"99999999") + STRING(TIME) + ".xml".
   
   /*
   COPY-LOB FROM infillong TO FILE filnamnsp.
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN  COPY-LOB FROM infillong TO FILE filnamnsp.
   */
 /*  NYA*/
   
   /*GAMLA     
   */
   
   RUN skickelektro_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER, INPUT infillong,OUTPUT TABLE felmeddftptemp).
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END.
   FIND FIRST felmeddftptemp WHERE NO-LOCK NO-ERROR.
   IF AVAILABLE felmeddftptemp THEN DO:
      MESSAGE "Du har fått felmeddelanden! Du måste kolla upp dem!"
      VIEW-AS ALERT-BOX.
   END.   
   /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN DO:
      MESSAGE "Filen finns både på Eran server och i " filnamnsp
      VIEW-AS ALERT-BOX.
   END.
   */
   OS-DELETE VALUE(sparfilnamn) NO-ERROR.
   kontrollbest = TRUE.
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
   
    
END PROCEDURE.

PROCEDURE bestelektroUpplag_UI :   
   DEFINE VARIABLE byggid AS INTEGER NO-UNDO. 
      FOR EACH beruppinktemp:
         IF beruppinktemp.UPPLAG = ? THEN NEXT.
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
         ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN NEXT.
         CREATE passage. 
         ASSIGN
         passage.PassageID     = STRING(beruppinktemp.UPPLAG)
         passage.PassageName   = beruppinktemp.Adress.
         IF beruppinktemp.XKORDCH = "" THEN  passage.Infotext      = beruppinktemp.ANMARK.
         ELSE  passage.Infotext      = "X=" + STRING(beruppinktemp.XKORDCH) + " Y=" + STRING(beruppinktemp.YKORDCH) + " " + beruppinktemp.ANMARK.
         
         CREATE DeliveryAddress.
         ASSIGN
         
         DeliveryAddress.PassageID     = STRING(beruppinktemp.UPPLAG)
         DeliveryAddress.Name        = SUBSTRING(beruppinktemp.Adress,1,35)
         DeliveryAddress.Street      = SUBSTRING(beruppinktemp.Adress,35,35)
         DeliveryAddress.City        = beruppinktemp.ORT
         DeliveryAddress.PostalCode  = beruppinktemp.POSTNR
         DeliveryAddress.CountryCode = "".
         CREATE ForeignDeliveryAddress.
         ASSIGN
         ForeignDeliveryAddress.PassageID     = STRING(beruppinktemp.UPPLAG)
         ForeignDeliveryAddress.Address1    = ""
         ForeignDeliveryAddress.Address2    = ""
         ForeignDeliveryAddress.Address3    = ""
         ForeignDeliveryAddress.Address4    = ""
         ForeignDeliveryAddress.Address5    = ""
         ForeignDeliveryAddress.GateCountryCode = "" .
         byggid = byggid + 1.
         CREATE buildingpart.
         ASSIGN 
         buildingpart.BuildingPartID = STRING(byggid)  
         buildingpart.PassageID        = STRING(beruppinktemp.UPPLAG).
      END.  
      FIND FIRST ink_mtrl WHERE ink_mtrl.UPPLAG = ? AND ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
      NO-LOCK NO-ERROR.
      IF AVAILABLE ink_mtrl THEN DO:  
         CREATE passage. 
         ASSIGN
         passage.PassageID     = "Ingen"
         passage.PassageName   = "Materiel ej kopplat till upplag"
         passage.Infotext       = "Materiel till depå".
         CREATE DeliveryAddress.
         ASSIGN
         DeliveryAddress.PassageID     = "Ingen"
         DeliveryAddress.Name        = inkadresssparb.FORETAG
         DeliveryAddress.Street      = ""
         DeliveryAddress.City        = ""
         DeliveryAddress.PostalCode  = ""
         DeliveryAddress.CountryCode = "".
         CREATE ForeignDeliveryAddress.
         ASSIGN
         ForeignDeliveryAddress.PassageID   = "Ingen"
         ForeignDeliveryAddress.Address1    = ""
         ForeignDeliveryAddress.Address2    = ""
         ForeignDeliveryAddress.Address3    = ""
         ForeignDeliveryAddress.Address4    = ""
         ForeignDeliveryAddress.Address5    = ""
         ForeignDeliveryAddress.GateCountryCode = "" .
         
         CREATE buildingpart.  
         ASSIGN
         buildingpart.PassageID        = "Ingen"      
         buildingpart.BuildingPartID   = "Depå"
         buildingpart.PartName         = "Till depå"
      /*   buildingpart.Infotext         = "Materiel till depå"*/.   
      END. 
      FOR EACH beruppinktemp: 
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
         ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN NEXT.
         RUN skapaeinkmtrlUpplag_UI. 
      END.
      DEFINE VARIABLE hjnum AS INTEGER NO-UNDO. 
      DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
      hjrakn = 1.
       
      
      FOR EACH eink_mtrl WHERE eink_mtrl.INKANTAL > 0 USE-INDEX UPPLAG:
         
         CREATE OrderRows.  
         IF eink_mtrl.UPPLAG = ?  THEN  DO:
            OrderRows.PassageID        = "Ingen".
            OrderRows.BuildingPartID   = "Depå".
         END.   
         ELSE DO:
             FIND FIRST buildingpart WHERE buildingpart.PassageID = STRING(eink_mtrl.UPPLAG) NO-LOCK NO-ERROR.
             OrderRows.PassageID        = STRING(eink_mtrl.UPPLAG).      
             OrderRows.BuildingPartID                                   = buildingpart.BuildingPartID.
         END.    
         ASSIGN
         
         OrderRows.BuyerRowNumber           = STRING(hjrakn)
         OrderRows.BuyerArticleNumber       = ""
         OrderRows.BuyerArticleDescription  = eink_mtrl.BENAMNING
         OrderRows.SellerRowNumber          = STRING(hjrakn)
         OrderRows.SellerArticleNumber      = eink_mtrl.ENR
         OrderRows.SellerArticleDescription = eink_mtrl.BENAMNING
         OrderRows.OrderedQuantity          = STRING(DECIMAL(OrderRows.OrderedQuantity) + eink_mtrl.INKANTAL)
         OrderRows.UnitCode                 = SUBSTRING(eink_mtrl.ENHET,1,2)
         OrderRows.Price                    = STRING(eink_mtrl.PRISINK)
         OrderRows.PriceType                = "1"
         OrderRows.RequestedDeliveryDate    = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
         OrderRows.Discount                 = ""
         OrderRows.NewRequestedDeliveryDate  = ""
         OrderRows.DynamicArticle            = "".
         IF SUBSTRING(OrderRows.SellerArticleNumber,1,1) NE "E"  THEN OrderRows.SellerArticleNumber = "E" + OrderRows.SellerArticleNumber.
         OrderRows.Comment                = eink_mtrl.MTRLTEXT.
         hjrakn = hjrakn + 1.
        
         RUN orderbuff_UI (INPUT-OUTPUT hjrakn).
          
      END.
      /*"depå"*/
      FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.            
      END.
      FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      eink_mtrl.INKBESTID = inkadresssparb.INKBESTID AND 
      eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND eink_mtrl.TILL = "depå"
      NO-LOCK NO-ERROR.
      IF AVAILABLE eink_mtrl THEN DO:
         FIND FIRST passage WHERE passage.PassageID = "Ingen" NO-LOCK NO-ERROR.
         IF NOT AVAILABLE passage THEN DO:      
            CREATE passage. 
            ASSIGN
            passage.PassageID     = "Ingen"
            passage.PassageName   = "Materiel ej kopplat till upplag"
            passage.Infotext       = "Materiel till depå".
         END.
         CREATE buildingpart.  
         ASSIGN
         buildingpart.PassageID        = "Ingen"      
         buildingpart.BuildingPartID   = "Depå"
         buildingpart.PartName         = "Till depå"
  /*       buildingpart.Infotext         = "Materiel till depå"*/.
      END.
      
      FOR EACH eink_mtrl WHERE 
      eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
      eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND 
      eink_mtrl.TILL = "depå" 
      USE-INDEX LEVENR:      
         CREATE OrderRows.  
         OrderRows.PassageID        = "Ingen".
         ASSIGN
         OrderRows.BuildingPartID           = "Depå"
         OrderRows.BuyerRowNumber           = STRING(hjrakn)
         OrderRows.BuyerArticleNumber       = ""
         OrderRows.BuyerArticleDescription  = ""
         OrderRows.SellerRowNumber          = STRING(hjrakn)
         OrderRows.SellerArticleNumber      = eink_mtrl.ENR
         OrderRows.SellerArticleDescription = eink_mtrl.BENAMNING
         OrderRows.OrderedQuantity          = STRING(DECIMAL(OrderRows.OrderedQuantity) + eink_mtrl.INKANTAL)
         OrderRows.UnitCode                 = SUBSTRING(eink_mtrl.ENHET,1,2)
         OrderRows.Price                    = STRING(eink_mtrl.PRISINK)
         OrderRows.PriceType                = "1"
         OrderRows.RequestedDeliveryDate    = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
         OrderRows.Discount                 = ""
         OrderRows.NewRequestedDeliveryDate  = ""
         OrderRows.DynamicArticle            = "".
         IF SUBSTRING(OrderRows.SellerArticleNumber,1,1) NE "E"  THEN OrderRows.SellerArticleNumber = "E" + OrderRows.SellerArticleNumber.
                
         hjrakn = hjrakn + 1.
      END.
     
         
END PROCEDURE.

PROCEDURE bestelektrodep_UI :    
   /*depå best*/
   DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
  
   CREATE DeliveryAddress.
   ASSIGN
   DeliveryAddress.PassageID     = STRING(1)
   DeliveryAddress.Name        = inkadresssparb.FORETAG
   DeliveryAddress.Street      = inkadresssparb.LEVADRESS
   DeliveryAddress.City        = inkadresssparb.LEVORT
   DeliveryAddress.PostalCode  = STRING(REPLACE(inkadresssparb.LEVPNR," ",""),"99999")
   DeliveryAddress.CountryCode = "SE".
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      /*om ej summera mtrl*/
      FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.ENR = ink_mtrl.ENR            
      AND eink_mtrl.INKBESTID = inkadresssparb.INKBESTID
      NO-LOCK NO-ERROR.      
      /*CHR(10)*/             
      IF AVAILABLE eink_mtrl THEN DO:
         IF eink_mtrl.MTRLTEXT = "" THEN eink_mtrl.MTRLTEXT = ink_mtrl.MTRLTEXT.
         ELSE eink_mtrl.MTRLTEXT = eink_mtrl.MTRLTEXT + CHR(10) + ink_mtrl.MTRLTEXT.
         eink_mtrl.INKANTAL = eink_mtrl.INKANTAL + ink_mtrl.INKANTAL.
      END.
      ELSE DO:   
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.
      END.
   END.
   
        
   hjrakn = 1.
   FOR EACH eink_mtrl WHERE eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.INKANTAL > 0:
     
      CREATE OrderRows.  
      /*
      ASSIGN
      OrderRows.PassageID        = STRING(1)
      OrderRows.BuildingPartID           = "Ingen".
      */
      ASSIGN
      OrderRows.BuyerRowNumber           = STRING(hjrakn)
      OrderRows.BuyerArticleNumber       = ""
      OrderRows.BuyerArticleDescription  = eink_mtrl.BENAMNING
      OrderRows.SellerRowNumber          = STRING(hjrakn)
      OrderRows.SellerArticleNumber      = eink_mtrl.ENR
      OrderRows.SellerArticleDescription = eink_mtrl.BENAMNING
      OrderRows.OrderedQuantity          = STRING(DECIMAL(OrderRows.OrderedQuantity) + eink_mtrl.INKANTAL)
      OrderRows.UnitCode                 = SUBSTRING(eink_mtrl.ENHET,1,2)
      OrderRows.Price                    = STRING(eink_mtrl.PRISINK)
      OrderRows.PriceType                = "1"
      OrderRows.RequestedDeliveryDate    = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
      OrderRows.Discount                 = ""
      OrderRows.NewRequestedDeliveryDate  = ""
      OrderRows.DynamicArticle            = "".
      IF SUBSTRING(OrderRows.SellerArticleNumber,1,1) NE "E"  THEN OrderRows.SellerArticleNumber = "E" + OrderRows.SellerArticleNumber.
      OrderRows.Comment                = eink_mtrl.MTRLTEXT .        
      hjrakn = hjrakn + 1.
      /* 
            RUN orderbuff_UI (INPUT-OUTPUT hjrakn).
      */
   END.
  
     
END PROCEDURE.
PROCEDURE orderbuff_UI :
   DEFINE INPUT-OUTPUT  PARAMETER hjrakn AS INTEGER NO-UNDO.
   /*till konst*/
   FIND FIRST konsteink_mtrl WHERE konsteink_mtrl.ENR = eink_mtrl.ENR NO-LOCK NO-ERROR.
   IF AVAILABLE konsteink_mtrl THEN DO:
      CREATE OrderRowsbuff.
      BUFFER-COPY OrderRows TO OrderRowsbuff.
      ASSIGN
      OrderRows.BuyerRowNumber           = STRING(hjrakn)
      OrderRows.SellerRowNumber          = STRING(hjrakn)
      OrderRowsbuff.OrderedQuantity          = STRING(konsteink_mtrl.INKANTAL)
      OrderRowsbuff.Comment = "".
      DELETE konsteink_mtrl.
      hjrakn = hjrakn + 1.
   END.
END PROCEDURE.  
PROCEDURE bestahlsell_UI: 
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE  hjraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE infillong AS LONGCHAR NO-UNDO.
   EMPTY TEMP-TABLE Orderahls NO-ERROR.		    
   EMPTY TEMP-TABLE Orderhuvudahls NO-ERROR.   
   EMPTY TEMP-TABLE Orderdataahls NO-ERROR.		   
   EMPTY TEMP-TABLE Mtrlahls NO-ERROR.
   /*/* lena ahsell byggp  */   
   EMPTY TEMP-TABLE Packahls NO-ERROR.*/ 
     
   IF Guru.Konstanter:globforetag = "ELPA" THEN DO:
      elementhidden = "ELEMENT".
      RUN BestGuru_UI.
      RETURN.
   END.   
   RUN konstskap_UI.   
   
   RUN uttabahls_UI.
   CREATE Orderahls.
   ASSIGN  
   Orderahls.SystemID = "GURU".
   CREATE Orderdataahls.
   ASSIGN  
   Orderdataahls.SystemID = "".
   /*/* lena ahsell byggp  */
   CREATE Packahls.
   ASSIGN  
   Packahls.SystemID = "GURU".*/ 
   
   CREATE Orderhuvudahls.
   ASSIGN 
   Orderhuvudahls.Dokumenttyp = "Beställning"
   Orderhuvudahls.Datum = STRING(TODAY,"99-99-99")
   Orderhuvudahls.Tid = STRING(TIME,"HH:MM:SS").
   IF Guru.Konstanter:globforetag = "VAST"  THEN DO:
      Orderhuvudahls.Kundnummer = STRING(inkadresssparb.KUNDNR,"99999").
   END.
   ELSE DO:
      Orderhuvudahls.Kundnummer = STRING(inkadresssparb.KUNDNR,"9999999").
   END.    
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:            
      Orderhuvudahls.Organisationsnr = "5560757287".
   END.
   IF Guru.Konstanter:globforetag = "SNAT" THEN DO:            
      Orderhuvudahls.Organisationsnr = "5565027223".
   END.
   
   ASSIGN 
   Orderhuvudahls.Firma = inkadresssparb.FORETAG
   Orderhuvudahls.Gatuadress = inkadresssparb.LEVADRESS
   Orderhuvudahls.Postnummer = inkadresssparb.LEVPNR
   Orderhuvudahls.Postnummer = REPLACE(inkadresssparb.LEVPNR," ","")
   Orderhuvudahls.Ort = inkadresssparb.LEVORT.
   Orderhuvudahls.Kontaktperson = inkadresssparb.IKONTAKT.
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      /*ES har IB-nummer LEVTRP.KPNR*/
      Orderhuvudahls.Kontaktperson = Orderhuvudahls.Kontaktperson + "    " + SUBSTRING(inkadresssparb.IBNR,1,6).      
   END.
   ASSIGN 
   Orderhuvudahls.e-mail = inkadresssparb.IEPOST
   Orderhuvudahls.Bestallning = TRIM(STRING(inkadresssparb.ORDERNUMMER))
   Orderhuvudahls.Markning = inkadresssparb.MARKERING.         
   IF inkadresssparb.AVIS = TRUE THEN DO:
      Orderhuvudahls.Avisering = inkadresssparb.AVISPERS.
   END.   
   ASSIGN 
   Orderhuvudahls.Leveransdatum = STRING(inkadresssparb.LEVERANSDATUM,"99-99-99")
   Orderhuvudahls.Konto = inkadresssparb.AONRAONR.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      Orderhuvudahls.Konto = Orderhuvudahls.Konto + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).
   END.        
        
   ELSE DO:         
      Orderhuvudahls.Konto = Orderhuvudahls.Konto + " " + STRING(inkadresssparb.AONRDELNR).
   END.  
   hjraknare = 1.
   REPEAT:
      IF hjraknare = 1 THEN Orderhuvudahls.Kommentar = SUBSTRING(inkadresssparb.KOMMENTAR,hjraknare,40).
      hjraknare = hjraknare + 40. 
      IF hjraknare > LENGTH(inkadresssparb.KOMMENTAR) THEN LEAVE.
      Orderhuvudahls.Kommentar = Orderhuvudahls.Kommentar + CHR(10) + SUBSTRING(inkadresssparb.KOMMENTAR,hjraknare,40).
   END.   
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      Orderhuvudahls.Kommentar          = "OBS! SPECIFIKA KABELLÄNGDER " + CHR(10) + Orderhuvudahls.Kommentar.      
   END.    
   ELSE DO:
      Orderhuvudahls.Kommentar          = "OBS! HELA KABELLÄNGDER " + CHR(10) + Orderhuvudahls.Kommentar.
   END.       
   Orderhuvudahls.Kommentar = Orderhuvudahls.Kommentar + " " + 
   CHR(10) + "Kontaktperson inköp:" + inkadresssparb.IKONTAKT + " " +
   CHR(10) + "Tele:" + STRING(inkadresssparb.ITELE) + " " + "Mobil:" + STRING(inkadresssparb.IMOBIL) +    
   CHR(10) + "Kontaktperson teknik:" + STRING(inkadresssparb.TKONTAKT) + " " +
   CHR(10) + "Tele:" + STRING(inkadresssparb.TTELE) + " " + "Mobil:" + STRING(inkadresssparb.TMOBIL) + " ".      
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      Orderhuvudahls.Kommentar = Orderhuvudahls.Kommentar +
      CHR(10) + "Projektledare:" + STRING(inkadresssparb.PROJEKTLEDARE) + " " +
      CHR(10) + "Mobil:" + STRING(inkadresssparb.PTELE).            
   END.
   IF inkadresssparb.IEPOST = "" THEN DO:
      IF inkadresssparb.IFAX NE "" THEN DO:
         Orderhuvudahls.Kommentar = Orderhuvudahls.Kommentar + " " +
         CHR(10) + "Orderbekräftelse till faxnr:" + STRING(inkadresssparb.IFAX).
      END.
   END.
   
   FOR EACH inkbest_mtrl WHERE inkbest_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
   inkbest_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   inkbest_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND  
   inkbest_mtrl.INKBESTID = inkadresssparb.INKBESTID
   BY inkbest_mtrl.ENR:    
      IF inkbest_mtrl.TILL = "RETUR" THEN NEXT.  
      CREATE Mtrlahls.   
      IF SUBSTRING(inkbest_mtrl.ENR,1,1) = "E" THEN DO:
         Mtrlahls.Artikelnr = STRING(RIGHT-TRIM(SUBSTRING(inkbest_mtrl.ENR,2))).                
      END.
      ELSE DO:
         Mtrlahls.Artikelnr = STRING(RIGHT-TRIM(inkbest_mtrl.ENR)).                            
      END.
      ASSIGN
      Mtrlahls.Beskrivning = STRING(RIGHT-TRIM(inkbest_mtrl.BENAMNING))  
      Mtrlahls.Enhet = STRING(RIGHT-TRIM(inkbest_mtrl.ENHET))  
      Mtrlahls.Antal = TRIM(STRING(inkbest_mtrl.INKANTAL))
      Mtrlahls.Pris = RIGHT-TRIM(STRING(inkbest_mtrl.PRISINK)).                                         
   END.               
   
   prognamn = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
   
   {SESSIONTEMPDIR.I}
   IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN prognamn = webclienttempdir.
   sparfilnamn = prognamn + STRING(TIME) + "ahlsell.xml".
   {UTXKMLKOLL.I}
   RUN VALUE(vxmlpro) PERSISTENT SET dynxml (INPUT FALSE).  
   RUN creatnodniv_UI IN dynxml (INPUT 3).
   RUN encod_UI IN dynxml (INPUT "ISO-8859-1").
   RUN xmlutstartniv_UI IN dynxml (INPUT "bort",INPUT sparfilnamn,INPUT "",INPUT "xmlns:ns0").
   FOR EACH tempnamn BY tempnamn.ORDNING:
      RUN ejblank_UI IN dynxml (INPUT FALSE).      
      IF tempnamn.TORGTH:NAME = "Orderahls" THEN nivar = 1.
      ELSE IF tempnamn.TORGTH:NAME = "Orderhuvudahls" THEN nivar = 2.
      ELSE IF tempnamn.TORGTH:NAME = "Orderdataahls" THEN DO:
         RUN ejblank_UI IN dynxml (INPUT TRUE).
         nivar = 2.
      END.   
      ELSE IF tempnamn.TORGTH:NAME = "Mtrlahls" THEN nivar = 3.
       
      ASSIGN
      kommandoquery = "FOR EACH " + tempnamn.TORGTH:NAME.     
      RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT tempnamn.NODTAB,INPUT ejnivtab,INPUT "").
      /*
      IF tempnamn.TORGTH:NAME = "extraut_UI" THEN DO:
         RUN exdbfaltsatt_UI IN dynxml (INPUT STRING(check1 + check2)).
         RUN extraut_UI IN dynxml (INPUT 2,INPUT "Checksumma").
      END.
      */                             
   END.
  /*NYA*/
   RUN xmlutslutvar_UI  IN dynxml (OUTPUT infillong).
   RUN xmlslut_UI IN dynxml.
   RUN bytchr_UI IN dynxml (INPUT-OUTPUT infillong,INPUT '<bort xmlns:ns0="">',INPUT "").
   RUN bytchr_UI IN dynxml (INPUT-OUTPUT infillong,INPUT "<bort>",INPUT "").
   RUN bytchr_UI IN dynxml (INPUT-OUTPUT infillong,INPUT "</bort>",INPUT "").
   IF VALID-HANDLE(dynxml) THEN DELETE PROCEDURE dynxml.
   /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN COPY-LOB FROM infillong TO FILE sparfilnamn.
   */
   /*NYA*/
   /*GAMLA
   GAMLA*/
   RUN skickahl_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER, INPUT infillong).
   
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END.
   OS-DELETE VALUE(sparfilnamn) NO-ERROR.
     
   kontrollbest = TRUE.
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
      
   
END PROCEDURE.

PROCEDURE bestselga_UI: 
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE  hjraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE infillong AS LONGCHAR NO-UNDO.
   
   EMPTY TEMP-TABLE SELGAOrder NO-ERROR.          
   EMPTY TEMP-TABLE tbl_OrderHead NO-ERROR.              
   EMPTY TEMP-TABLE tbl_OrderLine NO-ERROR. 
   RUN konstskap_UI.  
      
       
   CREATE SELGAOrder.
     
   CREATE tbl_OrderHead.
   tbl_OrderHead.RID = RECID(SELGAOrder).
   FIND FIRST personaltemp WHERE REPLACE(personaltemp.FORNAMN + personaltemp.EFTERNAM," ","") = REPLACE(inkadresssparb.IKONTAKT," ","") NO-LOCK NO-ERROR.
   IF AVAILABLE personaltemp THEN DO:
      ASSIGN   
      tbl_OrderHead.PurchaserReferenceFirstName = personaltemp.FORNAMN
      tbl_OrderHead.PurchaserReferenceLastName = personaltemp.EFTERNAM.
   END. 
   ELSE DO:
      /*Om det inte går att hitta personen och dela upp förnamn och efternamn -skicka både förnamn och efternamn i efternamn*/         
      /*tbl_OrderHead.PurchaserReferenceFirstName = inkadresssparb.IKONTAKT.*/
      ASSIGN
      tbl_OrderHead.PurchaserReferenceLastName = inkadresssparb.IKONTAKT.
   END.   
   ASSIGN 
   tbl_OrderHead.OrderHeadID = TRIM(STRING(inkadresssparb.ORDERNUMMER))
   tbl_OrderHead.PurchaserIdentification = STRING(inkadresssparb.KUNDNR,"99999999")
   
   tbl_OrderHead.ProjectNo = inkadresssparb.AONRAONR  + " " + STRING(inkadresssparb.AONRDELNR)
   tbl_OrderHead.SupplierCompanyCode = "7381010030007" 
   tbl_OrderHead.OrderCreatedDate = STRING(TODAY,"9999-99-99")    
   tbl_OrderHead.EarliestDeliveryDate = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
   tbl_OrderHead.PurchaserCompanyName = inkadresssparb.FORETAG.
   IF Guru.Konstanter:globforetag = "GKAL" THEN DO:            
      tbl_OrderHead.PurchaserCompanyOrgNo = "556182-7543".
   END.
   ASSIGN
   tbl_OrderHead.SupplierCompanyName = "Selga"
   tbl_OrderHead.SupplierCompanyOrgNo = "556062-0220"
   tbl_OrderHead.DeliveryReceiver = inkadresssparb.FORETAG
   tbl_OrderHead.DeliveryAddress = inkadresssparb.LEVADRESS
   tbl_OrderHead.DeliveryPostalCode = inkadresssparb.LEVPNR   
   tbl_OrderHead.DeliveryCity = inkadresssparb.LEVORT     
   tbl_OrderHead.DeliveryCountry = "SE"
   
   tbl_OrderHead.GoodsLabel = inkadresssparb.MARKERING
       
   tbl_OrderHead.PurchaserCreatorEmail = inkadresssparb.IEPOST.
   IF inkadresssparb.ITELE NE "" THEN   tbl_OrderHead.PurchaserCreatorPhone = inkadresssparb.ITELE.
   IF inkadresssparb.IMOBIL NE "" THEN   tbl_OrderHead.PurchaserCreatorPhone = inkadresssparb.IMOBIL.
   tbl_OrderHead.Currency = "SEK".
   
     
   
   hjraknare = 1.
   FOR EACH inkbest_mtrl WHERE inkbest_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
   inkbest_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   inkbest_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND  
   inkbest_mtrl.INKBESTID = inkadresssparb.INKBESTID
   BY inkbest_mtrl.ENR:    
      IF inkbest_mtrl.TILL = "RETUR" THEN NEXT.  
      CREATE tbl_OrderLine.
      tbl_OrderLine.RID = RECID(tbl_OrderHead).   
      tbl_OrderLine.OrderLinePosition = STRING(hjraknare).
      IF SUBSTRING(inkbest_mtrl.ENR,1,1) = "E" THEN DO:
         tbl_OrderLine.ArticleNo = STRING(RIGHT-TRIM(SUBSTRING(inkbest_mtrl.ENR,2))).                
      END.
      ELSE DO:
         tbl_OrderLine.ArticleNo = STRING(RIGHT-TRIM(inkbest_mtrl.ENR)).                            
      END.
      ASSIGN
      tbl_OrderLine.ArticleName = STRING(RIGHT-TRIM(inkbest_mtrl.BENAMNING))
      tbl_OrderLine.Quantity = TRIM(STRING(inkbest_mtrl.INKANTAL))  
      tbl_OrderLine.QuantityMeasurement = STRING(RIGHT-TRIM(inkbest_mtrl.ENHET))        
      tbl_OrderLine.DeliveryDate = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99").
      tbl_OrderLine.NetPrice = RIGHT-TRIM(STRING(inkbest_mtrl.PRISINK)).
      hjraknare = hjraknare + 1.                                         
   END.               
   
   prognamn = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
   
   {SESSIONTEMPDIR.I}
   IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN prognamn = webclienttempdir.
   sparfilnamn = prognamn + STRING(tbl_OrderHead.OrderHeadID) + "." + STRING(TODAY,"99999999") + STRING(TIME) + ".xml".
   
   DATASET SelgaDs:WRITE-XML("LONGCHAR", infillong,FALSE,"iso8859-1").
   FIND FIRST tbl_OrderHead NO-LOCK NO-ERROR.
   sparfilnamn = prognamn + STRING(tbl_OrderHead.OrderHeadID) + "."  +  STRING(TODAY,"99999999") + STRING(TIME) + ".xml".
         /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN COPY-LOB FROM infillong TO FILE sparfilnamn.
   */
   
   EMPTY TEMP-TABLE felmeddftptemp NO-ERROR.   
   RUN skickselga_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER, INPUT infillong ,OUTPUT TABLE felmeddftptemp).
   /*
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
   END.
   */ 
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END.
   
   /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN DO:
      MESSAGE "Beställningen finns sparad i " sparfilnamn
      VIEW-AS ALERT-BOX.
   END.
   */
   
   kontrollbest = TRUE.
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
END PROCEDURE.





    
PROCEDURE bestonninen_UI :
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   DEFINE VARIABLE lastbrwrow AS ROWID NO-UNDO.
   DEFINE VARIABLE komraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE check1 AS INTEGER NO-UNDO.
   DEFINE VARIABLE check2 AS INTEGER NO-UNDO.
   DEFINE VARIABLE infillong AS LONGCHAR NO-UNDO.
   DEFINE VARIABLE totpostr AS INTEGER NO-UNDO.
   EMPTY TEMP-TABLE tempnamn NO-ERROR.
   EMPTY TEMP-TABLE oninenorderxml NO-ERROR. 
   EMPTY TEMP-TABLE oninenhuvxml NO-ERROR.
   EMPTY TEMP-TABLE oninendataxml NO-ERROR. 
   EMPTY TEMP-TABLE oninenorderdataxml NO-ERROR. 
   EMPTY TEMP-TABLE oninenpackxml NO-ERROR.
   RUN bestonninenXML_UI.
   IF ejnivtab = ejnivtab THEN RETURN.
   RUN konstskap_UI. 
   RUN uttabonninnen_UI.  
    
   CREATE oninenorderxml.
   ASSIGN  
   oninenorderxml.SystemID = "GURU". 
   CREATE oninenorderdataxml.
   ASSIGN  
   oninenorderdataxml.SystemID = "GURU". 
   CREATE oninenpackxml.
   ASSIGN  
   oninenpackxml.SystemID = "GURU". 
   CREATE oninenhuvxml.
   ASSIGN     
   oninenhuvxml.Dokumenttyp = "Beställning"
   oninenhuvxml.Datum = STRING(TODAY,"99-99-99")
   oninenhuvxml.Tid = STRING(TIME,"HH:MM:SS").
   IF Guru.Konstanter:globforetag = "VAST"  THEN DO:
      oninenhuvxml.Kundnummer = STRING(inkadresssparb.KUNDNR,"99999").
   END.
   ELSE IF Guru.Konstanter:globforetag = "KRIN"  THEN DO:
      oninenhuvxml.Kundnummer = STRING(inkadresssparb.KUNDNR,"9999999").
   END.
   ELSE DO:
      oninenhuvxml.Kundnummer = STRING(inkadresssparb.KUNDNR,"999999").
   END.
   IF Guru.Konstanter:globforetag = "GKAL" THEN oninenhuvxml.Organisationsnr = "5561827543".       
   ELSE IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT"  THEN oninenhuvxml.Organisationsnr = "5565027223".
   ELSE IF Guru.Konstanter:globforetag = "VAST"  THEN oninenhuvxml.Organisationsnr = "5564170800".
   ELSE IF Guru.Konstanter:globforetag = "BORL" THEN oninenhuvxml.Organisationsnr = "560055385".
   ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN oninenhuvxml.Organisationsnr = "5560757287".
   ELSE IF Guru.Konstanter:globforetag = "KRIN" THEN oninenhuvxml.Organisationsnr = "5561009852".
   ELSE oninenhuvxml.Organisationsnr = "".
   ASSIGN
   oninenhuvxml.FIRMA = inkadresssparb.FORETAG
   oninenhuvxml.Gatuadress = inkadresssparb.LEVADRESS
   oninenhuvxml.Postnummer = STRING(REPLACE(inkadresssparb.LEVPNR," ",""),"99999") 
   oninenhuvxml.ORT = inkadresssparb.LEVORT.  
   IF inkadresssparb.IKONTAKT NE "" THEN DO:
      oninenhuvxml.Kontaktperson = SUBSTRING(inkadresssparb.IKONTAKT,1,20).
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
         IF inkadresssparb.IBNR NE "" THEN DO:
            oninenhuvxml.Kontaktperson = "".
            SUBSTRING(oninenhuvxml.Kontaktperson,1,20) = SUBSTRING(inkadresssparb.IKONTAKT,1,20).  
            SUBSTRING(oninenhuvxml.Kontaktperson,21,6) = SUBSTRING(inkadresssparb.IBNR,1,6). 
         END.
      END.
      oninenhuvxml.e-mail = inkadresssparb.IEPOST.
   END. 
   ASSIGN 
   oninenhuvxml.ProjektID = inkadresssparb.ORDERNUMMER 
   oninenhuvxml.Marke =  SUBSTRING(inkadresssparb.MARKERING,1,20)
   oninenhuvxml.Avisering =  SUBSTRING(inkadresssparb.AVISPERS,1,20)
   oninenhuvxml.Leveransdatum =  STRING(inkadresssparb.LEVERANSDATUM,"99-99-99").     
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      /*enligt Onninen FredrikAleninus 20081218*/
      oninenhuvxml.Konto = inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).      
   END.
   ELSE DO:
      oninenhuvxml.Konto = inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).                     
   END.           
   
   IF inkadresssparb.KOMMENTAR NE "" THEN DO:
      komraknare = 0.
      REPEAT:  
          IF komraknare > 240 THEN LEAVE.
          IF SUBSTRING(inkadresssparb.KOMMENTAR,komraknare + 1,40) = "" THEN LEAVE.        
          oninenhuvxml.Kommentarorderhuvud = SUBSTRING(inkadresssparb.KOMMENTAR,komraknare + 1,40) + CHR(10).
          komraknare = komraknare + 40.
      END.    
   END.
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      oninenhuvxml.Kommentarorderhuvud          = "OBS! SPECIFIKA KABELLÄNGDER " + oninenhuvxml.Kommentarorderhuvud.      
   END.    
   ELSE DO:
      oninenhuvxml.Kommentarorderhuvud          = "OBS! HELA KABELLÄNGDER " + oninenhuvxml.Kommentarorderhuvud.
   END.         
   oninenhuvxml.Kommentarorderhuvud = oninenhuvxml.Kommentarorderhuvud + "Kontaktperson inköp:" +  inkadresssparb.IKONTAKT + CHR(10) +
   "Tele:" + STRING(inkadresssparb.ITELE) + " Mobil:" + STRING(inkadresssparb.IMOBIL) + CHR(10) +
   "Kontaktperson teknik:" + STRING(inkadresssparb.TKONTAKT) + CHR(10) + 
   "Tele:" + STRING(inkadresssparb.TTELE) + " Mobil:" + STRING(inkadresssparb.TMOBIL).
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
      oninenhuvxml.Kommentarorderhuvud = oninenhuvxml.Kommentarorderhuvud + oninenhuvxml.Kommentarorderhuvud + CHR(10) +
      "Projektledare:" + STRING(inkadresssparb.PROJEKTLEDARE)  + CHR(10) +
      " Mobil:" + STRING(inkadresssparb.PTELE).        
   END.
      
   IF inkadresssparb.IEPOST = "" THEN DO:
      IF inkadresssparb.LEVFAX NE "" THEN DO:
         oninenhuvxml.Kommentarorderhuvud = oninenhuvxml.Kommentarorderhuvud + CHR(10) + "Orderbekräftelse till faxnr:" + STRING(inkadresssparb.LEVFAX).
      END.
   END.
   IF Guru.Konstanter:globforetag = "VAST" OR Guru.Konstanter:globforetag = "ELPA"  THEN DO: 
      oninenhuvxml.Kommentarorderhuvud = oninenhuvxml.Kommentarorderhuvud + CHR(10) + "får avlämnas utan kvittens".
    /*  SUBSTRING(tidut.UT,1) = "får avlämnas utan kvittens" .*/
   END.      
  
   RUN getfirst_UI IN brwproc[8].   
   RUN getlastkoll_UI IN brwproc[8] (OUTPUT lastbrwrow).
   RUN lastselectdyn_UI IN brwproc[8].
   RUN selectrowid_UI IN brwproc[8] (OUTPUT brwrow).
   REPEAT :      
      IF brwrow = ? THEN LEAVE.
      FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = brwrow NO-LOCK NO-ERROR.
      IF NOT AVAILABLE inkbest_mtrl THEN LEAVE.
      IF inkbest_mtrl.TILL NE "RETUR" THEN DO:              
         CREATE oninendataxml.
         check1 = check1 + 1.      
         ASSIGN  
         oninendataxml.Artikelnr = inkbest_mtrl.ENR        
         oninendataxml.Beskrivning = SUBSTRING(inkbest_mtrl.BENAMNING,1,35)                               
         oninendataxml.Enhet = inkbest_mtrl.ENHET    
         oninendataxml.Antal = TRIM(STRING(inkbest_mtrl.INKANTAL,">>>>9")).
         IF SUBSTRING(oninendataxml.Artikelnr,1,1) = "E" THEN.
         ELSE oninendataxml.Artikelnr = "E" + oninendataxml.Artikelnr. 
         check2 = check2 + inkbest_mtrl.INKANTAL.
         IF visaejpris = TRUE THEN.
         ELSE DO:
            oninendataxml.Pris = TRIM(STRING(inkbest_mtrl.PRISINK,">>>>>9.99")).            
         END.   
      END.   
      IF lastbrwrow = brwrow THEN LEAVE.
      RUN nselectrowid_UI IN brwproc[8] (OUTPUT brwrow).
   END.
   DEFINE VARIABLE uthj AS CHARACTER NO-UNDO.
   IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO: 
      FOR EACH tidut:
         
         uthj = tidut.UT.
         tidut.UT = "".
         tidut.UT = SUBSTRING(uthj,1,92). 
         IF tidut.UT BEGINS "=====" THEN tidut.UT = "=====".
         IF tidut.UT BEGINS "-----" THEN tidut.UT = "-----".
         IF tidut.UT BEGINS "*****" THEN tidut.UT = "*****".
         /*Lena 20160601 Onninen får stopp om det förekommer < eller > i packningsbeskrivningen*/
         tidut.UT = REPLACE(tidut.UT,"<"," ").
         tidut.UT = REPLACE(tidut.UT,">"," ").                  
      END.
   END.    
                
   prognamn = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
   {SESSIONTEMPDIR.I}
   IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN prognamn = webclienttempdir.
   sparfilnamn = prognamn + STRING(TIME) + "UTORDRESP.xml".
   {UTXKMLKOLL.I}
   RUN VALUE(vxmlpro) PERSISTENT SET dynxml (INPUT FALSE).
   ejnivtab = "oninenorderdataxml,oninenpackxml,tidut".
   
   /*<?xml version="1.0" encoding="UTF-8" ?>*/
   RUN creatnodniv_UI IN dynxml (INPUT 3).
   RUN encod_UI IN dynxml (INPUT "ISO-8859-1").
   RUN xmlutstartniv_UI IN dynxml (INPUT "wOrder",INPUT sparfilnamn,INPUT "http://onninen.ESXML.ProjectOrder",INPUT "xmlns:ns0").
   
   
   FOR EACH tempnamn BY tempnamn.ORDNING:
     
      RUN ejblank_UI IN dynxml (INPUT TRUE).
      IF tempnamn.TORGTH:NAME = "TIDUT" THEN DO:
         NEXT.                 
      END.   
      ELSE IF tempnamn.TORGTH:NAME = "oninenorderxml" THEN nivar = 1.
      ELSE IF tempnamn.TORGTH:NAME = "oninenhuvxml" THEN DO:
         nivar = 2.
         RUN ejblank_UI IN dynxml (INPUT FALSE).
      END.   
      ELSE IF tempnamn.TORGTH:NAME = "oninenorderdataxml" THEN nivar = 2.
      ELSE IF tempnamn.TORGTH:NAME = "oninendataxml" THEN DO:
         ASSIGN
         tempnamn.NODTAB = "POSTRAKNARE"
         nivar = 3.
      END.   
      ELSE IF tempnamn.TORGTH:NAME = "oninenpackxml" THEN DO:     
         nivar = 2.
         RUN radbryt_UI IN dynxml (TRUE).         
         kommandoquery = "FOR EACH " + tempnamn.TORGTH:NAME.     
         RUN nivtidut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH, INPUT BUFFER tidut:HANDLE, INPUT kommandoquery,INPUT tempnamn.NODTAB).
         RUN radbryt_UI IN dynxml (FALSE).         
         NEXT.          
      END.
      ELSE nivar = 3. 
      ASSIGN
      kommandoquery = "FOR EACH " + tempnamn.TORGTH:NAME.     
      RUN nivut_UI IN dynxml (INPUT nivar,INPUT tempnamn.NAMNH,INPUT kommandoquery,INPUT tempnamn.NODTAB,INPUT ejnivtab,INPUT "").
      IF tempnamn.TORGTH:NAME = "oninendataxml" THEN DO:
         RUN exdbfaltsatt_UI IN dynxml (INPUT STRING(check1 + check2)).
         RUN extraut_UI IN dynxml (INPUT 1,INPUT "Checksumma").
      END.
                                  
   END.
   /*
   RUN exdbfaltsatt_UI IN dynxml (INPUT STRING(check1 + check2)).
   RUN extraut_UI IN dynxml (INPUT 2,INPUT "Checksumma").
   */
   RUN xmlutslut_UI IN dynxml.
   RUN xmlslut_UI IN dynxml.
   
   RUN radbryt_UI IN dynxml (TRUE).
   RUN PostRaknareUt_UI IN dynxml  (OUTPUT totpostr).
   EMPTY TEMP-TABLE bytxmltemp NO-ERROR. 
   /*
   CREATE bytxmltemp.
   ASSIGN   
   bytxmltemp.ORDNING = 1  
   
   /*<?xml version="1.0" encoding="ISO-8859-1" ?>*/                      
   bytxmltemp.FRAN = '<?xml version="1.0" encoding="ISO-8859-1" ?>'
   bytxmltemp.TILL = "".
   */
   
  
   /*Anders Olsson Elpool i Umeå AB  19 feb 2018 12:28:41 
    
   
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 2
   bytxmltemp.FRAN = '<wOrder xmlns:ns0="http://onninen.ESXML.ProjectOrder">'
   bytxmltemp.TILL = "".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 3
   bytxmltemp.FRAN = '><'
   bytxmltemp.TILL = ">" + CHR(10) + "<".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 4
   bytxmltemp.FRAN = "<Post"
   bytxmltemp.TILL = "<Post ".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 5
   bytxmltemp.FRAN = "</Post"
   bytxmltemp.TILL = "</Post ".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 6
   bytxmltemp.FRAN = "Post nummer"
   bytxmltemp.TILL = "Postnummer".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 7
   bytxmltemp.FRAN = "</wOrder>"
   bytxmltemp.TILL = "".
   
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 8
   bytxmltemp.FRAN = "&amp;"
   bytxmltemp.TILL = "&".
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 9
   bytxmltemp.FRAN = "&lt;"
   bytxmltemp.TILL = "<".
   
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 10
   bytxmltemp.FRAN = "&gt;"
   bytxmltemp.TILL = "<".
   
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 11
   bytxmltemp.FRAN = "&apos;"
   bytxmltemp.TILL = "'".
   
   CREATE bytxmltemp.
   ASSIGN 
   bytxmltemp.ORDNING = 12
   bytxmltemp.FRAN = "&quot;"
   bytxmltemp.TILL = '"'.
   RUN byttxttab_UI IN dynxml (INPUT sparfilnamn,INPUT TABLE bytxmltemp).
  
   IF VALID-HANDLE(dynxml) THEN DELETE PROCEDURE dynxml.
   COPY-LOB FROM  FILE sparfilnamn TO infillong.
  */
   
   IF VALID-HANDLE(dynxml) THEN DELETE PROCEDURE dynxml.
   COPY-LOB FROM  FILE sparfilnamn TO infillong.
   infillong = REPLACE(infillong,'<wOrder xmlns:ns0="http://onninen.ESXML.ProjectOrder">','<!-- SEMAIDPOST+5565027223+SE5563719474+ORDERS -->').
   /*infillong = REPLACE(infillong,'><','>" + CHR(10) + "<').*/
   /*
   infillong = REPLACE(infillong,'<Post','<Post ').
   infillong = REPLACE(infillong,'</Post','</Post ').
   */
   /*
   infillong = REPLACE(infillong,'<Postnumber','<Post number="').
   infillong = REPLACE(infillong,'</Postnumber','</Post').
   */
   
   infillong = REPLACE(infillong,'</wOrder>','').
   infillong = REPLACE(infillong,'&amp;','&').
   infillong = REPLACE(infillong,'&lt;','<').
   infillong = REPLACE(infillong,'&gt','<').
   infillong = REPLACE(infillong,'&apos;',"'").
   infillong = REPLACE(infillong,'&quot;','"').
   DEFINE VARIABLE itotpostr AS INTEGER NO-UNDO.
   itotpostr = 1.
   DO WHILE itotpostr <=  totpostr:
      infillong = REPLACE(infillong,'<Postnumber' + STRING(itotpostr) ,'<Post number="' + STRING(itotpostr) + '"').
      infillong = REPLACE(infillong,'</Postnumber' + STRING(itotpostr) ,'</Post').
      itotpostr = itotpostr + 1.  
   END.
  
  
   EMPTY TEMP-TABLE felmeddftptemp NO-ERROR.   
   RUN skickaonninen_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER, INPUT infillong ,OUTPUT TABLE felmeddftptemp).
   /*
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
   END.
   */
   
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END. 
   /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN DO:
      OS-COPY VALUE(sparfilnamn) VALUE(prognamn + STRING(inkadresssparb.ORDERNUMMER) + ".guru" + STRING(TODAY,"999999") + STRING(TIME)).
   END.
   */
   OS-DELETE VALUE(sparfilnamn) NO-ERROR.
   /*
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE THEN DO:
      MESSAGE "Beställningen finns sparad i " prognamn + STRING(inkadresssparb.ORDERNUMMER) + ".guru" + STRING(TODAY,"999999") + STRING(TIME)
      VIEW-AS ALERT-BOX.
   END.
   */
   kontrollbest = TRUE. 
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
END PROCEDURE.

PROCEDURE bestonninenXML_UI :
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   DEFINE VARIABLE lastbrwrow AS ROWID NO-UNDO.
   DEFINE VARIABLE komraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE check1 AS INTEGER NO-UNDO.
   DEFINE VARIABLE check2 AS INTEGER NO-UNDO.
   DEFINE VARIABLE infillong AS LONGCHAR NO-UNDO.
   DEFINE VARIABLE Packfillong AS LONGCHAR NO-UNDO.
   DEFINE VARIABLE totpostr AS INTEGER NO-UNDO.
   DEFINE VARIABLE cSourceType AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cTargetType AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cReadMode AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cSchemaLocation AS CHARACTER NO-UNDO.
   DEFINE VARIABLE lOverrideDefaultMapping AS LOGICAL NO-UNDO.
   DEFINE VARIABLE cFieldTypeMapping AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cVerifySchemaMode AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cEncoding AS CHARACTER NO-UNDO.
   DEFINE VARIABLE lFormatted AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lWriteSchema AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lMinSchema AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lWriteBeforeImage AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lReturn AS LOGICAL NO-UNDO.
   DEFINE VARIABLE hPDS AS HANDLE NO-UNDO.
   DEFINE VARIABLE omitinitialvalues AS LOGICAL NO-UNDO.
   EMPTY TEMP-TABLE tempnamn NO-ERROR.
   EMPTY TEMP-TABLE OrderOnni NO-ERROR. 
   EMPTY TEMP-TABLE OrderOnniHuv NO-ERROR.
   EMPTY TEMP-TABLE OrderOnniData NO-ERROR. 

   
   RUN konstskap_UI. 
   CREATE OrderOnni.
   OrderOnni.SystemID = "GURU". 
   
  
   CREATE OrderOnniHuv.
   ASSIGN     
   OrderOnniHuv.Dokumenttyp = "Beställning"
   OrderOnniHuv.Datum = STRING(TODAY,"99-99-99")
   OrderOnniHuv.Tid = STRING(TIME,"HH:MM:SS").
   IF Guru.Konstanter:globforetag = "VAST"  THEN DO:
      OrderOnniHuv.Kundnummer = STRING(inkadresssparb.KUNDNR,"99999").
   END.
   ELSE IF Guru.Konstanter:globforetag = "KRIN"  THEN DO:
      OrderOnniHuv.Kundnummer = STRING(inkadresssparb.KUNDNR,"9999999").
   END.
   ELSE DO:
      OrderOnniHuv.Kundnummer = STRING(inkadresssparb.KUNDNR,"999999").
   END.
   IF Guru.Konstanter:globforetag = "GKAL" THEN OrderOnniHuv.Organisationsnr = "5561827543".       
   ELSE IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT"  THEN OrderOnniHuv.Organisationsnr = "5565027223".
   ELSE IF Guru.Konstanter:globforetag = "VAST" THEN OrderOnniHuv.Organisationsnr = "5564170800".
   ELSE IF Guru.Konstanter:globforetag = "BORL" THEN OrderOnniHuv.Organisationsnr = "560055385".
   ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN OrderOnniHuv.Organisationsnr = "5560757287".
   ELSE IF Guru.Konstanter:globforetag = "KRIN" THEN OrderOnniHuv.Organisationsnr = "5561009852".
   ELSE OrderOnniHuv.Organisationsnr = "".
   ASSIGN
   OrderOnniHuv.FIRMA = inkadresssparb.FORETAG
   OrderOnniHuv.Gatuadress = inkadresssparb.LEVADRESS
   OrderOnniHuv.Postnummer = STRING(REPLACE(inkadresssparb.LEVPNR," ",""),"99999") 
   OrderOnniHuv.ORT = inkadresssparb.LEVORT.  
   IF inkadresssparb.IKONTAKT NE "" THEN DO:
      OrderOnniHuv.Kontaktperson = SUBSTRING(inkadresssparb.IKONTAKT,1,20).
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
         IF inkadresssparb.IBNR NE "" THEN DO:
            OrderOnniHuv.Kontaktperson = "".
            SUBSTRING(OrderOnniHuv.Kontaktperson,1,20) = SUBSTRING(inkadresssparb.IKONTAKT,1,20).  
            SUBSTRING(OrderOnniHuv.Kontaktperson,21,6) = SUBSTRING(inkadresssparb.IBNR,1,6). 
         END.
      END.
      OrderOnniHuv.e-mail = inkadresssparb.IEPOST.
   END. 
   ASSIGN 
   OrderOnniHuv.ProjektID = inkadresssparb.ORDERNUMMER 
   OrderOnniHuv.Marke =  SUBSTRING(inkadresssparb.MARKERING,1,20)
   OrderOnniHuv.Avisering =  SUBSTRING(inkadresssparb.AVISPERS,1,20)
   OrderOnniHuv.Leveransdatum =  STRING(inkadresssparb.LEVERANSDATUM,"99-99-99").     
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      /*enligt Onninen FredrikAleninus 20081218*/
      OrderOnniHuv.Konto = inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).      
   END.
   ELSE DO:
      OrderOnniHuv.Konto = inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).                     
   END.           
   
   IF inkadresssparb.KOMMENTAR NE "" THEN DO:
      komraknare = 0.
      REPEAT:  
          IF komraknare > 240 THEN LEAVE.
          IF SUBSTRING(inkadresssparb.KOMMENTAR,komraknare + 1,40) = "" THEN LEAVE.        
          OrderOnniHuv.Kommentarorderhuvud = SUBSTRING(inkadresssparb.KOMMENTAR,komraknare + 1,40) + CHR(10).
          komraknare = komraknare + 40.
      END.    
   END.
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      OrderOnniHuv.Kommentarorderhuvud          = "OBS! SPECIFIKA KABELLÄNGDER " + OrderOnniHuv.Kommentarorderhuvud.      
   END.    
   ELSE DO:
      OrderOnniHuv.Kommentarorderhuvud          = "OBS! HELA KABELLÄNGDER " + OrderOnniHuv.Kommentarorderhuvud.
   END.         
   OrderOnniHuv.Kommentarorderhuvud = OrderOnniHuv.Kommentarorderhuvud + "Kontaktperson inköp:" +  inkadresssparb.IKONTAKT + CHR(10) +
   "Tele:" + STRING(inkadresssparb.ITELE) + " Mobil:" + STRING(inkadresssparb.IMOBIL) + CHR(10) +
   "Kontaktperson teknik:" + STRING(inkadresssparb.TKONTAKT) + CHR(10) + 
   "Tele:" + STRING(inkadresssparb.TTELE) + " Mobil:" + STRING(inkadresssparb.TMOBIL).
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
      OrderOnniHuv.Kommentarorderhuvud = OrderOnniHuv.Kommentarorderhuvud + OrderOnniHuv.Kommentarorderhuvud + CHR(10) +
      "Projektledare:" + STRING(inkadresssparb.PROJEKTLEDARE)  + CHR(10) +
      " Mobil:" + STRING(inkadresssparb.PTELE).        
   END.
      
   IF inkadresssparb.IEPOST = "" THEN DO:
      IF inkadresssparb.LEVFAX NE "" THEN DO:
         OrderOnniHuv.Kommentarorderhuvud = OrderOnniHuv.Kommentarorderhuvud + CHR(10) + "Orderbekräftelse till faxnr:" + STRING(inkadresssparb.LEVFAX).
      END.
   END.
   IF Guru.Konstanter:globforetag = "VAST" OR Guru.Konstanter:globforetag = "ELPA"  THEN DO: 
      OrderOnniHuv.Kommentarorderhuvud = OrderOnniHuv.Kommentarorderhuvud + CHR(10) + "får avlämnas utan kvittens".
    /*  SUBSTRING(tidut.UT,1) = "får avlämnas utan kvittens" .*/
   END.      
   OrderOnniHuv.RID = RECID(OrderOnni).
   RUN getfirst_UI IN brwproc[8].   
   RUN getlastkoll_UI IN brwproc[8] (OUTPUT lastbrwrow).
   RUN lastselectdyn_UI IN brwproc[8].
   RUN selectrowid_UI IN brwproc[8] (OUTPUT brwrow).
   CREATE OrderOnniData.
   OrderOnniData.RID = RECID(OrderOnni).
   CREATE OrderOnniCheck.
   OrderOnniCheck.RID = RECID(OrderOnni).
   REPEAT :      
      IF brwrow = ? THEN LEAVE.
      FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = brwrow NO-LOCK NO-ERROR.
      IF NOT AVAILABLE inkbest_mtrl THEN LEAVE.
      IF inkbest_mtrl.TILL NE "RETUR" THEN DO:              
         CREATE OrderOnniPost.
         check1 = check1 + 1.      
         ASSIGN  
         OrderOnniPost.Number = check1 
         OrderOnniPost.Artikelnr = inkbest_mtrl.ENR        
         OrderOnniPost.Beskrivning = SUBSTRING(inkbest_mtrl.BENAMNING,1,35)                               
         OrderOnniPost.Enhet = inkbest_mtrl.ENHET    
         OrderOnniPost.Antal = TRIM(STRING(inkbest_mtrl.INKANTAL,">>>>9")).
         IF SUBSTRING(OrderOnniPost.Artikelnr,1,1) = "E" THEN.
         ELSE OrderOnniPost.Artikelnr = "E" + OrderOnniPost.Artikelnr. 
         check2 = check2 + inkbest_mtrl.INKANTAL.
         IF visaejpris = TRUE THEN.
         ELSE DO:
            OrderOnniPost.Pris = TRIM(STRING(inkbest_mtrl.PRISINK,">>>>>9.99")).            
         END.   
         OrderOnniPost.RID = RECID(OrderOnniData).
      END.   
      IF lastbrwrow = brwrow THEN LEAVE.
      RUN nselectrowid_UI IN brwproc[8] (OUTPUT brwrow).
   END.
   
   
   
   DEFINE VARIABLE uthj AS CHARACTER NO-UNDO.
   IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO:
     
      OrderOnniCheck.PACKNING ="JA".
      FOR EACH tidut:
         uthj = tidut.UT.
         tidut.UT = "".
         tidut.UT = SUBSTRING(uthj,1,92). 
         IF tidut.UT BEGINS "=====" THEN tidut.UT = "=====".
         IF tidut.UT BEGINS "-----" THEN tidut.UT = "-----".
         IF tidut.UT BEGINS "*****" THEN tidut.UT = "*****".
         /*Lena 20160601 Onninen får stopp om det förekommer < eller > i packningsbeskrivningen*/
         tidut.UT = REPLACE(tidut.UT,"<"," ").
         tidut.UT = REPLACE(tidut.UT,">"," "). 
         Packfillong = Packfillong + " " + tidut.UT + CHR(10).                 
      END.
   END.    
   OrderOnniCheck.Checksumma = check1 + check2.                
   
   hPDS = DATASET OnninenXmlDs:HANDLE.
   ASSIGN
   cTargetType = "LONGCHAR"
   lFormatted = FALSE
   cEncoding = "ISO-8859-1"
   cSchemaLocation = ?
   
   lWriteSchema = FALSE
   lMinSchema = FALSE
   lWriteBeforeImage = FALSE
   omitinitialvalues = FALSE.
   lReturn = hPDS:WRITE-XML(cTargetType, infillong, lFormatted,cEncoding, cSchemaLocation, lMinSchema, lWriteBeforeImage,omitinitialvalues).
   infillong = REPLACE(infillong,'<OnninenXmlDs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">','<!-- SEMAIDPOST+5565027223+SE5563719474+ORDERS -->').
   infillong = REPLACE(infillong,'</OnninenXmlDs>','').
   infillong = REPLACE(infillong,'<OrderOnniCheck>',''). 
   infillong = REPLACE(infillong,'</OrderOnniCheck>','').
   IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO:
      infillong = REPLACE(infillong,'<PACKNING>JA</PACKNING>','<Packningsbeskrivning>' + Packfillong + '</Packningsbeskrivning>'). 
   END.
   /*
   COPY-LOB FROM infillong TO FILE 'C:\protemp11\elpao\tonni.xml'.
*/
   EMPTY TEMP-TABLE felmeddftptemp NO-ERROR.   
   RUN skickaonninen_UI IN inkberh (INPUT inkadresssparb.ORDERNUMMER, INPUT infillong ,OUTPUT TABLE felmeddftptemp).
   /*
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
   END.
   */
   inkadresssparb.SKICKATSTATUS = "".
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END. 
   kontrollbest = TRUE. 
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
END PROCEDURE.
 

   
PROCEDURE bestOneNordic_UI :
   DEFINE VARIABLE cSourceType AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cTargetType AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cReadMode AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cSchemaLocation AS CHARACTER NO-UNDO.
   DEFINE VARIABLE lOverrideDefaultMapping AS LOGICAL NO-UNDO.
   DEFINE VARIABLE cFieldTypeMapping AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cVerifySchemaMode AS CHARACTER NO-UNDO.
   DEFINE VARIABLE cEncoding AS CHARACTER NO-UNDO.
   DEFINE VARIABLE lFormatted AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lWriteSchema AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lMinSchema AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lWriteBeforeImage AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lReturn AS LOGICAL NO-UNDO.
   DEFINE VARIABLE hPDS AS HANDLE NO-UNDO.
   DEFINE VARIABLE omitinitialvalues AS LOGICAL NO-UNDO.
   DEFINE VARIABLE Attachmenthelp AS CHARACTER NO-UNDO.
   DEFINE VARIABLE todayvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE alltok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE uthj AS CHARACTER NO-UNDO.
   DEFINE VARIABLE infillong AS MEMPTR NO-UNDO.
   DEFINE VARIABLE dbnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE utfillong AS LONGCHAR NO-UNDO.
   DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sparfilnamn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nivar AS INTEGER NO-UNDO.
   DEFINE VARIABLE ejnivtab AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE resultvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE inlasok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE kablangtxt AS CHARACTER NO-UNDO.
   EMPTY TEMP-TABLE mtr500tt NO-ERROR. 
   /*
   RUN OneNordic500_UI IN inkberh (OUTPUT DATASET mtr500ttDS).
   */
   /*onees
               om inkadresssparb.IEXTRAINT[1] = 1 = projekt lev
               inkadresssparb.IEXTRAINT[1] = 2 snabb lev
               inkadresssparb.IEXTRAINT[1] = 4 = UPPLAG
               */
               
  /*Anders Olsson Elpool i Umeå AB  4 okt 2017 09:10:25 */
   IF Guru.Konstanter:globforetag = "GRAN" THEN.   
   ELSE IF inkadresssparb.LEVNAMN = "Elektroskandia" THEN DO:
      RUN INKEPOSTES.W (INPUT c-win:TITLE).
   END.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      RUN bestGuru_UI.
      RETURN.
   END.      
   kontrollbest = TRUE.    
   
END PROCEDURE.
   
PROCEDURE bestskaptidin_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO.
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.
   DEFINE VARIABLE danv AS CHARACTER NO-UNDO.
   DEFINE VARIABLE skapbestdepao AS LOGICAL NO-UNDO. 
   DEFINE VARIABLE adressfinns AS LOGICAL NO-UNDO.  
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   totalsum = 0.  
   antraknare = 1.
   
   IF vad <= 9 THEN DO:
      IF brwh[7]:NUM-SELECTED-ROWS = 0 THEN DO:
         MESSAGE "Ingen vald!"
         VIEW-AS ALERT-BOX.
         RETURN.
      END.   
      DO WHILE antraknare LE brwh[7]:NUM-SELECTED-ROWS:
         RUN fetrowid_UI IN brwproc[7] (INPUT antraknare, OUTPUT brwrowut).
         FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = brwrowut NO-LOCK NO-ERROR.
         RUN setlastrowid_UI IN brwproc[7] (INPUT ROWID(inkadresssparb)).
         RUN laddaadress_UI.                   
        
         RUN adresskoll_UI.
         IF feladresskoll = TRUE THEN DO:
            feladresskoll = FALSE.
            RETURN.         
         END.                     
         ELSE DO:
            IF felpaAdressBestOrdning = "" THEN.
            ELSE DO:
               MESSAGE felpaAdressBestOrdning
               VIEW-AS ALERT-BOX.
               RETURN.
            END.   
            RUN fbtnsnabb_UI.
            EMPTY TEMP-TABLE Einkadresskoptemp NO-ERROR.
            CREATE Einkadresskoptemp.
            BUFFER-COPY inkadresssparb TO Einkadresskoptemp.
            RUN InkAddkoll_UI IN inkberh (INPUT TABLE Einkadresskoptemp, OUTPUT adressfinns).
            EMPTY TEMP-TABLE Einkadresskoptemp NO-ERROR.  
            IF adressfinns = FALSE THEN DO:
               MESSAGE 
               "Nu är det något tekniskt fel på ditt inköp! Kontakta Elpool 090-184540!" SKIP
               "Ange Adress saknas!   Best.Ord = " + STRING(inkadresssparb.BESTORDNING) + 
               " Uniktvärde INKID = " + STRING(inkadresssparb.INKID)
               VIEW-AS ALERT-BOX.
               RETURN.
            END.   
            IF vad = 1 OR vad = 2 THEN DO:
                              
               /*
               MESSAGE "Vill du visa beställningen med pris?" VIEW-AS ALERT-BOX
               QUESTION BUTTONS YES-NO TITLE "Pris?" UPDATE svarpris AS LOGICAL.
               IF svarpris THEN visaejpris = FALSE.  
               ELSE visaejpris = TRUE.
               */
               vistogpris = TRUE.
               visabygg = FALSE.
               visauppl = FALSE.
               visatoms = TRUE.
               visaskylt = FALSE.
               visastolp = FALSE.
               IF Guru.Konstanter:globforetag = "cGRAN"  OR Guru.Konstanter:globforetag = "VAST"  THEN vistogpris = FALSE.
     
                                    /* VISA MANBEST EBEST*/ /*LEVERANTÖR*/  /*SNABB-PROJ*/                      /*VISA PRIS*/          /* MTRLSAM*/           /* MTRLSAMMUPP*/    
               RUN INKVALVISA.W (INPUT vad,INPUT inkadresssparb.LEVKODINK,INPUT inkadresssparb.IEXTRAINT[1],INPUT-OUTPUT vistogpris,INPUT-OUTPUT visatoms, INPUT-OUTPUT visauppl,INPUT-OUTPUT visabygg,
                                         /*TOG_DELAUPP Dela upp mtrlantal*/
               INPUT-OUTPUT  visaskylt,INPUT-OUTPUT  visadelaupp,INPUT-OUTPUT  visadelamed,INPUT-OUTPUT  visastolp ).
               IF musz = TRUE THEN DO:
                  musz = FALSE.
                  RETURN.
               END.   
               IF vistogpris THEN visaejpris = FALSE.  
               ELSE visaejpris = TRUE.
               RUN bestpaskarmhuv_UI.
               IF visatoms = TRUE THEN RUN bestpaskarmrubrik_UI.
               IF visadelaupp = TRUE THEN RUN visadelupp_UI (INPUT vad).
               IF visastolp = TRUE THEN RUN stoplpprot_UI.
               RUN bestpaskarmmtrl_UI.
    
               IF inkadresssparb.IEXTRAINT[1] = 2 THEN.
               ELSE DO:
                  IF visauppl = TRUE THEN RUN bestpaskarmbygg_UI.
                  visatoms = FALSE.  
                  visauppl = FALSE.
                  IF visabygg THEN RUN bestpaskarmbygg_UI.  
               END.   
              
    
               IF vad = 1 THEN DO:        
                  {AVBGOM2.I}
                  excelnamn = inkadresssparb.ORDERNUMMER + ".xls".
                  RUN INKVISA.W (INPUT excelnamn, INPUT TABLE stolpink_mtrl).
                  EMPTY TEMP-TABLE stolpink_mtrl NO-ERROR. 
                  excelnamn = "".
                  {AVBFRAM2.I}
               END.
               IF vad = 2 THEN DO:  
                  RUN fbtnsnabb_UI.     
                               
                  /*SNAT JAN2020*/                  
                  /*RUN dbcoll_UI IN inkberh (OUTPUT dbasnamn).                                            
                  IF dbasnamn BEGINS "UTBI" OR dbasnamn = "SNATUTBI" /*OR dbasnamn = "SUNDNAT"*/ THEN DO:*/
                  /*kör bara i utbildningsdatabas hos SNAT */                                          
                  IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:                             
                     FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = brwrowut NO-LOCK NO-ERROR.
                     IF inkadresssparb.LEVKODINK = "0" THEN DO:                        
                        EMPTY TEMP-TABLE depkolltemp NO-ERROR.
                        FOR EACH inkbest_mtrl WHERE inkbest_mtrl.DEPNRINK > 0:
                           FIND FIRST depkolltemp WHERE depkolltemp.DEPNRINK = inkbest_mtrl.DEPNRINK NO-ERROR.
                           IF NOT AVAILABLE depkolltemp THEN DO:
                              CREATE depkolltemp.   
                              ASSIGN 
                              depkolltemp.DEPNRINK = inkbest_mtrl.DEPNRINK
                              depkolltemp.PROJDEPNRINK = inkbest_mtrl.PROJDEPNRINK.
                           END.   
                        END.
                        FOR EACH depkolltemp WHERE depkolltemp.DEPNRINK > 0:
                           EMPTY TEMP-TABLE felmeddftptemp  NO-ERROR. 
                           RUN anvdepkollinkop_UI IN inkberh (INPUT depkolltemp.DEPNRINK ,INPUT Guru.Konstanter:globanv ,OUTPUT danv,OUTPUT TABLE felmeddftptemp ).
                           FIND FIRST felmeddftptemp NO-ERROR.
                           IF AVAILABLE felmeddftptemp THEN DO:                              
                              MESSAGE felmeddftptemp.FELMEDD VIEW-AS ALERT-BOX.            
                              DELETE felmeddftptemp.
                              RETURN NO-APPLY.
                           END.
                           ELSE DO:
                              RUN anvdeplas_UI IN inkberh (INPUT depkolltemp.DEPNRINK,INPUT Guru.Konstanter:globanv, INPUT "Inköp" ).
                           END.   
                        END.  
                     END.                           
                  END.   
   DEBUGGER:SET-BREAK().
                  kontrollbest = FALSE.                  
                  /*SNAT JAN2020*/
                  IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN kontrollbest = TRUE.
                  /*RUN dbcoll_UI IN inkberh (OUTPUT dbasnamn).                          
                  IF dbasnamn BEGINS "UTBI" OR dbasnamn = "SNATUTBI" /*OR dbasnamn = "SUNDNAT"*/ THEN DO:
                     /*kör bara i utbildningsdatabas hos SNAT*/                                                 
                     IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN kontrollbest = TRUE.
                  END.*/
                  IF kontrollbest = TRUE THEN.                   
                  ELSE  RUN manbestsatt_UI.
                  RUN bestadress_UI (INPUT vad).
                  
                  IF felpaAdressBestOrdning = "" THEN DO:
                     skapbestdepao = FALSE.
                     IF kontrollbest = TRUE THEN skapbestdepao = TRUE.
                     RUN bestklar_UI.
                     
                     /*SNAT JAN2020*/
                     /*RUN dbcoll_UI IN inkberh (OUTPUT dbasnamn).                          
                     IF dbasnamn BEGINS "UTBI" OR dbasnamn = "SNATUTBI" /*OR dbasnamn = "SUNDNAT"*/ THEN DO:*/
                     /*kör bara i utbildningsdatabas hos SNAT*/                                                 
                     IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
                        IF skapbestdepao = TRUE THEN DO: 
                           RUN kopplatstrum_UI.
                           RUN maneposttrumma_UI.
                        
                           skapbestdepao = FALSE.
                        END.   
                        FOR EACH depkolltemp WHERE depkolltemp.DEPNRINK > 0:
                           RUN anvdeplbort_UI IN inkberh (INPUT depkolltemp.DEPNRINK ).
                        END.   
                     END.                     
                                                                         
                  END.    
                  ELSE DO:
                  /*   IF dbasnamn BEGINS "UTBI" OR dbasnamn = "SNATUTBI" THEN DO:*/
                        IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
                           FOR EACH depkolltemp WHERE depkolltemp.DEPNRINK > 0:
                              RUN anvdeplbort_UI IN inkberh (INPUT depkolltemp.DEPNRINK ).
                           END.
                        END.
                     END.      
                     RETURN.
                  /*END.                                */
               END.
            END.     
            IF vad = 3 THEN DO:
               /*onees
               om inkadresssparb.IEXTRAINT[1] = 1 = projekt lev
               inkadresssparb.IEXTRAINT[1] = 2 snabb lev
              
               */
               /*Anders Olsson Elpool i Umeå AB  22 dec 2020 09:39:31 
               KOMMER INTE ATT BEHÖVAS DÅ DE VÄLJER I ADRESS BILDEN 
               
               IF Guru.Konstanter:globforetag = "GRAN" OR  Guru.Konstanter:globforetag = "ELPA" THEN DO:
                  IF inkadresssparb.IEXTRAINT[1] = 1 AND Guru.Konstanter:AppSpringSet[1] = "ONENOUTBI" THEN.
                  
                  /*
                   IF inkadresssparb.IEXTRAINT[1] = 1 AND Guru.Konstanter:AppSpringSet[1] = "ONENOUTBI" THEN DO:
                     RUN INKPACK.W (OUTPUT inkadresssparb.IEXTRAINT[2]).
                     IF Guru.GlobalaVariabler:avbryt_musz = TRUE THEN DO:
                        Guru.GlobalaVariabler:avbryt_musz = FALSE.
                        RETURN. 
                     END.
                  END.
                  */ 
                  ELSE IF inkadresssparb.IEXTRAINT[1] = 1 AND inkadresssparb.LEVNAMN = "Elektroskandia" THEN DO:
                     RUN INKPACK.W (OUTPUT inkadresssparb.IEXTRAINT[2]).
                     IF Guru.GlobalaVariabler:avbryt_musz = TRUE THEN DO:
                        Guru.GlobalaVariabler:avbryt_musz = FALSE.
                        RETURN. 
                     END.   
                  END.
               END.
               */

               RUN fbtnsnabb_UI.
               RUN ehandelskap_UI.
               IF Guru.Konstanter:globforetag = "snat" THEN DO:                                   
                   /*även epost ska skickas 
                   skapa excelfilen innan brw 8 är tömd*/   
                  RUN ehandmail2_UI (OUTPUT orgdir).                      
               END.
               RUN bestadress_UI (INPUT vad).
               IF felpaAdressBestOrdning = "" THEN DO:
                   skapbestdepao = FALSE.
                   IF kontrollbest = TRUE THEN skapbestdepao = TRUE.
                   RUN bestklar_UI.
                   /*SNAT JAN2020*/                                                               
                   IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
                      IF skapbestdepao = TRUE THEN RUN kopplatstrum_UI.
                      skapbestdepao = FALSE.
                   END.
                   IF Guru.Konstanter:globforetag = "snat" THEN DO:                      
                      /*även epost ska skickas 
                      lägg till excelark till epost*/                           
                      RUN SPECIALMAPITO.P (INPUT bepost, INPUT "Beställning " + Guru.Konstanter:gaok + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]), INPUT "", INPUT kommando2).   
                      RUN SetCurrentDirectoryA IN Guru.Konstanter:hpApi  (INPUT orgdir).
                      excelnamn = "".
                      {musarrow.i}    
                      IF kommando2 NE "" THEN OS-DELETE VALUE(kommando2) NO-ERROR.
                   END.                      
                END.   
               ELSE RETURN.
   
            END.   
         END.         
         EMPTY TEMP-TABLE tidut NO-ERROR.                                        
         antraknare = antraknare + 1.
      END.
   END.
   IF vad > 10 THEN DO:
      IF brwh[15]:NUM-SELECTED-ROWS = 0 THEN DO:
         MESSAGE "Ingen vald!"
         VIEW-AS ALERT-BOX.
         RETURN.
      END.   
      
      DO WHILE antraknare LE brwh[15]:NUM-SELECTED-ROWS:
         RUN fetrowid_UI IN brwproc[15] (INPUT antraknare, OUTPUT brwrowut).
         FIND FIRST tidinkadresstemp WHERE ROWID(tidinkadresstemp) = brwrowut NO-LOCK NO-ERROR.
         FIND FIRST inkadresssparb WHERE inkadresssparb.INKBESTID = tidinkadresstemp.INKBESTID NO-LOCK NO-ERROR.
         
         RUN setlastrowid_UI IN brwproc[15] (INPUT ROWID(tidinkadresstemp)).
         
         IF vad = 11 OR vad = 12 THEN DO:
            
            /*
            MESSAGE "Vill du visa beställningen med pris?" VIEW-AS ALERT-BOX
            QUESTION BUTTONS YES-NO TITLE "Pris?" UPDATE svarpris.
            IF svarpris THEN visaejpris = FALSE.
            ELSE visaejpris = TRUE.
            */
            vistogpris = TRUE.
            visabygg = FALSE.
            visauppl = FALSE.
            visatoms = TRUE.
            visaskylt = FALSE.
            visastolp = FALSE.
            IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "VAST" THEN vistogpris = FALSE.
            /*
                            /* VISA MANBEST EBEST*/ /*LEVERANTÖR*/          /*VISA PRIS*/          /* MTRLSAMg*/           /* MTRLSAMMUPP*/ 
            RUN INKVALVISA.W (INPUT vad,INPUT inkadresssparb.LEVKODINK,INPUT-OUTPUT vistogpris,input-output visatoms, INPUT-OUTPUT  visauppl, INPUT-OUTPUT  visaskylt
            /*TOG_DELAUPP Dela upp mtrlantal*/
            ,INPUT-OUTPUT  visadelaupp,INPUT-OUTPUT  visadelamed,INPUT-OUTPUT  visastolp).
            */
                                              /* VISA MANBEST EBEST*/ /*LEVERANTÖR*/  /*SNABB-PROJ*/                      /*VISA PRIS*/          /* MTRLSAM*/           /* MTRLSAMMUPP*/    
            RUN INKVALVISA.W (INPUT vad,INPUT inkadresssparb.LEVKODINK,INPUT inkadresssparb.IEXTRAINT[1],INPUT-OUTPUT vistogpris,INPUT-OUTPUT visatoms, INPUT-OUTPUT visauppl,INPUT-OUTPUT visabygg,
                                         /*TOG_DELAUPP Dela upp mtrlantal*/
            INPUT-OUTPUT  visaskylt,INPUT-OUTPUT  visadelaupp,INPUT-OUTPUT  visadelamed,INPUT-OUTPUT  visastolp ).

            IF musz = TRUE THEN DO:
               musz = FALSE.
               RETURN.
            END.   
            IF vistogpris THEN visaejpris = FALSE.  
            ELSE visaejpris = TRUE.
            RUN bestpaskarmhuv_UI.
            IF visatoms = TRUE THEN RUN bestpaskarmrubrik_UI.
            IF visadelaupp = TRUE THEN RUN visadelupp_UI(INPUT vad).   
            IF visastolp = TRUE THEN RUN stoplpprot_UI.      
            RUN bestpaskarmmtrl_UI.
            IF inkadresssparb.IEXTRAINT[1] = 2 THEN.
            ELSE DO:
               IF visauppl = TRUE THEN RUN bestpaskarmbygg_UI.
               visatoms = FALSE.  
               visauppl = FALSE.
               IF visabygg THEN RUN bestpaskarmbygg_UI. 
            END.
            IF  vad = 11 OR vad = 12 THEN DO:
               IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
                  /*test att visa tummor-redan gjord beställning  Lena 20191114*/
                  EMPTY TEMP-TABLE ilagertrum NO-ERROR.
                  EMPTY TEMP-TABLE eutaobest_mtrl NO-ERROR. 
                  
                  IF VALID-HANDLE(leveransaoapph)  THEN RUN hmttrumbestdepao_UI IN leveransaoapph (INPUT inkadresssparb.ORDERNUMMER, OUTPUT TABLE ilagertrum, OUTPUT TABLE eutaobest_mtrl ).
                  FIND FIRST ilagertrum   NO-LOCK NO-ERROR.
                  IF AVAILABLE ilagertrum THEN DO:
                     CREATE tidut.
                     CREATE tidut.
                     ASSIGN
                     SUBSTRING(tidut.UT,1) = "Följande trummor är bokade:".
                     FOR EACH ilagertrum USE-INDEX ENR NO-LOCK:
                        CREATE tidut. 
                        ASSIGN
                        SUBSTRING(tidut.UT,1) = "Depå " + STRING(ilagertrum.DEPNR) + " " +  ilagertrum.TRUMMAPLATS + " enr "  +  ilagertrum.ENR + " " + STRING(ilagertrum.LAGMETER) + " m".                    
                        CREATE tidut.                
                     END.
                  END.
                  FIND FIRST eutaobest_mtrl  NO-LOCK NO-ERROR.
                  IF AVAILABLE eutaobest_mtrl THEN DO:   
                     CREATE tidut.
                     CREATE tidut.
                     ASSIGN
                     SUBSTRING(tidut.UT,1) = "Följande uttag från depå är gjorda:".
                     FOR EACH eutaobest_mtrl USE-INDEX DEPNR NO-LOCK:
                        CREATE tidut. 
                        ASSIGN
                        SUBSTRING(tidut.UT,1) = "Depå " + STRING(eutaobest_mtrl.DEPNR) + " enr "  +  eutaobest_mtrl.ENR + " " +   STRING(eutaobest_mtrl.ANTAL) + " " + eutaobest_mtrl.ENHET .                    
                        CREATE tidut.       
                     END.
                  END.   
               END.   
            END.   
            IF vad = 11 THEN DO:        
               {AVBGOM2.I}                                             
               excelnamn = inkadresssparb.ORDERNUMMER + ".xls".
               RUN INKVISA.W (INPUT excelnamn, INPUT TABLE stolpink_mtrl).
               EMPTY TEMP-TABLE stolpink_mtrl NO-ERROR. 
               
               {AVBFRAM2.I}
            END.
            IF vad = 12 THEN DO:
              
               RUN manbestsatt_UI.
               RUN bestadress_UI (INPUT vad).
               IF felpaAdressBestOrdning = "" THEN RUN bestklar_UI.
               ELSE RETURN.
            END.
         END.     
         IF vad = 13 THEN DO:
            RUN ehandelskap_UI.
            RUN bestadress_UI (INPUT vad).            
            IF felpaAdressBestOrdning = "" THEN RUN bestklar_UI.
            ELSE RETURN.
            
         END.   
                  
         EMPTY TEMP-TABLE tidut NO-ERROR.                                        
         antraknare = antraknare + 1.
      END.
   END. 
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.   
END PROCEDURE.
PROCEDURE uttabelektro_UI :
   EMPTY TEMP-TABLE tempnamn NO-ERROR. 
   CREATE tempnamn.
   tempnamn.NAMNH = BUFFER ProjectOrder:HANDLE.
   tempnamn.TORGTH = TEMP-TABLE ProjectOrder:HANDLE.
   tempnamn.NODTAB = "ProjectOrder".
   CREATE tempnamn.
   tempnamn.NAMNH = BUFFER tempheader:HANDLE.
   tempnamn.TORGTH = TEMP-TABLE tempheader:HANDLE.
   tempnamn.NODTAB = "tempheader".
   CREATE tempnamn.
   tempnamn.NAMNH = BUFFER tempmessage:HANDLE.
   tempnamn.TORGTH = TEMP-TABLE tempmessage:HANDLE.
   tempnamn.NODTAB = "tempmessage".
   CREATE tempnamn.
   tempnamn.NAMNH = BUFFER Order:HANDLE.
   tempnamn.TORGTH = TEMP-TABLE Order:HANDLE.
   tempnamn.NODTAB = "Order".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER Buyer:HANDLE.   
   tempnamn.TORGTH = TEMP-TABLE Buyer:HANDLE.
   tempnamn.NODTAB = "Buyer".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER bDeliveryAddress:HANDLE.  
   tempnamn.TORGTH = TEMP-TABLE bDeliveryAddress:HANDLE.
   tempnamn.NODTAB = "bDeliveryAddress".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER bForeignDeliveryAddress:HANDLE.  
   tempnamn.TORGTH = TEMP-TABLE bForeignDeliveryAddress:HANDLE.
   tempnamn.NODTAB = "bForeignDeliveryAddress".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER Seller:HANDLE.  
   tempnamn.TORGTH = TEMP-TABLE Seller:HANDLE.
   tempnamn.NODTAB = "Seller".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER Passage:HANDLE.    
   tempnamn.TORGTH = TEMP-TABLE Passage:HANDLE.
   tempnamn.NODTAB = "Passage".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER BuildingPart:HANDLE.  
   tempnamn.TORGTH = TEMP-TABLE BuildingPart:HANDLE.
   tempnamn.NODTAB = "BuildingPart".
   CREATE tempnamn.        
   tempnamn.NAMNH = BUFFER OrderRows:HANDLE.
   tempnamn.TORGTH = TEMP-TABLE OrderRows:HANDLE.
   tempnamn.NODTAB = "OrderRows".
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "ProjectOrder" NO-LOCK NO-ERROR.
      IF AVAILABLE tempnamn THEN DELETE tempnamn.
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "Passage" NO-LOCK NO-ERROR.
      IF AVAILABLE tempnamn THEN DELETE tempnamn. 
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "BuildingPart" NO-LOCK NO-ERROR.
      IF AVAILABLE tempnamn THEN DELETE tempnamn. 
      FIND FIRST tempnamn WHERE tempnamn.NODTAB = "bForeignDeliveryAddress" NO-LOCK NO-ERROR.
      IF AVAILABLE tempnamn THEN DELETE tempnamn. 
   END.
   
   
         
END PROCEDURE.

PROCEDURE uttabahls_UI :
   EMPTY TEMP-TABLE tempnamn NO-ERROR.
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 1
   tempnamn.NAMNH = BUFFER Orderahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE Orderahls:HANDLE
   tempnamn.NODTAB = "Order".  
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 2
   tempnamn.NAMNH = BUFFER Orderhuvudahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE Orderhuvudahls:HANDLE
   tempnamn.NODTAB = "Orderhuvud".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 3
   tempnamn.NAMNH = BUFFER Orderdataahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE Orderdataahls:HANDLE
   tempnamn.NODTAB = "Orderdata".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 4
   tempnamn.NAMNH = BUFFER Mtrlahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE Mtrlahls:HANDLE
   tempnamn.NODTAB = "Mtrl".
   
   /*/* lena ahsell byggp  */
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 5
   tempnamn.NAMNH = BUFFER Packahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE pachahls:HANDLE
   tempnamn.NODTAB = "Packningsbeskrivning".*/
END PROCEDURE.
/*PROCEDURE uttabselga_UI :
   EMPTY TEMP-TABLE tempnamn NO-ERROR.
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 1
   tempnamn.NAMNH = BUFFER SELGAOrder:HANDLE
   tempnamn.TORGTH = TEMP-TABLE SELGAOrder:HANDLE
   tempnamn.NODTAB = "SELGAOrder".  
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 2
   tempnamn.NAMNH = BUFFER tbl_OrderHead:HANDLE
   tempnamn.TORGTH = TEMP-TABLE tbl_OrderHead:HANDLE
   tempnamn.NODTAB = "tbl_OrderHead".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 3
   tempnamn.NAMNH = BUFFER tbl_OrderLine:HANDLE
   tempnamn.TORGTH = TEMP-TABLE tbl_OrderLine:HANDLE
   tempnamn.NODTAB = "tbl_OrderLine".
   /*CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 4
   tempnamn.NAMNH = BUFFER Mtrlahls:HANDLE
   tempnamn.TORGTH = TEMP-TABLE Mtrlahls:HANDLE
   tempnamn.NODTAB = "Mtrl".*/
END PROCEDURE.*/

PROCEDURE uttabonninnen_UI :
   EMPTY TEMP-TABLE tempnamn NO-ERROR.
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 1
   tempnamn.NAMNH = BUFFER oninenorderxml:HANDLE
   tempnamn.TORGTH = TEMP-TABLE oninenorderxml:HANDLE
   tempnamn.NODTAB = "Order".      
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 2
   tempnamn.NAMNH = BUFFER oninenhuvxml:HANDLE
   tempnamn.TORGTH = TEMP-TABLE oninenhuvxml:HANDLE
   tempnamn.NODTAB = "Orderhuvud".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 3
   tempnamn.NAMNH = BUFFER oninenorderdataxml:HANDLE
   tempnamn.TORGTH = TEMP-TABLE oninenorderdataxml:HANDLE
   tempnamn.NODTAB = "Orderdata".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 4
   tempnamn.NAMNH = BUFFER oninendataxml:HANDLE
   tempnamn.TORGTH = TEMP-TABLE oninendataxml:HANDLE
   tempnamn.NODTAB = "Post number".
   CREATE tempnamn.
   ASSIGN 
   tempnamn.ORDNING = 5
   tempnamn.NAMNH = BUFFER oninenpackxml:HANDLE
   tempnamn.TORGTH = TEMP-TABLE oninenpackxml:HANDLE
   tempnamn.NODTAB = "Packningsbeskrivning". 
   CREATE tempnamn.    
   ASSIGN 
   tempnamn.ORDNING = 6    
   tempnamn.NAMNH = BUFFER tidut:HANDLE.   
   tempnamn.TORGTH = TEMP-TABLE tidut:HANDLE.
   tempnamn.NODTAB = "tt". 
            
END PROCEDURE.


PROCEDURE ehandmail_UI :
   DEFINE VARIABLE packning AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgdir AS CHARACTER NO-UNDO.
   MESSAGE "Du skickar packningsbeskrivmimg via E-post!" VIEW-AS ALERT-BOX.
   {muswait.i} 

   excelnamn = inkadresssparb.ORDERNUMMER + ".xls". 
   Guru.GlobalaVariabler:avbryt_musz = FALSE.
   RUN INKPACK.W (OUTPUT packning). 
   IF Guru.GlobalaVariabler:avbryt_musz = TRUE THEN DO:
      Guru.GlobalaVariabler:avbryt_musz = FALSE.
      RETURN. 
   END.   
   
   IF packning = 0 THEN DO:
      EMPTY TEMP-TABLE tidut NO-ERROR.
      RUN bestpaskarmhuv_UI.
      RUN bestpaskarmbygg_UI.
      RUN manepostexcel_UI (INPUT 1).
   END.   
   ELSE DO:
      visatoms = FALSE. 
      visauppl = TRUE.
      EMPTY TEMP-TABLE tidut NO-ERROR. 
      RUN bestpaskarmhuv_UI.
      RUN bestpaskarmmtrl_UI.
      RUN manepostexcel_UI (INPUT 1).
   END.    
            
   FILE-INFO:FILE-NAME = ".".
   orgdir = FILE-INFO:FULL-PATHNAME.  
   RUN SPECIALMAPITO.P (INPUT bepost, INPUT "Beställning " + Guru.Konstanter:gaok + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]), INPUT "", INPUT kommando2).
   /*RUN SPECIALMAPI.P (INPUT "Beställning " + Guru.Konstanter:gaok + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]) , INPUT bepost, INPUT kommando2).*/
   RUN SetCurrentDirectoryA IN Guru.Konstanter:hpApi  (INPUT orgdir).
   excelnamn = "".
   {musarrow.i}    
   IF kommando2 NE "" THEN OS-DELETE VALUE(kommando2) NO-ERROR.                           
   
END PROCEDURE.

PROCEDURE ehandmail2_UI :
   DEFINE OUTPUT PARAMETER orgdir AS CHARACTER NO-UNDO.
   
   {muswait.i}    
   RUN hmtepostfor_UI IN inkberh (INPUT Guru.Konstanter:globforetag , OUTPUT bepost).    
        
   excelnamn = inkadresssparb.ORDERNUMMER + ".xls". 
   
   visatoms = TRUE. 
   visauppl = FALSE.
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   RUN bestpaskarmhuv_UI.
   RUN bestpaskarmrubrik_UI.
   RUN bestpaskarmmtrl_UI.
   RUN manepostexcel_UI (INPUT 1).
             
   FILE-INFO:FILE-NAME = ".".
   orgdir = FILE-INFO:FULL-PATHNAME.                                
   
END PROCEDURE.

PROCEDURE manbestsatt_UI :
   DEFINE VARIABLE orgdir AS CHARACTER NO-UNDO.
   MESSAGE "Vill du skicka beställningen via E-post?" VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Epost" UPDATE svar2 AS LOGICAL.         
   IF svar2 THEN DO:
            {muswait.i} 
      excelnamn = inkadresssparb.ORDERNUMMER + ".xls".       
      RUN manepostexcel_UI (INPUT 1).         
      FILE-INFO:FILE-NAME = ".".
      orgdir = FILE-INFO:FULL-PATHNAME.  
      IF Guru.Konstanter:globforetag = "GRAN" THEN  
      
      RUN SPECIALMAPI.P (INPUT "Beställning AO" + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]) , INPUT "", INPUT kommando2).
      ELSE RUN SPECIALMAPI.P (INPUT "Beställning " + Guru.Konstanter:gaok + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]) , INPUT "", INPUT kommando2).
      RUN SetCurrentDirectoryA IN Guru.Konstanter:hpApi  (INPUT orgdir).
      excelnamn = "".
      {musarrow.i}    
   END.
   MESSAGE "Har du skickat beställningen?" VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Status" UPDATE svar1 AS LOGICAL.         
   IF svar1 THEN DO:
      kontrollbest = TRUE.
   END. 
   IF kommando2 NE "" THEN OS-DELETE VALUE(kommando2) NO-ERROR.                           
    
   
END PROCEDURE.
PROCEDURE maneposttrumma_UI :
   DEFINE VARIABLE orgdir AS CHARACTER NO-UNDO.
   MESSAGE "Vill du skicka beställningen via E-post med trumma namn med?" VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Epost" UPDATE svar2 AS LOGICAL.         
   IF svar2 THEN DO:
            {muswait.i}
      bepost = "" .     
      RUN hmtepostfor_UI IN inkberh (INPUT Guru.Konstanter:globforetag , OUTPUT bepost).       
      excelnamn = inkadresssparb.ORDERNUMMER + ".xls".       
      RUN manepostexcel_UI (INPUT 1).         
      FILE-INFO:FILE-NAME = ".".
      orgdir = FILE-INFO:FULL-PATHNAME.  
      
      RUN SPECIALMAPITO.P (INPUT bepost, INPUT "Beställning " + Guru.Konstanter:gaok + " " + inkadresssparb.AONRAONR + STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]) , INPUT "", INPUT kommando2).
      RUN SetCurrentDirectoryA IN Guru.Konstanter:hpApi  (INPUT orgdir).
      excelnamn = "".
      {musarrow.i}    
   END.
   
   IF kommando2 NE "" THEN OS-DELETE VALUE(kommando2) NO-ERROR.                           
    
   
END PROCEDURE.
PROCEDURE manepostexcel_UI :
   {manepostexce.i}
      
END PROCEDURE.

PROCEDURE smtpvar_UI :
   DEFINE INPUT  PARAMETER Filpath AS CHARACTER NO-UNDO.
   DEFINE VARIABLE pos AS INTEGER NO-UNDO.
   DEFINE VARIABLE pos2 AS INTEGER NO-UNDO.
   DEFINE VARIABLE startpos AS INTEGER NO-UNDO.
   DEFINE VARIABLE filvar AS CHARACTER NO-UNDO.          
   IF Filpath NE "" THEN DO:
            /*Maska fram filnamnet*/
      Filpath = REPLACE(Filpath,"\","/").
      startpos = INDEX(Filpath,".",LENGTH(Filpath) - 5).
      pos = 0.
      REPEAT :
         pos2 = pos.
         pos = pos + 1.
         pos = INDEX(Filpath,"/",pos).                                        
         IF pos = 0 THEN LEAVE.
      END.
      pos = pos2 + 1.
      IF pos GE 0 THEN filvar = SUBSTRING(Filpath,pos,LENGTH(Filpath)).
      ELSE filvar = Filpath.
      /*Slut mask*/
   END.   
   
   IF Filpath NE "" THEN Attachmentstyp = filvar.
   ELSE Attachmentstyp = "".
   ASSIGN 
   EmailFrom           = inkadresssparb.IEPOST
   LocalFiles          = Filpath
   MIMEHeader          = "type=text/html:charset=iso-8859-1:filetype=ascii"
   BodyType            = "".
    
              
END PROCEDURE.
PROCEDURE bestpaskarmhuv_UI :
     
   DEFINE VARIABLE beranvvar AS CHARACTER NO-UNDO.
   
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   str  = "=============================================================================".  
   str1 = "*****************************************************************************".  
   str0 = "-----------------------------------------------------------------------------".
   CREATE tidut. 
   ASSIGN        
   SUBSTRING(tidut.UT,1) = "Beställning" 
   SUBSTRING(tidut.UT,40) = STRING(TODAY)
   SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
   CREATE tidut.  
   CREATE tidut.             
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVNAMN).
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GADRESS).   
   CREATE tidut.
   ASSIGN

   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GPNR)
   SUBSTRING(tidut.UT,8) = STRING(inkadresssparb.GORT).  
   CREATE tidut. 
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GKONTAKT).
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Tele:"
   SUBSTRING(tidut.UT,7) = inkadresssparb.GTELE.                                                           
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Fax:"
   SUBSTRING(tidut.UT,7) = inkadresssparb.GFAX.
   CREATE tidut. 
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Kundnummer:"
   SUBSTRING(tidut.UT,13) = STRING(inkadresssparb.KUNDNR).            
   ASSIGN                                       
   SUBSTRING(tidut.UT,40) = Guru.Konstanter:gaok + ": " + inkadresssparb.AONRAONR + " Delnr:" + 
   STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).
   RUN hmtpaonrben_UI IN inkberh (OUTPUT beranvvar). 
   CREATE tidut.
   SUBSTRING(tidut.UT,40) = "Benämning: " + beranvvar.
   
   CREATE tidut.
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Leveransadress:" 
   SUBSTRING(tidut.UT,40) = "Faktureringsdress:".        
   CREATE tidut. 
   CREATE tidut.
   IF inkadresssparb.LEVADRESS = " " THEN DO:
      FIND FIRST depatemp WHERE depatemp.DEP-NR = inkadresssparb.DEP-NR NO-LOCK NO-ERROR.
      IF AVAILABLE depatemp THEN DO:
         ASSIGN     
         SUBSTRING(tidut.UT,1) = "Se Fakduraadress!"
         SUBSTRING(tidut.UT,40) = depatemp.FIRMA.
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,40) = depatemp.FAKADRESS.
         CREATE tidut.
         ASSIGN                                           
         SUBSTRING(tidut.UT,40) = STRING(depatemp.FAKPNR,"999 99")   
         SUBSTRING(tidut.UT,48) = depatemp.FAKORT.         
         CREATE tidut.
      END.                           
   END.
   ELSE DO:
      FIND FIRST depatemp WHERE depatemp.DEP-NR = inkadresssparb.DEP-NR NO-LOCK NO-ERROR.
      IF AVAILABLE depatemp THEN DO:
         ASSIGN     
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.FORETAG)
         SUBSTRING(tidut.UT,40) = depatemp.FIRMA.
         CREATE tidut. 
         ASSIGN
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVADRESS)
         SUBSTRING(tidut.UT,40) = depatemp.FAKADRESS.            
         CREATE tidut.
         ASSIGN    
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVPNR)   
         SUBSTRING(tidut.UT,8) = STRING(inkadresssparb.LEVORT)
         SUBSTRING(tidut.UT,40) = STRING(depatemp.FAKPNR,"999 99")   
         SUBSTRING(tidut.UT,48) = depatemp.FAKORT.         
         CREATE tidut.
      END. 
      ELSE DO:
         ASSIGN     
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.FORETAG).
         CREATE tidut. 
         ASSIGN
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVADRESS).                    
         CREATE tidut.
         ASSIGN    
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVPNR)   
         SUBSTRING(tidut.UT,8) = STRING(inkadresssparb.LEVORT).                                      
         CREATE tidut.
      END.     
   END.                                     
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF inkadresssparb.IBNR NE "" THEN DO:
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = Guru.Konstanter:grefbefk + ": " + STRING(inkadresssparb.IBNR).            
      END.           
   END.
   CREATE tidut.          
   IF inkadresssparb.LEVERANSDATUM NE ? THEN DO:
      ASSIGN       
      SUBSTRING(tidut.UT,1) = "Leveransdag: " + STRING(inkadresssparb.LEVERANSDATUM).               
   END.
   ELSE DO:                                            
      ASSIGN       
      SUBSTRING(tidut.UT,1) = "Leveransdag: Omgående".               
   END.                     
   IF inkadresssparb.AVIS = TRUE THEN DO:
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Avisering: " + STRING(inkadresssparb.AVISPERS).            
   END.
   RUN bestpaskarmsidfot_UI.         
   CREATE tidut.         
   CREATE tidut.
   ASSIGN                                                
   SUBSTRING(tidut.UT,40) = "Kontaktperson inköp:".        
   CREATE tidut.
   SUBSTRING(tidut.UT,40) = STRING(inkadresssparb.IKONTAKT).         
   CREATE tidut.         
   ASSIGN
   SUBSTRING(tidut.UT,40) = "Tele:"
   SUBSTRING(tidut.UT,47) = STRING(inkadresssparb.ITELE)                                 
   SUBSTRING(tidut.UT,60) = "Fax:"
   SUBSTRING(tidut.UT,65) = STRING(inkadresssparb.IFAX). 
   CREATE tidut.         
   ASSIGN                    
   SUBSTRING(tidut.UT,40) = "Mobiltele:"
   SUBSTRING(tidut.UT,51) = STRING(inkadresssparb.IMOBIL). 
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT"  THEN DO:            
      CREATE tidut.         
      ASSIGN
      SUBSTRING(tidut.UT,40) = "Orderbekräftelse till epost:".
      CREATE tidut. 
      SUBSTRING(tidut.UT,40) = inkadresssparb.IEPOST. 
   END.
   ELSE DO:
      CREATE tidut.         
      ASSIGN
      SUBSTRING(tidut.UT,40) = "Epost:"
      SUBSTRING(tidut.UT,47) = inkadresssparb.IEPOST. 
   END.                  
   IF inkadresssparb.TKONTAKT NE "" THEN DO:         
      CREATE tidut.
      CREATE tidut.
      ASSIGN                                                
      SUBSTRING(tidut.UT,40) = "Kontaktperson teknik:".         
      CREATE tidut.
      SUBSTRING(tidut.UT,40) = STRING(inkadresssparb.TKONTAKT).          
      CREATE tidut.            
      ASSIGN
      SUBSTRING(tidut.UT,40) = "Tele:"
      SUBSTRING(tidut.UT,47) = STRING(inkadresssparb.TTELE).  
      CREATE tidut.         
      ASSIGN                    
      SUBSTRING(tidut.UT,40) = "Mobiltele:"
      SUBSTRING(tidut.UT,51) = STRING(inkadresssparb.TMOBIL).                   
   END.
   
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF inkadresssparb.PROJEKTLEDARE NE "" THEN DO:         
         CREATE tidut.
         CREATE tidut.
         ASSIGN                                                
         SUBSTRING(tidut.UT,40) = "Projektledare:".         
         CREATE tidut.
         SUBSTRING(tidut.UT,40) = STRING(inkadresssparb.PROJEKTLEDARE).          
         CREATE tidut.         
         ASSIGN
         SUBSTRING(tidut.UT,40) = "Tele:"
         SUBSTRING(tidut.UT,50) = STRING(inkadresssparb.PTELE).                   
      END.            
      IF inkadresssparb.REFBES NE "" THEN DO:
         CREATE tidut.
         CREATE tidut.
         ASSIGN                                                
         SUBSTRING(tidut.UT,40) = "Beställarens kontaktperson:".         
         CREATE tidut.
         SUBSTRING(tidut.UT,40) = inkadresssparb.REFBES.                         
      END.            
   END.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      
      RUN kontohmt_UI IN inkberh (OUTPUT beranvvar).
      
      IF beranvvar NE ""THEN DO:
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = beranvvar. 
      END.
   END.
   CREATE tidut.
      
END PROCEDURE.      

PROCEDURE bestpaskarmhuvccc_UI :
     
   DEFINE VARIABLE beranvvar AS CHARACTER NO-UNDO.
   
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   str  = "=============================================================================".  
   str1 = "*****************************************************************************".  
   str0 = "-----------------------------------------------------------------------------".
   CREATE tidut. 
   ASSIGN        
   SUBSTRING(tidut.UT,1) = "Beställning" 
   SUBSTRING(tidut.UT,40) = STRING(TODAY)
   SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").
   CREATE tidut.  
   CREATE tidut.             
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVNAMN).
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GADRESS).   
   CREATE tidut.
   ASSIGN

   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GPNR)
   SUBSTRING(tidut.UT,8) = STRING(inkadresssparb.GORT).  
   CREATE tidut. 
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.GKONTAKT).
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Tele:"
   SUBSTRING(tidut.UT,6) = inkadresssparb.GTELE.                                                           
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Fax:"
   SUBSTRING(tidut.UT,6) = inkadresssparb.GFAX.
   CREATE tidut. 
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = str.
   CREATE tidut.
   ASSIGN                                       
   SUBSTRING(tidut.UT,1) = "Kundnummer:"
   SUBSTRING(tidut.UT,13) = STRING(inkadresssparb.KUNDNR).            
   ASSIGN                                       
   SUBSTRING(tidut.UT,40) = Guru.Konstanter:gaok + ":" + inkadresssparb.AONRAONR + " Delnr:" + 
   STRING(inkadresssparb.AONRDELNR,Guru.Konstanter:varforetypchar[1]).
   RUN hmtpaonrben_UI IN inkberh (OUTPUT beranvvar). 
   CREATE tidut.
   SUBSTRING(tidut.UT,40) = "Benämning:" + beranvvar.
   
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Leveransadress:". 
   CREATE tidut.
   IF inkadresssparb.LEVADRESS = " " THEN DO:
      FIND FIRST depatemp WHERE depatemp.DEP-NR = inkadresssparb.DEP-NR NO-LOCK NO-ERROR.
      IF AVAILABLE depatemp THEN DO:
         ASSIGN                    
         SUBSTRING(tidut.UT,1) = "Se Fakturaadress!".         
      END.                           
   END.
   ELSE DO:
      ASSIGN     
      SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.FORETAG).
      CREATE tidut. 
      ASSIGN
      SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVADRESS).
      CREATE tidut.
      ASSIGN    
      SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.LEVPNR)   
      SUBSTRING(tidut.UT,8) = STRING(inkadresssparb.LEVORT).         
   END.  
   CREATE tidut.
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Faktureringsdress:".        
   CREATE tidut.
   FIND FIRST depatemp WHERE depatemp.DEP-NR = inkadresssparb.DEP-NR NO-LOCK NO-ERROR.
   IF AVAILABLE depatemp THEN DO:
      ASSIGN     
      SUBSTRING(tidut.UT,1) = depatemp.FIRMA.
      CREATE tidut. 
      ASSIGN
      SUBSTRING(tidut.UT,1) = depatemp.FAKADRESS.            
      CREATE tidut.
      ASSIGN    
      SUBSTRING(tidut.UT,1) = STRING(depatemp.FAKPNR,"999 99")   
      SUBSTRING(tidut.UT,8) = depatemp.FAKORT.         
      CREATE tidut.
   END. 
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF inkadresssparb.IBNR NE "" THEN DO:
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = Guru.Konstanter:grefbefk + ":" + STRING(inkadresssparb.IBNR).            
      END.           
   END.
   CREATE tidut.          
   IF inkadresssparb.LEVERANSDATUM NE ? THEN DO:
      ASSIGN       
      SUBSTRING(tidut.UT,1) = "Leveransdag: " + STRING(inkadresssparb.LEVERANSDATUM).               
   END.
   ELSE DO:                                            
      ASSIGN       
      SUBSTRING(tidut.UT,1) = "Leveransdag:Omgående".               
   END.                     
   IF inkadresssparb.AVIS = TRUE THEN DO:
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Avisering: " + STRING(inkadresssparb.AVISPERS).            
   END.
   RUN bestpaskarmsidfot_UI.         
   CREATE tidut.         
   CREATE tidut.
   ASSIGN                                                
   SUBSTRING(tidut.UT,1) = "Kontaktperson inköp:".        
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.IKONTAKT).         
   CREATE tidut.         
   ASSIGN                     
   SUBSTRING(tidut.UT,1) = "Tele:"
   SUBSTRING(tidut.UT,7) = STRING(inkadresssparb.ITELE)                                 
   SUBSTRING(tidut.UT,20) = "Fax:"
   SUBSTRING(tidut.UT,26) = STRING(inkadresssparb.IFAX). 
   CREATE tidut.         
   ASSIGN               
   SUBSTRING(tidut.UT,1) = "Mobiltele:"
   SUBSTRING(tidut.UT,12) = STRING(inkadresssparb.IMOBIL). 
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT"  THEN DO:            
      CREATE tidut.         
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Orderbekräftelse till epost:".
      CREATE tidut. 
      SUBSTRING(tidut.UT,1) = inkadresssparb.IEPOST. 
   END.
   ELSE DO:
      CREATE tidut.         
      ASSIGN                     
      SUBSTRING(tidut.UT,1) = "Epost:"
      SUBSTRING(tidut.UT,8) = inkadresssparb.IEPOST. 
   END.                  
   IF inkadresssparb.TKONTAKT NE "" THEN DO:         
      CREATE tidut.
      CREATE tidut.
      ASSIGN                                                
      SUBSTRING(tidut.UT,1) = "Kontaktperson teknik:".         
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.TKONTAKT).          
      CREATE tidut.            
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Tele:"
      SUBSTRING(tidut.UT,7) = STRING(inkadresssparb.TTELE).  
      CREATE tidut.         
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Mobiltele:"
      SUBSTRING(tidut.UT,12) = STRING(inkadresssparb.TMOBIL).                   
   END.
   
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF inkadresssparb.PROJEKTLEDARE NE "" THEN DO:         
         CREATE tidut.
         CREATE tidut.
         ASSIGN                                                
         SUBSTRING(tidut.UT,1) = "Projektledare:".         
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = STRING(inkadresssparb.PROJEKTLEDARE).          
         CREATE tidut.         
         ASSIGN                   
         SUBSTRING(tidut.UT,1) = "Tele:"
         SUBSTRING(tidut.UT,7) = STRING(inkadresssparb.PTELE).                   
      END.            
      IF inkadresssparb.REFBES NE "" THEN DO:
         CREATE tidut.
         CREATE tidut.
         ASSIGN                                                
         SUBSTRING(tidut.UT,1) = "Beställarens kontaktperson:".         
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = inkadresssparb.REFBES.                         
      END.            
   END.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      
      RUN kontohmt_UI IN inkberh (OUTPUT beranvvar).
      
      IF beranvvar NE ""THEN DO:
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = beranvvar. 
      END.
   END.
   CREATE tidut.
      
END PROCEDURE.

PROCEDURE bestpaskarmsidfot_UI :
   DEFINE VARIABLE kablangtxt AS INTEGER NO-UNDO.
   
   IF inkadresssparb.MARKERING NE "" THEN DO:   
      CREATE tidut.                                   
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Märkning: " + STRING(inkadresssparb.MARKERING).
   END.
   CREATE tidut.                                    
   ASSIGN                   
   SUBSTRING(tidut.UT,1) = "Kommentarer:".
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      kablangtxt = 28.                
      tidut.UT          = tidut.UT + "OBS! SPECIFIKA KABELLÄNGDER.".      
   END.    
   ELSE DO:
      kablangtxt = 0.
      /*
      tidut.UT          = tidut.UT + "OBS! HELA KABELLÄNGDER.     ".
      */
   END.
   IF inkadresssparb.KOMMENTAR NE "" THEN DO:                                          
      ASSIGN      
      SUBSTRING(tidut.UT,1) = tidut.UT + SUBSTRING(inkadresssparb.KOMMENTAR,1,65 - kablangtxt).
      IF LENGTH(inkadresssparb.KOMMENTAR) > 65 - kablangtxt THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(inkadresssparb.KOMMENTAR,66 - kablangtxt,80).
      END.
      IF LENGTH(inkadresssparb.KOMMENTAR) > 145 - kablangtxt THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(inkadresssparb.KOMMENTAR,146 - kablangtxt,80).
      END.
      IF LENGTH(inkadresssparb.KOMMENTAR) > 225 - kablangtxt THEN DO:               
         CREATE tidut.         
         ASSIGN SUBSTRING(tidut.UT,1) = SUBSTRING(inkadresssparb.KOMMENTAR,226 - kablangtxt).
      END.
   END. 
      
END PROCEDURE.

PROCEDURE bestpaskarmrubrik_UI :
   
   CREATE tidut.      
   ASSIGN  
   SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)                                                                          
   SUBSTRING(tidut.UT,13) = "BENÄMNING"                                 
   SUBSTRING(tidut.UT,49) = "ENHET"
   SUBSTRING(tidut.UT,55) = "ANTAL".
   IF visaejpris = TRUE THEN.
   ELSE DO:
      ASSIGN
      SUBSTRING(tidut.UT,61) = "NETTOPRIS"
      SUBSTRING(tidut.UT,71) = "SUMMA".                         
   END.
         
   CREATE tidut.       
END PROCEDURE.
PROCEDURE bestpaskarmmtrl_UI :
   DEFINE VARIABLE totalt AS DECIMAL NO-UNDO.
   DEFINE VARIABLE brwrow AS ROWID NO-UNDO.
   DEFINE VARIABLE lastbrwrow AS ROWID NO-UNDO.   
   totalsum = 0. 
   CREATE tidut.
   RUN getfirst_UI IN brwproc[8].   
   RUN getlastkoll_UI IN brwproc[8] (OUTPUT lastbrwrow).
   IF huvprogh NE ? THEN DO:
      RUN lastselectdyn_UI IN brwproc[8].
      RUN selectrowid_UI IN brwproc[8] (OUTPUT brwrow).
   END. 
   ELSE DO:
      RUN getfirstkoll_UI IN brwproc[8] (OUTPUT brwrow).
   END.
   totalt = 0.  
   IF visatoms = TRUE THEN DO:
      IF visadelaupp = FALSE THEN DO:     
         REPEAT :      
            IF brwrow = ? THEN LEAVE.
            FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = brwrow NO-LOCK NO-ERROR.
            
            IF NOT AVAILABLE inkbest_mtrl THEN LEAVE.
            IF inkbest_mtrl.TILL NE "RETUR" THEN DO:              
               CREATE tidut.      
               ASSIGN  
               SUBSTRING(tidut.UT,1) = inkbest_mtrl.ENR
               SUBSTRING(tidut.UT,13) = SUBSTRING(inkbest_mtrl.BENAMNING,1,35)                               
               SUBSTRING(tidut.UT,49) = inkbest_mtrl.ENHET    
               SUBSTRING(tidut.UT,55) = STRING(inkbest_mtrl.INKANTAL,">>>>9").
               IF visaejpris = TRUE THEN.
               ELSE DO:
                  ASSIGN
                  SUBSTRING(tidut.UT,61) = STRING(inkbest_mtrl.PRISINK,">>>>>9.99")             
                  SUBSTRING(tidut.UT,71) = STRING(inkbest_mtrl.INKANTAL * inkbest_mtrl.PRISINK,">>>>>>>>9").
                  totalt = totalt + (inkbest_mtrl.INKANTAL * inkbest_mtrl.PRISINK).
               END.
               IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
                  IF SUBSTRING(inkbest_mtrl.BENAMNING,35) NE "" THEN DO:
                     SUBSTRING(tidut.UT,13) = SUBSTRING(inkbest_mtrl.BENAMNING,1,32) + "   ".  
                     CREATE tidut.
                     ASSIGN  
                     /*SUBSTRING(tidut.UT,1) = inkbest_mtrl.ENR*/
                     SUBSTRING(tidut.UT,13) = SUBSTRING(inkbest_mtrl.BENAMNING,33,35).
                  END.    
               END.                 
            END.   
            IF lastbrwrow = brwrow THEN LEAVE.
            IF huvprogh NE ? THEN DO:
               RUN nselectrowid_UI IN brwproc[8] (OUTPUT brwrow).
            END. 
            ELSE DO:
               RUN getnextkoll_UI IN brwproc[8] (OUTPUT brwrow).     
            END.          
         END.
      END. 
      ELSE DO:
         /*uppdelat per 500 m*/
         FOR EACH edinkbest_mtrl USE-INDEX LEVENR:         
            IF edinkbest_mtrl.TILL NE "RETUR" THEN DO:              
               CREATE tidut.      
               ASSIGN  
               SUBSTRING(tidut.UT,1) = edinkbest_mtrl.ENR
               SUBSTRING(tidut.UT,13) = SUBSTRING(edinkbest_mtrl.BENAMNING,1,35)                               
               SUBSTRING(tidut.UT,49) = edinkbest_mtrl.ENHET    
               SUBSTRING(tidut.UT,55) = STRING(edinkbest_mtrl.INKANTAL,">>>>9").
               IF visaejpris = TRUE THEN.
               ELSE DO:
                  ASSIGN
                  SUBSTRING(tidut.UT,61) = STRING(edinkbest_mtrl.PRISINK,">>>>>9.99")               
                  SUBSTRING(tidut.UT,71) = STRING(edinkbest_mtrl.INKANTAL * edinkbest_mtrl.PRISINK,">>>>>>>>9").
                  totalt = totalt + (edinkbest_mtrl.INKANTAL * edinkbest_mtrl.PRISINK).
               END.
               IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
                  IF SUBSTRING(edinkbest_mtrl.BENAMNING,35) NE "" THEN DO:
                     SUBSTRING(tidut.UT,13) = SUBSTRING(edinkbest_mtrl.BENAMNING,1,32) + "   ".
                     CREATE tidut.
                     ASSIGN  
                     /*SUBSTRING(tidut.UT,1) = edinkbest_mtrl.ENR*/
                     SUBSTRING(tidut.UT,13) = SUBSTRING(edinkbest_mtrl.BENAMNING,33,35).
                  END.    
               END.                               
            END.                         
         END.
      END.   
      
      CREATE tidut.
      IF totalt NE 0 THEN DO:       
         str =
      "=====================================================================.=======".      
         CREATE tidut. 
         CREATE tidut.      
         SUBSTRING(tidut.UT,1) = str.
         CREATE tidut.
         CREATE tidut.         
         SUBSTRING(tidut.UT,58) = "Summa totalt:".            
         SUBSTRING(tidut.UT,71) = STRING(totalt,">>>>>>>>9").
         CREATE tidut.         
         SUBSTRING(tidut.UT,71) = "=======".
         totalsum = totalt.
      END.
   END.
   
   totalt = 0.
   IF visauppl = TRUE THEN DO:
      totalsum = 0.
      EMPTY TEMP-TABLE inkbestupp_mtrl NO-ERROR. 
      IF brwrow = ? THEN LEAVE.
      FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = brwrow NO-LOCK NO-ERROR.
      IF NOT AVAILABLE inkbest_mtrl THEN LEAVE.
      FOR EACH ink_mtrl WHERE ink_mtrl.LEVKODINK = inkbest_mtrl.LEVKODINK
      BREAK BY ink_mtrl.TILL BY ink_mtrl.UPPLAG BY ink_mtrl.ENR:
         ACCUMULATE ink_mtrl.INKANTAL (TOTAL BY ink_mtrl.UPPLAG BY ink_mtrl.TILL BY ink_mtrl.ENR).
         ACCUMULATE ink_mtrl.BERANTAL (TOTAL BY ink_mtrl.UPPLAG BY ink_mtrl.TILL BY ink_mtrl.ENR).
         IF LAST-OF(ink_mtrl.ENR) THEN DO:
            CREATE inkbestupp_mtrl.
            BUFFER-COPY ink_mtrl TO inkbestupp_mtrl.
            inkbestupp_mtrl.BERANTAL = (ACCUM TOTAL BY ink_mtrl.ENR ink_mtrl.BERANTAL).            
            inkbestupp_mtrl.INKANTAL = (ACCUM TOTAL BY ink_mtrl.ENR ink_mtrl.INKANTAL).                     
         END.                                    
      END. 
      
      RUN upplagskap_UI.
      FOR EACH beruppinktemp:
         totalt = 0.
         FIND FIRST inkbestupp_mtrl WHERE inkbestupp_mtrl.AONRAONR = beruppinktemp.AONRAONR AND inkbestupp_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
         inkbestupp_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
         inkbestupp_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
         inkbestupp_mtrl.INKBESTID = inkadresssparb.INKBESTID       
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE inkbestupp_mtrl THEN DO:
            NEXT.
         END.
         /*UPPLAG*/ 
         CREATE tidut.      
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = str0
         SUBSTRING(tidut.UT,132) = "$".
         IF beruppinktemp.UPPLAG = ? THEN DO:
            CREATE tidut.                                       
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Materiel ej kopplat till något upplag". 
         END.
         ELSE DO:
            CREATE tidut.                                       
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Upplag Nr :" 
            SUBSTRING(tidut.UT,12) = STRING(beruppinktemp.UPPLAG).
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Adress    :".
            IF beruppinktemp.XKORDCH = "" THEN  SUBSTRING(tidut.UT,12) = beruppinktemp.ADRESS + ", " + STRING(beruppinktemp.POSTNR,"XXX XX") + " " + beruppinktemp.ORT.
            ELSE  SUBSTRING(tidut.UT,12) = "X=" + STRING(beruppinktemp.XKORDCH) + " Y=" + STRING(beruppinktemp.YKORDCH) + " " + beruppinktemp.ADRESS + ", " + STRING(beruppinktemp.POSTNR,"XXX XX") + " " + beruppinktemp.ORT.
            
            IF beruppinktemp.ANMARK NE "" THEN DO:             
               CREATE tidut.
               ASSIGN
               SUBSTRING(tidut.UT,1) = "Anmärkning:".                 
               RUN bestpaskarmanm_UI (INPUT beruppinktemp.ANMARK).           
            END.
         END.                 
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = str0.
         CREATE tidut.
         RUN bestpaskarmrubrik_UI.
         FOR EACH inkbestupp_mtrl WHERE inkbestupp_mtrl.AONRAONR = beruppinktemp.AONRAONR AND inkbestupp_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
            inkbestupp_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
            inkbestupp_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
            inkbestupp_mtrl.INKBESTID = inkadresssparb.INKBESTID          
            NO-LOCK BY inkbestupp_mtrl.ENR:
         
            IF inkbestupp_mtrl.TILL NE "RETUR" THEN DO:              
               CREATE tidut.      
               ASSIGN  
               SUBSTRING(tidut.UT,1) = inkbestupp_mtrl.ENR
               SUBSTRING(tidut.UT,13) = SUBSTRING(inkbestupp_mtrl.BENAMNING,1,35)                               
               SUBSTRING(tidut.UT,49) = inkbestupp_mtrl.ENHET    
               SUBSTRING(tidut.UT,55) = STRING(inkbestupp_mtrl.INKANTAL,">>>>9").
               IF visaejpris = TRUE THEN.
               ELSE DO:
                  ASSIGN
                  SUBSTRING(tidut.UT,61) = STRING(inkbestupp_mtrl.PRISINK,">>>>>9.99")                  
                  SUBSTRING(tidut.UT,71) = STRING(inkbestupp_mtrl.INKANTAL * inkbestupp_mtrl.PRISINK,">>>>>>>>9").
                  totalt = totalt + (inkbestupp_mtrl.INKANTAL * inkbestupp_mtrl.PRISINK).
               END.   
               IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
                  IF SUBSTRING(inkbestupp_mtrl.BENAMNING,35) NE "" THEN DO:
                     SUBSTRING(tidut.UT,13) = SUBSTRING(inkbestupp_mtrl.BENAMNING,1,32) + "   ".
                     CREATE tidut.
                     ASSIGN  
                     /*SUBSTRING(tidut.UT,1) = inkbestupp_mtrl.ENR*/
                     SUBSTRING(tidut.UT,13) = SUBSTRING(inkbestupp_mtrl.BENAMNING,33,35).
                  END.    
               END.           
            END.
         END.  
         CREATE tidut.
         IF totalt NE 0 THEN DO:       
            str =
         "=====================================================================.=======".      
            CREATE tidut. 
            CREATE tidut.      
            SUBSTRING(tidut.UT,1) = str.
            CREATE tidut.
            CREATE tidut.         
            SUBSTRING(tidut.UT,58) = "Summa :".            
            SUBSTRING(tidut.UT,71) = STRING(totalt,">>>>>>>>9").
            CREATE tidut.         
            SUBSTRING(tidut.UT,71) = "=======".
            totalsum = totalsum + totalt.
         END.   
      END. 
      IF totalsum NE 0 THEN DO:       
         str =
      "=====================================================================.=======".      
         CREATE tidut. 
         CREATE tidut.      
         SUBSTRING(tidut.UT,1) = str.
         CREATE tidut.
         CREATE tidut.         
         SUBSTRING(tidut.UT,58) = "Summa totalt:".            
         SUBSTRING(tidut.UT,71) = STRING(totalsum,">>>>>>>>9").
         CREATE tidut.         
         SUBSTRING(tidut.UT,71) = "=======".
         
      END.   
      EMPTY TEMP-TABLE inkbestupp_mtrl NO-ERROR. 
      FOR EACH beruppinktemp WHERE beruppinktemp.UPPLAG = ?: 
         DELETE beruppinktemp.
      END.     
   END.   
   visauppl = FALSE.             
END PROCEDURE.

PROCEDURE visadelupp_UI :
   DEFINE VARIABLE rid AS ROWID NO-UNDO.
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO.
   DEFINE VARIABLE levkodvar AS CHARACTER NO-UNDO.    
     
   
   EMPTY TEMP-TABLE edinkbest_mtrl NO-ERROR.
   
   IF AVAILABLE inkadresstemp THEN levkodvar = inkadresstemp.LEVKODINK.
   ELSE levkodvar = inkadresssparb.LEVKODINK.
  
   IF vad =  11 OR vad = 12 THEN levkodvar = inkadresssparb.LEVKODINK.
   
   FOR EACH inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = levkodvar NO-LOCK:
      CREATE edinkbest_mtrl.
      BUFFER-COPY  inkbest_mtrl TO edinkbest_mtrl.             
   END.
   
   
  
   FOR EACH edinkbest_mtrl: 
      rid = ?.
      REPEAT: 
         IF edinkbest_mtrl.INKANTAL > visadelamed THEN DO:    
            rid = ROWID(edinkbest_mtrl).       
            CREATE edinkbestmtrlbuff.
            BUFFER-COPY edinkbest_mtrl TO edinkbestmtrlbuff.
            edinkbest_mtrl.INKANTAL = edinkbest_mtrl.INKANTAL - visadelamed.
            edinkbestmtrlbuff.INKANTAL = visadelamed.
            /*draka 5x övriga 5 Enligt Mats Johansson skall det bytas till enr som slutar på 5 om det är uppdelat. */
            IF edinkbestmtrlbuff.LEVKODINK = "32" THEN DO:
               IF SUBSTRING(edinkbest_mtrl.ENR,LENGTH(edinkbest_mtrl.ENR),1) = "0" THEN DO:
                  SUBSTRING(edinkbestmtrlbuff.ENR,LENGTH(edinkbestmtrlbuff.ENR),2) = "5x".
               END.   
            END.   
            ELSE IF SUBSTRING(edinkbest_mtrl.ENR, LENGTH(edinkbest_mtrl.ENR),1) = "0" THEN DO:
               SUBSTRING(edinkbestmtrlbuff.ENR,LENGTH(edinkbestmtrlbuff.ENR),1) = "5".
            END.    
            IF edinkbest_mtrl.INKANTAL LE visadelamed THEN DO:
               IF rid NE ? THEN DO:
                  IF edinkbestmtrlbuff.LEVKODINK = "32" THEN DO:
                     IF SUBSTRING(edinkbest_mtrl.ENR,LENGTH(edinkbest_mtrl.ENR),1) = "0" THEN DO:
                        SUBSTRING(edinkbest_mtrl.ENR,LENGTH(edinkbest_mtrl.ENR),2) = "0x".
                     END.
                  END.   
               END.
               rid = ?.
               LEAVE.
            END.   
         END.
         ELSE LEAVE.          
      END.
   END.      
  
   IF vad = 1 OR vad = 2 THEN DO:    
      IF AVAILABLE inkadresstemp THEN DO:                  
         FOR EACH edinkbest_mtrl WHERE edinkbest_mtrl.INKBESTID NE  inkadresstemp.INKBESTID:
            DELETE edinkbest_mtrl.
         END.
         FOR EACH edinkbest_mtrl WHERE edinkbest_mtrl.LEVKODINK NE  inkadresstemp.LEVKODINK:
            DELETE edinkbest_mtrl.
         END.
      END.              
   END.
   ELSE IF vad =  11 OR vad = 12 THEN DO:
      IF AVAILABLE tidinkadresstemp THEN DO:         
         FOR EACH edinkbest_mtrl WHERE edinkbest_mtrl.INKBESTID NE  tidinkadresstemp.INKBESTID:
            DELETE edinkbest_mtrl.
         END.
         FOR EACH edinkbest_mtrl WHERE edinkbest_mtrl.LEVKODINK NE  tidinkadresstemp.LEVKODINK:
            DELETE edinkbest_mtrl.
         END.
      END.              
   END.     
   /*
   FOR EACH edinkbest_mtrl WHERE NO-LOCK:
      MESSAGE edinkbest_mtrl.LEVKODINK edinkbest_mtrl.INKANTAL edinkbest_mtrl.enr
      VIEW-AS ALERT-BOX.
   END.
     */           
END PROCEDURE.

PROCEDURE upplagskap_UI :
   FOR EACH ink_val BREAK BY ink_val.AONRAONR BY ink_val.AONRDELNR:      
      IF LAST-OF(ink_val.AONRDELNR) THEN DO:
         CREATE beruppinktemp.
         ASSIGN 
         beruppinktemp.UPPLAG = ?
         beruppinktemp.AONRAONR = ink_val.AONRAONR
         beruppinktemp.AONRDELNR = ink_val.AONRDELNR.                 
      END.                                    
   END.   
END PROCEDURE.
PROCEDURE stoplpprot_UI :
   EMPTY TEMP-TABLE stolpink_mtrl NO-ERROR. 
   FOR EACH ink_mtrl WHERE ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK NO-LOCK:
      FIND FIRST berstolptemp WHERE berstolptemp.ENR = ink_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         CREATE stolpink_mtrl.
         BUFFER-COPY ink_mtrl TO stolpink_mtrl.                           
      END. 
   END.
   
   
END PROCEDURE.
PROCEDURE skapaeinkmtrl_UI :
   DEFINE VARIABLE anmtxt AS CHARACTER NO-UNDO.
   
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = ink_valb.AONRAONR AND ink_mtrl.AONRDELNR = ink_valb.AONRDELNR AND
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.NUM = ink_valb.NUM AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      IF ink_valb.KOMBINERAD NE ? THEN DO:         
         FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = ink_valb.AONRAONR AND eink_mtrl.AONRDELNR = ink_valb.AONRDELNR AND
         eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.KOMBINERAD = ink_valb.KOMBINERAD AND eink_mtrl.ENR = ink_mtrl.ENR            
         AND eink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.           
      END.   
      ELSE DO:   
         FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = ink_valb.AONRAONR AND eink_mtrl.AONRDELNR = ink_valb.AONRDELNR AND
         eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.NUM = ink_valb.NUM AND eink_mtrl.ENR = ink_mtrl.ENR            
         AND eink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.                   
      END.
      /*CHR(10)*/
      IF AVAILABLE eink_mtrl THEN DO:
         IF eink_mtrl.MTRLTEXT = "" THEN eink_mtrl.MTRLTEXT = ink_mtrl.MTRLTEXT.
         ELSE eink_mtrl.MTRLTEXT = eink_mtrl.MTRLTEXT + CHR(10) + ink_mtrl.MTRLTEXT. 
         eink_mtrl.INKANTAL = eink_mtrl.INKANTAL + ink_mtrl.INKANTAL.
      END.
      ELSE DO:   
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.
      END.
   END.      
END PROCEDURE.
PROCEDURE skapaeinkmtrlUpplag_UI :
   DEFINE VARIABLE anmtxt AS CHARACTER NO-UNDO.
   
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = beruppinktemp.AONRAONR AND ink_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      
      FIND FIRST eink_mtrl WHERE 
      eink_mtrl.AONRAONR = beruppinktemp.AONRAONR AND eink_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND 
      eink_mtrl.ENR = ink_mtrl.ENR AND 
      eink_mtrl.INKBESTID = inkadresssparb.INKBESTID
      NO-LOCK NO-ERROR.                   
   /*CHR(10)*/
      IF AVAILABLE eink_mtrl THEN DO:
         IF eink_mtrl.MTRLTEXT = "" THEN eink_mtrl.MTRLTEXT = ink_mtrl.MTRLTEXT.
         ELSE eink_mtrl.MTRLTEXT = eink_mtrl.MTRLTEXT + CHR(10) + ink_mtrl.MTRLTEXT. 
         eink_mtrl.INKANTAL = eink_mtrl.INKANTAL + ink_mtrl.INKANTAL.
     
      END.
      ELSE DO:   
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.
      END.
      
   END.      
END PROCEDURE.
PROCEDURE bestpaskarmmtrlbygg_UI :
   DEFINE VARIABLE totalt AS DECIMAL NO-UNDO.
   DEFINE VARIABLE anmlangd AS INTEGER NO-UNDO.
    
   FOR EACH eink_mtrl BY eink_mtrl.ENR:                  
      CREATE tidut.
      ASSIGN
      
      SUBSTRING(tidut.UT,1) = eink_mtrl.ENR
      SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.BENAMNING,1,35)            
      SUBSTRING(tidut.UT,49) = eink_mtrl.ENHET
      SUBSTRING(tidut.UT,55) = STRING(eink_mtrl.INKANTAL,">>>>9").
      IF visaejpris = TRUE THEN.
      ELSE DO:
         ASSIGN       
         SUBSTRING(tidut.UT,61) = STRING(eink_mtrl.PRISINK,">>>>>9.99")          
         SUBSTRING(tidut.UT,71) = STRING(eink_mtrl.INKANTAL * eink_mtrl.PRISINK,">>>>>>>>9").
         totalt = totalt + eink_mtrl.INKANTAL * eink_mtrl.PRISINK.  
      END.     
      IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
         IF SUBSTRING(eink_mtrl.BENAMNING,35) NE "" THEN DO:
            SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.BENAMNING,1,32) + "   ".
            CREATE tidut.
            ASSIGN  
            /*SUBSTRING(tidut.UT,1) = eink_mtrl.ENR*/
            SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.BENAMNING,33,35).
         END.    
      END.         
      IF eink_mtrl.MTRLTEXT NE "" THEN DO:
         anmlangd = LENGTH(eink_mtrl.MTRLTEXT).
         CREATE tidut.         
         ASSIGN 
         SUBSTRING(tidut.UT,1) = "Text:".
         ASSIGN 
         SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.MTRLTEXT,1,60).            
         anmlangd = anmlangd - 60.
         IF anmlangd > 0 THEN DO:
            CREATE tidut.
            ASSIGN 
            SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.MTRLTEXT,61,60).               
            anmlangd = anmlangd - 60.
         END.
         IF anmlangd > 0 THEN DO:
            CREATE tidut.
            ASSIGN 
            SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.MTRLTEXT,121,60).               
            anmlangd = anmlangd - 60.
         END.
         IF anmlangd > 0 THEN DO:
            CREATE tidut.
            ASSIGN 
            SUBSTRING(tidut.UT,13) = SUBSTRING(eink_mtrl.MTRLTEXT,181,60).               
            anmlangd = anmlangd - 60.
         END.                              
      END.
      FIND FIRST konsteink_mtrl WHERE konsteink_mtrl.ENR = eink_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE konsteink_mtrl THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,1) = konsteink_mtrl.ENR
         SUBSTRING(tidut.UT,13) = SUBSTRING(konsteink_mtrl.BENAMNING,1,35)            
         SUBSTRING(tidut.UT,49) = konsteink_mtrl.ENHET
        
         SUBSTRING(tidut.UT,55) = STRING(eink_mtrl.INKANTAL + konsteink_mtrl.INKANTAL,">>>>9").
         IF visaejpris = TRUE THEN.
         ELSE DO:
            ASSIGN       
            SUBSTRING(tidut.UT,61) = STRING(konsteink_mtrl.PRISINK,">>>>>9.99")                                      
            SUBSTRING(tidut.UT,71) = STRING((eink_mtrl.INKANTAL + konsteink_mtrl.INKANTAL) * konsteink_mtrl.PRISINK,">>>>>>>>9").
            totalt = totalt + konsteink_mtrl.INKANTAL * konsteink_mtrl.PRISINK.  
         END.
         IF Guru.Konstanter:globforetag = "GKAL"  THEN DO:
            IF SUBSTRING(konsteink_mtrl.BENAMNING,35) NE "" THEN DO:
               SUBSTRING(tidut.UT,13) = SUBSTRING(konsteink_mtrl.BENAMNING,1,32) + "   ".
               CREATE tidut.
               ASSIGN  
               /*SUBSTRING(tidut.UT,1) = konsteink_mtrl.ENR*/
               SUBSTRING(tidut.UT,13) = SUBSTRING(konsteink_mtrl.BENAMNING,33,35).
            END.    
         END.
         DELETE konsteink_mtrl.
      END.      
   END.
END PROCEDURE.

PROCEDURE konstskap_UI :
  
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "KONST" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
       CREATE konsteink_mtrl.
       BUFFER-COPY ink_mtrl TO konsteink_mtrl.
   END.
END PROCEDURE.
          
PROCEDURE bestpaskarmbygg_UI :
   DEFINE VARIABLE f1var AS CHARACTER NO-UNDO.
   str  = "=============================================================================".  
   str1 = "*****************************************************************************".  
   str0 = "-----------------------------------------------------------------------------".
   RUN konstskap_UI.   
   RUN upplagskap_UI.
   FOR EACH beruppinktemp:
      FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = beruppinktemp.AONRAONR AND ink_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
      ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID       
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN DO:
         NEXT.
      END.
      /*UPPLAG*/ 
      CREATE tidut.      
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = str0
      SUBSTRING(tidut.UT,132) = "$".
      IF beruppinktemp.UPPLAG = ? THEN DO:
         CREATE tidut.                                       
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Materiel ej kopplat till något upplag". 
      END.
      ELSE DO:
         CREATE tidut.                                       
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Upplag Nr :" 
         SUBSTRING(tidut.UT,12) = STRING(beruppinktemp.UPPLAG).
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Adress    :".
         
         IF beruppinktemp.XKORDCH = "" THEN  SUBSTRING(tidut.UT,12) = beruppinktemp.ADRESS + ", " + STRING(beruppinktemp.POSTNR,"XXX XX") + " " + beruppinktemp.ORT.
         ELSE  SUBSTRING(tidut.UT,12) = "X=" + STRING(beruppinktemp.XKORDCH) + " Y=" + STRING(beruppinktemp.YKORDCH) + " " + beruppinktemp.ADRESS + ", " + STRING(beruppinktemp.POSTNR,"XXX XX") + " " + beruppinktemp.ORT.
         IF beruppinktemp.ANMARK NE "" THEN DO:             
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Anmärkning:".                 
            RUN bestpaskarmanm_UI (INPUT beruppinktemp.ANMARK).           
         END.
      END.                 
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str0.
       /*KONSTRUKTIONER + ID*/
      FOR EACH ink_val WHERE ink_val.AONRAONR = beruppinktemp.AONRAONR AND ink_val.AONRDELNR = beruppinktemp.AONRDELNR AND
      ink_val.UPPLAG = beruppinktemp.UPPLAG AND ink_val.INKBESTID = inkadresssparb.INKBESTID 
      USE-INDEX UPPBERORDNR:
         
         /*REDAN VISAD*/
         IF ink_val.VISAD = TRUE THEN NEXT.
         /*FINNS MTRL*/  
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = beruppinktemp.AONRAONR AND ink_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
         ink_mtrl.NUM = ink_val.NUM AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN DO:
            IF ink_val.KOMBINERAD = ? THEN NEXT.
            /*FINNS MTRL PÅ KOMBO*/
            FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = beruppinktemp.AONRAONR AND ink_mtrl.AONRDELNR = beruppinktemp.AONRDELNR AND
            ink_mtrl.KOMBINERAD = ink_val.KOMBINERAD AND      
            ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
            NO-LOCK NO-ERROR.
         END. 
         IF NOT AVAILABLE ink_mtrl THEN NEXT.
         ink_val.VISAD = TRUE.
         /*id*/
         RUN bestpaskarmid_UI.        
         /*Konstruktion*/
         f1var = ink_val.F1.
         IF ink_val.KOMBINERAD NE ? THEN DO:
            FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
            ink_valb.KOMBINERAD = ink_val.KOMBINERAD AND ink_valb.INKBESTID = inkadresssparb.INKBESTID:                     
               IF ink_valb.VISAD = TRUE THEN NEXT.
               f1var = f1var + "-" + ink_valb.F1.
               ink_valb.VISAD = TRUE.
            END.
         END.   
         RUN idin_UI (INPUT 1,INPUT "Konstruktion", INPUT f1var).
         /*lägger ut position*/
         IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:                     
            CREATE tidut.                             
            {MARKKABVALINK2.I}
            IF Guru.Konstanter:globforetag = "VAST" THEN DO:
               IF ink_val.GRUPP > 0 THEN enval = FALSE.                  
                /* Claes vill inte ha markstation som kabelskåp i byggprotokoll , eftersom det bara är förkortningar*/
            END.     
                                  
            IF enval = TRUE THEN DO:                                                         
               IF ink_val.GRUPP = 0 THEN RUN kskrubr_UI.
               ELSE RUN mstnrubr_UI.                                                                         
            END.            
         END.
         f1var = "".
         IF Guru.Konstanter:globforetag = "gran" OR Guru.Konstanter:globforetag = "elpa" THEN DO:
            FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
            ink_valb.NUM = ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID BY ink_valb.SKAPNUM:
               f1var = f1var + " " + ink_valb.ANMARK.
            END.          
            IF ink_val.KOMBINERAD NE ? THEN DO:
               FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
               ink_valb.KOMBINERAD = ink_val.KOMBINERAD AND  
               ink_valb.NUM NE ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID BY ink_valb.SKAPNUM:
                  f1var = f1var + " " + ink_valb.ANMARK.
               END.
            END.            
            IF LENGTH(f1var) > 1 THEN DO:
               CREATE tidut.
               CREATE tidut.
               ASSIGN SUBSTRING(tidut.UT,1) = "Anmärkning:".      
               RUN bestpaskarmanm_UI (INPUT f1var).
            END.            
         END.                         
         CREATE tidut.
         RUN bestpaskarmrubrik_UI.
         /*mtrl*/
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
         FIND FIRST ink_valb WHERE ROWID(ink_valb) = ROWID(ink_val) NO-LOCK NO-ERROR.
         RUN skapaeinkmtrl_UI.   
              
         /*mtrl kombo*/          
         IF ink_val.KOMBINERAD NE ? THEN DO:
            FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
            ink_valb.KOMBINERAD = ink_val.KOMBINERAD AND  
            ink_valb.NUM NE ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID:
               RUN skapaeinkmtrl_UI.
            END.
         END.
         RUN bestpaskarmmtrlbygg_UI.                                
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR.                    
      END.   
   END.
   /*"depå"*/
   FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
   ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
   NO-LOCK NO-ERROR.
   IF AVAILABLE ink_mtrl THEN DO:
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.      
      CREATE tidut.
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = str0.
      CREATE tidut.                                       
      ASSIGN
      SUBSTRING(tidut.UT,1) = "Materiel direkt till depå". 
      RUN bestpaskarmrubrik_UI.
      FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.
         RUN bestpaskarmmtrlbygg_UI. 
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR.       
      END.
   END.        
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.   
   IF totalsum NE 0 THEN DO:
      CREATE tidut.  
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,58) = "Summa totalt:"
      SUBSTRING(tidut.UT,71) = STRING(totalsum,">>>>>>>>9").                       
      CREATE tidut.
      SUBSTRING(tidut.UT,71) = "=======".           
   END.
   RUN sidbryttidut_UI.  
   FOR EACH ink_val NO-LOCK:
      ink_val.VISAD = FALSE .
   END.
   FOR EACH beruppinktemp WHERE beruppinktemp.UPPLAG = ?: 
      DELETE beruppinktemp.
   END.   
   
END PROCEDURE.

PROCEDURE bestpaskarmanm_UI :
   DEFINE INPUT  PARAMETER invar AS CHARACTER NO-UNDO.
   ASSIGN
   retvar = 1
   ednum = 1
   ednum3 = LENGTH(invar)
   retvar = INDEX(invar,CHR(10),ednum)
   edtecken = 50
   edtext = invar
   tidtext = "".
   {ANMARK2.I}  
END PROCEDURE.

PROCEDURE sidbryttidut_UI :
   DEFINE VARIABLE sidstart AS INTEGER NO-UNDO.
   DEFINE VARIABLE sidslut AS INTEGER NO-UNDO.
   DEFINE VARIABLE sidlangd AS INTEGER NO-UNDO.
   DEFINE VARIABLE rb-print AS CHARACTER NO-UNDO.
   DEFINE BUFFER sidbryttempb FOR sidbryttemp.
   EMPTY TEMP-TABLE sidbryttemp NO-ERROR.  
        
   
   rb-print = SESSION:PRINTER-NAME.
   IF Guru.Konstanter:appcon THEN DO:
      RUN SKRIVAPP.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT "",INPUT rb-print, INPUT-OUTPUT globsidl,INPUT-OUTPUT globsids).
   END.
   ELSE DO:
      RUN SKRIVAPP.P 
      (INPUT "",INPUT rb-print, INPUT-OUTPUT globsidl,INPUT-OUTPUT globsids).
   END.
   Guru.GlobalaVariabler:globsidl = globsidl.
   Guru.GlobalaVariabler:globsids = globsids.    
   sidlangd = Guru.GlobalaVariabler:globsids - 3.
   
   FOR EACH tidut WHERE NO-LOCK:
      sidstart = sidstart + 1.
      IF SUBSTRING(tidut.UT,132) = "$" THEN DO:         
         CREATE sidbryttemp.
         ASSIGN
         sidbryttemp.STARTRAD = sidstart
         sidbryttemp.SLUTRAD = sidstart          
         sidbryttemp.RADROW = ROWID(tidut).
         IF SUBSTRING(tidut.UT,1,5) = "*****" THEN sidbryttemp.RORLISIDBRYT = TRUE.                    
      END.         
   END.
   FOR EACH sidbryttemp WHERE sidbryttemp.RORLISIDBRYT = TRUE USE-INDEX STARTRAD NO-LOCK:
      FIND FIRST sidbryttempb WHERE sidbryttempb.STARTRAD > sidbryttemp.STARTRAD NO-LOCK NO-ERROR.
      IF AVAILABLE sidbryttempb THEN DO:
         sidbryttemp.SLUTRAD = sidbryttempb.STARTRAD.
      END.   
   END.
  
   FIND FIRST sidbryttemp WHERE sidbryttemp.RORLISIDBRYT = FALSE USE-INDEX STARTRAD NO-LOCK NO-ERROR.
   IF AVAILABLE sidbryttemp THEN sidstart = sidbryttemp.STARTRAD.
   ELSE sidstart = 1.
   FIND NEXT sidbryttemp WHERE sidbryttemp.RORLISIDBRYT = FALSE USE-INDEX STARTRAD NO-LOCK NO-ERROR.
   IF AVAILABLE sidbryttemp THEN sidslut = sidbryttemp.SLUTRAD.
   ELSE sidslut = sidlangd.
   /*  
   FIND FIRST sidbryttemp WHERE sidbryttemp.RORLISIDBRYT = FALSE USE-INDEX STARTRAD NO-LOCK NO-ERROR.
   IF AVAILABLE sidbryttemp THEN sidstart = sidbryttemp.STARTRAD.
   sidslut = sidstart + sidlangd.
  */
   FOR EACH sidbryttemp WHERE sidbryttemp.RORLISIDBRYT = TRUE USE-INDEX SLUTRAD NO-LOCK:      
      /*ingen sidbryt*/      
      IF sidbryttemp.SLUTRAD < sidslut THEN DO:      
         FIND FIRST tidut WHERE ROWID(tidut) = sidbryttemp.RADROW NO-ERROR.         
         IF AVAILABLE tidut THEN SUBSTRING(tidut.UT,132) = " ".
      END.   
      ELSE DO:
         /*sidbrytning*/                  
         /*hitta nästa fasta sidbryt*/
         FIND FIRST sidbryttempb WHERE sidbryttempb.STARTRAD > sidslut AND sidbryttempb.RORLISIDBRYT = FALSE USE-INDEX SLUTRAD NO-LOCK NO-ERROR.
         IF AVAILABLE sidbryttempb THEN sidstart = sidbryttempb.STARTRAD. 
         ELSE DO:
            /*hitta nästa rörlia sidbryt*/
            sidstart = sidbryttemp.STARTRAD.               
         END. 
         sidslut = sidstart + sidlangd.                
      END.   
       
   END.
  
END PROCEDURE.

PROCEDURE bestpaskarmid_UI :
  
   CREATE tidut.
   CREATE tidut. 
   ASSIGN
   SUBSTRING(tidut.UT,1) = str1
   SUBSTRING(tidut.UT,132) = "$". 
   FIND FIRST idinktemp WHERE 
   idinktemp.AONRAONR = ink_val.AONRAONR AND idinktemp.AONRDELNR = ink_val.AONRDELNR AND
   idinktemp.NUM = ink_val.NUM NO-LOCK NO-ERROR.
   
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      musz = musz.
   END.
   ELSE DO: 
      IF AVAILABLE idinktemp THEN DO:
         FIND FIRST annnamntemp NO-LOCK NO-ERROR.        
         IF idinktemp.FORNR NE "" THEN RUN idin_UI (INPUT 1,INPUT SUBSTRING(annnamntemp.TAB1,1,20), INPUT idinktemp.FORNR).                      
         IF idinktemp.LINNR NE "" THEN DO:
            IF idinktemp.FORNR = "" THEN RUN idin_UI (INPUT 1,INPUT SUBSTRING(annnamntemp.TAB2,1,20), INPUT idinktemp.LINNR).
            ELSE RUN idin_UI (INPUT 2,INPUT SUBSTRING(annnamntemp.TAB2,1,20), INPUT idinktemp.LINNR).            
         END.
         IF idinktemp.NATNR NE "" THEN DO:
            IF idinktemp.FORNR = "" AND idinktemp.LINNR = "" THEN RUN idin_UI (INPUT 1,INPUT SUBSTRING(annnamntemp.TAB3,1,20), INPUT idinktemp.NATNR).
            ELSE RUN idin_UI (INPUT 2,INPUT SUBSTRING(annnamntemp.TAB3,1,20), INPUT idinktemp.NATNR).              
         END.
      END.        
   END.
      
   FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
   USE-INDEX KOD NO-LOCK NO-ERROR.
   IF AVAILABLE bblabeltemp THEN DO:
      IF bblabeltemp.ID1 NE "" THEN DO:
         IF AVAILABLE idinktemp THEN RUN idin_UI (INPUT 1,INPUT bblabeltemp.ID1, INPUT idinktemp.FRI1).
         ELSE RUN idin_UI (INPUT 1,INPUT bblabeltemp.ID1, INPUT "").        
      END.   
      
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
         IF bblabeltemp.ID2 NE "" THEN DO:
            IF AVAILABLE idinktemp THEN RUN idin_UI (INPUT 1,INPUT bblabeltemp.ID2, INPUT idinktemp.FRI2).
            ELSE RUN idin_UI (INPUT 1,INPUT bblabeltemp.ID2, INPUT "").        
         END.      
      END.
      ELSE DO:
         IF bblabeltemp.ID2 NE "" THEN DO:
            IF AVAILABLE idinktemp THEN RUN idin_UI (INPUT 2,INPUT bblabeltemp.ID2, INPUT idinktemp.FRI2).
            ELSE RUN idin_UI (INPUT 2,INPUT bblabeltemp.ID2, INPUT "").
         END.           
      END.      
   END.
   IF AVAILABLE idinktemp THEN DO:
      IF idinktemp.FRI3 NE "" THEN DO:         
         IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
            RUN idin_UI (INPUT 1,INPUT "Littera", INPUT idinktemp.FRI3).            
         END.
         ELSE DO:
            RUN idin_UI (INPUT 1,INPUT "Fri ID", INPUT idinktemp.FRI3).
         END.   
      END.   
   END.
  
END PROCEDURE.

PROCEDURE idin_UI :
   DEFINE INPUT  PARAMETER startvar AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER namvar AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER typvar AS CHARACTER NO-UNDO.
   IF startvar = 1 THEN DO: 
      CREATE tidut.           
      ASSIGN                                                                                                                 
      SUBSTRING(tidut.UT,startvar) = namvar
      SUBSTRING(tidut.UT,(startvar * 20 + 1)) = ":".
      IF typvar NE ? THEN SUBSTRING(tidut.UT,(startvar * 20 + 2)) = typvar.
   END.  
   ELSE IF startvar = 2 THEN DO:
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,startvar * 20) = SUBSTRING(namvar,1,20)
      SUBSTRING(tidut.UT,startvar * 30 + 1) = ":".
      IF typvar NE ? THEN SUBSTRING(tidut.UT,startvar * 30 + 1) = typvar.
   END.     
END PROCEDURE.


PROCEDURE anmark_UI :        
   DEFINE INPUT PARAMETER anmark AS INTEGER NO-UNDO.     
   IF anmark = 2 THEN DO:                
      ASSIGN             
      SUBSTRING(tidut.UT,12) = tidtext.
      CREATE tidut.
   END.   
END PROCEDURE.

PROCEDURE mstnrubr_UI :
   DEFINE VARIABLE skapkab AS INTEGER NO-UNDO.
   DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE typbervar AS LOGICAL NO-UNDO.
   CREATE tidut.
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "HSP-förd"
   SUBSTRING(tidut.UT,30) = "LSP-förd"
   SUBSTRING(tidut.UT,40) = "E-nummer"
   SUBSTRING(tidut.UT,55) = "Säkring" .
   CREATE tidut.
   skapkab = 1.
/*
   FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
   ink_valb.NUM = ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID
   BY ink_valb.SKAPNUM:
      */   
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = ink_val.AONRAONR AND ink_mtrl.AONRDELNR = ink_val.AONRDELNR AND
   ink_mtrl.NUM = ink_val.NUM AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
   BY ink_mtrl.SKAPNUM:                               
      IF ink_mtrl.F5 NE "" THEN DO:                        
         ASSIGN                  
         SUBSTRING(tidut.UT,1) = STRING(skapkab)
         SUBSTRING(tidut.UT,10) = TRIM(ink_mtrl.F5)
         SUBSTRING(tidut.UT,20) = TRIM(ink_mtrl.F2)
         SUBSTRING(tidut.UT,30) = TRIM(ink_mtrl.F3).        
         IF ink_mtrl.F2 NE "" THEN DO:
            RUN mtrlberenr1_UI IN inkberh (INPUT ink_mtrl.F1, INPUT ink_mtrl.F2, OUTPUT enrvar, OUTPUT typbervar).
            IF enrvar NE "" THEN SUBSTRING(tidut.UT,40) = enrvar.                                                       
         END.
         ELSE IF ink_mtrl.F3 NE "" THEN DO:
            RUN mtrlberenr1_UI IN inkberh (INPUT ink_mtrl.F1, INPUT ink_mtrl.F3, OUTPUT enrvar, OUTPUT typbervar).
            IF enrvar NE "" THEN SUBSTRING(tidut.UT,40) = enrvar.                       
         END.
         SUBSTRING(tidut.UT,55) = TRIM(ink_mtrl.F4).
         skapkab = skapkab + 1.
         CREATE tidut.          
      END.
   END.
END PROCEDURE.

PROCEDURE kskrubr_UI:
   
   DEFINE VARIABLE skapkab AS INTEGER NO-UNDO.
   DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE typbervar AS LOGICAL NO-UNDO.
   DEFINE VARIABLE skpnrvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE numvar AS INTEGER NO-UNDO.
   CREATE tidut.
   ASSIGN                  
   SUBSTRING(tidut.UT,1) = "Position"
   SUBSTRING(tidut.UT,10) = "Kablar"
   SUBSTRING(tidut.UT,20) = "Ansl.don"
   SUBSTRING(tidut.UT,30) = "E-nummer"
   SUBSTRING(tidut.UT,40) = "Nollklämma"
   SUBSTRING(tidut.UT,55) = "Säkring"
   SUBSTRING(tidut.UT,65) = "Koppl.typ".
   CREATE tidut.
   ASSIGN 
   skapkab = 1
   numvar = 0
   skpnrvar = 0.
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = ink_val.AONRAONR AND ink_mtrl.AONRDELNR = ink_val.AONRDELNR AND
   ink_mtrl.NUM = ink_val.NUM AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
   BY ink_mtrl.SKAPNUM:
      /* 
      IF numvar NE ink_mtrl.NUM THEN DO:
         ASSIGN
         numvar = ink_mtrl.NUM
         skpnrvar = ink_mtrl.SKAPNUM.
      END.
      */   
      IF skpnrvar NE ink_mtrl.SKAPNUM THEN DO:
         skpnrvar = ink_mtrl.SKAPNUM.                          
         IF ink_mtrl.F2 NE "" THEN DO:                        
            ASSIGN                  
            SUBSTRING(tidut.UT,1) = STRING(skapkab)
            SUBSTRING(tidut.UT,10) = TRIM(ink_mtrl.F2)
            SUBSTRING(tidut.UT,20) = TRIM(ink_mtrl.F3).
            RUN mtrlberenr_UI IN inkberh (INPUT ink_mtrl.F1, INPUT ink_mtrl.F3, OUTPUT enrvar, OUTPUT typbervar).       
            IF enrvar NE "" THEN DO:   
               SUBSTRING(tidut.UT,30) = enrvar.
               IF typbervar = TRUE THEN DO:
                  IF ink_mtrl.TYP NE 0 THEN 
                  SUBSTRING(tidut.UT,65) = STRING(ink_mtrl.TYP).
               END.
            END.                           
            ASSIGN
            SUBSTRING(tidut.UT,40) = TRIM(ink_mtrl.F4)
            SUBSTRING(tidut.UT,55) = TRIM(ink_mtrl.F5).
            skapkab = skapkab + 1.
            CREATE tidut.      
         END.
      END.   
   END.
   /*
   FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
   ink_valb.NUM = ink_val.NUM AND ink_valb.SKAPNUM = ink_val.SKAPNUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID
   BY ink_valb.SKAPNUM:                           
      IF ink_valb.F2 NE "" THEN DO:                        
         ASSIGN                  
         SUBSTRING(tidut.UT,1) = STRING(skapkab)
         SUBSTRING(tidut.UT,10) = TRIM(ink_valb.F2)
         SUBSTRING(tidut.UT,20) = TRIM(ink_valb.F3).
         RUN mtrlberenr_UI IN inkberh (INPUT ink_valb.F1, INPUT ink_valb.F3, OUTPUT enrvar, OUTPUT typbervar).       
         IF enrvar NE "" THEN DO:   
            SUBSTRING(tidut.UT,30) = enrvar.
            IF typbervar = TRUE THEN DO:
               SUBSTRING(tidut.UT,65) = STRING(ink_valb.TYP).
            END.
         END.                           
         ASSIGN
         SUBSTRING(tidut.UT,40) = TRIM(ink_valb.F4)
         SUBSTRING(tidut.UT,55) = TRIM(ink_valb.F5).
         skapkab = skapkab + 1.
         CREATE tidut.      
      END.
   END.
   */
END PROCEDURE.

PROCEDURE btnadress_UI :
  
   RUN btnvit_UI (INPUT BTN_ADD).      
   IF inkaddr = ? THEN DO:
      IF AVAILABLE inkadresstemp THEN DO:
         inkaddr = ROWID(inkadresstemp).
         FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = inkaddr NO-LOCK NO-ERROR.
      END.   
   END.
   RUN summeradress_UI.
   IF NOT AVAILABLE inkadresstemp THEN DO:
      MESSAGE "Det finns inga beställningar!"
      VIEW-AS ALERT-BOX.
      APPLY "CHOOSE" TO BTN_MTRL.
      RETURN.
   END.  
   IF inkaddr = ? THEN DO:
      IF AVAILABLE inkadresstemp THEN DO:
         inkaddr = ROWID(inkadresstemp).
         FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = inkaddr NO-LOCK NO-ERROR.
      END.   
   END.         
   RUN frame_UI (INPUT "ADR").
   RUN openbdynspec_UI IN brwproc[9].
   RUN getfirst_UI IN brwproc[9].
   IF inkaddr NE ? THEN RUN setlastrowid_UI IN brwproc[9] (INPUT inkaddr).
   RUN lastselectdyn_UI IN brwproc[9].
   /*RUN VISADRESS*/
   FIND FIRST depatemp NO-LOCK NO-ERROR.
   IF Guru.Konstanter:globforetag = "NIKLAS" OR Guru.Konstanter:globforetag = "cELPA" {GLOBVES.I} THEN DO:
      FIND FIRST depsektemp WHERE depsektemp.ANVANDARE = Guru.Konstanter:globanv NO-LOCK NO-ERROR.
      IF AVAILABLE depsektemp THEN DO:
         FIND FIRST depatemp WHERE depatemp.DEP-NR = depsektemp.DEPNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE depatemp THEN DO:
            FIND FIRST depatemp NO-LOCK NO-ERROR.
         END.
      END.
   END.   
   IF AVAILABLE depatemp THEN RUN setlastrowid_UI IN brwproc[11] (INPUT ROWID(depatemp)).  
   RUN openbdynspec_UI IN brwproc[11].
   RUN lastselectdyn_UI IN brwproc[11].
   
   RUN openbdynspec_UI IN brwproc[18].
   RUN Gomadress_UI.
   RUN PlaceraKnapp_UI.
END PROCEDURE.

PROCEDURE andralevk_UI :
   IF NOT AVAILABLE levkontakttemp THEN DO:
      RETURN.
   END.
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
   CREATE elevkontakttemp.
   BUFFER-COPY levkontakttemp TO elevkontakttemp.
   RUN NYLEVKONINK.W (INPUT-OUTPUT TABLE elevkontakttemp).
   IF musz = TRUE THEN DO:
      musz = FALSE.
      EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
      RETURN.      
   END.    
   FIND FIRST elevkontakttemp WHERE NO-LOCK NO-ERROR.
   elevkontakttemp.ORGLEVKONTAKT = levkontakttemp.LEVKONTAKT.
   RUN levkontspar_UI IN inkberh (INPUT TABLE elevkontakttemp).
   BUFFER-COPY elevkontakttemp TO levkontakttemp.         
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
   RUN setlastrowid_UI IN brwproc[12] (INPUT ROWID(levkontakttemp)).     
   RUN openbdynspec_UI IN brwproc[12].
   RUN lastselectdyn_UI IN brwproc[12].     
END PROCEDURE.
PROCEDURE bortlevk_UI :
  IF NOT AVAILABLE levkontakttemp THEN DO:
      RETURN.
   END.
   MESSAGE "Vill Ni ta bort denna kontakt? " levkontakttemp.LEVKONTAKT    
   VIEW-AS ALERT-BOX  
   QUESTION BUTTONS YES-NO TITLE "Ta bort?" UPDATE svar AS LOGICAL .         
   IF svar = FALSE THEN DO:
      RETURN.
   END.
   
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
   CREATE elevkontakttemp.
   BUFFER-COPY levkontakttemp TO elevkontakttemp.
   
   DELETE levkontakttemp. 
   RUN selnextprevrow_UI IN brwproc[12].  
   RUN levkontbort_UI IN inkberh (INPUT TABLE elevkontakttemp).                                                                   
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.   
   
   RUN openbdynspec_UI IN brwproc[12].
   RUN lastselectdyn_UI IN brwproc[12]. 
END PROCEDURE.
PROCEDURE nylevk_UI :
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
   CREATE elevkontakttemp.
   elevkontakttemp.LEVKOD = inkadresstemp.LEVKODINK.
   RUN NYLEVKONINK.W (INPUT-OUTPUT TABLE elevkontakttemp).
   IF musz = TRUE THEN DO:
      musz = FALSE.
      EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
      RETURN.      
   END.    
   FIND FIRST elevkontakttemp WHERE NO-LOCK NO-ERROR.
   elevkontakttemp.ORGLEVKONTAKT = inkadresstemp.LEVKODINK.
   RUN levkontspar_UI IN inkberh (INPUT TABLE elevkontakttemp).
   CREATE levkontakttemp.
   BUFFER-COPY elevkontakttemp TO levkontakttemp.         
   EMPTY TEMP-TABLE elevkontakttemp NO-ERROR.
   RUN setlastrowid_UI IN brwproc[12] (INPUT ROWID(levkontakttemp)).     
   RUN openbdynspec_UI IN brwproc[12].
   RUN lastselectdyn_UI IN brwproc[12].
END PROCEDURE.
PROCEDURE adrmouseseldbclic_UI :
   
   RUN laddaadress_UI. 
END PROCEDURE.
PROCEDURE bestmtrlinfodbclic_UI :
   IF AVAILABLE inkbest_mtrl THEN DO:
      MESSAGE inkbest_mtrl.BENAMNING SKIP
              inkbest_mtrl.MTRLTEXT 
      VIEW-AS ALERT-BOX.
   END.   
END PROCEDURE.
PROCEDURE tidmouseseldbclic_UI :
   IF AVAILABLE tidinkadresstemp THEN DO:
      RUN laddaadresstid_UI.      
   END.
END PROCEDURE.
PROCEDURE depmouseseldbclic_UI :
  
   IF AVAILABLE depatemp THEN DO:
      RUN laddaadressdep_UI.      
   END.   
END PROCEDURE.
PROCEDURE konmouseseldbclic_UI :   
   IF AVAILABLE levkontakttemp THEN DO:
      RUN laddaadresskon_UI.      
   END.   
END PROCEDURE.
PROCEDURE kommouseseldbclic_UI :
   IF AVAILABLE fastanmtemp THEN 
   FILL-IN-KOM:SCREEN-VALUE = FILL-IN-KOM:SCREEN-VALUE + " " + fastanmtemp.ANMARK.   
END PROCEDURE.

PROCEDURE mdbrwpers_UI :
   /*
   Båda fyller i FILL-IN-KIKONTAKT KONTAKT INKÖP
    ON 'CHOOSE' OF m_Vlj_Personal PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 1). /*POPUP-MENU-FILL-IN-KIKONTAKT*/
   ON 'CHOOSE' OF m_Vlj_Kundreferens PERSISTENT RUN valkundref_UI IN THIS-PROCEDURE (INPUT 5). /*POPUP-MENU-FILL-IN-KIKONTAKT*/
    KONTAKT TEKNIK
   ON 'CHOOSE' OF m_Vlj_Personal2 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 2). /*POPUP-MENU-FILL-IN-KTKONTAKT*/
   PROJEKTLEDARE 
   ON 'CHOOSE' OF m_Vlj_Personal3 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 3). /*POPUP-MENU-FILL-IN-PLKONTAKT*/
   ON 'CHOOSE' OF m_Vlj_Personal4 PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 4). /*POPUP-MENU-FILL-IN-AVISPERS*/
   ON 'CHOOSE' OF m_Vlj_extern_person PERSISTENT RUN extervalpers_UI IN THIS-PROCEDURE (INPUT 1). /*POPUP-MENU-FILL-IN-AVISPERS*/
   */
   IF AVAILABLE personaltemp THEN DO:
      IF valpersval = 1 THEN DO:
         IF Guru.Konstanter:globforetag = "CVAST" THEN RETURN.
         ASSIGN
         FILL-IN-KIKONTAKT:SCREEN-VALUE = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN)        
         FILL-IN-KIKONTAKT:SCREEN-VALUE =        personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN
         FILL-IN-KITELE:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","").
         FILL-IN-KIMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","").
         FILL-IN-KIEPOST:SCREEN-VALUE = SUBSTRING(personaltemp.PERSONSOK,20).
     
         IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
            FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.ANSTNR.
         END.   
               
      END.
      ELSE IF valpersval = 2 THEN DO:
         ASSIGN 
         FILL-IN-KTKONTAKT:SCREEN-VALUE  = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN)
         FILL-IN-KTTELE:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","").
         FILL-IN-KTMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","").
      END.
      ELSE IF valpersval = 3 THEN DO:         
         ASSIGN
         FILL-IN-PLKONTAKT:SCREEN-VALUE  = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN).
         IF personaltemp.TELEFON = "" THEN FILL-IN-PLMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","").
         ELSE FILL-IN-PLMOBIL:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","").
      END.  
      IF valpersval = 1 OR valpersval = 4 THEN DO:         
         IF FILL-IN-AVISPERS:SCREEN-VALUE NE "" AND valpersval = 1 THEN.
         ELSE DO:        
            RUN avispers_UI.
         END.         
      END.    
   END.  
   IF AVAILABLE kontaktperstemp THEN DO:
      IF valpersval = 5 THEN DO:  
        
         ASSIGN
         FILL-IN-KIKONTAKT:SCREEN-VALUE = kontaktperstemp.NAMN        
         FILL-IN-KITELE:SCREEN-VALUE = REPLACE(kontaktperstemp.TELEFON," ","").
         FILL-IN-KIMOBIL:SCREEN-VALUE = REPLACE(kontaktperstemp.MOBIL," ","").
         FILL-IN-KIEPOST:SCREEN-VALUE = kontaktperstemp.EPOST.
         /*gran har denna meny släkt*/
         IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
            FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(kontaktperstemp.NAMN).  
            FIND FIRST personaltemp WHERE personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN = kontaktperstemp.NAMN NO-LOCK NO-ERROR.  
            IF AVAILABLE personaltemp THEN FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(personaltemp.ANSTNR).
         END.   
         
      END.  
   END.    
END PROCEDURE.
PROCEDURE Externavispers_UI :
   DEFINE VARIABLE namnextern AS CHARACTER NO-UNDO.
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "elpa" THEN DO:
      IF kontaktperstemp2.MOBIL NE "" THEN FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(kontaktperstemp2.MOBIL," ","") + " " + kontaktperstemp2.NAMN.
      ELSE  FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(kontaktperstemp2.TELEFON," ","") + " " + kontaktperstemp2.NAMN.
   END.
   ELSE DO:
      IF INDEX(kontaktperstemp2.NAMN," ") > 0 THEN namnextern =   SUBSTRING(kontaktperstemp2.NAMN,INDEX(kontaktperstemp2.NAMN," "),8).
      ELSE namnextern = SUBSTRING(kontaktperstemp2.NAMN,2).
      
      IF kontaktperstemp2.MOBIL NE "" THEN 
      FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(kontaktperstemp2.MOBIL," ","") + " " + SUBSTRING(kontaktperstemp2.NAMN,1,1) + "." +
      namnextern.
   
      ELSE 
      FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(kontaktperstemp2.TELEFON," ","") + " " + SUBSTRING(kontaktperstemp2.NAMN,1,1) + "." +
      namnextern.
   END.
END PROCEDURE.
PROCEDURE avispers_UI :
  
      IF personaltemp.MOBILTEL NE "" THEN 
      FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","") + " " + SUBSTRING(personaltemp.FORNAMN,1,1) + "." +
      SUBSTRING(personaltemp.EFTERNAMN,1,8).
      ELSE 
      FILL-IN-AVISPERS:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","") + " " + SUBSTRING(personaltemp.FORNAMN,1,1) + "." +
      personaltemp.EFTERNAMN.
     
END PROCEDURE.
PROCEDURE leavebrwpers_UI :
   brwh[14]:HIDDEN = TRUE.
   brwh[19]:HIDDEN = TRUE.
   brwh[22]:HIDDEN = TRUE.
END PROCEDURE.
PROCEDURE extervalpers_UI :
   DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   valpersval = vad.
   brwh[22]:HIDDEN = FALSE.
   brwh[22]:MOVE-TO-TOP (). 
   APPLY "ENTRY" TO brwh[22].    
   IF AVAILABLE kontaktperstemp2 THEN DO:
      RUN setlastrowid_UI IN brwproc[22] (INPUT ROWID(kontaktperstemp2)).
   END.            
   RUN openbdynspec_UI IN brwproc[22].
   RUN lastselectdyn_UI IN brwproc[22].
END PROCEDURE.
PROCEDURE valpers_UI :
   DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   valpersval = vad.
   brwh[14]:HIDDEN = FALSE.
   brwh[14]:MOVE-TO-TOP (). 
   APPLY "ENTRY" TO brwh[14].    
   IF AVAILABLE personaltemp THEN DO:
      RUN setlastrowid_UI IN brwproc[14] (INPUT ROWID(personaltemp)).
   END.            
   RUN openbdynspec_UI IN brwproc[14].
   RUN lastselectdyn_UI IN brwproc[14].
   
END PROCEDURE.
PROCEDURE valkundref_UI :
   DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   valpersval = vad.
   brwh[19]:HIDDEN = FALSE.
   brwh[19]:MOVE-TO-TOP ().   
   APPLY "ENTRY" TO brwh[19].
   IF AVAILABLE kontaktperstemp THEN DO:
      RUN setlastrowid_UI IN brwproc[19] (INPUT ROWID(kontaktperstemp)).
   END.            
   RUN openbdynspec_UI IN brwproc[19].
   RUN lastselectdyn_UI IN brwproc[19].
END PROCEDURE.
PROCEDURE btnatermtrl_UI :
   RAD_UPPKONST:SCREEN-VALUE = STRING(1).
   RUN raduppk_UI.
END PROCEDURE.
PROCEDURE raduppk_UI :
   FRAME-MTRL:HIDDEN = FALSE.
   FRAME-BYTENR:HIDDEN = TRUE.
   IF RAD_UPPKONST:SCREEN-VALUE = STRING(1) THEN DO:
      IF RAD_VALDMTRL:SCREEN-VALUE = STRING(1) THEN  BTN_ALLOVERMTRL:HIDDEN = FALSE.
      ASSIGN 
      brwh[1]:HIDDEN = FALSE.
      IF brwh[5] NE ? THEN brwh[5]:HIDDEN = TRUE.
   END.
   IF RAD_UPPKONST:SCREEN-VALUE = STRING(2) THEN DO:
      ASSIGN 
      BTN_ALLOVERMTRL:HIDDEN = TRUE
      brwh[1]:HIDDEN = TRUE.
      IF brwh[5] NE ? THEN brwh[5]:HIDDEN = FALSE.
      
   END.
   IF RAD_UPPKONST:SCREEN-VALUE = STRING(3) THEN DO:
      FRAME-MTRL:HIDDEN = TRUE.
      FRAME-BYTENR:HIDDEN = FALSE. 
      ASSIGN 
      BTN_ALLOVERMTRL:HIDDEN = TRUE
      brwh[1]:HIDDEN = TRUE.
      IF brwh[5] NE ? THEN brwh[5]:HIDDEN = FALSE.
      
   END.     
END PROCEDURE.
PROCEDURE radvaldmk_UI :
   IF RAD_VALDMTRL:SCREEN-VALUE = STRING(1) THEN DO:
      ASSIGN 
      BTN_ALLOVERMTRL:HIDDEN = FALSE
      brwh[3]:HIDDEN = FALSE
      brwh[6]:HIDDEN = TRUE 
      BTN_ATERMTRL:HIDDEN = TRUE 
      BTN_OVERMTRL:HIDDEN = FALSE 
      BTN_ALLOVERMTRL:HIDDEN = FALSE
      BTN_BACKMTRL:HIDDEN = FALSE
      BTN_ALLBACKMTRL:HIDDEN = FALSE
      BTN_BYTLEV:HIDDEN = FALSE
      FILL-IN-BYTLEV:HIDDEN = FALSE
      FILL-IN-BYTLEV-2:HIDDEN = FALSE
      CMB_LEVTILL:HIDDEN = FALSE  
      BTN_MTRLTABORT:HIDDEN = FALSE 
      BTN_MTRLENDASTMARK:HIDDEN = FALSE 
         
      BTN_ORGENR:HIDDEN = FALSE      
      BTN_INKANTAL:HIDDEN = FALSE.
         
      RUN SaldoGoma_UI.
      APPLY "VALUE-CHANGED" TO brwh[2].
      
   END.
   IF RAD_VALDMTRL:SCREEN-VALUE = STRING(2) THEN DO:
      ASSIGN 
      BTN_ALLOVERMTRL:HIDDEN = TRUE
      brwh[3]:HIDDEN = TRUE
      brwh[6]:HIDDEN = FALSE
      BTN_ATERMTRL:HIDDEN = FALSE 
      BTN_OVERMTRL:HIDDEN = TRUE 
      BTN_ALLOVERMTRL:HIDDEN = TRUE
      BTN_BACKMTRL:HIDDEN = TRUE
      BTN_ALLBACKMTRL:HIDDEN = TRUE
      BTN_BYTLEV:HIDDEN = TRUE
      FILL-IN-BYTLEV:HIDDEN = TRUE
      FILL-IN-BYTLEV-2:HIDDEN = TRUE 
      CMB_LEVTILL:HIDDEN = TRUE
      BTN_MTRLTABORT:HIDDEN = TRUE
      BTN_MTRLENDASTMARK:HIDDEN = TRUE  
      
       
     
      BTN_ORGENR:HIDDEN = TRUE          
      BTN_INKANTAL:HIDDEN = TRUE
      BTN_MTRLBACK:HIDDEN = TRUE.
     
   END.   
   RUN raduppk_UI.
END PROCEDURE.
PROCEDURE antalmatrl_UI :   
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE raddep AS INTEGER NO-UNDO.
   DEFINE VARIABLE tillvar AS CHARACTER NO-UNDO.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   IF brwfocus NE 4 THEN RETURN NO-APPLY.
   IF brwh[4]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.
   antal_valda = brwh[4]:NUM-SELECTED-ROWS.
   antal_raknare = 1.
  
   IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
      DO WHILE antal_raknare LE antal_valda:                                   
         status-ok = brwh[4]:FETCH-SELECTED-ROW(antal_raknare).     
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
         CREATE eink_mtrl.
         BUFFER-COPY inkbest_mtrl TO eink_mtrl.               
         RUN INKANTALDIREKT.W (INPUT-OUTPUT TABLE eink_mtrl).   
      
         IF musz = TRUE THEN DO:
            musz = FALSE.
            EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
            RETURN.
         END.
         ELSE DO:   
            FIND FIRST eink_mtrl WHERE NO-LOCK NO-ERROR.
            IF brwfocus = 4 THEN DO:
               FIND FIRST ink_mtrl WHERE ink_mtrl.ENR = eink_mtrl.ENR AND ink_mtrl.LEVKODINK = eink_mtrl.LEVKODINK NO-LOCK NO-ERROR.
               IF AVAILABLE ink_mtrl THEN DO:
                  BUFFER-COPY eink_mtrl TO ink_mtrl. 
                  ASSIGN
                  ink_mtrl.BERANTAL = 0
                  ink_mtrl.INKANTAL = eink_mtrl.INKANTAL
                  ink_mtrl.NUM = 0
                  ink_mtrl.SKAPNUM = 0
                  ink_mtrl.TILL = "".
               END.   
            END. 
         END.   
         antal_raknare = antal_raknare + 1.               
      END.   
      
      
   END.

   ELSE DO:   
      DO WHILE antal_raknare LE antal_valda:                                   
         status-ok = brwh[4]:FETCH-SELECTED-ROW(antal_raknare).     
         IF inkbest_mtrl.TILL = "DEPÅ" OR inkbest_mtrl.TILL = "KONST" THEN.
         ELSE DO:
            FIND FIRST inkbestmtrlbuff WHERE inkbestmtrlbuff.LEVKODINK = inkbest_mtrl.LEVKODINK AND
            inkbestmtrlbuff.ENR = inkbest_mtrl.ENR AND inkbestmtrlbuff.TILL = "DEPÅ"
            NO-LOCK NO-ERROR.
            IF NOT AVAILABLE inkbestmtrlbuff THEN DO:
               FIND FIRST inkbestmtrlbuff WHERE inkbestmtrlbuff.LEVKODINK = inkbest_mtrl.LEVKODINK AND
               inkbestmtrlbuff.ENR = inkbest_mtrl.ENR AND inkbestmtrlbuff.TILL = "KONST"
               NO-LOCK NO-ERROR.
            END.   
         END.   
         IF NOT AVAILABLE inkbestmtrlbuff THEN DO:
            EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
            CREATE eink_mtrl.
            BUFFER-COPY inkbest_mtrl TO eink_mtrl.               
            RUN INKANTAL.W (INPUT-OUTPUT TABLE eink_mtrl, OUTPUT raddep).   
                  
            IF musz = TRUE THEN DO:
               musz = FALSE.
               EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
               RETURN.
            END.
            ELSE DO:   
               FIND FIRST eink_mtrl WHERE NO-LOCK NO-ERROR.
               IF raddep = 1 THEN tillvar = "DEPÅ".
               ELSE IF raddep = 2 THEN tillvar = "KONST".    
               IF brwfocus = 4 THEN DO:
                  IF eink_mtrl.INKANTAL = 0 THEN DO:                            
                     /*SKA BARA HÄNDA FÖR LEVKODINK = 0 OCH TILL "DEPÅ" "KONST"
                     1. ta ett e-nr beställ för mycket
                     2. ta start posten byt lev till från depå behövs ej köras
                     3. ta till depå posten ändra antal till 0.
                     till depå posten ska bort!!!
                                        
                      */  
                               
                     FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = eink_mtrl.AONRAONR AND ink_mtrl.AONRDELNR = eink_mtrl.AONRDELNR AND
                     ink_mtrl.LEVKOD = eink_mtrl.LEVKOD AND 
                     ink_mtrl.NUM = eink_mtrl.NUM AND ink_mtrl.SKAPNUM = eink_mtrl.SKAPNUM AND 
                     ink_mtrl.ENR = eink_mtrl.ENR AND ink_mtrl.TILL = tillvar:                  
                        DELETE ink_mtrl.                
                     END. 
                                                  
                  END.
                  ELSE IF eink_mtrl.LEVKOD = "0" THEN DO:
                    /*
   	               CREATE ink_mtrl.
   	               BUFFER-COPY eink_mtrl TO ink_mtrl.INKANTAL.
   	               ASSIGN
   	               ink_mtrl.NUM = 0
   	               ink_mtrl.SKAPNUM = 0
   	               ink_mtrl.TILL = "DEPÅ".
   	               */
                  END.
                  ELSE IF eink_mtrl.BERANTAL < eink_mtrl.INKANTAL THEN DO:
                     
                     IF eink_mtrl.TILL = "DEPÅ" OR eink_mtrl.TILL = "KONST" THEN DO:
                        FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = eink_mtrl.AONRAONR AND ink_mtrl.AONRDELNR = eink_mtrl.AONRDELNR AND
                        ink_mtrl.LEVKODINK = eink_mtrl.LEVKODINK AND ink_mtrl.ENR = eink_mtrl.ENR AND ink_mtrl.TILL = tillvar
                        NO-LOCK NO-ERROR.
                     END.   
                     ELSE CREATE ink_mtrl.
                       
                     IF AVAILABLE ink_mtrl THEN DO:
                        BUFFER-COPY eink_mtrl TO ink_mtrl. 
                        ASSIGN
                        ink_mtrl.BERANTAL = 0
                        ink_mtrl.INKANTAL = eink_mtrl.INKANTAL - eink_mtrl.BERANTAL
                        ink_mtrl.NUM = 0
                        ink_mtrl.SKAPNUM = 0
                        ink_mtrl.TILL = tillvar.
                     END.   
                      
                  END.                       
               END. 
               
            END.                  
         END.   
         antal_raknare = antal_raknare + 1.
         RELEASE inkbestmtrlbuff NO-ERROR.
      END.  
   END.
   RUN summtrl_UI.              
   RUN columnstotempdyn_UI IN brwproc[3].   
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].
   
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = eink_mtrl.LEVKODINK  AND inkbest_mtrl.ENR = eink_mtrl.ENR AND  
   inkbest_mtrl .NUM = 0
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE inkbest_mtrl THEN DO:
      FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = eink_mtrl.LEVKODINK  AND inkbest_mtrl.ENR = eink_mtrl.ENR  
      NO-LOCK NO-ERROR.
   END.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.  
   RUN columnstotempdyn_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[21].
   RUN columnstotempdyn_UI IN brwproc[4].   
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
       
END PROCEDURE.
PROCEDURE orgenr_UI :
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE enrorgvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levorgvar AS CHARACTER NO-UNDO.
   IF brwh[brwfocus]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END. 
   IF brwfocus = 4 THEN DO:   
      MESSAGE "OBS! Vill Ni återställa levarantör på alla markerade artiklar till de som är i beredningen?"    
      VIEW-AS ALERT-BOX  
      QUESTION BUTTONS YES-NO TITLE "Återställ leverantör!"  
      UPDATE svar AS LOGICAL .
      
   END.
               
   IF svar = FALSE THEN DO:
      RETURN.
   END.
                                                      
    
   antal_valda = brwh[brwfocus]:NUM-SELECTED-ROWS.
   antal_raknare = 1.
   valdmtrl:
   DO WHILE antal_raknare LE antal_valda:                                   
      status-ok = brwh[brwfocus]:FETCH-SELECTED-ROW(antal_raknare).
      IF antal_raknare = 1 THEN DO:
         enrorgvar = inkbest_mtrl.ENRORG.
         levorgvar = inkbest_mtrl.LEVKOD.
      END.    
      /*EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
      CREATE eink_mtrl.
      ASSIGN 
      eink_mtrl.ENRORG = inkbest_mtrl.ENRORG
      eink_mtrl.LEVKOD  = inkbest_mtrl.LEVKOD. 
      RUN enrben_UI IN inkberh (INPUT-OUTPUT TABLE eink_mtrl).
      FIND FIRST eink_mtrl WHERE NO-LOCK NO-ERROR. */
      FOR EACH ink_mtrl WHERE ink_mtrl.LEVKODINK = inkbest_mtrl.LEVKODINK AND 
      ink_mtrl.ENR = inkbest_mtrl.ENR AND ink_mtrl.TILL = inkbest_mtrl.TILL NO-LOCK:
         IF ink_mtrl.ENRORG NE "" THEN DO:
            FIND FIRST levtemp WHERE levtemp.LEVKOD = ink_mtrl.LEVKOD NO-LOCK NO-ERROR.
            EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
            CREATE eink_mtrl.
            ASSIGN 
            eink_mtrl.ENRORG = ink_mtrl.ENRORG
            eink_mtrl.LEVKOD  = ink_mtrl.LEVKOD. 
            RUN enrben_UI IN inkberh (INPUT-OUTPUT TABLE eink_mtrl).
            FIND FIRST eink_mtrl WHERE NO-LOCK NO-ERROR. 
            ASSIGN
            ink_mtrl.BENAMNING = eink_mtrl.BENAMNING
            ink_mtrl.ENR = ink_mtrl.ENRORG
            ink_mtrl.LEVKODINK = ink_mtrl.LEVKOD
            ink_mtrl.PRISINK = ink_mtrl.PRIS
            ink_mtrl.LEVNAMN = levtemp.LEVNAMN
            ink_mtrl.ENHET = eink_mtrl.ENHET.
            
         END.   
      END.
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
      antal_raknare = antal_raknare + 1.
   END.  
   RUN summtrl_UI.               
   RUN columnstotempdyn_UI IN brwproc[3]. 
   
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/                   
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE ink_mtrl, OUTPUT TABLE ikmtrltemp APPEND).
         
   END.  
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.ENRORG = enrorgvar AND 
   inkbest_mtrl.LEVKOD = levorgvar 
   NO-LOCK NO-ERROR.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.
   RUN columnstotempdyn_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[21].
   RUN columnstotempdyn_UI IN brwproc[4].
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].      
END PROCEDURE.
PROCEDURE levbyt_UI :
   DEFINE VARIABLE enrsparspar AS CHARACTER NO-UNDO.
   IF brwh[brwfocus]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END. 
   IF brwfocus = 4 THEN DO:   
      MESSAGE "OBS! Vill Ni byta levarantör på alla markerade artiklar till " CMB_LEVTILL:SCREEN-VALUE  "?"    
      VIEW-AS ALERT-BOX  
      QUESTION BUTTONS YES-NO TITLE FILL-IN-BYTLEV:SCREEN-VALUE + " " + FILL-IN-BYTLEV-2:SCREEN-VALUE  
      UPDATE svar AS LOGICAL .
      
   END.
   IF brwfocus = 3 THEN DO:   
      MESSAGE "OBS! Vill Ni byta levarantör på alla markerade artiklar till " CMB_LEVTILL:SCREEN-VALUE  "?" SKIP
      "Du byter endast på vald konstruktion!"
      
      VIEW-AS ALERT-BOX  
      QUESTION BUTTONS YES-NO TITLE FILL-IN-BYTLEV:SCREEN-VALUE + " " + FILL-IN-BYTLEV-2:SCREEN-VALUE  
      UPDATE svar .
      enrsparspar = ink_mtrl.ENR.
   END.            
   IF svar = FALSE THEN DO:
      RETURN.
   END.
   RUN levbytE_UI (INPUT enrsparspar).
                                                      
END PROCEDURE.
PROCEDURE levbytE_UI :
   DEFINE INPUT  PARAMETER enrsparspar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE raddep AS INTEGER NO-UNDO.
   DEFINE VARIABLE levidvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levidspar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE bestlevidspar AS CHARACTER NO-UNDO.
   
   DEFINE VARIABLE felmedd AS CHARACTER NO-UNDO.
   DEFINE VARIABLE felval AS INTEGER NO-UNDO.
   DEFINE VARIABLE skipkon AS LOGICAL NO-UNDO.
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE svar AS LOGICAL NO-UNDO.
   EMPTY TEMP-TABLE ekink_mtrl NO-ERROR.    
   ASSIGN
   felmedd = "".  
   RUN levkoll_UI IN inkberh (INPUT CMB_LEVTILL:SCREEN-VALUE,OUTPUT felmedd, OUTPUT levidvar).
   /*Anders Olsson Elpool i Umeå AB  21 jan 2019 09:29:53 
   Från depå levidvar = 0
   */
   IF felmedd NE "" THEN DO:
      MESSAGE felmedd VIEW-AS ALERT-BOX.
      RETURN.
   END.
   IF brwfocus = 4 THEN DO:
      FIND FIRST ink_mtrl WHERE ink_mtrl.LEVKODINK = inkbest_mtrl.LEVKODINK AND 
      ink_mtrl.ENR = inkbest_mtrl.ENR USE-INDEX LEVENR NO-LOCK NO-ERROR.
      ASSIGN 
      bestlevidspar = inkbest_mtrl.LEVKODINK
      enrsparspar = inkbest_mtrl.ENR.
      
   END. 
   /*
   IF levidvar = ink_mtrl.LEVKODINK THEN DO:
       MESSAGE "Du kan inte byta till samma leverantör!"
       VIEW-AS ALERT-BOX. 
      RETURN.      
   END.
   levidspar = ink_mtrl.LEVKODINK.
   */
   /*ingång för Saldo*/
   FIND FIRST levtemp WHERE levtemp.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE
   USE-INDEX LEV NO-LOCK NO-ERROR.                         
   antal_valda = brwh[brwfocus]:NUM-SELECTED-ROWS.
   antal_raknare = 1.
   valdmtrl:
   DO WHILE antal_raknare LE antal_valda:                                   
      status-ok = brwh[brwfocus]:FETCH-SELECTED-ROW(antal_raknare).
      
      IF brwfocus = 4 THEN DO:
         FIND FIRST ink_mtrl WHERE ink_mtrl.LEVKODINK = inkbest_mtrl.LEVKODINK AND 
         ink_mtrl.ENR = inkbest_mtrl.ENR AND ink_mtrl.TILL = inkbest_mtrl.TILL NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN DO:
            antal_raknare = antal_raknare + 1.
            NEXT valdmtrl.
         END.
         
      END.
      IF levidvar = ink_mtrl.LEVKODINK THEN DO:
         MESSAGE "Du kan inte byta till samma leverantör!"
         VIEW-AS ALERT-BOX. 
         antal_raknare = antal_raknare + 1.
         NEXT valdmtrl.      
      END.
      levidspar = ink_mtrl.LEVKODINK.
      
      
      IF Guru.Konstanter:globforetag = "snat" THEN DO:
         IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
            IF levidvar = ink_mtrl.LEVKODINK THEN DO:
               IF inkbest_mtrl.DEPASALDO = 0 THEN DO:
                  MESSAGE "Saldot är noll för denna depå och enr. "
                  VIEW-AS ALERT-BOX. 
                  antal_raknare = antal_raknare + 1.
                  NEXT valdmtrl. 
               END.
            END.   
            /*IF inkbest_mtrl.DEPASALDO = 0 AND Guru.GlobalaVariabler:GuruDepaNamn NE "Ingen depå" THEN DO:
               MESSAGE "Saldot är noll för denna depå och enr.  Byt depå till Ingen depå om det inte skall plockas ur upplagd depå"
               VIEW-AS ALERT-BOX. 
               antal_raknare = antal_raknare + 1.
               NEXT valdmtrl. 
            END.*/
         END.      
      END.   
      
       
      IF AVAILABLE ink_mtrl THEN DO: /*ekink för dubbletter*/
         FIND FIRST ekink_mtrl WHERE ekink_mtrl.ENR = ink_mtrl.ENR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ekink_mtrl THEN DO:
            CREATE ekink_mtrl.   
            BUFFER-COPY ink_mtrl TO ekink_mtrl.
            ekink_mtrl.LEVKODINK = levidvar.
         END.   
      END.   
      IF inkbest_mtrl.TILL = "DEPÅ" AND CMB_LEVTILL:SCREEN-VALUE = "Från Depå" THEN.
      ELSE IF inkbest_mtrl.TILL = "KONST" AND CMB_LEVTILL:SCREEN-VALUE = "Från Depå" THEN.
      ELSE DO:
         ASSIGN
         felmedd = "".
         skipkon = FALSE. 
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR.          
         IF brwfocus = 3 THEN DO: 
            RUN setlastrowid_UI IN brwproc[brwfocus] (INPUT ROWID(ink_mtrl)).
         END.
         svar = TRUE. 
         IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN.  
         ELSE IF CMB_LEVTILL:SCREEN-VALUE = "Från Depå" THEN DO:
            ASSIGN             
            ink_mtrl.PRISINK = ink_mtrl.PRIS                      
            skipkon = TRUE. 
            IF brwfocus = 4 THEN DO:
               CREATE eink_mtrl.
               BUFFER-COPY inkbest_mtrl TO eink_mtrl.
               eink_mtrl.LEVKODINK = levidvar.
               RUN INKANTAL.W (INPUT-OUTPUT TABLE eink_mtrl,OUTPUT raddep).
                
               FIND FIRST eink_mtrl NO-LOCK NO-ERROR.
               IF musz = TRUE THEN DO:
                  musz = FALSE.
                  EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
                  svar = FALSE.              
                  antal_raknare = antal_raknare + 1.
                  NEXT valdmtrl.              
               END.
               
            END.   
         END.
         IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN.
         ELSE IF Guru.Konstanter:globforetag = "BODE" AND CMB_LEVTILL:SCREEN-VALUE = "Depå Boden" THEN DO:
            ASSIGN             
            ink_mtrl.PRISINK = ink_mtrl.PRIS                      
            skipkon = TRUE. 
            IF brwfocus = 4 THEN DO:
               CREATE eink_mtrl.
               BUFFER-COPY inkbest_mtrl TO eink_mtrl.
               eink_mtrl.LEVKODINK = levidvar.
               RUN INKANTAL.W (INPUT-OUTPUT TABLE eink_mtrl,OUTPUT raddep).
               
               FIND FIRST eink_mtrl NO-LOCK NO-ERROR.
               IF musz = TRUE THEN DO:
                  musz = FALSE.
                  EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
                  svar = FALSE.              
                  antal_raknare = antal_raknare + 1.
                  NEXT valdmtrl.              
               END.
               
            END.   
         END.
         ELSE IF Guru.Konstanter:globforetag = "GKAL" AND CMB_LEVTILL:SCREEN-VALUE = "Katalog Kalmar" THEN DO:
            ASSIGN             
            ink_mtrl.PRISINK = ink_mtrl.PRIS                      
            skipkon = TRUE. 
            IF brwfocus = 4 THEN DO:
               CREATE eink_mtrl.
               BUFFER-COPY inkbest_mtrl TO eink_mtrl.
               eink_mtrl.LEVKODINK = levidvar.
               RUN INKANTAL.W (INPUT-OUTPUT TABLE eink_mtrl,OUTPUT raddep).
               
               FIND FIRST eink_mtrl NO-LOCK NO-ERROR.
               IF musz = TRUE THEN DO:
                  musz = FALSE.
                  EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
                  svar = FALSE.              
                  antal_raknare = antal_raknare + 1.
                  NEXT valdmtrl.              
               END.
               
            END.   
         END.  
         ELSE IF Guru.Konstanter:globforetag = "SNAT" THEN DO:
            /*snatdepå*/ 
                  
         END.  
                  
         IF Guru.Konstanter:globforetag = "CELPA" {GLOBVES.I} THEN DO:
            IF levidvar = "17" THEN DO:
               skipkon = TRUE.                                                                 
            END.               
            IF levidvar = "11" THEN DO:
               skipkon = TRUE.                                                                 
            END.               
         END.
         IF skipkon = FALSE THEN DO:  
            CREATE eink_mtrl.
            BUFFER-COPY ink_mtrl TO eink_mtrl.
            RUN enrkontroll_UI IN inkberh (INPUT ink_mtrl.LEVKODINK,INPUT levidvar,INPUT ink_mtrl.ENR,
                                           INPUT-OUTPUT TABLE eink_mtrl, OUTPUT felmedd, OUTPUT felval).                        
            IF brwfocus = 4 THEN DO:
               IF felval = 5 AND Guru.Konstanter:globforetag = "gran" THEN DO:
                  svar = TRUE.
                  felmedd = "".
               END.
            END. 
            IF felmedd NE "" THEN DO:      /* Ni har möjlighet att byta till ENR XXX hos ahlsell */ 
               MESSAGE felmedd VIEW-AS ALERT-BOX
               QUESTION BUTTONS YES-NO TITLE "Meddelande" UPDATE svar. 
            END.
                
            IF svar = TRUE THEN DO:
               /*den första uppdateras*/
               FIND FIRST eink_mtrl NO-LOCK NO-ERROR.
               BUFFER-COPY eink_mtrl TO ink_mtrl.
            END.
            /*   
            IF svar = FALSE THEN DO:
               ink_mtrl.PRISINK = ink_mtrl.PRIS.
            END.
            */
         END.
           
         IF svar = TRUE THEN DO:
            IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
               ASSIGN 
               ink_mtrl.LEVKODINK = levidvar 
               ink_mtrl.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
            END.
            ELSE DO:  
               
               IF brwfocus = 4 AND CMB_LEVTILL:SCREEN-VALUE = "Från Depå" THEN.
               ELSE IF brwfocus = 4 AND CMB_LEVTILL:SCREEN-VALUE = "Depå Boden" THEN.
               ELSE IF brwfocus = 4 AND CMB_LEVTILL:SCREEN-VALUE = "Katalog Kalmar" THEN.
               ELSE DO:
                  ASSIGN 
                  ink_mtrl.LEVKODINK = levidvar 
                  ink_mtrl.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
                  ink_mtrl.DEPNRINK = 0.
                  ink_mtrl.PROJDEPNRINK = 0.                  
               END.
            END.                      
            IF brwfocus = 4 THEN DO:
               IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN.
               ELSE IF CMB_LEVTILL:SCREEN-VALUE = "Från Depå" OR CMB_LEVTILL:SCREEN-VALUE = "Depå Boden" OR 
                  CMB_LEVTILL:SCREEN-VALUE = "Katalog Kalmar" THEN DO:
                  IF eink_mtrl.BERANTAL = eink_mtrl.INKANTAL THEN DO:
                     FOR EACH ink_mtrlb WHERE ink_mtrlb.LEVKODINK = levidspar AND ink_mtrlb.ENR = eink_mtrl.ENR NO-LOCK:
                        ASSIGN 
                        ink_mtrlb.LEVKODINK = levidvar 
                        ink_mtrlb.PRISINK = eink_mtrl.PRISINK
                        ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE
                        ink_mtrlb.DEPNRINK = Guru.GlobalaVariabler:GuruDepaNr
                        ink_mtrlb.PROJDEPNRINK = Guru.GlobalaVariabler:GuruProjdepnr.
                        IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE + " " + Guru.GlobalaVariabler:GuruDepaNamn.
                     END.
                  END. 
                  ELSE DO:
                     FIND FIRST ink_mtrl WHERE ink_mtrl.LEVKODINK = levidspar AND ink_mtrl.ENR = eink_mtrl.ENR 
                     USE-INDEX BERORDNR NO-LOCK NO-ERROR.
                     REPEAT:
                        IF ink_mtrl.INKANTAL <= eink_mtrl.INKANTAL THEN DO:
                           ASSIGN 
                           ink_mtrl.LEVKODINK = levidvar 
                           ink_mtrl.PRISINK = eink_mtrl.PRISINK
                           ink_mtrl.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
                           ink_mtrl.DEPNRINK = Guru.GlobalaVariabler:GuruDepaNr.
                           ink_mtrl.PROJDEPNRINK = Guru.GlobalaVariabler:GuruProjdepnr.
                           IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN ink_mtrl.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE + " " + Guru.GlobalaVariabler:GuruDepaNamn.
                        END.
                        ELSE DO:
                           ink_mtrl.INKANTAL = ink_mtrl.INKANTAL - eink_mtrl.INKANTAL.
                           CREATE ink_mtrlb.
                           BUFFER-COPY ink_mtrl TO ink_mtrlb.
                           ASSIGN 
                           ink_mtrlb.BERANTAL = 0 
                           ink_mtrlb.INKANTAL = eink_mtrl.INKANTAL
                           ink_mtrlb.LEVKODINK = levidvar 
                           ink_mtrlb.PRISINK = eink_mtrl.PRISINK
                           ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.                           
                           ink_mtrlb.DEPNRINK = Guru.GlobalaVariabler:GuruDepaNr.
                           ink_mtrlb.PROJDEPNRINK = Guru.GlobalaVariabler:GuruProjdepnr .
                           IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE + " " + Guru.GlobalaVariabler:GuruDepaNamn.                           
                           eink_mtrl.INKANTAL = 0.
                        END.   
                        eink_mtrl.INKANTAL = eink_mtrl.INKANTAL - ink_mtrl.INKANTAL.
                        IF eink_mtrl.INKANTAL <= 0 THEN LEAVE.
                        FIND NEXT ink_mtrl WHERE ink_mtrl.LEVKODINK = levidspar AND ink_mtrl.ENR = eink_mtrl.ENR 
                        USE-INDEX BERORDNR NO-LOCK NO-ERROR.
                     END.
                     EMPTY TEMP-TABLE eink_mtrl NO-ERROR.   
                  END. /* else do */      
               END.
               ELSE DO:    
                  /*övriga*/                              
                  FOR EACH ink_mtrlb WHERE ink_mtrlb.LEVKODINK = levidspar AND ink_mtrlb.ENR = ink_mtrl.ENR AND 
                  ink_mtrlb.TILL = ink_mtrl.TILL
                  NO-LOCK:
                     IF AVAILABLE eink_mtrl  THEN DO:
                        ink_mtrlb.ENHET = eink_mtrl.ENHET.
                     END.  
                     ELSE DO:
                        ink_mtrlb.ENHET = ink_mtrl.ENHET.
                     END.   
                     ASSIGN 
                     ink_mtrlb.BENAMNING = ink_mtrl.BENAMNING
                     ink_mtrlb.LEVKODINK = levidvar 
                     ink_mtrlb.PRISINK = ink_mtrl.PRISINK
                     ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
                  END.
                  IF inkbest_mtrl.ENR NE ink_mtrl.ENR THEN DO:
                     FOR EACH ink_mtrlb WHERE ink_mtrlb.LEVKODINK = levidspar AND ink_mtrlb.ENR = inkbest_mtrl.ENR AND 
                     ink_mtrlb.TILL = ink_mtrl.TILL
                     NO-LOCK:
                        IF AVAILABLE eink_mtrl  THEN DO:
                           ASSIGN 
                           ink_mtrlb.BENAMNING = eink_mtrl.BENAMNING
                           ink_mtrlb.ENR = eink_mtrl.ENR
                           ink_mtrlb.ENHET = eink_mtrl.ENHET
                           ink_mtrlb.LEVKODINK = levidvar 
                           ink_mtrlb.PRISINK = ink_mtrl.PRISINK
                           ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
                        END.  
                        ELSE DO:
                           ASSIGN 
                           ink_mtrlb.BENAMNING = ink_mtrl.BENAMNING
                           ink_mtrlb.ENR = ink_mtrl.ENR
                           ink_mtrlb.ENHET = ink_mtrl.ENHET
                           ink_mtrlb.LEVKODINK = levidvar 
                           ink_mtrlb.PRISINK = ink_mtrl.PRISINK
                           ink_mtrlb.LEVNAMN = CMB_LEVTILL:SCREEN-VALUE.
                        END.
                     END.
                  END. 
               END. 
            END.                          
         END.
      END.       
      
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.  
      antal_raknare = antal_raknare + 1.
   END.  
   RUN dubblev_UI. 
   EMPTY TEMP-TABLE ekink_mtrl NO-ERROR.
   RUN summtrl_UI.               
   RUN columnstotempdyn_UI IN brwproc[3]. 
   
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/                   
      RUN inkinnettomark_UI IN nettoh (INPUT TABLE ink_mtrl, OUTPUT TABLE ikmtrltemp APPEND).
   END.  
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].
   FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = levidvar AND inkbest_mtrl.ENR = enrsparspar USE-INDEX LEVENR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE inkbest_mtrl THEN DO:
      FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = bestlevidspar AND inkbest_mtrl.ENR = enrsparspar USE-INDEX LEVENR NO-LOCK NO-ERROR.
   END.
   IF NOT AVAILABLE inkbest_mtrl THEN DO:
      FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = levidvar USE-INDEX LEVENR NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.
   RUN columnstotempdyn_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[21].
   RUN columnstotempdyn_UI IN brwproc[4].
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].      
END PROCEDURE.
PROCEDURE dubblev_UI :
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
   FOR EACH ekink_mtrl: 
      FOR EACH ink_mtrl WHERE ink_mtrl.ENR = ekink_mtrl.ENR AND ink_mtrl.LEVKODINK = ekink_mtrl.LEVKODINK
         BREAK BY ink_mtrl.TILL BY ink_mtrl.LEVKODINK BY ink_mtrl.ENR 
               BY ink_mtrl.LEVKOD BY ink_mtrl.ENRORG BY ink_mtrl.NUM BY ink_mtrl.SKAPNUM:      
         ACCUMULATE ink_mtrl.INKANTAL (TOTAL BY ink_mtrl.TILL BY ink_mtrl.LEVKODINK BY ink_mtrl.ENR 
                                             BY ink_mtrl.LEVKOD BY ink_mtrl.ENRORG  BY ink_mtrl.NUM BY ink_mtrl.SKAPNUM).         
         IF LAST-OF(ink_mtrl.SKAPNUM) THEN DO:
            CREATE eink_mtrl.
            BUFFER-COPY ink_mtrl TO eink_mtrl.                    
            eink_mtrl.INKANTAL = (ACCUM TOTAL BY ink_mtrl.SKAPNUM ink_mtrl.INKANTAL).         
         END.                                              
      END.
   END. 
   FOR EACH ekink_mtrl: 
      FOR EACH ink_mtrl WHERE ink_mtrl.ENR = ekink_mtrl.ENR AND ink_mtrl.LEVKODINK = ekink_mtrl.LEVKODINK:
         DELETE ink_mtrl. 
      END.
   END.     
   
   FOR EACH eink_mtrl WHERE NO-LOCK:
      CREATE ink_mtrl.
      BUFFER-COPY eink_mtrl TO ink_mtrl.
   END.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.   
END PROCEDURE.
PROCEDURE bortEjMarkmatrl_UI :
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE crow AS ROWID NO-UNDO.
   DEFINE VARIABLE svaralla AS LOGICAL NO-UNDO.
   svaralla = FALSE.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   EMPTY TEMP-TABLE einkejbort_mtrl NO-ERROR. 
   IF brwh[4]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.

   antal_valda = brwh[4]:NUM-SELECTED-ROWS.
   antal_raknare = 1.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
    MESSAGE "Vill du ta bort allt EJ markerat materiel UR DETTA INKÖP?" SKIP
    "Matrielet finns kvar och kan beställas senare!"
    VIEW-AS ALERT-BOX
    QUESTION BUTTONS OK-CANCEL TITLE "Ta bort materiel!" UPDATE svaralla .
   IF svaralla = TRUE THEN.
   ELSE RETURN.
   DO WHILE antal_raknare LE antal_valda:                                   
      status-ok = brwh[4]:FETCH-SELECTED-ROW(antal_raknare).
      CREATE einkejbort_mtrl.
      BUFFER-COPY inkbest_mtrl TO einkejbort_mtrl.
      einkejbort_mtrl.TTRECID = RECID(inkbest_mtrl). 
      antal_raknare = antal_raknare + 1.    
   END.
   FOR EACH inkbest_mtrl WHERE NO-LOCK:
      FIND FIRST einkejbort_mtrl  WHERE einkejbort_mtrl.TTRECID = RECID(inkbest_mtrl) NO-LOCK NO-ERROR.
      IF NOT AVAILABLE einkejbort_mtrl THEN DO:
         CREATE eink_mtrl.
         BUFFER-COPY inkbest_mtrl TO eink_mtrl. 
         DELETE inkbest_mtrl.                          
      END.                                                                   
   END.     
     
   FOR EACH eink_mtrl WHERE NO-LOCK:
      FOR EACH ink_mtrl WHERE ink_mtrl.ENR = eink_mtrl.ENR AND 
      ink_mtrl.LEVKODINK = eink_mtrl.LEVKODINK AND ink_mtrl.TILL = eink_mtrl.TILL NO-LOCK:            
         CREATE bort_mtrl.
         BUFFER-COPY ink_mtrl TO bort_mtrl. 
         DELETE ink_mtrl.        
         FIND FIRST ink_mtrlb WHERE ink_mtrlb.AONRAONR = bort_mtrl.AONRAONR AND 
         ink_mtrlb.AONRDELNR = bort_mtrl.AONRDELNR AND 
         ink_mtrlb.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrlb THEN DO:
            FIND FIRST ink_val  WHERE ink_val.AONRAONR = bort_mtrl.AONRAONR AND ink_val.AONRDELNR = bort_mtrl.AONRDELNR AND 
            ink_val.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
            IF AVAILABLE ink_val THEN DO:
               RUN ejtmultibr_UI IN brwproc[2] (INPUT ROWID(ink_val)).
               APPLY "CHOOSE" TO BTN_BACKMTRL.
            END.                  
         END.
      END.  
   END.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
   EMPTY TEMP-TABLE einkejbort_mtrl NO-ERROR.     
   RUN summtrl_UI.               
   RUN columnstotempdyn_UI IN brwproc[3].   
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].      
   RUN columnstotempdyn_UI IN brwproc[4].   
   FIND FIRST inkbest_mtrl  WHERE inkbest_mtrl.ENR = enrvar AND inkbest_mtrl.LEVKODINK = levvar NO-LOCK NO-ERROR.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.      
   RUN openbdynspec_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].
END PROCEDURE.
PROCEDURE bortmatrl_UI :   
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE enrvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE crow AS ROWID NO-UNDO.
   DEFINE VARIABLE svaralla AS LOGICAL NO-UNDO.
   svaralla = FALSE.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   IF brwh[4]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.

   antal_valda = brwh[4]:NUM-SELECTED-ROWS.
   antal_raknare = 1.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
   IF antal_valda > 2 THEN DO:
      IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
          MESSAGE "Vill du ta bort allt markerat materiel UR DETTA INKÖP utan fler kontroll frågor?" 
          VIEW-AS ALERT-BOX
          QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svaralla .
      END.
      ELSE DO:
          MESSAGE "Vill du ta bort allt markerat materiel UR DETTA INKÖP utan fler kontroll frågor?" SKIP
          "Matrielet finns kvar och kan beställas senare!"
          VIEW-AS ALERT-BOX
          QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svaralla .
      END.       
   END.   
   IF svaralla = ? THEN RETURN.
   DO WHILE antal_raknare LE antal_valda:                                   
      status-ok = brwh[4]:FETCH-SELECTED-ROW(antal_raknare).
      IF svaralla = FALSE THEN DO: 
         IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
            MESSAGE "Vill du ta bort materiel " inkbest_mtrl.ENR inkbest_mtrl.BENAMNING " ?"
            VIEW-AS ALERT-BOX
            QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svar AS LOGICAL .
         END.   
         ELSE IF inkbest_mtrl.TILL = "DEPÅ" THEN DO:
            MESSAGE "Vill du ta bort materiel " inkbest_mtrl.ENR inkbest_mtrl.BENAMNING " till depå?"
            VIEW-AS ALERT-BOX
            QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svar .
         END.
         ELSE IF inkbest_mtrl.TILL = "KONST" THEN DO:
            MESSAGE "Vill du ta bort materiel " inkbest_mtrl.ENR inkbest_mtrl.BENAMNING " till konstruktion?"
            VIEW-AS ALERT-BOX
            QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svar.
         END.
         ELSE DO:   
            MESSAGE "Vill du ta bort materiel " inkbest_mtrl.ENR inkbest_mtrl.BENAMNING " för alla konstruktioner?"
            VIEW-AS ALERT-BOX
            QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort materiel!" UPDATE svar.
         END.
      END.
      ELSE svar = TRUE.   
      IF svar = ? THEN RETURN. 
      IF svar = TRUE THEN DO:
         CREATE eink_mtrl.
         BUFFER-COPY inkbest_mtrl TO eink_mtrl. 
         DELETE inkbest_mtrl.                          
         IF antal_raknare = brwh[4]:NUM-SELECTED-ROWS THEN DO:            
            RUN selnextprevrow_UI IN brwproc[4].
            RUN getrow_UI IN brwproc[4] (OUTPUT crow).
            FIND FIRST inkbest_mtrl WHERE ROWID(inkbest_mtrl) = crow NO-LOCK NO-ERROR.  
            IF AVAILABLE inkbest_mtrl THEN DO: 
               ASSIGN 
               enrvar = inkbest_mtrl.ENR
               levvar = inkbest_mtrl.LEVKODINK.
            END.                
         END.            
      END.                                                                   
      antal_raknare = antal_raknare + 1.    
   END.  
   FOR EACH eink_mtrl WHERE NO-LOCK:
      FOR EACH ink_mtrl WHERE ink_mtrl.ENR = eink_mtrl.ENR AND 
      ink_mtrl.LEVKODINK = eink_mtrl.LEVKODINK AND ink_mtrl.TILL = eink_mtrl.TILL NO-LOCK:            
         CREATE bort_mtrl.
         BUFFER-COPY ink_mtrl TO bort_mtrl. 
         DELETE ink_mtrl.        
         FIND FIRST ink_mtrlb WHERE ink_mtrlb.AONRAONR = bort_mtrl.AONRAONR AND 
         ink_mtrlb.AONRDELNR = bort_mtrl.AONRDELNR AND 
         ink_mtrlb.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrlb THEN DO:
            FIND FIRST ink_val  WHERE ink_val.AONRAONR = bort_mtrl.AONRAONR AND ink_val.AONRDELNR = bort_mtrl.AONRDELNR AND 
            ink_val.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
            IF AVAILABLE ink_val THEN DO:
               RUN ejtmultibr_UI IN brwproc[2] (INPUT ROWID(ink_val)).
               APPLY "CHOOSE" TO BTN_BACKMTRL.
            END.                  
         END.
      END.  
   END.
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.     
   RUN summtrl_UI.               
   RUN columnstotempdyn_UI IN brwproc[3].   
   RUN openbdynspec_UI IN brwproc[3].
   RUN lastselectdyn_UI IN brwproc[3].      
   RUN columnstotempdyn_UI IN brwproc[4].   
   FIND FIRST inkbest_mtrl  WHERE inkbest_mtrl.ENR = enrvar AND inkbest_mtrl.LEVKODINK = levvar NO-LOCK NO-ERROR.
   IF AVAILABLE inkbest_mtrl THEN DO:
      RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(inkbest_mtrl)).
   END.      
   RUN openbdynspec_UI IN brwproc[21].
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].         
END PROCEDURE.
PROCEDURE mtrlistadirekt_UI :
   DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ktk AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kvk AS CHARACTER NO-UNDO.
   EMPTY TEMP-TABLE mtrltemp NO-ERROR.
   IF Konvalbuffh:AVAILABLE THEN DO:
   END.
   ELSE DO:
      MESSAGE "Data saknas!"
      VIEW-AS ALERT-BOX.
      RETURN.
   END.  
   ktk = Konvalbuffh:BUFFER-FIELD("KTYPKOD"):BUFFER-VALUE.
   kvk = Konvalbuffh:BUFFER-FIELD("KVALKOD"):BUFFER-VALUE.
    
   
   kommandoquery = "FOR EACH " + Mtrlberbuffh:TABLE + " WHERE   KTYPKOD = " + QUOTER(ktk) + " AND F1 = " + QUOTER(kvk) + " NO-LOCK".
   RUN CreateCustomQuery(INPUT Mtrlberbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().  
   DO WHILE qH:QUERY-OFF-END = FALSE:
      CREATE mtrltemp.
      BUFFER mtrltemp:HANDLE:BUFFER-COPY(Mtrlberbuffh).
      mtrltemp.NPRIS = Mtrlberbuffh:BUFFER-FIELD("PRIS"):BUFFER-VALUE.
      qH:GET-NEXT().                 
   END.
  
   RUN setcolsortvar_UI IN brwproc[24] (INPUT "").
   RUN setorgtitle_UI IN brwproc[24] (INPUT  Konvalbuffh:BUFFER-FIELD("BENAMNING"):BUFFER-VALUE).
  
   RUN openbdynspec_UI IN brwproc[24].   
   RUN title_UI IN brwproc[24].
   
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/   
      RUN columnstotempdyn_UI IN brwproc[24].                
      RUN inkinnettomarkmtrl_UI IN nettoh (INPUT TABLE mtrltemp, OUTPUT TABLE ikmtrltemp APPEND).
      RUN openbdynspec_UI IN brwproc[24].      
   END.
END PROCEDURE.
PROCEDURE kmtrlentry_UI :
   FILL-IN-BYTLEV:SCREEN-VALUE = "Byt leverantör för".
   FILL-IN-BYTLEV-2:SCREEN-VALUE = "konstruktionsmateriel.".
   brwfocus = 3.
END PROCEDURE.
PROCEDURE smtrlentry_UI :
   FILL-IN-BYTLEV:SCREEN-VALUE = "Byt leverantör för".
   FILL-IN-BYTLEV-2:SCREEN-VALUE = "alla " + Guru.Konstanter:genk.
   brwfocus = 4.
END PROCEDURE.

PROCEDURE rowdispbortmtrl_UI:
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   
   IF AVAILABLE bort_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  bort_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  bort_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            bort_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[6] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = bort_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  bort_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
                           /*STOLPAR turkosa fortum  gula övriga*/
               bort_mtrl.KUND = TRUE.            
               RUN bgcolor_UI IN brwproc[6] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
         
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = bort_mtrl.LEVKODINK AND*/ berstolptemp.ENR = bort_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         RUN bgcolor_UI IN brwproc[6] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
END PROCEDURE.
 
PROCEDURE rowdispbestmtrl_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.

   IF AVAILABLE tidink_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  tidink_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  tidink_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            tidink_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[17] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = tidink_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  tidink_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               tidink_mtrl.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[17] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = tidink_mtrl.LEVKOD AND*/ berstolptemp.ENR = tidink_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         RUN bgcolor_UI IN brwproc[17] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
   
END PROCEDURE.

PROCEDURE rowdispbestmtrlbe_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF AVAILABLE inkbest_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/ 
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = inkbest_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            inkbest_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[21] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = inkbest_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               inkbest_mtrl.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[21] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
            
         END.
         FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = inkbest_mtrl.LEVKODINK AND*/ berstolptemp.ENR = inkbest_mtrl.ENR NO-LOCK NO-ERROR.
         IF AVAILABLE berstolptemp THEN DO:                        
            /*STOLPAR turkosa fortum  gula övriga*/
            RUN bgcolor_UI IN brwproc[21] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
         END.
      END.
   END.    
END PROCEDURE.
PROCEDURE rowdispstidigare_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF AVAILABLE tidinkadresstemp THEN DO:  
      
      IF tidinkadresstemp.IEXTRAINT[1] = 1 AND tidinkadresstemp.IEXTRAINT[2] = 1 THEN tidinkadresstemp.PACKNING =  radprojladd[4].
      ELSE IF tidinkadresstemp.IEXTRAINT[1] = 4 THEN tidinkadresstemp.PACKNING =  radprojladd[4].
      ELSE IF tidinkadresstemp.IEXTRAINT[1] = 1 THEN tidinkadresstemp.PACKNING =  radprojladd[1].
      ELSE IF tidinkadresstemp.IEXTRAINT[1] = 2 THEN tidinkadresstemp.PACKNING =  radprojladd[2].
      /* IF tidinkadresstemp.IEXTRAINT[1] = 1 AND tidinkadresstemp.IEXTRAINT[2] = 1 THEN tidinkadresstemp.PACKNING = "Upplagspackning".
      ELSE IF tidinkadresstemp.IEXTRAINT[1] = 1 THEN tidinkadresstemp.PACKNING = "Projektpackning".
      ELSE IF tidinkadresstemp.IEXTRAINT[1] = 2 THEN tidinkadresstemp.PACKNING = "Snabbleverans".
      */
      
   END.  
END PROCEDURE.

PROCEDURE rowdispsokmtrl_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   
   IF AVAILABLE mtrltemp THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  mtrltemp.LEVKOD AND 
         ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
              /*STOLPAR turkosa fortum  gula övriga*/
            mtrltemp.KUND = TRUE.  
            RUN bgcolor_UI IN brwproc[16] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = mtrltemp.LEVKOD AND 
            ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               mtrltemp.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[16] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
         FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = mtrltemp.LEVKOD AND*/ berstolptemp.ENR = mtrltemp.ENR NO-LOCK NO-ERROR.
         IF AVAILABLE berstolptemp THEN DO:                        
            /*STOLPAR turkosa fortum  gula övriga*/
            RUN bgcolor_UI IN brwproc[16] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
         END.
      END.
   END.  
END PROCEDURE.
PROCEDURE rowdispsokmtrlD_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   
   IF AVAILABLE mtrltemp THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  mtrltemp.LEVKOD AND 
         ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
              /*STOLPAR turkosa fortum  gula övriga*/
          
            mtrltemp.KUND = TRUE.  
            RUN bgcolor_UI IN brwproc[24] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = mtrltemp.LEVKOD AND 
            ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               mtrltemp.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[24] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
         FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = mtrltemp.LEVKOD AND*/ berstolptemp.ENR = mtrltemp.ENR NO-LOCK NO-ERROR.
         IF AVAILABLE berstolptemp THEN DO:                        
            /*STOLPAR turkosa fortum  gula övriga*/
            RUN bgcolor_UI IN brwproc[24] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
         END.
      END.
   END.  
END PROCEDURE.
PROCEDURE rowdispsokmtrlbe_UI :
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF AVAILABLE mtrltemp THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  mtrltemp.LEVKOD AND 
         ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
              /*STOLPAR turkosa fortum  gula övriga*/
            mtrltemp.KUND = TRUE.  
            RUN bgcolor_UI IN brwproc[20] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = mtrltemp.LEVKOD AND 
            ikmtrltemp.ENR =  mtrltemp.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               mtrltemp.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[20] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = mtrltemp.LEVKOD AND*/ berstolptemp.ENR = mtrltemp.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         
         RUN bgcolor_UI IN brwproc[20] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
END PROCEDURE.
PROCEDURE rowdispkonmtrl_UI:
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.

   IF AVAILABLE ink_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  ink_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  ink_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            ink_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[3] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = ink_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  ink_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               ink_mtrl.KUND = TRUE.
               /*STOLPAR turkosa fortum  gula övriga*/
               RUN bgcolor_UI IN brwproc[3] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = ink_mtrl.LEVKODINK AND*/ berstolptemp.ENR = ink_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         RUN bgcolor_UI IN brwproc[3] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
END PROCEDURE.
PROCEDURE rowdispsummtrl_UI:
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF AVAILABLE inkbest_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:         
    
         /*nettopris beredning inköp*/   
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  inkbest_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            inkbest_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[4] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = inkbest_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               inkbest_mtrl.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[4] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
         
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = inkbest_mtrl.LEVKODINK AND*/ berstolptemp.ENR = inkbest_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         RUN bgcolor_UI IN brwproc[4] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
END PROCEDURE.
PROCEDURE rowdisplevmtrl_UI:
   DEFINE INPUT PARAMETER TABLE FOR coltemp.
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF AVAILABLE inkbest_mtrl THEN DO:         
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/         
         FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD =  inkbest_mtrl.LEVKODINK AND 
         ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = TRUE  
         NO-LOCK NO-ERROR.
         IF AVAILABLE ikmtrltemp THEN DO:
            /*STOLPAR turkosa fortum  gula övriga*/
            inkbest_mtrl.KUND = TRUE.
            RUN bgcolor_UI IN brwproc[8] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[28]).             
         END.
         ELSE DO:
            FIND FIRST ikmtrltemp WHERE ikmtrltemp.LEVKOD = inkbest_mtrl.LEVKODINK AND 
            ikmtrltemp.ENR =  inkbest_mtrl.ENR AND ikmtrltemp.KALKNR = 0 AND ikmtrltemp.KUND = ?  NO-LOCK NO-ERROR.
            IF AVAILABLE ikmtrltemp THEN DO:
               /*STOLPAR turkosa fortum  gula övriga*/
               inkbest_mtrl.KUND = TRUE.
               RUN bgcolor_UI IN brwproc[8] (INPUT "ENR", INPUT Guru.Konstanter:varforetypval[38]).               
            END.
         END.
      END.
      FIND FIRST berstolptemp WHERE /*berstolptemp.LEVKOD = inkbest_mtrl.LEVKODINK AND*/ berstolptemp.ENR = inkbest_mtrl.ENR NO-LOCK NO-ERROR.
      IF AVAILABLE berstolptemp THEN DO:                        
         /*STOLPAR turkosa fortum  gula övriga*/
         RUN bgcolor_UI IN brwproc[8] (INPUT "BENAMNING", INPUT Guru.Konstanter:varforetypval[31]).                                 
      END.
   END.  
END PROCEDURE.
PROCEDURE bestadress_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO. 
   IF kontrollbest = TRUE THEN DO:
      IF vad = 2 OR vad = 3 THEN DO:
         RUN sparaadress_UI.
      END.   
      
      IF vad = 2 OR vad = 12 THEN inkadresssparb.SKICKATSTATUS = "Manuellt beställd".
      IF vad = 3 OR vad = 13 THEN inkadresssparb.SKICKATSTATUS = "Elektroniskt beställd".
      ASSIGN 
      inkadresssparb.AKTIV = FALSE
      inkadresssparb.ANVANDARE = Guru.Konstanter:globanv
      inkadresssparb.BESTTID = TIME
      inkadresssparb.BESTDATUM = TODAY
      inkadresssparb.KLOCKAN = STRING(TIME,"HH:MM:SS").
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
      EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
      
      IF vad = 12 OR vad = 13 THEN DO:
         CREATE einkadresstemp.
         BUFFER-COPY inkadresssparb TO einkadresstemp.
         RUN gamlafardigbest_UI IN inkberh (INPUT-OUTPUT TABLE einkadresstemp).         
         FIND FIRST einkadresstemp NO-LOCK NO-ERROR.
         BUFFER-COPY einkadresstemp TO inkadresssparb.
         EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
      END.   
      IF vad = 2 OR vad = 3 THEN DO:
         FOR EACH ink_mtrl WHERE  
         ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK:
            ink_mtrl.BESTORDNING = inkadresssparb.BESTORDNING. 
            CREATE eink_mtrl.
            BUFFER-COPY ink_mtrl TO eink_mtrl.
            DELETE ink_mtrl.
         END.
         
         FOR EACH eink_mtrl BY eink_mtrl.NUM:
            FIND FIRST ink_val WHERE ink_val.AONRAONR = eink_mtrl.AONRAONR AND ink_val.AONRDELNR = eink_mtrl.AONRDELNR AND ink_val.NUM = eink_mtrl.NUM 
            NO-LOCK NO-ERROR.
            IF AVAILABLE ink_val THEN DO:
               FIND FIRST ink_mtrl WHERE 
               ink_mtrl.AONRAONR = eink_mtrl.AONRAONR AND ink_mtrl.AONRDELNR = eink_mtrl.AONRDELNR AND
               ink_mtrl.NUM = eink_mtrl.NUM
               NO-LOCK NO-ERROR.
               IF NOT AVAILABLE ink_mtrl THEN DO:
                  FIND FIRST bort_mtrl WHERE 
                  bort_mtrl.AONRAONR = eink_mtrl.AONRAONR AND bort_mtrl.AONRDELNR = eink_mtrl.AONRDELNR AND
                  bort_mtrl.NUM = eink_mtrl.NUM
                  NO-LOCK NO-ERROR.
                  IF AVAILABLE bort_mtrl THEN DO:
                     RUN ejtmultibr_UI IN brwproc[2] (INPUT ROWID(ink_val)).
                     /*
                     RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(ink_val)).
                     RUN lastselectdyn_UI IN brwproc[2].
                     */
                     APPLY "CHOOSE" TO BTN_BACKMTRL.
                  END.   
                  ELSE DELETE ink_val.
               END.   
            END.
         END.      
        
         CREATE einkadresstemp.
         BUFFER-COPY inkadresssparb TO einkadresstemp.
         felpaAdressBestOrdning = "".
         RUN fardigbest_UI IN inkberh (INPUT-OUTPUT TABLE einkadresstemp,INPUT TABLE eink_mtrl, OUTPUT felpaAdressBestOrdning).
         IF felpaAdressBestOrdning = "" THEN.
         ELSE DO:
            MESSAGE felpaAdressBestOrdning
            VIEW-AS ALERT-BOX.
            RETURN.
         END.   
         FIND FIRST einkadresstemp WHERE NO-LOCK NO-ERROR.
         
         CREATE tidinkadresstemp. 
         BUFFER-COPY einkadresstemp TO tidinkadresstemp.
         BUFFER-COPY einkadresstemp TO inkadresssparb.
         EMPTY TEMP-TABLE eink_mtrl NO-ERROR. 
         EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
         IF tidinkadresstemp.IEXTRAINT[1] = 1 AND tidinkadresstemp.IEXTRAINT[2] = 1 THEN tidinkadresstemp.PACKNING =  radprojladd[4].
         ELSE IF tidinkadresstemp.IEXTRAINT[1] = 4 THEN tidinkadresstemp.PACKNING =  radprojladd[4].
         ELSE IF tidinkadresstemp.IEXTRAINT[1] = 1 THEN tidinkadresstemp.PACKNING =  radprojladd[1].
         ELSE IF tidinkadresstemp.IEXTRAINT[1] = 2 THEN tidinkadresstemp.PACKNING =  radprojladd[2].
         /*
          IF tidinkadresstemp.IEXTRAINT[1] = 1 AND tidinkadresstemp.IEXTRAINT[2] = 1 THEN tidinkadresstemp.PACKNING = "Upplagspackning".
         ELSE IF tidinkadresstemp.IEXTRAINT[1] = 1 THEN tidinkadresstemp.PACKNING = "Projektpackning".
         ELSE IF tidinkadresstemp.IEXTRAINT[1] = 2 THEN tidinkadresstemp.PACKNING = "Snabbleverans".    
        */
            
         RUN openbdynspec_UI IN brwproc[1].
         RUN openbdynspec_UI IN brwproc[2].
         RUN openbdynspec_UI IN brwproc[3].
         RUN summtrl_UI.
         RUN columnstotempdyn_UI IN brwproc[4].
         RUN openbdynspec_UI IN brwproc[4].
         RUN openbdynspec_UI IN brwproc[21].
         IF VALID-HANDLE(brwproc[5]) THEN  RUN openbdynspec_UI IN brwproc[5].
         RUN openbdynspec_UI IN brwproc[6].
         RUN selnextprevrow_UI IN brwproc[7].
         RUN openbdynspec_UI IN brwproc[7].
         RUN lastselectdyn_UI IN brwproc[7].
         RUN openbdynspec_UI IN brwproc[8].
         RUN openbdynspec_UI IN brwproc[9].
         RUN lastselectdyn_UI IN brwproc[7].
         RUN openbdynspec_UI IN brwproc[10].
         RUN tidigarekoll_UI.
         RUN openbdynspec_UI IN brwproc[11].
         
         RUN openbdynspec_UI IN brwproc[12].
         RUN openbdynspec_UI IN brwproc[13].
         RUN openbdynspec_UI IN brwproc[14].
         RUN openbdynspec_UI IN brwproc[15].
        /*PROCEDURE getcurrent_UI :*/  
         RUN visalevmtrl_UI.
      END.
   END.      
    
END PROCEDURE.
PROCEDURE sparaadress_UI :
   IF AVAILABLE inkadresssparb THEN DO:
      RUN adresskoll_UI.
      ASSIGN    
      inkadresssparb.SKICKATSTATUS                    = FILL-IN-STATUS:SCREEN-VALUE     
      inkadresssparb.ORDERNUMMER                      = FILL-IN-BESTNR:SCREEN-VALUE    
      inkadresssparb.IBNR                             = FILL-IN-IB:SCREEN-VALUE        
      inkadresssparb.KUNDNR                           = INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) 
      inkadresssparb.FORETAG                          = FILL-IN-DEPFOR:SCREEN-VALUE
      inkadresssparb.IEXTRACHAR[5]                    = FILL-IN-ALTFOR:SCREEN-VALUE
      inkadresssparb.LEVERANSDATUM                    = DATE(FILL-IN-DATUM:SCREEN-VALUE)     
      inkadresssparb.LEVADRESS                        = FILL-IN-DEPLEVADR:SCREEN-VALUE 
      inkadresssparb.LEVPNR                           = FILL-IN-DEPLPNR:SCREEN-VALUE   
      inkadresssparb.LEVORT                           = FILL-IN-DEPLORT:SCREEN-VALUE   
      inkadresssparb.LEVFAX                           = FILL-IN-DEPFAX:SCREEN-VALUE    
      inkadresssparb.IKONTAKT                         = FILL-IN-KIKONTAKT:SCREEN-VALUE 
      inkadresssparb.ITELE                            = FILL-IN-KITELE:SCREEN-VALUE    
      inkadresssparb.IMOBIL                           = FILL-IN-KIMOBIL:SCREEN-VALUE   
      inkadresssparb.IEPOST                           = FILL-IN-KIEPOST:SCREEN-VALUE   
      inkadresssparb.TKONTAKT                         = FILL-IN-KTKONTAKT:SCREEN-VALUE 
      inkadresssparb.TTELE                            = FILL-IN-KTTELE:SCREEN-VALUE         
      inkadresssparb.TMOBIL                           = FILL-IN-KTMOBIL:SCREEN-VALUE   
      inkadresssparb.PROJEKTLEDARE                    = FILL-IN-PLKONTAKT:SCREEN-VALUE 
      inkadresssparb.PTELE                            = FILL-IN-PLMOBIL:SCREEN-VALUE   
      inkadresssparb.GKONTAKT                         = FILL-IN-GKONTAKT:SCREEN-VALUE  
      inkadresssparb.GADRESS                          = FILL-IN-GADR:SCREEN-VALUE      
      inkadresssparb.GPNR                             = FILL-IN-GPNR:SCREEN-VALUE      
      inkadresssparb.GORT                             = FILL-IN-GORT:SCREEN-VALUE      
      inkadresssparb.GTELE                            = FILL-IN-GTELE:SCREEN-VALUE     
      inkadresssparb.GFAX                             = FILL-IN-GFAX:SCREEN-VALUE      
      inkadresssparb.MARKERING                         = FILL-IN-MARK:SCREEN-VALUE      
      inkadresssparb.KOMMENTAR                        = FILL-IN-KOM:SCREEN-VALUE
      inkadresssparb.SPECIFIKAKAB                    = TOG_KAB:CHECKED                
      inkadresssparb.AVIS                             = LOGICAL(FILL-IN-AVIS:SCREEN-VALUE,"Ja/Nej")         
      inkadresssparb.AVISPERS                         = FILL-IN-AVISPERS:SCREEN-VALUE.
      RUN vavrop_UI (INPUT 3).
      RUN vavrop_UI (INPUT 6).
      IF inkadresssparb.ANDDATUM = ? THEN DO:
         ASSIGN 
         inkadresssparb.ANDTID = TIME
         inkadresssparb.ANDDATUM = TODAY.
      END.  
      RUN KollSpara_UI IN inkberh (INPUT TABLE inkadresstemp,INPUT TABLE ink_mtrl).
      IF TOG_FAVOAD:CHECKED = TRUE THEN DO:
         FIND FIRST inkadresskoptemp WHERE inkadresskoptemp.LEVKODINK = inkadresssparb.LEVKODINK AND  
         inkadresskoptemp.LEVADRESS = inkadresssparb.LEVADRESS
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE inkadresskoptemp THEN CREATE inkadresskoptemp.
         BUFFER-COPY inkadresssparb TO inkadresskoptemp.
         ASSIGN   
         inkadresskoptemp.ANVANDARE = "FAVO" + Guru.Konstanter:globanv
         inkadresskoptemp.AONRAONR  = ?
         inkadresskoptemp.AONRDELNR = ?
         inkadresskoptemp.BERNR     = ?
         inkadresskoptemp.OMRADE    = ?.  
         RUN setlastrowid_UI IN brwproc[18] (INPUT ROWID(inkadresskoptemp)).  
         RUN openbdynspec_UI IN brwproc[18].
         RUN lastselectdyn_UI IN brwproc[18].
      END.
        
      IF feladresskoll = TRUE THEN DO:
         feladresskoll = FALSE.
         RETURN.         
      END.    
      RUN adresskoll_UI.
       
   END.   
END PROCEDURE.
PROCEDURE tidigarekoll_UI :
   FIND FIRST tidinkadresstemp NO-LOCK NO-ERROR.
   IF AVAILABLE tidinkadresstemp THEN brwh[10]:HIDDEN = FALSE.
   ELSE DO:
      brwh[10]:HIDDEN = TRUE.
   END.   
   RUN fixastorlek_UI.    
END PROCEDURE.
PROCEDURE adresskoll_UI :
   DEFINE VARIABLE kollib AS INTEGER NO-UNDO.
   DEFINE VARIABLE medvar AS CHARACTER NO-UNDO.
   feladresskoll = FALSE.
   IF inkadresssparb.IEXTRAINT[1] = 3 THEN DO:
      MESSAGE "Du måste välja "  radprojladd[1] ", "  radprojladd[4] " eller " radprojladd[2] "!"
      /*MESSAGE "Du måste välja Projektpackning eller Snabbleverans!"*/
      VIEW-AS ALERT-BOX.     
      feladresskoll = TRUE.   
      RETURN.
   END.   
   IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
   END.    
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
        
      IF FILL-IN-BESTNR:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Beställningsnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN. 
      END.    
      IF FILL-IN-BESTNR:SCREEN-VALUE = "0" THEN DO:
         MESSAGE "Beställningsnummer får ej vara 0."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.  
      /*
      IF FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0 THEN DO:
         MESSAGE "Felaktigt kundnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.
      IF inkadresssparb.LEVNAMN = "AHLSELL" THEN DO:
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 7 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
            FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.                 
         END.
      END.
      IF inkadresssparb.LEVNAMN = "Onninen" OR inkadresssparb.LEVNAMN = "Onninen avrop" THEN DO:   
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 6 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.   
            RETURN.
         END.
      END.   
      IF inkadresssparb.LEVNAMN = "Elektroskandia" OR inkadresssparb.LEVNAMN BEGINS "Elektroskandia avrop" THEN DO:
         IF LENGTH(STRING(FILL-IN-DEPKUNDNR:SCREEN-VALUE)) NE 5 THEN DO:
            MESSAGE "Felaktigt kundnummer. Kundnr:et skall vara 5 siffror"
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN. 
         END.
      END.
      */     
       /*
      IF FILL-IN-IB:SCREEN-VALUE NE "" THEN DO:
         kollib = LENGTH(FILL-IN-IB:SCREEN-VALUE) NO-ERROR. 
         IF kollib NE 6 THEN DO:
            MESSAGE Guru.Konstanter:grefbefk " skall vara numeriskt 6 positioner!" VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.
         END.          
      END.
      
      IF FILL-IN-DEPFOR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Företag får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.   
         RETURN.
      END.
      */
      IF Guru.GlobalaVariabler:KundListId = 1 THEN DO:
         IF FILL-IN-DEPFOR:SCREEN-VALUE = "One Nordic PS AB" THEN.
         ELSE DO:
            FILL-IN-DEPFOR:SCREEN-VALUE = "One Nordic PS AB".
            MESSAGE FILL-IN-DEPFOR:LABEL " Är ändrat!"
            VIEW-AS ALERT-BOX.
         END.    
      END.
      ELSE DO:
          IF FILL-IN-DEPFOR:SCREEN-VALUE = "One Nordic AB" THEN.
         ELSE DO:
            FILL-IN-DEPFOR:SCREEN-VALUE = "One Nordic AB".
            MESSAGE FILL-IN-DEPFOR:LABEL " Är ändrat!"
            VIEW-AS ALERT-BOX.
         END.    
      END.   
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) = ? OR FILL-IN-DATUM:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Felaktigt datum."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.   
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) <= TODAY THEN DO:
         MESSAGE "Datum måste vara större än idag."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.  
        
      IF FILL-IN-DEPLEVADR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leveransadress får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF INDEX(FILL-IN-DEPLEVADR:SCREEN-VALUE,"x:") > 0 AND INDEX(FILL-IN-DEPLEVADR:SCREEN-VALUE,"y:") > 0 THEN DO:
         IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN DO:
            FILL-IN-DEPLPNR:SCREEN-VALUE = "000 00".            
         END.
         ELSE DO:
            MESSAGE "Inga koordinater här vid projektleverans!"
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.
         END.                   
      END. 
      ELSE IF FILL-IN-DEPLPNR:SCREEN-VALUE = "000 00" THEN DO:
         MESSAGE "Postnummer får ej vara '000 00'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Postnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postnummer får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.   
      IF FILL-IN-DEPLORT:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postort får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Postort får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-KIKONTAKT:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Kontaktperson inköp får ej vara blank."
         VIEW-AS ALERT-BOX.    
         feladresskoll = TRUE.  
         RETURN.
      END.
      FIND FIRST personaltemp WHERE personaltemp.ANSTNR = FILL-IN-KIKONTAKT:SCREEN-VALUE  NO-LOCK NO-ERROR.
      IF NOT AVAILABLE personaltemp  THEN DO:
         MESSAGE "Fältet 'Kontakt inköp' ska innehålla IFS-id!"
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      /*  
      IF FILL-IN-AVISPERS:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Avisering får inte vara blank! Tryck ja i avisering och fyll i avisering!" VIEW-AS ALERT-BOX TITLE "Meddelande".
         feladresskoll = TRUE.  
         RETURN.
      END.
      */
      RETURN.
         
   END.
   
   ELSE IF inkadresssparb.LEVNAMN = "AHLSELL" THEN DO:    
      IF FILL-IN-BESTNR:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Beställningsnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN. 
      END.     
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) = ? OR FILL-IN-DATUM:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Felaktigt datum."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.   
    
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) <= TODAY THEN DO:
         MESSAGE "Datum måste vara större än idag."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.   
   
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "snat" OR Guru.Konstanter:globforetag = "elpa" THEN DO:
         /*DE HAR KUNDNUMMER 307800*/
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 7 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.                 
         END.  
      END.
      ELSE IF Guru.Konstanter:globforetag = "VAST" THEN DO:
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 8 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.                 
         END.  
      END.
      ELSE DO:
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 5 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.       
         END.  
      END. 
      
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:            
      END.
      
      IF FILL-IN-DEPFOR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Företag får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-KIKONTAKT:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Kontaktperson inköp får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
         IF FILL-IN-PLKONTAKT:SCREEN-VALUE = " " THEN DO:
            MESSAGE "Projektledare får ej vara blank."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.
         END.
      END.
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
         IF FILL-IN-KIEPOST:SCREEN-VALUE = " " THEN DO:
            MESSAGE "Epost får ej vara blank."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.
         END.
      END.
      IF FILL-IN-DEPLEVADR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leveransadress får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Postnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postnummer får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postort får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Postort får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
          RUN attestera_UI IN inkberh (INPUT TODAY, OUTPUT medvar).         
          IF medvar NE "" THEN DO:
            MESSAGE medvar VIEW-AS ALERT-BOX TITLE "Meddelande".
            feladresskoll = TRUE.  
            RETURN.
         END.
      END.
      IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
         IF inkadresssparb.DEP-NR = 8 THEN.
         ELSE IF inkadresssparb.DEP-NR NE 2 THEN DO:
            MESSAGE "Klicka på Depåadress   2- Sundsvall returlager för att välja depå."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.
            RETURN.
         END.            
         /*IF inkadresssparb.DEP-NR = 0 THEN DO:
            MESSAGE "Välj depå genom att klicka på Depåadress."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.
            RETURN.
         END.*/
      END.         
   END.   
   ELSE IF inkadresssparb.LEVNAMN = "Elektroskandia" OR inkadresssparb.LEVNAMN BEGINS "Elektroskandia avrop" THEN DO:   
      IF FILL-IN-BESTNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Beställningsnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.      
      IF FILL-IN-BESTNR:SCREEN-VALUE = "0" THEN DO:
         MESSAGE "Beställningsnummer får ej vara 0."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.  
      IF FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0 THEN DO:
         MESSAGE "Felaktigt kundnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.      
      IF LENGTH(STRING(FILL-IN-DEPKUNDNR:SCREEN-VALUE)) NE 5 THEN DO:
         MESSAGE "Felaktigt kundnummer. Kundnr:et skall vara 5 siffror"
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.
      IF FILL-IN-DEPFOR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Företag får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-KIKONTAKT:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Kontaktperson inköp får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-DEPLEVADR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leveransadress får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Postnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postnummer får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postort får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Postort får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
        
      IF INDEX(FILL-IN-DEPLEVADR:SCREEN-VALUE,"x:") > 0 AND INDEX(FILL-IN-DEPLEVADR:SCREEN-VALUE,"y:") > 0 THEN DO:
         IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN DO:
            FILL-IN-DEPLPNR:SCREEN-VALUE = "000 00".            
         END.
         ELSE DO:
            MESSAGE "Inga koordinater här vid projektleverans!"
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.  
            RETURN.
         END.                   
      END. 
      ELSE IF FILL-IN-DEPLPNR:SCREEN-VALUE = "000 00" THEN DO:
         MESSAGE "Postnummer får ej vara '000 00'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) = ? OR FILL-IN-DATUM:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Felaktigt datum."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.       
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) <= TODAY THEN DO:
         MESSAGE "Datum måste vara större än idag."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.                        
      IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
          RUN attestera_UI IN inkberh (INPUT TODAY, OUTPUT medvar).         
          IF medvar NE "" THEN DO:
            MESSAGE medvar VIEW-AS ALERT-BOX TITLE "Meddelande".
            feladresskoll = TRUE.  
            RETURN.
         END.
      END.
      IF Guru.Konstanter:globforetag = "vast" THEN DO:      
         /*LENA*/
         IF inkadresssparb.LEVNAMN = "Elektroskandia" THEN DO:
            RUN ktrlenrkatalog_UI (OUTPUT feladresskoll).
            IF  feladresskoll = TRUE THEN RETURN.
         END.   
      END.
   END.
   ELSE IF inkadresssparb.LEVNAMN = "Onninen" OR inkadresssparb.LEVNAMN = "Onninen avrop" THEN DO:
      IF FILL-IN-BESTNR:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Beställningsnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE. 
         RETURN. 
      END.
      
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) = ? OR FILL-IN-DATUM:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Felaktigt datum."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.       
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) <= TODAY THEN DO:
         MESSAGE "Datum måste vara större än idag."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN. 
      END.  
      IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
         /*DE HAR KUNDNUMMER 307800*/
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 6 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.   
            RETURN.       
         END.  
      END.
      ELSE IF Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "KRIN" THEN DO:
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 7 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.   
            RETURN.       
         END.  
      END.
      ELSE DO:
         IF (LENGTH(FILL-IN-DEPKUNDNR:SCREEN-VALUE) > 5 OR FILL-IN-DEPKUNDNR:SCREEN-VALUE = "" OR 
         FILL-IN-DEPKUNDNR:SCREEN-VALUE = "0" OR INTEGER(FILL-IN-DEPKUNDNR:SCREEN-VALUE) = 0) THEN DO:      
            MESSAGE "Felaktigt kundnummer."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.   
            RETURN.       
         END.  
      END.    
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:            
         IF FILL-IN-IB:SCREEN-VALUE NE "" THEN DO:
            kollib = LENGTH(FILL-IN-IB:SCREEN-VALUE) NO-ERROR. 
            IF kollib NE 6 THEN DO:
               MESSAGE Guru.Konstanter:grefbefk " skall vara numeriskt 6 positioner!" VIEW-AS ALERT-BOX.     
               feladresskoll = TRUE.  
               RETURN.
            END.          
         END.
        
      END.   
      IF FILL-IN-DEPFOR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Företag får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.   
         RETURN.
      END.
      IF FILL-IN-KIKONTAKT:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Kontaktperson inköp får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.   
         RETURN.
      END.
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
         IF FILL-IN-PLKONTAKT:SCREEN-VALUE = " " THEN DO:
            MESSAGE "Projektledare får ej vara blank."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.   
            RETURN.
         END.
      END.
      IF FILL-IN-DEPLEVADR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leveransadress får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.   
         RETURN.
      END.
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Postnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-DEPLPNR:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postnummer får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Postort får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-DEPLORT:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Postort får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "cELPA" THEN DO:
         RUN attestera_UI IN inkberh (INPUT TODAY, OUTPUT medvar).         
         IF medvar NE "" THEN DO:
            MESSAGE medvar VIEW-AS ALERT-BOX TITLE "Meddelande".
            feladresskoll = TRUE.  
            RETURN.
         END.
      END.
   END.      
   ELSE DO:
      IF FILL-IN-BESTNR:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Beställningsnummer får ej vara blank. Gå till Adresser!"
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN. 
      END.
      /*
      IF AVAILABLE inkadresssparb THEN DO:
         IF inkadresssparb.ORDERNUMMER = "" THEN DO:
            MESSAGE "Beställningsnummer får ej vara blank. Gå till Adresser!"
            VIEW-AS ALERT-BOX.
            feladresskoll = TRUE.
         
            RETURN.
         END.
      END.
      */  
   END.
   IF Guru.Konstanter:globforetag = "gran" THEN DO:
      IF FILL-IN-GKONTAKT:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leverantörs kontakt får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-GADR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leverantörs adress får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-GPNR:SCREEN-VALUE = " " THEN DO:
         MESSAGE "Leverantörs postnummer får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.    
      IF FILL-IN-GPNR:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Leverantörs postnummer får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-GORT:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Leverantörs postort får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-GORT:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Leverantörs postort får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF FILL-IN-GTELE:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Leverantörs tele får ej vara '?'."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF FILL-IN-GTELE:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Leverantörs tele får ej vara blank."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.  
         RETURN.
      END. 
      IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
          FIND FIRST personaltemp WHERE personaltemp.ANSTNR = FILL-IN-KIKONTAKT:SCREEN-VALUE  NO-LOCK NO-ERROR.
          IF NOT AVAILABLE personaltemp  THEN DO:
             MESSAGE "Fältet 'Kontakt inköp' ska innehålla IFS-id!"
             VIEW-AS ALERT-BOX.     
             feladresskoll = TRUE.  
             RETURN.
          END.   
      END.   
        
      
      
   END.
   IF Guru.Konstanter:globforetag = "VAST" THEN DO:
       IF FILL-IN-KIMOBIL:SCREEN-VALUE = "" THEN FILL-IN-KIMOBIL:SCREEN-VALUE = FILL-IN-KITELE:SCREEN-VALUE.
      IF FILL-IN-KIMOBIL:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Mobilinköp får inte vara blank!" VIEW-AS ALERT-BOX TITLE "Meddelande".
         feladresskoll = TRUE.  
         RETURN.
      END.    
   END.        
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:
      RUN RadProjRead_UI.
      /*RAD_PROJ:SCREEN-VALUE = STRING(1).
      inkadresssparb.IEXTRAINT[1] = INTEGER(RAD_PROJ:SCREEN-VALUE).
      */
      IF FILL-IN-PNnummer:SCREEN-VALUE = "" THEN DO:
         MESSAGE "PN nummer får inte vara blank!" VIEW-AS ALERT-BOX TITLE "Meddelande".
         feladresskoll = TRUE.  
         RETURN.
      END.      
   END.      
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN") THEN DO:
      IF FILL-IN-AVISPERS:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Avisering får inte vara blank! Tryck ja i avisering!" VIEW-AS ALERT-BOX TITLE "Meddelande".
         feladresskoll = TRUE.  
         RETURN.
      END.
      IF DATE(FILL-IN-DATUM:SCREEN-VALUE) = ? OR FILL-IN-DATUM:SCREEN-VALUE = "" THEN DO:
         MESSAGE "Felaktigt datum."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.  
   END.
   IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
      IF inkadresssparb.LEVNAMN = "Från depå" THEN DO:               
         IF inkadresssparb.DEP-NR = 8 THEN DO:
            MESSAGE "8- Direkt till byggplats kan inte användas för depåuttag."
            VIEW-AS ALERT-BOX.     
            feladresskoll = TRUE.
            RETURN.
         END.
      END.
    END.  
   /*IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:   
      IF inkadresssparb.DEP-NR = 0 THEN DO:
         MESSAGE "Välj depå genom att klicka på Depåadress."
         VIEW-AS ALERT-BOX.     
         feladresskoll = TRUE.
         RETURN.
      END.   
   END.*/          
END PROCEDURE.


PROCEDURE laddaadresskon_UI :  
   ASSIGN 
   FILL-IN-GKONTAKT:SCREEN-VALUE = levkontakttemp.LEVKONTAKT  
   FILL-IN-GADR:SCREEN-VALUE = levkontakttemp.LEVADR
   FILL-IN-GPNR:SCREEN-VALUE = levkontakttemp.LEVPNR
   FILL-IN-GORT:SCREEN-VALUE = levkontakttemp.LEVORT
   FILL-IN-GTELE:SCREEN-VALUE = SUBSTRING(levkontakttemp.LEVTEL,1,19)
   FILL-IN-GFAX:SCREEN-VALUE = SUBSTRING(levkontakttemp.LEVTEL,20).
      
END PROCEDURE.



PROCEDURE mdkopierUpplevadress_UI :
   IF AVAILABLE beruppinktemp THEN DO:
      
      MESSAGE "Adress (Ja) eller Koordinater (Nej) ?"
      VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO-CANCEL UPDATE kval AS LOGICAL.
      CASE kval:
         WHEN TRUE THEN DO:
            ASSIGN                            
            FILL-IN-DEPLEVADR:SCREEN-VALUE       =     beruppinktemp.ADRESS                
            FILL-IN-DEPLPNR:SCREEN-VALUE         =     beruppinktemp.POSTNR                  
            FILL-IN-DEPLORT:SCREEN-VALUE         =     beruppinktemp.ORT                   
            FILL-IN-DEPFAX:SCREEN-VALUE          =     "".
         END.
         WHEN FALSE THEN DO:
            ASSIGN                            
            FILL-IN-DEPLEVADR:SCREEN-VALUE       =    "X=" + STRING(beruppinktemp.XKORDCH) + " Y=" + STRING(beruppinktemp.YKORDCH)               
            FILL-IN-DEPLPNR:SCREEN-VALUE         =     beruppinktemp.POSTNR                  
            FILL-IN-DEPLORT:SCREEN-VALUE         =     beruppinktemp.ORT
            /*FILL-IN-DEPLPNR:SCREEN-VALUE         =     ""                  
            FILL-IN-DEPLORT:SCREEN-VALUE         =     ""*/                   
            FILL-IN-DEPFAX:SCREEN-VALUE          =     "".
         END.   
         
      END CASE.
   END.   
END PROCEDURE.



PROCEDURE mdkopierlevadress_UI :
   
   IF AVAILABLE inkadresskoptemp THEN DO:
      ASSIGN                            
      FILL-IN-DEPLEVADR:SCREEN-VALUE       =     inkadresskoptemp.LEVADRESS                
      FILL-IN-DEPLPNR:SCREEN-VALUE         =     inkadresskoptemp.LEVPNR                   
      FILL-IN-DEPLORT:SCREEN-VALUE         =     inkadresskoptemp.LEVORT                   
      FILL-IN-DEPFAX:SCREEN-VALUE          =     inkadresskoptemp.LEVFAX.
      IF inkadresskoptemp.LEVKODINK = inkadresstemp.LEVKODINK THEN DO:
         IF Guru.Konstanter:globforetag = "VAST" AND FILL-IN-KIKONTAKT:SCREEN-VALUE NE "" THEN.
         ELSE DO:
            ASSIGN 
            FILL-IN-KIKONTAKT:SCREEN-VALUE = inkadresskoptemp.IKONTAKT 
            FILL-IN-KITELE:SCREEN-VALUE = inkadresskoptemp.ITELE
            FILL-IN-KIMOBIL:SCREEN-VALUE = inkadresskoptemp.IMOBIL
            FILL-IN-KIEPOST:SCREEN-VALUE = inkadresskoptemp.IEPOST.
           
         END.    
               
         ASSIGN 
         FILL-IN-KTKONTAKT:SCREEN-VALUE = inkadresskoptemp.TKONTAKT 
         FILL-IN-KTTELE:SCREEN-VALUE = inkadresskoptemp.TTELE
         FILL-IN-KTMOBIL:SCREEN-VALUE = inkadresskoptemp.TMOBIL 
         
         FILL-IN-PLKONTAKT:SCREEN-VALUE = inkadresskoptemp.PROJEKTLEDARE 
         FILL-IN-PLMOBIL:SCREEN-VALUE = inkadresskoptemp.PTELE
         FILL-IN-GKONTAKT:SCREEN-VALUE = inkadresskoptemp.GKONTAKT  
         FILL-IN-GADR:SCREEN-VALUE = inkadresskoptemp.GADRESS
         FILL-IN-GPNR:SCREEN-VALUE = inkadresskoptemp.GPNR
         FILL-IN-GORT:SCREEN-VALUE = inkadresskoptemp.GORT
         FILL-IN-GTELE:SCREEN-VALUE = inkadresskoptemp.GTELE
         FILL-IN-GFAX:SCREEN-VALUE = inkadresskoptemp.GFAX.
         IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
            FIND FIRST personaltemp  WHERE personaltemp.ANSTNR = FILL-IN-KIKONTAKT:SCREEN-VALUE NO-LOCK NO-ERROR.
            IF NOT AVAILABLE personaltemp THEN DO:
               FIND FIRST personaltemp WHERE REPLACE(personaltemp.FORNAMN + personaltemp.EFTERNAM," ","") = REPLACE(inkadresssparb.IKONTAKT," ","") NO-LOCK NO-ERROR.
               IF AVAILABLE personaltemp THEN DO:
                  FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.ANSTNR.
               END.
               ELSE DO:
                  MESSAGE "Fältet 'Kontakt inköp' ska innehålla IFS-id!"
                  VIEW-AS ALERT-BOX.
               END.    
            END.
         END. 
      END.                      
      IF inkadresskoptemp.AVIS = TRUE THEN  FILL-IN-AVIS:SCREEN-VALUE = "Ja".
      ELSE FILL-IN-AVIS:SCREEN-VALUE = "Nej".
         
      FILL-IN-AVISPERS:SCREEN-VALUE = inkadresskoptemp.AVISPERS.
      RUN avileave_UI.
   END.
END PROCEDURE.
PROCEDURE favoadressbort_UI :
   IF AVAILABLE inkadresskoptemp THEN DO:
      MESSAGE "OBS! Vill du ta bort posten?"
      VIEW-AS ALERT-BOX
      QUESTION BUTTONS YES-NO-CANCEL TITLE "Ta bort?" UPDATE svar AS LOGICAL.         
      IF svar THEN DO:
         DELETE inkadresskoptemp.
         RUN selnextprevrow_UI IN brwproc[18].
         RUN openbdynspec_UI IN brwproc[18].
         RUN lastselectdyn_UI IN brwproc[18].         
      END.
   END.   
END PROCEDURE.
PROCEDURE LaltFor_UI :
   IF FILL-IN-ALTFOR:SCREEN-VALUE = "" THEN FILL-IN-ALTFOR:SCREEN-VALUE = FILL-IN-DEPFOR:SCREEN-VALUE.
END PROCEDURE.

PROCEDURE laddaadressdep_UI :
   DEFINE VARIABLE jurid AS CHARACTER NO-UNDO.
   EMPTY TEMP-TABLE einkadresstemp  NO-ERROR. 
   CREATE einkadresstemp.
   BUFFER-COPY inkadresssparb TO einkadresstemp.         
   RUN snatkundnrah_UI IN inkberh (INPUT TABLE einkadresstemp,  OUTPUT jurid).
   EMPTY TEMP-TABLE einkadresstemp  NO-ERROR.
   FILL-IN-DEPKUNDNRTID:FORMAT = "9999999999". 
   FILL-IN-DEPKUNDNR:FORMAT = "9999999999".
   FIND FIRST kundnrtemp WHERE kundnrtemp.DEP-NR = depatemp.DEP-NR AND kundnrtemp.LEVKOD = inkadresssparb.LEVKODINK NO-LOCK NO-ERROR.
   IF AVAILABLE kundnrtemp THEN DO:
      ASSIGN FILL-IN-DEPKUNDNR:SCREEN-VALUE = STRING(kundnrtemp.KUNDNR).
      RUN kundnrform_UI. 
   END.
   ASSIGN       
   inkadresssparb.DEP-NR = depatemp.DEP-NR
   FILL-IN-DEPFOR:SCREEN-VALUE = depatemp.FIRMA.

   IF Guru.Konstanter:globforetag = "snat" AND inkadresssparb.LEVKODINK = "12" THEN DO:
      /*styr kunnummer för 12=Ahlsell på projektnumrets JUDID
      depå 2 = Elnät
      depå 7 = servanet*/  
      IF jurid = "ELNÄT" THEN DO:
         FIND FIRST kundnrtemp WHERE kundnrtemp.DEP-NR = 2 AND kundnrtemp.LEVKOD = inkadresssparb.LEVKODINK NO-LOCK NO-ERROR.
         IF AVAILABLE kundnrtemp THEN DO:
            ASSIGN FILL-IN-DEPKUNDNR:SCREEN-VALUE = STRING(kundnrtemp.KUNDNR).
            RUN kundnrform_UI. 
         END.   
         FIND FIRST depatempbuff WHERE depatempbuff.DEP-NR = 2 NO-LOCK NO-ERROR.
         ASSIGN          
         FILL-IN-DEPFOR:SCREEN-VALUE = depatempbuff.FIRMA.
      END.
      ELSE IF jurid = "ServaNet" THEN DO:
         FIND FIRST kundnrtemp WHERE kundnrtemp.DEP-NR = 7 AND kundnrtemp.LEVKOD = inkadresssparb.LEVKODINK NO-LOCK NO-ERROR.
         IF AVAILABLE kundnrtemp THEN DO:
            ASSIGN FILL-IN-DEPKUNDNR:SCREEN-VALUE = STRING(kundnrtemp.KUNDNR).
            RUN kundnrform_UI. 
         END.
         FIND FIRST depatempbuff WHERE depatempbuff.DEP-NR = 7 NO-LOCK NO-ERROR.
         ASSIGN          
         FILL-IN-DEPFOR:SCREEN-VALUE = depatempbuff.FIRMA.
      END.   
   END.          
   RUN LaltFor_UI.  
  
  
   
   RUN vavrop_UI (INPUT 1). 
   IF depatemp.LEVADRESS NE "" THEN DO:
      ASSIGN
      FILL-IN-DEPLEVADR:SCREEN-VALUE = depatemp.LEVADRESS 
      FILL-IN-DEPLPNR:SCREEN-VALUE = depatemp.LEVPNR
      FILL-IN-DEPLORT:SCREEN-VALUE = depatemp.LEVORT
      FILL-IN-DEPFAX:SCREEN-VALUE = depatemp.FAXNR.
   END.                
END PROCEDURE.
PROCEDURE laddaadresstid_UI :
   
   FILL-IN-DEPKUNDNR:FORMAT = "9999999999".
   ASSIGN     
   FILL-IN-DEPFOR:SCREEN-VALUE = tidinkadresstemp.FORETAG   
   FILL-IN-ALTFOR:SCREEN-VALUE = tidinkadresstemp.IEXTRACHAR[5]                    
   FILL-IN-DEPLEVADR:SCREEN-VALUE       =     tidinkadresstemp.LEVADRESS                
   FILL-IN-DEPLPNR:SCREEN-VALUE         =     tidinkadresstemp.LEVPNR                   
   FILL-IN-DEPLORT:SCREEN-VALUE         =     tidinkadresstemp.LEVORT                   
   FILL-IN-DEPFAX:SCREEN-VALUE          =     tidinkadresstemp.LEVFAX.
   IF tidinkadresstemp.LEVKODINK = inkadresstemp.LEVKODINK THEN DO:
      
      ASSIGN   
      inkadresssparb.DEP-NR = tidinkadresstemp.DEP-NR   
      FILL-IN-IB:SCREEN-VALUE = tidinkadresstemp.IBNR
      FILL-IN-DEPKUNDNR:SCREEN-VALUE = STRING(tidinkadresstemp.KUNDNR) 
      FILL-IN-DEPFOR:SCREEN-VALUE = tidinkadresstemp.FORETAG 
      FILL-IN-ALTFOR:SCREEN-VALUE = tidinkadresstemp.IEXTRACHAR[5]  
      FILL-IN-DEPLEVADR:SCREEN-VALUE = tidinkadresstemp.LEVADRESS 
      FILL-IN-DEPLPNR:SCREEN-VALUE = tidinkadresstemp.LEVPNR
      FILL-IN-DEPLORT:SCREEN-VALUE = tidinkadresstemp.LEVORT
      FILL-IN-DEPFAX:SCREEN-VALUE = tidinkadresstemp.LEVFAX
      FILL-IN-KIKONTAKT:SCREEN-VALUE = tidinkadresstemp.IKONTAKT 
      FILL-IN-KITELE:SCREEN-VALUE = tidinkadresstemp.ITELE
      FILL-IN-KIMOBIL:SCREEN-VALUE = tidinkadresstemp.IMOBIL
      FILL-IN-KIEPOST:SCREEN-VALUE = tidinkadresstemp.IEPOST
      FILL-IN-KTKONTAKT:SCREEN-VALUE = tidinkadresstemp.TKONTAKT 
      FILL-IN-KTTELE:SCREEN-VALUE = tidinkadresstemp.TTELE
      FILL-IN-KTMOBIL:SCREEN-VALUE = tidinkadresstemp.TMOBIL
      FILL-IN-PLKONTAKT:SCREEN-VALUE = tidinkadresstemp.PROJEKTLEDARE 
      FILL-IN-PLMOBIL:SCREEN-VALUE = tidinkadresstemp.PTELE
      FILL-IN-GKONTAKT:SCREEN-VALUE = tidinkadresstemp.GKONTAKT  
      FILL-IN-GADR:SCREEN-VALUE = tidinkadresstemp.GADRESS
      FILL-IN-GPNR:SCREEN-VALUE = tidinkadresstemp.GPNR
      FILL-IN-GORT:SCREEN-VALUE = tidinkadresstemp.GORT
      FILL-IN-GTELE:SCREEN-VALUE = tidinkadresstemp.GTELE
      FILL-IN-GFAX:SCREEN-VALUE = tidinkadresstemp.GFAX
      FILL-IN-MARK:SCREEN-VALUE = tidinkadresstemp.MARKERING
      FILL-IN-KOM:SCREEN-VALUE = tidinkadresstemp.KOMMENTAR      
      TOG_KAB:CHECKED = tidinkadresstemp.SPECIFIKAKAB.
      IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
         FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(tidinkadresstemp.IKONTAKT).
         FIND FIRST personaltemp  WHERE personaltemp.ANSTNR = FILL-IN-KIKONTAKT:SCREEN-VALUE NO-LOCK NO-ERROR.
         IF NOT AVAILABLE personaltemp THEN DO:
            FIND FIRST personaltemp WHERE REPLACE(personaltemp.FORNAMN + personaltemp.EFTERNAM," ","") = REPLACE(tidinkadresstemp.IKONTAKT," ","") NO-LOCK NO-ERROR.
            IF AVAILABLE personaltemp THEN DO:
               FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.ANSTNR.
            END.
            ELSE DO:
               MESSAGE "Fältet 'Kontakt inköp' ska innehålla IFS-id!"
               VIEW-AS ALERT-BOX.
            END.    
         END.
      END.   
      RUN vavrop_UI(INPUT 4).
      
   END.
   RUN LaltFor_UI.   
   RUN vavrop_UI(INPUT 1).
   RUN vavrop_UI(INPUT 5).
   IF tidinkadresstemp.AVIS = TRUE THEN  FILL-IN-AVIS:SCREEN-VALUE = "Ja".
   ELSE FILL-IN-AVIS:SCREEN-VALUE = "Nej".   
   FILL-IN-AVISPERS:SCREEN-VALUE = tidinkadresstemp.AVISPERS.
   RUN avileave_UI.
   RUN kundnrform_UI. 
END PROCEDURE.

PROCEDURE laddaadress_UI :
   DEFINE VARIABLE arbansvanv AS CHARACTER NO-UNDO.
   DEFINE VARIABLE beranvvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE refkon AS CHARACTER NO-UNDO.
   /*Lena 20130411  - sök rätt levkontakttemp annars  har programmet fel när den går till konmouseseldbclic_UI*/
 
   FIND FIRST levkontakttemp WHERE levkontakttemp.LEVKOD = inkadresstemp.LEVKODINK NO-ERROR.
   RUN adressformat_UI.
   FILL-IN-DEPKUNDNR:FORMAT = "9999999999".
   ASSIGN
   FILL-IN-STATUS:SCREEN-VALUE = inkadresstemp.SKICKATSTATUS
   FILL-IN-BESTNR:SCREEN-VALUE = inkadresstemp.ORDERNUMMER
   FILL-IN-DATUM:SCREEN-VALUE = STRING(inkadresstemp.LEVERANSDATUM,"99/99/99")
   /*
   RAD_PROJ:SCREEN-VALUE = STRING(inkadresssparb.IEXTRAINT[1])  
   */
   FILL-IN-GKONTAKT:SCREEN-VALUE = inkadresstemp.GKONTAKT  
   FILL-IN-GADR:SCREEN-VALUE = inkadresstemp.GADRESS
   FILL-IN-GPNR:SCREEN-VALUE = inkadresstemp.GPNR
   FILL-IN-GORT:SCREEN-VALUE = inkadresstemp.GORT
   FILL-IN-GTELE:SCREEN-VALUE = inkadresstemp.GTELE
   FILL-IN-GFAX:SCREEN-VALUE = inkadresstemp.GFAX.
   RUN RadProjSet_UI.
   IF inkadresstemp.FORETAG NE "" THEN DO:
      ASSIGN
      FILL-IN-DEPFOR:SCREEN-VALUE = inkadresstemp.FORETAG
      FILL-IN-ALTFOR:SCREEN-VALUE = inkadresstemp.IEXTRACHAR[5]
      FILL-IN-IB:SCREEN-VALUE = inkadresstemp.IBNR      
      FILL-IN-DEPLEVADR:SCREEN-VALUE = inkadresstemp.LEVADRESS 
      FILL-IN-DEPLPNR:SCREEN-VALUE = inkadresstemp.LEVPNR
      FILL-IN-DEPLORT:SCREEN-VALUE = inkadresstemp.LEVORT
      FILL-IN-DEPFAX:SCREEN-VALUE = inkadresstemp.LEVFAX.
      RUN LaltFor_UI.
      ASSIGN
      FILL-IN-KIKONTAKT:SCREEN-VALUE = inkadresstemp.IKONTAKT 
      FILL-IN-KITELE:SCREEN-VALUE = inkadresstemp.ITELE
      FILL-IN-KIMOBIL:SCREEN-VALUE = inkadresstemp.IMOBIL
      FILL-IN-KIEPOST:SCREEN-VALUE = inkadresstemp.IEPOST
      FILL-IN-KTKONTAKT:SCREEN-VALUE = inkadresstemp.TKONTAKT 
      FILL-IN-KTTELE:SCREEN-VALUE = inkadresstemp.TTELE
      FILL-IN-KTMOBIL:SCREEN-VALUE = inkadresstemp.TMOBIL
      FILL-IN-PLKONTAKT:SCREEN-VALUE = inkadresstemp.PROJEKTLEDARE 
      FILL-IN-PLMOBIL:SCREEN-VALUE = inkadresstemp.PTELE
      
      FILL-IN-MARK:SCREEN-VALUE = inkadresstemp.MARKERING
      FILL-IN-KOM:SCREEN-VALUE = inkadresstemp.KOMMENTAR.
      IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
         FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(inkadresstemp.IKONTAKT).
         FIND FIRST personaltemp  WHERE personaltemp.ANSTNR = FILL-IN-KIKONTAKT:SCREEN-VALUE NO-LOCK NO-ERROR.
         IF NOT AVAILABLE personaltemp THEN DO:
            FIND FIRST personaltemp WHERE REPLACE(personaltemp.FORNAMN + personaltemp.EFTERNAM," ","") = REPLACE(inkadresstemp.IKONTAKT," ","") NO-LOCK NO-ERROR.
            IF AVAILABLE personaltemp THEN DO:
               FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.ANSTNR.
            END.
            ELSE DO:
               MESSAGE "Fältet 'Kontakt inköp' ska innehålla IFS-id!"
               VIEW-AS ALERT-BOX.
            END.    
         END.
      END.   
      RUN vavrop_UI(INPUT 2).
   END.  
   
   RUN vavrop_UI(INPUT 5).    
   TOG_KAB:CHECKED = inkadresstemp.SPECIFIKAKAB.
   IF FILL-IN-KOM:SCREEN-VALUE MATCHES  "*OBS! SPECIFIKA KABELLÄNGDER*" THEN DO:
      TOG_KAB:CHECKED = TRUE.
   END.  
   IF FILL-IN-KIKONTAKT:SCREEN-VALUE = "" THEN DO: 
      IF Guru.Konstanter:globforetag = "VAST" THEN DO:
         FIND FIRST personaltemp WHERE personaltemp.PERSONALKOD = arbansvar NO-LOCK NO-ERROR.   
         IF AVAILABLE personaltemp THEN DO:
            IF personaltemp.ANVANDARE NE "" THEN arbansvanv = personaltemp.ANVANDARE.
            ELSE arbansvanv = personaltemp.PERSONALKOD. 
         END.
         ELSE DO:
            FIND FIRST personaltemp WHERE personaltemp.ANVANDARE = Guru.Konstanter:globanv NO-LOCK NO-ERROR. 
            arbansvanv = Guru.Konstanter:globanv.
         END.
         FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN + " " + arbansvanv.
         IF FILL-IN-KIMOBIL:SCREEN-VALUE = "" THEN FILL-IN-KIMOBIL:SCREEN-VALUE = FILL-IN-KITELE:SCREEN-VALUE. 
         ASSIGN
         FILL-IN-KITELE:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","")
         FILL-IN-KIMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","")
         FILL-IN-KIEPOST:SCREEN-VALUE = SUBSTRING(personaltemp.PERSONSOK,20).
      END.
      ELSE DO:    
         FIND FIRST personaltemp WHERE personaltemp.ANVANDARE = Guru.Konstanter:globanv NO-LOCK NO-ERROR.
         IF AVAILABLE personaltemp THEN DO:
            ASSIGN
            FILL-IN-KITELE:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","")
            FILL-IN-KIMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","")
            FILL-IN-KIEPOST:SCREEN-VALUE = SUBSTRING(personaltemp.PERSONSOK,20).
            
            IF Guru.Konstanter:globforetag = "SNAT"  THEN FILL-IN-KIKONTAKT:SCREEN-VALUE = Guru.Konstanter:globanv.
            /*
            ELSE IF Guru.Konstanter:globforetag = "VAST" THEN DO:
               
               FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN + " " + Guru.Konstanter:globanv.
               IF FILL-IN-KIMOBIL:SCREEN-VALUE = "" THEN FILL-IN-KIMOBIL:SCREEN-VALUE = FILL-IN-KITELE:SCREEN-VALUE. 
            END.    
            */
            ELSE FILL-IN-KIKONTAKT:SCREEN-VALUE = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN.
            IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
               IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
                  FILL-IN-KIKONTAKT:SCREEN-VALUE = CAPS(personaltemp.ANSTNR).
               END.
            END.   
            
            RUN avispers_UI.
         END.
      END.   
   END.
   IF FILL-IN-KTKONTAKT:SCREEN-VALUE = "" THEN DO: 
      beranvvar = "". 
      RUN beranv_UI IN inkberh (OUTPUT beranvvar).        
      FIND FIRST personaltemp WHERE personaltemp.ANVANDARE = beranvvar NO-LOCK NO-ERROR.
      IF AVAILABLE personaltemp THEN DO:          
         ASSIGN
         FILL-IN-KTKONTAKT:SCREEN-VALUE = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN
         FILL-IN-KTTELE:SCREEN-VALUE = REPLACE(personaltemp.TELEFON," ","")
         FILL-IN-KTMOBIL:SCREEN-VALUE = REPLACE(personaltemp.MOBILTEL," ","").         
      END.
   END.  
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      IF FILL-IN-IB:SCREEN-VALUE = "" THEN DO:
         beranvvar = "".
         RUN hmtib_UI IN inkberh (OUTPUT beranvvar,OUTPUT refkon).
         inkadresstemp.REFBES = refkon.
         FILL-IN-IB:SCREEN-VALUE = beranvvar.
      END.   
      IF FILL-IN-PLKONTAKT:SCREEN-VALUE = "" THEN DO:
         beranvvar = "".
         RUN hmtplib_UI IN inkberh (OUTPUT beranvvar).
         FILL-IN-PLKONTAKT:SCREEN-VALUE = beranvvar.          
      END.
      IF FILL-IN-GKONTAKT:SCREEN-VALUE = ""  THEN RUN konmouseseldbclic_UI.
   END.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" OR  Guru.Konstanter:globforetag = "tect" {GLOBVES.I} THEN DO:
      IF FILL-IN-MARK:SCREEN-VALUE = "" THEN DO:
         beranvvar = "".
         RUN hmtpben_UI IN inkberh (OUTPUT beranvvar).         
         FILL-IN-MARK:SCREEN-VALUE = SUBSTRING(beranvvar,1,20).
      END.   
   END.  
   IF Guru.Konstanter:globforetag = "SNAT"  THEN DO:     
       
      IF FILL-IN-MARK:SCREEN-VALUE = "" THEN DO:                  
         FILL-IN-MARK:SCREEN-VALUE = STRING(inkadresstemp.AONRAONR) + " "  + STRING(inkadresstemp.AONRDELNR,">>>").
      END.   
   END.  
      
   FILL-IN-DEPKUNDNR:SCREEN-VALUE = STRING(inkadresstemp.KUNDNR).
   RUN kundnrform_UI.
   IF inkadresstemp.AVIS = TRUE THEN DO:
      FILL-IN-AVIS:SCREEN-VALUE = "Ja".
      FILL-IN-AVISPERS:SCREEN-VALUE = inkadresstemp.AVISPERS.
   END.   
   ELSE DO:
      FILL-IN-AVIS:SCREEN-VALUE = "Nej".
      FILL-IN-AVISPERS:SCREEN-VALUE = "".
   END.   
   RUN avileave_UI.   
   RUN bestnr_UI. 
END PROCEDURE.
PROCEDURE btnadressk_UI :
   RUN adresskoll_UI.
   IF feladresskoll = TRUE THEN DO:
      feladresskoll = FALSE.
      RETURN.         
   END.   
   MESSAGE "Alla uppgifter som krävs finns!"
   VIEW-AS ALERT-BOX.
END PROCEDURE.
PROCEDURE kundnrform_UI :
  
   DEFINE VARIABLE dpnrhj AS CHARACTER NO-UNDO.
   /*SE ÄVEN adresskoll_UI*/
   FILL-IN-DEPKUNDNR:FORMAT = "9999999999".
   dpnrhj = FILL-IN-DEPKUNDNR:SCREEN-VALUE.
   dpnrhj = LEFT-TRIM(dpnrhj,"0").
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "CELPA" THEN FILL-IN-DEPKUNDNR:READ-ONLY = TRUE.   
   IF inkadresstemp.LEVNAMN = "Onninen" OR inkadresstemp.LEVNAMN = "Onninen avrop" THEN DO:          
      IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "CELPA" THEN FILL-IN-DEPKUNDNR:FORMAT = "999999".
      ELSE IF Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "KRIN" THEN DO:
         IF LENGTH(dpnrhj) > 7 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,7).   
         FILL-IN-DEPKUNDNR:FORMAT = "9999999".
      END.   
      ELSE DO:
         IF LENGTH(dpnrhj) > 5 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,5).
         FILL-IN-DEPKUNDNR:FORMAT = "99999".
      END.           
   END.
   ELSE IF inkadresstemp.LEVNAMN = "AHLSELL" THEN DO:
      IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "BODE" OR Guru.Konstanter:globforetag = "snat" OR 
      Guru.Konstanter:globforetag = "elpa" THEN FILL-IN-DEPKUNDNR:FORMAT = "9999999".
      ELSE IF Guru.Konstanter:globforetag = "VAST" THEN DO:
         IF LENGTH(dpnrhj) > 8 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,8).
         FILL-IN-DEPKUNDNR:FORMAT = "99999999".
      END.                                                                
      ELSE DO:
        IF LENGTH(dpnrhj) > 5 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,5).
        FILL-IN-DEPKUNDNR:FORMAT = "99999".
      END.   
   END.
   ELSE IF inkadresstemp.LEVNAMN = "Elektroskandia" OR inkadresstemp.LEVNAMN BEGINS "Elektroskandia avrop" THEN DO: 
      IF LENGTH(dpnrhj) > 5 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,5).
      FILL-IN-DEPKUNDNR:FORMAT = "99999".
   END.   
   ELSE IF inkadresstemp.LEVNAMN = "NKT" THEN DO:
      IF LENGTH(dpnrhj) > 6 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,6).
      FILL-IN-DEPKUNDNR:FORMAT = "999999".
   END.    
   ELSE IF inkadresstemp.LEVNAMN = "SELGA" THEN DO:
      IF LENGTH(dpnrhj) > 8 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,8).
      FILL-IN-DEPKUNDNR:FORMAT = "99999999".
   END.               
   ELSE DO:
      IF LENGTH(dpnrhj) > 9 THEN FILL-IN-DEPKUNDNR:SCREEN-VALUE = SUBSTRING(dpnrhj,1,9).
      FILL-IN-DEPKUNDNR:FORMAT = ">>>>99999".
   END.               
END PROCEDURE.

PROCEDURE adressformat_UI :
   
   ASSIGN
   FILL-IN-STATUS:FORMAT = "X(256)"
   FILL-IN-BESTNR:FORMAT = "X(20)"
   FILL-IN-DEPLPNR:FORMAT = "xxx xx" 
   FILL-IN-DEPFAX:FORMAT = "X(12)" 
   FILL-IN-KIEPOST:FORMAT = "X(80)" 
   FILL-IN-KIKONTAKT:FORMAT = "X(25)"
   /*
   
   FILL-IN-IB:FORMAT = "999999"
   */ 
   FILL-IN-KIMOBIL:FORMAT = "X(15)" 
   FILL-IN-KITELE:FORMAT = "X(12)" 
   FILL-IN-KTKONTAKT:FORMAT = "X(25)" 
   FILL-IN-KTMOBIL:FORMAT = "X(15)" 
   FILL-IN-KTTELE:FORMAT = "X(12)"
   FILL-IN-GADR:FORMAT = "X(20)"    
   FILL-IN-GFAX:FORMAT = "X(12)" 
   FILL-IN-GORT:FORMAT = "X(256)"
   FILL-IN-GPNR:FORMAT = "xxx xx" 
   /*
   FILL-IN-GPNR:FORMAT = "X(6)"
   */ 
   FILL-IN-GTELE:FORMAT = "X(12)"   
   FILL-IN-PLKONTAKT:FORMAT = "X(25)" 
   FILL-IN-PLMOBIL:FORMAT = "X(15)".
   FILL-IN-PLKONTAKT:LABEL = CAPS(SUBSTRING(Guru.Konstanter:gutfardk,1,1)) + LC(SUBSTRING(Guru.Konstanter:gutfardk,2)).
   IF Guru.Konstanter:globforetag = "BORL" OR Guru.Konstanter:globforetag = "GRAN"  {GLOBVES.I} THEN DO:
      ASSIGN     
      FILL-IN-AVISPERS:FORMAT = "X(34)"             
      FILL-IN-DEPFOR:FORMAT = "X(25)" 
      FILL-IN-ALTFOR:FORMAT = "X(25)"
      FILL-IN-ALTFORTID:FORMAT = "X(25)"                  
      FILL-IN-DEPLEVADR:FORMAT = "X(25)"       
      FILL-IN-DEPLORT:FORMAT = "X(20)"       
      FILL-IN-MARK:FORMAT = "X(20)".
      IF Guru.Konstanter:globforetag = "VAST" THEN DO:
         /*LENA INLAGT 20140401 elektroskandiasxml säger x(35)*/
         FILL-IN-DEPLEVADR:FORMAT = "X(35)".
      END.                
   END.
   ELSE DO:   
      ASSIGN      
      FILL-IN-AVISPERS:FORMAT = "X(30)"            
      FILL-IN-DEPFOR:FORMAT = "X(35)"             
      FILL-IN-DEPLEVADR:FORMAT = "X(35)"       
      FILL-IN-DEPLORT:FORMAT = "X(35)"          
      FILL-IN-MARK:FORMAT = "X(35)". 
   END.  
   IF inkadresssparb.LEVNAMN = "Elektroskandia" OR inkadresssparb.LEVNAMN BEGINS "Elektroskandia avrop" THEN DO:
      ASSIGN     
      FILL-IN-MARK:FORMAT = "X(35)".
      FILL-IN-KIEPOST:FORMAT = "X(50)" . 
      FILL-IN-KIKONTAKT:FORMAT = "X(35)".
   END.
   IF inkadresstemp.LEVNAMN = "Elektroskandia" THEN  FILL-IN-AVISPERS:FORMAT = "X(256)". 
   FILL-IN-KOM:FORMAT = "X(256)".
   IF Guru.Konstanter:globforetag = "cELPA" OR Guru.Konstanter:globforetag = "UMEA" THEN DO:
      FILL-IN-DATUM:WIDTH-CHAR = FILL-IN-DATUM:WIDTH-CHAR + 3.
      FILL-IN-DATUM:FORMAT = "9999/99/99".
   END.
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN APPLY "ENTRY" TO FILL-IN-DEPFOR.
   ELSE APPLY "ENTRY" TO FILL-IN-DEPKUNDNR. 
END PROCEDURE.

PROCEDURE radadress_UI :
   IF RAD_ADRESS:SCREEN-VALUE = STRING(1) THEN DO:
      brwh[23]:HIDDEN = TRUE.
      brwh[18]:HIDDEN = FALSE.
   END.   
   IF RAD_ADRESS:SCREEN-VALUE = STRING(2) THEN DO:
      brwh[23]:HIDDEN = FALSE.
      brwh[18]:HIDDEN = TRUE.
   END.   
   RUN PlaceraKnapp_UI.
END PROCEDURE.

PROCEDURE radproj_UI :
   
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST" THEN DO:
      IF RAD_PROJ:SCREEN-VALUE = STRING(1)  OR RAD_PROJ:SCREEN-VALUE = STRING(4) THEN FILL-IN-BESTNR:SCREEN-VALUE = REPLACE(FILL-IN-BESTNR:SCREEN-VALUE,"VD.","VP.").
      IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN FILL-IN-BESTNR:SCREEN-VALUE = REPLACE(FILL-IN-BESTNR:SCREEN-VALUE,"VP.","VD.").
      IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN DO:
         IF TOG_KAB:CHECKED = TRUE THEN DO:
            MESSAGE "Du kan inte välja SPECIFIKA KABELLÄNGDER vid "  radprojladd[2] "!"
            /* MESSAGE "Du kan inte välja SPECIFIKA KABELLÄNGDER vid snabbleverans!"*/
            VIEW-AS ALERT-BOX.
         END.
         TOG_KAB:CHECKED = FALSE.
         TOG_KAB:SENSITIVE = FALSE.  
      END.   
      ELSE TOG_KAB:SENSITIVE = TRUE.
   END.
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      IF RAD_PROJ:SCREEN-VALUE = STRING(1) OR RAD_PROJ:SCREEN-VALUE = STRING(4) THEN FILL-IN-BESTNR:SCREEN-VALUE = REPLACE(FILL-IN-BESTNR:SCREEN-VALUE,"D","P").
      IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN FILL-IN-BESTNR:SCREEN-VALUE = REPLACE(FILL-IN-BESTNR:SCREEN-VALUE,"P","D").
   END.
   RUN RadProjRead_UI.
   /* inkadresssparb.IEXTRAINT[1] = INTEGER(RAD_PROJ:SCREEN-VALUE). */
   
    
END PROCEDURE.

PROCEDURE bestnr_UI :
   
   IF Guru.Konstanter:globforetag = "ELPA" THEN DO:     
      ediben = "VP.".
      IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN ediben = "VD.".
   END.
   ELSE IF Guru.Konstanter:globforetag = "VSYD" THEN DO:
      ediben = "SP.".      
   END.
   ELSE IF Guru.Konstanter:globforetag = "VAST" THEN DO:
      ediben = "VP.".
      IF RAD_PROJ:SCREEN-VALUE = STRING(2) THEN ediben = "VD.".      
   END.
   ELSE IF Guru.Konstanter:globforetag = "VORD" THEN DO:
      ediben = "NP.".
   END.
   ELSE IF Guru.Konstanter:globforetag = "VOST" THEN DO:
      ediben = "OP.".
   END.  
   ELSE IF Guru.Konstanter:globforetag = "BORL" THEN DO:
      ediben = "P".
   END.
   ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      ediben = "".
   END.
   ELSE IF Guru.Konstanter:globforetag = "SNAT" THEN DO:
      ediben = "D".     
   END.
   ELSE IF Guru.Konstanter:globforetag = "KRIN" THEN DO:
      ediben = "P".     
   END.
   ELSE ediben = "". /* ny fors eller ingen */
   
   IF FILL-IN-BESTNR:SCREEN-VALUE = "" THEN DO: 
      IF Guru.Konstanter:globforetag = "cELPA" OR Guru.Konstanter:globforetag = "GKAL" {GLOBVES.I} THEN DO:
         FILL-IN-BESTNR:SCREEN-VALUE = 
         ediben + 
         STRING(inkadresstemp.AONRAONR) + "." + STRING(inkadresstemp.AONRDELNR) + "." + 
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).
      END.
      ELSE IF Guru.Konstanter:globforetag = "BORL" THEN DO:
         FILL-IN-BESTNR:SCREEN-VALUE = 
         ediben + 
         STRING(inkadresstemp.AONRAONR) + "." + STRING(inkadresstemp.AONRDELNR) + "-" + 
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).
      END.
      ELSE IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
         FILL-IN-BESTNR:SCREEN-VALUE = 
         ediben + 
         STRING(inkadresstemp.AONRAONR) + TRIM(STRING(inkadresstemp.AONRDELNR,Guru.Konstanter:varforetypchar[1])) + "-" + 
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).
         IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
            FILL-IN-BESTNR:SCREEN-VALUE = 
            ediben + 
            STRING(inkadresstemp.AONRAONR) + "_" + TRIM(STRING(inkadresstemp.AONRDELNR,Guru.Konstanter:varforetypchar[1])) + "_" + 
            STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
            STRING(inkadresstemp.BESTORDNING).
         END.      
      END.
      ELSE IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
         FILL-IN-BESTNR:SCREEN-VALUE = 
         ediben + 
         STRING(inkadresstemp.AONRAONR) + "." + STRING(inkadresstemp.AONRDELNR) + "-" +
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).
      END.
      ELSE IF Guru.Konstanter:globforetag = "FORS" THEN DO: /* ny för fors */
         FILL-IN-BESTNR:SCREEN-VALUE = 
         ediben + 
         STRING(inkadresstemp.AONRAONR) + STRING(inkadresstemp.AONRDELNR,Guru.Konstanter:varforetypchar[1]) + "-" + 
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).     
      END.
      ELSE DO:
         FILL-IN-BESTNR:SCREEN-VALUE = 
         STRING(inkadresstemp.AONRAONR) + "." + TRIM(STRING(inkadresstemp.AONRDELNR,Guru.Konstanter:varforetypchar[1])) + "-" +
         STRING(inkadresstemp.INKID) + STRING(inkadresstemp.LEVKODINK) + 
         STRING(inkadresstemp.BESTORDNING).   
      END.
   END.
   FILL-IN-BESTNR:READ-ONLY = TRUE. 
   IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "UMEA" OR Guru.Konstanter:globforetag = "GKAL" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      FILL-IN-BESTNR:READ-ONLY = FALSE.
   END.     
END PROCEDURE.

PROCEDURE avismc_UI :   
   IF FILL-IN-AVIS:SCREEN-VALUE = "Ja" THEN FILL-IN-AVIS:SCREEN-VALUE = "Nej".
   ELSE FILL-IN-AVIS:SCREEN-VALUE = "Ja".    
   IF FILL-IN-AVIS:SCREEN-VALUE = "Ja" THEN FILL-IN-AVISPERS:HIDDEN = FALSE.     
   ELSE FILL-IN-AVISPERS:HIDDEN = TRUE.         
END PROCEDURE.

PROCEDURE avileave_UI :     
   IF FILL-IN-AVIS:SCREEN-VALUE = "Ja" THEN FILL-IN-AVISPERS:HIDDEN = FALSE.       
   ELSE FILL-IN-AVISPERS:HIDDEN = TRUE.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      RUN grundinst_UI.
   END.
   
END PROCEDURE.

PROCEDURE leaveepost_UI :
   IF FILL-IN-KIEPOST:SCREEN-VALUE NE "" THEN DO:   
      musz = FALSE.
      RUN EPOSTKOLL.P (INPUT FILL-IN-KIEPOST:SCREEN-VALUE,OUTPUT musz).   
      IF musz = FALSE THEN DO:
         APPLY "ENTRY" TO FILL-IN-KIEPOST.
         RETURN NO-APPLY.                 
      END.      
      musz = FALSE.
   END.
END PROCEDURE.
PROCEDURE leavemark_UI :
    IF FILL-IN-MARK:LABEL = "E-post" THEN DO:
      musz = FALSE.
      RUN EPOSTKOLL.P (INPUT FILL-IN-MARK:SCREEN-VALUE,OUTPUT musz).
      IF musz = FALSE THEN DO:         
         APPLY "ENTRY" TO FILL-IN-MARK.  
         RETURN NO-APPLY.         
      END.
      musz = FALSE.
   END.   
END PROCEDURE.
PROCEDURE mmdatum_UI :   
   ASSIGN  
   regdatum = DATE(FILL-IN-DATUM:SCREEN-VALUE).
   IF regdatum = ? THEN regdatum = TODAY + 1.
   /*
   RUN AlmanBtn.w.
   FILL-IN-DATUM:SCREEN-VALUE = STRING(regdatum).
   */
   FRAME-ALMAN:HIDDEN = FALSE.
   RUN allman_UI IN huvprogh.
   FRAME-ALMAN:HIDDEN = FALSE.
     
       
END PROCEDURE.
PROCEDURE visaadress_UI :
   IF AVAILABLE inkadresssparb THEN DO:  
      IF inkadresssparb.AKTIV = TRUE THEN DO:
         IF ROWID(inkadresstemp) NE ROWID(inkadresssparb) THEN DO:
            RUN sparaadress_UI.
            feladresskoll = FALSE. /*ok med byte*/
            IF feladresskoll = TRUE THEN DO:
               feladresskoll = FALSE.
               RUN setlastrowid_UI IN brwproc[9] (INPUT ROWID(inkadresssparb)).  
               RUN lastselectdyn_UI IN brwproc[9].
               RETURN.
            END.
         END.      
      END.   
   END.
   TOG_FAVOAD:CHECKED = FALSE.   
   IF NOT AVAILABLE inkadresstemp THEN DO:
      RUN setcolsortvar_UI IN brwproc[10] (INPUT " ").
      RUN openbdynspec_UI IN brwproc[10].
      RUN tidigarekoll_UI.
      RUN setcolsortvar_UI IN brwproc[12] (INPUT " ").
      RUN openbdynspec_UI IN brwproc[12].
      RETURN.
   END.  
   inkaddr = ROWID(inkadresstemp).       
   FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) = inkaddr NO-LOCK NO-ERROR.
   RUN laddaadress_UI.
   FIND FIRST tidinkadresstemp WHERE tidinkadresstemp.LEVKODINK = inkadresstemp.LEVKODINK NO-LOCK NO-ERROR.
   IF AVAILABLE tidinkadresstemp THEN DO:   
      RUN setcolsortvar_UI IN brwproc[10] (INPUT " WHERE tidinkadresstemp.LEVKODINK = '" + inkadresstemp.LEVKODINK + "'").   
   END.
   ELSE DO:
      RUN setcolsortvar_UI IN brwproc[10] (INPUT " ").
   END.   
   RUN openbdynspec_UI IN brwproc[10].
   RUN tidigarekoll_UI.
   /*
   RUN openbdynspec_UI IN brwproc[11].
   */
   RUN setcolsortvar_UI IN brwproc[12] (INPUT " WHERE levkontakttemp.LEVKOD = '" + inkadresstemp.LEVKODINK + "'").
   
   RUN openbdynspec_UI IN brwproc[12].
   FIND FIRST fastanmtemp WHERE fastanmtemp.OMRADE = inkadresstemp.LEVKODINK NO-LOCK NO-ERROR.
   IF AVAILABLE fastanmtemp THEN RUN setlastrowid_UI IN brwproc[13] (INPUT ROWID(fastanmtemp)).     
   RUN openbdynspec_UI IN brwproc[13].
   RUN lastselectdyn_UI IN brwproc[13].
   /*
   RUN openbdynspec_UI IN brwproc[18].
   */
   RUN vavrop_UI(INPUT 1). 
   RUN vavrop_UI(INPUT 5).           
END PROCEDURE.

PROCEDURE visalevmtrl_UI :
   IF NOT AVAILABLE inkadresstemp THEN RUN setcolsortvar_UI IN brwproc[8] (INPUT " ").
   ELSE DO:
      inkaddr = ROWID(inkadresstemp).
      RUN setcolsortvar_UI IN brwproc[8] (INPUT " WHERE inkbest_mtrl.LEVKODINK = '" + inkadresstemp.LEVKODINK + "'").
   END.   
   RUN columnstotempdyn_UI IN brwproc[8].
   RUN openbdynspec_UI IN brwproc[8].    
END PROCEDURE.
PROCEDURE vcbrwukon_UI :
   
   IF AVAILABLE ink_urdisp THEN DO:         
      FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_urdisp.GRUPP
      USE-INDEX KOD NO-LOCK NO-ERROR.
   END.
   ELSE DO:
      FIND FIRST bblabeltemp USE-INDEX KOD NO-LOCK NO-ERROR.
   END.      
   RUN rubriker_UI IN brwproc[1] (INPUT TEMP-TABLE bblabeltemp:DEFAULT-BUFFER-HANDLE).
   IF AVAILABLE ink_urdisp THEN DO: 
      IF ink_urdisp.KOMBINERAD NE ? THEN DO:      
         FOR EACH ink_urdispb WHERE ink_urdispb.AONRAONR = ink_urdisp.AONRAONR AND ink_urdispb.AONRDELNR = ink_urdisp.AONRDELNR AND
         ink_urdispb.KOMBINERAD = ink_urdisp.KOMBINERAD:
            RUN multiselectin_UI IN brwproc[1] (INPUT ROWID(ink_urdispb)). 
         END.
         RUN lastselectdyn_UI IN brwproc[1].       
      END.
   END.       
END PROCEDURE.
PROCEDURE vcbrwkon_UI :
   IF AVAILABLE ink_val THEN DO:         
      FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
      USE-INDEX KOD NO-LOCK NO-ERROR.
   END.
   ELSE DO:
      FIND FIRST bblabeltemp USE-INDEX KOD NO-LOCK NO-ERROR.
   END.      
   RUN rubriker_UI IN brwproc[2] (INPUT TEMP-TABLE bblabeltemp:DEFAULT-BUFFER-HANDLE).
   IF AVAILABLE ink_val THEN DO:
      RUN setcolsortvar_UI IN brwproc[3] (INPUT " WHERE ink_mtrl.AONRAONR = '" + ink_val.AONRAONR + 
      "' AND ink_mtrl.AONRDELNR = " + STRING(ink_val.AONRDELNR) +
      " AND ink_mtrl.NUM = " + STRING(ink_val.NUM)).
      RUN setcolsortvar_UI IN brwproc[6] (INPUT " WHERE bort_mtrl.AONRAONR = '" + ink_val.AONRAONR + 
      "' AND bort_mtrl.AONRDELNR = " + STRING(ink_val.AONRDELNR) +
      " AND bort_mtrl.NUM = " + STRING(ink_val.NUM)).       
   END.
   RUN columnstotempdyn_UI IN brwproc[3].
   RUN openbdynspec_UI IN brwproc[3].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].
   IF AVAILABLE ink_val THEN DO:   
      IF ink_val.RENDI = TRUE THEN DO:
         IF RAD_VALDMTRL:SCREEN-VALUE = STRING(1) THEN BTN_MTRLBACK:HIDDEN = FALSE.
      END.   
      ELSE BTN_MTRLBACK:HIDDEN = TRUE.
   END.   
   IF AVAILABLE ink_val THEN DO:   
      brwh[3]:TITLE = "Konstruktionsmateriel för " + TRIM(ink_val.ID2) + " " + TRIM(ink_val.FRI3) + " och " + TRIM(ink_val.F1).
      brwh[6]:TITLE = "Borttaget konstruktionsmateriel för " + TRIM(ink_val.ID2) + " " + TRIM(ink_val.FRI3) + " och " + TRIM(ink_val.F1).
   END.   
   ELSE DO:
     brwh[3]:TITLE = "Konstruktionsmateriel för ".
     brwh[6]:TITLE = "Borttaget konstruktionsmateriel för ".
  END.   
END PROCEDURE.
PROCEDURE aselkonback_UI :
   APPLY "ctrl-a" TO brwh[2].
   RUN selkonback_UI.
END PROCEDURE.
PROCEDURE selkonback_UI :
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.
   antraknare = 1.
   DO WHILE antraknare LE brwh[2]:NUM-SELECTED-ROWS:
      RUN fetrowid_UI IN brwproc[2] (INPUT antraknare, OUTPUT brwrowut).
      FIND FIRST ink_val WHERE ROWID(ink_val) = brwrowut NO-LOCK NO-ERROR.
      /*borttaget mtrl blir åter valbart*/
      FOR EACH bort_mtrl WHERE bort_mtrl.AONRAONR = ink_val.AONRAONR AND bort_mtrl.AONRDELNR = ink_val.AONRDELNR AND 
      bort_mtrl.NUM = ink_val.NUM NO-LOCK: 
         CREATE ink_mtrl.
         BUFFER-COPY bort_mtrl TO ink_mtrl.
         FIND FIRST levtemp WHERE levtemp.LEVKOD = ink_mtrl.LEVKOD
         USE-INDEX LEV NO-LOCK NO-ERROR.             
         ASSIGN
         ink_mtrl.LEVKODINK = ink_mtrl.LEVKOD
         ink_mtrl.LEVNAMN   = levtemp.LEVNAMN.
         DELETE bort_mtrl.         
      END.
      FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = ink_val.AONRAONR AND ink_mtrl.AONRDELNR = ink_val.AONRDELNR AND
      ink_mtrl.NUM = ink_val.NUM:
         CREATE inkber_mtrl.
         BUFFER-COPY ink_mtrl TO inkber_mtrl.  
         DELETE ink_mtrl. 
      END. 
      IF AVAILABLE ink_val THEN DO:
         DELETE ink_val.
      END.       
      IF antraknare = brwh[2]:NUM-SELECTED-ROWS THEN RUN selnextprevrow_UI IN brwproc[2].
      antraknare = antraknare + 1.
   END.
   FIND FIRST ink_val WHERE NO-LOCK NO-ERROR.
   IF NOT AVAILABLE ink_val THEN DO:
      EMPTY TEMP-TABLE ink_mtrl NO-ERROR. 
   END.   
   RUN openbdynspec_UI IN brwproc[2].
   RUN lastselectdyn_UI IN brwproc[2].
   brwh[2]:SELECT-FOCUSED-ROW() NO-ERROR.
   RUN summtrl_UI.
   
   RUN openbdynspec_UI IN brwproc[1].
   RUN lastselectdyn_UI IN brwproc[1]. 
      
   APPLY "VALUE-CHANGED" TO brwh[2].   
END PROCEDURE.
PROCEDURE aselkonover_UI :
   APPLY "ctrl-a" TO brwh[1].
   RUN selkonover_UI.
END PROCEDURE.
PROCEDURE selkonover_UI :   
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.   
   antraknare = 1.
   DO WHILE antraknare LE brwh[1]:NUM-SELECTED-ROWS:
      RUN fetrowid_UI IN brwproc[1] (INPUT antraknare, OUTPUT brwrowut).
      FIND FIRST ink_urdisp WHERE ROWID(ink_urdisp) = brwrowut NO-LOCK NO-ERROR.
      FOR EACH inkber_mtrl WHERE inkber_mtrl.AONRAONR = ink_urdisp.AONRAONR AND inkber_mtrl.AONRDELNR = ink_urdisp.AONRDELNR AND
      inkber_mtrl.NUM = ink_urdisp.NUM:
         CREATE ink_mtrl.
         BUFFER-COPY inkber_mtrl TO ink_mtrl. 
         DELETE inkber_mtrl.  
      END. 
      IF AVAILABLE ink_urdisp THEN DO:
         DELETE ink_urdisp.
      END.      
      IF antraknare = brwh[1]:NUM-SELECTED-ROWS THEN RUN selnextprevrow_UI IN brwproc[1].
      
                                                                 
      antraknare = antraknare + 1.
   END.   
   RUN openbdynspec_UI IN brwproc[2].
   RUN lastselectdyn_UI IN brwproc[2].
   RUN openbdynspec_UI IN brwproc[1].
   RUN lastselectdyn_UI IN brwproc[1].
   brwh[1]:SELECT-FOCUSED-ROW() NO-ERROR.
   RUN summtrl_UI.   
   
   APPLY "VALUE-CHANGED" TO  brwh[2].  
   IF RAD_UPPKONST:SCREEN-VALUE = STRING(2) THEN RUN avmark_UI IN brwproc[1].              
END PROCEDURE.

PROCEDURE listaDirektover_UI :   
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.   
   antraknare = 1.
   DO WHILE antraknare LE brwh[24]:NUM-SELECTED-ROWS:
      status-ok = brwh[24]:FETCH-SELECTED-ROW(antraknare).
      FIND FIRST ink_mtrl WHERE ink_mtrl.ENR = mtrltemp.ENR AND ink_mtrl.LEVKODINK = mtrltemp.LEVKOD AND
      ink_mtrl.ENRORG = mtrltemp.ENR AND ink_mtrl.LEVKOD = mtrltemp.LEVKOD AND 
      ink_mtrl.INKID     = lastinkDirekt
      NO-LOCK NO-ERROR.
      IF AVAILABLE ink_mtrl THEN DO:
          IF mtrltemp.BERKVANT NE  0 THEN ink_mtrl.INKANTAL =  ink_mtrl.INKANTAL + mtrltemp.BERKVANT.
          ELSE ink_mtrl.INKANTAL =  ink_mtrl.INKANTAL + 1.
      END.   
      ELSE DO:
         
         CREATE ink_mtrl.
         BUFFER-COPY mtrltemp TO ink_mtrl.
         ASSIGN 
         ink_mtrl.PRIS = mtrltemp.NPRIS
         ink_mtrl.PRISINK = mtrltemp.NPRIS
         ink_mtrl.AONRAONR = inkaonrvar
         ink_mtrl.AONRDELNR = inkdelnrvar 
         ink_mtrl.BERNR =  inkbervar 
         ink_mtrl.ENRORG = mtrltemp.ENR 
         ink_mtrl.LEVKODINK = mtrltemp.LEVKOD
         ink_mtrl.INKANTAL =  mtrltemp.BERKVANT
         ink_mtrl.INKID     = lastinkDirekt.
         IF ink_mtrl.INKANTAL = 0 THEN ink_mtrl.INKANTAL = 1.
         FIND FIRST levtemp WHERE levtemp.LEVKOD = ink_mtrl.LEVKODINK NO-LOCK NO-ERROR.
         IF AVAILABLE levtemp THEN ink_mtrl.LEVNAMN = levtemp.LEVNAMN.
      END.    
      antraknare = antraknare + 1.
   END.  
   RELEASE ink_mtrl NO-ERROR.
     
   RUN summtrl_UI.   
    
                 
END PROCEDURE.
PROCEDURE vcbrwupp_UI :
   DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
   DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   antal_valda = brwh[5]:NUM-SELECTED-ROWS.
   RUN avmark_UI IN brwproc[1].
   IF antal_valda = 0 THEN RETURN.  
   antal_raknare = 1.
   DO WHILE antal_raknare LE antal_valda:                                   
      status-ok = brwh[5]:FETCH-SELECTED-ROW(antal_raknare).
      FOR EACH  ink_urdisp WHERE ink_urdisp.AONRAONR = beruppinktemp.AONRAONR AND ink_urdisp.AONRDELNR = beruppinktemp.AONRDELNR AND
      ink_urdisp.UPPLAG = beruppinktemp.UPPLAG:      
         RUN multiselectin_UI IN brwproc[1] (INPUT ROWID(ink_urdisp)).        
      END.    
      antal_raknare = antal_raknare + 1.
   END. 
     
END PROCEDURE.
PROCEDURE summeradress_UI :
   /*
   EMPTY TEMP-TABLE inkadresskoptemp NO-ERROR.
   */ 
   FOR EACH inkadresstemp WHERE inkadresstemp.AKTIV = TRUE NO-LOCK:
      FIND FIRST inkbest_mtrl WHERE inkbest_mtrl.LEVKODINK = inkadresstemp.LEVKODINK NO-LOCK NO-ERROR.
      IF NOT AVAILABLE inkbest_mtrl THEN DO:
         IF inkaddr = ROWID(inkadresstemp) THEN DO:
            FIND FIRST inkadresssparb WHERE ROWID(inkadresssparb) NE inkaddr NO-LOCK NO-ERROR.
            IF AVAILABLE inkadresssparb THEN inkaddr = ROWID(inkadresssparb).
            ELSE inkaddr = ?.
         END.            
         DELETE inkadresstemp.
      END.   
   END.
   
   FOR EACH inkbest_mtrl BREAK BY inkbest_mtrl.LEVKODINK:      
      IF LAST-OF(inkbest_mtrl.LEVKODINK) THEN DO:
         FIND FIRST inkadresstemp WHERE inkadresstemp.LEVKODINK = inkbest_mtrl.LEVKODINK AND 
         inkadresstemp.AKTIV = TRUE NO-ERROR.
         IF NOT AVAILABLE inkadresstemp THEN DO:
            FIND LAST inkadressbuff WHERE inkadressbuff.LEVKODINK = inkbest_mtrl.LEVKODINK AND
            inkadressbuff.INKID = inkbest_mtrl.INKID           
            USE-INDEX LEVKODINK NO-ERROR.
            CREATE inkadresstemp.
            IF inkaddr = ? THEN inkaddr = ROWID(inkadresstemp).
            BUFFER-COPY inkbest_mtrl TO inkadresstemp.
            ASSIGN
            inkadresstemp.AKTIV = TRUE
            inkadresstemp.SKICKATSTATUS = "Ej beställd"
            inkadresstemp.BESTORDNING = 1.
            inkadresstemp.IEXTRAINT[1] = INTEGER(RAD_PROJ:SCREEN-VALUE).
            
            IF Guru.Konstanter:globforetag = "ceLPA" OR Guru.Konstanter:globforetag = "GRAN"  THEN DO:
               inkadresstemp.IEXTRAINT[1] = 2.
            END.
            IF Guru.Konstanter:globforetag = "ELPA" {GLOBVES.I} THEN DO:
                inkadresstemp.IEXTRAINT[1] = 3.
            END.  
            IF inkadresstemp.LEVNAMN BEGINS "Från Depå" THEN inkadresstemp.LEVNAMN = "Från Depå".             
            IF AVAILABLE inkadressbuff THEN DO:
               inkadresstemp.BESTORDNING = inkadresstemp.BESTORDNING + inkadressbuff.BESTORDNING.               
            END.  
                    
         END.                    
         IF Guru.GlobalaVariabler:InkDirekt = TRUE THEN DO:
            RUN RadProjRead_UI.
            /*
            inkadresstemp.IEXTRAINT[1] = INTEGER(RAD_PROJ:SCREEN-VALUE).
            */
         END.     
      END.                                    
   END.
  
END PROCEDURE.

PROCEDURE summtrl_UI :
   DEFINE VARIABLE mtrltextvar AS CHARACTER NO-UNDO.
   EMPTY TEMP-TABLE inkbest_mtrl NO-ERROR.
      /*SUMMERAT MTRL*/
   RUN DepVal_UI.   
   
   FOR EACH ink_mtrl BREAK BY ink_mtrl.TILL BY ink_mtrl.LEVKODINK BY ink_mtrl.ENR:
      ACCUMULATE ink_mtrl.INKANTAL (TOTAL BY ink_mtrl.TILL BY ink_mtrl.LEVKODINK BY ink_mtrl.ENR).
      ACCUMULATE ink_mtrl.BERANTAL (TOTAL BY ink_mtrl.TILL BY ink_mtrl.LEVKODINK BY ink_mtrl.ENR).
      mtrltextvar = mtrltextvar + ink_mtrl.MTRLTEXT + " ". 
      IF LAST-OF(ink_mtrl.ENR) THEN DO:
         CREATE inkbest_mtrl.
         BUFFER-COPY ink_mtrl TO inkbest_mtrl.
         inkbest_mtrl.BERANTAL = (ACCUM TOTAL BY ink_mtrl.ENR ink_mtrl.BERANTAL).            
         inkbest_mtrl.INKANTAL = (ACCUM TOTAL BY ink_mtrl.ENR ink_mtrl.INKANTAL).
         inkbest_mtrl.MTRLTEXT = mtrltextvar.
         mtrltextvar = "". 
             
         RUN depmtrl_UI.
         
      END.                                    
   END.
   IF  brwproc[21] NE ? THEN DO:
      RUN columnstotempdyn_UI IN brwproc[21].
      RUN openbdynspec_UI IN brwproc[21].
   END.
   RUN columnstotempdyn_UI IN brwproc[4].
   RUN openbdynspec_UI IN brwproc[4].
   
END PROCEDURE.
PROCEDURE DepVal_UI :
   
/*    Guru.GlobalaVariabler:GuruProjdepnr = 2.
 Ingrid bytte Projektlager från 1 till 2  - TILLBAKA 20191002*/   
   Guru.GlobalaVariabler:GuruProjdepnr = 1.
   Guru.GlobalaVariabler:GuruDepaNr = 0.   
   IF Guru.GlobalaVariabler:GuruDepa = TRUE THEN DO:
      /*snatdepå*/
      FIND FIRST depatemp WHERE depatemp.benamning = CMB_DEPVAL:SCREEN-VALUE NO-LOCK NO-ERROR.
      IF AVAILABLE depatemp THEN DO:
         Guru.GlobalaVariabler:GuruDepaNr = depatemp.dep-nr.
         Guru.GlobalaVariabler:GuruDepaNamn = CMB_DEPVAL:SCREEN-VALUE.
         IF VALID-HANDLE(brwproc[4]) THEN RUN cellabel_UI IN brwproc[4] (INPUT "DEPASALDO", INPUT Guru.GlobalaVariabler:GuruDepaNamn + "!Dep.Saldo"). 
      END.
      /*ELSE DO:
         Guru.GlobalaVariabler:GuruDepaNr = 0.
         Guru.GlobalaVariabler:GuruDepaNamn = CMB_DEPVAL:SCREEN-VALUE.
         IF VALID-HANDLE(brwproc[4]) THEN RUN cellabel_UI IN brwproc[4] (INPUT "DEPASALDO", INPUT Guru.GlobalaVariabler:GuruDepaNamn + "!0").         
      END.*/   
   END.   
END PROCEDURE.
PROCEDURE depmtrl_UI :
   /*snatdepå*/
   FIND FIRST depa_mtrl WHERE depa_mtrl.DEP-NR = Guru.GlobalaVariabler:GuruDepaNr AND  depa_mtrl.ENR = inkbest_mtrl.ENR NO-LOCK NO-ERROR.
   IF AVAILABLE depa_mtrl THEN inkbest_mtrl.DEPASALDO = depa_mtrl.ANTAL.
   ELSE DO:
      IF  Guru.GlobalaVariabler:GuruDepa = TRUE THEN inkbest_mtrl.DEPASALDO = 0.
      ELSE DO:
         FIND FIRST depa_mtrl WHERE  depa_mtrl.ENR = inkbest_mtrl.ENR NO-LOCK NO-ERROR.
         IF AVAILABLE depa_mtrl THEN inkbest_mtrl.DEPASALDO = depa_mtrl.ANTAL.
         ELSE inkbest_mtrl.DEPASALDO = 0.
      END.   
   END.   
END PROCEDURE.
PROCEDURE laddadep_UI :
   RUN DepVal_UI.
   FOR EACH inkbest_mtrl:             
      RUN depmtrl_UI.
   END.
  
   RUN openbdynspec_UI IN brwproc[4].  
   
END PROCEDURE.


PROCEDURE kon_mtrlback_UI :
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.  
   
   antraknare = 1.
   IF brwh[3]:NUM-SELECTED-ROWS = 0 THEN RETURN.
   DO WHILE antraknare LE brwh[3]:NUM-SELECTED-ROWS:
      RUN fetrowid_UI IN brwproc[3] (INPUT antraknare, OUTPUT brwrowut).
      FIND FIRST ink_mtrl WHERE ROWID(ink_mtrl) = brwrowut NO-LOCK NO-ERROR.
      CREATE bort_mtrl.
      BUFFER-COPY ink_mtrl TO bort_mtrl. 
      DELETE ink_mtrl.                
      IF antraknare = brwh[3]:NUM-SELECTED-ROWS THEN RUN selnextprevrow_UI IN brwproc[3].                                                                 
      antraknare = antraknare + 1.
   END.   
   FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = bort_mtrl.AONRAONR AND ink_mtrl.AONRDELNR = bort_mtrl.AONRDELNR AND 
   ink_mtrl.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
   IF NOT AVAILABLE ink_mtrl THEN DO:
      FIND FIRST ink_val  WHERE ink_val.AONRAONR = bort_mtrl.AONRAONR AND ink_val.AONRDELNR = bort_mtrl.AONRDELNR AND 
      ink_val.NUM = bort_mtrl.NUM NO-LOCK NO-ERROR.
      IF AVAILABLE ink_val THEN DO:
         
         APPLY "CHOOSE" TO BTN_BACKMTRL.
      END.   
      
   END.
   RUN columnstotempdyn_UI IN brwproc[3].
   RUN openbdynspec_UI IN brwproc[3].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].
   RUN lastselectdyn_UI IN brwproc[3].      
   RUN summtrl_UI.
END PROCEDURE.
PROCEDURE atermtrl_UI:
   DEFINE VARIABLE antraknare AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowut AS ROWID NO-UNDO.   
   antraknare = 1.
   IF brwh[6]:NUM-SELECTED-ROWS = 0 THEN RETURN.
   DO WHILE antraknare LE brwh[6]:NUM-SELECTED-ROWS:
      RUN fetrowid_UI IN brwproc[6] (INPUT antraknare, OUTPUT brwrowut).
      FIND FIRST bort_mtrl WHERE ROWID(bort_mtrl) = brwrowut NO-LOCK NO-ERROR.
      CREATE ink_mtrl.
      BUFFER-COPY bort_mtrl TO ink_mtrl. 
      DELETE bort_mtrl.                
      IF antraknare = brwh[6]:NUM-SELECTED-ROWS THEN RUN selnextprevrow_UI IN brwproc[6].                                                                 
      antraknare = antraknare + 1.
   END.
   RUN columnstotempdyn_UI IN brwproc[3].
   RUN openbdynspec_UI IN brwproc[3].
   RUN columnstotempdyn_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[6].
   RUN lastselectdyn_UI IN brwproc[6].
   RUN summtrl_UI.
END PROCEDURE.

PROCEDURE vavrop_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO.
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   IF vad = 1 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresstemp.LEVKODINK = "11" THEN DO:
         ASSIGN
         FILL-IN-DEPFOR:SCREEN-VALUE = "Vattenfall Eldistribution AB"
         FILL-IN-IB:HIDDEN = TRUE
         CMB_KOPARE:HIDDEN = FALSE
         FILL-IN-PNnummer:HIDDEN = FALSE.
         FILL-IN-PNnummerTID:HIDDEN = FALSE.
         CMB_KOPARE:LABEL = "Köparens best nr".
      END.   
      ELSE DO:
         ASSIGN
         CMB_KOPARE:HIDDEN = TRUE
         FILL-IN-PNnummerTID:HIDDEN = TRUE.
         FILL-IN-PNnummer:HIDDEN = TRUE.
      END.   
   END.
   IF vad = 2 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresstemp.LEVKODINK = "11" THEN DO:
         IF inkadresstemp.IEXTRACHAR[3] = "" THEN .
         ELSE  CMB_KOPARE:SCREEN-VALUE = inkadresstemp.IEXTRACHAR[3].
        
         FILL-IN-PNnummer:SCREEN-VALUE = inkadresstemp.IEXTRACHAR[4]. 
      END.           
   END.
   IF vad = 3 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:  
      /*LENA ÄNDRAT FRÅN inkadresstemp.LEVKODINK = "11" till inkadresssparb.LEVKODINK = "11"   20130411*/
         inkadresssparb.IEXTRACHAR[3] = CMB_KOPARE:SCREEN-VALUE.
         inkadresssparb.IEXTRACHAR[4] = FILL-IN-PNnummer:SCREEN-VALUE.  
      END.           
   END.
   IF vad = 4 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND tidinkadresstemp.LEVKODINK = "11" THEN DO:
         IF tidinkadresstemp.IEXTRACHAR[3] = "" THEN .
         ELSE  CMB_KOPARE:SCREEN-VALUE = tidinkadresstemp.IEXTRACHAR[3].
         FILL-IN-PNnummer:SCREEN-VALUE = tidinkadresstemp.IEXTRACHAR[4]. 
      END.           
   END.
   IF vad = 5 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN") THEN DO:
         CMB_KOPARE:LABEL = "Inköpsavtal".
         IF inkadresstemp.LEVKODINK = "30" THEN DO:
            CMB_KOPARE:LIST-ITEMS = "".
            FOR EACH symbriolev WHERE symbriolev.LEVKOD = "30" NO-LOCK:
               status-ok = CMB_KOPARE:ADD-LAST(symbriolev.SYMAVTAL).              
            END.
            IF inkadresstemp.IEXTRACHAR[3] = "" THEN DO:
               IF inkadresstemp.OMRADE = "NoNo" OR inkadresstemp.OMRADE = "SöNo" THEN CMB_KOPARE:SCREEN-VALUE = "ONE_Nexans_5".
               ELSE IF inkadresstemp.OMRADE = "SNÖ" THEN CMB_KOPARE:SCREEN-VALUE = "ONE_Nexans_3".
               ELSE DO:
                  FIND FIRST symbriolev WHERE symbriolev.LEVKOD = "30" NO-LOCK NO-ERROR.
                  CMB_KOPARE:SCREEN-VALUE = symbriolev.SYMAVTAL.
               END.   
            END.
            ELSE CMB_KOPARE:SCREEN-VALUE = inkadresstemp.IEXTRACHAR[3].
            CMB_KOPARE:HIDDEN = FALSE.
         END.
         ELSE CMB_KOPARE:HIDDEN = TRUE.   
      END. 
   END.
   IF vad = 6 THEN DO:
      IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN") AND inkadresssparb.LEVKODINK = "30" THEN DO:
         /*LENA ÄNDRAT FRÅN inkadresstemp.LEVKODINK = "30" till inkadresssparb.LEVKODINK = "30"   20130411*/
         inkadresssparb.IEXTRACHAR[3] = CMB_KOPARE:SCREEN-VALUE.
      END.           
   END.   
END PROCEDURE.

PROCEDURE levladd_UI :
   DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE valev AS CHARACTER NO-UNDO.
   status-ok = CMB_LEVTILL:DELETE("0").
   status-ok = CMB_LEVTILL:ADD-LAST("Från depå").
   
   ASSIGN
 
   CMB_LEV1:LIST-ITEMS = ""
   CMB_LEV2:LIST-ITEMS = ""
   CMB_LEV3:LIST-ITEMS = "".
   FOR EACH levtemp WHERE levtemp.LEVKOD NE "0" AND levtemp.LEVKOD NE "99" AND 
      levtemp.BORTTAG = FALSE USE-INDEX LEV NO-LOCK:              
      status-ok = CMB_LEVTILL:ADD-LAST(levtemp.LEVNAMN).
      IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
         IF levtemp.LEVKOD = "1" OR levtemp.LEVKOD = "2" OR levtemp.LEVKOD = "8" OR levtemp.LEVKOD = "5" THEN DO:
            status-ok = CMB_LEV1:ADD-LAST(levtemp.LEVNAMN).
            status-ok = CMB_LEV2:ADD-LAST(levtemp.LEVNAMN).
            status-ok = CMB_LEV3:ADD-LAST(levtemp.LEVNAMN).
         END.   
      END.
      ELSE DO:
         status-ok = CMB_LEV1:ADD-LAST(levtemp.LEVNAMN).
         status-ok = CMB_LEV2:ADD-LAST(levtemp.LEVNAMN).
         status-ok = CMB_LEV3:ADD-LAST(levtemp.LEVNAMN).
      END.
      status-ok = CMB_LEVBYTENR:ADD-LAST(levtemp.LEVNAMN).
      status-ok = CMB_BYTENRBE:ADD-LAST(levtemp.LEVNAMN).
      status-ok = CMB_LEVDIREKT:ADD-LAST(levtemp.LEVNAMN).              
   END.
   
   RUN hamtlev_UI IN inkberh (OUTPUT valev).   
   FIND FIRST levtemp WHERE levtemp.LEVKOD = valev
   USE-INDEX LEV NO-LOCK NO-ERROR.
   
   IF NOT AVAILABLE levtemp THEN DO:
      FIND FIRST levtemp USE-INDEX LEV NO-LOCK NO-ERROR.
   END.
   
   IF AVAILABLE levtemp THEN DO:         
      CMB_LEVTILL:SCREEN-VALUE = levtemp.LEVNAMN.  
      CMB_LEV1:SCREEN-VALUE = levtemp.LEVNAMN.
      CMB_LEV2:SCREEN-VALUE = levtemp.LEVNAMN.
      CMB_LEV3:SCREEN-VALUE = levtemp.LEVNAMN.
      CMB_LEVBYTENR:SCREEN-VALUE = levtemp.LEVNAMN.
      CMB_BYTENRBE:SCREEN-VALUE = levtemp.LEVNAMN.
      CMB_LEVDIREKT:SCREEN-VALUE = levtemp.LEVNAMN.
   END.
END PROCEDURE.

PROCEDURE depdat_UI :
   IF Guru.Konstanter:globforetag = "NIKLAS" OR Guru.Konstanter:globforetag = "cELPA" {GLOBVES.I} THEN DO:
      FIND FIRST depsektemp WHERE depsektemp.ANVANDARE = Guru.Konstanter:globanv NO-LOCK NO-ERROR.
      IF AVAILABLE depsektemp THEN DO:
         depsektemp.DepNr = depatemp.DEP-NR.
      END.
      ELSE DO:
         CREATE depsektemp.
         ASSIGN
         depsektemp.ANVANDARE = Guru.Konstanter:globanv
         depsektemp.DepNr = depatemp.DEP-NR.         
      END.
      RUN skapdepsek_UI IN inkberh (INPUT depatemp.DEP-NR, INPUT Guru.Konstanter:globanv).
   END.
END PROCEDURE.
PROCEDURE ttladda_UI :
   
   IF Guru.Konstanter:appcon THEN DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh.
   END.
   IF Guru.Konstanter:appcon THEN DO:
      RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "TRUMMADEP", OUTPUT logresult).
   END.
   ELSE DO:
      RUN FINNSTABELL.P (INPUT "TRUMMADEP", OUTPUT logresult).
   END.
   IF Guru.Konstanter:appcon THEN DO:
      RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BESTDEPAO", OUTPUT fbdep).
   END.
   ELSE DO:
      RUN FINNSTABELL.P (INPUT "BESTDEPAO", OUTPUT fbdep).
   END.   
   IF fbdep = TRUE THEN DO:      
      IF Guru.Konstanter:appcon THEN DO:
         RUN LEVAPPVAO.P PERSISTENT SET leveransaoapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      END.
      ELSE DO:
         RUN LEVAPPVAO.P PERSISTENT SET leveransaoapph.
      END.
   END.
   tthandle = TEMP-TABLE levtemp:HANDLE.
   IF Guru.Konstanter:appcon THEN DO:
      RUN DYNLADDATEMP.P PERSISTENT SET laddaproch ON Guru.Konstanter:apphand TRANSACTION DISTINCT
         (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "LEVERANTOR", INPUT " ").
   END.
   ELSE DO:
      RUN DYNLADDATEMP.P PERSISTENT SET laddaproch
         (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "LEVERANTOR", INPUT " ").
   END.
              
   tthandle = TEMP-TABLE huvlevtemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "HUVUDLEV", INPUT "").
   tthandle = TEMP-TABLE depatemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "DEPA", INPUT "").
   tthandle = TEMP-TABLE levkontakttemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "LEVKONTAKT", INPUT "").   
   tthandle = TEMP-TABLE kundnrtemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "KUNDNR", INPUT "").
   tthandle = TEMP-TABLE depsektemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "DEPSEK", INPUT "").
   tthandle = TEMP-TABLE annnamntemp:HANDLE.
   RUN laddatemp_UI IN laddaproch (INPUT-OUTPUT TABLE-HANDLE tthandle, INPUT "ANNNAMN", INPUT "").   
   FOR EACH depatemp WHERE depatemp.dep-nr = ? OR depatemp.dep-nr = 0 NO-LOCK:
      DELETE depatemp.
   END.
   FOR EACH depsektemp WHERE depsektemp.depnr = ? OR depsektemp.depnr = 0 NO-LOCK:
      DELETE depsektemp.
   END.
   RUN laddaanm_UI IN inkberh (OUTPUT TABLE fastanmtemp).
   RUN laddpers_UI IN inkberh (OUTPUT arbansvar,OUTPUT TABLE personaltemp). 
   
END PROCEDURE.
PROCEDURE tidigaremtrl_UI :
   IF AVAILABLE tidinkadresstemp THEN DO:
      RUN tidigaremtrl_UI IN inkberh (INPUT tidinkadresstemp.INKBESTID,OUTPUT TABLE ink_mtrl APPEND,OUTPUT TABLE ink_val APPEND). 
   END.   
END PROCEDURE.

PROCEDURE tidigarebest_UI :
   DEFINE VARIABLE statusmes AS CHARACTER NO-UNDO.
   EDIT_LINFO:SCREEN-VALUE = "". 
   EMPTY TEMP-TABLE tidink_mtrl NO-ERROR.  
   IF AVAILABLE tidinkadresstemp THEN DO:
      RUN tidigarebest_UI IN inkberh (INPUT tidinkadresstemp.INKBESTID,OUTPUT TABLE tidink_mtrl). 
      RUN Statusbest_UI  IN inkberh (INPUT tidinkadresstemp.INKBESTID,OUTPUT statusmes).   
      tidinkadresstemp.IEXTRACHAR[1] = statusmes.
      EDIT_LINFO:SCREEN-VALUE = tidinkadresstemp.IEXTRACHAR[2] + CHR(10) + tidinkadresstemp.IEXTRACHAR[1].
      IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
         /*nettopris beredning inköp*/               
         FIND FIRST tidink_mtrl WHERE NO-LOCK NO-ERROR.
         IF AVAILABLE tidink_mtrl THEN 
         RUN inkinnettomark_UI IN nettoh (INPUT TABLE tidink_mtrl, OUTPUT TABLE ikmtrltemp APPEND).      
         
      END.   
   END.
   RUN columnstotempdyn_UI IN brwproc[17].
   RUN openbdynspec_UI IN brwproc[17].
   RUN tidladdaadress_UI.
END PROCEDURE.

PROCEDURE tidladdaadress_UI :
   FILL-IN-DEPKUNDNRTID:FORMAT = "9999999999".
   IF AVAILABLE tidinkadresstemp THEN DO:
      tidadresID = tidinkadresstemp.INKBESTID.   
      ASSIGN    
      FILL-IN-PNnummerTID:SCREEN-VALUE                =          tidinkadresstemp.IEXTRACHAR[4]
      FILL-IN-STATUSTID:SCREEN-VALUE                   =         tidinkadresstemp.SKICKATSTATUS                   
      FILL-IN-BESTNRTID:SCREEN-VALUE                   =         tidinkadresstemp.ORDERNUMMER                     
      FILL-IN-IBTID:SCREEN-VALUE                       =         tidinkadresstemp.IBNR                            
      FILL-IN-DEPKUNDNRTID:SCREEN-VALUE                =         STRING(tidinkadresstemp.KUNDNR)                          
      FILL-IN-DEPFORTID:SCREEN-VALUE                   =         tidinkadresstemp.FORETAG    
      FILL-IN-ALTFORTID:SCREEN-VALUE                   =         tidinkadresstemp.IEXTRACHAR[5]   
      FILL-IN-DATUMTID:SCREEN-VALUE                    =         STRING(tidinkadresstemp.LEVERANSDATUM,"99/99/99")                    
      FILL-IN-DEPLEVADRTID:SCREEN-VALUE                =         tidinkadresstemp.LEVADRESS                       
      FILL-IN-DEPLPNRTID:SCREEN-VALUE                  =         tidinkadresstemp.LEVPNR                          
      FILL-IN-DEPLORTTID:SCREEN-VALUE                  =         tidinkadresstemp.LEVORT                          
      FILL-IN-DEPFAXTID:SCREEN-VALUE                   =         tidinkadresstemp.LEVFAX                          
      FILL-IN-KIKONTAKTTID:SCREEN-VALUE                =         tidinkadresstemp.IKONTAKT                        
      FILL-IN-KITELETID:SCREEN-VALUE                   =         tidinkadresstemp.ITELE                           
      FILL-IN-KIMOBILTID:SCREEN-VALUE                  =         tidinkadresstemp.IMOBIL                          
      FILL-IN-KIEPOSTTID:SCREEN-VALUE                  =         tidinkadresstemp.IEPOST                          
      FILL-IN-KTKONTAKTTID:SCREEN-VALUE                =         tidinkadresstemp.TKONTAKT                        
      FILL-IN-KTTELETID:SCREEN-VALUE                   =         tidinkadresstemp.TTELE                           
      FILL-IN-KTMOBILTID:SCREEN-VALUE                  =         tidinkadresstemp.TMOBIL                          
      FILL-IN-PLKONTAKTTID:SCREEN-VALUE                =         tidinkadresstemp.PROJEKTLEDARE                   
      FILL-IN-PLMOBILTID:SCREEN-VALUE                  =         tidinkadresstemp.PTELE                           
      FILL-IN-GKONTAKTTID:SCREEN-VALUE                 =         tidinkadresstemp.GKONTAKT                        
      FILL-IN-GADRTID:SCREEN-VALUE                     =         tidinkadresstemp.GADRESS                         
      FILL-IN-GPNRTID:SCREEN-VALUE                     =         tidinkadresstemp.GPNR                            
      FILL-IN-GORTTID:SCREEN-VALUE                     =         tidinkadresstemp.GORT                            
      FILL-IN-GTELETID:SCREEN-VALUE                    =         tidinkadresstemp.GTELE                           
      FILL-IN-GFAXTID:SCREEN-VALUE                     =         tidinkadresstemp.GFAX                            
      FILL-IN-MARKTID:SCREEN-VALUE                     =         tidinkadresstemp.MARKERING                       
      FILL-IN-KOMTID:SCREEN-VALUE                      =         tidinkadresstemp.KOMMENTAR                       
      TOG_KAB:CHECKED                                  =         tidinkadresstemp.SPECIFIKAKAB.
      IF FILL-IN-ALTFORTID:SCREEN-VALUE = "" THEN FILL-IN-ALTFORTID:SCREEN-VALUE = FILL-IN-DEPFORTID:SCREEN-VALUE.
      IF tidinkadresstemp.AVIS = TRUE THEN  FILL-IN-AVISTID:SCREEN-VALUE = "Ja".
      ELSE FILL-IN-AVISTID:SCREEN-VALUE = "Nej".                    
                                     
      FILL-IN-AVISPERSTID:SCREEN-VALUE                 =         tidinkadresstemp.AVISPERS.
      
   END.
  
   FILL-IN-MARKTID:HIDDEN = TRUE.
   FILL-IN-KOMTID:HIDDEN = TRUE.   
END PROCEDURE.
PROCEDURE tidadressspar_UI :
  FIND FIRST tidinkadresstemp WHERE tidinkadresstemp.INKBESTID = tidadresID NO-LOCK NO-ERROR.
  IF AVAILABLE tidinkadresstemp THEN DO:    
      ASSIGN    
      tidinkadresstemp.SKICKATSTATUS                    = FILL-IN-STATUSTID:SCREEN-VALUE     
      tidinkadresstemp.ORDERNUMMER                      = FILL-IN-BESTNRTID:SCREEN-VALUE    
      tidinkadresstemp.IBNR                             = FILL-IN-IBTID:SCREEN-VALUE        
      tidinkadresstemp.KUNDNR                           = INTEGER(FILL-IN-DEPKUNDNRTID:SCREEN-VALUE) 
      tidinkadresstemp.FORETAG                          = FILL-IN-DEPFORTID:SCREEN-VALUE
      tidinkadresstemp.IEXTRACHAR[5]                      = FILL-IN-ALTFORTID:SCREEN-VALUE
      tidinkadresstemp.LEVERANSDATUM                    = DATE(FILL-IN-DATUMTID:SCREEN-VALUE)     
      tidinkadresstemp.LEVADRESS                        = FILL-IN-DEPLEVADRTID:SCREEN-VALUE 
      tidinkadresstemp.LEVPNR                           = FILL-IN-DEPLPNRTID:SCREEN-VALUE   
      tidinkadresstemp.LEVORT                           = FILL-IN-DEPLORTTID:SCREEN-VALUE   
      tidinkadresstemp.LEVFAX                           = FILL-IN-DEPFAXTID:SCREEN-VALUE    
      tidinkadresstemp.IKONTAKT                         = FILL-IN-KIKONTAKTTID:SCREEN-VALUE 
      tidinkadresstemp.ITELE                            = FILL-IN-KITELETID:SCREEN-VALUE    
      tidinkadresstemp.IMOBIL                           = FILL-IN-KIMOBILTID:SCREEN-VALUE   
      tidinkadresstemp.IEPOST                           = FILL-IN-KIEPOSTTID:SCREEN-VALUE   
      tidinkadresstemp.TKONTAKT                         = FILL-IN-KTKONTAKTTID:SCREEN-VALUE 
      tidinkadresstemp.TTELE                            = FILL-IN-KTTELETID:SCREEN-VALUE         
      tidinkadresstemp.TMOBIL                           = FILL-IN-KTMOBILTID:SCREEN-VALUE   
      tidinkadresstemp.PROJEKTLEDARE                    = FILL-IN-PLKONTAKTTID:SCREEN-VALUE 
      tidinkadresstemp.PTELE                            = FILL-IN-PLMOBILTID:SCREEN-VALUE   
      tidinkadresstemp.GKONTAKT                         = FILL-IN-GKONTAKTTID:SCREEN-VALUE  
      tidinkadresstemp.GADRESS                          = FILL-IN-GADRTID:SCREEN-VALUE      
      tidinkadresstemp.GPNR                             = FILL-IN-GPNRTID:SCREEN-VALUE      
      tidinkadresstemp.GORT                             = FILL-IN-GORTTID:SCREEN-VALUE      
      tidinkadresstemp.GTELE                            = FILL-IN-GTELETID:SCREEN-VALUE     
      tidinkadresstemp.GFAX                             = FILL-IN-GFAXTID:SCREEN-VALUE      
      tidinkadresstemp.MARKERING                         = FILL-IN-MARKTID:SCREEN-VALUE      
      tidinkadresstemp.KOMMENTAR                        = FILL-IN-KOMTID:SCREEN-VALUE
      tidinkadresstemp.SPECIFIKAKAB                    = TOG_KAB:CHECKED                
      tidinkadresstemp.AVIS                             = LOGICAL(FILL-IN-AVISTID:SCREEN-VALUE,"Ja/Nej")         
      tidinkadresstemp.AVISPERS                         = FILL-IN-AVISPERSTID:SCREEN-VALUE.
      
      EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
      CREATE einkadresstemp.
      BUFFER-COPY tidinkadresstemp TO einkadresstemp.
      RUN gamlatidadresser_UI IN inkberh (INPUT TABLE einkadresstemp).
      EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
   END.
END PROCEDURE.
PROCEDURE akenr_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY. 
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-ENRBYT. 
END PROCEDURE.
PROCEDURE akben_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY.    
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-BENBYT.   
END PROCEDURE.
PROCEDURE musbendubb_UI :
   {muswait.i}
   {BENHMTINK.I}      
   RUN initsok_UI (INPUT 1,INPUT aosok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[16].
   RUN openbdynspec_UI IN brwproc[16].
END PROCEDURE.

PROCEDURE musenrdubb_UI :
   {muswait.i}
   {ENRHMT2INK.I}
   RUN initsok_UI (INPUT 2,INPUT posok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[16].
   RUN openbdynspec_UI IN brwproc[16].
END PROCEDURE.

PROCEDURE akenrD_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY. 
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-ENRDIREKT. 
END PROCEDURE.
PROCEDURE akbenD_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY.    
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-BENDIREKT.   
END PROCEDURE.

PROCEDURE musbendubbD_UI :
   {muswait.i}
   {BENHMTINKD.I} 
   RUN setorgtitle_UI  IN brwproc[24] (INPUT "").
   RUN initsokD_UI (INPUT 1,INPUT aosok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[24].
   RUN openbdynspec_UI IN brwproc[24].
END PROCEDURE.

PROCEDURE musenrdubbD_UI :
   {muswait.i}
   {ENRHMT2INKD.I}
   RUN setorgtitle_UI  IN brwproc[24] (INPUT ""). 
   RUN initsokD_UI (INPUT 2,INPUT posok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[24].
   RUN openbdynspec_UI IN brwproc[24].
END PROCEDURE.



PROCEDURE akenrbe_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY. 
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-ENRBYTBE. 
END PROCEDURE.
PROCEDURE akbenbe_UI :
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("END-ERROR") THEN  RETURN NO-APPLY.    
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN-BENBYTBE.   
END PROCEDURE.
PROCEDURE musbendubbbe_UI :
   {muswait.i}
   {BENHMTINKBE.I}      
   RUN initsok_UI (INPUT 1,INPUT aosok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[20].
   RUN openbdynspec_UI IN brwproc[20].
END PROCEDURE.

PROCEDURE musenrdubbbe_UI :
   {muswait.i}
   {ENRHMT2INKBE.I}
   RUN initsok_UI (INPUT 2,INPUT posok).
   {musarrow.i}
   RUN columnstotempdyn_UI IN brwproc[20].
   RUN openbdynspec_UI IN brwproc[20].
END PROCEDURE.



PROCEDURE initsok_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER    NO-UNDO.
   DEFINE INPUT PARAMETER sokpa AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sokbrw AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgfraga AS CHARACTER NO-UNDO.
   sokbrw = 16.
   IF FRAME-BYTENR:HIDDEN = FALSE THEN DO:
      FIND FIRST levtemp WHERE levtemp.LEVNAMN = CMB_BYTENRBE:SCREEN-VALUE NO-LOCK NO-ERROR.
      sokbrw = 20.
   END.   
   ELSE FIND FIRST levtemp WHERE levtemp.LEVNAMN = CMB_LEVBYTENR:SCREEN-VALUE NO-LOCK NO-ERROR.
   IF vad = 1 THEN DO:           
      orgfraga = " WHERE KALKNR = " + STRING(0) + " AND LEVKOD = '" + STRING(levtemp.LEVKOD) + "'".
      tth = TEMP-TABLE mtrltemp:HANDLE.
      EMPTY TEMP-TABLE valsoktemp NO-ERROR. 
      CREATE valsoktemp.
      ASSIGN 
      valsoktemp.SOKCHAR[1] = "MTRL"     /*Skarp tabell*/
      valsoktemp.SOKCHAR[2] = orgfraga   /*Öppningsquery*/
      valsoktemp.SOKCHAR[3] = "BENAMNING" /*sökfält*/
      valsoktemp.SOKCHAR[4] = "MTRLROW"  /*temptabells faltnamn för rowid*/
      valsoktemp.SOKCHAR[5] = sokpa.      /*sök på*/       
      RUN sokhmt_UI IN  brwproc[sokbrw] (INPUT TABLE valsoktemp).       
   END. 
   IF vad = 2 THEN DO:      
      orgfraga = " WHERE KALKNR = " + STRING(0) + " AND LEVKOD = '" + STRING(levtemp.LEVKOD) + "'".
      tth = TEMP-TABLE mtrltemp:HANDLE.
      EMPTY TEMP-TABLE valsoktemp NO-ERROR. 
      CREATE valsoktemp.
      ASSIGN 
      valsoktemp.SOKCHAR[1] = "MTRL"     /*Skarp tabell*/
      valsoktemp.SOKCHAR[2] = orgfraga   /*Öppningsquery*/
      valsoktemp.SOKCHAR[3] = "ENR" /*sökfält*/
      valsoktemp.SOKCHAR[4] = "MTRLROW"  /*temptabells faltnamn för rowid*/
      valsoktemp.SOKCHAR[5] = sokpa.      /*sök på*/       
      RUN sokhmt_UI IN  brwproc[sokbrw] (INPUT TABLE valsoktemp).       
   END.
   
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/                   
      RUN inkinnettomarkmtrl_UI IN nettoh (INPUT TABLE mtrltemp, OUTPUT TABLE ikmtrltemp APPEND).
      RUN openbdynspec_UI IN brwproc[sokbrw].      
   END.
   
   
END PROCEDURE.

PROCEDURE initsokD_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER    NO-UNDO.
   DEFINE INPUT PARAMETER sokpa AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sokbrw AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgfraga AS CHARACTER NO-UNDO.
   sokbrw = 24.
   FIND FIRST levtemp WHERE levtemp.LEVNAMN = CMB_LEVDIREKT:SCREEN-VALUE NO-LOCK NO-ERROR.
   IF vad = 1 THEN DO:           
      orgfraga = " WHERE KALKNR = " + STRING(0) + " AND LEVKOD = '" + STRING(levtemp.LEVKOD) + "'".
      tth = TEMP-TABLE mtrltemp:HANDLE.
      EMPTY TEMP-TABLE valsoktemp NO-ERROR. 
      CREATE valsoktemp.
      ASSIGN 
      valsoktemp.SOKCHAR[1] = "MTRL"     /*Skarp tabell*/
      valsoktemp.SOKCHAR[2] = orgfraga   /*Öppningsquery*/
      valsoktemp.SOKCHAR[3] = "BENAMNING" /*sökfält*/
      valsoktemp.SOKCHAR[4] = "MTRLROW"  /*temptabells faltnamn för rowid*/
      valsoktemp.SOKCHAR[5] = sokpa.      /*sök på*/       
      RUN sokhmt_UI IN  brwproc[sokbrw] (INPUT TABLE valsoktemp).       
   END. 
   IF vad = 2 THEN DO:      
      orgfraga = " WHERE KALKNR = " + STRING(0) + " AND LEVKOD = '" + STRING(levtemp.LEVKOD) + "'".
      tth = TEMP-TABLE mtrltemp:HANDLE.
      EMPTY TEMP-TABLE valsoktemp NO-ERROR. 
      CREATE valsoktemp.
      ASSIGN 
      valsoktemp.SOKCHAR[1] = "MTRL"     /*Skarp tabell*/
      valsoktemp.SOKCHAR[2] = orgfraga   /*Öppningsquery*/
      valsoktemp.SOKCHAR[3] = "ENR" /*sökfält*/
      valsoktemp.SOKCHAR[4] = "MTRLROW"  /*temptabells faltnamn för rowid*/
      valsoktemp.SOKCHAR[5] = sokpa.      /*sök på*/       
      RUN sokhmt_UI IN  brwproc[sokbrw] (INPUT TABLE valsoktemp).       
   END.
   
   IF Guru.Konstanter:varforetypval[29] = 1  THEN DO:                 
      /*nettopris beredning inköp*/                   
      RUN inkinnettomarkmtrl_UI IN nettoh (INPUT TABLE mtrltemp, OUTPUT TABLE ikmtrltemp APPEND).
      RUN openbdynspec_UI IN brwproc[sokbrw].      
   END.
   
   
END PROCEDURE.


PROCEDURE ktrlenrkatalog_UI:
   DEFINE OUTPUT PARAMETER katfeladresskoll AS LOGICAL NO-UNDO.    
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   katfeladresskoll = FALSE.
   FOR EACH inkbest_mtrl WHERE inkbest_mtrl.AONRAONR = inkadresssparb.AONRAONR AND inkbest_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   inkbest_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND  
   inkbest_mtrl.INKBESTID = inkadresssparb.INKBESTID
   BY inkbest_mtrl.ENR:  
      CREATE eink_mtrl.
      BUFFER-COPY inkbest_mtrl TO eink_mtrl.
   END.   
   RUN infraahsellkoll_UI IN inkberh (INPUT-OUTPUT TABLE eink_mtrl).
   FIND FIRST eink_mtrl WHERE NO-LOCK NO-ERROR.
   IF AVAILABLE eink_mtrl THEN DO: 
      katfeladresskoll = TRUE.
      EMPTY TEMP-TABLE tidut NO-ERROR. 
      CREATE tidut.
      CREATE tidut.          
      SUBSTRING(tidut.UT,1) = "Dessa " + Guru.Konstanter:genl + " finns inte hos " + inkadresssparb.LEVKODINK + " " + inkadresssparb.LEVNAMN.
      FOR EACH eink_mtrl WHERE NO-LOCK:
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = eink_mtrl.ENR + " " + eink_mtrl.BENAMNING.
      END.
      CREATE tidut.
      CREATE tidut.          
      SUBSTRING(tidut.UT,1) = "Du måste byta till en annan leverantör!".
      {AVBGOM2.I}
      excelnamn = inkadresssparb.ORDERNUMMER + ".xls".

      RUN INKVISA.W (INPUT excelnamn, INPUT TABLE stolpink_mtrl).
      EMPTY TEMP-TABLE stolpink_mtrl NO-ERROR. 
      
      {AVBFRAM2.I}       
      EMPTY TEMP-TABLE tidut NO-ERROR.
      EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
     
      RETURN.
   END.   
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
END PROCEDURE.

PROCEDURE bestGuruKonstruktion_UI :
   DEFINE VARIABLE hjid AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjnum AS INTEGER NO-UNDO.
  
   FOR EACH beruppinktemp:
      IF beruppinktemp.UPPLAG = ? THEN NEXT.
      FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN NEXT.
      RUN SkapaGuruUpplag_UI (INPUT FALSE).          
   END.  
   FIND FIRST ink_mtrl WHERE ink_mtrl.UPPLAG = ? AND ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
   NO-LOCK NO-ERROR.
   IF AVAILABLE ink_mtrl THEN DO:  
      RUN SkapaGuruUpplag_UI (INPUT TRUE).
   END. 
   FOR EACH ink_val WHERE ink_val.KOMBINERAD > 0 :
      FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
      kombkontroll.KOMBINERAD = ink_val.KOMBINERAD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kombkontroll THEN CREATE kombkontroll.
      ASSIGN 
      kombkontroll.AONRAONR = ink_val.AONRAONR  
      kombkontroll.AONRDELNR = ink_val.AONRDELNR  
      kombkontroll.KOMBINERAD = ink_val.KOMBINERAD.
      FIND FIRST idinktemp WHERE idinktemp.AONRAONR = ink_val.AONRAONR AND idinktemp.AONRDELNR = ink_val.AONRDELNR AND
      idinktemp.NUM = ink_val.NUM NO-LOCK NO-ERROR.
      IF kombkontroll.KOMBID = ? OR kombkontroll.KOMBID = "" THEN DO:
         IF AVAILABLE idinktemp THEN DO:
            FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
            USE-INDEX KOD NO-LOCK NO-ERROR.
            IF AVAILABLE bblabeltemp  THEN DO:
               IF bblabeltemp.ID2 NE "" AND STRING(idinktemp.FRI2) NE "" THEN kombkontroll.KOMBID = bblabeltemp.ID2 + ":" + " " + STRING(idinktemp.FRI2) + " ".
            END.
            IF idinktemp.FRI3 NE "" THEN DO:      
               IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
                  kombkontroll.KOMBID = kombkontroll.KOMBID +  "Littera" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
               END.
               ELSE DO:
                  kombkontroll.KOMBID = kombkontroll.KOMBID +  "Fri ID" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
               END.
            END.
         END.
         kombkontroll.NUM = ink_val.NUM.
      END.          
   END.  
   DEBUGGER:SET-BREAK().
   FOR EACH beruppinktemp: 
      FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN NEXT.
      VAL:
      FOR EACH ink_val WHERE ink_val.AONRAONR = inkadresssparb.AONRAONR AND ink_val.AONRDELNR = inkadresssparb.AONRDELNR AND
      ink_val.UPPLAG = beruppinktemp.UPPLAG AND 
      ink_val.INKBESTID = inkadresssparb.INKBESTID AND  ink_val.VISAD = FALSE
      USE-INDEX UPPBERORDNR:
         FIND FIRST ink_valb WHERE ROWID(ink_valb) = ROWID(ink_val) NO-LOCK NO-ERROR.
         RUN skapaeinkmtrl_UI. 
         ink_val.VISAD = TRUE.
         IF ink_val.KOMBINERAD > 0 THEN DO:
            FOR EACH ink_valb WHERE ink_valb.AONRAONR = ink_val.AONRAONR AND ink_valb.AONRDELNR = ink_val.AONRDELNR AND
            ink_valb.KOMBINERAD = ink_val.KOMBINERAD AND  
            ink_valb.NUM NE ink_val.NUM AND ink_valb.INKBESTID = inkadresssparb.INKBESTID:
               RUN skapaeinkmtrl_UI.
               ink_valb.VISAD = TRUE.
            END.
            FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
            kombkontroll.NUM = ink_val.NUM NO-LOCK NO-ERROR.
            IF NOT AVAILABLE kombkontroll THEN DO:
               NEXT VAL.
            END.
         END.        
         hjid = "".
         FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
         ink_mtrl.NUM = ink_val.NUM AND      
         ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND  
         ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
         NO-LOCK NO-ERROR.
         IF NOT AVAILABLE ink_mtrl THEN NEXT VAL.
          
         FIND FIRST passage WHERE passage.PassageID = STRING(ink_val.UPPLAG) NO-LOCK NO-ERROR.
         FIND FIRST idinktemp WHERE idinktemp.AONRAONR = ink_val.AONRAONR AND idinktemp.AONRDELNR = ink_val.AONRDELNR AND
         idinktemp.NUM = ink_val.NUM NO-LOCK NO-ERROR.
         IF AVAILABLE idinktemp THEN DO:
            FIND FIRST bblabeltemp WHERE bblabeltemp.KONSKOD = ink_val.GRUPP
            USE-INDEX KOD NO-LOCK NO-ERROR.
            IF AVAILABLE bblabeltemp  THEN DO:
               IF bblabeltemp.ID2 NE "" AND STRING(idinktemp.FRI2) NE "" THEN hjid = hjid +  bblabeltemp.ID2 + ":" + " " + STRING(idinktemp.FRI2) + " ".
            END.
            IF idinktemp.FRI3 NE "" THEN DO:      
               IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
                  hjid = hjid +  "Littera" + ":" + " " + STRING(idinktemp.FRI3) + " ".            
               END.
               ELSE DO:
                  hjid = hjid +   " " + STRING(idinktemp.FRI3) + " ".
                  /*Lena 20180412 ta bort Fri id- texten blir mer än 30 tecken
                  hjid = hjid +  "Fri ID" + ":" + " " + STRING(idinktemp.FRI3) + " ".        */    
               END.
            END.
         END.
         RUN SkapaGuruKonstruktion_UI (hjid).
      END.
   END.  
   
   FOR EACH ink_val WHERE ink_val.VISAD = TRUE:
      ink_val.VISAD = FALSE.
   END.   
   
   FOR EACH eink_mtrl WHERE eink_mtrl.INKANTAL > 0 USE-INDEX UPPLAG:
      hjnum = eink_mtrl.NUM.
      IF eink_mtrl.KOMBINERAD > 0 THEN DO:
         FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = eink_mtrl.AONRAONR  AND kombkontroll.AONRDELNR = eink_mtrl.AONRDELNR AND 
         kombkontroll.KOMBINERAD = eink_mtrl.KOMBINERAD NO-LOCK NO-ERROR.
         IF AVAILABLE kombkontroll THEN DO:
            hjnum = kombkontroll.NUM. 
         END.
      END.  
      FIND FIRST idinktemp WHERE idinktemp.AONRAONR = eink_mtrl.AONRAONR AND idinktemp.AONRDELNR = eink_mtrl.AONRDELNR AND
      idinktemp.NUM = hjnum NO-LOCK NO-ERROR.              
    
      IF AVAILABLE idinktemp THEN RUN SkapGuruMtrl_UI (INPUT idinktemp.FRI2).
      ELSE RUN SkapGuruMtrl_UI (INPUT "0").
      IF NOT AVAILABLE idinktemp THEN.
      ELSE DO:
         FIND FIRST ink_val WHERE ink_val.AONRAONR = eink_mtrl.AONRAONR  AND ink_val.AONRDELNR = eink_mtrl.AONRDELNR AND 
         ink_val.NUM = eink_mtrl.NUM NO-LOCK NO-ERROR.
         IF ink_val.KOMBINERAD > 0 THEN DO:
            FIND FIRST kombkontroll WHERE kombkontroll.AONRAONR = ink_val.AONRAONR  AND kombkontroll.AONRDELNR = ink_val.AONRDELNR AND 
            kombkontroll.KOMBINERAD = ink_val.KOMBINERAD NO-LOCK NO-ERROR.
            GuruMtrl.KID                      = kombkontroll.NUM. 
         /*  GuruMtrl.KonstruktionsNr          = kombkontroll.KOMBID.*/
            
            IF Guru.Konstanter:globforetag = "GRAN" THEN GuruMtrl.KonstruktionsNr = GuruMtrl.KID.
         END.   
         ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN GuruMtrl.KonstruktionsNr = GuruMtrl.KID.
      END.
       
   END.
   /*"depå"*/
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      CREATE eink_mtrl.
      BUFFER-COPY ink_mtrl TO eink_mtrl.            
   END.
   FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   eink_mtrl.INKBESTID = inkadresssparb.INKBESTID AND 
   eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND eink_mtrl.TILL = "depå"
   NO-LOCK NO-ERROR.
   IF AVAILABLE eink_mtrl THEN DO:
      FIND FIRST GuruUpplag WHERE  GuruUpplag.ID = 1 AND GuruUpplag.UpplagNr = 0  NO-LOCK NO-ERROR.
      IF NOT AVAILABLE GuruUpplag THEN DO:  
         RUN SkapaGuruUpplag_UI (INPUT TRUE).      
      END.
      CREATE GuruKonstruktion.
      ASSIGN 
      GuruKonstruktion.ID = 1.
      GuruKonstruktion.KonstruktionsNr   = 0.
      GuruKonstruktion.UpplagNr        = GuruUpplag.UpplagNr.
      CREATE GuruKonstruktionOne. 
      BUFFER-COPY GuruKonstruktion TO GuruKonstruktionOne.
   END.
   
   FOR EACH eink_mtrl WHERE 
   eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
   eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND 
   eink_mtrl.TILL = "depå" 
   USE-INDEX LEVENR:
      RUN SkapGuruMtrl_UI (INPUT "0").
      ASSIGN
      GuruMtrl.UpplagNr         =  0.  
      GuruMtrl.KonstruktionsNr  = 0.            
   END.
   

END PROCEDURE.

   
PROCEDURE bestGuruDS_UI :
   DEFINE VARIABLE v-datetime    AS DATETIME   NO-UNDO.
   DEFINE VARIABLE datvar AS DATE NO-UNDO.
   DEFINE VARIABLE tidvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE filenamn AS CHARACTER NO-UNDO.
   
    /* 
    IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
       GuruOrder.TypOrder = "SNABBO".
   END.
   ELSE IF inkadresssparb.IEXTRAINT[1] = 4 THEN DO :
       GuruOrder.TypOrder = "UPPLAGSO".
     
   END.   
   ELSE IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO :
      GuruOrder.TypOrder = "KONSTO".
   END.  
    
   
   */  
   
   
   v-datetime = NOW.
   Helpers.Functions:GetDateTime(INPUT v-datetime, OUTPUT datvar, OUTPUT tidvar).
   filenamn = inkadresssparb.ORDERNUMMER + "_" + STRING(datvar,"99999999") + REPLACE(STRING(tidvar,"HH:MM:SS"),":",""). 
   DEBUGGER:SET-BREAK().
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      RUN KbestGuruOneDs_UI IN inkberh (INPUT elementhidden, INPUT filenamn ,INPUT TABLE GuruOrder,INPUT TABLE GuruBestallare,INPUT TABLE GuruLevAdress,INPUT TABLE GuruUpplag,INPUT TABLE GuruKonstruktion,INPUT TABLE GuruKonstruktionOne,INPUT TABLE GuruMtrl, OUTPUT TABLE felmeddftptemp).  
   END.
   ELSE IF Guru.Konstanter:globforetag = "ELPA" THEN DO:
      filenamn = filenamn + ".xml".
      IF GuruOrder.TypOrder = "SNABBO" THEN DO:
         RUN SbestGuruDs_UI IN inkberh (INPUT elementhidden,INPUT inkadresssparb.ORDERNUMMER,INPUT TABLE GuruOrder,INPUT TABLE GuruBestallare,INPUT TABLE GuruLevAdress,INPUT TABLE GuruUpplag,INPUT TABLE GuruKonstruktion,INPUT TABLE GuruKonstruktionOne,INPUT TABLE GuruMtrl, OUTPUT TABLE felmeddftptemp).
      END.
      ELSE IF GuruOrder.TypOrder = "UPPLAGSO" THEN DO :
         RUN UbestGuruDs_UI IN inkberh (INPUT elementhidden, INPUT inkadresssparb.ORDERNUMMER,INPUT TABLE GuruOrder,INPUT TABLE GuruBestallare,INPUT TABLE GuruLevAdress,INPUT TABLE GuruUpplag,INPUT TABLE GuruKonstruktion,INPUT TABLE GuruKonstruktionOne,INPUT TABLE GuruMtrl, OUTPUT TABLE felmeddftptemp).
      END.   
      ELSE IF GuruOrder.TypOrder = "KONSTO" THEN DO :
         RUN KbestGuruDs_UI IN inkberh (INPUT elementhidden,INPUT inkadresssparb.ORDERNUMMER,INPUT TABLE GuruOrder,INPUT TABLE GuruBestallare,INPUT TABLE GuruLevAdress,INPUT TABLE GuruUpplag,INPUT TABLE GuruKonstruktion,INPUT TABLE GuruKonstruktionOne,INPUT TABLE GuruMtrl, OUTPUT TABLE felmeddftptemp).
      END.  
   END.    
   ELSE RUN KbestGuruDs_UI IN inkberh (INPUT elementhidden,INPUT filenamn ,INPUT TABLE GuruOrder,INPUT TABLE GuruBestallare,INPUT TABLE GuruLevAdress,INPUT TABLE GuruUpplag,INPUT TABLE GuruKonstruktion,INPUT TABLE GuruKonstruktionOne,INPUT TABLE GuruMtrl, OUTPUT TABLE felmeddftptemp).
   
   FOR EACH felmeddftptemp WHERE NO-LOCK:
      inkadresssparb.SKICKATSTATUS = inkadresssparb.SKICKATSTATUS + TRIM(felmeddftptemp.FELMEDD).
      MESSAGE TRIM(felmeddftptemp.FELMEDD) VIEW-AS ALERT-BOX.
      IF felmeddftptemp.FELMEDD BEGINS "Fil skickad" THEN DELETE felmeddftptemp.
      IF AVAILABLE felmeddftptemp THEN DO:
         IF felmeddftptemp.FELMEDD BEGINS "Filen är utläst för vidare behandling." THEN  DELETE felmeddftptemp.
      END.   
   END.
   FIND FIRST felmeddftptemp WHERE NO-LOCK NO-ERROR.
   IF AVAILABLE felmeddftptemp THEN DO:
      MESSAGE "Du har fått felmeddelanden! Du måste kolla upp dem!"
      VIEW-AS ALERT-BOX.
   END.
   
   
END PROCEDURE.
PROCEDURE bestGuru_UI :
   DEFINE VARIABLE hjid AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
   EMPTY TEMP-TABLE GuruOrder NO-ERROR.
   EMPTY TEMP-TABLE GuruBestallare NO-ERROR.
   EMPTY TEMP-TABLE GuruLevAdress NO-ERROR.
   EMPTY TEMP-TABLE GuruUpplag NO-ERROR.
   EMPTY TEMP-TABLE GuruKonstruktion NO-ERROR.
   EMPTY TEMP-TABLE GuruKonstruktionOne NO-ERROR. 
   EMPTY TEMP-TABLE GuruMtrl NO-ERROR.
   RUN arbart_UI IN inkberh (INPUT inkaonrvar,INPUT inkdelnrvar, OUTPUT inkarbart).
   /*
    om         inkadresssparb.IEXTRAINT[1] = 1 = projekt lev
               inkadresssparb.IEXTRAINT[1] = 2 snabb lev
               
               inkadresssparb.IEXTRAINT[1] = 4 = UPPLAG
    */               
   RUN konstskap_UI.
   RUN upplagskap_UI.
   RUN SkapaGuruOrder_UI.
   
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      RUN bestGuruSnabb_UI.
      FOR EACH GuruMtrl:
         GuruMtrl.KonstruktionsNr = 0.
      END.
   END.                                        
   ELSE IF inkadresssparb.IEXTRAINT[1] = 4 THEN DO :
      RUN bestGuruUpplag_UI.
   END.   
   ELSE IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO :
      RUN bestGuruKonstruktion_UI.
   END.         
   EMPTY TEMP-TABLE eink_mtrl NO-ERROR.
   RUN bestGuruDS_UI.
   
   kontrollbest = TRUE.
   EMPTY TEMP-TABLE konsteink_mtrl NO-ERROR.
END PROCEDURE.

PROCEDURE bestGuruUpplag_UI :   
   DEFINE VARIABLE byggid AS INTEGER NO-UNDO. 
   FOR EACH beruppinktemp:
      IF beruppinktemp.UPPLAG = ? THEN NEXT.
      FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN NEXT.
      RUN SkapaGuruUpplag_UI (INPUT FALSE).
   END.  
   FIND FIRST ink_mtrl WHERE ink_mtrl.UPPLAG = ? AND ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
   NO-LOCK NO-ERROR.
   IF AVAILABLE ink_mtrl THEN DO:  
      RUN SkapaGuruUpplag_UI (INPUT TRUE).
   END. 
   FOR EACH beruppinktemp: 
      FIND FIRST ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      ink_mtrl.UPPLAG = beruppinktemp.UPPLAG AND      
      ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
      ink_mtrl.INKBESTID = inkadresssparb.INKBESTID 
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ink_mtrl THEN NEXT.
      RUN skapaeinkmtrlUpplag_UI. 
   END.
   DEFINE VARIABLE hjnum AS INTEGER NO-UNDO. 
   DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
   hjrakn = 1.
    
   
   FOR EACH eink_mtrl WHERE eink_mtrl.INKANTAL > 0 USE-INDEX UPPLAG:
      RUN SkapGuruMtrl_UI (INPUT "0").
      ASSIGN
      GuruMtrl.KonstruktionsNr  = 0.
   END.
   /*"depå"*/
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND              
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.TILL = "DEPÅ" AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      CREATE eink_mtrl.
      BUFFER-COPY ink_mtrl TO eink_mtrl.            
   END.
   FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   eink_mtrl.INKBESTID = inkadresssparb.INKBESTID AND 
   eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND eink_mtrl.TILL = "depå"
   NO-LOCK NO-ERROR.
   IF AVAILABLE eink_mtrl THEN DO:
      FIND FIRST GuruUpplag WHERE  GuruUpplag.ID = 1 AND GuruUpplag.UpplagNr = 0  NO-LOCK NO-ERROR.
      IF NOT AVAILABLE GuruUpplag THEN DO:  
         RUN SkapaGuruUpplag_UI (INPUT TRUE).    
      END.
     
   END.
        
   
   FOR EACH eink_mtrl WHERE 
   eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND 
   eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND 
   eink_mtrl.INKANTAL > 0 AND eink_mtrl.UPPLAG  = ? AND 
   eink_mtrl.TILL = "depå" 
   USE-INDEX LEVENR:   
      RUN SkapGuruMtrl_UI (INPUT "0"). 
      ASSIGN
      GuruMtrl.UpplagNr         = 0
      GuruMtrl.KonstruktionsNr  = 0.
   END.
END PROCEDURE.
      
PROCEDURE bestGuruSnabb_UI :    
   /*depå best*/
   DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
   FOR EACH ink_mtrl WHERE ink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND ink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
   ink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND ink_mtrl.INKBESTID = inkadresssparb.INKBESTID:
      /*om ej summera mtrl*/
      FIND FIRST eink_mtrl WHERE eink_mtrl.AONRAONR = inkadresssparb.AONRAONR AND eink_mtrl.AONRDELNR = inkadresssparb.AONRDELNR AND
      eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.ENR = ink_mtrl.ENR            
      AND eink_mtrl.INKBESTID = inkadresssparb.INKBESTID
      NO-LOCK NO-ERROR.      
      /*CHR(10)*/             
      IF AVAILABLE eink_mtrl THEN DO:
         IF eink_mtrl.MTRLTEXT = "" THEN eink_mtrl.MTRLTEXT = ink_mtrl.MTRLTEXT.
         ELSE eink_mtrl.MTRLTEXT = eink_mtrl.MTRLTEXT + CHR(10) + ink_mtrl.MTRLTEXT.
         eink_mtrl.INKANTAL = eink_mtrl.INKANTAL + ink_mtrl.INKANTAL.
      END.
      ELSE DO:   
         CREATE eink_mtrl.
         BUFFER-COPY ink_mtrl TO eink_mtrl.
      END.
   END.
   FOR EACH eink_mtrl WHERE eink_mtrl.LEVKODINK = inkadresssparb.LEVKODINK AND eink_mtrl.INKANTAL > 0:
      RUN SkapGuruMtrl_UI (INPUT "0").  
   END.
END PROCEDURE.
PROCEDURE SkapaGuruOrder_UI :
   DEFINE VARIABLE cbuyer AS CHARACTER NO-UNDO.
   DEFINE VARIABLE hjkom AS CHARACTER NO-UNDO.
   DEFINE VARIABLE delnrint AS INTEGER NO-UNDO.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
   EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "AOREF"                   
   inextradatatemp.HUVUDCH = inkadresssparb.AONRAONR              
   inextradatatemp.HUVUDINT =  inkadresssparb.AONRDELNR.         
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   
   
   hjkom = inkadresssparb.KOMMENTAR + " Kontaktperson inköp:" + STRING(inkadresssparb.IKONTAKT).
   IF STRING(inkadresssparb.ITELE) NE "" THEN hjkom = hjkom +  " Tele:" + STRING(STRING(inkadresssparb.ITELE)).
   IF inkadresssparb.IMOBIL NE "" THEN hjkom = hjkom +  " Mobil:" + STRING(inkadresssparb.IMOBIL).    
   hjkom = hjkom + "Kontaktperson teknik:" + STRING(inkadresssparb.TKONTAKT).
   IF inkadresssparb.TTELE NE "" THEN hjkom = hjkom +  " Tele:" + STRING(inkadresssparb.TTELE).
   IF inkadresssparb.TMOBIL NE "" THEN hjkom = hjkom +  " Mobil:" + STRING(inkadresssparb.TMOBIL).
   CREATE GuruOrder.
  
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN DO:
      GuruOrder.TypOrder = "SNABBO".
   END.
   ELSE IF inkadresssparb.IEXTRAINT[1] = 4 THEN DO :
      GuruOrder.TypOrder = "UPPLAGSO".
   END.   
   ELSE IF inkadresssparb.IEXTRAINT[1] = 1 THEN DO :
      GuruOrder.TypOrder = "KONSTO".
   END.  
   ASSIGN
   GuruOrder.ID              =  1
   GuruOrder.AONR            = inkadresssparb.AONRAONR
   GuruOrder.DELNR           = inkadresssparb.AONRDELNR.
   
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF inkarbart= 0 THEN.
      ELSE GuruOrder.DELNR  = inkarbart.
   END.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
     
      IF AVAILABLE extradatatemp THEN DO:
         ASSIGN
         GuruOrder.MessageType     = extradatatemp.SOKCHAR[6] /*uppdragstyp*/
         GuruOrder.SekvensID       = extradatatemp.SOKCHAR[7].
         delnrint = INTEGER(GuruOrder.SekvensID) NO-ERROR.
         IF GuruOrder.MessageType = "WorkTask" THEN DO:
            IF delnrint NE 0 THEN
            GuruOrder.DELNR  = INTEGER(GuruOrder.SekvensID).
         END.   
      END.
   END.   
   ASSIGN
   GuruOrder.LevID           = inkadresssparb.LEVKODINK
   GuruOrder.OrderNumber     = TRIM(STRING(inkadresssparb.ORDERNUMMER))  
   GuruOrder.OrderDatum      = STRING(TODAY,"9999-99-99") 
   GuruOrder.OrderText       = inkadresssparb.AVISPERS 
   GuruOrder.OrderMarking    = inkadresssparb.MARKERING   
   GuruOrder.Ort             = inkadresssparb.LEVORT
   GuruOrder.Kontakt         =  STRING(inkadresssparb.TKONTAKT)
   GuruOrder.Referens    = TRIM(STRING(inkadresssparb.ORDERNUMMER)).
   
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
   EMPTY TEMP-TABLE extradatatemp NO-ERROR.
   
   IF inkadresssparb.SPECIFIKAKAB = TRUE THEN DO:
      GuruOrder.OrderText           = "OBS! SPECIFIKA KABELLÄNGDER " + hjkom.      
   END.    
   ELSE DO:
      GuruOrder.OrderText           = "OBS! HELA KABELLÄNGDER " + hjkom.
   END.
   
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:
      GuruOrder.Referens = inkadresssparb.IEXTRACHAR[4].       
   END.
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      IF INDEX(inkadresssparb.ORDERNUMMER,"-") > 1 THEN DO:
         GuruOrder.Referens = TRIM(SUBSTRING(inkadresssparb.ORDERNUMMER,1,INDEX(inkadresssparb.ORDERNUMMER,"-") - 1)).
      END.         
   END.
   
   RUN hmtpben_UI IN inkberh (OUTPUT GuruOrder.Benamning).
   IF (Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "VAST") AND inkadresssparb.LEVKODINK = "11" THEN DO:
      tempmessage.SenderID = tempmessage.SenderID + "2".
      cbuyer = REPLACE(inkadresssparb.IEXTRACHAR[3],"NORR","").
      cbuyer = REPLACE(cbuyer,"NORR",""). 
      cbuyer = REPLACE(cbuyer,"MELLAN","").
      cbuyer = REPLACE(cbuyer,"VÄST-ÖST","").
      GuruOrder.OrderNumber = TRIM(cbuyer).    
   END.      
   CREATE GuruBestallare. 
   ASSIGN
   GuruBestallare.ID           =  1
   GuruBestallare.KundNr       = STRING(inkadresssparb.KUNDNR,">>>99999")
   GuruBestallare.Foretag      = inkadresssparb.FORETAG
   GuruBestallare.Kontakt      = inkadresssparb.IKONTAKT
   GuruBestallare.Tele         = inkadresssparb.ITELE.
   ASSIGN
   GuruBestallare.MobTele  = inkadresssparb.IMOBIL
   GuruBestallare.Epost = inkadresssparb.IEPOST.
   IF inkadresssparb.IEXTRACHAR[5] = "" THEN inkadresssparb.IEXTRACHAR[5] = inkadresssparb.FORETAG.
   CREATE GuruLevAdress.
   ASSIGN
   GuruLevAdress.ID     = 1
   GuruLevAdress.FORETAG        = inkadresssparb.IEXTRACHAR[5]
   GuruLevAdress.ADRESS      = inkadresssparb.LEVADRESS
   GuruLevAdress.ORT        = inkadresssparb.LEVORT
   GuruLevAdress.POSTNR  = STRING(REPLACE(inkadresssparb.LEVPNR," ",""),"99999")
   GuruLevAdress.LAND = "SE".
END PROCEDURE.
PROCEDURE SkapaGuruUpplag_UI :
   DEFINE INPUT  PARAMETER depavarin AS LOGICAL NO-UNDO.
  
   IF depavarin = FALSE THEN DO:
      CREATE GuruUpplag. 
      ASSIGN
      GuruUpplag.ID              = 1
      GuruUpplag.UpplagNr        = beruppinktemp.UPPLAG
      GuruUpplag.Adress          = beruppinktemp.Adress
      GuruUpplag.POSTNR          = beruppinktemp.POSTNR
      GuruUpplag.ORT             = beruppinktemp.ORT
      GuruUpplag.Xkoordinat      = beruppinktemp.XKORDCH
      GuruUpplag.Ykoordinat      = beruppinktemp.YKORDCH
      GuruUpplag.UpplagText      =  beruppinktemp.ANMARK.
   END.
   ELSE DO:
      CREATE GuruUpplag. 
      ASSIGN
      GuruUpplag.ID              = 1
      GuruUpplag.UpplagNr        = 0 
      GuruUpplag.Adress          = "Materiel ej kopplat till upplag"
      GuruUpplag.UpplagText        = "Materiel till leveransadress".
   END.      
END PROCEDURE.
PROCEDURE SkapaGuruKonstruktion_UI :
   DEFINE INPUT  PARAMETER hjid AS CHARACTER NO-UNDO.
   
   CREATE GuruKonstruktion.
   ASSIGN 
   GuruKonstruktion.ID = 1.
   GuruKonstruktion.KId = ink_val.NUM.
   GuruKonstruktion.KonstruktionsNr  = INTEGER(ink_val.ID2).
   IF beruppinktemp.UPPLAG = ?  THEN  GuruKonstruktion.UpplagNr        = 0.
   ELSE GuruKonstruktion.UpplagNr        = beruppinktemp.UPPLAG.      
   IF NOT AVAILABLE idinktemp THEN GuruKonstruktion.KonstruktionsId   = "Ingen" + STRING(ink_val.NUM).
   ELSE GuruKonstruktion.KonstruktionsId         = hjid.
   RUN hmtkonst_UI IN inkberh (INPUT ink_val.GRUPP,OUTPUT hjid). 
   GuruKonstruktion.KonText         = hjid + " " + ink_val.F1 + " " + ink_val.ANMARK.
   CREATE GuruKonstruktionOne.
   BUFFER-COPY GuruKonstruktion TO GuruKonstruktionOne. 
   GuruKonstruktionOne.KonstruktionsNr   = GuruKonstruktion.KId.
   
   
   
   /*
   
     
   */
   
END PROCEDURE.
PROCEDURE SkapGuruMtrl_UI :
   DEFINE INPUT  PARAMETER byggnrc AS CHARACTER NO-UNDO.
   CREATE GuruMtrl.  
   ASSIGN
   GuruMtrl.ID               = 1
   GuruMtrl.KID              = eink_mtrl.NUM
   GuruMtrl.KonstruktionsNr  = INTEGER(byggnrc)
   GuruMtrl.BENAMNING        = eink_mtrl.BENAMNING
   GuruMtrl.ARTIKEL          = eink_mtrl.ENR
   GuruMtrl.ANTAL            = eink_mtrl.INKANTAL
   GuruMtrl.ENHET            = eink_mtrl.ENHET
   GuruMtrl.LEVDATUM         = STRING(inkadresssparb.LEVERANSDATUM,"9999-99-99")
   GuruMtrl.ARTIKELTEXT      = eink_mtrl.MTRLTEXT .        
   IF GuruMtrl.KonstruktionsNr = 0 THEN GuruMtrl.KonstruktionsNr = GuruMtrl.KID.
   IF eink_mtrl.UPPLAG = ?  THEN  GuruMtrl.UpplagNr       = 0.
   ELSE GuruMtrl.UpplagNr       = eink_mtrl.UPPLAG.    
   IF inkadresssparb.IEXTRAINT[1] = 2 THEN GuruMtrl.UpplagNr       = 0.
   IF Guru.Konstanter:mtrlsekvar[6]  = FALSE  THEN DO:
      GuruMtrl.PRIS             = eink_mtrl.PRISINK.
   END.   
   IF Guru.Konstanter:globforetag = "GRAN" THEN GuruMtrl.KonstruktionsNr = GuruMtrl.KID.
END PROCEDURE. 


PROCEDURE InkListorDS_UI :
   RUN InkListorDS_UI IN inkberh (OUTPUT DATASET-HANDLE InkListorDS BIND).
   IF VALID-HANDLE(InkListorDS) THEN DO:
      Konstgruppbuffh = InkListorDS:GET-BUFFER-HANDLE(1).
      Konstruktionbuffh = InkListorDS:GET-BUFFER-HANDLE(2).
      Konvalbuffh = InkListorDS:GET-BUFFER-HANDLE(3).
      Mtrlberbuffh = InkListorDS:GET-BUFFER-HANDLE(4).
   END.
END PROCEDURE.

PROCEDURE kopplatstrum_UI :
   DEFINE VARIABLE uttagfinns AS LOGICAL NO-UNDO.
   DEFINE VARIABLE trummafinns AS LOGICAL NO-UNDO.
   DEFINE VARIABLE onummer AS CHARACTER NO-UNDO.
   /*1. skapar BESTDEPAO för inköp uttag och trumma
     2. om något enr är trumma- välj en eller flera trummor först - koppling till projektnr  endast
     2. om det är ett inköp -koppla inköpet till pplats- om koppling ej görs går det att göra i Leveransstatus  borrtaget
    
    */
    EMPTY TEMP-TABLE einkadresstemp NO-ERROR.
    EMPTY TEMP-TABLE eaobest_mtrl NO-ERROR.
    CREATE einkadresstemp. 
    BUFFER-COPY inkadresssparb TO einkadresstemp. 
    FIND FIRST einkadresstemp NO-LOCK NO-ERROR.

    IF VALID-HANDLE(leveransaoapph)  THEN RUN inkbestdepao_UI IN leveransaoapph (INPUT TABLE einkadresstemp, INPUT Guru.GlobalaVariabler:GuruProjdepnr,INPUT Guru.Konstanter:globanv, OUTPUT TABLE eaobest_mtrl , OUTPUT uttagfinns, OUTPUT trummafinns ).
    
    FIND FIRST eaobest_mtrl  WHERE eaobest_mtrl.trummanr = 999  NO-LOCK NO-ERROR.
    IF AVAILABLE eaobest_mtrl  THEN DO:
      FOR EACH eaobest_mtrl  WHERE eaobest_mtrl.trummanr = 999 USE-INDEX DEPNR:                                                            
         Guru.GlobalaVariabler:GuruVdepnr = eaobest_mtrl.DEPNR.
         RUN StartTrummaDS_UI.                            
         {AVBGOM2.I}              
         onummer =  eaobest_mtrl.ORDERNUMMER.
         RUN TRUMAO.W (INPUT 3, INPUT eaobest_mtrl.ENR, INPUT eaobest_mtrl.AONRAONR, INPUT eaobest_mtrl.AONRDELNR, INPUT eaobest_mtrl.ANTAL, INPUT FALSE, INPUT onummer ).
         {AVBFRAM2.I}
         RUN SlutTrummaDS_UI.
          
         DELETE  eaobest_mtrl.                             
      END.
      EMPTY TEMP-TABLE ilagertrum NO-ERROR.
      EMPTY TEMP-TABLE eutaobest_mtrl NO-ERROR. 
      
      IF VALID-HANDLE(leveransaoapph)  THEN RUN hmttrumbestdepao_UI IN leveransaoapph (INPUT onummer, OUTPUT TABLE ilagertrum, OUTPUT TABLE eutaobest_mtrl ).
      FIND FIRST ilagertrum   NO-LOCK NO-ERROR.
      IF AVAILABLE ilagertrum THEN DO:
         CREATE tidut.
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Följande trummor är bokade:".
         FOR EACH ilagertrum USE-INDEX ENR NO-LOCK:
            CREATE tidut. 
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Depå " + STRING(ilagertrum.DEPNR) + " " +  ilagertrum.TRUMMAPLATS + " enr "  +  ilagertrum.ENR + " " + STRING(ilagertrum.LAGMETER) + " m".                    
            CREATE tidut.                
         END.
      END.
      FIND FIRST eutaobest_mtrl  NO-LOCK NO-ERROR.
      IF AVAILABLE eutaobest_mtrl THEN DO:   
         CREATE tidut.
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = "Följande uttag från depå är gjorda:".
         FOR EACH eutaobest_mtrl USE-INDEX DEPNR NO-LOCK:
            CREATE tidut. 
            ASSIGN
            SUBSTRING(tidut.UT,1) = "Depå " + STRING(eutaobest_mtrl.DEPNR) + " enr "  +  eutaobest_mtrl.ENR + " " +   STRING(eutaobest_mtrl.ANTAL) + " " + eutaobest_mtrl.ENHET .                    
            CREATE tidut.       
         END.
      END.
    END.
    /* ej tvingande att boka pplats direkt i inköp
    FIND FIRST eaobest_mtrl WHERE eaobest_mtrl.INKBESTID > 0  NO-LOCK NO-ERROR.
    IF AVAILABLE  eaobest_mtrl THEN DO:
       /* test pplats
       Guru.GlobalaVariabler:GuruVdepnr = eaobest_mtrl.DEPNR.
       RUN StartTrummaDS_UI.
       EMPTY TEMP-TABLE lplagertrum NO-ERROR.
       {AVBGOM2.I}   
       /*AHLSELL INKÖP*/              
       RUN LEVERANSVAO.W (INPUT 4, INPUT inkadresssparb.INKBESTID, INPUT-OUTPUT TABLE lplagertrum, INPUT-OUTPUT TABLE eaobest_mtrl).
       EMPTY TEMP-TABLE lplagertrum NO-ERROR.       
       RUN SlutTrummaDS_UI.
       {AVBFRAM2.I}*/
    END.    
    ELSE DO:
       FIND FIRST eaobest_mtrl WHERE eaobest_mtrl.BESTNR > 0  NO-LOCK NO-ERROR.
       IF AVAILABLE  eaobest_mtrl THEN DO:
          /* test pplats
          Guru.GlobalaVariabler:GuruVdepnr = eaobest_mtrl.DEPNR.
          RUN StartTrummaDS_UI.
          EMPTY TEMP-TABLE lplagertrum NO-ERROR.
          {AVBGOM2.I}   
          /*uttag*/     
          
                   
          RUN LEVERANSVAO.W (INPUT 5, INPUT inkadresssparb.INKBESTID, INPUT-OUTPUT TABLE lplagertrum, INPUT-OUTPUT TABLE eaobest_mtrl).
          EMPTY TEMP-TABLE lplagertrum NO-ERROR.
          RUN SlutTrummaDS_UI.
          {AVBFRAM2.I}*/
       END.      
    END.*/
    FIND FIRST eaobest_mtrl  WHERE eaobest_mtrl.trummanr = 998 NO-ERROR.
    IF AVAILABLE eaobest_mtrl THEN DO:
       MESSAGE  "Alla trummor för enr: " +  eaobest_mtrl.ENR + " är redan uttagna på projekt. Trumma måste manuellt läggas på p-plats när det finns en ledig."
       VIEW-AS ALERT-BOX.
       
    END.   
         
END PROCEDURE.   

PROCEDURE CreateCustomQuery:
   DEFINE INPUT PARAMETER tth  AS HANDLE NO-UNDO.
   DEFINE INPUT PARAMETER q AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER CustomQueryh AS HANDLE NO-UNDO.
   CREATE QUERY CustomQueryh.
   CustomQueryh:SET-BUFFERS(tth).
   CustomQueryh:QUERY-PREPARE(q).
   CustomQueryh:QUERY-OPEN().
END PROCEDURE.
   
PROCEDURE CloseCustomQuery:
   DEFINE INPUT PARAMETER CustomQueryh AS HANDLE NO-UNDO.
   CustomQueryh:QUERY-CLOSE()  NO-ERROR.
   CustomQueryh = ?.
END PROCEDURE.
PROCEDURE StartTrummaDS_UI :
   DEFINE VARIABLE ClienttdSetapph AS HANDLE NO-UNDO.   
   /*    Guru.GlobalaVariabler:GuruProjdepnr = 2.
   Ingrid bytte Projektlager från 1 till 2  - TILLBAKA 20191002*/   
   Guru.GlobalaVariabler:GuruProjdepnr = 1.
    
   IF logresult = TRUE THEN DO:
      RUN TRUMMAKLIENTDS.P PERSISTENT SET ClienttdSetapph.
      Guru.GlobalaVariabler:ClienttdSetapph = ClienttdSetapph.
      RUN laddaTrummaDs_UI IN  Guru.GlobalaVariabler:ClienttdSetapph. 
      RUN LaddaFalt_UI IN Guru.GlobalaVariabler:ClienttdSetapph (OUTPUT TABLE lagertrum,OUTPUT TABLE aotrum).
  END.     
END PROCEDURE.
PROCEDURE SlutTrummaDS_UI :
   Guru.GlobalaVariabler:GuruProjdepnr = 0.
   Guru.GlobalaVariabler:GuruVdepnr = 0.
   IF logresult = TRUE THEN DO:
      RUN AvsTrumma_UI IN  Guru.GlobalaVariabler:ClienttdSetapph.
   END.   
   EMPTY TEMP-TABLE lagertrum NO-ERROR.
   EMPTY TEMP-TABLE aotrum NO-ERROR. 
END PROCEDURE.

PROCEDURE RadProjSet_UI :
   RAD_PROJ:SCREEN-VALUE = STRING(inkadresssparb.IEXTRAINT[1]).
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      /*Anders Olsson Elpool i Umeå AB  1 okt 2021 11:43:45 
      BAKÅT KOMP inkadresssparb.IEXTRAINT[1] = 1 AND  inkadresssparb.IEXTRAINT[2] = 1
      */
      IF inkadresssparb.IEXTRAINT[1] = 1 AND  inkadresssparb.IEXTRAINT[2] = 1 THEN DO:
         RAD_PROJ:SCREEN-VALUE = STRING(4).
         inkadresssparb.IEXTRAINT[1] = 4.
         inkadresssparb.IEXTRAINT[2] = 0.
      END.
   END.     
END PROCEDURE.
PROCEDURE RadProjRead_UI :
   inkadresssparb.IEXTRAINT[1] = INTEGER(RAD_PROJ:SCREEN-VALUE).
   
END PROCEDURE.
PROCEDURE Gomadress_UI :
   IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
      ASSIGN 
      FILL-IN-DEPFAX:HIDDEN = TRUE 
      FILL-IN-KITELE:HIDDEN = TRUE
      FILL-IN-KTTELE:HIDDEN = TRUE
      FILL-IN-KTKONTAKT:HIDDEN = TRUE
      FILL-IN-KTMOBIL:HIDDEN = TRUE
      FILL-IN-PLKONTAKT:HIDDEN = TRUE
      FILL-IN-PLMOBIL:HIDDEN = TRUE
      FILL-IN-GKONTAKT:HIDDEN = TRUE
      FILL-IN-GADR:HIDDEN = TRUE
      FILL-IN-GTELE:HIDDEN = TRUE
      FILL-IN-GPNR:HIDDEN = TRUE
      FILL-IN-GORT:HIDDEN = TRUE
      FILL-IN-GFAX:HIDDEN = TRUE.
      Guru.GlobalaVariabler:MellanRumKnappar = 0.5.
      Guru.GlobalaVariabler:StartRadForKnappar = FILL-IN-KIMOBIL:ROW.
      Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-KIMOBIL).
      Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-MARK).
      Guru.Konstanter:PlaceraKnapparLodratt(FILL-IN-KOM).
      Guru.GlobalaVariabler:MellanRumKnappar = 0.
   END.   
   
END PROCEDURE.

PROCEDURE vistrum_UI :
   
   /*IF brwh[4] = brwh[4] THEN RETURN.*/
   IF brwh[4]:NUM-SELECTED-ROWS = 0 THEN DO:
      MESSAGE "Du har inte valt något materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.
   IF brwh[4]:NUM-SELECTED-ROWS > 1 THEN DO:
      MESSAGE "Du får bara välja ett materiel!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.
   
   IF inkbest_mtrl.DEPNR = 0 THEN DO:
      MESSAGE "Trummor kan bara visas om depå är vald för enr!"    
      VIEW-AS ALERT-BOX.  
      RETURN.
   END.
  
   Guru.GlobalaVariabler:GuruVdepnr = inkbest_mtrl.DEPNR.
   RUN StartTrummaDS_UI.                            
   {AVBGOM2.I}               
   RUN TRUMAO.W (INPUT 4, INPUT inkbest_mtrl.ENR, INPUT inkbest_mtrl.AONRAONR, INPUT inkbest_mtrl.AONRDELNR, INPUT inkbest_mtrl.ANTAL, INPUT FALSE, INPUT "" ).
   {AVBFRAM2.I}
   RUN SlutTrummaDS_UI.
END PROCEDURE.

