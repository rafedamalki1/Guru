/*ANLAPP.P*/
{PRIARBANLTEMP.I}
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
DEFINE VARIABLE str AS CHARACTER FORMAT "X(86)" NO-UNDO.    
{TIDUTTTNEW.I} 
FIND FIRST FORETAG NO-LOCK NO-ERROR.
ASSIGN Guru.Konstanter:globforetag = FORETAG.FORETAG.
{FORESTYR.I}
{DYNHMT.I}
PROCEDURE anlspara_UI :                         
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.           
   DEFINE INPUT PARAMETER TABLE FOR anlaggtemp.             
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.             
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST anlaggtemp NO-ERROR. 
   RUN namnkoll_UI (INPUT vem,INPUT anlaggtemp.ANLNR,OUTPUT TABLE felmeddtemp).                   .     
   FIND FIRST felmeddtemp NO-ERROR.
   IF AVAILABLE felmeddtemp THEN RETURN.   
   DO TRANSACTION:
      FIND FIRST ANLAGGNING WHERE ANLAGGNING.ANLNR = anlaggtemp.ANLNR EXCLUSIVE-LOCK NO-ERROR.    
      IF NOT AVAILABLE ANLAGGNING THEN CREATE ANLAGGNING.
      BUFFER-COPY anlaggtemp TO ANLAGGNING.
   END.
   RELEASE ANLAGGNING.       
END PROCEDURE.
PROCEDURE namnkoll_UI :                         
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vemsok AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.      
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   IF vem = ? THEN DO:
      FIND FIRST ANLAGGNING WHERE ANLAGGNING.ANLNR = vemsok NO-LOCK NO-ERROR.
      IF AVAILABLE ANLAGGNING THEN DO:
         CREATE felmeddtemp.
         ASSIGN
         felmeddtemp.FELMEDD = "Det finns redan en anläggning med detta nummer.".
         RETURN.
      END.      
   END.
END PROCEDURE.
PROCEDURE anlhmt_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR anlaggtemp.   
   EMPTY TEMP-TABLE anlaggtemp NO-ERROR.    
   ASSIGN
   nytab      = "anlaggtemp"
   orginaltab = "ANLAGGNING". 
   kommandoquery = "FOR EACH " +  orginaltab + " NO-LOCK".       
   /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE anlaggtemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.
PROCEDURE hamtaen_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR anlaggtemp.     
   EMPTY TEMP-TABLE anlaggtemp NO-ERROR. 
   IF vem = ? THEN DO:
      CREATE anlaggtemp.
      RETURN.
   END.
   
   ASSIGN
   nytab      = "anlaggtemp"
   orginaltab = "ANLAGGNING".
   /*IF vemid = "" THEN kommandoquery = "BESTTAB.VIBESTID = " + '"' + vem + '"'.
   ELSE 
   */
   kommandoquery = "ANLAGGNING.ANLNR = " + "'" + vem + "'".
   kommandoquery = "FOR EACH " +  orginaltab + " WHERE " + kommandoquery + " NO-LOCK".       
   /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE anlaggtemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.
PROCEDURE anlbort_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.      
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST ANLAGGNING WHERE ANLAGGNING.ANLNR = vem NO-LOCK NO-ERROR.
   DO TRANSACTION:
      FIND CURRENT ANLAGGNING EXCLUSIVE-LOCK NO-ERROR.
      DELETE ANLAGGNING.
   END.   
END PROCEDURE.
PROCEDURE visaalla_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.   
   EMPTY TEMP-TABLE tidut NO-ERROR.    
   str = "===================.============================".
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,1) = "ANLÄGGNINGSREGISTER"
   SUBSTRING(tidut.UT,30) = STRING(TODAY).
   CREATE tidut.
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = "ANLÄGGNING NR".
   SUBSTRING(tidut.UT,21) = "BENÄMNING".                                
   
   CREATE tidut.
   ASSIGN tidut.UT = str.  
   OPEN QUERY annq FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK.
   GET FIRST annq NO-LOCK.
   DO WHILE AVAILABLE(ANLAGGNING):
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = STRING(ANLAGGNING.ANLNR,"x(15)").  
      SUBSTRING(tidut.UT,21) = ANLAGGNING.BENAMNING. 
      GET NEXT annq NO-LOCK.     
   END.                     
   CLOSE QUERY annq.
END PROCEDURE.
