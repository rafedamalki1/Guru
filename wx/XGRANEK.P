  /*XGRANEKO.P*/
  
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO. 
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO. 
DEFINE VARIABLE ekrid AS RECID EXTENT 50 NO-UNDO.
DEFINE VARIABLE aoomrade LIKE AONRTAB.OMRADE NO-UNDO.          
DEFINE VARIABLE timtid AS DECIMAL FORMAT "99.99" NO-UNDO. 
DEFINE VARIABLE multi AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE berkostnad AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE totpristim AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE reskod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE resantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE resbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE ovkod LIKE TIDREGITAB.OVERTIDTILL NO-UNDO. 
DEFINE VARIABLE ovantal LIKE TIDREGITAB.OVERANTAL NO-UNDO.
DEFINE VARIABLE ovbelopp LIKE EKRAPPRESULT.EOVERBELOPP NO-UNDO. 
DEFINE VARIABLE trakod LIKE TIDREGITAB.TRAKTKOD NO-UNDO. 
DEFINE VARIABLE traantal LIKE TIDREGITAB.TRAKTANTAL NO-UNDO.
DEFINE VARIABLE trabelopp LIKE EKRAPPRESULT.ETRAKTBELOPP NO-UNDO. 
DEFINE VARIABLE lonkod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE lonantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE lonbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE berkod LIKE TIDREGITAB.BEREDSKAP NO-UNDO. 
DEFINE VARIABLE bbantal LIKE TIDREGITAB.BERANTAL NO-UNDO.
DEFINE VARIABLE berbelopp LIKE EKRAPPRESULT.EBERBELOPP NO-UNDO.
DEFINE VARIABLE pkod LIKE PERSONALTAB.PERSONALKOD NO-UNDO.
DEFINE VARIABLE typover LIKE EKRAPPRESULT.ERESULTENH NO-UNDO. 
DEFINE VARIABLE typdatum LIKE EKRAPPRESULT.EVERDATUM NO-UNDO. 
DEFINE VARIABLE kodanst LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE NEW SHARED TEMP-TABLE ekoforst
   FIELD ENY LIKE EKRAPPRESULT.ENY 
   FIELD EPERSONALKOD LIKE EKRAPPRESULT.EPERSONALKOD 
   FIELD EPROJEKT LIKE EKRAPPRESULT.EPROJEKT 
   FIELD EORG LIKE EKRAPPRESULT.EORG  
   FIELD EGEO LIKE EKRAPPRESULT.EGEO      
   FIELD EVERDATUM LIKE EKRAPPRESULT.EVERDATUM
   FIELD EOVERJA LIKE EKRAPPRESULT.EOVERJA
   FIELD ERESULTENH LIKE EKRAPPRESULT.ERESULTENH 
   FIELD EBELOPP LIKE  EKRAPPRESULT.EBELOPP 
   FIELD EANTAL  LIKE EKRAPPRESULT.EANTAL 	       
   FIELD ELONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD ELONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    
   FIELD ELONBELOPP LIKE EKRAPPRESULT.ELONBELOPP         
   INDEX PERSORG IS PRIMARY EPERSONALKOD EORG EGEO EPROJEKT ASCENDING.
pkod = "".
STARTV:
FOR EACH PERSONALTAB WHERE PERSONALTAB.BRAVO = TRUE USE-INDEX PERSONALKOD NO-LOCK:
   aoomrade = "".
   persrec = RECID(PERSONALTAB).   
   IF pkod NE PERSONALTAB.PERSONALKOD THEN DO:
      pkod = PERSONALTAB.PERSONALKOD.        
      persrec = RECID(PERSONALTAB).
      FIND FIRST ANSTFORMTAB WHERE
      ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.  
      IF ANSTFORMTAB.KOD = 'T' OR ANSTFORMTAB.KOD = 'T1' THEN NEXT STARTV.
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      totpristim = TIMKOSTNADSTAB.PRISA.       
      kodanst = ANSTFORMTAB.KOD.
   END.  
   FIND FIRST TIDREGITAB WHERE
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIDREGITAB.GODKAND NE "  " AND TIDREGITAB.VECKOKORD NE "" AND
   TIDREGITAB.PRISTYP NE "FRèNVARO." USE-INDEX PSTART NO-LOCK NO-ERROR.
   IF NOT AVAILABLE TIDREGITAB THEN DO:
      persrec = persrec.
   END.
   ELSE DO:                                 
      TID:
      REPEAT:
         IF NOT AVAILABLE TIDREGITAB THEN LEAVE. 
         IF TIDREGITAB.PRISTYP = 'RESTID...' THEN DO TRANSACTION: 
	    aoomrade = aoomrade.	        	      	       
	 END.	                
	 ELSE DO:
            totpristim = TIDREGITAB.PRIS.
            FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND
            AONRTAB.DELNR = TIDREGITAB.DELNR USE-INDEX AONR NO-LOCK NO-ERROR.
            IF NOT AVAILABLE AONRTAB THEN DO:
               aoomrade = PERSONALTAB.OMRADE. 
               IF TIDREGITAB.AONR = "" THEN aoomrade = PERSONALTAB.OMRADE. 
               ELSE DO:
                  MESSAGE "AONR" TIDREGITAB.AONR TIDREGITAB.DELNR "FINNS EJ! KONTAKTA ELPOOL"
                  VIEW-AS ALERT-BOX.
               END.
            END.    
            ELSE DO:
               aoomrade = AONRTAB.OMRADE.   
               IF AONRTAB.OMRADE = "" THEN aoomrade = PERSONALTAB.OMRADE.   
            END.                      	 	 
            typdatum = 
            STRING(DATE(MONTH(TIDREGITAB.DATUM),01,YEAR(TIDREGITAB.DATUM)),"999999").  
	    FIND FIRST ekoforst WHERE
	    ekoforst.ENY = FALSE AND
            ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND 
            ekoforst.EORG = PERSONALTAB.OMRADE AND 
            ekoforst.EGEO = aoomrade AND
            ekoforst.EPROJEKT = TIDREGITAB.AONR AND         
            ekoforst.EVERDATUM = typdatum      
            USE-INDEX PERSORG NO-LOCK NO-ERROR.
            IF NOT AVAILABLE ekoforst THEN DO TRANSACTION:
    	       CREATE ekoforst.
	       ASSIGN 
	       ekoforst.ENY = FALSE
	       ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD
	       ekoforst.EPROJEKT = TIDREGITAB.AONR 
	       ekoforst.EORG = PERSONALTAB.OMRADE  
   	       ekoforst.EGEO = aoomrade 	    	    
	       ekoforst.EVERDATUM = typdatum.
            END.                                             
            ekrid[1] = RECID(ekoforst).
	    /*TIDREGISTRERING*/	          	       
	    /*TIMMAR OCH PENNGAR*/  
	    DO TRANSACTION:
	       FIND ekoforst WHERE RECID(ekoforst) = ekrid[1]
	       EXCLUSIVE-LOCK NO-ERROR.                                    
	       ASSIGN ekoforst.EOVERJA = FALSE. 	       
	       IF ekoforst.EOVERJA = FALSE AND TIDREGITAB.TOTALT > 0 THEN DO:		  
		  nytid = TIDREGITAB.TOTALT.
		  RUN TIMSEK.P.
		  timtid = (sekunder / 3600).
		  ASSIGN ekoforst.EBELOPP = ekoforst.EBELOPP +
		  (TIDREGITAB.PRIS * timtid)
		  ekoforst.EANTAL = ekoforst.EANTAL + timtid.
	       END.
	    END.	    
	 END.
	 FIND NEXT TIDREGITAB WHERE
	 TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
	 TIDREGITAB.GODKAND NE "  " AND TIDREGITAB.VECKOKORD NE "" AND
	 TIDREGITAB.PRISTYP NE "FRèNVARO."
	 USE-INDEX PSTART NO-LOCK NO-ERROR.
	 IF NOT AVAILABLE TIDREGITAB THEN LEAVE.
      END.
   END.  /*ELSE DO*/
END.   /*FOR EACH*/     

RUN GRANEKO2.P.   
/*
PROCEDURE res_UI:
   multi = 0.                                        /*DESSA KODER FINNS I N2.P OCH LON_UI*/
   typover = "OVE".
   FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
   LONTILL.LONTILLAGG = lonkod
   USE-INDEX LON NO-LOCK NO-ERROR.
   IF AVAILABLE LONTILL THEN DO:
      multi = LONTILL.MULTIP.      
   END.          
   ELSE RETURN.                     
   resbelopp = (TIDREGITAB.PRIS + (TIDREGITAB.PRIS * multi)) * resantal. 
   IF ekoforst.ELONTILLAGG = reskod OR ekoforst.ELONTILLAGG = "" THEN DO:
      persrec = persrec.
   END.                                   
   ELSE DO:
      FIND FIRST ekoforst WHERE
      ekoforst.ENY = FALSE AND
      ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND   
      ekoforst.EORG = PERSONALTAB.OMRADE AND 
      ekoforst.EGEO = aoomrade AND              
      ekoforst.EVERDATUM = typdatum AND
      ekoforst.EPROJEKT = TIDREGITAB.AONR AND
      ekoforst.ELONTILLAGG = reskod
      USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
      IF NOT AVAILABLE ekoforst THEN DO:
         CREATE ekoforst.
      END.
   END.   
   ASSIGN 
   ekoforst.ENY = FALSE
   ekoforst.ERESULTENH = typover
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD
   ekoforst.EPROJEKT = TIDREGITAB.AONR 
   ekoforst.EORG = PERSONALTAB.OMRADE  
   ekoforst.EGEO = aoomrade            
   ekoforst.EVERDATUM = typdatum 
   ekoforst.ELONTILLAGG = reskod
   ekoforst.ELONTILLANTAL = ekoforst.ELONTILLANTAL + resantal  
   ekoforst.ELONBELOPP = ekoforst.ELONBELOPP + resbelopp. 
END PROCEDURE.	         
PROCEDURE lon_UI:
   ASSIGN
   multi = 0     
   typover =  "LON".        
   FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
   LONTILL.LONTILLAGG = TIDREGITAB.LONTILLAGG 
   USE-INDEX LON NO-LOCK NO-ERROR.
   IF AVAILABLE LONTILL THEN DO:
      ASSIGN
      multi = LONTILL.MULTIP
      typover = LONTILL.TYPKOD.      
   END.       
   IF typover =  "RES" THEN DO:
      typover = "OVE". 
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'RESTID...' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      lonbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTA.PRISA * multi)) * lonantal.        
   END. 
   ELSE IF typover =  "REL" THEN DO:
      typover = "REL". 
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'RESTID...' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      lonbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTA.PRISA * multi)) * lonantal.        
   END. 
   ELSE IF typover =  "RE2" THEN DO:
      typover = "REL". 
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR.
      nytid = lonantal.
      RUN TIMSEK.P.
      lonantal = (sekunder / 3600).		 
      lonbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTA.PRISA * multi)) * lonantal.        
   END.
   ELSE IF typover =  "OVE" THEN DO:    
       nytid = lonantal.
       RUN TIMSEK.P.
       lonantal = (sekunder / 3600).	                           		 
       lonbelopp = (totpristim + (totpristim * multi)) * lonantal. 
   END. 
   ELSE DO:
      FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
      LONTILL.LONTILLAGG = lonkod USE-INDEX LON NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL THEN DO:
         IF LONTILL.ENHET = "KR" THEN DO:
            lonbelopp = lonantal.
            lonantal = 0.
         END.
         ELSE IF LONTILL.ENHET = "TI" THEN DO:
            nytid = lonantal.
            RUN TIMSEK.P.
            lonantal = (sekunder / 3600). 
            lonbelopp = lonantal * LONTILL.ERSATTNING.
         END.
         ELSE DO:
             lonbelopp = lonantal * LONTILL.ERSATTNING.           
         END.    
         IF lonkod = "FRUK" OR 
         lonkod = "LUNC" OR 
         lonkod = "MIDD" OR 
         lonkod = "FRLU" OR
         lonkod = "FRMI" OR 
         lonkod = "LUMI" OR 
         lonkod = "FLMI" THEN DO:
            lonkod = "850".
            lonbelopp = lonbelopp * -1 * LONTILL.ERSATTNING.
         END.                                          
      END.
      ELSE RETURN.    
   END.
   IF ekoforst.ELONTILLAGG = lonkod OR ekoforst.ELONTILLAGG = "" THEN DO:
      persrec = persrec.
   END.                                   
   ELSE DO:
      FIND FIRST ekoforst WHERE
      ekoforst.ENY = FALSE AND
      ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND 
      ekoforst.EORG = PERSONALTAB.OMRADE AND 
      ekoforst.EGEO = aoomrade AND
      ekoforst.EVERDATUM = typdatum AND
      ekoforst.EPROJEKT = TIDREGITAB.AONR AND
      ekoforst.ELONTILLAGG = lonkod
      USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
      IF NOT AVAILABLE ekoforst THEN DO:
         CREATE ekoforst.
      END.
   END.   
   ASSIGN 
   ekoforst.ENY = FALSE
   ekoforst.ERESULTENH = typover
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD 
   ekoforst.EPROJEKT = TIDREGITAB.AONR 
   ekoforst.EORG = PERSONALTAB.OMRADE  
   ekoforst.EGEO = aoomrade 
   ekoforst.ELONTILLAGG = lonkod       
   ekoforst.EVERDATUM = typdatum
   ekoforst.ELONTILLANTAL = ekoforst.ELONTILLANTAL + lonantal  
   ekoforst.ELONBELOPP = ekoforst.ELONBELOPP + lonbelopp. 
END PROCEDURE.	        
PROCEDURE tra_UI:
   musz = FALSE.
   multi = 0.         
   typover = "TRA".
   FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAAVTAL = PERSONALTAB.TRAAVTAL AND
   TRAKTATAB.TRAKTKOD = trakod USE-INDEX TRAKTKOD NO-LOCK NO-ERROR.
   IF AVAILABLE TRAKTATAB THEN DO:
      trabelopp = traantal * TRAKTATAB.ERSATTNING.           
   END.    
   ELSE RETURN.    
   IF ekoforst.ELONTILLAGG = trakod OR ekoforst.ELONTILLAGG = "" THEN DO:
      persrec = persrec.
   END.                                   
   ELSE DO:
      FIND FIRST ekoforst WHERE
      ekoforst.ENY = FALSE AND
      ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND
      ekoforst.EORG = PERSONALTAB.OMRADE AND 
      ekoforst.EGEO = aoomrade AND 
      ekoforst.EVERDATUM = typdatum AND
      ekoforst.EPROJEKT = TIDREGITAB.AONR AND
      ekoforst.ELONTILLAGG = trakod
      USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
      IF NOT AVAILABLE ekoforst THEN DO:
         CREATE ekoforst.
      END.
   END.   
   ASSIGN 
   ekoforst.ENY = FALSE
   ekoforst.ERESULTENH = typover
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD
   ekoforst.EPROJEKT = TIDREGITAB.AONR 
   ekoforst.EORG = PERSONALTAB.OMRADE  
   ekoforst.EGEO = aoomrade            
   ekoforst.EVERDATUM = typdatum
   ekoforst.ELONTILLAGG = trakod
   ekoforst.ELONTILLANTAL = ekoforst.ELONTILLANTAL + traantal  
   ekoforst.ELONBELOPP = ekoforst.ELONBELOPP + trabelopp. 
END PROCEDURE.	              
PROCEDURE over_UI:
   multi = 0.
   FIND FIRST OVERKOD WHERE OVERKOD.KOD = kodanst AND
   OVERKOD.OVERTIDTILL = ovkod 
   USE-INDEX OVER NO-LOCK NO-ERROR.
   IF AVAILABLE OVERKOD THEN DO:
      multi = OVERKOD.MULTIP.      
   END.      
   typover = "OVE".
   ovbelopp = (TIDREGITAB.PRIS + (TIDREGITAB.PRIS * multi)) * ovantal.
   IF TIDREGITAB.PRIS = 0 AND TIDREGITAB.TIDLOG = FALSE THEN DO:
      FIND FIRST TIMKOSTNADSTAB 
      WHERE TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      TIMKOSTNADSTAB.PRISTYP = 'TOT.PRIS.' USE-INDEX PRISPERS NO-LOCK NO-ERROR.   
      ovbelopp = (TIMKOSTNADSTAB.PRISA + (TIMKOSTNADSTAB.PRISA * multi)) * ovantal.
   END.   
   IF ekoforst.ELONTILLAGG = ovkod OR ekoforst.ELONTILLAGG = "" THEN DO:
      persrec = persrec.
   END.                                   
   ELSE DO:
      FIND FIRST ekoforst WHERE
      ekoforst.ENY = FALSE AND
      ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND
      ekoforst.EORG = PERSONALTAB.OMRADE AND 
      ekoforst.EGEO = aoomrade AND 
      ekoforst.EVERDATUM = typdatum AND
      ekoforst.EPROJEKT = TIDREGITAB.AONR AND
      ekoforst.ELONTILLAG = ovkod
      USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
      IF NOT AVAILABLE ekoforst THEN DO:
         CREATE ekoforst.
      END.
   END.   
   ASSIGN 
   ekoforst.ENY = FALSE
   ekoforst.ERESULTENH = typover
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD 
   ekoforst.EPROJEKT = TIDREGITAB.AONR 
   ekoforst.EORG = PERSONALTAB.OMRADE  
   ekoforst.EGEO = aoomrade            
   ekoforst.EVERDATUM = typdatum
   ekoforst.ELONTILLAGG = ovkod
   ekoforst.ELONTILLANTAL = ekoforst.ELONTILLANTAL + ovantal  
   ekoforst.ELONBELOPP = ekoforst.ELONBELOPP + ovbelopp. 	                  
END PROCEDURE.
*/          
 