/*
               KSV Editor
    Copyright: (C) 2000-2001 Serguey Klimoff (bulkl0DD)
     Filename: C:\DELAD\PRO9S\WX\XKBORT.P
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2009.11.05 15:09 ELPAO   
     Modified: 2009.11.05 15:57 ELPAO    
     Modified: 
*/
DEFINE TEMP-TABLE extrakopptemp NO-UNDO
   FIELD KOPPLACHAR1 AS CHARACTER 
   FIELD KOPPLACHAR2 AS CHARACTER
   FIELD KOPPLAINT1  AS INTEGER
   FIELD KOPPLAINT2  AS INTEGER
   FIELD PROGRAM     AS CHARACTER
   FIELD SOKCHAR  AS CHARACTER EXTENT 10
   FIELD SOKDATE  AS DATE EXTENT 10
   FIELD SOKDEC   AS DECIMAL EXTENT 10
   FIELD SOKINT   AS INTEGER EXTENT 10
   FIELD SOKLOG   AS LOGICAL EXTENT 10
   INDEX PROGRAM IS PRIMARY PROGRAM
   INDEX KOPC1 KOPPLACHAR1
   INDEX KOPC2 KOPPLACHAR2
   INDEX KOPIN1 KOPPLAINT1
   INDEX KOPIN2 KOPPLAINT2.
DEFINE TEMP-TABLE inextrakopptemp NO-UNDO LIKE extrakopptemp.

/*EXTRADATA.I*/
DEFINE TEMP-TABLE extradatatemp NO-UNDO
   FIELD HUVUDCH  AS CHARACTER 
   FIELD HUVUDINT AS INTEGER
   FIELD PROGRAM  AS CHARACTER
   FIELD SOKCHAR  AS CHARACTER EXTENT 10
   FIELD SOKDATE  AS DATE EXTENT 10
   FIELD SOKDEC   AS DECIMAL EXTENT 10
   FIELD SOKINT   AS INTEGER EXTENT 10
   FIELD SOKLOG   AS LOGICAL EXTENT 10
   INDEX PROGRAM IS PRIMARY PROGRAM
   INDEX HCH PROGRAM HUVUDCH
   INDEX HIN PROGRAM HUVUDINT.
   
DEFINE TEMP-TABLE inextradatatemp NO-UNDO LIKE extradatatemp.

DEFINE BUFFER KB FOR KALKSPEC.
DEFINE BUFFER FB FOR FASTSPEC.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
DEFINE VARIABLE fbestapph AS HANDLE NO-UNDO.                      /*EXTRATABHMT*/
DEFINE VARIABLE berapph AS HANDLE NO-UNDO.
FOR EACH OMRADETAB WHERE OMRADETAB.ELVOMRKOD = 1:
   FOR EACH KB WHERE KB.OMRADE = OMRADETAB.OMRADE NO-LOCK: 
      MESSAGE KB.KALKNR OMRADETAB.OMRADE.
      RUN tabortkalkyl_UI (INPUT KB.KALKNR).
   END.
   FOR EACH FB WHERE FB.OMRADE = OMRADETAB.OMRADE NO-LOCK: 
      IF FB.KATAR >= 2010 THEN.
      ELSE DO:
         MESSAGE FB.KALKNR OMRADETAB.OMRADE.
         RUN tabortkalkyl_UI (INPUT FB.KALKNR).
      END.
      
   END.
   ASSIGN
   OMRADETAB.KALKYLINT1 = 1
   OMRADETAB.KALKYLINT2 = 1 
   OMRADETAB.KALKYLSIST = 1.

END.


PROCEDURE tabortkalkyl_UI:
   DEFINE INPUT PARAMETER knr AS INTEGER NO-UNDO.
   DEFINE VARIABLE kalkomr AS CHARACTER NO-UNDO.
   FIND FIRST KALKSPEC WHERE KALKSPEC.KALKNR = knr NO-LOCK NO-ERROR.
   IF AVAILABLE KALKSPEC THEN DO:
      kalkomr = KALKSPEC.OMRADE.
      DO TRANSACTION:
         FIND FIRST KALKAONR WHERE KALKAONR.KALKNR = KALKSPEC.KALKNR EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE KALKAONR THEN DELETE KALKAONR.    
      END.
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      RUN EXTRADATAHMT.P PERSISTENT SET edataapph.                  
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "FRIKALK2"                   
      inextradatatemp.HUVUDCH  = ?            
      inextradatatemp.HUVUDINT = KALKSPEC.KALKNR.
      RUN exbort_UI IN edataapph (INPUT TABLE inextradatatemp).
      IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.      
      edataapph = ?.
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      OPEN QUERY kkq FOR EACH KALKYL WHERE KALKYL.RECKALK = KALKSPEC.KALKNR USE-INDEX RECKALK NO-LOCK.
      GET FIRST kkq NO-LOCK.
      DO WHILE AVAILABLE KALKYL:
         DO TRANSACTION:
            GET CURRENT kkq EXCLUSIVE-LOCK.
            DELETE KALKYL.
         END.
         GET NEXT kkq NO-LOCK.
      END.
      CLOSE QUERY kkq.
      FOR EACH KALKBEF WHERE KALKBEF.KALKNR = KALKSPEC.KALKNR EXCLUSIVE-LOCK:
         DELETE KALKBEF.
      END.
      OPEN QUERY kpq FOR EACH KALKPASLAG WHERE KALKPASLAG.OMRADE = KALKSPEC.OMRADE AND
      KALKPASLAG.KALKNR = KALKSPEC.KALKNR USE-INDEX OMRKALK NO-LOCK.
      GET FIRST kpq NO-LOCK.
      DO WHILE AVAILABLE KALKPASLAG:
         DO TRANSACTION:
            GET CURRENT kpq EXCLUSIVE-LOCK.
            DELETE KALKPASLAG.
         END.
         GET NEXT kpq NO-LOCK.
      END.
      CLOSE QUERY kpq.
      FIND FIRST MTRL WHERE MTRL.KALKNR = KALKSPEC.KALKNR USE-INDEX KALK NO-LOCK NO-ERROR.
      IF AVAILABLE MTRL THEN DO:
         OPEN QUERY mtrlq FOR EACH MTRL WHERE MTRL.KALKNR = KALKSPEC.KALKNR USE-INDEX KALK NO-LOCK.
         GET FIRST mtrlq NO-LOCK.
         DO WHILE AVAILABLE MTRL:
            DO TRANSACTION:
               GET CURRENT mtrlq EXCLUSIVE-LOCK.
               DELETE MTRL.
            END.
            GET NEXT mtrlq NO-LOCK.
         END.
         CLOSE QUERY mtrlq.
      END.
      DO TRANSACTION:
         FIND CURRENT KALKSPEC EXCLUSIVE-LOCK NO-ERROR.
         DELETE KALKSPEC.
      END.
   END.
   ELSE DO: 

      RUN DELFKALK.P (INPUT knr).
      DO TRANSACTION:
         FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = knr EXCLUSIVE-LOCK NO-ERROR.
         IF AVAILABLE FASTSPEC THEN DO:
            kalkomr = FASTSPEC.OMRADE.
            DELETE FASTSPEC.
         END.
      END.
   END.
   /*BORT TAG AV KOPPLAD BEREDNING*/
   RUN EXTRATABHMT.P PERSISTENT SET fbestapph.
   RUN MENYBERAPP.P PERSISTENT SET berapph. 
   EMPTY TEMP-TABLE inextrakopptemp NO-ERROR. 
   EMPTY TEMP-TABLE extrakopptemp NO-ERROR. 
   
   IF VALID-HANDLE(berapph) THEN DELETE PROCEDURE berapph NO-ERROR.
   IF VALID-HANDLE(fbestapph) THEN DELETE PROCEDURE fbestapph NO-ERROR.
   EMPTY TEMP-TABLE inextrakopptemp NO-ERROR. 
   EMPTY TEMP-TABLE extrakopptemp NO-ERROR. 
END PROCEDURE.
