/*EXTRKODBAPP.P*/
{STARTFORAPP.I}
/*{LOP.I}*/
{LOPTEMP.I}
{PTEMP.I}                            

{PTEMPLOPTEMP.I}    
{EBRPRISTEMP.I}
{KALKBEFBTEMP.I}  
{KALKTEMP2.I}
DEFINE BUFFER befbuff FOR KALKBEF.
DEFINE BUFFER kalkbefbuff FOR KALKBEFB.

PROCEDURE hmtegnr_UI :
   DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
   DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.
   DEFINE OUTPUT PARAMETER nyttnr AS INTEGER.   
   nyttnr = 0.
   FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade AND KALKBEFB.ARBKOD = "EGEN"  NO-LOCK:
      IF nyttnr < KALKBEFB.LOPNR THEN nyttnr = KALKBEFB.LOPNR.
   END.
   nyttnr = nyttnr + 1.
   IF nyttnr = 1 THEN DO:
      IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" THEN nyttnr = 11.
   END.
END PROCEDURE.


PROCEDURE hmtkalkb_UI :
   DEFINE INPUT PARAMETER valkalkar AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
   DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.   
   DEFINE OUTPUT PARAMETER TABLE FOR kalkbefbtemp.
   
   EMPTY TEMP-TABLE kalkbefbtemp NO-ERROR. 
   FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade  NO-LOCK:
      CREATE kalkbefbtemp.
      BUFFER-COPY KALKBEFB TO kalkbefbtemp.
      /*ASSIGN kalkbefbtemp.be = KALKBEFB.BERNR.*/
   END.
   /*KALKÅR*/
   FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND KALKBEF.KATAR = valkalkar NO-LOCK NO-ERROR.
   IF AVAILABLE KALKBEF THEN DO:
      CREATE kalkbefbtemp.
      BUFFER-COPY KALKBEF TO kalkbefbtemp.
      kalkbefbtemp.bernr = 0.
   END.

END PROCEDURE.

PROCEDURE btnokegenkodsid_UI :
   DEFINE INPUT PARAMETER andra AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
   DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR ekalk_temp.
   DEFINE INPUT PARAMETER TABLE FOR extrakalkbefbtemp.

   FIND FIRST ekalk_temp NO-LOCK NO-ERROR.
   FIND FIRST extrakalkbefbtemp NO-LOCK NO-ERROR.
   
   IF AVAILABLE extrakalkbefbtemp THEN DO:
      FIND FIRST KALKBEFB WHERE KALKBEFB.BERNR = extrakalkbefbtemp.BERNR AND KALKBEFB.OMRADE = extrakalkbefbtemp.OMRADE AND 
      KALKBEFB.ARBKOD = extrakalkbefbtemp.ARBKOD AND KALKBEFB.LOPNR = extrakalkbefbtemp.LOPNR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE KALKBEFB THEN CREATE KALKBEFB.
      BUFFER-COPY extrakalkbefbtemp TO KALKBEFB.
      IF AVAILABLE ekalk_temp THEN DO:
         ASSIGN
         KALKBEFB.NUM = 0
         KALKBEFB.SID = ekalk_temp.SID.
      END.  
   END.

   
   IF AVAILABLE BERKALK THEN RELEASE BERKALK.
   IF AVAILABLE KALKBEFB THEN RELEASE KALKBEFB.
END PROCEDURE.
PROCEDURE btnokegenkod_UI:
   DEFINE INPUT PARAMETER andra AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
   DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR ekalk_temp.
   DEFINE INPUT PARAMETER TABLE FOR extrakalkbefbtemp.

   FIND FIRST ekalk_temp NO-LOCK NO-ERROR.
   FIND FIRST extrakalkbefbtemp NO-LOCK NO-ERROR.
   IF AVAILABLE ekalk_temp THEN DO:

   END. 
   IF AVAILABLE extrakalkbefbtemp THEN DO:
      FIND FIRST KALKBEFB WHERE KALKBEFB.BERNR = extrakalkbefbtemp.BERNR AND KALKBEFB.OMRADE = extrakalkbefbtemp.OMRADE AND 
      KALKBEFB.ARBKOD = extrakalkbefbtemp.ARBKOD AND KALKBEFB.LOPNR = extrakalkbefbtemp.LOPNR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE KALKBEFB THEN CREATE KALKBEFB.
      BUFFER-COPY extrakalkbefbtemp TO KALKBEFB.
      KALKBEFB.SID = 0.
   END.

   
   IF AVAILABLE BERKALK THEN RELEASE BERKALK.
   IF AVAILABLE KALKBEFB THEN RELEASE KALKBEFB.
END PROCEDURE.


PROCEDURE copyegenkalkb_UI :
   DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
   DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.  
   DEFINE INPUT PARAMETER numfran AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER numtill AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER lopfran AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER loptill AS INTEGER NO-UNDO.
  
   FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade AND KALKBEFB.ARBKOD = "EGEN" AND
   KALKBEFB.LOPNR =  lopfran
   NO-LOCK:
      CREATE kalkbefbuff.
      BUFFER-COPY KALKBEFB TO kalkbefbuff.
      ASSIGN
      kalkbefbuff.NUM = numtill
      kalkbefbuff.LOPNR = loptill.
      
   END.
   RELEASE kalkbefbuff NO-ERROR.
END PROCEDURE.

