&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12 GUI
&ANALYZE-RESUME
/* Connected Databases 
          rt9              PROGRESS
*/
&Scoped-define WINDOW-NAME WINDOW-1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS WINDOW-1 
/*------------------------------------------------------------------------

  File: 

  Description: 

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Author: 

  Created: 95/05/02 -  1:43 pm

------------------------------------------------------------------------*/
/*          This .W file was created with the Progress UIB.             */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */

DEFINE NEW SHARED VARIABLE brec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE borec AS RECID NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE gamanst AS CHARACTER NO-UNDO.
DEFINE BUFFER A FOR OVERKOD.
DEFINE BUFFER B FOR LONTILL.
DEFINE BUFFER C FOR OVERTIDTAB.
DEFINE BUFFER D FOR RESTIDTAB.
DEFINE BUFFER E FOR ERSATTNING.
DEFINE BUFFER F FOR ORDARB.
DEFINE BUFFER G FOR OBTAB.
DEFINE BUFFER H FOR OBAVTAB.
DEFINE BUFFER I FOR OVERAVTAB.
DEFINE BUFFER J FOR UTRTAB.
DEFINE BUFFER K FOR UTRYCKNING.
DEFINE BUFFER L FOR ANSTFORMTAB.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE WINDOW
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME FRAME-A
&Scoped-define BROWSE-NAME BRW_ANST

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES ANSTFORMTAB

/* Definitions for BROWSE BRW_ANST                                      */
&Scoped-define FIELDS-IN-QUERY-BRW_ANST ANSTFORMTAB.KOD ~
ANSTFORMTAB.ANSTALLNING ANSTFORMTAB.MEDVIDUPPD 
&Scoped-define ENABLED-FIELDS-IN-QUERY-BRW_ANST 
&Scoped-define OPEN-QUERY-BRW_ANST OPEN QUERY BRW_ANST FOR EACH ANSTFORMTAB NO-LOCK ~
    BY ANSTFORMTAB.KOD INDEXED-REPOSITION.
&Scoped-define TABLES-IN-QUERY-BRW_ANST ANSTFORMTAB
&Scoped-define FIRST-TABLE-IN-QUERY-BRW_ANST ANSTFORMTAB


/* Definitions for FRAME FRAME-A                                        */
&Scoped-define OPEN-BROWSERS-IN-QUERY-FRAME-A ~
    ~{&OPEN-QUERY-BRW_ANST}

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-OBJECTS BRW_ANST TOG_ERSATTNING TOG_LONTILL ~
TOG_OBAVTAB TOG_OBTAB TOG_ORDARB TOG_OVERAVTAB TOG_OVERKOD BTN_BORT ~
FILL-IN-BORTAV TOG_OVERTIDTAB FILL-IN-NAMN TOG_RESTIDTAB TOG_UTRTAB ~
FILL-IN-NYTTAV FILL-IN-FRAN TOG_UTRYCKNING BTN_KOP TOG_BYTPERS ~
FILL-IN-NYTTAVBYT FILL-IN-FRANBYT BTN_AVSL BTN_BYT FILL-IN-FRANBYTN ~
BTN_BYTNAMN FILL-IN-NYTTANSTALL RECT-48 RECT-49 RECT-50 RECT-51 
&Scoped-Define DISPLAYED-OBJECTS TOG_ERSATTNING TOG_LONTILL TOG_OBAVTAB ~
TOG_OBTAB TOG_ORDARB TOG_OVERAVTAB TOG_OVERKOD FILL-IN-BORTAV ~
TOG_OVERTIDTAB FILL-IN-NAMN TOG_RESTIDTAB TOG_UTRTAB FILL-IN-NYTTAV ~
FILL-IN-FRAN TOG_UTRYCKNING TOG_BYTPERS FILL-IN-NYTTAVBYT FILL-IN-FRANBYT ~
FILL-IN-FRANBYTN FILL-IN-NYTTANSTALL 

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR WINDOW-1 AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */
DEFINE BUTTON BTN_AVSL AUTO-END-KEY 
     LABEL "AVSLUTA":L 
     SIZE 10.5 BY 1.41.

DEFINE BUTTON BTN_BORT 
     LABEL "Ta bort":L 
     SIZE 10 BY 1.18.

DEFINE BUTTON BTN_BYT 
     LABEL "Byt KOD":L 
     SIZE 11 BY 1.18.

DEFINE BUTTON BTN_BYTNAMN 
     LABEL "Byt namn":L 
     SIZE 11 BY 1.18.

DEFINE BUTTON BTN_KOP 
     LABEL "Kopiera":L 
     SIZE 11 BY 1.18.

DEFINE VARIABLE FILL-IN-BORTAV AS CHARACTER FORMAT "X(2)":U 
     LABEL "Ta bort avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-FRAN AS CHARACTER FORMAT "X(2)":U 
     LABEL "Från avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-FRANBYT AS CHARACTER FORMAT "X(2)":U 
     LABEL "Från avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-FRANBYTN AS CHARACTER FORMAT "X(2)":U 
     LABEL "Från avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-NAMN AS CHARACTER FORMAT "X(256)":U 
     LABEL "Namn nytt avtal" 
     VIEW-AS FILL-IN 
     SIZE 39.88 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-NYTTANSTALL AS CHARACTER FORMAT "X(40)":U 
     LABEL "Nytt namn amställn" 
     VIEW-AS FILL-IN 
     SIZE 49 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-NYTTAV AS CHARACTER FORMAT "X(2)":U 
     LABEL "Nytt avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE VARIABLE FILL-IN-NYTTAVBYT AS CHARACTER FORMAT "X(2)":U 
     LABEL "Nytt avtal" 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1
     BGCOLOR 8  NO-UNDO.

DEFINE RECTANGLE RECT-48
     EDGE-PIXELS 4 GRAPHIC-EDGE  NO-FILL 
     SIZE 59.38 BY 4.95.

DEFINE RECTANGLE RECT-49
     EDGE-PIXELS 4 GRAPHIC-EDGE  NO-FILL 
     SIZE 49.25 BY 1.91.

DEFINE RECTANGLE RECT-50
     EDGE-PIXELS 4 GRAPHIC-EDGE  NO-FILL 
     SIZE 49.25 BY 3.41.

DEFINE RECTANGLE RECT-51
     EDGE-PIXELS 4 GRAPHIC-EDGE  NO-FILL 
     SIZE 82 BY 4.09.

DEFINE VARIABLE TOG_BYTPERS AS LOGICAL INITIAL no 
     LABEL "Byt på personaltab" 
     VIEW-AS TOGGLE-BOX
     SIZE 20.88 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_ERSATTNING AS LOGICAL INITIAL no 
     LABEL "Ersattning" 
     VIEW-AS TOGGLE-BOX
     SIZE 12.63 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_LONTILL AS LOGICAL INITIAL no 
     LABEL "Lontill" 
     VIEW-AS TOGGLE-BOX
     SIZE 11.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_OBAVTAB AS LOGICAL INITIAL no 
     LABEL "Obavtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 11.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_OBTAB AS LOGICAL INITIAL no 
     LABEL "Obtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 11.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_ORDARB AS LOGICAL INITIAL no 
     LABEL "Ordarb" 
     VIEW-AS TOGGLE-BOX
     SIZE 11.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_OVERAVTAB AS LOGICAL INITIAL no 
     LABEL "Overavtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 16.25 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_OVERKOD AS LOGICAL INITIAL no 
     LABEL "Overkod" 
     VIEW-AS TOGGLE-BOX
     SIZE 11.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_OVERTIDTAB AS LOGICAL INITIAL no 
     LABEL "Overtidtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 15.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_RESTIDTAB AS LOGICAL INITIAL no 
     LABEL "Restidtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 15.25 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_UTRTAB AS LOGICAL INITIAL no 
     LABEL "Utrtab" 
     VIEW-AS TOGGLE-BOX
     SIZE 12.13 BY .86 NO-UNDO.

DEFINE VARIABLE TOG_UTRYCKNING AS LOGICAL INITIAL no 
     LABEL "Utryckning" 
     VIEW-AS TOGGLE-BOX
     SIZE 16.5 BY .86 NO-UNDO.

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY BRW_ANST FOR 
      ANSTFORMTAB SCROLLING.
&ANALYZE-RESUME

/* Browse definitions                                                   */
DEFINE BROWSE BRW_ANST
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS BRW_ANST WINDOW-1 _STRUCTURED
  QUERY BRW_ANST NO-LOCK DISPLAY
      ANSTFORMTAB.KOD FORMAT "x(2)":U
      ANSTFORMTAB.ANSTALLNING FORMAT "x(40)":U
      ANSTFORMTAB.MEDVIDUPPD FORMAT "yes/no":U
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-ROW-MARKERS NO-COLUMN-SCROLLING SIZE 59.5 BY 8.18.


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME FRAME-A
     BRW_ANST AT ROW 1.27 COL 3.5
     TOG_ERSATTNING AT ROW 2.36 COL 65
     TOG_LONTILL AT ROW 3.64 COL 65
     TOG_OBAVTAB AT ROW 4.77 COL 65
     TOG_OBTAB AT ROW 5.91 COL 65
     TOG_ORDARB AT ROW 7.18 COL 65
     TOG_OVERAVTAB AT ROW 8.41 COL 65
     TOG_OVERKOD AT ROW 9.77 COL 65
     BTN_BORT AT ROW 9.86 COL 34.63
     FILL-IN-BORTAV AT ROW 10 COL 19 COLON-ALIGNED
     TOG_OVERTIDTAB AT ROW 11.05 COL 65
     FILL-IN-NAMN AT ROW 11.95 COL 19 COLON-ALIGNED
     TOG_RESTIDTAB AT ROW 12.18 COL 65
     TOG_UTRTAB AT ROW 13.5 COL 65
     FILL-IN-NYTTAV AT ROW 13.64 COL 38.88 COLON-ALIGNED
     FILL-IN-FRAN AT ROW 13.73 COL 18.88 COLON-ALIGNED
     TOG_UTRYCKNING AT ROW 14.82 COL 65
     BTN_KOP AT ROW 15 COL 22.88
     TOG_BYTPERS AT ROW 16.18 COL 63.88
     FILL-IN-NYTTAVBYT AT ROW 17.36 COL 39 COLON-ALIGNED
     FILL-IN-FRANBYT AT ROW 17.45 COL 19 COLON-ALIGNED
     BTN_AVSL AT ROW 18.45 COL 72
     BTN_BYT AT ROW 18.77 COL 21.88
     FILL-IN-FRANBYTN AT ROW 21.45 COL 22.5 COLON-ALIGNED
     BTN_BYTNAMN AT ROW 21.45 COL 61.5
     FILL-IN-NYTTANSTALL AT ROW 23.09 COL 22 COLON-ALIGNED
     RECT-48 AT ROW 11.64 COL 2.5
     RECT-49 AT ROW 9.45 COL 2.88
     RECT-50 AT ROW 16.82 COL 2.5
     RECT-51 AT ROW 20.64 COL 3
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
         SIDE-LABELS NO-UNDERLINE THREE-D 
         AT COL 1 ROW 1
         SIZE 85.13 BY 24.77.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: WINDOW
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW WINDOW-1 ASSIGN
         HIDDEN             = YES
         TITLE              = "Anstallningform"
         COLUMN             = 13
         ROW                = 2.41
         HEIGHT             = 24.95
         WIDTH              = 85.25
         MAX-HEIGHT         = 24.95
         MAX-WIDTH          = 85.25
         VIRTUAL-HEIGHT     = 24.95
         VIRTUAL-WIDTH      = 85.25
         RESIZE             = yes
         SCROLL-BARS        = yes
         STATUS-AREA        = no
         BGCOLOR            = ?
         FGCOLOR            = ?
         THREE-D            = yes
         MESSAGE-AREA       = no
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME



/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW WINDOW-1
  VISIBLE,,RUN-PERSISTENT                                               */
/* SETTINGS FOR FRAME FRAME-A
                                                                        */
/* BROWSE-TAB BRW_ANST 1 FRAME-A */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(WINDOW-1)
THEN WINDOW-1:HIDDEN = no.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE BRW_ANST
/* Query rebuild information for BROWSE BRW_ANST
     _TblList          = "RT9.ANSTFORMTAB"
     _Options          = "NO-LOCK INDEXED-REPOSITION"
     _OrdList          = "RT9.ANSTFORMTAB.KOD|yes"
     _FldNameList[1]   = RT9.ANSTFORMTAB.KOD
     _FldNameList[2]   > RT9.ANSTFORMTAB.ANSTALLNING
"ANSTALLNING" ? "x(40)" "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[3]   = RT9.ANSTFORMTAB.MEDVIDUPPD
     _Query            is OPENED
*/  /* BROWSE BRW_ANST */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define BROWSE-NAME BRW_ANST
&Scoped-define SELF-NAME BRW_ANST
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BRW_ANST WINDOW-1
ON VALUE-CHANGED OF BRW_ANST IN FRAME FRAME-A
DO:
   brec = RECID(ANSTFORMTAB).
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_AVSL
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_AVSL WINDOW-1
ON CHOOSE OF BTN_AVSL IN FRAME FRAME-A /* AVSLUTA */
DO:
  RETURN.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_BORT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_BORT WINDOW-1
ON CHOOSE OF BTN_BORT IN FRAME FRAME-A /* Ta bort */
DO:
   FILL-IN-BORTAV = INPUT FILL-IN-BORTAV.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-BORTAV NO-LOCK NO-ERROR.
   FIND FIRST PERSONALTAB WHERE PERSONALTAB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING
   NO-LOCK NO-ERROR.
   IF AVAILABLE PERSONALTAB THEN DO:
         MESSAGE "AVTALET FINNS PÅ" PERSONALTAB.PERSONALKOD VIEW-AS ALERT-BOX. 
        RETURN.
  END.   


 RUN bort_UI. 
 OPEN QUERY BRW_ANST FOR EACH ANSTFORMTAB NO-LOCK BY ANSTFORMTAB.KOD.
 DISPLAY BRW_ANST WITH FRAME {&FRAME-NAME}.

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_BYT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_BYT WINDOW-1
ON CHOOSE OF BTN_BYT IN FRAME FRAME-A /* Byt KOD */
DO:
  ASSIGN FILL-IN-FRANBYT = INPUT FILL-IN-FRANBYT
  FILL-IN-NYTTAVBYT = INPUT FILL-IN-NYTTAVBYT.
 
  IF FILL-IN-FRANBYT = "" THEN DO:
     MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
     APPLY "ENTRY" TO FILL-IN-FRAN IN FRAME {&FRAME-NAME}.
     APPLY "ENDKEY" TO BTN_BYT IN FRAME {&FRAME-NAME}.
  END.   
   IF FILL-IN-NYTTAVBYT = "" THEN DO:
     MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
     APPLY "ENTRY" TO FILL-IN-NYTTAV IN FRAME {&FRAME-NAME}.
     APPLY "ENDKEY" TO BTN_BYT IN FRAME {&FRAME-NAME}.
  END.

  ASSIGN
  TOG_ERSATTNING = INPUT TOG_ERSATTNING 
  TOG_LONTILL = INPUT TOG_LONTILL
  TOG_OBAVTAB = INPUT TOG_OBAVTAB
  TOG_OBTAB = INPUT TOG_OBTAB
  TOG_ORDARB = INPUT TOG_ORDARB
  TOG_OVERAVTAB = INPUT TOG_OVERAVTAB
  TOG_OVERKOD = INPUT TOG_OVERKOD
  TOG_OVERTIDTAB = INPUT TOG_OVERTIDTAB
  TOG_RESTIDTAB = INPUT TOG_RESTIDTAB
  TOG_UTRTAB = INPUT TOG_UTRTAB
  TOG_UTRYCKNING = INPUT TOG_UTRYCKNING
  TOG_BYTPERS = INPUT TOG_BYTPERS.
  
  RUN byt_UI.
  OPEN QUERY BRW_ANST FOR EACH ANSTFORMTAB NO-LOCK BY ANSTFORMTAB.KOD.
  DISPLAY BRW_ANST WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_BYTNAMN
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_BYTNAMN WINDOW-1
ON CHOOSE OF BTN_BYTNAMN IN FRAME FRAME-A /* Byt namn */
DO:
   ASSIGN FILL-IN-FRANBYTN = INPUT FILL-IN-FRANBYTN
   FILL-IN-NYTTANSTALL = INPUT FILL-IN-NYTTANSTALL.
 
   IF FILL-IN-FRANBYTN = "" THEN DO:
      MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
      APPLY "ENTRY" TO FILL-IN-FRANBYTN IN FRAME {&FRAME-NAME}.
      APPLY "ENDKEY" TO BTN_BYTNAMN IN FRAME {&FRAME-NAME}.
   END.   
   IF FILL-IN-NYTTANSTALL = "" THEN DO:
      MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
      APPLY "ENTRY" TO FILL-IN-NYTTANSTALL IN FRAME {&FRAME-NAME}.
      APPLY "ENDKEY" TO BTN_BYTNAMN IN FRAME {&FRAME-NAME}.
   END. 
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-FRANBYTN EXCLUSIVE-LOCK NO-ERROR. 
   FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING EXCLUSIVE-LOCK NO-ERROR.
   gamanst = ORDARB.ANSTALLNING.
   ASSIGN          
   ANSTFORMTAB.ANSTALLNING = FILL-IN-NYTTANSTALL
   ORDARB.ANSTALLNING = FILL-IN-NYTTANSTALL.
      
   OPEN QUERY persq FOR EACH PERSONALTAB WHERE PERSONALTAB.ANSTALLNING = gamanst
   NO-LOCK.
   GET FIRST persq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE PERSONALTAB:
      ASSIGN PERSONALTAB.ANSTALLNING = FILL-IN-NYTTANSTALL.
      GET NEXT persq EXCLUSIVE-LOCK.
   END. 
   OPEN QUERY BRW_ANST FOR EACH ANSTFORMTAB NO-LOCK BY ANSTFORMTAB.KOD.
   DISPLAY BRW_ANST WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_KOP
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_KOP WINDOW-1
ON CHOOSE OF BTN_KOP IN FRAME FRAME-A /* Kopiera */
DO:
  ASSIGN FILL-IN-FRAN = INPUT FILL-IN-FRAN
  FILL-IN-NYTTAV = INPUT FILL-IN-NYTTAV
  FILL-IN-NAMN = INPUT FILL-IN-NAMN.
  IF FILL-IN-FRAN = "" THEN DO:
     MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
     APPLY "ENTRY" TO FILL-IN-FRAN IN FRAME {&FRAME-NAME}.
     APPLY "ENDKEY" TO BTN_KOP IN FRAME {&FRAME-NAME}.
  END.   
   IF FILL-IN-NYTTAV = "" THEN DO:
     MESSAGE "AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
     APPLY "ENTRY" TO FILL-IN-NYTTAV IN FRAME {&FRAME-NAME}.
     APPLY "ENDKEY" TO BTN_KOP IN FRAME {&FRAME-NAME}.
  END.
  IF FILL-IN-NAMN = "" THEN DO:
     MESSAGE "NAMN PÅ AVTAL KAN INTE VARA BLANK" VIEW-AS ALERT-BOX. 
     APPLY "ENTRY" TO FILL-IN-NAMN IN FRAME {&FRAME-NAME}.
     APPLY "ENDKEY" TO BTN_KOP IN FRAME {&FRAME-NAME}.
  END.

  ASSIGN
  TOG_ERSATTNING = INPUT TOG_ERSATTNING 
  TOG_LONTILL = INPUT TOG_LONTILL
  TOG_OBAVTAB = INPUT TOG_OBAVTAB
  TOG_OBTAB = INPUT TOG_OBTAB
  TOG_ORDARB = INPUT TOG_ORDARB
  TOG_OVERAVTAB = INPUT TOG_OVERAVTAB
  TOG_OVERKOD = INPUT TOG_OVERKOD
  TOG_OVERTIDTAB = INPUT TOG_OVERTIDTAB
  TOG_RESTIDTAB = INPUT TOG_RESTIDTAB
  TOG_UTRTAB = INPUT TOG_UTRTAB
  TOG_UTRYCKNING = INPUT TOG_UTRYCKNING
  TOG_BYTPERS = INPUT TOG_BYTPERS.
  
  RUN kopiera_UI.
  OPEN QUERY BRW_ANST FOR EACH ANSTFORMTAB NO-LOCK BY ANSTFORMTAB.KOD.
  DISPLAY BRW_ANST WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK WINDOW-1 


/* ***************************  Main Block  *************************** */

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames.        */
ASSIGN CURRENT-WINDOW                = {&WINDOW-NAME} 
       THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to  */
/* terminate it.                                                        */
ON CLOSE OF THIS-PROCEDURE 
   RUN disable_UI.
   

/* These events will close the window and terminate the procedure.      */
/* (NOTE: this will override any user-defined triggers previously       */
/*  defined on the window.)                                             */
ON WINDOW-CLOSE OF {&WINDOW-NAME} DO:
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.
ON ENDKEY, END-ERROR OF {&WINDOW-NAME} ANYWHERE DO:
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.

/* Best default for GUI applications is...                              */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:
  RUN enable_UI.
  APPLY "HOME" TO {&BROWSE-NAME}.
  status-ok = {&BROWSE-NAME}:SELECT-FOCUSED-ROW().
  brec = RECID(ANSTFORMTAB).
  IF NOT THIS-PROCEDURE:PERSISTENT THEN
    WAIT-FOR CLOSE OF THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE andra WINDOW-1 
PROCEDURE andra :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
  
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE bort_UI WINDOW-1 
PROCEDURE bort_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
  MESSAGE "VILL DU VERKLIGEN TA BORT DETTA AVTAL?"
  VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO TITLE FILL-IN-BORTAV
  UPDATE answer AS LOGICAL.
  IF answer THEN DO TRANSACTION:
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-BORTAV NO-LOCK NO-ERROR.
   FOR EACH OVERKOD WHERE OVERKOD.KOD = FILL-IN-BORTAV:
     DELETE OVERKOD. 
   END.
   FOR EACH LONTILL WHERE LONTILL.KOD = FILL-IN-BORTAV:
      DELETE LONTILL.
   END.
   FOR EACH OVERTIDTAB WHERE OVERTIDTAB.KOD = FILL-IN-BORTAV:
      DELETE OVERTIDTAB.
      
   END.
   FOR EACH RESTIDTAB WHERE RESTIDTAB.KOD = FILL-IN-BORTAV:
      DELETE RESTIDTAB.
   END.
   FOR EACH ERSATTNING WHERE ERSATTNING.KOD = FILL-IN-BORTAV:
      DELETE ERSATTNING.
   END.
   FOR EACH OBAVTAB WHERE OBAVTAB.KOD = FILL-IN-BORTAV:
      DELETE OBAVTAB.
   END.
   FOR EACH OBTAB WHERE OBTAB.KOD = FILL-IN-BORTAV:
      DELETE OBTAB.  
   END.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-BORTAV NO-LOCK NO-ERROR.
   FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE ORDARB THEN DELETE ORDARB.  
   FOR EACH OVERAVTAB WHERE OVERAVTAB.KOD = FILL-IN-BORTAV:
      DELETE OVERAVTAB.
   END.
  
   FOR EACH UTRTAB WHERE UTRTAB.KOD = FILL-IN-BORTAV:
      DELETE UTRTAB.
   END.   
   FOR EACH UTRYCKNING WHERE UTRYCKNING.KOD = FILL-IN-BORTAV:
      DELETE UTRYCKNING.
   END.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-BORTAV EXCLUSIVE-LOCK NO-ERROR. 
   IF AVAILABLE ANSTFORMTAB THEN DELETE ANSTFORMTAB.
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE byt_UI WINDOW-1 
PROCEDURE byt_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
IF TOG_OVERKOD = TRUE THEN DO TRANSACTION:
FOR EACH OVERKOD WHERE KOD = FILL-IN-FRANBYT:   
   ASSIGN         
   OVERKOD.KOD = FILL-IN-NYTTAVBYT.
END.
END.
IF TOG_LONTILL = TRUE THEN DO TRANSACTION:
FOR EACH LONTILL WHERE LONTILL.KOD = FILL-IN-FRANBYT:  
   ASSIGN           
   LONTILL.KOD = FILL-IN-NYTTAVBYT.
END.   
END.
IF TOG_OVERTIDTAB = TRUE THEN DO TRANSACTION:
FOR EACH OVERTIDTAB WHERE OVERTIDTAB.KOD = FILL-IN-FRANBYT: 
   ASSIGN
                  
   OVERTIDTAB.KOD = FILL-IN-NYTTAVBYT.  
END.   
END.
IF TOG_RESTIDTAB = TRUE THEN DO TRANSACTION: 
FOR EACH RESTIDTAB WHERE RESTIDTAB.KOD = FILL-IN-FRANBYT: 
   ASSIGN       
   RESTIDTAB.KOD = FILL-IN-NYTTAVBYT.  
END.   
END.
IF TOG_ERSATTNING = TRUE THEN DO TRANSACTION:
FOR EACH ERSATTNING WHERE ERSATTNING.KOD = FILL-IN-FRANBYT:
  
   ASSIGN      
   ERSATTNING.KOD = FILL-IN-NYTTAVBYT.  
END.   
END.
IF TOG_OBAVTAB = TRUE THEN DO TRANSACTION:
FOR EACH OBAVTAB WHERE OBAVTAB.KOD = FILL-IN-FRANBYT:
   ASSIGN      
   OBAVTAB.KOD = FILL-IN-NYTTAVBYT.  
 
END.   
END.
IF TOG_OBTAB = TRUE THEN DO TRANSACTION:
FOR EACH OBTAB WHERE OBTAB.KOD = FILL-IN-FRANBYT: 
   ASSIGN      
   OBTAB.KOD = FILL-IN-NYTTAVBYT.   
END.   
END.
IF TOG_ORDARB = TRUE THEN DO TRANSACTION:
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-FRANBYT EXCLUSIVE-LOCK NO-ERROR. 
   ASSIGN          
   ANSTFORMTAB.KOD = FILL-IN-NYTTAVBYT.  
   
END.
IF TOG_BYTPERS = TRUE THEN DO TRANSACTION:
 /*  FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-FRAN NO-LOCK NO-ERROR.
   OPEN QUERY persq FOR EACH PERSONALTAB WHERE PERSONALTAB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING
   NO-LOCK.
   GET FIRST persq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE PERSONALTAB:
      ASSIGN PERSONALTAB.ANSTALLNING = FILL-IN-NAMN.
      GET NEXT persq EXCLUSIVE-LOCK.
   END.*/   
END.   
IF TOG_OVERAVTAB = TRUE THEN DO TRANSACTION:
FOR EACH OVERAVTAB WHERE OVERAVTAB.KOD = FILL-IN-FRANBYT:
   ASSIGN                     
   OVERAVTAB.KOD = FILL-IN-NYTTAVBYT.  
END.   
END.
   
IF TOG_UTRTAB = TRUE THEN DO TRANSACTION: 
FOR EACH UTRTAB WHERE UTRTAB.KOD = FILL-IN-FRANBYT:  
   ASSIGN      
   UTRTAB.KOD = FILL-IN-NYTTAVBYT. 
END.   
END.
IF TOG_UTRYCKNING = TRUE THEN DO TRANSACTION: 
FOR EACH UTRYCKNING WHERE UTRYCKNING.KOD = FILL-IN-FRANBYT:     
   ASSIGN      
   UTRYCKNING.KOD = FILL-IN-NYTTAVBYT.
END.   
END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI WINDOW-1  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Delete the WINDOW we created */
  IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(WINDOW-1)
  THEN DELETE WIDGET WINDOW-1.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI WINDOW-1  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  DISPLAY TOG_ERSATTNING TOG_LONTILL TOG_OBAVTAB TOG_OBTAB TOG_ORDARB 
          TOG_OVERAVTAB TOG_OVERKOD FILL-IN-BORTAV TOG_OVERTIDTAB FILL-IN-NAMN 
          TOG_RESTIDTAB TOG_UTRTAB FILL-IN-NYTTAV FILL-IN-FRAN TOG_UTRYCKNING 
          TOG_BYTPERS FILL-IN-NYTTAVBYT FILL-IN-FRANBYT FILL-IN-FRANBYTN 
          FILL-IN-NYTTANSTALL 
      WITH FRAME FRAME-A IN WINDOW WINDOW-1.
  ENABLE BRW_ANST TOG_ERSATTNING TOG_LONTILL TOG_OBAVTAB TOG_OBTAB TOG_ORDARB 
         TOG_OVERAVTAB TOG_OVERKOD BTN_BORT FILL-IN-BORTAV TOG_OVERTIDTAB 
         FILL-IN-NAMN TOG_RESTIDTAB TOG_UTRTAB FILL-IN-NYTTAV FILL-IN-FRAN 
         TOG_UTRYCKNING BTN_KOP TOG_BYTPERS FILL-IN-NYTTAVBYT FILL-IN-FRANBYT 
         BTN_AVSL BTN_BYT FILL-IN-FRANBYTN BTN_BYTNAMN FILL-IN-NYTTANSTALL 
         RECT-48 RECT-49 RECT-50 RECT-51 
      WITH FRAME FRAME-A IN WINDOW WINDOW-1.
  {&OPEN-BROWSERS-IN-QUERY-FRAME-A}
  VIEW WINDOW-1.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE kopiera_UI WINDOW-1 
PROCEDURE kopiera_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
IF TOG_OVERKOD = TRUE THEN DO TRANSACTION:
FOR EACH OVERKOD WHERE KOD = FILL-IN-FRAN NO-LOCK:
   CREATE A.
   ASSIGN
         
   A.KOD = FILL-IN-NYTTAV
   A.OVERTIDTILL = OVERKOD.OVERTIDTILL
   A.VILART = OVERKOD.VILART
   A.OVERTIDUTTAG = OVERKOD.OVERTIDUTTAG
   A.ENHET = OVERKOD.ENHET
   A.ERSATTNING = OVERKOD.ERSATTNING
   A.LONKODTEXT = OVERKOD.LONKODTEXT
   A.MULTIP = OVERKOD.MULTIP
   A.VALBAR = OVERKOD.VALBAR
   A.ENKEL = OVERKOD.ENKEL.
END.
END.
IF TOG_LONTILL = TRUE THEN DO TRANSACTION:
FOR EACH LONTILL WHERE LONTILL.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE B.
   ASSIGN 
          
   B.KOD = FILL-IN-NYTTAV
   B.LONTILLAGG = LONTILL.LONTILLAGG
   B.LONKODTEXT = LONTILL.LONKODTEXT
   B.LONTILLANTAL = LONTILL.LONTILLANTAL
   B.VILART = LONTILL.VILART
   B.TYPKOD = LONTILL.TYPKOD
   B.AONROBL = LONTILL.AONROBL
   B.ENHET = LONTILL.ENHET
   B.MULTIP = LONTILL.MULTIP
   B.VALBAR = LONTILL.VALBAR
   B.ERSATTNING = LONTILL.ERSATTNING.
END.   
END.
IF TOG_OVERTIDTAB = TRUE THEN DO TRANSACTION:
FOR EACH OVERTIDTAB WHERE OVERTIDTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE C.
   ASSIGN
                  
   C.KOD = FILL-IN-NYTTAV
   C.OVERTIDTILL = OVERTIDTAB.OVERTIDTILL
   C.DAGNR = OVERTIDTAB.DAGNR
   C.OVERTIDUTTAG = OVERTIDTAB.OVERTIDUTTAG
   C.ARBSLUT = OVERTIDTAB.ARBSLUT
   C.ARBSTART = OVERTIDTAB.ARBSTART
   C.FORKL = OVERTIDTAB.FORKL
   C.START1 = OVERTIDTAB.START1
   C.START2 = OVERTIDTAB.START2
   C.STOPP1 = OVERTIDTAB.STOPP1
   C.STOPP2 = OVERTIDTAB.STOPP2.
END.   
END.
IF TOG_RESTIDTAB = TRUE THEN DO TRANSACTION: 
FOR EACH RESTIDTAB WHERE RESTIDTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE D.
   ASSIGN
       
   D.KOD = FILL-IN-NYTTAV
   D.LONTILLAGG = RESTIDTAB.LONTILLAGG
   D.DAGNR = RESTIDTAB.DAGNR
   D.ENFL = RESTIDTAB.ENFL
   D.START1 = RESTIDTAB.START1
   D.START2 = RESTIDTAB.START2
   D.STOPP1 = RESTIDTAB.STOPP1
   D.STOPP2 = RESTIDTAB.STOPP2.
END.   
END.
IF TOG_ERSATTNING = TRUE THEN DO TRANSACTION:
FOR EACH ERSATTNING WHERE ERSATTNING.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE E.
   ASSIGN 
     
   E.KOD = FILL-IN-NYTTAV
   E.LONTILLAGG = ERSATTNING.LONTILLAGG
   E.LONKODTEXT = ERSATTNING.LONKODTEXT
   E.MOMS = ERSATTNING.MOMS
   E.ENHET = ERSATTNING.ENHET.
 
END.   
END.
IF TOG_OBAVTAB = TRUE THEN DO TRANSACTION:
FOR EACH OBAVTAB WHERE OBAVTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE H.
   ASSIGN 
     
   H.KOD = FILL-IN-NYTTAV
   H.LONTILLAGG = OBAVTAB.LONTILLAGG
   H.DATUM = OBAVTAB.DATUM
   H.SLUT = OBAVTAB.SLUT
   H.START = OBAVTAB.START.
 
END.   
END.
IF TOG_OBTAB = TRUE THEN DO TRANSACTION:
FOR EACH OBTAB WHERE OBTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE G.
   ASSIGN 
     
   G.KOD = FILL-IN-NYTTAV
   G.LONTILLAGG = OBTAB.LONTILLAGG
   G.DAGNR = OBTAB.DAGNR
   G.SLUT = OBTAB.SLUT
   G.START = OBTAB.START.
 
END.   
END.
IF TOG_ORDARB = TRUE THEN DO TRANSACTION:
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-FRAN NO-LOCK NO-ERROR.
   FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING NO-LOCK NO-ERROR.
   CREATE F.
   ASSIGN        
   F.ANSTALLNING = FILL-IN-NAMN
   F.START1 = ORDARB.START1
   F.STOPP1 = ORDARB.STOPP1
   F.MERKOD = ORDARB.MERKOD
   F.MERKOD2 = ORDARB.MERKOD2
   F.OBKOD = ORDARB.OBKOD.
   CREATE L.
   ASSIGN        
   L.ANSTALLNING = FILL-IN-NAMN
   L.KOD = FILL-IN-NYTTAV
   L.MEDVIDUPPD = ANSTFORMTAB.MEDVIDUPPD.

  
   
END.
IF TOG_BYTPERS = TRUE THEN DO TRANSACTION:
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.KOD = FILL-IN-FRAN NO-LOCK NO-ERROR.
   OPEN QUERY persq FOR EACH PERSONALTAB WHERE PERSONALTAB.ANSTALLNING = ANSTFORMTAB.ANSTALLNING
   NO-LOCK.
   GET FIRST persq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE PERSONALTAB:
      ASSIGN PERSONALTAB.ANSTALLNING = FILL-IN-NAMN.
      GET NEXT persq EXCLUSIVE-LOCK.
   END.   
END.   
IF TOG_OVERAVTAB = TRUE THEN DO TRANSACTION:
FOR EACH OVERAVTAB WHERE OVERAVTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE I.
   ASSIGN
                     
   I.KOD = FILL-IN-NYTTAV
   I.OVERTIDTILL = OVERAVTAB.OVERTIDTILL
   I.DATUM = OVERAVTAB.DATUM
   I.OVERTIDUTTAG = OVERAVTAB.OVERTIDUTTAG
   I.DAGEQ = OVERAVTAB.DAGEQ
   I.EQDAG = OVERAVTAB.EQDAG
  
   I.START1 = OVERAVTAB.START1
   I.START2 = OVERAVTAB.START2
   I.STOPP1 = OVERAVTAB.STOPP1
   I.STOPP2 = OVERAVTAB.STOPP2.
END.   
END.
   
IF TOG_UTRTAB = TRUE THEN DO TRANSACTION: 
FOR EACH UTRTAB WHERE UTRTAB.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE J.
   ASSIGN      
   J.KOD = FILL-IN-NYTTAV
   J.LONTILLAGG = UTRTAB.LONTILLAGG
   J.DAGNR = UTRTAB.DAGNR
   J.START1 = UTRTAB.START1
   J.START2 = UTRTAB.START2
   J.STOPP1 = UTRTAB.STOPP1
   J.STOPP2 = UTRTAB.STOPP2.
END.   
END.
IF TOG_UTRYCKNING = TRUE THEN DO TRANSACTION: 
FOR EACH UTRYCKNING WHERE UTRYCKNING.KOD = FILL-IN-FRAN NO-LOCK:
   CREATE K.
                       
   ASSIGN      
   K.KOD = FILL-IN-NYTTAV
   K.AVBE = UTRYCKNING.AVBE
   K.BER2 = UTRYCKNING.BER2
   K.EJBER2 = UTRYCKNING.EJBER2
   K.ENDMALTID = UTRYCKNING.ENDMALTID
   K.EXAKTM = UTRYCKNING.EXAKTM
   K.EXTID = UTRYCKNING.EXTID
   K.EXTRAARBPASS = UTRYCKNING.EXTRAARBPASS
   K.HALV = UTRYCKNING.HALV
   K.INTERNAT = UTRYCKNING.INTERNAT
   K.KLOCKAN = UTRYCKNING.KLOCKAN
   K.LAGOVER = UTRYCKNING.LAGOVER
   K.LUFT = UTRYCKNING.LUFT
   K.NODF = UTRYCKNING.NODF
   K.OB = UTRYCKNING.OB
   K.OVLAPP = UTRYCKNING.OVLAPP
   K.PARA8 = UTRYCKNING.PARA8
   K.RHALV = UTRYCKNING.RHALV
   K.UTRYCKNBER = UTRYCKNING.UTRYCKNBER
   K.UTRYCK1 = UTRYCKNING.UTRYCK1
   K.UTRYCKNEJBER = UTRYCKNING.UTRYCKNEJBER.
END.   
END.
 
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ny WINDOW-1 
PROCEDURE ny :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
  
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

