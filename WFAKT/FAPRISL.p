/*FAPRISL.P*/
DEFINE INPUT PARAMETER ny AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER fannr LIKE FAKTPLAN.FAKTNR NO-UNDO.
DEFINE INPUT PARAMETER bfannr LIKE BESTTAB.BESTID NO-UNDO.

DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
FIND FIRST FAKTPLAN WHERE FAKTPLAN.FAKTNR = fannr NO-LOCK NO-ERROR.
IF NOT AVAILABLE FAKTPLAN THEN RETURN.
FIND FIRST BESTTAB WHERE BESTTAB.BESTID = bfannr 
USE-INDEX BEST NO-LOCK NO-ERROR.

IF ny = TRUE THEN DO:
   OPEN QUERY faktbefq FOR EACH FAKTBEF WHERE FAKTBEF.FAKTNR = FAKTPLAN.FAKTNR
   USE-INDEX FAKTBEF NO-LOCK.
   GET FIRST faktbefq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(FAKTBEF):
      DELETE FAKTBEF.
      GET NEXT faktbefq EXCLUSIVE-LOCK.
   END.
   OPEN QUERY faktreglerq FOR EACH FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR
   USE-INDEX FAKTREGLER NO-LOCK.
   GET FIRST faktreglerq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(FAKTREGLER):
      DELETE FAKTREGLER.
      GET NEXT faktreglerq EXCLUSIVE-LOCK.
   END.  
   OPEN QUERY faktoverq FOR EACH FAKTOVER WHERE FAKTOVER.FAKTNR = FAKTPLAN.FAKTNR
   USE-INDEX FAKTOVER NO-LOCK.
   GET FIRST faktoverq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(FAKTOVER):
      DELETE FAKTOVER.
      GET NEXT faktoverq EXCLUSIVE-LOCK.
   END.
   FOR EACH FAKTPRISLISTA WHERE FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR:
      DELETE FAKTPRISLISTA.
   END.
END.    
RUN faktpris_UI.
RUN faktover_UI.

PROCEDURE faktover_UI :
   {muswait.i}
   FIND FIRST FAKTOVER WHERE FAKTOVER.FAKTNR = FAKTPLAN.FAKTNR 
   USE-INDEX FAKTOVER NO-LOCK NO-ERROR.
   IF NOT AVAILABLE FAKTOVER THEN DO:
      IF Guru.Konstanter:globforetag = "ESAN" THEN DO:
         IF FAKTPLAN.PRISNUMO = 0 THEN musz = TRUE.
         ELSE RUN prislistnumo_UI.
         IF musz = TRUE THEN musz = FALSE.
         ELSE RETURN.
      END.
      OPEN QUERY kundoverq FOR EACH KUNDOVER WHERE KUNDOVER.BESTID = BESTTAB.BESTID  
      USE-INDEX KUNDOVER NO-LOCK.
      GET FIRST kundoverq NO-LOCK.
      DO WHILE AVAILABLE(KUNDOVER) TRANSACTION:               
         CREATE FAKTOVER.   
         ASSIGN 
         FAKTOVER.BEFATTNING = KUNDOVER.BEFATTNING
         FAKTOVER.FAKTNR = FAKTPLAN.FAKTNR
         FAKTOVER.DAGTYP = KUNDOVER.DAGTYP
         FAKTOVER.OTEXTID = KUNDOVER.OTEXTID
         FAKTOVER.EQDAG = KUNDOVER.EQDAG
         FAKTOVER.PRISA = KUNDOVER.PRISA
         FAKTOVER.START = KUNDOVER.START
         FAKTOVER.SLUT = KUNDOVER.SLUT.
         GET NEXT kundoverq NO-LOCK.
      END. 
      CLOSE QUERY kundoverq.
   END.
   DO TRANSACTION:
      FIND FIRST FAKTPRISLIST WHERE FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR AND 
      FAKTPRISLISTA.OVER = TRUE
      EXCLUSIVE-LOCK NO-ERROR.   
      FIND FIRST KUNDPRISLIST WHERE KUNDPRISLIST.BESTID = BESTTAB.BESTID AND 
      KUNDPRISLIST.OVER = TRUE
      NO-LOCK NO-ERROR.
      IF AVAILABLE KUNDPRISLIST THEN DO:
         IF NOT AVAILABLE FAKTPRISLIST THEN DO:
            CREATE FAKTPRISLISTA.   
            ASSIGN
            FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR
            FAKTPRISLISTA.OVER = KUNDPRISLIST.OVER
            FAKTPRISLISTA.PRISID = KUNDPRISLIST.PRISID
            FAKTPRISLISTA.FRAGAEJ = FALSE
            FAKTPRISLISTA.STARTDATUM = KUNDPRISLIST.STARTDATUM.         
         END.
      END.
   END.     
   {musarrow.i}
END PROCEDURE.

PROCEDURE faktpris_UI :
   /* PRISER*/  
   IF Guru.Konstanter:globforetag = "ESAN" THEN DO:
      IF FAKTPLAN.PRISNUM = 0 THEN musz = TRUE.
      ELSE RUN prislistnum_UI.
      IF musz = TRUE THEN musz = FALSE.
      ELSE RETURN.
   END.       
   OPEN QUERY  kundbefq FOR EACH KUNDBEF WHERE KUNDBEF.BESTID = BESTTAB.BESTID 
   USE-INDEX KUNDBEF NO-LOCK.
   GET FIRST kundbefq NO-LOCK.
   DO WHILE AVAILABLE(KUNDBEF):             
      FIND FIRST FAKTBEF WHERE FAKTBEF.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTBEF.BEFATTNING = KUNDBEF.BEFATTNING USE-INDEX FAKTBEF NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTBEF THEN DO TRANSACTION:
         CREATE FAKTBEF.
         ASSIGN 
         FAKTBEF.FAKTNR = FAKTPLAN.FAKTNR
         FAKTBEF.BEFATTNING = KUNDBEF.BEFATTNING
         FAKTBEF.PRISA = KUNDBEF.PRISA
         FAKTBEF.PRISRES = KUNDBEF.PRISRES.      
      END.
      GET NEXT kundbefq NO-LOCK.
   END.  
   CLOSE QUERY kundbefq.  
   DO TRANSACTION:
      FIND FIRST FAKTPRISLIST WHERE FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR AND 
      FAKTPRISLISTA.OVER = FALSE
      EXCLUSIVE-LOCK NO-ERROR.   
      FIND FIRST KUNDPRISLIST WHERE KUNDPRISLIST.BESTID = BESTTAB.BESTID AND 
      KUNDPRISLIST.OVER = FALSE
      NO-LOCK NO-ERROR.
      IF AVAILABLE KUNDPRISLIST THEN DO:
         IF NOT AVAILABLE FAKTPRISLIST THEN DO:
            CREATE FAKTPRISLISTA.   
            ASSIGN
            FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR
            FAKTPRISLISTA.OVER = KUNDPRISLIST.OVER
            FAKTPRISLISTA.PRISID = KUNDPRISLIST.PRISID
            FAKTPRISLISTA.FRAGAEJ = FALSE
            FAKTPRISLISTA.STARTDATUM = KUNDPRISLIST.STARTDATUM.         
         END.   
      END.   
   END.
   IF ny = TRUE THEN DO TRANSACTION:     
      IF AVAILABLE KUNDPRISLIST THEN DO:
         FIND FIRST PRISLISTOVRIGT WHERE 
         PRISLISTOVRIGT.PRISID = KUNDPRISLIST.PRISID NO-LOCK NO-ERROR.
         IF AVAILABLE PRISLISTOVRIGT THEN DO:
            FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR
            EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE FAKTREGLER THEN DO:          
               IF FAKTREGLER.TIMRGL = "KUNDENS EGNA" THEN DO:
                  ASSIGN
                  FAKTREGLER.ENTRAK = PRISLISTOVRIGT.ENTRAK 
                  FAKTREGLER.FLERTRAK = PRISLISTOVRIGT.FLERTRAK
                  FAKTREGLER.FRTJPA = PRISLISTOVRIGT.FRTJPA
                  FAKTREGLER.MIL = PRISLISTOVRIGT.MIL
                  FAKTREGLER.MTRLPA = PRISLISTOVRIGT.MTRLPA.
               END.
            END.    
         END.
      END.     
   END.   
END PROCEDURE.

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE prislistnum_UI WINDOW-2 
PROCEDURE prislistnum_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FIND FIRST DEFPRISLISTA WHERE DEFPRISLISTA.PRISNUM = FAKTPLAN.PRISNUM AND 
   DEFPRISLISTA.OVER = FALSE 
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE DEFPRISLISTA THEN DO:
      musz = TRUE.
      RETURN.
   END.     
   OPEN QUERY prisq FOR EACH PRISLISTFAKT WHERE 
   PRISLISTFAKT.PRISID = DEFPRISLISTA.PRISID NO-LOCK.
   GET FIRST prisq NO-LOCK.
   DO WHILE AVAILABLE(PRISLISTFAKT):
      DO TRANSACTION:
         CREATE FAKTBEF.
         ASSIGN 
         FAKTBEF.FAKTNR = FAKTPLAN.FAKTNR
         FAKTBEF.BEFATTNING = PRISLISTFAKT.BEFATTNING
         FAKTBEF.PRISA = PRISLISTFAKT.PRISA
         FAKTBEF.PRISRES = PRISLISTFAKT.PRISRES.             
      END.
      GET NEXT prisq NO-LOCK. 
   END.
   CLOSE QUERY prisq.  
   DO TRANSACTION:
      FIND FIRST FAKTPRISLIST WHERE FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR AND 
      FAKTPRISLISTA.OVER = DEFPRISLISTA.OVER
      EXCLUSIVE-LOCK NO-ERROR.   
      IF NOT AVAILABLE FAKTPRISLIST THEN DO:
         CREATE FAKTPRISLISTA.   
         ASSIGN
         FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR
         FAKTPRISLISTA.OVER = DEFPRISLISTA.OVER
         FAKTPRISLISTA.PRISID = DEFPRISLISTA.PRISID
         FAKTPRISLISTA.FRAGAEJ = FALSE
         FAKTPRISLISTA.STARTDATUM = DEFPRISLISTA.STARTDATUM.      
      END.   
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE prislistnumo_UI WINDOW-2 
PROCEDURE prislistnumo_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FIND FIRST DEFPRISLISTA WHERE DEFPRISLISTA.PRISNUM = FAKTPLAN.PRISNUMO AND 
   DEFPRISLISTA.OVER = TRUE 
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE DEFPRISLISTA THEN DO:
      musz = TRUE.
      RETURN.
   END.     
   OPEN QUERY prisoq FOR EACH OVERPRISLISTA WHERE 
   OVERPRISLISTA.PRISID = DEFPRISLISTA.PRISID NO-LOCK.
   GET FIRST prisoq NO-LOCK.
   DO WHILE AVAILABLE(OVERPRISLISTA):
      DO TRANSACTION:        
         CREATE FAKTOVER.   
         ASSIGN 
         FAKTOVER.BEFATTNING = OVERPRISLISTA.BEFATTNING
         FAKTOVER.FAKTNR = FAKTPLAN.FAKTNR
         FAKTOVER.DAGTYP = OVERPRISLISTA.DAGTYP
         FAKTOVER.OTEXTID = OVERPRISLISTA.OTEXTID
         FAKTOVER.EQDAG = OVERPRISLISTA.EQDAG
         FAKTOVER.PRISA = OVERPRISLISTA.PRISA
         FAKTOVER.START = OVERPRISLISTA.START
         FAKTOVER.SLUT = OVERPRISLISTA.SLUT.
         GET NEXT prisoq NO-LOCK.
      END.                  
      GET NEXT prisoq NO-LOCK. 
   END.
   CLOSE QUERY prisoq.  
   DO TRANSACTION:
      FIND FIRST FAKTPRISLIST WHERE FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR AND 
      FAKTPRISLISTA.OVER = DEFPRISLISTA.OVER
      EXCLUSIVE-LOCK NO-ERROR.   
      IF NOT AVAILABLE FAKTPRISLIST THEN DO:
         CREATE FAKTPRISLISTA.   
         ASSIGN
         FAKTPRISLISTA.FAKTNR = FAKTPLAN.FAKTNR
         FAKTPRISLISTA.OVER = DEFPRISLISTA.OVER
         FAKTPRISLISTA.PRISID = DEFPRISLISTA.PRISID
         FAKTPRISLISTA.FRAGAEJ = FALSE
         FAKTPRISLISTA.STARTDATUM = DEFPRISLISTA.STARTDATUM.      
      END.   
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
