/* obs läggtill beräkning av energibortfall */


DEFINE NEW SHARED VARIABLE startdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE starttid LIKE TIDREGITAB.START NO-UNDO.
DEFINE NEW SHARED VARIABLE totavbrott AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lspantal LIKE STORNINGSTAB.ANTALLSP NO-UNDO.
DEFINE NEW SHARED VARIABLE hspantal LIKE STORNINGSTAB.ANTALLSP NO-UNDO.

DEFINE VARIABLE datum70 AS DATE NO-UNDO.
DEFINE VARIABLE datum30 AS DATE NO-UNDO.
DEFINE VARIABLE tid70 LIKE TIDREGITAB.START NO-UNDO.
DEFINE VARIABLE tid30 LIKE TIDREGITAB.START NO-UNDO.
DEFINE VARIABLE timmar100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE timmar60 AS DECIMAL NO-UNDO.
DEFINE VARIABLE bortavbrott AS DECIMAL NO-UNDO.
DEFINE VARIABLE totbortfall AS DECIMAL NO-UNDO.
DEFINE VARIABLE mestbort AS INTEGER NO-UNDO.
DEFINE VARIABLE bortfallrec AS RECID NO-UNDO.
DEFINE VARIABLE divmestbort AS DECIMAL NO-UNDO.
DEFINE VARIABLE kvartim AS DECIMAL NO-UNDO.
DEFINE VARIABLE antalkund AS DECIMAL NO-UNDO.
DEFINE VARIABLE rakvar AS DECIMAL NO-UNDO.

FUNCTION klockan100 RETURNS DECIMAL
  (INPUT ber60 AS DECIMAL) :
  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600. 
END FUNCTION.

FUNCTION klockan60 RETURNS DECIMAL
  (INPUT ber100 AS DECIMAL) :
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60.
END FUNCTION.

   OPEN QUERY kq FOR EACH STORNINGSTAB NO-LOCK.
   DO TRANSACTION:
      GET FIRST kq EXCLUSIVE-LOCK.
      IF AVAILABLE STORNINGSTAB THEN DO:
         RUN berakna_UI.
      END.
   END.
   REPEAT:
      DO TRANSACTION:
         GET NEXT kq EXCLUSIVE-LOCK.
         IF AVAILABLE STORNINGSTAB THEN DO:
            RUN berakna_UI.
         END.
         ELSE LEAVE.
      END.
   END.
/*    FIND FIRST STORNINGSTAB WHERE STORNUMMERID = 5400 EXCLUSIVE-LOCK NO-ERROR. */
/*    RUN berakna_UI.                                                            */
PROCEDURE berakna_UI.
   ASSIGN
   totavbrott = 0
   totbortfall = 0.
   IF STORNINGSTAB.KLOCKAN70% NE ? THEN DO: 
   
      RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM70%, INPUT STORNINGSTAB.HKLOCKAN,
      INPUT STORNINGSTAB.KLOCKAN70%, OUTPUT timmar100, OUTPUT timmar60).
      
      totbortfall = totbortfall + ((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * timmar100.
      
      kvartim = STORNINGSTAB.AVBROTTSTID - (timmar100 * (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP)).     
      
      RUN TIDBER.P (INPUT STORNINGSTAB.DATUM70%, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.KLOCKAN70%,
      INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      
      antalkund = kvartim / timmar100.
      
      rakvar = antalkund / (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP).               
     
      totbortfall = totbortfall + (((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * (((STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP) * rakvar) / (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP)) * timmar100).
     
   END.
   ELSE DO:
      RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.HKLOCKAN,
      INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      
      totbortfall = totbortfall + (((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * timmar100).     
   END.      
   STORNINGSTAB.BORTFALL = klockan60(totbortfall).
END PROCEDURE.
