/*LULEEKOUT.P*/
DEFINE TEMP-TABLE felmeddtemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.
{TIDUTTT.I}
DEFINE SHARED TEMP-TABLE foretemp NO-UNDO
   FIELD FTG AS CHARACTER
   INDEX FTG IS PRIMARY FTG.
DEFINE TEMP-TABLE slutut
   FIELD FTG AS CHARACTER
   FIELD ORT AS CHARACTER
   FIELD VDATUM AS DATE
   FIELD DEBKRED AS LOGICAL 
   FIELD FELDEBKRED AS LOGICAL
   FIELD ANTAL AS DECIMAL 
   FIELD BELOPP AS DECIMAL       
   FIELD K1 AS CHARACTER
   FIELD K2 AS CHARACTER
   FIELD K3 AS CHARACTER
   FIELD K4 AS CHARACTER
   FIELD K5 AS CHARACTER
   FIELD BIL AS CHARACTER
   FIELD K2POS8 AS CHARACTER
   INDEX ORG IS PRIMARY FTG DEBKRED K1 K2 K3 K4 K5.
{LESAMMAN.I}
DEFINE INPUT PARAMETER feltider AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER vkdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER skarpvar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR slutut.

DEFINE VARIABLE filut AS CHARACTER NO-UNDO.
DEFINE VARIABLE filutkopia AS CHARACTER NO-UNDO.

DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnk AS CHARACTER NO-UNDO.


DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE ekofil AS CHARACTER NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.              
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE summmallab AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallabch AS CHARACTER NO-UNDO.
DEFINE VARIABLE summmallaant AS DECIMAL NO-UNDO.
DEFINE VARIABLE summmallaantch AS CHARACTER NO-UNDO.
DEFINE VARIABLE beloppchar AS CHARACTER NO-UNDO.
DEFINE VARIABLE nolldummy AS CHARACTER NO-UNDO.
DEFINE VARIABLE verifnummervar AS INTEGER NO-UNDO.
{NAMNDB.I}
&Scoped-define NEW NEW
{REGVAR.I}

IF namndb() = "UTBI" THEN RETURN.
{AMERICANEUROPEAN.I}
regar = YEAR(TODAY).
IF MONTH(TODAY) = 1 THEN regmannamn = "jan".
ELSE IF MONTH(TODAY) = 2 THEN regmannamn = "feb".
ELSE IF MONTH(TODAY) = 3 THEN regmannamn = "mar". 
ELSE IF MONTH(TODAY) = 4 THEN regmannamn = "apr". 
ELSE IF MONTH(TODAY) = 5 THEN regmannamn = "maj". 
ELSE IF MONTH(TODAY) = 6 THEN regmannamn = "jun".
ELSE IF MONTH(TODAY) = 7 THEN regmannamn = "jul".
ELSE IF MONTH(TODAY) = 8 THEN regmannamn = "aug". 
ELSE IF MONTH(TODAY) = 9 THEN regmannamn = "sep".
ELSE IF MONTH(TODAY) = 10 THEN regmannamn = "okt". 
ELSE IF MONTH(TODAY) = 11 THEN regmannamn = "nov".
ELSE IF MONTH(TODAY) = 12 THEN regmannamn = "dec".
OUTPUT TO VALUE(samvar) APPEND.
   PUT "LULEOEOUT.P " STRING(TIME,"HH:MM") " " TODAY SKIP.
OUTPUT CLOSE.

FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.   
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
IF namndb() = "UTBI" THEN RETURN.
Guru.Konstanter:globforetag = FORETAG.FORETAG.   

regar = YEAR(TODAY).
regdatum = TODAY.
RUN REGVEC.P.
IF MONTH(TODAY) = 1 THEN regmannamn = "jan".
ELSE IF MONTH(TODAY) = 2 THEN regmannamn = "feb".
ELSE IF MONTH(TODAY) = 3 THEN regmannamn = "mar". 
ELSE IF MONTH(TODAY) = 4 THEN regmannamn = "apr". 
ELSE IF MONTH(TODAY) = 5 THEN regmannamn = "maj". 
ELSE IF MONTH(TODAY) = 6 THEN regmannamn = "jun".
ELSE IF MONTH(TODAY) = 7 THEN regmannamn = "jul".
ELSE IF MONTH(TODAY) = 8 THEN regmannamn = "aug". 
ELSE IF MONTH(TODAY) = 9 THEN regmannamn = "sep".
ELSE IF MONTH(TODAY) = 10 THEN regmannamn = "okt". 
ELSE IF MONTH(TODAY) = 11 THEN regmannamn = "nov".
ELSE IF MONTH(TODAY) = 12 THEN regmannamn = "dec".

ASSIGN
nrcol[1] = 1
nrcol[2] = 2
nrcol[3] = 3
nrcol[4] = 4
nrcol[5] = 5
nrcol[6] = 6
nrcol[7] = 7
nrcol[8] = 8
nrcol[9] = 9
nrcol[10] = 10
nrcol[11] = 11
nrcol[12] = 12
breddantal = 12   
bredd[1] = 4
bredd[2] = 3
bredd[3] = 4
bredd[4] = 9
bredd[5] = 10
bredd[6] = 17
bredd[7] = 30
bredd[8] = 8
bredd[9] = 4
bredd[10] = 3
bredd[11] = 7
bredd[12] = 13.


ASSIGN
i = 2.     
utnr[1] = 1.
DO WHILE i <= breddantal:             
   utnr[i] = utnr[i - 1] + bredd[i - 1].            
   i = i + 1.
END.
i = 0.
FOR EACH slutut:
   i = i + 1.
END.
OUTPUT TO VALUE(samvar) APPEND.
   PUT "Slutut poster " i STRING(TIME,"HH:MM") " " TODAY SKIP.
OUTPUT CLOSE.

RUN poster_UI.
{EUROPEANAMERICAN.I}
PROCEDURE poster_UI:
   FOR EACH foretemp:
      EMPTY TEMP-TABLE tidut NO-ERROR. 
      IF Guru.Konstanter:globforetag = "ELPA" THEN DO:        
         ASSIGN
         prognamn =  "d:\DELAD\PRO9S\export\bokfguruaswtid" + STRING(TODAY,"99999999") + ".txt".
         prognamnk = "d:\DELAD\PRO9S\EXKOPIA\tidguru" + STRING(YEAR(TODAY)) + regmannamn.
      END.
      ELSE IF Guru.Konstanter:globforetag = "LULE" THEN DO:
         ASSIGN   
         prognamn =  CAPS("D:\elpool\DELAD\PRO9s\export\bokfguru" + foretemp.FTG + "aswtid" + STRING(TODAY,"99999999") + ".txt").
         prognamnk = CAPS("D:\elpool\DELAD\PRO9s\EXKOPIA\tidguru" + foretemp.FTG + STRING(YEAR(TODAY)) + regmannamn).
         
      END.
      IF feltider = TRUE THEN DO:
         /*TIDFELAR*/
         /*KREDIT*/
         FOR EACH slutut WHERE slutut.FTG = foretemp.FTG AND slutut.FELDEBKRED = FALSE:
            RUN skaputpost_UI (INPUT -1).
         END.
         FOR EACH slutut WHERE slutut.FTG = foretemp.FTG AND slutut.FELDEBKRED = TRUE:
            RUN skaputpost_UI (INPUT 1).
         END.
      END.
      ELSE DO:
         FOR EACH slutut WHERE slutut.FTG = foretemp.FTG AND slutut.DEBKRED = TRUE:
            RUN skaputpost_UI (INPUT 1).
         END.
         FOR EACH slutut WHERE slutut.FTG = foretemp.FTG AND slutut.DEBKRED = FALSE:
            RUN skaputpost_UI (INPUT -1).
         END.
      END.
      RUN ut_UI.
      i = 0.
      FOR EACH tidut:
         i = i + 1.
      END.
      OUTPUT TO VALUE(samvar) APPEND.
      PUT "Antal tidut poster för " foretemp.FTG " "  i " " STRING(TIME,"HH:MM") " " TODAY SKIP.
      OUTPUT CLOSE.
   END.
END PROCEDURE.

PROCEDURE skaputpost_UI :
   DEFINE INPUT PARAMETER teckenvar AS INTEGER NO-UNDO.
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = slutut.K5
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = ""
   SUBSTRING(tidut.UT,utnr[nrcol[3]]) = slutut.K3.
   IF slutut.K1 NE "" THEN SUBSTRING(tidut.UT,utnr[nrcol[4]]) = STRING(slutut.K1,"999999") + STRING(slutut.K2,"999").
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = STRING(YEAR(slutut.VDATUM),"9999") + STRING(MONTH(slutut.VDATUM),"99")  + STRING(DAY(slutut.VDATUM),"99")
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = STRING(YEAR(slutut.VDATUM),"9999") + STRING(MONTH(slutut.VDATUM),"99")                  
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = "GUR"                                                                                          
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = ""                                                                                             
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = "".
   IF slutut.K1 NE "" THEN SUBSTRING(tidut.UT,utnr[nrcol[7]]) = "L" + STRING(slutut.K1,"999999") + STRING(slutut.K2,"999") + STRING(slutut.ORT,"X(20)").
   ASSIGN   
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = LEFT-TRIM(STRING(teckenvar * slutut.BELOPP,"->>>>>>>>>>>9.99")) + "0"                                                                                                 
   SUBSTRING(tidut.UT,utnr[nrcol[12]]) = LEFT-TRIM(STRING(teckenvar * slutut.ANTAL,"->>>>>>>>9.99")).                
END PROCEDURE.

PROCEDURE ut_UI:   
    OUTPUT TO VALUE(prognamn) APPEND.
    FOR EACH tidut:
       IF tidut.UT = ? THEN.
       ELSE PUT UNFORMATTED tidut.UT AT 1 SKIP.

    END.
    OUTPUT CLOSE.
    OUTPUT TO VALUE(samvar) APPEND.
    PUT "Skarpa filen för " foretemp.FTG STRING(TIME,"HH:MM") " " TODAY SKIP.
    OUTPUT CLOSE.
    OUTPUT TO VALUE(prognamnK) APPEND.
    PUT "ny fil " TODAY AT 1 SKIP.
    FOR EACH tidut:
       IF tidut.UT = ? THEN.
       ELSE PUT UNFORMATTED tidut.UT AT 1 SKIP.
    END.
    OUTPUT CLOSE.
    OUTPUT TO VALUE(samvar) APPEND.
    PUT "kopia filen för " foretemp.FTG STRING(TIME,"HH:MM") " " TODAY SKIP.
    OUTPUT CLOSE.
END PROCEDURE.       
