/*LULEMAN.P*/
/* hämtar data från pasumma.d (skapas av EKO-LÖNE-SAMMANST.)
, omformar och lägger ut till pa90 ,filen som ska läsas till pa90*/
/*web*/
/*
DEFINE NEW SHARED VARIABLE man AS INTEGER FORMAT "99" NO-UNDO.
DEFINE /*NEW*/ SHARED VARIABLE vkdatum AS DATE NO-UNDO.
DEFINE /*NEW*/ SHARED VARIABLE gvisatidpermanad AS LOGICAL NO-UNDO.

*/
{LESAMMAN.I}  
DEFINE INPUT PARAMETER invkdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER ingvisatidpermanad AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER inglobforetag LIKE FORETAG.FORETAG NO-UNDO.
DEFINE INPUT PARAMETER inman AS INTEGER FORMAT "99" NO-UNDO.
DEFINE INPUT PARAMETER korvar AS CHARACTER NO-UNDO.
{AMERICANEUROPEAN.I}
RUN sammut_UI (INPUT 1).
DEFINE NEW SHARED VARIABLE man AS INTEGER FORMAT "99" NO-UNDO.
DEFINE NEW SHARED VARIABLE vkdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE gvisatidpermanad AS LOGICAL NO-UNDO.



ASSIGN
vkdatum     = invkdatum  
gvisatidpermanad   = ingvisatidpermanad 
Guru.Konstanter:globforetag = inglobforetag
man         = inman.
/*man endast globman = false.*/
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO.

DEFINE VARIABLE personal LIKE PERSONALTAB.PERSONALKOD NO-UNDO.      /*LÖN*/
DEFINE VARIABLE losen AS CHARACTER FORMAT "X(6)" NO-UNDO.
DEFINE VARIABLE persnr LIKE PERSONALTAB.PERSONALKOD NO-UNDO.     /*LÖN*/
DEFINE VARIABLE pnummer LIKE PERSONALTAB.PERSONALKOD NO-UNDO.     /*LÖN*/
DEFINE VARIABLE sor LIKE LONTILL.ENHET NO-UNDO.    /*LÖN*/
DEFINE VARIABLE lon LIKE TIDREGITAB.LONTILLAGG NO-UNDO.     /*LÖN*/
DEFINE VARIABLE lone LIKE TIDREGITAB.LONTILLAGG NO-UNDO.     /*LÖN*/
DEFINE VARIABLE antal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.   /*LÖN*/
DEFINE VARIABLE antal1 LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.   /*LÖN*/
DEFINE VARIABLE persnummer AS CHARACTER FORMAT "X(10)" NO-UNDO.      /*LÖN*/
DEFINE VARIABLE datum AS CHARACTER FORMAT "X(6)" NO-UNDO.      /*LÖN*/
DEFINE VARIABLE overrapp1 AS CHARACTER FORMAT "X(184)" NO-UNDO.      /*LÖN*/
DEFINE VARIABLE overrapp2 AS CHARACTER FORMAT "X(70)" NO-UNDO.      /*ÖVERTID*/
DEFINE VARIABLE overrapp3 AS CHARACTER FORMAT "X(70)" NO-UNDO.
DEFINE VARIABLE overrapp4 AS CHARACTER FORMAT "X(70)" NO-UNDO.

DEFINE VARIABLE rapphj4 AS INTEGER FORMAT "9999999999" NO-UNDO.
DEFINE VARIABLE rapphj1 AS DECIMAL FORMAT ">>>>>.99" NO-UNDO.      /*HJÄLP ANTAL*/
DEFINE VARIABLE rapphj2 AS DECIMAL FORMAT ">>>>>.99" NO-UNDO.
DEFINE VARIABLE datrapphj1 AS DATE FORMAT "999999" NO-UNDO.      /*HJÄLP datum*/
DEFINE VARIABLE seku AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE VARIABLE beravt LIKE PERSONALTAB.BEREDSKAPSAVTAL NO-UNDO.   
DEFINE VARIABLE svar AS LOGICAL FORMAT "JA/NEJ" INITIAL FALSE NO-UNDO.
DEFINE VARIABLE rec AS RECID NO-UNDO.
DEFINE VARIABLE tal AS INTEGER NO-UNDO.
DEFINE VARIABLE tal2 AS INTEGER NO-UNDO.
DEFINE VARIABLE tal3 AS INTEGER NO-UNDO.
DEFINE VARIABLE tal4 AS INTEGER NO-UNDO.
DEFINE VARIABLE tal5 AS INTEGER NO-UNDO.
DEFINE VARIABLE tal6 AS INTEGER NO-UNDO.
DEFINE VARIABLE pkod LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE VARIABLE akod LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE VARIABLE aomr LIKE PERSONALTAB.OMRADE NO-UNDO.
DEFINE VARIABLE pomr LIKE PERSONALTAB.OMRADE NO-UNDO.
DEFINE VARIABLE reco AS RECID NO-UNDO.
DEFINE VARIABLE kolle AS CHARACTER NO-UNDO.
DEFINE VARIABLE ftag AS CHARACTER NO-UNDO.
DEFINE VARIABLE nrcolTE AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE prognamn AS CHARACTER FORMAT "X(41)" NO-UNDO.
DEFINE VARIABLE prognamn5 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE prognamn3 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE prognamn4 AS CHARACTER  NO-UNDO.
DEFINE VARIABLE filut AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonfil AS CHARACTER NO-UNDO.
DEFINE VARIABLE lorsak AS CHARACTER NO-UNDO.
DEFINE VARIABLE stdat  AS DATE NO-UNDO.
DEFINE VARIABLE sldat AS DATE NO-UNDO.
DEFINE VARIABLE anstperson LIKE PERSONALTAB.PERSONNUMMER NO-UNDO.
DEFINE VARIABLE rgr AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonant AS CHARACTER NO-UNDO.
DEFINE VARIABLE lonkr AS CHARACTER NO-UNDO.
DEFINE TEMP-TABLE pa90fil
   FIELD PPERSKOD LIKE PERSONALTAB.PERSONALKOD
   FIELD PLONTILLAGG LIKE TIDREGITAB.LONTILLAGG
   FIELD PLONTILLANTAL LIKE TIDREGITAB.LONTILLANTAL
   FIELD POVERTIDTILL LIKE TIDREGITAB.OVERTIDTILL
   FIELD POVERANTAL LIKE TIDREGITAB.OVERANTAL
   FIELD PTRAKTKOD LIKE TIDREGITAB.TRAKTKOD
   FIELD PTRAKTANTAL LIKE TIDREGITAB.TRAKTANTAL
   FIELD PBEREDSKAP LIKE TIDREGITAB.BEREDSKAP
   FIELD PBERANTAL LIKE TIDREGITAB.BERANTAL
   FIELD PDATUM LIKE TIDREGITAB.DATUM
   FIELD MANAD AS INTEGER
   FIELD PVECKONUMMER LIKE TIDREGITAB.VECKONUMMER
   FIELD PSORT AS CHARACTER FORMAT "XX"
   FIELD PKOD LIKE ANSTFORMTAB.KOD
   FIELD POMR LIKE PERSONALTAB.OMRADE
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   INDEX PPERSKOD IS PRIMARY PPERSKOD ASCENDING.
DEFINE TEMP-TABLE pa90filen
   FIELD PPERSKOD AS CHARACTER FORMAT "X(10)"
   FIELD PNR AS CHARACTER FORMAT "X(10)"
   FIELD PDATUMET AS CHARACTER FORMAT "X(6)"
   FIELD MANAD AS INTEGER
   FIELD UTDATUM AS DATE
   FIELD PTILLAGG LIKE TIDREGITAB.LONTILLAGG
   FIELD PTI  AS DECIMAL
   FIELD PANTAL AS DECIMAL
   FIELD PKR AS DECIMAL
   FIELD PKOD LIKE ANSTFORMTAB.KOD
   FIELD POMR LIKE PERSONALTAB.OMRADE
   FIELD ORSAK AS CHARACTER
   FIELD VIJUDID AS CHARACTER
   FIELD PSORT AS CHARACTER FORMAT "XX"
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   INDEX PPERSKOD IS PRIMARY PPERSKOD PTILLAGG.
DEFINE TEMP-TABLE telon
   FIELD PNUMMER AS INTEGER
   FIELD ANSTNR AS INTEGER
   FIELD F3 AS INTEGER
   FIELD FRDATUM AS INTEGER
   FIELD TILLDATUM AS INTEGER
   FIELD ORSAK AS CHARACTER
   FIELD ANTAL AS DECIMAL
   FIELD APRIS AS DECIMAL
   FIELD BELOPP AS DECIMAL
   FIELD F10 AS INTEGER
   FIELD F11 AS INTEGER
   FIELD F12 AS INTEGER
   FIELD F13 AS CHARACTER
   FIELD F14 AS INTEGER
   FIELD F15 AS INTEGER.
DEFINE TEMP-TABLE felmeddtemp 
  FIELD FELMEDD AS CHARACTER
  FIELD VAL AS INTEGER.

FUNCTION klock100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.   
EMPTY TEMP-TABLE pa90filen NO-ERROR. 
EMPTY TEMP-TABLE pa90fil NO-ERROR. 

IF Guru.Konstanter:globforetag = "LULE" THEN prognamn5 = "D:\elpool\DELAD\PRO9s\EXPORT\LON\Lonback\".
ELSE IF Guru.Konstanter:globforetag = "ELPA" THEN prognamn5 = "\\pc112\delad\pro9s\korning\".
IF korvar = "" THEN DO:
   prognamn3 = prognamn5 + "pasumma.d".
   INPUT FROM VALUE(prognamn3) NO-ECHO.
END.
ELSE DO:
   prognamn3 = prognamn5 + "pasummaomk.d".
   INPUT FROM VALUE(prognamn3) NO-ECHO.
END.
REPEAT:
   DO TRANSACTION:
      CREATE pa90fil.
      ASSIGN.
      IMPORT pa90fil.
      
   END.
END.  
FOR EACH pa90fil WHERE pa90fil.PBEREDSKAP NE "":

  
  FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pa90fil.PPERSKOD
  USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.  
  FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL AND
  BERKOD.BEREDSKAP = pa90fil.PBEREDSKAP USE-INDEX BERE NO-LOCK NO-ERROR.  
  IF BERKOD.ENHET = "TI" THEN DO:
     ASSIGN pa90fil.PSORT = "TI".
  END.

END.

FOR EACH pa90fil WHERE pa90fil.PSORT = "TI":
   pa90fil.PLONTILLANTAL = klock100(pa90fil.PLONTILLANTAL).
   pa90fil.POVERANTAL = klock100(pa90fil.POVERANTAL).
   pa90fil.PBERANTAL = klock100(pa90fil.PBERANTAL).
END.
FOR EACH pa90fil :
   pa90fil.MANAD = MONTH(pa90fil.PDATUM).   
END.

FOR EACH pa90fil BREAK BY pa90fil.PPERSKOD BY pa90fil.PLONTILLAGG BY pa90fil.MANAD:  
   ACCUMULATE pa90fil.PLONTILLANTAL (TOTAL BY pa90fil.PPERSKOD BY pa90fil.PLONTILLAGG BY pa90fil.MANAD).
   IF LAST-OF(pa90fil.MANAD) THEN DO:
      IF pa90fil.PLONTILLAGG NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSKOD = pa90fil.PPERSKOD      
         pa90filen.UTDATUM = pa90fil.PDATUM
         pa90filen.MANAD = pa90fil.MANAD
         pa90filen.PTILLAGG = pa90fil.PLONTILLAGG
         pa90filen.PSORT = pa90fil.PSORT
         pa90filen.POMR = pa90fil.POMR
         /*pa90filen.ORSAK = "LÖNE"*/
         pa90filen.PANTAL = (ACCUM TOTAL BY pa90fil.MANAD  pa90fil.PLONTILLANTAL).
         /*RUN orsak_UI (INPUT pa90filen.PTILLAGG, OUTPUT lorsak).
         ASSIGN pa90filen.ORSAK = lorsak.                         */
      END.     
   END.   
END.
FOR EACH pa90fil BREAK BY pa90fil.PPERSKOD BY pa90fil.POVERTIDTILL BY pa90fil.MANAD :     
   ACCUMULATE pa90fil.POVERANTAL (TOTAL BY pa90fil.PPERSKOD BY pa90fil.POVERTIDTILL BY pa90fil.MANAD).    
   IF LAST-OF(pa90fil.MANAD) THEN DO:
      IF pa90fil.POVERTIDTILL NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSKOD = pa90fil.PPERSKOD
         pa90filen.UTDATUM = pa90fil.PDATUM
         pa90filen.MANAD = pa90fil.MANAD
         pa90filen.PTILLAGG = pa90fil.POVERTIDTILL
         pa90filen.PSORT = pa90fil.PSORT
         pa90filen.POMR = pa90fil.POMR
         /*pa90filen.ORSAK = "ÖTID"*/
         pa90filen.PANTAL = (ACCUM TOTAL BY  pa90fil.MANAD pa90fil.POVERANTAL).
         /*RUN orsak_UI (INPUT pa90filen.PTILLAGG, OUTPUT lorsak).
         ASSIGN pa90filen.ORSAK = lorsak.                         */

      END.     
   END.   
END.
FOR EACH pa90fil BREAK BY pa90fil.PPERSKOD BY pa90fil.PTRAKTKOD BY pa90fil.MANAD :     
   ACCUMULATE pa90fil.PTRAKTANTAL (TOTAL BY pa90fil.PPERSKOD BY pa90fil.PTRAKTKOD BY pa90fil.MANAD).    
   IF LAST-OF(pa90fil.MANAD) THEN DO:
      IF pa90fil.PTRAKTKOD NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSKOD = pa90fil.PPERSKOD
         pa90filen.UTDATUM = pa90fil.PDATUM
         pa90filen.MANAD = pa90fil.MANAD
         pa90filen.PTILLAGG = pa90fil.PTRAKTKOD
         pa90filen.PSORT = pa90fil.PSORT
         pa90filen.POMR = pa90fil.POMR
         /*pa90filen.ORSAK = "TRAKT"*/
         pa90filen.PANTAL = (ACCUM TOTAL BY  pa90fil.MANAD pa90fil.PTRAKTANTAL).
         /*RUN orsak_UI (INPUT pa90filen.PTILLAGG, OUTPUT lorsak).
         ASSIGN pa90filen.ORSAK = lorsak.*/

      END.      
   END.   
END.
FOR EACH pa90fil BREAK BY pa90fil.PPERSKOD BY pa90fil.PBEREDSKAP BY pa90fil.MANAD BY pa90fil.AONR BY pa90fil.DELNR :     
   ACCUMULATE pa90fil.PBERANTAL (TOTAL BY pa90fil.PPERSKOD BY pa90fil.PBEREDSKAP BY pa90fil.MANAD BY pa90fil.AONR BY pa90fil.DELNR).    
   IF LAST-OF(pa90fil.DELNR) THEN DO:
      IF pa90fil.PBEREDSKAP NE "" THEN DO:      
         CREATE pa90filen.         
         ASSIGN
         pa90filen.PPERSKOD = pa90fil.PPERSKOD
         pa90filen.UTDATUM = pa90fil.PDATUM
         pa90filen.MANAD = pa90fil.MANAD
         pa90filen.PTILLAGG = pa90fil.PBEREDSKAP
         pa90filen.PSORT = pa90fil.PSORT
         pa90filen.POMR = pa90fil.POMR
         pa90filen.ORSAK = "BERE"
         pa90filen.AONR = pa90fil.AONR
         pa90filen.DELNR = pa90fil.DELNR
         pa90filen.PANTAL = (ACCUM TOTAL BY  pa90fil.DELNR pa90fil.PBERANTAL).
         /*RUN orsak_UI (INPUT pa90filen.PTILLAGG, OUTPUT lorsak).
         ASSIGN pa90filen.ORSAK = lorsak.*/

      END.      
   END.   
END.


FOR EACH pa90filen:
   FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pa90filen.PPERSKOD NO-ERROR.
   IF AVAILABLE PERSONALTAB THEN DO:
      pa90filen.PNR =  SUBSTRING(STRING(PERSONALTAB.PERSONNUMMER),1 ,6) + SUBSTRING(STRING(PERSONALTAB.PERSONNUMMER),7 ,4).
   END.
   IF pa90filen.PSORT = "KR"  THEN DO:
      ASSIGN
      pa90filen.PKR = pa90filen.PANTAL 
      pa90filen.PANTAL = 0.
   END.
END.


IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
   FOR EACH pa90filen:         
      
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pa90filen.PPERSKOD NO-LOCK NO-ERROR.
      
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
      FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR NO-LOCK NO-ERROR.
      FIND FIRST JURPERS WHERE JURPERS.JUDID = AVDELNING.POSTANST NO-LOCK NO-ERROR.
      IF AVAILABLE JURPERS THEN DO:
         ASSIGN pa90filen.VIJUDID = JURPERS.VIJUDID.
      END.
   END.   
END.


IF korvar = "" THEN DO:
   prognamn3 = prognamn5 + "LULEELNAT.d".
   prognamn4 = prognamn5 + "LOMAKO.D".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).         
   prognamn3 = prognamn5 + "FRKOLL.D".
   prognamn4 = prognamn5 + "FRMAKO.D".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).      
   prognamn3 = prognamn5 + "FRFELMA.D".
   prognamn4 = prognamn5 + "FRFELKO.D".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).      
   prognamn3 = prognamn5 + "FRANFEL.D".
   prognamn4 = prognamn5 + "FRFELMA.D".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).      
   prognamn3 = prognamn5 + "TOM.D".
   prognamn4 = prognamn5 + "FRANFEL.D".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).      
   prognamn3 = prognamn5 + "pasumma.d".
   prognamn4 = prognamn5 + "paloko.d".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).      
   prognamn3 = prognamn5 + "fransu.d".
   prognamn4 = prognamn5 + "pafrko.d".
   OS-COPY VALUE(prognamn3) VALUE(prognamn4).         
END.

IF korvar = "" THEN DO:
   prognamn3 = prognamn5 + "pa2.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.   
END.
ELSE DO:
   prognamn3 = prognamn5 + "pa2omk.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.   
END.
FOR EACH pa90filen BY pa90filen.PNR BY pa90filen.PTILLAGG:
  EXPORT pa90filen.
END. 
/*Luleå Energi ELNÄT AB*/
IF Guru.Konstanter:globforetag = "LULE" THEN DO:      
   IF korvar = "" THEN DO:
      prognamn3 = prognamn5 + "LULEELNAT.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
   ELSE DO:
      prognamn3 = prognamn5 + "LULEELNATomk.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
END.

FOR EACH pa90filen:
   /*måltidsavdrag med minus kronor*/
   IF pa90filen.PTILLAGG = "844" THEN pa90filen.PKR = (-1) * pa90filen.PKR.
   IF pa90filen.PTILLAGG = "930" THEN pa90filen.PANTAL = (-1) * pa90filen.PANTAL.
   IF pa90filen.PTILLAGG = "931" THEN pa90filen.PANTAL = (-1) * pa90filen.PANTAL.
END.
overrapp1 = "000000".
PUT overrapp1.
PUT SKIP.
overrapp1 = ";Innehåll= Tillägg och frånvaro tom datum" + STRING(vkdatum,"99999999") + "Luleå Energi Elnät AB".
PUT overrapp1.
PUT SKIP.
FOR EACH pa90filen WHERE pa90filen.VIJUDID = "03" BY pa90filen.PNR BY pa90filen.ORSAK:
  pa90filen.PANTAL = pa90filen.PANTAL * 100.
  pa90filen.PKR = pa90filen.PKR * 100.
  stdat = DATE(MONTH(pa90filen.UTDATUM),01,YEAR(pa90filen.UTDATUM)).
  IF MONTH(pa90filen.UTDATUM) = 12 THEN DO:
     sldat = DATE(01,01,YEAR(pa90filen.UTDATUM)+ 1)- 1.
  END.
  ELSE DO:
     sldat = DATE(MONTH(pa90filen.UTDATUM)+ 1,01,YEAR(pa90filen.UTDATUM))- 1.
  END.
  RUN rgren_UI (OUTPUT rgr).

   IF pa90filen.PANTAL NE 0 THEN lonant = STRING(pa90filen.PANTAL,"-999999999").
   ELSE lonant = STRING(pa90filen.PANTAL,"9999999999").
   IF pa90filen.PKR NE 0 THEN lonkr = STRING(pa90filen.PKR,"-9999999999999999").
   ELSE lonkr = STRING(pa90filen.PKR,"99999999999999999").
   overrapp1 = "214006" + "0" + pa90filen.PNR +
         "L" + pa90filen.PTILLAGG +
         lonant +
         "0000000000" +
         lonkr +         
         STRING(stdat,"99999999") +
         "00000" +                        
         STRING(sldat,"99999999") + 
         "00000" +                        
         "0000000000000000" +
         "000000" +         
         "                    " +
         "                    " +
         "            " +
         SUBSTRING(rgr,1,4) + "                " +
         "100.00".   
         
   PUT overrapp1.   
   PUT SKIP.
END.

OUTPUT CLOSE.
/*Luleå Energi AB*/
IF Guru.Konstanter:globforetag = "LULE" THEN DO:      
   IF korvar = "" THEN DO:
      prognamn3 = prognamn5 + "LULELEAB.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
   ELSE DO:
      prognamn3 = prognamn5 + "LULELEABomk.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
END.

overrapp1 = "000000".
PUT overrapp1.
PUT SKIP.
overrapp1 = ";Innehåll= Tillägg och frånvaro tom datum" + STRING(vkdatum,"99999999") + "Luleå Energi AB".
PUT overrapp1.
PUT SKIP.
FOR EACH pa90filen WHERE pa90filen.VIJUDID = "01" BY pa90filen.PNR BY pa90filen.ORSAK:
   pa90filen.PANTAL = pa90filen.PANTAL * 100.
   pa90filen.PKR = pa90filen.PKR * 100.
   stdat = DATE(MONTH(pa90filen.UTDATUM),01,YEAR(pa90filen.UTDATUM)).
   IF MONTH(pa90filen.UTDATUM) = 12 THEN DO:
      sldat = DATE(01,01,YEAR(pa90filen.UTDATUM)+ 1)- 1.
   END.
   ELSE DO:
      sldat = DATE(MONTH(pa90filen.UTDATUM)+ 1,01,YEAR(pa90filen.UTDATUM))- 1.
   END.
   RUN rgren_UI (OUTPUT rgr).  
   IF pa90filen.PANTAL NE 0 THEN lonant = STRING(pa90filen.PANTAL,"-999999999").
   ELSE lonant = STRING(pa90filen.PANTAL,"9999999999").
   IF pa90filen.PKR NE 0 THEN lonkr = STRING(pa90filen.PKR,"-9999999999999999").
   ELSE lonkr = STRING(pa90filen.PKR,"99999999999999999").
   overrapp1 = "214006" + "0" + pa90filen.PNR +
         "L" + pa90filen.PTILLAGG +
         lonant +
         "0000000000" +
         lonkr +         
         STRING(stdat,"99999999") +
         "00000" +                        
         STRING(sldat,"99999999") + 
         "00000" +                        
         "0000000000000000" +
         "000000" +         
         "                    " +
         "                    " +
         "            " +
         SUBSTRING(rgr,1,4) + "                " +
         "100.00".   
         
   PUT overrapp1.   
   PUT SKIP.
END.

OUTPUT CLOSE.

/*Bioenergi i Luleå AB*/
IF Guru.Konstanter:globforetag = "LULE" THEN DO:      
   IF korvar = "" THEN DO:
      prognamn3 = prognamn5 + "LULEBIOE.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
   ELSE DO:
      prognamn3 = prognamn5 + "LULELBIOEomk.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
END.

overrapp1 = "000000".
PUT overrapp1.
PUT SKIP.
overrapp1 = ";Innehåll= Tillägg och frånvaro tom datum" + STRING(vkdatum,"99999999") + "Bioenergi i Luleå AB".
PUT overrapp1.
PUT SKIP.
FOR EACH pa90filen WHERE pa90filen.VIJUDID = "02" BY pa90filen.PNR BY pa90filen.ORSAK:
   pa90filen.PANTAL = pa90filen.PANTAL * 100.
   pa90filen.PKR = pa90filen.PKR * 100.
   stdat = DATE(MONTH(pa90filen.UTDATUM),01,YEAR(pa90filen.UTDATUM)).
   IF MONTH(pa90filen.UTDATUM) = 12 THEN DO:
      sldat = DATE(01,01,YEAR(pa90filen.UTDATUM)+ 1)- 1.
   END.
   ELSE DO:
      sldat = DATE(MONTH(pa90filen.UTDATUM)+ 1,01,YEAR(pa90filen.UTDATUM))- 1.
   END.
   RUN rgren_UI (OUTPUT rgr).  
   IF pa90filen.PANTAL NE 0 THEN lonant = STRING(pa90filen.PANTAL,"-999999999").
   ELSE lonant = STRING(pa90filen.PANTAL,"9999999999").
   IF pa90filen.PKR NE 0 THEN lonkr = STRING(pa90filen.PKR,"-9999999999999999").
   ELSE lonkr = STRING(pa90filen.PKR,"99999999999999999").
   overrapp1 = "214006" + "0" + pa90filen.PNR +
         "L" + pa90filen.PTILLAGG +
         lonant +
         "0000000000" +
         lonkr +         
         STRING(stdat,"99999999") +
         "00000" +                        
         STRING(sldat,"99999999") + 
         "00000" +                        
         "0000000000000000" +
         "000000" +         
         "                    " +
         "                    " +
         "            " +
         SUBSTRING(rgr,1,4) + "                " +
         "100.00".   
         
   PUT overrapp1.   
   PUT SKIP.
END.

OUTPUT CLOSE.

/*Lunet AB*/
IF Guru.Konstanter:globforetag = "LULE" THEN DO:      
   IF korvar = "" THEN DO:
      prognamn3 = prognamn5 + "LULELUNET.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
   ELSE DO:
      prognamn3 = prognamn5 + "LULELUNETomk.d".
      OUTPUT TO VALUE(prognamn3) NO-ECHO.      
   END.
END.

overrapp1 = "000000".
PUT overrapp1.
PUT SKIP.
overrapp1 = ";Innehåll= Tillägg och frånvaro tom datum" + STRING(vkdatum,"99999999") + "Lunet AB".
PUT overrapp1.
PUT SKIP.
FOR EACH pa90filen WHERE pa90filen.VIJUDID = "04" BY pa90filen.PNR BY pa90filen.ORSAK:
   pa90filen.PANTAL = pa90filen.PANTAL * 100.
   pa90filen.PKR = pa90filen.PKR * 100.
   stdat = DATE(MONTH(pa90filen.UTDATUM),01,YEAR(pa90filen.UTDATUM)).
   IF MONTH(pa90filen.UTDATUM) = 12 THEN DO:
      sldat = DATE(01,01,YEAR(pa90filen.UTDATUM)+ 1)- 1.
   END.
   ELSE DO:
      sldat = DATE(MONTH(pa90filen.UTDATUM)+ 1,01,YEAR(pa90filen.UTDATUM))- 1.
   END.
   RUN rgren_UI (OUTPUT rgr).  
   IF pa90filen.PANTAL NE 0 THEN lonant = STRING(pa90filen.PANTAL,"-999999999").
   ELSE lonant = STRING(pa90filen.PANTAL,"9999999999").
   IF pa90filen.PKR NE 0 THEN lonkr = STRING(pa90filen.PKR,"-9999999999999999").
   ELSE lonkr = STRING(pa90filen.PKR,"99999999999999999").
   overrapp1 = "214006" + "0" + pa90filen.PNR +
         "L" + pa90filen.PTILLAGG +
         lonant +
         "0000000000" +
         lonkr +         
         STRING(stdat,"99999999") +
         "00000" +                        
         STRING(sldat,"99999999") + 
         "00000" +                        
         "0000000000000000" +
         "000000" +         
         "                    " +
         "                    " +
         "            " +
         SUBSTRING(rgr,1,4) + "                " +
         "100.00".   
         
   PUT overrapp1.   
   PUT SKIP.
END.

OUTPUT CLOSE.


/*special stans*/
IF Guru.Konstanter:globforetag = "LULE" THEN DO:
   prognamn3 = prognamn5 + "stanstid" + ".d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.   
   anstperson = "".
   FOR EACH pa90filen BY pa90filen.VIJUDID BY pa90filen.PNR BY pa90filen.ORSAK:
      IF anstperson NE pa90filen.PNR THEN DO:      
         PUT SKIP (1). 
         ASSIGN overrapp1 = "".   
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = pa90filen.PNR AND
         PERSONALTAB.AKTIV = TRUE NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE PERSONALTAB THEN DO:      
            FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONNUMMER = pa90filen.PNR NO-LOCK NO-ERROR. 
         END.
         ASSIGN
         SUBSTRING(overrapp1,2,11) = STRING(pa90filen.PNR,"999999-9999").
         IF AVAILABLE PERSONALTAB THEN DO: 
            SUBSTRING(overrapp1,14,38) = PERSONALTAB.PERSONALKOD + " " + PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.  
         END.        
         anstperson = pa90filen.PNR.   
         PUT overrapp1.
         PUT SKIP(1). 
      END.      
      IF pa90filen.PANTAL = 0 AND pa90filen.PKR = 0 THEN overrapp1 = overrapp1.
      ELSE DO:
         stdat = DATE(MONTH(pa90filen.UTDATUM),01,YEAR(pa90filen.UTDATUM)).
         IF MONTH(pa90filen.UTDATUM) = 12 THEN DO:
            sldat = DATE(01,01,YEAR(pa90filen.UTDATUM)+ 1)- 1.
         END.
         ELSE DO:
            sldat = DATE(MONTH(pa90filen.UTDATUM)+ 1,01,YEAR(pa90filen.UTDATUM))- 1.
         END.
         IF pa90filen.PANTAL NE 0 THEN pa90filen.PANTAL =  pa90filen.PANTAL / 100.
         IF pa90filen.PKR NE 0 THEN pa90filen.PKR =  pa90filen.PKR / 100.
         ASSIGN overrapp1 = "".            
         ASSIGN         
         SUBSTRING(overrapp1,2,8) = SUBSTRING(pa90filen.PTILLAGG,1,8)
         SUBSTRING(overrapp1,11,9) = STRING(pa90filen.PANTAL,"->>>>9.99")
         SUBSTRING(overrapp1,24,10) = STRING(stdat,"99999999")
         SUBSTRING(overrapp1,39,10) = STRING(sldat,"99999999").
         IF pa90filen.PKR NE 0  THEN DO:
            SUBSTRING(overrapp1,11,9) = STRING(pa90filen.PKR,"->>>>9.99").            
         END.         
      END.
      anstperson = pa90filen.PNR.   
      IF overrapp1 NE ""  THEN DO:
         PUT overrapp1.   /*  r3tillen.P    */
         PUT SKIP. 
      END.
   END.
END.  
IF Guru.Konstanter:globforetag = "LULE" THEN DO:
   IF korvar = "" THEN DO: 
      prognamn3 = prognamn5 + "felpers.d".
      OUTPUT TO VALUE(prognamn3) APPEND.      
   END.
   ELSE DO:
     prognamn3 = prognamn5 + "felpersomk.d".
     OUTPUT TO VALUE(prognamn3) APPEND.     
   END.
   FOR EACH pa90filen:
      IF pa90filen.VIJUDID = "03" THEN man = man.   
      ELSE IF pa90filen.VIJUDID = "01" THEN man = man.   
      ELSE IF pa90filen.VIJUDID = "02" THEN man = man.   
      ELSE IF pa90filen.VIJUDID = "04" THEN man = man.   
      /*ELSE IF pa90filen.VIJUDID = "GSEAB" THEN man = man.*/
      ELSE DO:
         EXPORT pa90filen.
      END.
   END.
   OUTPUT CLOSE.
END.   
IF korvar = "" THEN DO:
   prognamn3 = prognamn5 + "pasumma.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.
END.
ELSE DO:
   prognamn3 = prognamn5 + "pasummaomk.d".
   OUTPUT TO VALUE(prognamn3) NO-ECHO.
END.
PUT " ".
ASSIGN
filut = ""
lonfil = "".
IF korvar = "" THEN DO:
   IF Guru.Konstanter:globforetag = "LULE" THEN DO:   
       
      lonfil =  "LULEELNATtill" + STRING(TODAY,"99999999") + ".d".
      prognamn = prognamn5  + lonfil.        
      prognamn3 = prognamn5 + "LULEELNAT.d".      
      OS-COPY VALUE(prognamn3) VALUE(prognamn).  
      
      
     
   END.     
   ELSE DO:     
      prognamn = prognamn5 + "LULEELNATtill"  + STRING(TODAY,"99999999") + ".d".        
      prognamn3 = prognamn5 + "LULEELNAT.d".      
      OS-COPY VALUE(prognamn3) VALUE(prognamn).         
      /*prognamn = prognamn5 + "lonutGSEAB"  + STRING(TODAY,"999999") + ".d".        
      prognamn3 = prognamn5 + "lonutGSEAB.d".      
      OS-COPY VALUE(prognamn3) VALUE(prognamn).               */
   END.
END.
ELSE DO:    
   /*KALMAR*/
   prognamn = prognamn5 + "LULEELNATomktill".
   prognamn = prognamn  + STRING(TODAY,"999999") + ".d".        
   prognamn3 = prognamn5 + "LULEELNATomk.d".      
   OS-COPY VALUE(prognamn3) VALUE(prognamn).                
   /*/*SMÅLAND*/
   prognamn = prognamn5 + "lonutomkGSEAB".
   prognamn = prognamn  + STRING(TODAY,"999999") + ".d".        
   prognamn3 = prognamn5 + "lonutomkGSEAB.d".      
   OS-COPY VALUE(prognamn3) VALUE(prognamn).                */
END.

EMPTY TEMP-TABLE pa90fil NO-ERROR. 


RUN sammut_UI (INPUT 2).
{EUROPEANAMERICAN.I}
PROCEDURE rgren_UI :   
   DEFINE OUTPUT PARAMETER rgr AS CHARACTER NO-UNDO.
   rgr = "    ".
   IF pa90filen.ORSAK = "BERE" THEN DO:
      IF pa90filen.AONR = "100293" AND pa90filen.DELNR = 0 THEN rgr = "1420".
      ELSE IF pa90filen.AONR = "003005" AND pa90filen.DELNR = 1 THEN rgr = "6700".
      ELSE IF pa90filen.AONR = "003005" AND pa90filen.DELNR = 0 THEN rgr = "6700".
      ELSE IF pa90filen.AONR = "241" AND pa90filen.DELNR = 0 THEN rgr = "    ".  /*2420 borttaget 20091217*/
      ELSE IF pa90filen.AONR = "245" AND pa90filen.DELNR = 0 THEN rgr = "    ".  /*2450 borttaget 20091217*/
      ELSE IF pa90filen.AONR = "940" AND pa90filen.DELNR = 0 THEN rgr = "    ".
      ELSE rgr = "1420".      
   END.
   /*ob och ansvarstillägg*/
   IF pa90filen.VIJUDID = "02" THEN DO:
      IF pa90filen.PTILLAGG = "310" OR pa90filen.PTILLAGG = "311" OR pa90filen.PTILLAGG = "312"   
      THEN rgr = "2200".
   END.
   ELSE DO:   
      IF pa90filen.PTILLAGG = "310" OR pa90filen.PTILLAGG = "311" OR pa90filen.PTILLAGG = "312" /*OR pa90filen.PTILLAGG = "350" OR  
      pa90filen.PTILLAGG = "351"*/ THEN rgr = "2420".
   END.   
   

END PROCEDURE.



