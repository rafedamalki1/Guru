/*FASTKAPP.P*/
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{GLOBVAR2DEL1.I}
{NAMNDB.I}
 {KALKKAT20G.I}
/*Anders Olsson Elpool i Umeå AB  19 jan 2018 16:14:10*/
FIND FIRST FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT globforetag).
&SCOPED-DEFINE NEW 
&SCOPED-DEFINE SHARED 
DEFINE INPUT PARAMETER aonummer LIKE FAKTAONR.AONR NO-UNDO.
DEFINE INPUT PARAMETER delnummer LIKE FAKTAONR.DELNR NO-UNDO.
DEFINE OUTPUT PARAMETER utotarb AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER utotmask AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER utotutr AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER utotmtrl AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER utotovr AS DECIMAL NO-UNDO.

DEFINE NEW SHARED VARIABLE fastrec AS RECID NO-UNDO.
DEFINE VARIABLE xtypmtrl AS INTEGER NO-UNDO.
DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE monpris LIKE EBRPRIS.MONT NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE region AS LOGICAL NO-UNDO.
DEFINE VARIABLE emask3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
/*BEREDNING*/                                     
{EXTRATAB.I}
{LISTDEF.I}
{EXTRADATA.I}
DEFINE NEW SHARED TEMP-TABLE mtrl_temp2   
   {MTRLTEMP2TT.I}
{KALKTEMP.I}


offert = TRUE.
RUN fastkalk_UI.
ASSIGN
utotarb = totarb  
utotmask = totmask 
utotutr = totutr 
utotmtrl = totmtrl 
utotovr = totovr.

PROCEDURE fastkalk_UI :
   FIND FIRST KALKAONR WHERE KALKAONR.AONR = aonummer AND
   KALKAONR.DELNR = delnummer AND KALKAONR.STATUSNIV = "UF"
   USE-INDEX AONR NO-LOCK NO-ERROR. 
   IF NOT AVAILABLE KALKAONR THEN RETURN.
   IF KALKAONR.TYP = 1 OR KALKAONR.TYP = 2  THEN DO:
      FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = KALKAONR.KALKNR   
      NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE FASTSPEC THEN DO:      
      /*KALKÅR*/
      RUN kalkarstart_UI (INPUT FASTSPEC.KALKNR).
      IF globforetag = "ELPA" OR globforetag = "LULE" OR (globforetag = "GRAN" AND namndb() = "UTBI") THEN DO:
         FIND FIRST KALKUPP WHERE KALKUPP.KALKNR = FASTSPEC.KALKNR
         USE-INDEX KALKNR NO-LOCK NO-ERROR.
         IF AVAILABLE KALKUPP THEN xtypmtrl = KALKUPP.TYP.
         ELSE xtypmtrl = 1.
      END.
      ELSE DO:
         IF FASTSPEC.EGETMTRL = TRUE THEN xtypmtrl = 2.
         ELSE xtypmtrl = 1.
      END.
      RUN rakna_UI.
      RUN klar_UI.
   END.
   ELSE RETURN.       
END PROCEDURE.
PROCEDURE rakna_UI :

   FIND FIRST EBRPRIS WHERE EBRPRIS.ARTAL = FASTSPEC.KATAR
   USE-INDEX AR NO-LOCK NO-ERROR.  
   
   IF FASTSPEC.FAKTOR = TRUE THEN DO:
      FIND FIRST FAKTOR WHERE FAKTOR.KALKNR = FASTSPEC.KALKNR AND
      FAKTOR.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK NO-ERROR.               
   END.
   
   IF FASTSPEC.EGETPRIS = TRUE THEN DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = FASTSPEC.KALKNR AND
      KALKBEF.OMRADE = FASTSPEC.OMRADE AND KALKBEF.ARBKOD = "" AND
      KALKBEF.LOPNR = 0 USE-INDEX OMRADE NO-LOCK NO-ERROR.          
   END.
   ELSE DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND 
      KALKBEF.KATAR = FASTSPEC.KATAR
      USE-INDEX ARTAL NO-LOCK NO-ERROR.      
   END.
   IF NOT AVAILABLE KALKBEF THEN DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND 
      KALKBEF.KATAR = YEAR(TODAY)
      USE-INDEX ARTAL NO-LOCK NO-ERROR.      
   END.
   fastrec = RECID(FASTSPEC).
  /* RUN SUCCKALK.P.*/
   /*KALKÅR*/
   OPEN QUERY fastq FOR EACH FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR 
   AND FASTKALK.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK.
   GET FIRST fastq NO-LOCK.
   DO WHILE AVAILABLE(FASTKALK):
      IF FASTKALK.ARBKOD = "EGEN" THEN DO:
         FIND FIRST befbuff WHERE befbuff.KALKNR = FASTSPEC.KALKNR AND
         befbuff.OMRADE = FASTSPEC.OMRADE AND befbuff.ARBKOD = FASTKALK.ARBKOD AND
         befbuff.LOPNR = FASTKALK.LOPNR USE-INDEX OMRADE NO-LOCK NO-ERROR. 
         IF AVAILABLE befbuff THEN RUN skapa2_UI.
      END.
      ELSE IF FASTKALK.ARBKOD = "SUCC" THEN DO:
         RUN skapa3_UI.
      END.
      ELSE DO:
         IF FASTKALK.FAST = FALSE THEN RUN skapa_UI.
         ELSE RUN skapa4_UI.
      END.
      GET NEXT fastq NO-LOCK.
   END.
   CLOSE QUERY fastq.   
END PROCEDURE.

PROCEDURE raknakalar_UI :
   IF FASTSPEC.FAKTOR = TRUE THEN DO:
      FIND FIRST FAKTOR WHERE FAKTOR.KALKNR = FASTSPEC.KALKNR AND
      FAKTOR.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK NO-ERROR.               
   END.
   
   IF FASTSPEC.EGETPRIS = TRUE THEN DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = FASTSPEC.KALKNR AND
      KALKBEF.OMRADE = FASTSPEC.OMRADE AND KALKBEF.ARBKOD = "" AND
      KALKBEF.LOPNR = 0 USE-INDEX OMRADE NO-LOCK NO-ERROR.          
   END.
   ELSE DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND 
      KALKBEF.KATAR = hjkatvar[1]
      USE-INDEX ARTAL NO-LOCK NO-ERROR.      
   END.
   IF NOT AVAILABLE KALKBEF THEN DO:
      FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND 
      KALKBEF.KATAR = YEAR(TODAY)
      USE-INDEX ARTAL NO-LOCK NO-ERROR.      
   END.
   fastrec = RECID(FASTSPEC).
  /* RUN SUCCKALK.P.*/
   /*KALKÅR*/
   OPEN QUERY fastq FOR EACH FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR 
   AND FASTKALK.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK.
   GET FIRST fastq NO-LOCK.
   DO WHILE AVAILABLE(FASTKALK):
      IF FASTKALK.ARBKOD = "EGEN" THEN DO:
         FIND FIRST befbuff WHERE befbuff.KALKNR = FASTSPEC.KALKNR AND
         befbuff.OMRADE = FASTSPEC.OMRADE AND befbuff.ARBKOD = FASTKALK.ARBKOD AND
         befbuff.LOPNR = FASTKALK.LOPNR USE-INDEX OMRADE NO-LOCK NO-ERROR. 
         IF AVAILABLE befbuff THEN RUN skapa2artal_UI.
      END.
      ELSE DO:
         IF FASTKALK.FAST = FALSE THEN RUN skapaartal_UI.
         ELSE RUN skapa4artal_UI.
      END.
      GET NEXT fastq NO-LOCK.
   END.
   CLOSE QUERY fastq.   
END PROCEDURE.

PROCEDURE klar_UI :
   {KLAR.I}      
   kontroll = FALSE.   
   IF xtypmtrl = 2 THEN DO:   
      IF FASTSPEC.EGETMTRL = TRUE THEN DO:
         {MTRLKAL.I}         
         IF globforetag = "ELPA" OR globforetag = "GRAN" THEN DO:
            FIND FIRST kalk_temp WHERE kalk_temp.ARBKOD = "SUCC" NO-LOCK NO-ERROR.
            IF AVAILABLE kalk_temp THEN totmtrl = totmtrl + kalk_temp.MATERIEL.
         END.         
      END.         
   END.
   IF xtypmtrl = 3 THEN DO:
      {BERKALKSTART1.I}
      {BERKALK2.I}
      IF globforetag = "ELPA" OR globforetag = "GRAN" THEN DO:
         FIND FIRST kalk_temp WHERE kalk_temp.ARBKOD = "SUCC" NO-LOCK NO-ERROR.
         IF AVAILABLE kalk_temp THEN totmtrl = totmtrl + kalk_temp.MATERIEL.
      END.
   END.
   {BERKALKSTART2.I}
   {BERKALK2.I}
   {BERKALKSLUT.I}
END PROCEDURE.

PROCEDURE skapa2_UI :
        
END PROCEDURE.

PROCEDURE skapa3_UI :
            
END PROCEDURE.

PROCEDURE skapa4_UI :
          
END PROCEDURE.

PROCEDURE skapa_UI :
       
END PROCEDURE.
PROCEDURE skapa2artal_UI : 
                               
END PROCEDURE.

PROCEDURE  skapa4artal_UI:
    
END PROCEDURE.

PROCEDURE skapaartal_UI :
    
END PROCEDURE.
PROCEDURE procset_UI:  
  IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.            
END PROCEDURE .

