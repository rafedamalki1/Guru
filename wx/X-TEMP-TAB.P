/*x-temp-tab.p*/
OLIKA SMART LÖSNINGAR SÖK PÅ  ******************** FÖR NY FUNKTION
***********************
/*Lägga IN temp-db i gammla prog.*/
temp-db          PROGRESS   /*UNDER RT8              PROGRESS*/
  
  /*EFTER DEFINE FRAME */
/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Temp-Tables and Buffers:
      TABLE: ? T "?" NO-UNDO temp-db tidut
   END-TABLES.
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS
     
     /* Query rebuild information for BROWSE BROWSE-1
     _TblList          = "Temp-Tables.tidut"
     _FldNameList[1]   = Temp-Tables.tidut.ut     
     */
*****************************
/*UPPFÖLJNINGS LISTOR SE AOMBAPP.P*/
DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
   
   ASSIGN
   nrcol[1] = 1
   nrcol[2] = 2
   nrcol[3] = 3
   nrcol[4] = 4
   nrcol[5] = 5
   nrcol[6] = 6
   nrcol[7] = 7
   nrcol[8] = 8
   nrcol[9] = 9
   nrcol[10] = 10
   nrcol[11] = 11
   nrcol[12] = 13
   nrcol[13] = 14
   nrcol[14] = 15 
   nrcol[15] = 12    /*ny kolumn*/
   breddantal = 15   /*antal kolumner*/
   bredd[1] = 9
   bredd[2] = 16
   bredd[3] = 2
   bredd[4] = 6
   bredd[5] = 6
   bredd[6] = 6
   bredd[7] = 7
   bredd[8] = 7
   bredd[9] = 7
   bredd[10] = 8
   bredd[11] = 7
   bredd[12] = 8
   bredd[13] = 8
   bredd[14] = 8
   bredd[15] = 8.
   ASSIGN
   i = 2.     
   utnr[nrcol[1]] = 1.
   DO WHILE i <= breddantal:             
      utnr[i] = utnr[i - 1] + bredd[i - 1] + 1.            
      i = i + 1.
   END.   
   ASSIGN
   str = "".  
   i = 1.
   DO WHILE i <= utnr[breddantal] + bredd[breddantal] - 1:
      str = str + "=".     
      i = i + 1.
   END.   
   i = 2.      
   DO WHILE i <= breddantal:             
      SUBSTRING(str,(utnr[i] - 1),1) = ".".      
      i = i + 1.
   END.
   CREATE tidut.             
   ASSIGN                                                                                                       
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = "MONTÖR"             
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "BERED."         
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = "ÖVRIGA"  
   SUBSTRING(tidut.UT,utnr[nrcol[7]]) = "ARBETS"
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = "FRÄMMANDE TJ."
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = "MATERIEL"
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = "ÖVRIG"
   SUBSTRING(tidut.UT,utnr[nrcol[15]]) = "SUMMA"
   SUBSTRING(tidut.UT,utnr[nrcol[14]]) = "INTÄKT-"
   str2 = tidut.UT.                 
   CREATE tidut.      
   ASSIGN                               
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = CAPS(Guru.Konstanter:gaok)      
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = "ORT/BENÄNMING" 
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = "TIMMAR"             
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "TIMMAR"         
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = "TIMMAR"  
   SUBSTRING(tidut.UT,utnr[nrcol[7]]) = "KOSTNAD"
   SUBSTRING(tidut.UT,utnr[nrcol[8]]) = "GRÄVARE"  
   SUBSTRING(tidut.UT,utnr[nrcol[9]]) = "ÖVRIGA" 
   SUBSTRING(tidut.UT,utnr[nrcol[10]]) = "KOSTNAD"
   SUBSTRING(tidut.UT,utnr[nrcol[11]]) = "KOSTNAD"
   SUBSTRING(tidut.UT,utnr[nrcol[15]]) = "KOSTNAD"
   SUBSTRING(tidut.UT,utnr[nrcol[12]]) = "INTÄKT"   
   SUBSTRING(tidut.UT,utnr[nrcol[13]]) = "RESULTAT"
   SUBSTRING(tidut.UT,utnr[nrcol[14]]) = "PLAN".
   
   str3 = tidut.UT.                
   CREATE tidut.      
   tidut.UT = str.
*****************************
/*FÖNSTERPROBLEM*/
   APPLY "ENTRY" TO BRW_STANS IN FRAME {&FRAME-NAME}.
*****************************
/*byta FORMAT på poster i browser.*/
ON ROW-DISPLAY OF BROWSE-1 IN FRAME DEFAULT-FRAME
DO:
   tidtemp.tidlog:FORMAT IN BROWSE browse-1 = "ja/nej".
   
END.
*****************************
/*byta färg på poster i browser*/
ON ROW-DISPLAY OF BRW_UT IN FRAME FRAME-VINST
DO:
   IF uppvaltemp.VALDLISTA = "Projektuppföljningslista" THEN DO:
      IF SUBSTRING(tidut.UT,28,2) = "TK" THEN
      tidut.UT:FGCOLOR IN BROWSE {&BROWSE-NAME} = 12. 
      tidut.UT:BGCOLOR IN BROWSE {&BROWSE-NAME} = 11. 
   END.
END.
*****************************
flytta markör automatiskt när fältet är fyllt
      DEFINE FRAME DEFAULT-FRAME
      FILL-IN_PERSONALKOD AT ROW 2.77 COL 16.13 COLON-ALIGNED
      FILL-IN_PERSONALPERIOD AT ROW 18.59 COL 22.88 COLON-ALIGNED AUTO-RETURN 
      WITH 1 DOWN NO-BOX OVERLAY 
               SIDE-LABELS NO-UNDERLINE THREE-D 
               AT COL 1 ROW 1
               SIZE 98.88 BY 24.14.

*****************************
CENTRERA ELLER HÖGER VÄNSTER JUSTERA LABEL I BROWSER
DEFINE BROWSE BROWSE-1
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS BROWSE-1 C-Win _STRUCTURED
  QUERY BROWSE-1 NO-LOCK DISPLAY
      AONRTAB.AONR COLUMN-LABEL "AONR":C FORMAT "X(5)":U WIDTH 20
      SUBSTRING(AONRTAB.ORT,1,5) COLUMN-LABEL "KKK" FORMAT "X(5)":U
            WIDTH 15.13
*****************************
uppdatera direkt i browser   behövs bra då temptable
ON ENTRY OF sumtidtemp.START IN BROWSE BRW_TID /* Start!tid */
DO:
   DISPLAY sumtidtemp.START WITH BROWSE BRW_TID.
END.

ON LEAVE OF sumtidtemp.START IN BROWSE BRW_TID /* Start!tid */
DO:  
   IF sumtidtemp.START = INPUT BROWSE BRW_TID sumtidtemp.START THEN musz = musz.
   ELSE DO:
      sumtidtemp.START = INPUT BROWSE BRW_TID sumtidtemp.START.   
      IF sumtidtemp.START >= sumtidtemp.SLUT THEN DO:
         MESSAGE "Starttiden kan inte vara större än sluttiden!" VIEW-AS ALERT-BOX.      
         RETURN NO-APPLY.
      END.               
      DISPLAY sumtidtemp.START WITH BROWSE BRW_TID.
   END.
END.
*****************************
styra TAB och RETURN i updateringsbar browser
ON ANY-KEY OF stanstid.PERSONALKOD IN BROWSE BRW_STANS /* Enhet/!Sign */
DO:
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:            
      APPLY "ENTRY" TO stanstid.DATUM IN BROWSE BRW_STANS.      
      RETURN NO-APPLY.      
   END.   
END.
ON ENTRY OF stanstid.PERSONALKOD IN BROWSE BRW_STANS /* Enhet/!Sign */
DO:
   RUN visa_UI.  
   IF stanstid.FELNR NE 1 THEN DO:      
      IF stanstid.FELNR NE 0 THEN DO:
         RUN felnr_UI. 
         stanstid.FELNR = 0.    
         IF musz = TRUE THEN DO:
            musz = FALSE.
            RETURN NO-APPLY.        
         END.             
      END.
   END.      
END.
ON LEAVE OF stanstid.PERSONALKOD IN BROWSE BRW_STANS /* Enhet/!Sign */
DO:
   stanstid.PERSONALKOD = INPUT BROWSE BRW_STANS stanstid.PERSONALKOD.
   DISPLAY stanstid.PERSONALKOD WITH BROWSE BRW_STANS.
END.
/*sista posten på raden*/
ON LEAVE OF stanstid.LONTILLANTAL IN BROWSE BRW_STANS /* Antal */
DO:  
   IF forsta = TRUE THEN forsta = FALSE.
   ELSE DO:      
      stanstid.LONTILLANTAL = INPUT BROWSE BRW_STANS stanstid.LONTILLANTAL.
      DISPLAY stanstid.LONTILLANTAL WITH BROWSE BRW_STANS.   
      IF stanstid.FELTXT = "" THEN DO:
         IF stanstid.PERSONALKOD = "" AND kollraknare = FALSE THEN DO:
            DELETE stanstid.
            FIND FIRST stanstid NO-ERROR.
            IF NOT AVAILABLE stanstid THEN DO:
               kollraknare = TRUE.
               RUN ngnkey_UI.
               APPLY "ENDKEY" TO stanstid.LONTILLANTAL IN BROWSE BRW_STANS.
            END.
            ELSE status-ok = BRW_STANS:REFRESH() IN FRAME {&FRAME-NAME}.
         END.
         ELSE IF stanstid.PERSONALKOD NE "" THEN DO: 
            kollraknare = FALSE.
            RUN ngnkey_UI.   
            APPLY "ENDKEY" TO stanstid.LONTILLANTAL IN BROWSE BRW_STANS.
         END.  
         ELSE DO:
            APPLY "ENDKEY" TO stanstid.LONTILLANTAL IN BROWSE BRW_STANS.
         END.
      END.  
      ELSE IF stanstid.PERSONALKOD = "" THEN DO:
         DELETE stanstid.
         FIND FIRST stanstid NO-ERROR.
         IF NOT AVAILABLE stanstid THEN DO:
            kollraknare = TRUE.
            RUN ngnkey_UI.
            APPLY "ENDKEY" TO stanstid.LONTILLANTAL IN BROWSE BRW_STANS.
         END.
         ELSE status-ok = BRW_STANS:REFRESH() IN FRAME {&FRAME-NAME}.
      END.
   END.   
END.
PROCEDURE ngnkey_UI :
   DEFINE VARIABLE nypkod LIKE PERSONALTAB.PERSONALKOD NO-UNDO.
   DEFINE VARIABLE nyoverut LIKE PERSONALTAB.OVERTIDUTTAG NO-UNDO.
   {TRYCKS.I}   
   IF KEYFUNCTION(LASTKEY) = ("TAB") OR KEYFUNCTION(LASTKEY) = ("RETURN")  OR regbtn = TRUE THEN DO:      
      regdatum = stanstid.DATUM.
      nypkod = PERSONALTAB.PERSONALKOD.
      nyoverut = stanstid.OVERTIDUTTAG.
      CREATE stanstid.   
      ASSIGN      
      stanstid.ORDNING = 99
      stanstid.DATUM = regdatum
      stanstid.UTRYCKNING = FALSE
      stanstid.VECKOVILA = FALSE
      stanstid.OVERTIDUTTAG = nyoverut
      stanstid.START = 0000
      stanstid.SLUT = 0000.     
      stansrec = RECID(stanstid).
      IF globforetag = "ESAN" OR globforetag = "ELPA" THEN DO:
         ASSIGN   
         stanstid.PERSONALKOD = nypkod.
      END.
      OPEN QUERY BRW_STANS FOR EACH stanstid USE-INDEX TID NO-LOCK.            
      RUN repoao_UI (INPUT stansrec).      
   END.         
END PROCEDURE.
/*HITTA RÄTT COLUMN*/
PROCEDURE felnr_UI :
   APPLY "VALUE-CHANGED" TO BRW_STANS IN FRAME {&FRAME-NAME}.
   IF stanstid.FELNR NE 0 THEN musz = TRUE.
   IF stanstid.FELNR = 1 THEN DO:
      APPLY "ENTRY" TO stanstid.PERSONALKOD IN BROWSE BRW_STANS.
      RETURN.
   END.   
   ELSE IF stanstid.FELNR = 2 THEN DO:
      APPLY "ENTRY" TO stanstid.DATUM IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 3 THEN DO:
      APPLY "ENTRY" TO stanstid.OVERTIDUTTAG IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 4 THEN DO:
      APPLY "ENTRY" TO stanstid.TRAKTAMENTE IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 5 THEN DO:
      APPLY "ENTRY" TO stanstid.AONR IN BROWSE BRW_STANS.      
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 6 THEN DO:
      APPLY "ENTRY" TO stanstid.LONTILLAGG IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 7 THEN DO:
      APPLY "ENTRY" TO stanstid.LONTILLANTAL IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 8 THEN DO:
      APPLY "ENTRY" TO stanstid.START IN BROWSE BRW_STANS.
      RETURN.
   END.
   ELSE IF stanstid.FELNR = 9 THEN DO:
      APPLY "ENTRY" TO stanstid.SLUT IN BROWSE BRW_STANS.
      RETURN.
   END.  
   ELSE IF stanstid.FELNR = 10 THEN DO:
      APPLY "ENTRY" TO stanstid.VECKOVILA IN BROWSE BRW_STANS.
      RETURN.
   END.   
  
END PROCEDURE.
PROCEDURE visa_UI :
   DISPLAY
   stanstid.AONR stanstid.DATUM stanstid.DELNR stanstid.LONTILLAGG stanstid.LONTILLANTAL 
   stanstid.OVERTIDUTTAG stanstid.PERSONALKOD stanstid.SLUT stanstid.START stanstid.TRAKTAMENTE 
   stanstid.UTRYCKNING stanstid.VECKOVILA
   WITH BROWSE BRW_STANS.
   IF stanstid.PERSONALKOD NE "" THEN stanstid.ORDNING = 0.   
END PROCEDURE.

*****************************
sorta i browser
/*XBRWSOK.W*/
/*i definitoner*/
{BRWSOK.I}
/*enabla ett fält obs inga row mark
FÖR JOIN QUERY SE ÄVEN HITTAJOIN_UI
*/ 
   /*MAIN*/
   ASSIGN
   &Scoped-define BROWSE-NAME BRW_ANSV
   ANSVARIGTAB.PERSONALKOD:READ-ONLY IN BROWSE   {&BROWSE-NAME} = TRUE    
   &Scoped-define BROWSE-NAME BRW_AVD
   AVDELNING.AVDELNINGNR:READ-ONLY IN BROWSE     {&BROWSE-NAME} = TRUE
   &Scoped-define BROWSE-NAME BRW_GODK
   GODKANNARTAB.PERSONALKOD:READ-ONLY IN BROWSE  {&BROWSE-NAME} = TRUE 
      &Scoped-define BROWSE-NAME BRW_MARK
   markpers.PERSONALKOD:READ-ONLY IN BROWSE      {&BROWSE-NAME} = TRUE
   &Scoped-define BROWSE-NAME BRW_OMR
   OMRADETAB.OMRADE:READ-ONLY IN BROWSE          {&BROWSE-NAME} = TRUE
   &Scoped-define BROWSE-NAME BRW_PERS
   PERSONALTAB.PERSONALKOD:READ-ONLY IN BROWSE   {&BROWSE-NAME} = TRUE
   &Scoped-define BROWSE-NAME BRW_VAVD
   avdelningtemp.AVDELNINGNR:READ-ONLY IN BROWSE {&BROWSE-NAME} = TRUE
   &Scoped-define BROWSE-NAME BRW_VOMR
   omrtemp.OMRADE:READ-ONLY IN BROWSE            {&BROWSE-NAME} = TRUE.
/*TRIGGER*/
ON ANY-PRINTABLE OF BRW_AVD IN FRAME FRAME-B /* Avdelningar */
DO:
   brwsok = LAST-EVENT:LABEL. 
   RUN hitta_UI.
   {musarrow.i}
   multitid = ETIME.
END.
ON START-SEARCH OF BRW_ANSV IN FRAME FRAME-B /* Ansvariga tidredovisare */
DO:
   RUN brwclic_UI (INPUT 1).
   /*   SE brwclic_UI 
   IF brwvar NE 1 THEN brwsortvar = 0.
   brwvar = 1.      /*VILKEN BROWSER ÄR DET brwvar = 2 FÖR NÄSTA BROWSER*/
   brwwh = BRW_ANSV:CURRENT-COLUMN.   
   brwsok = LAST-EVENT:LABEL.     
   {muswait.i}   
   RUN opensok_UI.
   {musarrow.i}
   */
END.
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE brwclic_UI C-Win 
PROCEDURE brwclic_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE INPUT PARAMETER brwstart AS INTEGER NO-UNDO.
   IF brwvar NE brwstart THEN brwsortvar = 0.
   ASSIGN
   brwvar = brwstart.
   IF brwstart = 1 THEN brwwh = BRW_ANSV:CURRENT-COLUMN IN FRAME {&FRAME-NAME}.
   ELSE IF brwstart = 2 THEN brwwh = BRW_GODK:CURRENT-COLUMN.
   ELSE IF brwstart = 3 THEN brwwh = BRW_MARK:CURRENT-COLUMN.
   ELSE IF brwstart = 4 THEN brwwh = BRW_OMR:CURRENT-COLUMN.
   ELSE IF brwstart = 5 THEN brwwh = BRW_PERS:CURRENT-COLUMN.
   ELSE IF brwstart = 6 THEN brwwh = BRW_AVD:CURRENT-COLUMN.
   ELSE IF brwstart = 7 THEN brwwh = BRW_VAVD:CURRENT-COLUMN.
   ELSE IF brwstart = 8 THEN brwwh = BRW_VOMR:CURRENT-COLUMN.
   brwsok = LAST-EVENT:LABEL.     
   {muswait.i}   
   RUN opensok_UI.
   {musarrow.i}
END PROCEDURE.

/*PROCEDURER*/
PROCEDURE hitta_UI :
   {muswait.i}
   IF ETIME - multitid <= 500 THEN DO:
      multibrwsok = multibrwsok + brwsok.
   END.
   ELSE multibrwsok = brwsok.
   IF brwvar = 1 THEN DO:
      /*ANSVARIG*/
      &Scoped-define BROWSE-NAME BRW_ANSV      
      IF brwsortvar = 1 THEN DO:                      
         FIND NEXT ANSVARIGTAB WHERE ANSVARIGTAB.PERSONALKOD BEGINS multibrwsok
         NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE ANSVARIGTAB THEN DO:
            FIND FIRST ANSVARIGTAB WHERE ANSVARIGTAB.PERSONALKOD BEGINS multibrwsok
            NO-LOCK NO-ERROR. 
         END.                    
      END.   
      IF brwsortvar = 2 THEN DO:
         FIND NEXT ANSVARIGTAB WHERE ANSVARIGTAB.FORNAMN BEGINS multibrwsok
         NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE ANSVARIGTAB THEN DO:
            FIND FIRST ANSVARIGTAB WHERE ANSVARIGTAB.FORNAMN BEGINS multibrwsok
            NO-LOCK NO-ERROR. 
         END.             
      END.
      IF brwsortvar = 3 THEN DO:
         FIND NEXT ANSVARIGTAB WHERE ANSVARIGTAB.EFTERNAMN BEGINS multibrwsok
         NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE ANSVARIGTAB THEN DO:
            FIND FIRST ANSVARIGTAB WHERE ANSVARIGTAB.EFTERNAMN BEGINS multibrwsok
            NO-LOCK NO-ERROR. 
         END.             
      END.
      IF AVAILABLE ANSVARIGTAB THEN DO:        
         RUN repo_UI (INPUT RECID(ANSVARIGTAB)).
         status-ok = {&BROWSE-NAME}:SELECT-FOCUSED-ROW() IN FRAME {&FRAME-NAME} NO-ERROR.        
      END.
   END.
   /*OM LOGISK VAR
   IF brwsortvar = 6 THEN DO:
         FIND NEXT PERSONALTAB WHERE STRING(PERSONALTAB.AKTIV,"AKTIV/INAKTIV") BEGINS multibrwsok
         USE-INDEX KUNDNR NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE PERSONALTAB THEN DO:
            FIND FIRST PERSONALTAB WHERE STRING(PERSONALTAB.AKTIV,"AKTIV/INAKTIV") BEGINS multibrwsok
            USE-INDEX KUNDNR NO-LOCK NO-ERROR. 
         END.      
   */   

   {musarrow.i}
END PROCEDURE.



PROCEDURE opensok_UI :
   {muswait.i}     
   IF brwvar = 1 THEN DO:
      &Scoped-define BROWSE-NAME BRW_ANSV
      /*ANSVARIG*/    
      CASE brwwh:NAME:   
         WHEN "PERSONALKOD" THEN DO:
            IF brwsortvar = 1 THEN RETURN.
            brwsortvar = 1.
            OPEN QUERY {&BROWSE-NAME} FOR EACH ANSVARIGTAB NO-LOCK.      
            RETURN.
         END.
         WHEN "FORNAMN" THEN DO:
            IF brwsortvar = 2 THEN RETURN.
            brwsortvar = 2.
            OPEN QUERY {&BROWSE-NAME} FOR EACH ANSVARIGTAB NO-LOCK BY ANSVARIGTAB.FORNAMN.
            RETURN.
         END.
         WHEN "EFTERNAMN" THEN DO:
            IF brwsortvar = 3 THEN RETURN.
            brwsortvar = 3.
            OPEN QUERY {&BROWSE-NAME} FOR EACH ANSVARIGTAB NO-LOCK BY ANSVARIGTAB.EFTERNAMN.
            RETURN.
         END.
      END CASE.
   END.
   {musarrow.i}
END PROCEDURE.


PROCEDURE hittajoin_UI :
   /*REPO PÅ FÖRSTA TAB QUERYN*/
   {muswait.i}
   IF ETIME - multitid <= 500 THEN DO:
      multibrwsok = multibrwsok + brwsok.
   END.
   ELSE multibrwsok = brwsok.
   IF brwvar = 1 THEN DO:
      /*ANvändare*/
      &Scoped-define BROWSE-NAME BRW_ANV      
      IF brwsortvar = 1 THEN DO:
         FIND NEXT ANVANDARE WHERE ANVANDARE.PERSONALKOD BEGINS multibrwsok
         NO-LOCK NO-ERROR. 
         IF NOT AVAILABLE ANVANDARE THEN DO:
            FIND FIRST ANVANDARE WHERE ANVANDARE.PERSONALKOD BEGINS multibrwsok
            NO-LOCK NO-ERROR. 
         END.
      END.
      IF brwsortvar = 2 THEN DO:
         REPEAT:
            FIND NEXT PERSONALTAB WHERE PERSONALTAB.FORNAMN BEGINS multibrwsok
            NO-LOCK NO-ERROR. 
            IF NOT AVAILABLE PERSONALTAB THEN DO:
               FIND FIRST PERSONALTAB WHERE PERSONALTAB.FORNAMN BEGINS multibrwsok
               NO-LOCK NO-ERROR. 
               IF AVAILABLE PERSONALTAB THEN DO:
                  FIND FIRST ANVANDARE WHERE ANVANDARE.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.         
               END.
               IF AVAILABLE ANVANDARE THEN LEAVE.
               ELSE RETURN.
            END.
            IF NOT AVAILABLE PERSONALTAB THEN RETURN.
            FIND FIRST ANVANDARE WHERE ANVANDARE.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.         
            IF AVAILABLE ANVANDARE THEN LEAVE.
         END.                      
      END.
      
      IF AVAILABLE ANVANDARE THEN DO:            
         RUN repo_UI (INPUT RECID(ANVANDARE)).
         status-ok = {&BROWSE-NAME}:SELECT-FOCUSED-ROW() IN FRAME {&FRAME-NAME} NO-ERROR.        
      END.
   END.       
   {musarrow.i}
END PROCEDURE.
*****************************
RUN ToggleLeftText (toggle-1:HWND).
RUN ToggleLeftText (toggle-2:HWND).

 
    
PROCEDURE ToggleLeftText :
/* -------------------------------------------------------------
   purpose: place the label on the left side.
   do not run this procedure more than once for each toggle-box 
   ------------------------------------------------------------- */
 
  DEFINE INPUT PARAMETER HWND AS INTEGER.
 
  DEF VAR styles      AS INTEGER NO-UNDO.
  DEF VAR returnvalue AS INTEGER NO-UNDO.
 
  RUN GetWindowLongA(HWND, {&GWL_STYLE}, OUTPUT styles).
  styles = styles + {&BS_LEFTTEXT}.
  RUN SetWindowLongA(HWND, {&GWL_STYLE}, styles, OUTPUT styles).
 
  /* force a repaint */
  RUN InvalidateRect(HWND,0,1,OUTPUT returnvalue).
 
END PROCEDURE.
*****************************
