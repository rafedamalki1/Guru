  /*GKALEKORE3.P*/
/* BARA PERSONER MED BRAVO = TRUE 
   AUTO:
   TRAKTEMENTE "TRA" kostnad = antal * TRAKTATAB.ERSATTNING
   ÖVERTID "OVE"     kostnad = (TIDREGITAB.PRIS + (TIDREGITAB.PRIS * multi)) * antal.
   RESTID "RES"      kostnad = (TIDREGITAB.PRIS + (TIDREGITAB.PRIS* multi)) * antal.        
   RESTID "REL"      kostnad = (TIDREGITAB.PRIS * multi) * resantal. 
   ÖVERTID "OVE"     kostnad = (TIDFEL.PRIS + (TIDFEL.PRIS * multi)) * antal.
   RESTID "RES"      kostnad = (TIDFEL.PRIS + (TIDFEL.PRIS* multi)) * antal.        
   RESTID "REL"      kostnad = (TIDFEL.PRIS * multi) * resantal. 
   MAN: 
   LÖNETILLÄGG
      "EJE"  = KODER SOM EJ TAS MED
      "OVE"          kostnad = (TOT.PRIS. + (TOT.PRIS. * multi)) * antal.
      "OV2"          kostnad = (TOT.PRIS. * multi) * antal.
      LÖNETILLÄGG SOM SKALL TOLKAS SOM ÖVERTID
      "RES"          kostnad = (RESTID... + (RESTID... * multi)) * antal.        
      "REL"          kostnad = (RESTID... * multi) * resantal. 
      "RE2"          kostnad = (TOT.PRIS. + (TOT.PRIS. * multi)) * antal.        
      "LON"
      "BIL"    SOM "LON" 
      om ENHET "KR"  kostnad = antal.
      om ENHET "TI"  kostnad = LONTILL.ERSATTNING * antal.
      övrigt  kostnad = LONTILL.ERSATTNING * antal.
       OBS ! MÅLTIDSAVDRAG HÅRDKODAS       
   ÖVERTID  
     "OVE"           kostnad = (TOT.PRIS. + (TOT.PRIS. * multi)) * antal.
   BEREDSKAP
                     kostnad = antal * BERKOD.ERSATTNING    
    
*/

{SOKDEF.I}
DEFINE NEW SHARED VARIABLE varforetypval AS INTEGER EXTENT 100 NO-UNDO. 
DEFINE NEW SHARED VARIABLE varforetypchar AS CHARACTER EXTENT 100 NO-UNDO.     
DEFINE NEW SHARED VARIABLE globforetag AS CHARACTER NO-UNDO.
 
 
DEFINE VARIABLE appfel AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO. 
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO. 
DEFINE VARIABLE ekrid AS RECID EXTENT 50 NO-UNDO.
DEFINE VARIABLE aoomrade LIKE AONRTAB.OMRADE NO-UNDO.          
DEFINE VARIABLE timtid AS DECIMAL FORMAT "99.99" NO-UNDO. 
DEFINE VARIABLE multi AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE berkostnad AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE totpristim AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE reskod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE resantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE resbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE ovkod LIKE TIDREGITAB.OVERTIDTILL NO-UNDO. 
DEFINE VARIABLE ovantal LIKE TIDREGITAB.OVERANTAL NO-UNDO.
DEFINE VARIABLE ovbelopp LIKE EKRAPPRESULT.EOVERBELOPP NO-UNDO. 
DEFINE VARIABLE trakod LIKE TIDREGITAB.TRAKTKOD NO-UNDO. 
DEFINE VARIABLE traantal LIKE TIDREGITAB.TRAKTANTAL NO-UNDO.
DEFINE VARIABLE trabelopp LIKE EKRAPPRESULT.ETRAKTBELOPP NO-UNDO. 
DEFINE VARIABLE lonkod LIKE TIDREGITAB.LONTILLAGG NO-UNDO. 
DEFINE VARIABLE lonantal LIKE TIDREGITAB.LONTILLANTAL NO-UNDO.
DEFINE VARIABLE lonbelopp LIKE EKRAPPRESULT.ELONBELOPP NO-UNDO. 
DEFINE VARIABLE berkodvar LIKE TIDREGITAB.BEREDSKAP NO-UNDO. 
DEFINE VARIABLE bbantal LIKE TIDREGITAB.BERANTAL NO-UNDO.
DEFINE VARIABLE berbelopp LIKE EKRAPPRESULT.EBERBELOPP NO-UNDO.
DEFINE VARIABLE pkod LIKE PERSONALTAB.PERSONALKOD NO-UNDO.
DEFINE VARIABLE typover LIKE EKRAPPRESULT.ERESULTENH NO-UNDO. 
DEFINE VARIABLE typdatum AS DATE NO-UNDO. 
DEFINE VARIABLE kodanst LIKE ANSTFORMTAB.KOD NO-UNDO.
DEFINE VARIABLE sattfore AS CHARACTER NO-UNDO.

DEFINE QUERY persq FOR PERSONALTAB.  

DEFINE TEMP-TABLE ekoforst
   FIELD FTG AS CHARACTER
   FIELD ENY LIKE EKRAPPRESULT.ENY 
   FIELD EPERSONALKOD LIKE EKRAPPRESULT.EPERSONALKOD 
   FIELD EPROJEKT LIKE EKRAPPRESULT.EPROJEKT
   FIELD DELNR LIKE AONRTAB.DELNR 
   FIELD EORG LIKE EKRAPPRESULT.EORG     
   FIELD EGEO LIKE EKRAPPRESULT.EGEO  
   FIELD FELDEBKRED AS LOGICAL
   FIELD EVERDATUM AS DATE 
   FIELD EOVERJA LIKE EKRAPPRESULT.EOVERJA
   FIELD ERESULTENH LIKE EKRAPPRESULT.ERESULTENH 
   FIELD EBELOPP LIKE  EKRAPPRESULT.EBELOPP 
   FIELD EANTAL LIKE EKRAPPRESULT.EANTAL 
   FIELD ETIMMAR LIKE EKRAPPRESULT.EANTAL                
   FIELD ELONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD ELONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    
   FIELD ELONBELOPP LIKE EKRAPPRESULT.ELONBELOPP         
   FIELD PERSTYP AS CHARACTER         
   INDEX PERSORG IS PRIMARY EPERSONALKOD EORG EGEO EPROJEKT DELNR ASCENDING.
pkod = "".
FIND FIRST FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.
{FORESTYR.I}
DEFINE TEMP-TABLE ltemp NO-UNDO LIKE LONTILL.
FOR EACH LONTILL WHERE SUBSTRING(LONTILL.TYPKOD,1,3) = "re3" NO-LOCK:
   CREATE ltemp.
   BUFFER-COPY LONTILL TO ltemp.
END.
DEFINE QUERY tidq FOR ltemp,TIDREGITAB.
OPEN QUERY persq 
FOR EACH PERSONALTAB WHERE PERSONALTAB.BRAVO = TRUE USE-INDEX PERSONALKOD NO-LOCK.
GET FIRST persq NO-LOCK.
DO WHILE AVAILABLE(PERSONALTAB):
   FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
   FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR NO-LOCK NO-ERROR.
   FIND FIRST JURPERS WHERE JURPERS.JUDID = AVDELNING.POSTANST NO-LOCK NO-ERROR.
   IF JURPERS.JUDID = "GKEAB" THEN sattfore = "100".
   ELSE IF JURPERS.JUDID = "GSEAB" THEN sattfore = "180".
   ELSE sattfore = "999".
   aoomrade = "".
   persrec = RECID(PERSONALTAB).   
   IF pkod NE PERSONALTAB.PERSONALKOD THEN DO:
      pkod = PERSONALTAB.PERSONALKOD.        
      persrec = RECID(PERSONALTAB).
      FIND FIRST ANSTFORMTAB WHERE
      ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.
      kodanst = ANSTFORMTAB.KOD.
   END.  

   OPEN QUERY tidq FOR EACH ltemp WHERE ltemp.KOD = kodanst,
   EACH TIDREGITAB WHERE
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIDREGITAB.VECKOKORD NE "" AND 
   YEAR(TIDREGITAB.DATUM) = 2004 AND TIDREGITAB.LONTILLAGG = ltemp.LONTILLAGG
   USE-INDEX PSTART NO-LOCK. 
   
   GET FIRST tidq NO-LOCK.
   DO WHILE AVAILABLE(TIDREGITAB):
      totpristim = TIDREGITAB.PRIS.
      FIND FIRST AONRTAB WHERE AONRTAB.AONR = TIDREGITAB.AONR AND
      AONRTAB.DELNR = TIDREGITAB.DELNR USE-INDEX AONR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE AONRTAB THEN DO:
         aoomrade = PERSONALTAB.OMRADE. 
         IF TIDREGITAB.AONR = "" THEN aoomrade = PERSONALTAB.OMRADE. 
         ELSE DO:
            MESSAGE "AONR" TIDREGITAB.AONR TIDREGITAB.DELNR "FINNS EJ! KONTAKTA ELPOOL"
            VIEW-AS ALERT-BOX.
         END.
      END.    
      ELSE DO:
         aoomrade = AONRTAB.OMRADE.   
         IF AONRTAB.OMRADE = "" THEN aoomrade = PERSONALTAB.OMRADE.   
      END.      
      IF TIDREGITAB.PRISTYP = 'FRÅNVARO.' THEN DO: 
         musz = TRUE.	        	      	       
      END.
      ELSE IF TIDREGITAB.PRISTYP = 'RESTID...' THEN DO: 
         musz = TRUE.	        	      	       
      END.
      /*"EJ DEBI.."*/
      ELSE IF TIDREGITAB.PRISTYP = 'EJ DEBI..' THEN DO: 
         musz = TRUE.	        	      	       
      END.
      IF musz = FALSE THEN DO:
         RUN tidmed_UI.        
      END.
      musz = FALSE.
      GET NEXT tidq NO-LOCK.    
   END.  /*ELSE DO*/
   MESSAGE PERSONALTAB.PERSONALKOD.
   GET NEXT persq NO-LOCK.
END.   /*FOR EACH*/     

RUN GKALEKO2RE3.P (INPUT TABLE ekoforst).

PROCEDURE tidmed_UI:
   IF MONTH(TODAY) = 01 THEN DO:
      typdatum = DATE(12,31,YEAR(TODAY) - 1).
   END.
   ELSE DO:   
      typdatum = DATE((MONTH(TODAY)),01,YEAR(TODAY)) - 1.
   END.
       /*LONETILLAGG*/
   ASSIGN
   lonbelopp = 0
   lonkod = ""
   lonantal = 0.
   IF TIDREGITAB.LONTILLAGG NE " " THEN DO:
      ASSIGN
      lonkod = TIDREGITAB.LONTILLAGG
      lonantal = TIDREGITAB.LONTILLANTAL.
      RUN lon_UI.                    
   END.        

END PROCEDURE.
PROCEDURE lon_UI:
   musz = FALSE.
   multi = 0.      
   typover = "LON".  
   FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
   LONTILL.LONTILLAGG = lonkod 
   USE-INDEX LON NO-LOCK NO-ERROR.
   IF NOT AVAILABLE LONTILL THEN RETURN.
   ASSIGN
   typover = SUBSTRING(LONTILL.TYPKOD,1,3)     
   multi =  LONTILL.MULTIP.                
   IF typover NE  "re3" THEN RETURN.
   IF typover = "RE3" THEN DO:
      FIND FIRST LONTILL WHERE LONTILL.KOD = kodanst AND
      LONTILL.LONTILLAGG = lonkod USE-INDEX LON NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL THEN DO:
         {SOKSTART.I}
         ASSIGN
         soktemp.SOKVAL = 1
         soktemp.SOKINT[1] = varforetypval[4]
         soktemp.SOKCHAR[2] = PERSONALTAB.PERSONALKOD
         soktemp.SOKCHAR[3] = 'TOT.PRIS.'
         soktemp.SOKCHAR[4] = TIDREGITAB.OVERTIDTILL 
         soktemp.SOKDATE[1] = TIDREGITAB.DATUM.
         {SOKANROP.I}
         nytid = lonantal.
         RUN TIMSEK.P.
         lonantal = (sekunder / 3600). 
         lonbelopp = soktemp.SOKDECI[1] * multi * lonantal.
      END.
   END.

   FIND FIRST ekoforst WHERE
   ekoforst.FTG = sattfore AND
   ekoforst.ERESULTENH = typover AND
   ekoforst.ENY = FALSE AND
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD AND 
   ekoforst.EORG = PERSONALTAB.OMRADE AND 
   ekoforst.EGEO = aoomrade AND
   ekoforst.EVERDATUM = typdatum AND
   ekoforst.EPROJEKT = TIDREGITAB.AONR AND
   ekoforst.DELNR = TIDREGITAB.DELNR AND
   ekoforst.ELONTILLAGG = lonkod
   USE-INDEX PERSORG EXCLUSIVE-LOCK NO-ERROR.  
   IF NOT AVAILABLE ekoforst THEN DO:
      CREATE ekoforst.
   END.
   ASSIGN 
   ekoforst.FTG = sattfore
   ekoforst.ENY = FALSE
   ekoforst.ERESULTENH = typover
   ekoforst.EPERSONALKOD = TIDREGITAB.PERSONALKOD 
   ekoforst.EPROJEKT = TIDREGITAB.AONR 
   ekoforst.DELNR = TIDREGITAB.DELNR 
   ekoforst.EORG = PERSONALTAB.OMRADE  
   ekoforst.EGEO = aoomrade 
   ekoforst.ELONTILLAGG = lonkod       
   ekoforst.EVERDATUM = typdatum
   ekoforst.ELONTILLANTAL = ekoforst.ELONTILLANTAL + lonantal  
   ekoforst.ELONBELOPP = ekoforst.ELONBELOPP + lonbelopp. 
END PROCEDURE.                
