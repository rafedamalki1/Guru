/*WOKSKKORTU.P*/

         
                              

/*DEFINE SHARED VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valomrade AS CHARACTER NO-UNDO.  */
DEFINE VARIABLE totheight AS DECIMAL NO-UNDO.
DEFINE VARIABLE markag AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader2 AS INTEGER NO-UNDO.
DEFINE VARIABLE extram AS INTEGER NO-UNDO.
DEFINE VARIABLE emg AS INTEGER NO-UNDO.
DEFINE VARIABLE uColumn  AS INTEGER INITIAL 0.
DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE link AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytcol AS LOGICAL NO-UNDO.
DEFINE VARIABLE bytacol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytccol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytgcol AS CHARACTER NO-UNDO.
DEFINE VARIABLE radrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE anradrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE hjsakr AS CHARACTER NO-UNDO.
DEFINE VARIABLE antskap AS INTEGER NO-UNDO.
DEFINE VARIABLE hjantskap AS INTEGER NO-UNDO.
DEFINE VARIABLE skapstorlek AS INTEGER NO-UNDO.
DEFINE VARIABLE frikortapph AS HANDLE NO-UNDO.

DEFINE VARIABLE wdGoToBookmark AS INTEGER NO-UNDO INITIAL -1.
DEFINE VARIABLE chWord AS COM-HANDLE     NO-UNDO.
DEFINE VARIABLE chDoc  AS COM-HANDLE     NO-UNDO. 
DEFINE VARIABLE bokvalue AS CHARACTER NO-UNDO.
DEFINE VARIABLE bokname AS CHARACTER NO-UNDO.


DEFINE TEMP-TABLE uppfoltemp   
   FIELD FORETAG AS CHARACTER
   FIELD ANVANDARE AS CHARACTER  
   FIELD ALLAMA AS LOGICAL
   FIELD VALVARD AS CHARACTER
   FIELD FORSTA AS LOGICAL
   FIELD STAMP AS LOGICAL.  
{TIDUTTT.I}

DEFINE TEMP-TABLE bskaptemp NO-UNDO
   FIELD ENR       AS CHARACTER FORMAT "X(11)" LABEL "Enr"             
   FIELD BENAMNING AS CHARACTER FORMAT "x(40)" LABEL "Benämning"
   FIELD ENHET     AS CHARACTER FORMAT "x(5)" LABEL "Enhet"    
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"    
   FIELD PRIS      AS DECIMAL   FORMAT ">>>>99.99" INITIAL 0 LABEL "Pris"     
   FIELD LEVKOD    AS CHARACTER FORMAT "x(4)" LABEL "LEV-ID"   
   FIELD MODUL     AS INTEGER   FORMAT ">>>9" INITIAL 0 LABEL "Moduler"  
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"
   FIELD BERSKAPROW AS ROWID
   INDEX KOD IS PRIMARY KTYPKOD KOD
   INDEX MOD KTYPKOD MODUL.

DEFINE TEMP-TABLE bsktemp NO-UNDO
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"       
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"   
   INDEX KOD IS PRIMARY KTYPKOD KOD.

DEFINE SHARED VARIABLE lin_rowid AS ROWID NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
/*DEFINE VARIABLE chExcelApplication      AS COM-HANDLE.
DEFINE VARIABLE chWorkbook              AS COM-HANDLE.
DEFINE VARIABLE chWorksheet             AS COM-HANDLE.
DEFINE VARIABLE chChart                 AS COM-HANDLE.
DEFINE VARIABLE chWorksheetRange        AS COM-HANDLE.
DEFINE VARIABLE iCount                  AS INTEGER.
DEFINE VARIABLE iIndex                  AS INTEGER.
DEFINE VARIABLE iMonth                  AS INTEGER.
DEFINE VARIABLE dAnnualQuota            AS DECIMAL.
DEFINE VARIABLE dTotalSalesAmount       AS DECIMAL.     */
/*DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.
DEFINE VARIABLE cRange                  AS CHARACTER.*/
DEFINE VARIABLE radnrS                  AS CHARACTER.
DEFINE VARIABLE pristext                AS CHARACTER.
DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vkab AS CHARACTER NO-UNDO.
DEFINE VARIABLE vkabstl AS CHARACTER NO-UNDO.
DEFINE VARIABLE sidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE bilnamn AS CHARACTER NO-UNDO.
&Scoped-define NEW 
&Scoped-define SHARED SHARED
{KONSTRMTRL.I}
{KONVALTEMP.I}     
{LISTMTRL.I}
{KONID.I}   
{FRITEMP.I} 
{BERSKAP.I}
{MARKGRUPP.I}
DEFINE BUFFER kon_valbuff FOR kon_val.   
DEFINE BUFFER kn_valbuff FOR kon_val.   
/*test lena
{BERANN.I} */
DEFINE INPUT PARAMETER mall AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR list_mtrl.
DEFINE INPUT PARAMETER TABLE FOR kon_id.
DEFINE INPUT PARAMETER TABLE FOR fri_temp.
DEFINE INPUT PARAMETER TABLE FOR kon_val.
DEFINE INPUT PARAMETER TABLE FOR konstvaltemp.
DEFINE INPUT PARAMETER TABLE FOR berskaptemp.





{GLOBVAR2DEL1.I}  
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
DEFINE TEMP-TABLE blandnamntemp NO-UNDO
   FIELD NAMN AS CHARACTER.


/*IF mall = 19 THEN DO:       
   /* Kabelskåp FORTUM EON*/   
   ASSIGN   
   fnamn = "KskFortumEON.doc".    
END.*/
/*IF mall = 20 THEN DO:       
   /*Nätstation FORTUM */   
   ASSIGN   
   fnamn = "NSTNFortum.doc".    
END.*/
/*IF mall = 21 THEN DO:
   /*INGA BOKMÄRKEN INLAGDA . 28 ÄR SAMMA*/       
   /*Nätstation  EON*/   
   ASSIGN   
   fnamn = "NSTNEON.doc".    
END.*/
IF mall = 28 THEN DO:       
   /*Nätstation  EON FÖR Vattenfall*/   
   ASSIGN   
   fnamn = "STNEONV.doc".    
END.


IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   {FINNSDYNBLOB.I}
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.   
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).      
   IF resid = ? THEN kommando = SEARCH(fnamn).
   ELSE DO:      
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.      
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).
   END.
   RUN deleteproc_UI IN blobproch.
   IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.
END.
ELSE kommando = SEARCH(fnamn).   
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.  
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN kommando2 = webclienttempdir.
OS-CREATE-DIR VALUE(kommando2) NO-ERROR.
IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
   kommando2 = kommando2 + "T" + STRING(TIME) + fnamn .
END.
ELSE DO:
   kommando2 = kommando2 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + "T"  + STRING(TIME) + fnamn.
END.
OS-COPY VALUE(kommando) VALUE(kommando2).
kommando = kommando2.
CREATE "Word.Application" chWord NO-ERROR.

IF ERROR-STATUS:ERROR = FALSE THEN DO:
   chDoc = chWord:Documents:Open(kommando,,,,,,,,,).
   chWord:VISIBLE = TRUE.
   chDoc = chWord:ActiveDocument.
   IF mall = 19 THEN DO:   
      FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
      IF AVAILABLE kon_id THEN DO:
         IF kon_id.FRI3 NE "" THEN  RUN inbokvalue_UI (INPUT "littera" ,INPUT kon_id.FRI3).                
         ELSE RUN inbokvalue_UI (INPUT "littera" ,INPUT kon_id.FRI2).                      
      END.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp THEN DO:  
         RUN inbokvalue_UI (INPUT "namn" ,INPUT fri_temp.SKAP).                
                  
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR  kon_val.F1 BEGINS "Kabeldon" THEN RUN inbokvalue_UI (INPUT "fabrikat" ,INPUT "ABB").               
            IF kon_val.F1 BEGINS "CEWE" THEN RUN inbokvalue_UI (INPUT "fabrikat" ,INPUT "CEWE").               
           
         END. 
      END.
      skapstorlek = 0.         
      FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
         FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
         list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
            IF list_mtrl.TYPBER = TRUE THEN DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
            END.
            ELSE DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
            END.   
         END.      
      END.
      hjrakn = 0.
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
         hjrakn = hjrakn + 1.
      END.         
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
      EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
         CREATE bskaptemp.
         BUFFER-COPY berskaptemp TO bskaptemp.
         ASSIGN bskaptemp.antal = 1.
      END.
      FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
         ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
         IF LAST-OF(bskaptemp.KOD) THEN DO:
            CREATE bsktemp.
            ASSIGN 
            bsktemp.KOD = bskaptemp.KOD         
            bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
            bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
         END.     
      END.      
      FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
      IF AVAILABLE bsktemp THEN DO:
         RUN inbokvalue_UI (INPUT "typ" ,INPUT bsktemp.KOD).               
         
      END.
      RUN inbokvalue_UI (INPUT "datum" ,INPUT STRING(TODAY,"9999/99/99")).               
      
      radrakn = 0.
      FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:       
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            ASSIGN
            radrakn = (radrakn + 1).
            RUN inbokvalue_UI (INPUT "anl" + STRING(radrakn) ,INPUT fri_temp.KABADR).                        
            IF fri_temp.BENAMNING = "Befintlig"  THEN.
            ELSE RUN inbokvalue_UI (INPUT "kab" + STRING(radrakn) ,INPUT fri_temp.BENAMNING).                           
            IF fri_temp.APPARAT NE ""  THEN RUN inbokvalue_UI (INPUT "app" + STRING(radrakn) ,INPUT fri_temp.APPARAT + " / I").
            
            IF fri_temp.MAXSAKR > 0 THEN DO:
               RUN inbokvalue_UI (INPUT "sak" + STRING(radrakn) ,INPUT STRING(fri_temp.MAXSAKR)).                          
            END.
            hjsakr = LEFT-TRIM(kon_val.F5).                       
            IF hjsakr  BEGINS "D" THEN DO: 
               IF fri_temp.SAKR > 0 THEN DO:
                  RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT STRING(fri_temp.SAKR) + "A/ DIAZED" ).                          
               END.
               ELSE RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT "DIAZED").
            END.
            ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" THEN DO:
               IF fri_temp.SAKR > 0 THEN DO:
                  RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT STRING(fri_temp.SAKR) + "A/ HICAP").                          
               END.
               ELSE RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT "HICAP").
            END.            
            IF fri_temp.METER > 0 THEN RUN inbokvalue_UI (INPUT "langd" + STRING(radrakn) ,INPUT STRING(fri_temp.METER)).
            
         END.          
      END. 
   END.
   ELSE IF mall = 28 THEN DO:   
      FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
      
      RUN inbokvalue_UI (INPUT "sign" ,INPUT Guru.Konstanter:globanv).               
      RUN inbokvalue_UI (INPUT "datum" ,INPUT STRING(TODAY,"9999/99/99")).               
      
      radrakn = 0.
      FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:       
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            ASSIGN
            radrakn = (radrakn + 1).
            RUN inbokvalue_UI (INPUT "till" + STRING(radrakn) ,INPUT fri_temp.KABADR).               
            
            IF fri_temp.BENAMNING = "Befintlig"  THEN.
            ELSE RUN inbokvalue_UI (INPUT "kab" + STRING(radrakn) ,INPUT fri_temp.BENAMNING).               
            
            IF fri_temp.APPARAT NE ""  THEN RUN inbokvalue_UI (INPUT "app" + STRING(radrakn) ,INPUT fri_temp.APPARAT + " / I").
              
            IF fri_temp.MAXSAKR > 0 THEN DO:
               RUN inbokvalue_UI (INPUT "sakmax" + STRING(radrakn) ,INPUT STRING(fri_temp.MAXSAKR)).                          
            END.
            hjsakr = LEFT-TRIM(kon_val.F5).                       
            IF hjsakr  BEGINS "D" THEN DO: 
               RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT "DIAZED").
            END.
            ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" THEN DO:
               RUN inbokvalue_UI (INPUT "saktyp" + STRING(radrakn) ,INPUT "HICAP").
            END.
            
            IF fri_temp.SAKR > 0 THEN DO:
               RUN inbokvalue_UI (INPUT "sakr" + STRING(radrakn) ,INPUT STRING(fri_temp.SAKR)).                          
            END.
            
            
            IF fri_temp.METER > 0 THEN RUN inbokvalue_UI (INPUT "langd" + STRING(radrakn) ,INPUT STRING(fri_temp.METER)).
            
         END.          
      END. 
   END.
   chDoc:Protect(2).
   RELEASE OBJECT chDoc NO-ERROR.
END.
RELEASE OBJECT chWord NO-ERROR.

PROCEDURE inbokvalue_UI.
   DEFINE INPUT PARAMETER bokname AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bokvalue AS CHARACTER NO-UNDO.
   IF chDoc:Bookmarks:EXISTS( bokname ) = TRUE THEN DO:
      chWord:SELECTION:GOTO (wdGoToBookmark BY-VARIANT-POINTER,,,bokname BY-VARIANT-POINTER).  
      IF bokvalue <> ? THEN chWord:SELECTION:TypeText ( bokvalue ) NO-ERROR. 
   END.
END PROCEDURE.
