/*AOMBAPPSU45C.P*/
/*
från eko-systemet är:
konton som börjar på "3" OR  "93"  = intäkt
konton som börjar på "40" OR "41" OR "42" OR "43" OR "44" OR "45" OR "46"  = materiel.
konton som börjar på "47" OR "48" OR "49" = maskin
konton som börjar på "5" OR "6" OR "7" OR "8" OR "90" OR "91" OR "92" OR "94" OR "95" OR "96" OR
                     "97" OR "98" OR "99" = övrig kostnad.
I listan är:
  konto  "471600" OR "471500" = maskin   
  övriga konton som börjar på  "47" = Övrig ent.
  konton mellan "450000" AND "459999" = materiel
  2012-12-11 MTRL ändrat av lena till:
  "453100" trafo 453200" närstn inkl ställverk "455000"  bygg & hjälpmtrl "456000"kabel-linjemtrl
  
  konton mellan "500000" AND "999999"  = övrig EJ DE SOM BÖRJAR PÅ 93.
  
  2012-12-11 ÖVRIGT ändrat av lena till:
  konton 47100 - entreprenader 659900- övriga externa kostnader  522000 -hyra verktyg 663000- ersättningar för intrång   
     
  INÄKT = INTÄKT FRÅN EKO. 
  */
{KALKYLUPP.I}
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}  

DEFINE VARIABLE aonrvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.

DEFINE VARIABLE fbestapph AS HANDLE NO-UNDO.
DEFINE TEMP-TABLE inkomsttemp NO-UNDO
   FIELD AONR         LIKE KOSTREG.AONR
   FIELD DELNR        LIKE KOSTREG.DELNR   
   FIELD BOKKONTO     LIKE KOSTREG.BOKKONTO
   FIELD INKOMST    AS DECIMAL   
   INDEX AONR IS PRIMARY AONR DELNR BOKKONTO.
DEFINE TEMP-TABLE sumaotemp   
   FIELD FAKTNR LIKE FAKTINTAKTKONT.FAKTNR 
   FIELD VFAKTNR LIKE FAKTINTAKTKONT.VFAKTNR 
   FIELD VKREDIT LIKE FAKTINTAKTKONTKRED.VKREDIT
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR   
   FIELD ORT LIKE AONRTAB.ORT 
   FIELD TIDSTART LIKE AONRTAB.STARTDATUM 
   FIELD AVSLUTDATUM LIKE AONRTAB.AONRAVDATUM         
   FIELD FAKTTYP LIKE AONRTAB.FAKTTYP
   FIELD TOTKOST AS DECIMAL
   FIELD FAKTKOST AS DECIMAL
   FIELD BESTID LIKE BESTTAB.BESTID
   FIELD SATS% AS DECIMAL
   FIELD KONTOBELOPP AS DECIMAL EXTENT 50 
   FIELD ARTAL AS INTEGER
   FIELD MANAD AS INTEGER
   INDEX DEB IS PRIMARY FAKTNR VFAKTNR AONR DELNR
   INDEX KREDIT FAKTNR VKREDIT AONR DELNR
   INDEX VKREDIT VKREDIT
   INDEX VFAKTNR VFAKTNR
   INDEX MANAD ARTAL MANAD.
{EXTRADATA.I}
{EXTRATAB.I}  
FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
&Scoped-define NEW NEW
{FAKTTYPDEF.I}
&Scoped-define NEW 
{FAKTTYPSKAP.I}
FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.


FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 

END FUNCTION.
DEFINE VARIABLE superhandle AS HANDLE.
DEFINE VARIABLE delnrsummalager AS DECIMAL EXTENT 20 NO-UNDO.
DEFINE VARIABLE delnrsummalagerK AS DECIMAL EXTENT 20 NO-UNDO.
DEFINE VARIABLE totsummauf AS DECIMAL NO-UNDO.
DEFINE VARIABLE totsummaprog AS DECIMAL NO-UNDO.
DEFINE VARIABLE vartvar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE kalktotvarp1 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE kalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE intkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE exkalktotvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE summakostvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE hjalpvar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE emask3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE fsproc  AS INTEGER NO-UNDO.
DEFINE VARIABLE fsprocj AS CHARACTER NO-UNDO.
DEFINE VARIABLE fsdat AS DATE NO-UNDO.
DEFINE QUERY fq FOR FAKTINTAKTKONT,FAKTURERAD.
DEFINE QUERY fkq FOR FAKTINTAKTKONTKRED,FAKTKRED.
DEFINE QUERY kq FOR KOSTREG.
DEFINE QUERY stq FOR SUMTIDDAG.
{DIRDEF.I}
{KALKTEMP.I}

RUN procset_UI.   
RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
RUN EXTRATABHMT.P PERSISTENT SET fbestapph.      

DEFINE TEMP-TABLE kosttemp     
   FIELD AONR LIKE KOSTREG.AONR 
   FIELD DELNR LIKE KOSTREG.DELNR         
   FIELD BOKKONTO LIKE KOSTREG.BOKKONTO   
   FIELD FAKTNR LIKE KOSTREG.FAKTNR    
   FIELD REGDATUM LIKE KOSTREG.REGDATUM    
   FIELD BENAMNING LIKE KOSTREG.BENAMNING
   FIELD BELOPP LIKE KOSTREG.MTRL   
   FIELD BELOPP1P LIKE KOSTREG.MTRL   
   FIELD BELOPP2P LIKE KOSTREG.MTRL   
   FIELD GRAVARE LIKE KOSTREG.MASKKOST  
   FIELD MASKOVRIG LIKE KOSTREG.MASKKOST     
   FIELD TBELOPP LIKE KOSTREG.MTRL   
   FIELD MTRL LIKE KOSTREG.MTRL   
   FIELD OVRKR LIKE KOSTREG.MTRL 
   FIELD INKOMST LIKE KOSTREG.MTRL   
   INDEX BOK IS PRIMARY BOKKONTO REGDATUM
   INDEX AONR AONR DELNR.


DEFINE TEMP-TABLE p1sumsum LIKE kalksumsum.
DEFINE TEMP-TABLE plansumsum LIKE kalksumsum.   

DEFINE TEMP-TABLE kosttemp2
   FIELD ANVANDARE LIKE KOSTREG.ANVANDARE
   FIELD AONR LIKE KOSTREG.AONR 
   FIELD DELNR LIKE KOSTREG.DELNR
   FIELD BENAMNING LIKE KOSTREG.BENAMNING 
   FIELD BETDATUM LIKE KOSTREG.BETDATUM 
   FIELD BOKKONTO LIKE KOSTREG.BOKKONTO    
   FIELD FAKBES LIKE KOSTREG.FAKBES 
   FIELD FAKTNR LIKE KOSTREG.FAKTNR 
  /*FIELD FAKTURERAD LIKE KOSTREG.FAKTURERAD */
   FIELD INKOMST LIKE KOSTREG.INKOMST  
  /* FIELD KOSTAUTO LIKE KOSTREG.KOSTAUTO */
   FIELD LEVKOD LIKE KOSTREG.LEVKOD  
   FIELD GRAVARE LIKE KOSTREG.MASKKOST  
   FIELD MASKOVRIG LIKE KOSTREG.MASKKOST  
   FIELD MOMS LIKE KOSTREG.MOMS 
   FIELD MTRL LIKE KOSTREG.MTRL 
   FIELD OVRKR LIKE KOSTREG.OVRKR 
   FIELD PERSKOST LIKE KOSTREG.PERSKOST 
   FIELD PERSKOST2 LIKE KOSTREG.PERSKOST 
   FIELD RADNR LIKE KOSTREG.RADNR 
   FIELD REGDATUM LIKE KOSTREG.REGDATUM 
   FIELD TRAKTKOST LIKE KOSTREG.TRAKTKOST
   INDEX AONR IS PRIMARY AONR DELNR BOKKONTO REGDATUM.

/*{DAGTEMP.I}*/
DEFINE TEMP-TABLE slutsum           
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD NAMN AS CHARACTER FORMAT "X(5)"
   FIELD GEOMRADE LIKE SUMTID.GEOMRADE 
   FIELD OMRADE LIKE SUMTID.OMRADE
   FIELD IKOST LIKE SUMTID.IKOSTNAD
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ORT LIKE AONRTAB.ORT
   FIELD TIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"      
   FIELD OTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"         
   FIELD BTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"           
   FIELD OBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "Ö-KOSTNAD"  
   FIELD MBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "Ö-KOSTNAD"  
   FIELD IBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "Ö-KOSTNAD"  
   FIELD OANTAL LIKE EKRAPPRESULT.EANTAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "T-KOSTNAD"
   FIELD TANTAL LIKE EKRAPPRESULT.EANTAL  LABEL "T-ANTAL"       
   FIELD LONKOST LIKE EKRAPPRESULT.EBELOPP LABEL "L-KOSTNAD"    
   FIELD MTRL LIKE KOSTREG.MTRL    
   FIELD OVRKR LIKE KOSTREG.OVRKR    
   FIELD INKOMST LIKE KOSTREG.INKOMST   
   FIELD NY AS LOGICAL INITIAL FALSE  
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING
   INDEX OMR AONR DELNR GEOMRADE OMRADE PERSONALKOD ASCENDING.    
DEFINE TEMP-TABLE sumsum           
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD MASKGBELOPP AS DECIMAL
   FIELD MONTTIMMAR  AS DECIMAL
   FIELD SLONKOST  AS DECIMAL
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD TIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"      
   FIELD OTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"   
   FIELD MBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"   
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "ARBKOSTNAD"
   FIELD SKOSTNAD LIKE EKRAPPRESULT.EBELOPP LABEL "SUMMA KOSTNADER"
   FIELD BTIMMAR LIKE EKRAPPRESULT.EBELOPP LABEL "Ö-KOSTNAD"
   FIELD GRAVARE LIKE KOSTREG.MASKKOST  
   FIELD MASKOVRIG LIKE KOSTREG.MASKKOST  
   FIELD OANTAL LIKE EKRAPPRESULT.EANTAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP LIKE EKRAPPRESULT.EBELOPP LABEL "T-KOSTNAD"
   FIELD TANTAL LIKE EKRAPPRESULT.EANTAL  LABEL "T-ANTAL"       
   FIELD LONKOST LIKE EKRAPPRESULT.EBELOPP LABEL "L-KOSTNAD"    
   FIELD MTRL LIKE KOSTREG.MTRL    
   FIELD OVRKR LIKE KOSTREG.OVRKR    
   FIELD INKOMST LIKE KOSTREG.INKOMST
   FIELD MBLOPP AS DECIMAL
   FIELD TINKOMST AS DECIMAL
   FIELD RESTIM AS DECIMAL
   INDEX PERSONALKOD IS PRIMARY PERSONALKOD ASCENDING.
   DEFINE NEW SHARED TEMP-TABLE tempupp   
    FIELD totea      AS DECIMAL    
    FIELD totarb     AS DECIMAL    
    FIELD totmask    AS DECIMAL    
    FIELD totmtrl    AS DECIMAL    
    FIELD totovr     AS DECIMAL    
    FIELD totalt     AS DECIMAL    
    FIELD arbtim     AS DECIMAL    
    FIELD bertim     AS DECIMAL    
    FIELD msktim     AS DECIMAL    
    FIELD totutr     AS DECIMAL    
    FIELD totutrtim  AS DECIMAL        
    FIELD ototea     AS DECIMAL 
    FIELD ototber    AS DECIMAL
    FIELD ototarb    AS DECIMAL         
    FIELD ototmask   AS DECIMAL    
    FIELD ototmtrl   AS DECIMAL    
    FIELD ototovr    AS DECIMAL    
    FIELD ototalt    AS DECIMAL    
    FIELD oarbtim    AS DECIMAL    
    FIELD obertim    AS DECIMAL    
    FIELD omsktim    AS DECIMAL    
    FIELD ototutr    AS DECIMAL    
    FIELD ototutrtim AS DECIMAL.    
    /*lena*/
    {BYTAO.I}
    {TIDDETTEMP.I}
DEFINE TEMP-TABLE etiddettemp LIKE tiddettemp.
DEFINE BUFFER tidbuff FOR TIDREGITAB.

DEFINE VARIABLE bsek AS LOGICAL NO-UNDO.
DEFINE VARIABLE tisek AS LOGICAL NO-UNDO.
DEFINE VARIABLE sealltid AS LOGICAL NO-UNDO.
DEFINE VARIABLE anddat AS INTEGER NO-UNDO.
DEFINE VARIABLE tidftot AS DECIMAL NO-UNDO.
DEFINE VARIABLE anummer AS CHARACTER NO-UNDO.
DEFINE VARIABLE dnummer AS INTEGER NO-UNDO.
DEFINE BUFFER oradebuff FOR OMRADETAB.
DEFINE BUFFER avdbuff FOR AVDELNING.
DEFINE BUFFER jurbuff FOR JURPERS.


FUNCTION klock100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.
    
 
DEFINE INPUT  PARAMETER ganv AS CHARACTER NO-UNDO.

DEFINE INPUT PARAMETER delnrsumma AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR uppvaltemp.
DEFINE INPUT PARAMETER TABLE FOR valdaao.
DEFINE OUTPUT PARAMETER TABLE FOR tidut.
DEFINE OUTPUT PARAMETER str AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE OUTPUT PARAMETER str2 AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE OUTPUT PARAMETER str3 AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE NEW SHARED VARIABLE fastrec AS RECID NO-UNDO.
DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE xtypmtrl AS INTEGER NO-UNDO.
DEFINE VARIABLE monpris LIKE EBRPRIS.MONT NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE region AS LOGICAL NO-UNDO.
DEFINE VARIABLE kalkvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO.
DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE ingakostver AS LOGICAL NO-UNDO.
DEFINE VARIABLE summaforst AS LOGICAL NO-UNDO.
DEFINE VARIABLE stim AS DECIMAL NO-UNDO.   
DEFINE VARIABLE o50 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o75 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o100 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE stimk AS DECIMAL NO-UNDO.   
DEFINE VARIABLE o50k AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o75k AS DECIMAL NO-UNDO. 
DEFINE VARIABLE o100k AS DECIMAL NO-UNDO.
DEFINE VARIABLE varin AS DECIMAL NO-UNDO.
DEFINE VARIABLE varkalk AS DECIMAL NO-UNDO.
DEFINE VARIABLE vartot AS DECIMAL NO-UNDO.
DEFINE VARIABLE varplan AS DECIMAL NO-UNDO.
DEFINE VARIABLE varplantot AS DECIMAL NO-UNDO.
DEFINE VARIABLE varp1 AS DECIMAL NO-UNDO.
DEFINE VARIABLE varp1tot AS DECIMAL NO-UNDO.
DEFINE VARIABLE montfak AS DECIMAL NO-UNDO.
DEFINE VARIABLE pledfak AS DECIMAL NO-UNDO.
DEFINE VARIABLE projektorfak  AS DECIMAL NO-UNDO.
DEFINE VARIABLE dokfak  AS DECIMAL NO-UNDO.
DEFINE VARIABLE delrubrik AS CHARACTER NO-UNDO.

sealltid = FALSE.
FIND FIRST ANVANDARE  WHERE ANVANDARE.ANVANDARE = Guru.Konstanter:globanv NO-LOCK NO-ERROR.
IF AVAILABLE ANVANDARE THEN DO:  
   
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "SEALLTID"                   
   inextradatatemp.HUVUDCH = ANVANDARE.PERSONALKOD.  
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.     
   IF AVAILABLE extradatatemp THEN DO:      
      ASSIGN   sealltid = extradatatemp.SOKLOG[1].                        
   END.   
END.
   
/*BEREDNING*/   
{LISTDEF.I} 
DEFINE NEW SHARED TEMP-TABLE mtrl_temp2   
   {MTRLTEMP2TT.I} 
/*SLUT BEREDNING*/

FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR. 
Guru.Konstanter:globforetag = FORETAG.FORETAG.

DEBUGGER:SET-BREAK().
{DIRAPPTID.I}

FIND FIRST uppvaltemp NO-ERROR.
OPEN QUERY aq FOR EACH valdaao NO-LOCK. 
GET FIRST aq NO-LOCK.
GET NEXT aq  NO-LOCK.
IF AVAILABLE valdaao THEN DO:
   ASSIGN
   summaforst = TRUE
   ingakostver = TRUE.
END.
ELSE DO:
   /*IF uppvaltemp.DELNRKOLL = FALSE THEN ingakostver = FALSE.*/
   ASSIGN
   summaforst = FALSE.
   ingakostver = FALSE.
END.

RUN budgetkalk_UI.
EMPTY TEMP-TABLE kalk_temp NO-ERROR.
EMPTY TEMP-TABLE kalksumsum NO-ERROR.
  
IF uppvaltemp.MANUPPDEL = TRUE THEN ingakostver = FALSE.
ELSE ingakostver = TRUE.
GET FIRST aq NO-LOCK.
DO WHILE AVAILABLE(valdaao):      
   {SUMOPEN.I}
   RUN kalkyler_UI.
   GET NEXT aq NO-LOCK.
END.
GET FIRST aq NO-LOCK.
DO WHILE AVAILABLE(valdaao):      
   {FAKOPEN.I}
   GET NEXT aq NO-LOCK.
END.
{DAGTEMPBOLAG.I}
DEBUGGER:SET-BREAK().
RUN summa_UI.
RUN huvud2_UI.
RUN tidenut_UI.
RUN kostut_UI.
/*RUN huvud_UI.*/
{AOMBAPPSU45I.I}
{KALKYLUPPSUMMAPLAN.I}  
{KALKYLUPPSUMMA.I} 
{TEMPUPPTT.I}  
{GDPRLOGGCLIENT.I}
PROCEDURE kalkyler_UI :  
   
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = valdaao.AONR AND
   AONRTAB.DELNR = valdaao.DELNR USE-INDEX AONR NO-LOCK NO-ERROR.
   /*KALKRUTIN*/
   /*lagt till AND KALKAONR.TYP = 2 20121116 lena*/
   FIND FIRST KALKAONR WHERE KALKAONR.AONR = valdaao.AONR AND
   KALKAONR.DELNR = valdaao.DELNR AND KALKAONR.STATUSNIV = "UF" AND KALKAONR.TYP = 2
   USE-INDEX AONR NO-LOCK NO-ERROR.
   IF AVAILABLE KALKAONR THEN DO:
      RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
      RUN summeringkalk_UI. 
   END.
   ELSE DO:
      /*lagt till AND KALKAONR.STATUSNIV = "HUV" AND KALKAONR.TYP = 2 20121116 lena*/
      FIND FIRST KALKAONR WHERE KALKAONR.AONR = valdaao.AONR AND
      KALKAONR.DELNR = valdaao.DELNR AND KALKAONR.STATUSNIV = "HUV" AND KALKAONR.TYP = 2 
      USE-INDEX AONR NO-LOCK NO-ERROR.
      IF AVAILABLE KALKAONR THEN DO:
         RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).
         RUN summeringkalk_UI. 
      END.     
   END.  
    
   RUN tempuppsum_UI.
   IF AONRTAB.PLANNR NE ? THEN DO:
      IF AONRTAB.DELNR = 0 THEN DO:
         EMPTY TEMP-TABLE kalk_temp NO-ERROR.            
         FIND FIRST PLANNRTAB WHERE PLANNRTAB.PLANNR = AONRTAB.PLANNR
         AND PLANNRTAB.ARTAL = AONRTAB.ARTAL NO-LOCK NO-ERROR.
         IF AVAILABLE PLANNRTAB THEN DO:        
            IF AVAILABLE FASTSPEC THEN RELEASE FASTSPEC.                                     
            IF PLANNRTAB.UPP = TRUE AND PLANNRTAB.UPPNR = FALSE THEN DO:
               FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
               KALKAONR.ARTAL = PLANNRTAB.ARTAL - 1 AND KALKAONR.TYP = 1 AND 
               KALKAONR.STATUSNIV = "UF"
               USE-INDEX PLANR NO-LOCK NO-ERROR.               
            END.
            ELSE DO:                  
               FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
               KALKAONR.ARTAL = PLANNRTAB.ARTAL AND KALKAONR.TYP = 1 AND 
               KALKAONR.STATUSNIV = "UF"
               USE-INDEX PLANR NO-LOCK NO-ERROR.
               
            END.
            IF AVAILABLE KALKAONR THEN DO:
               RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE). 
            END.         
            
         END.
      END.
      IF AVAILABLE KALKAONR THEN DO:
         RUN summeringkalkplan_UI.
         ASSIGN
         kalksumsum.AONR = AONRTAB.AONR 
         kalksumsum.DELNR = AONRTAB.DELNR.
         
         RUN tempuppsum_UI.
      END.                  
   END.
   ELSE DO:
      
      /*Om ingen plan - ta projektets P1   Lena 20121213*/
      FIND FIRST KALKAONR WHERE KALKAONR.AONR = valdaao.AONR AND
      KALKAONR.DELNR = valdaao.DELNR AND KALKAONR.STATUSNIV = "UF" AND KALKAONR.TYP = 1
      USE-INDEX AONR NO-LOCK NO-ERROR.
      IF AVAILABLE KALKAONR THEN DO:
         RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).         
      END.
      ELSE DO:
         /*lagt till AND KALKAONR.STATUSNIV = "HUV" AND KALKAONR.TYP = 2 20121116 lena*/
         FIND FIRST KALKAONR WHERE KALKAONR.AONR = valdaao.AONR AND
         KALKAONR.DELNR = valdaao.DELNR AND KALKAONR.STATUSNIV = "HUV" AND KALKAONR.TYP = 1 
         USE-INDEX AONR NO-LOCK NO-ERROR.
         IF AVAILABLE KALKAONR THEN DO:
            RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE). 
         END.     
      END.  
      IF AVAILABLE KALKAONR THEN DO:    
         RUN summeringkalkplan_UI.
         RUN tempuppsum_UI.
      END.   
   END.            
END PROCEDURE.

PROCEDURE budgetkalk_UI :
   EMPTY TEMP-TABLE tempupp NO-ERROR.
   CREATE tempupp. 
   /*TIDIGARE 1611*/
   OPEN QUERY kpq FOR EACH PLANNRTAB WHERE PLANNRTAB.OMRADE = "52"
   AND PLANNRTAB.ARTAL = year(uppvaltemp.STARTDATUM) NO-LOCK BY PLANNRTAB.PLANNR.
   GET FIRST kpq NO-LOCK.
   DO WHILE AVAILABLE(PLANNRTAB):  
      IF AVAILABLE FASTSPEC THEN RELEASE FASTSPEC.            
      EMPTY TEMP-TABLE kalk_temp NO-ERROR.          
      IF PLANNRTAB.UPP = TRUE AND PLANNRTAB.UPPNR = FALSE THEN DO:
         FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
         KALKAONR.ARTAL = PLANNRTAB.ARTAL - 1 AND KALKAONR.TYP = 1 AND 
         KALKAONR.STATUSNIV = "UF"
         USE-INDEX PLANR NO-LOCK NO-ERROR.
      END.
      ELSE DO:                  
         FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = PLANNRTAB.PLANNR AND
         KALKAONR.ARTAL = PLANNRTAB.ARTAL AND KALKAONR.TYP = 1 AND 
         KALKAONR.STATUSNIV = "UF"
         USE-INDEX PLANR NO-LOCK NO-ERROR.
      END.
      IF AVAILABLE KALKAONR THEN DO:
         RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE). 
      END.
      IF AVAILABLE KALKAONR THEN DO:
         RUN summeringkalkplan_UI.
         RUN tempuppsum_UI.
      END.              
      GET NEXT kpq NO-LOCK.
   END.   
   CLOSE QUERY kpq.
   FOR EACH kalksumsum NO-LOCK:
      ASSIGN 
      bertim = bertim + kalksumsum.BTIMMAR  
      arbtim = arbtim  + kalksumsum.TIMMAR  
      msktim = msktim + kalksumsum.MASKTIMMAR
      totea = totea + kalksumsum.EAMANG
      totarb = totarb + kalksumsum.BELOPP  
      totmask = totmask + kalksumsum.MASKGBELOPP  
      totmtrl = totmtrl + kalksumsum.MTRL
      totovr = totovr + (kalksumsum.OVRKR - kalksumsum.UKOST)  
      totutr = totutr + kalksumsum.UKOST
      totutrtim = totutrtim + kalksumsum.UTIMMAR.       
   END.
   ASSIGN
   tempupp.bertim = bertim
   tempupp.arbtim = arbtim 
   tempupp.msktim = msktim           
   tempupp.totea = totea
   tempupp.totarb = totarb
   tempupp.totmask = totmask
   tempupp.totmtrl = totmtrl
   tempupp.totovr = totovr
   tempupp.totutr = totutr
   tempupp.totutrtim = totutrtim.
   ASSIGN
   tempupp.arbtim = tempupp.arbtim - tempupp.bertim.
   tempupp.totalt = 0.
   tempupp.totalt = tempupp.totalt + tempupp.totarb + tempupp.totmask +  tempupp.totovr + tempupp.totmtrl + tempupp.totutr.         
   RUN sidfot_UI.
                                 
END PROCEDURE.

