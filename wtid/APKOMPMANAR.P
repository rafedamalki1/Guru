/*APKOMPMANAR.P*/
DEFINE NEW SHARED VARIABLE fnytid AS DECIMAL FORMAT "-99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE gvisatidpermanad AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.   
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regmnr AS INTEGER FORMAT "99" NO-UNDO.
DEFINE NEW SHARED VARIABLE regmannamn AS CHARACTER NO-UNDO.
DEFINE NEW SHARED VARIABLE regar AS INTEGER FORMAT "99" NO-UNDO.
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.      
DEFINE NEW SHARED VARIABLE bdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE avdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regstartsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE regslutsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet AS DECIMAL NO-UNDO.
DEFINE VARIABLE totkompman AS DECIMAL NO-UNDO.
DEFINE VARIABLE totkompar AS DECIMAL NO-UNDO.
DEFINE VARIABLE totkoutman AS DECIMAL NO-UNDO.
DEFINE VARIABLE totkoutar  AS DECIMAL NO-UNDO.
DEFINE VARIABLE kompaonr AS CHARACTER NO-UNDO. 
DEFINE VARIABLE periodtot AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE pekodtot AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE pertot AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE VARIABLE pkodtot AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE VARIABLE difftot AS DECIMAL FORMAT "-99.99" NO-UNDO.
DEFINE VARIABLE totovman AS DECIMAL NO-UNDO.
DEFINE VARIABLE totovar AS DECIMAL NO-UNDO.
DEFINE VARIABLE sppers AS CHARACTER NO-UNDO.
DEFINE BUFFER tidbuff FOR TIDREGITAB.
DEFINE BUFFER tidbuff2 FOR TIDREGITAB.
&Scoped-define NEW NEW
{TIDPERS.I}

DEFINE TEMP-TABLE invartemp   
   FIELD GA LIKE ANVANDARE.ANVANDARE 
   FIELD GM AS LOGICAL 
   FIELD SK AS LOGICAL 
   FIELD TI AS RECID 
   FIELD PER AS RECID 
   FIELD PER2 AS RECID 
   FIELD MU AS LOGICAL    
   FIELD REGST LIKE TIDREGITAB.START 
   FIELD REGSU LIKE TIDREGITAB.SLUT 
   FIELD RV AS INTEGER FORMAT "999" 
   FIELD RDAG AS CHARACTER FORMAT "X(3)"         
   FIELD RD AS DATE 
   FIELD RM AS INTEGER FORMAT "99" 
   FIELD RMN AS CHARACTER  
   FIELD REGA AS INTEGER FORMAT "99" 
   FIELD RT LIKE TIDREGITAB.TOTALT       
   FIELD BD AS DATE 
   FIELD AD AS DATE 
   FIELD NY AS DECIMAL 
   FIELD SEK AS INTEGER FORMAT "-9999999" 
   FIELD RSEK AS INTEGER 
   FIELD REGS AS INTEGER 
   FIELD GL LIKE FORETAG.FORETAG.

DEFINE TEMP-TABLE overtidhj
   FIELD DATUM LIKE TIDREGITAB.DATUM
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD
   FIELD OVERANTAL AS DECIMAL
   FIELD OVERTIDTILL AS CHARACTER
   FIELD MANAD AS INTEGER
   FIELD MULTIP AS DECIMAL
   FIELD ANTMULT AS DECIMAL
   FIELD KOMPUTTAG AS DECIMAL    
   FIELD NAMN AS CHARACTER FORMAT "X(30)"
   FIELD OMRADE AS CHARACTER
   FIELD GEOMRADE AS CHARACTER
   FIELD OVERTIDUTTAG AS CHARACTER
   FIELD VERKOV AS DECIMAL
   FIELD VERKKO AS DECIMAL.

DEFINE TEMP-TABLE oversum
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD
   FIELD NAMN AS CHARACTER FORMAT "X(30)"
   FIELD MANAD AS INTEGER
   FIELD OVERANTAL AS DECIMAL
   FIELD ANTMULT AS DECIMAL   
   FIELD KOMPUTTAG AS DECIMAL       
   FIELD OMRADE AS CHARACTER
   FIELD VERKOV AS DECIMAL
   FIELD VERKKO AS DECIMAL.
    
DEFINE TEMP-TABLE overhela   
   FIELD KOMP1 AS DECIMAL
   FIELD KOMP2 AS DECIMAL
   FIELD KOMP3 AS DECIMAL
   FIELD KOMP4 AS DECIMAL
   FIELD KOMP5 AS DECIMAL
   FIELD KOMP6 AS DECIMAL
   FIELD KOMP7 AS DECIMAL
   FIELD KOMP8 AS DECIMAL
   FIELD KOMP9 AS DECIMAL
   FIELD KOMP10 AS DECIMAL
   FIELD KOMP11 AS DECIMAL
   FIELD KOMP12 AS DECIMAL
   FIELD KOMPTOT AS DECIMAL   
   FIELD KOMPUT1 AS DECIMAL
   FIELD KOMPUT2 AS DECIMAL
   FIELD KOMPUT3 AS DECIMAL
   FIELD KOMPUT4 AS DECIMAL
   FIELD KOMPUT5 AS DECIMAL
   FIELD KOMPUT6 AS DECIMAL
   FIELD KOMPUT7 AS DECIMAL
   FIELD KOMPUT8 AS DECIMAL
   FIELD KOMPUT9 AS DECIMAL
   FIELD KOMPUT10 AS DECIMAL
   FIELD KOMPUT11 AS DECIMAL
   FIELD KOMPUT12 AS DECIMAL
   FIELD KOMPUTTOT AS DECIMAL     
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD    
   FIELD NAMN AS CHARACTER FORMAT "X(30)"
   FIELD OMRADE AS CHARACTER
   FIELD GEOMRADE AS CHARACTER
   FIELD VERKOV AS DECIMAL
   FIELD VERKKO AS DECIMAL.
         
DEFINE VARIABLE str AS CHARACTER FORMAT "X(200)" NO-UNDO.
{TIDUTTTNEW.I}
DEFINE QUERY tidq FOR TIDREGITAB.

DEFINE INPUT PARAMETER TABLE FOR invartemp.
DEFINE INPUT PARAMETER TABLE FOR tidpers.
DEFINE OUTPUT PARAMETER TABLE FOR tidut.

FUNCTION klock100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.
FUNCTION klock60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/

  RETURN  TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) * 60 / 100 ).

END FUNCTION.

ASSIGN   str=                                                                              
"======.======.======.======.======.======.======.======.======.======.======.======.======.======.======.======.======.============".   
EMPTY TEMP-TABLE tidut  NO-ERROR. 
EMPTY TEMP-TABLE overtidhj NO-ERROR. 
EMPTY TEMP-TABLE oversum NO-ERROR.
EMPTY TEMP-TABLE overhela NO-ERROR. 
FIND FIRST invartemp NO-ERROR.
ASSIGN
 
gvisatidpermanad = invartemp.GM 
skrivut = invartemp.SK   
tidtabrec = invartemp.TI   
persrec = invartemp.PER   
persrec2 = invartemp.PER2  
musz = invartemp.MU      
regstart = invartemp.REGST   
regslut = invartemp.REGSU  
regvnr = invartemp.RV   
regdagnamn = invartemp.RDAG          
regdatum = invartemp.RD   
regmnr = invartemp.RM  
regmannamn = invartemp.RMN  
regar = invartemp.REGA  
regtotalt = invartemp.RT        
bdatum = invartemp.BD  
avdatum = invartemp.AD  
nytid = invartemp.NY 
sekunder = invartemp.SEK 
regstartsek = invartemp.RSEK  
regslutsek = invartemp.REGS 
Guru.Konstanter:globforetag = invartemp.GL.

RUN huvud_UI.

   {GDPRLOGGCLIENT.I}
PROCEDURE huvud_UI :
   CREATE tidut.
   ASSIGN 
   SUBSTRING(tidut.UT,4) = "Intjänad komp och uttagen komp innevarande år" + " " + STRING(regar) 
   SUBSTRING(tidut.UT,80) = STRING(avdatum)   
   SUBSTRING(tidut.UT,90) = STRING(TIME,"HH:MM:SS").
   CREATE tidut.
   ASSIGN 
   SUBSTRING(tidut.UT,4) = "==============================================================".   
   CREATE tidut.                                                      
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Hela året verklig övertid  - verklig övertid som den anställde valt att ta ut i pengar. ".
   CREATE tidut.                                                      
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Hela året verklig komp     - verklig övertid som den anställde valt att ta ut i kompensationsledighet. ".
   CREATE tidut.
   CREATE tidut.                                                      
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Intjänad komp    - övertid som den anställde valt kompledighet för, multiplicerat med 1,5 för enkel, 2 för kvalificerad kompledighet".
   CREATE tidut.                        
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Uttagen komp     - tid som den anställde valt att ta ut kompensationsledighet. ".   
   CREATE tidut.   
   CREATE tidut.                     
   CREATE tidut.                        
   ASSIGN   
   SUBSTRING(tidut.UT,15) = "Hela"
   SUBSTRING(tidut.UT,22) = "Hela".
   CREATE tidut.                        
   ASSIGN   
   SUBSTRING(tidut.UT,15) = "året"
   SUBSTRING(tidut.UT,22) = "året" 
   SUBSTRING(tidut.UT,29) = "Komp"
   SUBSTRING(tidut.UT,36) = "Komp"
   SUBSTRING(tidut.UT,43) = "Komp"
   SUBSTRING(tidut.UT,50) = "Komp"
   SUBSTRING(tidut.UT,57) = "Komp"
   SUBSTRING(tidut.UT,64) = "Komp"
   SUBSTRING(tidut.UT,71) = "Komp"
   SUBSTRING(tidut.UT,78) = "Komp"
   SUBSTRING(tidut.UT,85) = "Komp"
   SUBSTRING(tidut.UT,92) = "Komp"
   SUBSTRING(tidut.UT,99) = "Komp"
   SUBSTRING(tidut.UT,106) = "Komp"
   SUBSTRING(tidut.UT,113) = "Komp" .  
   CREATE tidut.                        
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Enhet/"
   SUBSTRING(tidut.UT,15) = "verklig"
   SUBSTRING(tidut.UT,22) = "verklig"
   SUBSTRING(tidut.UT,113) = "hela".
   CREATE tidut.                        
   ASSIGN
   SUBSTRING(tidut.UT,1) = "Sign"
   SUBSTRING(tidut.UT,8) = "Namn"
   SUBSTRING(tidut.UT,15) = "Ötid"
   SUBSTRING(tidut.UT,22) = "Komp"
                   
   SUBSTRING(tidut.UT,29) = "Jan"
   SUBSTRING(tidut.UT,36) = "Feb"
   SUBSTRING(tidut.UT,43) = "Mars"
   SUBSTRING(tidut.UT,50) = "April"
   SUBSTRING(tidut.UT,57) = "Maj"
   SUBSTRING(tidut.UT,64) = "Juni"
   SUBSTRING(tidut.UT,71) = "Juli"
   SUBSTRING(tidut.UT,78) = "Aug"
   SUBSTRING(tidut.UT,85) = "Sept"
   SUBSTRING(tidut.UT,92) = "Okt"
   SUBSTRING(tidut.UT,99) = "Nov"
   SUBSTRING(tidut.UT,106) = "Dec"
   SUBSTRING(tidut.UT,113) = "året" .
   CREATE tidut.  
   ASSIGN tidut.UT = str.              
   FOR EACH tidpers USE-INDEX PERSONALKOD NO-LOCK:     
      Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + tidpers.PERSONALKOD.  
      ASSIGN
      persrec = tidpers.TIDPERSREC
      regdatum = bdatum. 
      FIND PERSONALTAB WHERE RECID(PERSONALTAB) = persrec NO-LOCK NO-ERROR. 
      FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.                            
      OPEN QUERY toq FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = tidpers.PERSONALKOD
      AND TIDREGITAB.DATUM GE DATE(01,01,regar) AND TIDREGITAB.DATUM LE DATE(12,31,regar) AND TIDREGITAB.OKOD1 NE "" /*AND TIDREGITAB.OVERTIDUTTAG = "K"*/  NO-LOCK.
      GET FIRST toq NO-LOCK.
      DO WHILE AVAILABLE (TIDREGITAB):
         IF TIDREGITAB.OVERTIDUTTAG = "K" OR TIDREGITAB.OVERTIDUTTAG = "Ö" THEN DO:                 
            IF TIDREGITAB.OANT1 > 0  THEN DO:      
               CREATE overtidhj.                          
               ASSIGN
               overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD            
               overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)                               
               overtidhj.DATUM =  TIDREGITAB.DATUM
               overtidhj.OVERANTAL = klock100(TIDREGITAB.OANT1) 
               overtidhj.OVERTIDTILL = TIDREGITAB.OKOD1
               overtidhj.MANAD = MONTH(TIDREGITAB.DATUM)
               overtidhj.MULTIP = 1
               overtidhj.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG.
               FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = TIDREGITAB.OKOD1 AND OVERKOD.KOD = ANSTFORMTAB.KOD USE-INDEX OVER NO-LOCK NO-ERROR.
               IF AVAILABLE  OVERKOD THEN DO:                                               
                  IF Guru.Konstanter:globforetag = "gkal" THEN overtidhj.MULTIP = OVERKOD.MULTIP.
                  ELSE overtidhj.MULTIP =  OVERKOD.ERSATTNING.
               END.
               IF TIDREGITAB.OVERTIDUTTAG = "K" THEN DO: 
                  overtidhj.ANTMULT = (1 + overtidhj.MULTIP) * overtidhj.OVERANTAL.
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena */                  
                  overtidhj.VERKKO = klock100(TIDREGITAB.TOTALT).
               END.
               IF TIDREGITAB.OVERTIDUTTAG = "Ö" THEN DO:                   
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena */                  
                  overtidhj.VERKOV = klock100(TIDREGITAB.TOTALT).
               END.   
            END.      
            IF TIDREGITAB.OANT2 > 0  THEN DO:      
               CREATE overtidhj.                          
               ASSIGN
               overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD
               overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)                                
               overtidhj.DATUM =  TIDREGITAB.DATUM            
               overtidhj.OVERANTAL = klock100(TIDREGITAB.OANT2) 
               overtidhj.OVERTIDTILL = TIDREGITAB.OKOD2
               overtidhj.MANAD = MONTH(TIDREGITAB.DATUM)
               overtidhj.MULTIP = 1
               overtidhj.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG.
               FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = TIDREGITAB.OKOD2 AND OVERKOD.KOD = ANSTFORMTAB.KOD USE-INDEX OVER NO-LOCK NO-ERROR.
               IF AVAILABLE  OVERKOD THEN DO:                                               
                  IF Guru.Konstanter:globforetag = "gkal" THEN overtidhj.MULTIP = OVERKOD.MULTIP.
                  ELSE overtidhj.MULTIP =  OVERKOD.ERSATTNING.
               END.               
               IF TIDREGITAB.OVERTIDUTTAG = "K" THEN DO: 
                  overtidhj.ANTMULT = (1 + overtidhj.MULTIP) * overtidhj.OVERANTAL.
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena 
                  oant2 skall bara räknas om oant1 = 0*/
                  IF TIDREGITAB.OANT1 = 0  THEN   overtidhj.VERKKO = klock100(TIDREGITAB.TOTALT).                                     
               END.
               IF TIDREGITAB.OVERTIDUTTAG = "Ö" THEN DO:
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena 
                  oant2 skall bara räknas om oant1 = 0*/                   
                  IF TIDREGITAB.OANT1 = 0  THEN   overtidhj.VERKOV = klock100(TIDREGITAB.TOTALT).                  
               END.   
            END.      
            IF TIDREGITAB.OANT3 > 0  THEN DO:      
               CREATE overtidhj.                          
               ASSIGN
               overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD               
               overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)                  
               overtidhj.DATUM =  TIDREGITAB.DATUM            
               overtidhj.OVERANTAL = klock100(TIDREGITAB.OANT3) 
               overtidhj.OVERTIDTILL = TIDREGITAB.OKOD3
               overtidhj.MANAD = MONTH(TIDREGITAB.DATUM)
               overtidhj.MULTIP = 1
               overtidhj.OVERTIDUTTAG = TIDREGITAB.OVERTIDUTTAG.
               FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = TIDREGITAB.OKOD3 AND OVERKOD.KOD = ANSTFORMTAB.KOD USE-INDEX OVER NO-LOCK NO-ERROR.
               IF AVAILABLE  OVERKOD THEN DO:                                               
                  IF Guru.Konstanter:globforetag = "gkal" THEN overtidhj.MULTIP = OVERKOD.MULTIP.
                  ELSE overtidhj.MULTIP =  OVERKOD.ERSATTNING.
               END.
               IF TIDREGITAB.OVERTIDUTTAG = "K" THEN DO:                   
                  overtidhj.ANTMULT = (1 + overtidhj.MULTIP) * overtidhj.OVERANTAL.
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena 
                  oant3 skall bara räknas om oant1 = 0 och oant2= 0*/
                  IF TIDREGITAB.OANT1 = 0 AND  TIDREGITAB.OANT2 = 0  THEN   overtidhj.VERKKO = klock100(TIDREGITAB.TOTALT).                  
               END.
               IF TIDREGITAB.OVERTIDUTTAG = "Ö" THEN DO:                   
                  /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena 
                  oant3 skall bara räknas om oant1 = 0 och oant2= 0*/                   
                  IF TIDREGITAB.OANT1 = 0  AND  TIDREGITAB.OANT2 = 0 THEN   overtidhj.VERKOV = klock100(TIDREGITAB.TOTALT).                  
               END.                  
            END.
         END.   
         GET NEXT toq NO-LOCK.           
      END.         
      IF Guru.Konstanter:globforetag = "GKAL" THEN kompaonr = "171".
      ELSE kompaonr = "170".
      OPEN QUERY toUq FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = tidpers.PERSONALKOD
      AND TIDREGITAB.DATUM GE DATE(01,01,regar) AND TIDREGITAB.DATUM LE DATE(12,31,regar) AND TIDREGITAB.AONR = kompaonr  NO-LOCK.
      GET FIRST touq NO-LOCK.
      DO WHILE AVAILABLE (TIDREGITAB):
         CREATE overtidhj.                          
         ASSIGN
         overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD
         overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)                          
         overtidhj.DATUM =  TIDREGITAB.DATUM.                     
         overtidhj.MANAD = MONTH(TIDREGITAB.DATUM).
         overtidhj.KOMPUTTAG = klock100(TIDREGITAB.TOTALT).         
         overtidhj.MULTIP = 1.
         GET NEXT touq NO-LOCK.           
      END.                  
   
   
      IF Guru.Konstanter:globforetag = "snat" THEN DO:
         /*berdskapstolkning när veckvila inträffar under klämdag genererar lart 260 = Fyllnadslön mot ledighet vid beredskap Lena 20190611*/         
         OPEN QUERY tblq FOR EACH TIDREGITAB WHERE
         TIDREGITAB.PERSONALKOD = tidpers.PERSONALKOD AND TIDREGITAB.DATUM GE DATE(01,01,regar) AND TIDREGITAB.DATUM LE DATE(12,31,regar) AND
         TIDREGITAB.LONTILLAGG = "260"  USE-INDEX PSTART NO-LOCK.   
         GET FIRST tblq NO-LOCK.
         DO WHILE AVAILABLE(TIDREGITAB):
            CREATE overtidhj.                          
            ASSIGN
            overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD                                          
            overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)     
            overtidhj.DATUM =  TIDREGITAB.DATUM
            overtidhj.OVERANTAL = klock100(TIDREGITAB.LONTILLANTAL) 
            overtidhj.OVERTIDTILL = TIDREGITAB.LONTILLAGG
            overtidhj.MANAD = MONTH(TIDREGITAB.DATUM)
            overtidhj.MULTIP = 0         
            overtidhj.OVERTIDUTTAG = "K"          
            overtidhj.ANTMULT =  overtidhj.OVERANTAL
            /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena */               
            overtidhj.VERKKO = 0.            
            GET NEXT tblq NO-LOCK.      
         END.
         /*berdskapstolkning klämdagar halvdagar genererar lart 260 = Fyllnadslön mot ledighet vid beredksp Lena 20190611*/      
         OPEN QUERY tbq FOR EACH TIDREGITAB WHERE
         TIDREGITAB.PERSONALKOD = tidpers.PERSONALKOD AND TIDREGITAB.DATUM GE DATE(01,01,regar) AND TIDREGITAB.DATUM LE DATE(12,31,regar) AND
         TIDREGITAB.BEREDSKAP = "260"  USE-INDEX PSTART NO-LOCK.   
         GET FIRST tbq NO-LOCK.
         DO WHILE AVAILABLE(TIDREGITAB):
            CREATE overtidhj.                          
            ASSIGN
            overtidhj.PERSONALKOD = TIDREGITAB.PERSONALKOD                                          
            overtidhj.NAMN = SUBSTRING(tidpers.FORNAMN,1,1) + "." + SUBSTRING(tidpers.EFTERNAMN,1,4)     
            overtidhj.DATUM =  TIDREGITAB.DATUM
            overtidhj.OVERANTAL = klock100(TIDREGITAB.BERANTAL) 
            overtidhj.OVERTIDTILL = TIDREGITAB.BEREDSKAP
            overtidhj.MANAD = MONTH(TIDREGITAB.DATUM)
            overtidhj.MULTIP = 0         
            overtidhj.OVERTIDUTTAG = "K"          
            overtidhj.ANTMULT =  overtidhj.OVERANTAL
            /*ändrad till verklig tid inte inte avrundad tid 20171122 Lena */               
            overtidhj.VERKKO = 0.            
            GET NEXT tbq NO-LOCK.      
         END.
      END.  
   END.
   
   FOR EACH overtidhj BREAK BY overtidhj.PERSONALKOD BY overtidhj.MANAD:    
      ACCUMULATE overtidhj.OVERANTAL (TOTAL  BY overtidhj.PERSONALKOD BY overtidhj.MANAD ).        
      ACCUMULATE overtidhj.ANTMULT (TOTAL  BY overtidhj.PERSONALKOD BY overtidhj.MANAD).
      ACCUMULATE overtidhj.KOMPUTTAG (TOTAL  BY overtidhj.PERSONALKOD BY overtidhj.MANAD).
      ACCUMULATE overtidhj.VERKKO (TOTAL  BY overtidhj.PERSONALKOD BY overtidhj.MANAD).
      ACCUMULATE overtidhj.VERKOV (TOTAL  BY overtidhj.PERSONALKOD BY overtidhj.MANAD).              
      IF LAST-OF(overtidhj.MANAD) THEN DO:      
         CREATE oversum.
         ASSIGN         
         oversum.PERSONALKOD = overtidhj.PERSONALKOD                  
         oversum.NAMN = overtidhj.NAMN        
         oversum.MANAD =   overtidhj.MANAD.        
         oversum.OVERANTAL = (ACCUM TOTAL BY overtidhj.MANAD overtidhj.OVERANTAL).                  
         oversum.ANTMULT = (ACCUM TOTAL BY overtidhj.MANAD overtidhj.ANTMULT).
         oversum.KOMPUTTAG = (ACCUM TOTAL BY overtidhj.MANAD overtidhj.KOMPUTTAG).
         oversum.VERKKO = (ACCUM TOTAL BY overtidhj.MANAD overtidhj.VERKKO).
         oversum.VERKOV = (ACCUM TOTAL BY overtidhj.MANAD overtidhj.VERKOV).                                             
      END.
   END.   
   FOR EACH oversum WHERE  BY oversum.PERSONALKOD : 
      FIND FIRST overhela WHERE overhela.PERSONALKOD = oversum.PERSONALKOD NO-ERROR.
      IF NOT AVAILABLE overhela  THEN DO:
         CREATE overhela.
         ASSIGN overhela.PERSONALKOD  =  oversum.PERSONALKOD
         overhela.NAMN = oversum.NAMN.         
      END.
      overhela.VERKKO = overhela.VERKKO + oversum.VERKKO.
      overhela.VERKOV = overhela.VERKOV + oversum.VERKOV.
      overhela.KOMPTOT = overhela.KOMPTOT + oversum.ANTMULT.
      overhela.KOMPUTTOT = overhela.KOMPUTTOT + oversum.KOMPUTTAG. 
      
      IF oversum.MANAD  = 1 THEN ASSIGN overhela.KOMP1 = oversum.ANTMULT   overhela.KOMPUT1 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 2 THEN ASSIGN overhela.KOMP2 = oversum.ANTMULT   overhela.KOMPUT2 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 3 THEN ASSIGN overhela.KOMP3 = oversum.ANTMULT   overhela.KOMPUT3 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 4 THEN ASSIGN overhela.KOMP4 = oversum.ANTMULT   overhela.KOMPUT4 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 5 THEN ASSIGN overhela.KOMP5 = oversum.ANTMULT   overhela.KOMPUT5 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 6 THEN ASSIGN overhela.KOMP6 = oversum.ANTMULT   overhela.KOMPUT6 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 7 THEN ASSIGN overhela.KOMP7 = oversum.ANTMULT   overhela.KOMPUT7 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 8 THEN ASSIGN overhela.KOMP8 = oversum.ANTMULT   overhela.KOMPUT8 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 9 THEN ASSIGN overhela.KOMP9 = oversum.ANTMULT   overhela.KOMPUT9 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 10 THEN ASSIGN overhela.KOMP10 = oversum.ANTMULT   overhela.KOMPUT10 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 11 THEN ASSIGN overhela.KOMP11 = oversum.ANTMULT   overhela.KOMPUT11 = oversum.KOMPUTTAG.
      IF oversum.MANAD  = 12 THEN ASSIGN overhela.KOMP12 = oversum.ANTMULT   overhela.KOMPUT12 = oversum.KOMPUTTAG.
      
   END.   
   FOR EACH overhela WHERE  BY overhela.PERSONALKOD :   
      
      CREATE tidut.               
      ASSIGN
      SUBSTRING(tidut.UT,1) = overhela.PERSONALKOD
      SUBSTRING(tidut.UT,8) = overhela.NAMN.
      SUBSTRING(tidut.UT,15) = STRING(klock60(overhela.VERKOV),">>9.99").
      SUBSTRING(tidut.UT,22) = STRING(klock60(overhela.VERKKO),">>9.99").                
      SUBSTRING(tidut.UT,29) = STRING(klock60(overhela.KOMP1),">9.99").
      SUBSTRING(tidut.UT,36) = STRING(klock60(overhela.KOMP2),">9.99").
      SUBSTRING(tidut.UT,43) = STRING(klock60(overhela.KOMP3),">9.99").
      SUBSTRING(tidut.UT,50) = STRING(klock60(overhela.KOMP4),">9.99").
      SUBSTRING(tidut.UT,57) = STRING(klock60(overhela.KOMP5),">9.99").
      SUBSTRING(tidut.UT,64) = STRING(klock60(overhela.KOMP6),">9.99").
      SUBSTRING(tidut.UT,71) = STRING(klock60(overhela.KOMP7),">9.99").
      SUBSTRING(tidut.UT,78) = STRING(klock60(overhela.KOMP8),">9.99").
      SUBSTRING(tidut.UT,85) = STRING(klock60(overhela.KOMP9),">9.99").
      SUBSTRING(tidut.UT,92) = STRING(klock60(overhela.KOMP10),">9.99").
      SUBSTRING(tidut.UT,99) = STRING(klock60(overhela.KOMP11),">9.99").
      SUBSTRING(tidut.UT,106) = STRING(klock60(overhela.KOMP12),">9.99").
      SUBSTRING(tidut.UT,113) = STRING(klock60(overhela.KOMPTOT),">>9.99").
      SUBSTRING(tidut.UT,120) = "Intjänad komp".      
      CREATE tidut.               
      ASSIGN
      SUBSTRING(tidut.UT,1) = overhela.PERSONALKOD
      SUBSTRING(tidut.UT,8) = overhela.NAMN.                
      SUBSTRING(tidut.UT,28) = STRING((klock60(overhela.KOMPUT1) * -1),"->9.99").
      SUBSTRING(tidut.UT,35) = STRING((klock60(overhela.KOMPUT2) * -1),"->9.99").
      SUBSTRING(tidut.UT,42) = STRING((klock60(overhela.KOMPUT3) * -1),"->9.99").
      SUBSTRING(tidut.UT,49) = STRING((klock60(overhela.KOMPUT4) * -1),"->9.99").
      SUBSTRING(tidut.UT,56) = STRING((klock60(overhela.KOMPUT5) * -1),"->9.99").
      SUBSTRING(tidut.UT,63) = STRING((klock60(overhela.KOMPUT6) * -1),"->9.99").
      SUBSTRING(tidut.UT,70) = STRING((klock60(overhela.KOMPUT7) * -1),"->9.99").
      SUBSTRING(tidut.UT,77) = STRING((klock60(overhela.KOMPUT8) * -1),"->9.99").
      SUBSTRING(tidut.UT,84) = STRING((klock60(overhela.KOMPUT9) * -1),"->9.99").
      SUBSTRING(tidut.UT,91) = STRING((klock60(overhela.KOMPUT10) * -1),"->9.99").
      SUBSTRING(tidut.UT,98) = STRING((klock60(overhela.KOMPUT11) * -1),"->9.99").
      SUBSTRING(tidut.UT,105) = STRING((klock60(overhela.KOMPUT12) * -1),"->9.99").
      SUBSTRING(tidut.UT,112) = STRING((klock60(overhela.KOMPUTTOT) * -1),"->>9.99").
      SUBSTRING(tidut.UT,120) = "Uttagen komp".
   END.   
      
END PROCEDURE.
