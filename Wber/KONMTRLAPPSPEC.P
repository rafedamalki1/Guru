/*
               KSV Editor
    Copyright: (C) 2000-2003 Serguey Klimoff (bulkl0DD)
     Filename: KONMTRLAPPSPEC.P
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2009.04.20 17:03 ELPAO   
     Modified: 2009.10.19 10:20 ELPAO    
     Modified: 2009.10.26 13:49 ELPAO    
     Modified: 
*/

{STARTFORAPP.I}
{KONSTRMTRL.I}
{LEVTEMP.I}
{MTRLTEMP.I}
{SMTRL.I}
{VISUNGRPTEMP.I}

DEFINE TEMP-TABLE copyvaltemp NO-UNDO LIKE konstvaltemp.
DEFINE TEMP-TABLE copyvaltemp2 NO-UNDO LIKE konstvaltemp.
DEFINE TEMP-TABLE copyvaltemp3 NO-UNDO LIKE konstvaltemp. /*ersätt allt input*/
DEFINE TEMP-TABLE copyvaltemp4 NO-UNDO LIKE konstvaltemp. /*ersätt allt output*/
DEFINE TEMP-TABLE copyvaltemp5 NO-UNDO LIKE konstvaltemp. /* rubriker bara*/
DEFINE TEMP-TABLE mtrltempspar NO-UNDO LIKE mtrlbertemp. /*spara undan mtrl som ska ersättas*/
DEFINE TEMP-TABLE grupp_temp NO-UNDO
   FIELD KONSKOD AS INTEGER
   FIELD BENAMNING AS CHARACTER.

   
  
 
DEFINE BUFFER kbuff FOR KALKBER.
/*hittar konstvalar överallt samt sparar undan mtrlberar*/
PROCEDURE hittakonstvalar_UI :
   DEFINE INPUT PARAMETER bfalt AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR copyvaltemp3.
   DEFINE OUTPUT PARAMETER TABLE FOR copyvaltemp4.
   DEFINE OUTPUT PARAMETER TABLE FOR mtrltempspar. 
   DEFINE BUFFER mbuff FOR MTRLBER.

   EMPTY TEMP-TABLE copyvaltemp4 NO-ERROR.
   EMPTY TEMP-TABLE mtrltempspar NO-ERROR.  

   FOR EACH copyvaltemp3 NO-LOCK:
      
      /* sparar undan MTRLBERAR */
      IF bfalt = 2 THEN DO TRANSACTION:
         FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = copyvaltemp3.KTYPKOD AND MTRLBER.F1 = copyvaltemp3.KVALKOD EXCLUSIVE-LOCK:
            CREATE mtrltempspar.
            BUFFER-COPY MTRLBER TO mtrltempspar.
         END.              
      END.
      ELSE IF bfalt = 3 THEN DO TRANSACTION:
         FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = copyvaltemp3.KTYPKOD AND MTRLBER.F2 = copyvaltemp3.KVALKOD EXCLUSIVE-LOCK:
            CREATE mtrltempspar.
            BUFFER-COPY MTRLBER TO mtrltempspar.
         END.              
      END.
      ELSE IF bfalt = 4 THEN DO TRANSACTION:
         FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = copyvaltemp3.KTYPKOD AND MTRLBER.F3 = copyvaltemp3.KVALKOD EXCLUSIVE-LOCK:
            CREATE mtrltempspar.
            BUFFER-COPY MTRLBER TO mtrltempspar.
         END.              
      END.
      ELSE IF bfalt = 5 THEN DO TRANSACTION:
         FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = copyvaltemp3.KTYPKOD AND MTRLBER.F4 = copyvaltemp3.KVALKOD EXCLUSIVE-LOCK:
            CREATE mtrltempspar.
            BUFFER-COPY MTRLBER TO mtrltempspar.
         END.              
      END.
      ELSE IF bfalt = 6 THEN DO TRANSACTION:
         FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = copyvaltemp3.KTYPKOD AND MTRLBER.F5 = copyvaltemp3.KVALKOD EXCLUSIVE-LOCK:
            CREATE mtrltempspar.
            BUFFER-COPY MTRLBER TO mtrltempspar.
         END.
      END.
      
      /* sparar undan alla konstvalar med samma KVALKOD (spelar ingen roll att den man valt också sparas undan IOM att materielet redan sparats ovan) */
      FOR EACH KONSTVAL WHERE KONSTVAL.KVALKOD = copyvaltemp3.KVALKOD NO-LOCK:
         CREATE copyvaltemp4.
         BUFFER-COPY KONSTVAL TO copyvaltemp4.                        
      END.   
   END.
      

END PROCEDURE.


/* skriver över materiel för ett konstruktionstillbehör (körs om JA i .w KONMTRLU.W */
PROCEDURE bortmtrl_UI :
   DEFINE INPUT PARAMETER TABLE FOR copyvaltemp.
   DEFINE INPUT PARAMETER nyktypkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bfalt AS INTEGER NO-UNDO.

   FIND FIRST copyvaltemp NO-ERROR.


   IF bfalt = 2 THEN DO TRANSACTION:
      FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = nyktypkod AND MTRLBER.F1 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE MTRLBER.
      END.
      FOR EACH KALKBER WHERE KALKBER.KTYPKOD = nyktypkod AND KALKBER.F1 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE KALKBER.
      END.  
   END.
   ELSE IF bfalt = 3 THEN DO TRANSACTION:
      FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = nyktypkod AND MTRLBER.F2 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE MTRLBER.
      END.  
      FOR EACH KALKBER WHERE KALKBER.KTYPKOD = nyktypkod AND KALKBER.F2 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE KALKBER.
      END.  
   END.
   ELSE IF bfalt = 4 THEN DO TRANSACTION:
      FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = nyktypkod AND MTRLBER.F3 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE MTRLBER.
      END.              
      FOR EACH KALKBER WHERE KALKBER.KTYPKOD = nyktypkod AND KALKBER.F3 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE KALKBER.
      END.  
   END.
   ELSE IF bfalt = 5 THEN DO TRANSACTION:
      FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = nyktypkod AND MTRLBER.F4 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE MTRLBER.
      END.              
      FOR EACH KALKBER WHERE KALKBER.KTYPKOD = nyktypkod AND KALKBER.F4 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE KALKBER.
      END.  
   END.
   ELSE IF bfalt = 6 THEN DO TRANSACTION:
      FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = nyktypkod AND MTRLBER.F5 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE MTRLBER.
      END.
      FOR EACH KALKBER WHERE KALKBER.KTYPKOD = nyktypkod AND KALKBER.F5 = copyvaltemp.KVALKOD EXCLUSIVE-LOCK:
         DELETE KALKBER.
      END.  
   END.
END PROCEDURE.


/* skapar mtrlberar, och sätter materielet i rätt fält */
PROCEDURE insertmtrl_UI :
   DEFINE INPUT PARAMETER TABLE FOR mtrltempspar.
   DEFINE INPUT PARAMETER TABLE FOR copyvaltemp5.
   DEFINE INPUT PARAMETER bfalt AS INTEGER NO-UNDO.

   DEFINE VARIABLE btemp AS CHARACTER NO-UNDO.

   FOR EACH mtrltempspar NO-LOCK:
      IF mtrltempspar.F1 NE "" THEN DO: 
         btemp = mtrltempspar.F1.
         mtrltempspar.F1 = "".
      END.
      ELSE IF mtrltempspar.F2 NE "" THEN DO: 
         btemp = mtrltempspar.F2.
         mtrltempspar.F2 = "".
      END.
      ELSE IF mtrltempspar.F3 NE "" THEN DO: 
         btemp = mtrltempspar.F3.
         mtrltempspar.F3 = "".
      END.
      ELSE IF mtrltempspar.F4 NE "" THEN DO: 
         btemp = mtrltempspar.F4.
         mtrltempspar.F4 = "".
      END.
      ELSE IF mtrltempspar.F5 NE "" THEN DO: 
         btemp = mtrltempspar.F5.
         mtrltempspar.F5 = "".
      END.

      CREATE MTRLBER.
      BUFFER-COPY mtrltempspar TO MTRLBER.
      
      FIND FIRST copyvaltemp5 NO-ERROR.
      MTRLBER.KTYPKOD = copyvaltemp5.KTYPKOD.
      
       IF bfalt = 2 THEN DO:
         MTRLBER.F1 = btemp.
       END.
       ELSE IF bfalt = 3 THEN DO:
          MTRLBER.F2 = btemp.
       END.
       ELSE IF bfalt = 4 THEN DO:
          MTRLBER.F3 = btemp.
       END.
       ELSE IF bfalt = 5 THEN DO:
          MTRLBER.F4 = btemp.
       END.
       ELSE IF bfalt = 6 THEN DO:
          MTRLBER.F5 = btemp.
       END.

   END.


END PROCEDURE.

/*kopierar från en konst till en annan*/
PROCEDURE copymtrl_UI :
   DEFINE INPUT PARAMETER TABLE FOR copyvaltemp.
   DEFINE INPUT PARAMETER nyktypkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bfalt AS INTEGER NO-UNDO.

   DEFINE BUFFER mbuff FOR MTRLBER.

   DEFINE VARIABLE btemp AS CHARACTER NO-UNDO.

   FOR EACH copyvaltemp NO-LOCK:
      FIND FIRST BBENAMNING WHERE BBENAMNING.KONSKOD = copyvaltemp.KONSKOD NO-LOCK NO-ERROR.
      IF copyvaltemp.BB NE "" THEN DO:
         IF BBENAMNING.B2 = copyvaltemp.BB THEN DO:
            FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KONSKOD = copyvaltemp.KONSKOD AND KONSTRUKTION.KTYPKOD = copyvaltemp.KTYPKOD USE-INDEX KOD NO-LOCK.
            FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND MTRLBER.F1 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE mbuff.
               BUFFER-COPY MTRLBER TO mbuff.
               ASSIGN
                  mbuff.KTYPKOD = nyktypkod
                  btemp = MTRLBER.F1
                  mbuff.F1 = "".
               IF bfalt = 2 THEN mbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN mbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN mbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN mbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN mbuff.F5 = btemp.
            END.
            FOR EACH KALKBER WHERE KALKBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND KALKBER.F1 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE kbuff.
               BUFFER-COPY KALKBER TO kbuff.
               ASSIGN
               kbuff.KTYPKOD = nyktypkod
               btemp = KALKBER.F1
               kbuff.F1 = "".
               IF bfalt = 2 THEN kbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN kbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN kbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN kbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN kbuff.F5 = btemp.
            END.
         END.
         ELSE IF BBENAMNING.B3 = copyvaltemp.BB THEN DO:
            FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KONSKOD = copyvaltemp.KONSKOD AND KONSTRUKTION.KTYPKOD = copyvaltemp.KTYPKOD USE-INDEX KOD NO-LOCK.
            FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND MTRLBER.F2 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE mbuff.
               BUFFER-COPY MTRLBER TO mbuff.
               ASSIGN
                  mbuff.KTYPKOD = nyktypkod
                  btemp = MTRLBER.F2
                  mbuff.F2 = "".
               IF bfalt = 2 THEN mbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN mbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN mbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN mbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN mbuff.F5 = btemp.
            END.
            FOR EACH KALKBER WHERE KALKBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND KALKBER.F2 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE kbuff.
               BUFFER-COPY KALKBER TO kbuff.
               ASSIGN
               kbuff.KTYPKOD = nyktypkod
               btemp = KALKBER.F2
               kbuff.F2 = "".
               IF bfalt = 2 THEN kbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN kbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN kbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN kbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN kbuff.F5 = btemp.
            END.
         END.
         ELSE IF BBENAMNING.B4 = copyvaltemp.BB THEN DO:
            FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KONSKOD = copyvaltemp.KONSKOD AND KONSTRUKTION.KTYPKOD = copyvaltemp.KTYPKOD USE-INDEX KOD NO-LOCK.
            FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND MTRLBER.F3 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE mbuff.
               BUFFER-COPY MTRLBER TO mbuff.
               ASSIGN
                  mbuff.KTYPKOD = nyktypkod
                  btemp = MTRLBER.F3
                  mbuff.F3 = "".
               IF bfalt = 2 THEN mbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN mbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN mbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN mbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN mbuff.F5 = btemp.
            END.
            FOR EACH KALKBER WHERE KALKBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND KALKBER.F3 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE kbuff.
               BUFFER-COPY KALKBER TO kbuff.
               ASSIGN
               kbuff.KTYPKOD = nyktypkod
               btemp = KALKBER.F3
               kbuff.F3 = "".
               IF bfalt = 2 THEN kbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN kbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN kbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN kbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN kbuff.F5 = btemp.
            END.
         END.
         ELSE IF BBENAMNING.B5 = copyvaltemp.BB THEN DO:
            FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KONSKOD = copyvaltemp.KONSKOD AND KONSTRUKTION.KTYPKOD = copyvaltemp.KTYPKOD USE-INDEX KOD NO-LOCK.
            FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND MTRLBER.F4 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE mbuff.
               BUFFER-COPY MTRLBER TO mbuff.
               ASSIGN
                  mbuff.KTYPKOD = nyktypkod
                  btemp = MTRLBER.F4
                  mbuff.F4 = "".
               IF bfalt = 2 THEN mbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN mbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN mbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN mbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN mbuff.F5 = btemp.
            END.
            FOR EACH KALKBER WHERE KALKBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND KALKBER.F4 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE kbuff.
               BUFFER-COPY KALKBER TO kbuff.
               ASSIGN
               kbuff.KTYPKOD = nyktypkod
               btemp = KALKBER.F4
               kbuff.F4 = "".
               IF bfalt = 2 THEN kbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN kbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN kbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN kbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN kbuff.F5 = btemp.
            END.
         END.
         ELSE IF BBENAMNING.B6 = copyvaltemp.BB THEN DO:
            FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KONSKOD = copyvaltemp.KONSKOD AND KONSTRUKTION.KTYPKOD = copyvaltemp.KTYPKOD USE-INDEX KOD NO-LOCK.
            FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND MTRLBER.F5 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE mbuff.
               BUFFER-COPY MTRLBER TO mbuff.
               ASSIGN
               mbuff.KTYPKOD = nyktypkod
               btemp = MTRLBER.F5
               mbuff.F5 = "".
               IF bfalt = 2 THEN mbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN mbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN mbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN mbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN mbuff.F5 = btemp.

            END.
            FOR EACH KALKBER WHERE KALKBER.KTYPKOD = KONSTRUKTION.KTYPKOD AND KALKBER.F5 = copyvaltemp.KVALKOD NO-LOCK:
               CREATE kbuff.
               BUFFER-COPY KALKBER TO kbuff.
               ASSIGN
               kbuff.KTYPKOD = nyktypkod
               btemp = KALKBER.F5
               kbuff.F5 = "".
               IF bfalt = 2 THEN kbuff.F1 = btemp.
               ELSE IF bfalt = 3 THEN kbuff.F2 = btemp.
               ELSE IF bfalt = 4 THEN kbuff.F3 = btemp.
               ELSE IF bfalt = 5 THEN kbuff.F4 = btemp.
               ELSE IF bfalt = 6 THEN kbuff.F5 = btemp.
            END.
         END.
      END.
   END.
   
END PROCEDURE.


/* hitta benämning på konstgrupp för en konskod */
PROCEDURE hittagrupp_UI :
   DEFINE INPUT PARAMETER kk AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER gruppz AS CHARACTER NO-UNDO.
      
   FIND FIRST KONSTGRUPP WHERE KONSTGRUPP.KONSKOD = kk NO-ERROR.
   gruppz = KONSTGRUPP.BENAMNING.

END PROCEDURE.

/* hitta vilket fält en konstval finns i*/
PROCEDURE hittafalt_UI :
   DEFINE INPUT PARAMETER kk AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bbvar AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER bfaltvar AS INTEGER NO-UNDO.

   FIND FIRST BBENAMNING WHERE BBENAMNING.KONSKOD = kk NO-LOCK NO-ERROR.

   IF BBENAMNING.B2 = bbvar THEN bfaltvar = 2.
   ELSE IF BBENAMNING.B3 = bbvar THEN bfaltvar = 3.
   ELSE IF BBENAMNING.B4 = bbvar THEN bfaltvar = 4.
   ELSE IF BBENAMNING.B5 = bbvar THEN bfaltvar = 5.
   ELSE IF BBENAMNING.B6 = bbvar THEN bfaltvar = 6.

END PROCEDURE.

PROCEDURE hmtallaungrp_UI :
   DEFINE INPUT PARAMETER TABLE FOR grupp_temp.   
   DEFINE OUTPUT PARAMETER TABLE FOR visungrptemp.

   EMPTY TEMP-TABLE visungrptemp  NO-ERROR. 
   FOR EACH grupp_temp,
   EACH KONSTVAL WHERE KONSTVAL.KONSKOD = grupp_temp.KONSKOD AND KONSTVAL.KOPP = TRUE NO-LOCK.
      FIND FIRST KONSTGRUPP WHERE KONSTGRUPP.KONSKOD = grupp_temp.KONSKOD NO-LOCK NO-ERROR.
      FIND FIRST KONSTRUKTION WHERE KONSTRUKTION.KTYPKOD = KONSTVAL.KTYPKOD NO-LOCK NO-ERROR.
      CREATE visungrptemp.
      ASSIGN 
      visungrptemp.KONSKOD = KONSTVAL.KONSKOD
      visungrptemp.KTYPKOD  = KONSTVAL.KTYPKOD
      visungrptemp.BB  = KONSTVAL.BB
      visungrptemp.KVALKOD  = KONSTVAL.KVALKOD      
      visungrptemp.UBENAMNING  = KONSTVAL.BENAMNING
      visungrptemp.UORDNING  = KONSTVAL.ORDNING.
      IF AVAILABLE KONSTRUKTION THEN  visungrptemp.KONSTRORDNING  = KONSTRUKTION.ORDNING.
      IF AVAILABLE KONSTGRUPP THEN DO:
         ASSIGN
         visungrptemp.KBENAMNING  = KONSTGRUPP.BENAMNING
         visungrptemp.KORDNING  = KONSTGRUPP.ORDNING.
      END.   
      
      
   END.
 
END PROCEDURE.
