/*SUMKALK2C.p*/
{KALKYLUPP.I}
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE xtypmtrl AS INTEGER NO-UNDO.
DEFINE VARIABLE monpris LIKE EBRPRIS.MONT NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE region AS LOGICAL NO-UNDO.
DEFINE VARIABLE emask3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{DIRDEF.I}
{EXTRATAB.I}
{KALKTEMP.I}
{EXTRADATA.I}
/*BEREDNING*/
{LISTDEF.I} 
DEFINE NEW SHARED TEMP-TABLE mtrl_temp2   
   {MTRLTEMP2TT.I} 
/*SLUT BEREDNING*/

DEFINE INPUT PARAMETER kalknrvar AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER cglobforetag LIKE FORETAG.FORETAG NO-UNDO.
DEFINE OUTPUT PARAMETER totkost AS INTEGER NO-UNDO.

RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
{KALKYLUPPSUMMA.I}

FIND FIRST KALKAONR WHERE KALKAONR.KALKNR = kalknrvar
USE-INDEX KALKNR NO-LOCK NO-ERROR. 
RUN kalkupp_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE).  
         
   
RUN kalksummering_UI (INPUT KALKAONR.KALKNR,INPUT KALKAONR.OMRADE). 
totkost = kalksumsum.BELOPP + kalksumsum.MASKGBELOPP  + kalksumsum.OVRKR + kalksumsum.MTRL.         
PROCEDURE procset_UI:  
  IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.            
END PROCEDURE .
