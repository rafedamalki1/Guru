/*MOMSBER.I*/
FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR 
USE-INDEX FAKTREGLER NO-LOCK NO-ERROR.
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
USE-INDEX FAKTA NO-LOCK.
{FAKTFRIT.I}
{EXTRADATA.I}  
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
DEFINE VARIABLE intaktvarhj  AS LOGICAL NO-UNDO.
DEFINE VARIABLE kundvarhj    AS LOGICAL NO-UNDO.
DEFINE VARIABLE motpartvarhj AS LOGICAL NO-UNDO.
RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
RUN moms_UI.
RUN allttak_UI.
IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.      
edataapph = ?.
PROCEDURE allttak_UI :
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "GRAN" 
   OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
      musz = musz.
   END.
   ELSE RETURN.
   IF vartyp = 5 AND FILL-IN_SLUTFAKT = TRUE THEN DO:
      musz = musz.
   END.   
   ELSE RETURN.
   IF FAKTPLAN.ALLTTAK = TRUE OR FAKTPLAN.FAKTTYPUNDER = 3 THEN DO:
      musz = musz.
   END.   
   ELSE RETURN.
   OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
   USE-INDEX FAKTA NO-LOCK.
   GET FIRST faktaonrq NO-LOCK.
   DO WHILE AVAILABLE(FAKTAONR):      
      OPEN QUERY finq FOR EACH FAKTINTAKTKONT WHERE 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND               
      FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
      FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND 
      FAKTINTAKTKONT.VFAKTNR NE 0 NO-LOCK.                                        
      GET FIRST finq NO-LOCK.
      nyber = 0.
      DO WHILE AVAILABLE(FAKTINTAKTKONT):
         nyber =  nyber + FAKTINTAKTKONT.BELOPP.
         GET NEXT finq NO-LOCK.
      END.
      FIND FIRST FAKTINTAKTKONT WHERE 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTINTAKTKONT.VFAKTNR = 0 AND
      FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
      FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR                                        
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTINTAKTKONT THEN DO:         
         RUN allber_UI.
      END.
      ELSE IF (FAKTINTAKTKONT.BELOPP + nyber) NE FAKTAONR.OPRIS THEN DO:
         nyber = nyber + FAKTINTAKTKONT.BELOPP.
         RUN allber_UI.
      END.
      GET NEXT faktaonrq NO-LOCK.
   END.      
END PROCEDURE.

PROCEDURE allber_UI :
   DO TRANSACTION:
      nymoms = TRUE.
      FIND FIRST FAKTFRIA WHERE FAKTFRIA.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTFRIA.FDELNR = FAKTURERAD.FDELNR AND FAKTFRIA.FAKTTEXT = "Dubbel-klicka på denna rad för nyupplägg" 
      EXCLUSIVE-LOCK NO-ERROR.
      FAKTFRIA.LOPNR = FAKTFRIA.LOPNR + 1.
      frinr = FAKTFRIA.LOPNR.  
      FIND FIRST FAKTFRIA WHERE FAKTFRIA.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTFRIA.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTFRIA.AONR = FAKTAONR.AONR AND
      FAKTFRIA.DELNR = FAKTAONR.DELNR AND
      FAKTFRIA.FAKTTEXT = "Korigering mot takpris" 
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTFRIA THEN CREATE FAKTFRIA.       
      ASSIGN    
      FAKTFRIA.AONR = FAKTAONR.AONR
      FAKTFRIA.DELNR = FAKTAONR.DELNR
      FAKTFRIA.FAKTNR = FAKTPLAN.FAKTNR
      FAKTFRIA.FDELNR = FAKTURERAD.FDELNR
      FAKTFRIA.FAKTURERAD = TRUE
      FAKTFRIA.LOPNR = frinr      
      FAKTFRIA.TYP = "OVER"       
      FAKTFRIA.FAKTTEXT = "Korigering mot takpris"
      FAKTFRIA.PRIS_ENHET = FAKTAONR.OPRIS - nyber 
      FAKTFRIA.ANTAL = 1
      FAKTFRIA.TOTALT = FAKTAONR.OPRIS - nyber.  
   END.
END PROCEDURE.
PROCEDURE inaktfast_UI :  
   GET FIRST faktaonrq NO-LOCK.
   DO WHILE AVAILABLE(FAKTAONR):
       /*ALLA INGÅENDE AONR PRIS*/
      faoff = faoff + FAKTAONR.OPRIS.
      CREATE frikolltemp.
      ASSIGN
      frikolltemp.AONR  = FAKTAONR.AONR
      frikolltemp.DELNR = FAKTAONR.DELNR
      frikolltemp.TOTBELOPP = FAKTAONR.OPRIS.
      GET NEXT faktaonrq NO-LOCK.  
   END.
   
   FOR EACH FAKTSTART WHERE FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR AND                     
   FAKTSTART.VFAKTNR = 0 AND FAKTSTART.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY FAKTSTART.FAKTURERAD:              
      ACCUMULATE FAKTSTART.BELOPP (TOTAL BY FAKTSTART.FAKTURERAD).            
      IF LAST-OF(FAKTSTART.FAKTURERAD) THEN DO:
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY FAKTSTART.FAKTURERAD FAKTSTART.BELOPP).
      END.   
   END.   
   FOR EACH FAKTSTART WHERE FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR AND
   FAKTSTART.VFAKTNR = 0 AND FAKTSTART.FAKTURERAD = TRUE NO-LOCK.
      IF FAKTSTART.PLANDATUM = ? THEN DO:
         FIND FIRST artemp WHERE artemp.ARTAL = YEAR(TODAY) NO-ERROR.  
      END.
      ELSE FIND FIRST artemp WHERE artemp.ARTAL = YEAR(FAKTSTART.PLANDATUM) NO-ERROR.
      IF NOT AVAILABLE artemp THEN DO:
         CREATE artemp.
         artemp.ARTAL = YEAR(FAKTSTART.PLANDATUM).
         IF artemp.ARTAL = ? THEN artemp.ARTAL = YEAR(TODAY).
      END.      
   END.
   
   FOR EACH FAKTSTART WHERE FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK:
      IF FAKTSTART.VFAKTNR = 0 AND FAKTSTART.FAKTURERAD = TRUE THEN DO:
         musz = musz.
      END.
      ELSE DO:
         FIND FIRST artemp WHERE artemp.ARTAL = YEAR(FAKTSTART.PLANDATUM) NO-ERROR.
         IF AVAILABLE artemp THEN musz = musz.
         ELSE extrasumma = extrasumma + FAKTSTART.BELOPP.
      END.
   END.   
   IF FAKTPLAN.OFFERTPRIS > 0 THEN DO:
      delfakt = nyfakttotal / FAKTPLAN.OFFERTPRIS.     
      IF vartyp = 1 THEN RUN nyproc_UI.      
   END.     
   GET FIRST faktaonrq NO-LOCK.   
   IF vartyp = 1 OR vartyp = 3 THEN DO: 
      GET FIRST faktaonrq NO-LOCK.      
      IF faoff = FAKTPLAN.OFFERTPRIS AND faoff > 0 THEN DO:
         DO WHILE AVAILABLE(FAKTAONR) TRANSACTION:      
            FIND FIRST frikolltemp WHERE frikolltemp.AONR = FAKTAONR.AONR AND 
            frikolltemp.DELNR = FAKTAONR.DELNR NO-ERROR.             
            IF frikolltemp.FORDELNING = TRUE THEN DO:           
               FIND FIRST FAKTINTAKTKONT WHERE 
               FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTINTAKTKONT.VFAKTNR = 0 AND
               FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
               FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
               FAKTINTAKTKONT.MOMSID = 0                                                    
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
               ASSIGN 
               FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
               FAKTINTAKTKONT.VFAKTNR = 0            
               FAKTINTAKTKONT.AONR = FAKTAONR.AONR
               FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR                         
               FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE
               FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
               FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + delfakt * FAKTAONR.OPRIS.            
               FIND FIRST FAKTKUNDKONTO WHERE 
               FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTKUNDKONTO.VFAKTNR = 0 AND
               FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
               FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
               ASSIGN 
               FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
               FAKTKUNDKONTO.VFAKTNR = 0            
               FAKTKUNDKONTO.AONR = FAKTAONR.AONR
               FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
               FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
               FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
               FAKTKUNDKONTO.FAKTDATUM = TODAY         
               FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + delfakt * FAKTAONR.OPRIS.         
               RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
            END.
            GET NEXT faktaonrq NO-LOCK.
         END.
      END.      
      ELSE DO TRANSACTION:
         FIND FIRST FAKTINTAKTKONT WHERE 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTINTAKTKONT.VFAKTNR = 0 AND
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONT.MOMSID = 0                                      
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
         ASSIGN 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
         FAKTINTAKTKONT.VFAKTNR = 0            
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR                         
         FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE
         FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID
         FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + nyfakttotal.
         FIND FIRST FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 AND
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
         ASSIGN 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
         FAKTKUNDKONTO.VFAKTNR = 0            
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTO.FAKTDATUM = TODAY
         FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + nyfakttotal.         
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.
   ELSE DO:
      OPEN QUERY BRW_PLAN FOR EACH FAKTSTART WHERE 
      FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK.
      GET FIRST BRW_PLAN NO-LOCK.      
      DO WHILE AVAILABLE(FAKTSTART):
         IF FAKTSTART.FAKTURERAD = TRUE AND FAKTSTART.VFAKTNR = 0 THEN DO:
            IF FAKTSTART.START NE "" THEN DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.START = FAKTSTART.START 
               NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.PLANDATUM = FAKTSTART.PLANDATUM 
               NO-LOCK.
            END.
            GET FIRST faktavtq NO-LOCK.
            DO WHILE AVAILABLE(FAKTAVTALAONR) TRANSACTION: 
               FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
               FAKTAONR.AONR = FAKTAVTALAONR.AONR AND FAKTAONR.DELNR = FAKTAVTALAONR.DELNR
               NO-LOCK NO-ERROR.     
               FIND FIRST FAKTINTAKTKONT WHERE 
               FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTINTAKTKONT.VFAKTNR = 0 AND
               FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
               FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
               FAKTINTAKTKONT.MOMSID = 0                                       
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
               ASSIGN 
               FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
               FAKTINTAKTKONT.VFAKTNR = 0            
               FAKTINTAKTKONT.AONR = FAKTAONR.AONR
               FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR                         
               FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE
               FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
               FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + FAKTAVTALAONR.BELOPP.
               FIND FIRST FAKTKUNDKONTO WHERE 
               FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTKUNDKONTO.VFAKTNR = 0 AND
               FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
               FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
               ASSIGN 
               FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
               FAKTKUNDKONTO.VFAKTNR = 0            
               FAKTKUNDKONTO.AONR = FAKTAONR.AONR
               FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
               FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
               FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
               FAKTKUNDKONTO.FAKTDATUM = TODAY         
               FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + FAKTAVTALAONR.BELOPP.         
               RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
               GET NEXT faktavtq NO-LOCK.
            END.
         END.
         GET NEXT BRW_PLAN NO-LOCK.
      END.      
   END.  
END PROCEDURE.

PROCEDURE inaktupp_UI :  
   
   FOR EACH FAKTUPPARB WHERE FAKTUPPARB.FAKTNR = FAKTPLAN.FAKTNR AND                     
   FAKTUPPARB.VFAKTNR = 0 AND FAKTUPPARB.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY FAKTUPPARB.FAKTURERAD:              
      ACCUMULATE FAKTUPPARB.FAKTBELOPP (TOTAL BY FAKTUPPARB.FAKTURERAD).            
      IF LAST-OF(FAKTUPPARB.FAKTURERAD) THEN DO:
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY FAKTUPPARB.FAKTURERAD FAKTUPPARB.FAKTBELOPP).
      END.   
   END.   
   IF FAKTPLAN.OFFERTPRIS > 0 THEN DO:
      delfakt = nyfakttotal / FAKTPLAN.OFFERTPRIS.      
   END.
   OPEN QUERY BRW_UPP FOR EACH FAKTUPPARB WHERE 
   FAKTUPPARB.FAKTNR = FAKTPLAN.FAKTNR AND FAKTUPPARB.FAKTURERAD = TRUE AND                     
   FAKTUPPARB.VFAKTNR = 0
   NO-LOCK BY FAKTUPPARB.UPLAN%.
   GET FIRST BRW_UPP NO-LOCK.
   DO WHILE AVAILABLE(FAKTUPPARB):  
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = FAKTUPPARB.AONR AND FAKTAONR.DELNR = FAKTUPPARB.DELNR
      NO-LOCK NO-ERROR.     
      FIND FIRST FAKTINTAKTKONT WHERE 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTINTAKTKONT.VFAKTNR = 0 AND
      FAKTINTAKTKONT.AONR = FAKTUPPARB.AONR AND
      FAKTINTAKTKONT.DELNR = FAKTUPPARB.DELNR AND
      FAKTINTAKTKONT.MOMSID = 0                                      
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
      ASSIGN 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
      FAKTINTAKTKONT.VFAKTNR = 0            
      FAKTINTAKTKONT.AONR = FAKTUPPARB.AONR
      FAKTINTAKTKONT.DELNR = FAKTUPPARB.DELNR                         
      FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE
      FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
      FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
      FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + FAKTUPPARB.FAKTBELOPP.
      FIND FIRST FAKTKUNDKONTO WHERE 
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTKUNDKONTO.VFAKTNR = 0 AND
      FAKTKUNDKONTO.AONR = FAKTUPPARB.AONR AND
      FAKTKUNDKONTO.DELNR = FAKTUPPARB.DELNR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
      ASSIGN 
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
      FAKTKUNDKONTO.VFAKTNR = 0            
      FAKTKUNDKONTO.AONR = FAKTUPPARB.AONR
      FAKTKUNDKONTO.DELNR = FAKTUPPARB.DELNR                         
      FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
      FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
      FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
      FAKTKUNDKONTO.FAKTDATUM = TODAY         
      FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + FAKTUPPARB.FAKTBELOPP.         
      RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).     
      GET NEXT BRW_UPP NO-LOCK.
   END.   
END PROCEDURE.

PROCEDURE inaktfria_UI :
   
   EMPTY TEMP-TABLE efaktfriatemp NO-ERROR. 
   EMPTY TEMP-TABLE faktfriatemp NO-ERROR. 
   FOR EACH FAKTFRIA WHERE FAKTFRIA.FAKTNR = FAKTPLAN.FAKTNR AND
   FAKTFRIA.FDELNR = FAKTURERAD.FDELNR AND FAKTFRIA.FAKTURERAD = TRUE NO-LOCK:      
      IF FAKTFRIA.TYP BEGINS "FAKT" THEN DO:
         CREATE efaktfriatemp.
         BUFFER-COPY FAKTFRIA TO efaktfriatemp.
         efaktfriatemp.TYP = SUBSTRING(efaktfriatemp.TYP,5).
      END.
      ELSE DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY FAKTFRIA TO faktfriatemp.
      END.            
   END.
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.
   ASSIGN
   inextradatatemp.PROGRAM = "FRIPRIS"                   
   inextradatatemp.HUVUDCH = ?              
   inextradatatemp.HUVUDINT = ?.      
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp,OUTPUT TABLE extradatatemp).
   FOR EACH efaktfriatemp:
      FIND FIRST extradatatemp WHERE extradatatemp.HUVUDINT = INTEGER(efaktfriatemp.TYP)
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE extradatatemp THEN DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY efaktfriatemp TO faktfriatemp.
         DELETE efaktfriatemp.
         NEXT.
      END.
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = efaktfriatemp.AONR AND
      FAKTAONR.DELNR = efaktfriatemp.DELNR NO-LOCK NO-ERROR.                  
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = efaktfriatemp.AONR NO-LOCK NO-ERROR.
      END.
      IF extradatatemp.SOKINT[2] = 0 THEN DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTINTAKTKONT WHERE 
            FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTINTAKTKONT.VFAKTNR = 0 AND
            FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONT.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTINTAKTKONT WHERE 
            FAKTINTAKTKONT.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTINTAKTKONT.VFAKTNR = 0 AND
            FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONT.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.            
         END.         
      END.
      ELSE DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTINTAKTKONT WHERE 
            FAKTINTAKTKONT.INTAKTID = extradatatemp.SOKINT[2] AND
            FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTINTAKTKONT.VFAKTNR = 0 AND
            FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONT.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTINTAKTKONT WHERE 
            FAKTINTAKTKONT.INTAKTID = extradatatemp.SOKINT[2] AND
            FAKTINTAKTKONT.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTINTAKTKONT.VFAKTNR = 0 AND
            FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONT.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.        
      END.
      IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
      ASSIGN 
      FAKTINTAKTKONT.INTAKTID = extradatatemp.SOKINT[2]
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
      FAKTINTAKTKONT.VFAKTNR = 0            
      FAKTINTAKTKONT.AONR = FAKTAONR.AONR
      FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR 
      FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE                        
      FAKTINTAKTKONT.MOMSID = efaktfriatemp.MOMSID
      FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + efaktfriatemp.TOTALT.                        
      IF extradatatemp.SOKINT[2] = 0 THEN  FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID. 
      ELSE DO:
         FAKTINTAKTKONT.INTAKTID = extradatatemp.SOKINT[2]. 
      END.
      
      IF extradatatemp.SOKINT[3] = 0 THEN FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID.
      ELSE FAKTINTAKTKONT.MOTPARTID = extradatatemp.SOKINT[3].
      nyfakttotal = nyfakttotal + efaktfriatemp.TOTALT.
      IF extradatatemp.SOKINT[1] = 0 THEN DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTKUNDKONTO WHERE 
            FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTKUNDKONTO.VFAKTNR = 0 AND
            FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTKUNDKONTO WHERE 
            FAKTKUNDKONTO.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTKUNDKONTO.VFAKTNR = 0 AND
            FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.         
      END.
      ELSE DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTKUNDKONTO WHERE 
            FAKTKUNDKONTO.KUNDKONTOID = extradatatemp.SOKINT[1] AND 
            FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTKUNDKONTO.VFAKTNR = 0 AND
            FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTKUNDKONTO WHERE 
            FAKTKUNDKONTO.KUNDKONTOID = extradatatemp.SOKINT[1] AND 
            FAKTKUNDKONTO.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTKUNDKONTO.VFAKTNR = 0 AND
            FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.        
      END.
      IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
      ASSIGN
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
      FAKTKUNDKONTO.VFAKTNR = 0            
      FAKTKUNDKONTO.AONR = FAKTAONR.AONR
      FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                                        
      FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
      FAKTKUNDKONTO.FAKTDATUM = TODAY           
      FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + efaktfriatemp.TOTALT.                                   
      ASSIGN
      intaktvarhj = TRUE
      kundvarhj   = TRUE
      motpartvarhj = TRUE.
      
      IF FAKTINTAKTKONT.INTAKTID NE 0 THEN intaktvarhj = FALSE.
      IF extradatatemp.SOKINT[1] = 0 THEN FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID. 
      ELSE DO:
         ASSIGN
         kundvarhj   = FALSE
         FAKTKUNDKONTO.KUNDKONTOID = extradatatemp.SOKINT[1]. 
      END.
      IF extradatatemp.SOKINT[3] = 0 THEN FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID.
      ELSE DO:
         ASSIGN
         motpartvarhj   = FALSE
         FAKTKUNDKONTO.MOTPARTID = extradatatemp.SOKINT[3].
      END.           
      RUN styrintakt_UI (INPUT intaktvarhj,INPUT kundvarhj,INPUT motpartvarhj).
   END.
   FOR EACH faktfriatemp WHERE faktfriatemp.FAKTNR = FAKTPLAN.FAKTNR AND
   faktfriatemp.FDELNR = FAKTURERAD.FDELNR AND faktfriatemp.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.MOMSID:              
      ACCUMULATE 
      faktfriatemp.TOTALT (TOTAL BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.MOMSID).            
      IF LAST-OF(faktfriatemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = faktfriatemp.AONR AND
         FAKTAONR.DELNR = faktfriatemp.DELNR NO-LOCK NO-ERROR.                  
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = faktfriatemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONT WHERE 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTINTAKTKONT.VFAKTNR = 0 AND
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONT.MOMSID = faktfriatemp.MOMSID                                       
         EXCLUSIVE-LOCK NO-ERROR.
         
         IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
         ASSIGN 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
         FAKTINTAKTKONT.VFAKTNR = 0            
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR 
         FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE                        
         FAKTINTAKTKONT.MOMSID = faktfriatemp.MOMSID
         FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP +
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).                        
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).
         FIND FIRST FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 AND
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
         ASSIGN
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
         FAKTKUNDKONTO.VFAKTNR = 0            
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTO.FAKTDATUM = TODAY           
         FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + 
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).                                   
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.
     
END PROCEDURE.

PROCEDURE inaktkost_UI :    
   FOR EACH kosttemp WHERE kosttemp.MED = TRUE BREAK 
   BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID:         
      ACCUMULATE 
      kosttemp.PERSKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.TRAKTKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.FRTJPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRLPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.MASKKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRL (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE             
      kosttemp.OVRKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).      
      IF LAST-OF(kosttemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = kosttemp.AONR AND
         FAKTAONR.DELNR = kosttemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = kosttemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONT WHERE 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTINTAKTKONT.VFAKTNR = 0 AND
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONT.MOMSID = kosttemp.MOMSID                                        
         EXCLUSIVE-LOCK NO-ERROR.
         
         IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
         ASSIGN 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
         FAKTINTAKTKONT.VFAKTNR = 0            
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR  
         FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE        
         FAKTINTAKTKONT.MOMSID = kosttemp.MOMSID               
         FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).
         FIND FIRST FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 AND
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
         ASSIGN 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
         FAKTKUNDKONTO.VFAKTNR = 0            
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTO.FAKTDATUM = TODAY            
         FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).               
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.     
END PROCEDURE.

PROCEDURE inakttid_UI :    
   FOR EACH sumtidtemp WHERE sumtidtemp.MED = TRUE BREAK 
   BY sumtidtemp.AONR BY sumtidtemp.DELNR:         
      ACCUMULATE 
      sumtidtemp.BELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.OBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.LONKOST (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR). 
      ACCUMULATE 
      sumtidtemp.TBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.RESKOSTDEC (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      IF LAST-OF(sumtidtemp.DELNR) THEN DO TRANSACTION:         
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = sumtidtemp.AONR AND
         FAKTAONR.DELNR = sumtidtemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = sumtidtemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONT WHERE 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTINTAKTKONT.VFAKTNR = 0 AND
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONT.MOMSID = 0         
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONT THEN CREATE FAKTINTAKTKONT.
         
         ASSIGN 
         FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR 
         FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR  
         FAKTINTAKTKONT.VFAKTNR = 0            
         FAKTINTAKTKONT.AONR = FAKTAONR.AONR
         FAKTINTAKTKONT.DELNR = FAKTAONR.DELNR                         
         FAKTINTAKTKONT.OMRADE = FAKTAONR.OMRADE
         FAKTINTAKTKONT.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONT.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).
         FIND FIRST FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 AND
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTO THEN CREATE FAKTKUNDKONTO.
         CREATE FAKTKUNDKONTO.
         ASSIGN 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR  
         FAKTKUNDKONTO.VFAKTNR = 0            
         FAKTKUNDKONTO.AONR = FAKTAONR.AONR
         FAKTKUNDKONTO.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTO.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTO.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTO.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTO.FAKTDATUM = TODAY            
         FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).                        
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.  
   
END PROCEDURE.


PROCEDURE kontober_UI :  
   EMPTY TEMP-TABLE kolltabeltemp NO-ERROR. 
   IF TOG_MOMS = FALSE THEN DO:
      musz = musz.     
   END.
   ELSE DO:      
      nyfakttotal = 0.
      FIND FIRST kolltabeltemp NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kolltabeltemp THEN DO:            
         OPEN QUERY faktkundq FOR EACH FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 NO-LOCK.
         GET FIRST faktkundq NO-LOCK.
         DO WHILE AVAILABLE(FAKTKUNDKONTO):
            nyfakttotal = nyfakttotal + FAKTKUNDKONTO.BELOPP.
            GET NEXT faktkundq NO-LOCK.
         END.         
         nymomstotal = nyfakttotal.               
         FIND FIRST gfaktemp WHERE gfaktemp.ORDNING = 3 NO-ERROR.
         CREATE kolltabeltemp.   
         ASSIGN
         kolltabeltemp.GFAKT = tidfaktvar
         kolltabeltemp.GMOMS = tidmomsvar
         kolltabeltemp.NYFAKT = nyfakttotal
         kolltabeltemp.NYMOMS = nymomstotal
         kolltabeltemp.DENNAFAKT = nyfakttotal
         kolltabeltemp.SLUTFAKT = FILL-IN_SLUTFAKT
         kolltabeltemp.ACONTO = FALSE.
         IF rundavar = TRUE THEN DO:
            ASSIGN
            kolltabeltemp.DENNAFAKT = runda(kolltabeltemp.DENNAFAKT)
            kolltabeltemp.NYFAKT = runda(kolltabeltemp.NYFAKT).
         END.
         IF vartyp = 3 THEN DO:
            IF FILL-IN_SLUTFAKT = TRUE THEN DO:
               ASSIGN
               kolltabeltemp.NYFAKT = nyfakttotal + tidfaktvar
               kolltabeltemp.NYMOMS = nymomstotal + tidfaktvar
               kolltabeltemp.DENNAFAKT = nyfakttotal + tidfaktvar.
            END.
            kolltabeltemp.ACONTO = TRUE.
         END.
        
         IF vartyp = 5 AND FAKTPLAN.FAKTTYPUNDER = 1 THEN DO:
            IF kolltabeltemp.DENNAFAKT + tidigfakt > FILL-IN_TAKPRIS THEN 
            kolltabeltemp.DENNAFAKT = FILL-IN_TAKPRIS.
         END.
         ELSE IF vartyp = 5 AND FILL-IN_SLUTFAKT = TRUE AND FAKTPLAN.FAKTTYPUNDER = 3 THEN DO: 
            IF kolltabeltemp.DENNAFAKT + tidigfakt > FILL-IN_TAKPRIS THEN 
            kolltabeltemp.DENNAFAKT = FILL-IN_TAKPRIS.
         END.
         IF FILL-IN_SLUTFAKT = TRUE THEN DO TRANSACTION: 
            /*obs*/
            FIND CURRENT FAKTURERAD EXCLUSIVE-LOCK NO-ERROR.             
            ASSIGN 
            FAKTURERAD.TIDIGARMOMS = tidmomsvar
            FAKTURERAD.AVGAR = tidfaktvar.    
         END. 
         FIND CURRENT FAKTURERAD NO-LOCK NO-ERROR.             
      END.
      RETURN.
   END.     
   IF vartyp = 1 THEN DO:            /*FASTPRIS*/
      RUN inaktfast_UI.
      RUN momsfast_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.
   ELSE IF vartyp = 2 THEN DO:    /*AVTAL*/        
      RUN inaktfast_UI.
      RUN momsfast_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.   
   ELSE IF vartyp = 3 THEN DO:           /*ACONTO*/
      IF FILL-IN_SLUTFAKT = FALSE THEN DO:
         RUN inaktfast_UI.
         RUN momsfast_UI. 
         RUN inaktfria_UI.
         RUN momsfri_UI.
      END.
      ELSE DO:        
         RUN inakttid_UI.
         RUN momstid_UI.         
         RUN inaktkost_UI.
         RUN momskost_UI.          
         RUN inaktfria_UI.
         RUN momsfri_UI.
         /*AVRÄKNING*/            
      END. 
   END.
   ELSE IF vartyp = 4 OR vartyp = 8 THEN DO:                /*LÖPANDE*/      
      RUN inakttid_UI.
      RUN momstid_UI.      
      RUN inaktkost_UI.       
      RUN momskost_UI.      
      RUN inaktfria_UI.       
      RUN momsfri_UI.                       
   END.
   ELSE IF vartyp = 5 THEN DO:       /*TAKPRIS*/
      RUN inakttid_UI.     
      RUN momstid_UI.      
      RUN inaktkost_UI.
      RUN momskost_UI. 
      RUN inaktfria_UI.
      RUN momsfri_UI.              
   END.
   ELSE IF vartyp = 52 THEN DO:            /*TAKPRIS UPPARB*/
      RUN inaktupp_UI.
      RUN momsupp_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.
   ELSE IF vartyp = 6 THEN DO:       /*FRI FAKT*/
      RUN inaktfria_UI.
      RUN momsfri_UI.              
   END.
   ELSE IF vartyp = 7 THEN DO:       /*BOKFÖRING*/
      RUN inaktfria_UI.
   END.
   IF TOG_MOMS = FALSE THEN DO:      
      FIND FIRST gfaktemp WHERE gfaktemp.ORDNING = 3 NO-ERROR.
      CREATE kolltabeltemp.   
      ASSIGN
      kolltabeltemp.GFAKT = tidfaktvar
      kolltabeltemp.GMOMS = tidmomsvar
      kolltabeltemp.NYFAKT = nyfakttotal
      kolltabeltemp.NYMOMS = nymomstotal
      kolltabeltemp.DENNAFAKT = nyfakttotal
      kolltabeltemp.SLUTFAKT = FILL-IN_SLUTFAKT
      kolltabeltemp.ACONTO = FALSE.
      IF rundavar = TRUE THEN DO:
         ASSIGN
         kolltabeltemp.DENNAFAKT = runda(kolltabeltemp.DENNAFAKT)
         kolltabeltemp.NYFAKT = runda(kolltabeltemp.NYFAKT).
      END.
      IF vartyp = 3 THEN kolltabeltemp.ACONTO = TRUE.    
      IF vartyp = 5 AND FAKTPLAN.FAKTTYPUNDER = 1 THEN DO:
         IF kolltabeltemp.DENNAFAKT + tidigfakt > FILL-IN_TAKPRIS THEN 
         kolltabeltemp.DENNAFAKT = FILL-IN_TAKPRIS.
     END.
     ELSE IF vartyp = 5 AND FILL-IN_SLUTFAKT = TRUE AND FAKTPLAN.FAKTTYPUNDER = 3 THEN DO: 
        IF kolltabeltemp.DENNAFAKT + tidigfakt > FILL-IN_TAKPRIS THEN 
        kolltabeltemp.DENNAFAKT = FILL-IN_TAKPRIS.
     END.
     IF FILL-IN_SLUTFAKT = TRUE THEN DO TRANSACTION: 
         /*obs*/
         FIND CURRENT FAKTURERAD EXCLUSIVE-LOCK NO-ERROR.             
         ASSIGN 
         FAKTURERAD.TIDIGARMOMS = tidmomsvar
         FAKTURERAD.AVGAR = tidfaktvar.    
      END.
      FIND CURRENT FAKTURERAD NO-LOCK NO-ERROR.             
   END.
   OPEN QUERY momsq FOR EACH FAKTMOMS WHERE 
   FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
   FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
   FAKTMOMS.VFAKTNR = 0 NO-LOCK,
   EACH MOMSTAB WHERE MOMSTAB.MOMSID = FAKTMOMS.MOMSID NO-LOCK.
   DO TRANSACTION:
      GET FIRST momsq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(MOMSTAB):
         ASSIGN
         FAKTMOMS.MOMSBELOPP = FAKTMOMS.BELOPP * MOMSTAB.MOMSEXTERNT / 100 
         FAKTMOMS.MOMSEXTERNT = MOMSTAB.MOMSEXTERNT.
         GET NEXT momsq EXCLUSIVE-LOCK.
      END.
   END.   
   CLOSE QUERY momsq.    
END PROCEDURE.

PROCEDURE moms_UI :     
   ASSIGN
   delfakt = 0
   faoff = 0
   nymomstotal = 0
   nyfakttotal = 0.
   RUN kontober_UI.   
   DO TRANSACTION: 
   /*obs*/     
      FIND CURRENT FAKTURERAD EXCLUSIVE-LOCK NO-ERROR.             
      ASSIGN
      FAKTURERAD.TOTPRIS = gfaktemp.TOTALT      
      FAKTURERAD.RESKOSTDEC = gfaktemp.RES
      FAKTURERAD.BELOPP = gfaktemp.ARBKOST         
      FAKTURERAD.OBELOPP = gfaktemp.OBELOPP             
      FAKTURERAD.TBELOPP = gfaktemp.TRAKT
      FAKTURERAD.LONKOST = gfaktemp.LONTILL
      FAKTURERAD.MTRLKOST = gfaktemp.MTRL
      FAKTURERAD.OVRKOST = gfaktemp.OVRIG
      FAKTURERAD.KOSTBELOPP = gfaktemp.KBELOPP.                    
      IF rundavar = TRUE THEN DO:
         ASSIGN
         FAKTURERAD.TOTPRIS = runda(FAKTURERAD.TOTPRIS)     
         FAKTURERAD.RESKOSTDEC = runda(FAKTURERAD.RESKOSTDEC)
         FAKTURERAD.BELOPP = runda(FAKTURERAD.BELOPP)         
         FAKTURERAD.OBELOPP = runda(FAKTURERAD.OBELOPP)             
         FAKTURERAD.TBELOPP = runda(FAKTURERAD.TBELOPP)
         FAKTURERAD.LONKOST = runda(FAKTURERAD.LONKOST)
         FAKTURERAD.MTRLKOST = runda(FAKTURERAD.MTRLKOST)
         FAKTURERAD.OVRKOST = runda(FAKTURERAD.OVRKOST)
         FAKTURERAD.KOSTBELOPP = runda(FAKTURERAD.KOSTBELOPP).                   
      END.
   END.      
   FIND CURRENT FAKTURERAD NO-LOCK NO-ERROR.             
   IF rundavar = TRUE THEN DO:
      OPEN QUERY faktkontq FOR EACH FAKTINTAKTKONT WHERE 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTINTAKTKONT.VFAKTNR = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktkontq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTINTAKTKONT):
            FAKTINTAKTKONT.BELOPP = runda(FAKTINTAKTKONT.BELOPP).
            GET NEXT faktkontq EXCLUSIVE-LOCK.
         END.
      END.
      OPEN QUERY faktkundq FOR EACH FAKTKUNDKONTO WHERE 
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTKUNDKONTO.VFAKTNR = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktkundq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTKUNDKONTO):
            FAKTKUNDKONTO.BELOPP = runda(FAKTKUNDKONTO.BELOPP).
            GET NEXT faktkundq EXCLUSIVE-LOCK.
         END.
      END.
      OPEN QUERY faktmomsq FOR EACH FAKTMOMS WHERE 
      FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTMOMS.VFAKTNR = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktmomsq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTMOMS):
            FAKTMOMS.BELOPP = runda(FAKTMOMS.BELOPP).
            GET NEXT faktmomsq EXCLUSIVE-LOCK.
         END.
      END.

   END.
   DO TRANSACTION:      
      /*obs*/
      FIND CURRENT FAKTURERAD EXCLUSIVE-LOCK NO-ERROR.             
      
      FOR EACH FAKTKUNDKONTO WHERE 
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR 
      NO-LOCK BREAK BY FAKTKUNDKONTO.VFAKTNR:
         ACCUMULATE FAKTKUNDKONTO.BELOPP (TOTAL BY FAKTKUNDKONTO.VFAKTNR).
         IF LAST-OF(FAKTKUNDKONTO.VFAKTNR) THEN DO:                                      
            totkoll = (ACCUM TOTAL BY FAKTKUNDKONTO.VFAKTNR FAKTKUNDKONTO.BELOPP).             
         END.
      END.
      IF FAKTURERAD.TOTPRIS NE totkoll THEN DO:
         FIND FIRST FAKTKUNDKONTO WHERE 
         FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTO.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTKUNDKONTO.VFAKTNR = 0 
         EXCLUSIVE-LOCK NO-ERROR.      
         IF AVAILABLE FAKTKUNDKONTO THEN DO:
            FAKTKUNDKONTO.BELOPP = FAKTKUNDKONTO.BELOPP + 
            (FAKTURERAD.TOTPRIS - totkoll).
            FIND FIRST FAKTINTAKTKONT WHERE 
            FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONT.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTINTAKTKONT.VFAKTNR = 0 AND
            FAKTINTAKTKONT.AONR = FAKTKUNDKONTO.AONR AND
            FAKTINTAKTKONT.DELNR = FAKTKUNDKONTO.DELNR EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE FAKTINTAKTKONT THEN DO:
               FAKTINTAKTKONT.BELOPP = FAKTINTAKTKONT.BELOPP + 
               (FAKTURERAD.TOTPRIS - totkoll).
            END.                  
            FIND FIRST FAKTMOMS WHERE 
            FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
            FAKTMOMS.VFAKTNR = 0 AND
            FAKTMOMS.AONR = FAKTKUNDKONTO.AONR AND
            FAKTMOMS.DELNR = FAKTKUNDKONTO.DELNR EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE FAKTMOMS THEN DO: 
               FAKTMOMS.BELOPP = FAKTMOMS.BELOPP + 
               (FAKTURERAD.TOTPRIS - totkoll).
               FAKTMOMS.MOMSBELOPP = FAKTMOMS.BELOPP * FAKTMOMS.MOMSEXTERNT / 100.          
            END.
         END.
      END.
      FAKTURERAD.MOMSBELOPP = 0.
      OPEN QUERY faktmomsq FOR EACH FAKTMOMS WHERE 
      FAKTMOMS.FAKTNR = FAKTURERAD.FAKTNR AND  
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTMOMS.VFAKTNR = 0 NO-LOCK.      
      GET FIRST faktmomsq NO-LOCK.
      DO WHILE AVAILABLE(FAKTMOMS):
         FAKTURERAD.MOMSBELOPP = FAKTURERAD.MOMSBELOPP + FAKTMOMS.MOMSBELOPP.                                  
         GET NEXT faktmomsq NO-LOCK.
      END.         
      ASSIGN        
      FAKTURERAD.ORESUTJ = 
      ROUND(FAKTURERAD.MOMSBELOPP + (FAKTURERAD.TOTPRIS),0) - 
      (FAKTURERAD.MOMSBELOPP + FAKTURERAD.TOTPRIS).                                       
   END.
   FIND CURRENT FAKTURERAD NO-LOCK NO-ERROR.    
END PROCEDURE.

PROCEDURE momsfast_UI :    
   IF vartyp = 1 OR vartyp = 3 THEN DO:       
      GET FIRST faktaonrq NO-LOCK.
      IF faoff = FAKTPLAN.OFFERTPRIS AND faoff > 0 THEN DO:
         DO WHILE AVAILABLE(FAKTAONR) TRANSACTION:               
            FIND FIRST frikolltemp WHERE frikolltemp.AONR = FAKTAONR.AONR AND 
            frikolltemp.DELNR = FAKTAONR.DELNR NO-ERROR.             
            IF frikolltemp.FORDELNING = TRUE THEN DO:           
               FIND FIRST FAKTMOMS WHERE 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTMOMS.VFAKTNR = 0 AND
               FAKTMOMS.AONR = FAKTAONR.AONR AND
               FAKTMOMS.DELNR = FAKTAONR.DELNR AND
               FAKTMOMS.TYP = "FAST"                                        
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTMOMS THEN DO:
                  CREATE FAKTMOMS.
                  IF FILL-IN_SLUTFAKT = TRUE AND tidmomsvar = 0 THEN DO:
                     FAKTMOMS.BELOPP = tidfaktvar.
                  END.       
               END.
               ASSIGN 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
               FAKTMOMS.VFAKTNR = 0            
               FAKTMOMS.AONR = FAKTAONR.AONR
               FAKTMOMS.DELNR = FAKTAONR.DELNR
               FAKTMOMS.TYP = "FAST"                         
               FAKTMOMS.FRITEXT = "Del betalningar"                      
               FAKTMOMS.BELOPP = FAKTMOMS.BELOPP + delfakt * FAKTAONR.OPRIS.         
               nymomstotal = nymomstotal + FAKTMOMS.BELOPP.                          
               RUN styrmoms_UI (INPUT TRUE).
            END.
            GET NEXT faktaonrq NO-LOCK.
         END.      
      END.
      ELSE DO:
         FOR EACH FAKTSTART WHERE FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR AND                     
         FAKTSTART.VFAKTNR = 0 AND FAKTSTART.FAKTURERAD = TRUE NO-LOCK BREAK 
         BY FAKTSTART.FAKTURERAD:              
            ACCUMULATE  FAKTSTART.BELOPP (TOTAL BY FAKTSTART.FAKTURERAD).            
            IF LAST-OF(FAKTSTART.FAKTURERAD) THEN DO TRANSACTION:         
               FIND FIRST FAKTMOMS WHERE 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTMOMS.VFAKTNR = 0 AND
               FAKTMOMS.AONR = FAKTAONR.AONR AND
               FAKTMOMS.DELNR = FAKTAONR.DELNR AND
               FAKTMOMS.TYP = "FAST"                                        
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTMOMS THEN DO:
                  CREATE FAKTMOMS.
                  IF FILL-IN_SLUTFAKT = TRUE AND tidmomsvar = 0 THEN DO:
                     FAKTMOMS.BELOPP = tidfaktvar.
                  END.       
               END.
               ASSIGN 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
               FAKTMOMS.VFAKTNR = 0            
               FAKTMOMS.AONR = FAKTAONR.AONR
               FAKTMOMS.DELNR = FAKTAONR.DELNR
               FAKTMOMS.TYP = "FAST"                         
               FAKTMOMS.FRITEXT = "Del betalningar"               
               FAKTMOMS.BELOPP = FAKTMOMS.BELOPP +
               (ACCUM TOTAL BY FAKTSTART.FAKTURERAD FAKTSTART.BELOPP).  
               nymomstotal = nymomstotal + FAKTMOMS.BELOPP.                          
               RUN styrmoms_UI (INPUT TRUE).
            END.
         END.            
      END.
   END.
   ELSE DO:
      OPEN QUERY BRW_PLAN FOR EACH FAKTSTART WHERE 
      FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK.
      GET FIRST BRW_PLAN NO-LOCK.
      DO WHILE AVAILABLE(FAKTSTART):
         IF FAKTSTART.FAKTURERAD = TRUE AND FAKTSTART.VFAKTNR = 0 THEN DO:
            IF FAKTSTART.START NE "" THEN DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.START = FAKTSTART.START 
               NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.PLANDATUM = FAKTSTART.PLANDATUM 
               NO-LOCK.
            END.
            GET FIRST faktavtq NO-LOCK.
            DO WHILE AVAILABLE(FAKTAVTALAONR) TRANSACTION: 
               FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
               FAKTAONR.AONR = FAKTAVTALAONR.AONR AND FAKTAONR.DELNR = FAKTAVTALAONR.DELNR
               NO-LOCK NO-ERROR.     
               FIND FIRST FAKTMOMS WHERE 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
               FAKTMOMS.VFAKTNR = 0 AND
               FAKTMOMS.AONR = FAKTAONR.AONR AND
               FAKTMOMS.DELNR = FAKTAONR.DELNR AND
               FAKTMOMS.TYP = "FAST"                                        
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTMOMS THEN DO:
                  CREATE FAKTMOMS.
                  IF FILL-IN_SLUTFAKT = TRUE AND tidmomsvar = 0 THEN DO:
                     FAKTMOMS.BELOPP = tidfaktvar.
                  END.       
               END.
               ASSIGN 
               FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
               FAKTMOMS.VFAKTNR = 0            
               FAKTMOMS.AONR = FAKTAONR.AONR
               FAKTMOMS.DELNR = FAKTAONR.DELNR
               FAKTMOMS.TYP = "FAST"                         
               FAKTMOMS.FRITEXT = "Del betalningar"                         
               FAKTMOMS.BELOPP = FAKTMOMS.BELOPP + FAKTAVTALAONR.BELOPP.         
               nymomstotal = nymomstotal + FAKTMOMS.BELOPP.         
               RUN styrmoms_UI (INPUT TRUE).
               GET NEXT faktavtq NO-LOCK.
            END.
         END.
         GET NEXT BRW_PLAN NO-LOCK.
      END.      
   END.  
END PROCEDURE.

PROCEDURE momsupp_UI :     
   OPEN QUERY BRW_UPP FOR EACH FAKTUPPARB WHERE 
   FAKTUPPARB.FAKTNR = FAKTPLAN.FAKTNR AND FAKTUPPARB.FAKTURERAD = TRUE AND                     
   FAKTUPPARB.VFAKTNR = 0
   NO-LOCK BY FAKTUPPARB.UPLAN%.
   GET FIRST BRW_UPP NO-LOCK.
   DO WHILE AVAILABLE(FAKTUPPARB):       
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = FAKTUPPARB.AONR AND FAKTAONR.DELNR = FAKTUPPARB.DELNR
      NO-LOCK NO-ERROR.     
      FIND FIRST FAKTMOMS WHERE 
      FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTMOMS.VFAKTNR = 0 AND
      FAKTMOMS.AONR = FAKTAONR.AONR AND
      FAKTMOMS.DELNR = FAKTAONR.DELNR AND
      FAKTMOMS.TYP = "FAST"                                        
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTMOMS THEN DO:
         CREATE FAKTMOMS.
         IF FILL-IN_SLUTFAKT = TRUE AND tidmomsvar = 0 THEN DO:
            FAKTMOMS.BELOPP = tidfaktvar.
         END.       
      END.
      ASSIGN 
      FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
      FAKTMOMS.VFAKTNR = 0            
      FAKTMOMS.AONR = FAKTAONR.AONR
      FAKTMOMS.DELNR = FAKTAONR.DELNR
      FAKTMOMS.TYP = "UPP"                         
      FAKTMOMS.FRITEXT = "Del betalningar"                         
      FAKTMOMS.BELOPP = FAKTMOMS.BELOPP + FAKTUPPARB.FAKTBELOPP.         
      nymomstotal = nymomstotal + FAKTMOMS.BELOPP.               
      RUN styrmoms_UI (INPUT TRUE).
      GET NEXT BRW_UPP NO-LOCK.      
   END.  
END PROCEDURE.

PROCEDURE momsfri_UI :    
   FOR EACH efaktfriatemp:
      FIND FIRST extradatatemp WHERE extradatatemp.HUVUDINT = INTEGER(efaktfriatemp.TYP)
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE extradatatemp THEN DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY efaktfriatemp TO faktfriatemp.
         DELETE efaktfriatemp.
         NEXT.
      END.
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = efaktfriatemp.AONR AND
      FAKTAONR.DELNR = efaktfriatemp.DELNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = efaktfriatemp.AONR NO-LOCK NO-ERROR.
      END.          
       
      FIND FIRST FAKTMOMS WHERE 
      FAKTMOMS.MOMSID = extradatatemp.SOKINT[4] AND
      FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
      FAKTMOMS.VFAKTNR = 0 AND
      FAKTMOMS.AONR = FAKTAONR.AONR AND
      FAKTMOMS.DELNR = FAKTAONR.DELNR AND
      FAKTMOMS.TYP = efaktfriatemp.TYP AND
      FAKTMOMS.MOMSID = efaktfriatemp.MOMSID                                        
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTMOMS THEN CREATE FAKTMOMS.
      ASSIGN 
      FAKTMOMS.MOMSID = extradatatemp.SOKINT[4]
      FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
      FAKTMOMS.VFAKTNR = 0            
      FAKTMOMS.AONR = FAKTAONR.AONR
      FAKTMOMS.DELNR = FAKTAONR.DELNR
      FAKTMOMS.TYP = efaktfriatemp.TYP  
      FAKTMOMS.BELOPP = FAKTMOMS.BELOPP + efaktfriatemp.TOTALT.
      nymomstotal = nymomstotal + FAKTMOMS.BELOPP.                     
      SUBSTRING(FAKTMOMS.FRITEXT,1) = "Från prislista " + LC(SUBSTRING(extradatatemp.SOKCHAR[10],1,100)).            
      SUBSTRING(FAKTMOMS.FRITEXT,150) = STRING(extradatatemp.SOKINT[3]).            
      IF FAKTMOMS.MOMSID = 0 THEN DO: 
         IF SUBSTRING(FAKTMOMS.FRITEXT,150) = "" OR SUBSTRING(FAKTMOMS.FRITEXT,150) = "0" THEN RUN styrmoms_UI (INPUT TRUE).      
         ELSE RUN styrmoms_UI (INPUT FALSE).
      END.
   END.

   FOR EACH faktfriatemp WHERE faktfriatemp.FAKTNR = FAKTPLAN.FAKTNR AND
   faktfriatemp.FDELNR = FAKTURERAD.FDELNR AND faktfriatemp.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.TYP BY faktfriatemp.MOMSID:              
      ACCUMULATE 
      faktfriatemp.TOTALT (TOTAL BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.TYP BY faktfriatemp.MOMSID).            
      IF LAST-OF(faktfriatemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = faktfriatemp.AONR AND
         FAKTAONR.DELNR = faktfriatemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = faktfriatemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMS WHERE 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTMOMS.VFAKTNR = 0 AND
         FAKTMOMS.AONR = FAKTAONR.AONR AND
         FAKTMOMS.DELNR = FAKTAONR.DELNR AND
         FAKTMOMS.TYP = faktfriatemp.TYP AND
         FAKTMOMS.MOMSID = faktfriatemp.MOMSID                                        
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTMOMS THEN CREATE FAKTMOMS.
         ASSIGN 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
         FAKTMOMS.VFAKTNR = 0            
         FAKTMOMS.AONR = FAKTAONR.AONR
         FAKTMOMS.DELNR = FAKTAONR.DELNR
         FAKTMOMS.TYP = faktfriatemp.TYP  
         FAKTMOMS.MOMSID = faktfriatemp.MOMSID                                          
         FAKTMOMS.BELOPP = FAKTMOMS.BELOPP +
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).
         nymomstotal = nymomstotal + FAKTMOMS.BELOPP.                     
         IF faktfriatemp.TYP BEGINS "PERS" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga personalkostnader".            
         END.
         ELSE IF faktfriatemp.TYP = "MASK" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga främmande tj.".            
         END.
         ELSE IF faktfriatemp.TYP = "MIL" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga mil/Resor".            
         END.
         ELSE IF faktfriatemp.TYP = "TRAKT" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga traktamente mm.".            
         END.
         ELSE IF faktfriatemp.TYP = "OVER" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga kostnader".            
         END.
         ELSE IF faktfriatemp.TYP = "MATRL" THEN DO:
            FAKTMOMS.FRITEXT = "Övriga materielkostnader".            
         END.
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.
     
END PROCEDURE.

PROCEDURE momskost_UI :    
   FOR EACH kosttemp WHERE kosttemp.MED = TRUE BREAK 
   BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID:         
      ACCUMULATE 
      kosttemp.PERSKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.TRAKTKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.FRTJPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRLPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.MASKKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRL (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE             
      kosttemp.OVRKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      IF LAST-OF(kosttemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = kosttemp.AONR AND
         FAKTAONR.DELNR = kosttemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = kosttemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMS WHERE 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTMOMS.VFAKTNR = 0 AND
         FAKTMOMS.AONR = FAKTAONR.AONR AND
         FAKTMOMS.DELNR = FAKTAONR.DELNR AND
         FAKTMOMS.TYP = "KOST" AND 
         FAKTMOMS.MOMSID = kosttemp.MOMSID                                      
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTMOMS THEN CREATE FAKTMOMS.
         ASSIGN 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
         FAKTMOMS.VFAKTNR = 0 
         FAKTMOMS.AONR = FAKTAONR.AONR 
         FAKTMOMS.DELNR = FAKTAONR.DELNR 
         FAKTMOMS.TYP = "KOST"   
         FAKTMOMS.FRITEXT = "Konterat belopp"         
         FAKTMOMS.MOMSID = kosttemp.MOMSID         
         FAKTMOMS.BELOPP = FAKTMOMS.BELOPP +         
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).                  
         nymomstotal = nymomstotal + FAKTMOMS.BELOPP.         
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.     
END PROCEDURE.


PROCEDURE momstid_UI :    
   FOR EACH sumtidtemp WHERE sumtidtemp.MED = TRUE BREAK 
   BY sumtidtemp.AONR BY sumtidtemp.DELNR:         
      ACCUMULATE 
      sumtidtemp.BELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.OBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.LONKOST (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR). 
      ACCUMULATE 
      sumtidtemp.TBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.RESKOSTDEC (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      IF LAST-OF(sumtidtemp.DELNR) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = sumtidtemp.AONR AND
         FAKTAONR.DELNR = sumtidtemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = sumtidtemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMS WHERE 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR AND 
         FAKTMOMS.VFAKTNR = 0 AND
         FAKTMOMS.AONR = FAKTAONR.AONR AND
         FAKTMOMS.DELNR = FAKTAONR.DELNR AND
         FAKTMOMS.TYP = "TID"                                        
         EXCLUSIVE-LOCK NO-ERROR.         
         IF NOT AVAILABLE FAKTMOMS THEN DO:
            CREATE FAKTMOMS.
            /*
            IF FILL-IN_SLUTFAKT = TRUE AND tidmomsvar = 0 THEN DO:
               FAKTMOMS.BELOPP = tidfaktvar.
            END.
            */       
         END.         
         ASSIGN 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMS.FDELNR = FAKTURERAD.FDELNR  
         FAKTMOMS.VFAKTNR = 0 
         FAKTMOMS.AONR = FAKTAONR.AONR 
         FAKTMOMS.DELNR = FAKTAONR.DELNR 
         FAKTMOMS.TYP = "TID"       
         FAKTMOMS.FRITEXT = "Tidskrivning"              
         FAKTMOMS.BELOPP = FAKTMOMS.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).         
         nymomstotal = nymomstotal + FAKTMOMS.BELOPP.         
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.     
END PROCEDURE.

PROCEDURE styrintakt_UI :
   DEFINE INPUT PARAMETER intaktvar  AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER kundvar    AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER motpartvar AS LOGICAL NO-UNDO.
   IF motpartvar = TRUE OR intaktvar = TRUE THEN DO:
      FIND FIRST STYRMOT WHERE STYRMOT.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
      IF AVAILABLE STYRMOT THEN DO:
         
         IF motpartvar = TRUE THEN FAKTKUNDKONTO.MOTPARTID = STYRMOT.MOTPARTID.
         IF motpartvar = TRUE THEN FAKTINTAKTKONT.MOTPARTID = STYRMOT.MOTPARTID.
         /*
         IF intaktvar = TRUE THEN FAKTINTAKTKONT.MOTPARTID = STYRMOT.MOTPARTID.
         */
      END.      
      ELSE DO:
         MESSAGE "Det är något fel på motpartsupplägget. Kontakta ansvarig!" 
         VIEW-AS ALERT-BOX.
      END.
   END.
   IF kundvar = TRUE THEN DO:
      FIND FIRST STYRKUND WHERE STYRKUND.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
      IF AVAILABLE STYRKUND THEN DO:
         FAKTKUNDKONTO.KUNDKONTOID = STYRKUND.KUNDKONTOID.
      END.              
      ELSE DO:
         MESSAGE "Det är något fel på kundfodransupplägget. Kontakta ansvarig!" 
         VIEW-AS ALERT-BOX.
      END.
   END.
   IF FAKTINTAKTKONT.MOMSID = 0 THEN DO:
      FIND FIRST STYRMOMS WHERE STYRMOMS.KUNDID = FAKTREGLER.KUNDID AND
      STYRMOMS.FAKTTYPID = FAKTURERAD.FAKTTYPID NO-LOCK NO-ERROR.
      IF AVAILABLE STYRMOMS THEN DO:
         FIND FIRST STYRINTAKT WHERE STYRINTAKT.KUNDID = FAKTREGLER.KUNDID AND
         STYRINTAKT.FAKTTYPID = FAKTURERAD.FAKTTYPID AND 
         STYRINTAKT.MOMSID = STYRMOMS.MOMSID
         NO-LOCK NO-ERROR.
         IF AVAILABLE STYRINTAKT THEN DO:
            IF intaktvar = TRUE THEN FAKTINTAKTKONT.INTAKTID = STYRINTAKT.INTAKTID.
         END.              
         ELSE DO:
            MESSAGE "Det är något fel på intäktskonteringen. Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.
         END.      
      END.                 
      ELSE DO:
         MESSAGE "Det är något fel på momskoder som skall styra intäktskonteringen. Kontakta ansvarig!" 
         VIEW-AS ALERT-BOX.
      END.
   END.
   ELSE DO:      
      FIND FIRST STYRINTAKT WHERE STYRINTAKT.KUNDID = FAKTREGLER.KUNDID AND
      STYRINTAKT.FAKTTYPID = 11 AND 
      STYRINTAKT.MOMSID = FAKTINTAKTKONT.MOMSID
      NO-LOCK NO-ERROR.
      IF AVAILABLE STYRINTAKT THEN DO:
         IF intaktvar = TRUE THEN FAKTINTAKTKONT.INTAKTID = STYRINTAKT.INTAKTID.
      END.              
      ELSE DO:
         MESSAGE "Det är något fel på intäktskonteringen med differentierad moms.
         Kontakta ansvarig!" 
         VIEW-AS ALERT-BOX.      
      END.                       
   END.      
END PROCEDURE.

PROCEDURE styrmoms_UI :    
   DEFINE INPUT PARAMETER sattmot AS LOGICAL NO-UNDO.
   IF FAKTMOMS.MOMSID = 0 THEN DO:
      FIND FIRST STYRMOMS WHERE STYRMOMS.KUNDID = FAKTREGLER.KUNDID AND
      STYRMOMS.FAKTTYPID = FAKTURERAD.FAKTTYPID NO-LOCK NO-ERROR.
      IF AVAILABLE STYRMOMS THEN DO: 
         FAKTMOMS.MOMSID = STYRMOMS.MOMSID.
         IF sattmot = TRUE THEN DO:
            FIND FIRST STYRMOT WHERE STYRMOT.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
            IF AVAILABLE STYRMOT THEN DO:
               SUBSTRING(FAKTMOMS.FRITEXT,150) = STRING(STYRMOT.MOTPARTID).
            END.
         END.
      END.              
      ELSE DO:
         MESSAGE "Det är något fel på momsupplägget. Kontakta ansvarig!" 
         VIEW-AS ALERT-BOX.
      END.
   END.      
END PROCEDURE.

PROCEDURE nyproc_UI :
   DEFINE VARIABLE delbelopp AS DECIMAL NO-UNDO.
   FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND      
   FAKTAONR.EXTRAPRIS NE 0 NO-LOCK NO-ERROR.
   IF AVAILABLE FAKTAONR THEN DO:
      FOR EACH frikolltemp:
         frikolltemp.FORDELNING = TRUE.              
      END.
      ASSIGN
      extrasumma = 0
      delbelopp = 0.   
   END.
   ELSE DO:
      FOR EACH frikolltemp:
         FOR EACH FAKTFRIA WHERE FAKTFRIA.FAKTNR = FAKTPLAN.FAKTNR AND      
         FAKTFRIA.AONR = frikolltemp.AONR AND FAKTFRIA.DELNR = frikolltemp.DELNR AND FAKTFRIA.FAKTURERAD = TRUE AND 
         FAKTFRIA.VFAKTNR NE 0 NO-LOCK:
            frikolltemp.FRIBELOPP = frikolltemp.FRIBELOPP + FAKTFRIA.TOTALT.
         END.     
         FOR EACH FAKTINTAKTKONT WHERE FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND      
         FAKTINTAKTKONT.AONR = frikolltemp.AONR AND FAKTINTAKTKONT.DELNR = frikolltemp.DELNR AND
         FAKTINTAKTKONT.VFAKTNR NE 0 NO-LOCK:
            frikolltemp.TOTFAKT = frikolltemp.TOTFAKT + FAKTINTAKTKONT.BELOPP.
         END.      
         IF frikolltemp.TOTBELOPP >= ROUND((frikolltemp.TOTFAKT - frikolltemp.FRIBELOPP),0) THEN DO:
            frikolltemp.FORDELNING = TRUE.
         END.      
         ELSE DO:
            frikolltemp.FORDELNING = FALSE.
            delbelopp = delbelopp + frikolltemp.TOTBELOPP.
         END.      
      END.
   END.
   
   delfakt = nyfakttotal / (FAKTPLAN.OFFERTPRIS - (extrasumma + delbelopp)). 
   IF delfakt = ? THEN delfakt = 0.
   /*
   CCC
   FIND FAKTSTART WHERE FAKTSTART.FAKTNR = FAKTPLAN.FAKTNR AND FAKTSTART.START = "START" NO-ERROR.
   delfakt = nyfakttotal / (FAKTPLAN.OFFERTPRIS - (delbelopp + FAKTSTART.BELOPP)).
   */   
END PROCEDURE.
