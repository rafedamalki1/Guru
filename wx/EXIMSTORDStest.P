
/*------------------------------------------------------------------------
    File        : EXIMSTORDStest.P
    Purpose     : 

    Syntax      :IMPORTER OCH EXPORTER AV STÖRNINGSDATA,KUNDDATA , LEDNINGSDATA, DISTRIKT MM

    Description : 

    Author(s)   : 
    Created     : Mon Feb 13 16:20:07 CET 2017
    Notes       :
  ----------------------------------------------------------------------*/
CREATE WIDGET-POOL "DynTable" NO-ERROR.
{SparaDynDSstar.I}
{StorImpDS.I}
DEFINE {&PUBLIC}  VARIABLE Foretagtth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE ForetagDBbuffh AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE Distrikttth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE DistriktDBbuffh AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE KundDatatth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE KundDataDBbuffh AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE LedninggsDatatth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE LedninggsDataDBbuffh AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE StorningsDatatth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE StorningsDataDBbuffh AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE StorFelMtrltth AS HANDLE NO-UNDO.
DEFINE {&PUBLIC}  VARIABLE StorFelMtrlDBbuffh AS HANDLE NO-UNDO.

DEFINE VARIABLE InDarwinDS AS HANDLE NO-UNDO.

DEFINE VARIABLE qh AS HANDLE NO-UNDO.
DEFINE VARIABLE kommandoquery AS CHARACTER NO-UNDO.
DEFINE VARIABLE InOutDS AS HANDLE NO-UNDO.

FUNCTION FFinlasttab RETURNS INTEGER 
(INPUT sid AS INTEGER):
   FIND FIRST SPANNINGSNIV WHERE SPANNINGSNIV.SPANID = sid USE-INDEX SPANID NO-LOCK NO-ERROR.
   IF AVAILABLE SPANNINGSNIV THEN DO:
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = SPANNINGSNIV.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN RETURN INTEGER(INLASTAB.INKODPOSCH).
      ELSE RETURN sid.
   END.
   ELSE RETURN sid.   
END FUNCTION.
FUNCTION FFinlasttabIN RETURNS INTEGER 
(INPUT ikod AS CHARACTER,INPUT ityp AS CHARACTER, INPUT sid AS INTEGER):
   FIND FIRST INLASTAB WHERE INLASTAB.INKOD = ikod AND INLASTAB.INKODTYP = ityp AND
   INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD NO-LOCK NO-ERROR.
   IF AVAILABLE INLASTAB THEN DO:
      FIND FIRST SPANNINGSNIV WHERE SPANNINGSNIV.INKODID = INLASTAB.INKODID
      NO-LOCK NO-ERROR.
      IF AVAILABLE SPANNINGSNIV THEN RETURN SPANNINGSNIV.SPANID.
      ELSE RETURN sid.
   END.   
   ELSE RETURN sid.   
   
END FUNCTION.            
FUNCTION FFinlasttabFL RETURNS INTEGER 
(INPUT tabnamn AS CHARACTER,INPUT sid AS INTEGER):
   IF tabnamn = "SEKTIONERING" THEN DO:  
      FIND FIRST SEKTIONERING WHERE SEKTIONERING.SEKTIONERID = STRING(sid) NO-LOCK NO-ERROR.
      IF NOT AVAILABLE SEKTIONERING THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = SEKTIONERING.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid. 
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.
   IF tabnamn = "RELAINDIKERING" THEN DO:  
      FIND FIRST RELAINDIKERING WHERE RELAINDIKERING.RELINID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE RELAINDIKERING THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = RELAINDIKERING.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.        
   IF tabnamn = "FELORSAK" THEN DO:  
      FIND FIRST FELORSAK WHERE FELORSAK.FELOID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FELORSAK THEN RETURN sid.
      IF FELORSAK.FELOID >= 500 THEN RETURN 93.
      /*tester*/
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = FELORSAK.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.   
  
   IF tabnamn = "BRYTORGAN" THEN DO:  
      FIND FIRST BRYTORGAN WHERE BRYTORGAN.BRYTOID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE BRYTORGAN THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = BRYTORGAN.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.  
   IF tabnamn = "STORDRIFTOMR" THEN DO:  
      FIND FIRST STORDRIFTOMR WHERE STORDRIFTOMR.STDRIFTID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE STORDRIFTOMR THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = STORDRIFTOMR.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END. 
   IF tabnamn = "NATTYP" THEN DO:  
      FIND FIRST NATTYP WHERE NATTYP.NATTYPID = STRING(sid) NO-LOCK NO-ERROR.
      IF NOT AVAILABLE NATTYP THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = NATTYP.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.
   IF tabnamn = "ANLAGGNINGSDEL" THEN DO:  
      FIND FIRST ANLAGGNINGSDEL WHERE ANLAGGNINGSDEL.ADELID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ANLAGGNINGSDEL THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = ANLAGGNINGSDEL.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.
   IF tabnamn = "UTLOSNINGSKYDD" THEN DO:  
      FIND FIRST UTLOSNINGSKYDD WHERE UTLOSNINGSKYDD.UTLOSID = sid NO-LOCK NO-ERROR.
      IF NOT AVAILABLE UTLOSNINGSKYDD THEN RETURN sid.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = UTLOSNINGSKYDD.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      RETURN INTEGER(INLASTAB.INKODPOSCH).
   END.
   
END FUNCTION.         

FUNCTION FLinlasttabFF RETURNS INTEGER 
  (INPUT tabnamn AS CHARACTER, INPUT sid AS INTEGER):
   IF tabnamn = "SEKTIONERING" THEN DO:  
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "F" AND INLASTAB.INKODTYP = "1" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST SEKTIONERING WHERE SEKTIONERING.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE SEKTIONERING THEN RETURN sid.
      RETURN INTEGER(SEKTIONERING.SEKTIONERID).
   END.
   IF tabnamn = "RELAINDIKERING" THEN DO: 
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "G" AND INLASTAB.INKODTYP = "2" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST RELAINDIKERING WHERE RELAINDIKERING.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE RELAINDIKERING THEN RETURN sid.
      RETURN RELAINDIKERING.RELINID.
   END.        
   IF tabnamn = "FELORSAK" THEN DO:
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "S" AND 
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST FELORSAK WHERE FELORSAK.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FELORSAK THEN RETURN sid.
      RETURN FELORSAK.FELOID.  
   END.   
  
   IF tabnamn = "BRYTORGAN" THEN DO:  
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "E" AND INLASTAB.INKODTYP = "1" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST BRYTORGAN WHERE BRYTORGAN.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE BRYTORGAN THEN RETURN sid.
      RETURN  BRYTORGAN.BRYTOID.
   END.  
   IF tabnamn = "STORDRIFTOMR" THEN DO:  
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "N" AND INLASTAB.INKODTYP = "1" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST STORDRIFTOMR WHERE STORDRIFTOMR.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE STORDRIFTOMR THEN RETURN sid.
      RETURN  STORDRIFTOMR.STDRIFTID.
   END. 
   IF tabnamn = "NATTYP" THEN DO:  
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "Q" AND INLASTAB.INKODTYP = "1" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST NATTYP WHERE NATTYP.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE NATTYP THEN RETURN sid.
      RETURN  INTEGER(NATTYP.INKODID).
   END.
   IF tabnamn = "ANLAGGNINGSDEL" THEN DO:  
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "R" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST ANLAGGNINGSDEL WHERE ANLAGGNINGSDEL.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ANLAGGNINGSDEL THEN RETURN sid.
      RETURN  ANLAGGNINGSDEL.ADELID.
   END.
   IF tabnamn = "UTLOSNINGSKYDD" THEN DO:
      FIND FIRST INLASTAB WHERE INLASTAB.INKOD = "G" AND INLASTAB.INKODTYP = "1" AND
      INLASTAB.INKODPOSCH = STRING(sid) USE-INDEX INKOD
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE INLASTAB THEN RETURN sid.
      FIND FIRST UTLOSNINGSKYDD WHERE UTLOSNINGSKYDD.INKODID = INLASTAB.INKODID NO-LOCK NO-ERROR.
      IF NOT AVAILABLE UTLOSNINGSKYDD THEN RETURN sid.
      RETURN  UTLOSNINGSKYDD.UTLOSID.
   END.
   
END FUNCTION.  



/*
RUN laddaDistriktsDataDS_UI(INPUT "13",INPUT 2003,OUTPUT DATASET-HANDLE InOutDS BIND).
RUN DistriktExport_UI (INPUT DATASET-HANDLE InOutDS BIND).


RUN laddaDistriktsDataDS_UI(INPUT ?,INPUT 2003,OUTPUT DATASET-HANDLE InOutDS BIND).
RUN DistriktImport_UI (INPUT "C:\PROTEMP10\Bjärekraft.xml", INPUT DATASET-HANDLE InOutDS BIND).
*/
/*
RUN laddaDistriktsDataDS_UI(INPUT "13",INPUT 2003).
RUN DistriktExport_UI .
*/

RUN laddaDistriktsDataDS_UI(INPUT 13,INPUT 2003).
RUN DistriktImport_UI (INPUT "C:\PROTEMP10\Bjärekraft.xml").

RUN avsluta_UI .

/*InDarwinDS*/

PROCEDURE InDarwinDSTracking_UI :
   DEFINE INPUT  PARAMETER onoff AS LOGICAL NO-UNDO.
   Foretagtth:TRACKING-CHANGES = onoff.
   Distrikttth:TRACKING-CHANGES = onoff.
   KundDatatth:TRACKING-CHANGES = onoff.
   LedninggsDatatth:TRACKING-CHANGES = onoff.
   StorningsDatatth:TRACKING-CHANGES = onoff.
   StorFelMtrltth:TRACKING-CHANGES = onoff.
   
   
END PROCEDURE.
PROCEDURE InDarwinDSSpar_UI :
/*
   DEFINE INPUT PARAMETER DATASET-HANDLE InDarwinDS BIND.
  */
   DEFINE VARIABLE chDS AS HANDLE NO-UNDO.
   
   RUN InDarwinDSTracking_UI (FALSE).
   CREATE DATASET chDS.
   chDS:CREATE-LIKE(InDarwinDS).
   chDS:GET-CHANGES(InDarwinDS).
   DEFINE VARIABLE SPARAXML AS CHARACTER NO-UNDO.
      SPARAXML = "C:\PROTEMP10\CTest.xml". 
      chDS:WRITE-XML("FILE", SPARAXML).
   /*
   RUN SparaDynDSstart_UI (INPUT "InDarwinDS", INPUT DATASET-HANDLE chDS).
   */
   chDS:MERGE-CHANGES(InDarwinDS).
   
   InDarwinDS:WRITE-XML("FILE", "C:\PROTEMP10\IndataKlarfil.xml").
   RUN InDarwinDSTracking_UI (TRUE).
  /*
  ACCEPT-CHANGES
FILL
GET-CHANGES
MERGE-CHANGES
READ-XML
REJECT-CHANGES
WRITE-XML
  
  
   */
END PROCEDURE.      



PROCEDURE DistriktImport_UI :
   DEFINE INPUT  PARAMETER filnamnStorXml AS CHARACTER NO-UNDO.
   /*
   DEFINE INPUT PARAMETER DATASET-HANDLE InDarwinDS BIND.
   */
   DATASET DataStorningDs:READ-XML("FILE", filnamnStorXml, "MERGE", ?,False). 
   DEFINE VARIABLE stornr AS INTEGER NO-UNDO. 
   DEFINE VARIABLE mkwhelp AS CHARACTER NO-UNDO.
   DEFINE VARIABLE txtId1in AS INTEGER NO-UNDO.
   DEFINE VARIABLE txtId2in AS INTEGER NO-UNDO.
   DEFINE VARIABLE lastdnr AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalvar AS INTEGER NO-UNDO.
   FIND FIRST ForetagData WHERE NO-LOCK NO-ERROR.
   
   RUN InDarwinDSTracking_UI (TRUE).
   ForetagDBbuffh:FIND-FIRST("WHERE  ",NO-LOCK) NO-ERROR.
   IF ForetagDBbuffh:AVAILABLE THEN ForetagDBbuffh:BUFFER-FIELD("AVDELNINGNAMN"):BUFFER-VALUE = ForetagDBbuffh:BUFFER-FIELD("AVDELNINGNAMN"):BUFFER-VALUE.
   ELSE DO: 
      FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = ForetagData.IdentifikationsnrForetag AND
      AVDELNING.KOSTMASK = 1 NO-LOCK NO-ERROR.
      IF NOT AVAILABLE AVDELNING THEN DO:
         ForetagDBbuffh:BUFFER-CREATE().
         ASSIGN
         ForetagDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = ForetagData.IdentifikationsnrForetag
         ForetagDBbuffh:BUFFER-FIELD("AVDELNING"):BUFFER-VALUE = ForetagData.Foretag
         ForetagDBbuffh:BUFFER-FIELD("KOSTMASK"):BUFFER-VALUE = 1.
      END.
   END.   
   DELETE ForetagData.
   InDarwinDS:WRITE-XML("FILE", "C:\PROTEMP10\Startfil.xml").
   FIND LAST STORDISTRIKT USE-INDEX DISTRIKTID NO-LOCK NO-ERROR. 
   IF AVAILABLE STORDISTRIKT THEN lastdnr = STORDISTRIKT.DISTRIKTID + 1.
   ELSE lastdnr = 1.  
   FOR EACH DistriktData WHERE NO-LOCK:
      DistriktDBbuffh:BUFFER-CREATE().
      ASSIGN
      DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE  = lastdnr
      DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE  = DistriktData.DistriktsId
      DistriktDBbuffh:BUFFER-FIELD("NAMN"):BUFFER-VALUE        = DistriktData.DistriktsNamn
      DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktData.IdentifikationsnrForetag
      DistriktDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE       = DistriktData.Artal.
      artalvar = DistriktData.Artal.
      DELETE DistriktData.
   END.
   FOR EACH KundData WHERE NO-LOCK:
      DistriktDBbuffh:FIND-FIRST("WHERE VIDISTRIKT = " + QUOTER(KundData.DistriktsId) + " AND ARTAL = " + STRING(KundData.ARTAL),NO-LOCK) NO-ERROR.
      KundDataDBbuffh:BUFFER-CREATE().
      ASSIGN
      KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE  = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE
      KundDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE   = DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE 
      KundDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE        = KundData.ARTAL 
      KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE  = KundData.AntalKunderTotalt
      KundDataDBbuffh:BUFFER-FIELD("ANTALLUFT"):BUFFER-VALUE    = KundData.AntalKunderLuftnat
      KundDataDBbuffh:BUFFER-FIELD("ANTALBLAND"):BUFFER-VALUE   = KundData.AntalKunderBlandNat
      KundDataDBbuffh:BUFFER-FIELD("ANTALKABEL"):BUFFER-VALUE   = KundData.AntalKunderKabelNat.
       
      IF KundData.AntalKunderTotalt = 0 THEN DO:
         KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE = KundDataDBbuffh:BUFFER-FIELD("ANTALLUFT"):BUFFER-VALUE + 
         KundDataDBbuffh:BUFFER-FIELD("ANTALBLAND"):BUFFER-VALUE + KundDataDBbuffh:BUFFER-FIELD("ANTALKABEL"):BUFFER-VALUE.
      END.
      IF KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE = 0 THEN KundDataDBbuffh:BUFFER-DELETE.
      KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttabIN(INPUT "D",input "1", INPUT KundData.SpanNivId ). 
      DELETE KundData.
   END. 
   FOR EACH LedningData WHERE NO-LOCK:
      DistriktDBbuffh:FIND-FIRST("WHERE VIDISTRIKT = " + QUOTER(LedningData.DistriktsId) + " AND ARTAL = " + STRING(LedningData.ARTAL),NO-LOCK) NO-ERROR.
      LedninggsDataDBbuffh:BUFFER-CREATE().
      ASSIGN
      LedninggsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE
      LedninggsDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE
      LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttabIN(INPUT "D",input "1", INPUT LedningData.SpanNivId).
      FIND FIRST STORTEXTER WHERE STORTEXTER.NAMN = LedningData.TEXT1 NO-LOCK NO-ERROR.
      IF AVAILABLE STORTEXTER THEN txtId1in = STORTEXTER.TID.
      FIND FIRST STORTEXTER WHERE STORTEXTER.NAMN = LedningData.TEXT2 NO-LOCK NO-ERROR.
      IF AVAILABLE STORTEXTER THEN txtId2in = STORTEXTER.TID.
      FIND FIRST STORNATUPPKOPP WHERE STORNATUPPKOPP.TEXTID1 = txtId1in AND STORNATUPPKOPP.TEXTID2 = txtId2in NO-LOCK NO-ERROR.
      ASSIGN
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID1"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID1 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID2"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID2 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID3"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID3 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID4"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID4 
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE   = LedningData.AntalLuftnat  / STORNATUPPKOPP.M-KM  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE  = LedningData.AntalBlandNat / STORNATUPPKOPP.M-KM   
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE  = LedningData.AntalKabelNat / STORNATUPPKOPP.M-KM  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE       = LedningData.AntalTotalt / STORNATUPPKOPP.M-KM.        
      DELETE LedningData.
   END. 
   FIND LAST STORNINGSTAB WHERE 
   USE-INDEX STORNUMMERID NO-LOCK NO-ERROR.
   IF AVAILABLE STORNINGSTAB THEN stornr = STORNINGSTAB.STORNUMMERID + 1.
   ELSE stornr = 1.
   FOR EACH StorningData WHERE NO-LOCK:
      DistriktDBbuffh:FIND-FIRST("WHERE VIDISTRIKT = " + QUOTER(StorningData.DistriktsId) + " AND ARTAL = " + STRING(artalvar),NO-LOCK) NO-ERROR.
      StorningsDataDBbuffh:BUFFER-CREATE().
      ASSIGN                                                                                                            
      StorningsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE                =               StorningData.IdentifikationsnrForetag 
      StorningsDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE                 =               DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE
      StorningsDataDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE               =               stornr
      StorningsDataDBbuffh:BUFFER-FIELD("VSTORNUMMER"):BUFFER-VALUE                =               stornr                  
      StorningsDataDBbuffh:BUFFER-FIELD("HDATUM"):BUFFER-VALUE                     =               StorningData.hDatum                   
      StorningsDataDBbuffh:BUFFER-FIELD("HKLOCKAN"):BUFFER-VALUE                   =               StorningData.hKlockan / 100                
      StorningsDataDBbuffh:BUFFER-FIELD("STORTYPID"):BUFFER-VALUE                  =               StorningData.StortypId
      StorningsDataDBbuffh:BUFFER-FIELD("BRYTORGLIT"):BUFFER-VALUE                 =               StorningData.BrytorgLit               
      StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONLIT"):BUFFER-VALUE                 =               StorningData.SektionLit               
      StorningsDataDBbuffh:BUFFER-FIELD("AVBROTTSTID"):BUFFER-VALUE                =               StorningData.AvbrottsTid              
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALHSP"):BUFFER-VALUE                   =               StorningData.AntalHSP               
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALLSP"):BUFFER-VALUE                   =               StorningData.AntalLSP                 
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALREGSTN"):BUFFER-VALUE                =               StorningData.AntalRegStn               
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALNATSTN"):BUFFER-VALUE                =               StorningData.AntalNatStn              
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKUND"):BUFFER-VALUE                 =               StorningData.EjBortKund               
      StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTLIT"):BUFFER-VALUE                 =               StorningData.StDriftLit               
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALRESERVKRAFT"):BUFFER-VALUE           =               StorningData.AntalReservKraft         
      StorningsDataDBbuffh:BUFFER-FIELD("TIDRESERVKRAFT"):BUFFER-VALUE             =               StorningData.TidReservKraft.
      mkwhelp = STRING(StorningData.BortKW). 
      IF LENGTH(mkwhelp) > 3 THEN DO:
         ASSIGN                                                  
         StorningsDataDBbuffh:BUFFER-FIELD("BORTMW"):BUFFER-VALUE                     = INTEGER(SUBSTRING(mkwhelp,1,LENGTH(mkwhelp) - 3)).
         StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE                     = INTEGER(SUBSTRING(mkwhelp,LENGTH(mkwhelp) - 2)).
      END.
      ELSE DO:
         StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE                     =               StorningData.BortKW. 
      END.
      mkwhelp = STRING(StorningData.EjBortKW). 
      assign
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTMW"):BUFFER-VALUE                   =               INTEGER(SUBSTRING(STRING(mkwhelp,"999999999"),1,6))
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKW"):BUFFER-VALUE                   =               INTEGER(SUBSTRING(STRING(mkwhelp,"999999999"),7,3))
      StorningsDataDBbuffh:BUFFER-FIELD("DATUM100%"):BUFFER-VALUE                  =               StorningData.Datum100                 
      StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE                =               StorningData.Klockan100 / 100 
      StorningsDataDBbuffh:BUFFER-FIELD("DATUM70%"):BUFFER-VALUE                   =               StorningData.DATUM70                 
      StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE                 =               StorningData.KLOCKAN70 / 100.                 
      IF StorningData.Datum70 = "" THEN DO:
         StorningsDataDBbuffh:BUFFER-FIELD("DATUM70%"):BUFFER-VALUE = ?.
         StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE = ?.
      END.  
      StorningsDataDBbuffh:BUFFER-FIELD("FRANSPANID"):BUFFER-VALUE                 =               FFinlasttabIN(INPUT "D",input "1", INPUT StorningData.FranspanId).                
      StorningsDataDBbuffh:BUFFER-FIELD("FELSPANID"):BUFFER-VALUE                  =               FFinlasttabIN(INPUT "D",input "2", INPUT StorningData.FelspanId).               
      
      StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONERID"):BUFFER-VALUE = STRING(FLinlasttabFF("SEKTIONERING",StorningData.SektionerId)).
      StorningsDataDBbuffh:BUFFER-FIELD("RELINID"):BUFFER-VALUE = FLinlasttabFF("RELAINDIKERING",StorningData.RelinId).
      StorningsDataDBbuffh:BUFFER-FIELD("FELOID"):BUFFER-VALUE = FLinlasttabFF("FELORSAK",StorningData.FelOId).
      StorningsDataDBbuffh:BUFFER-FIELD("BRYTOID"):BUFFER-VALUE = FLinlasttabFF("BRYTORGAN",StorningData.BrytoId).
      StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTID"):BUFFER-VALUE = FLinlasttabFF("STORDRIFTOMR",StorningData.StDriftId).
      StorningsDataDBbuffh:BUFFER-FIELD("NATTYPID"):BUFFER-VALUE = STRING(FLinlasttabFF("NATTYP",StorningData.NattypId)).
      StorningsDataDBbuffh:BUFFER-FIELD("ADELID"):BUFFER-VALUE = STRING(FLinlasttabFF("ANLAGGNINGSDEL",StorningData.AdelId)).
      StorningsDataDBbuffh:BUFFER-FIELD("UTLOSID"):BUFFER-VALUE = FLinlasttabFF("UTLOSNINGSKYDD",StorningData.UtlosId).
      
      FOR EACH StorFelMtrlData WHERE StorFelMtrlData.IdentifikationsnrForetag =  StorningData.IdentifikationsnrForetag AND
      StorFelMtrlData.DistriktsId =  StorningData.DistriktsId AND 
      StorFelMtrlData.StorId =  StorningData.StorId NO-LOCK:
         StorFelMtrlDBbuffh:BUFFER-CREATE().
         StorFelMtrlDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE = stornr.
         StorFelMtrlDBbuffh:BUFFER-FIELD("SFMID"):BUFFER-VALUE = StorFelMtrlData.SfmId.
         StorFelMtrlDBbuffh:BUFFER-FIELD("APPARAT"):BUFFER-VALUE = StorFelMtrlData.Apparat.
         StorFelMtrlDBbuffh:BUFFER-FIELD("LEVERANTOR"):BUFFER-VALUE = StorFelMtrlData.Leverantor.
         StorFelMtrlDBbuffh:BUFFER-FIELD("FABRIKAT"):BUFFER-VALUE = StorFelMtrlData.Fabrikat.
         StorFelMtrlDBbuffh:BUFFER-FIELD("ARTIKELNR"):BUFFER-VALUE = StorFelMtrlData.Artikelnr.
         StorFelMtrlDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE = StorFelMtrlData.Artal.
         StorFelMtrlDBbuffh:BUFFER-FIELD("ANTAL"):BUFFER-VALUE = StorFelMtrlData.Antal.
         DELETE StorFelMtrlData.
      END.
      stornr = stornr + 1.
      DELETE StorningData.
   END.
   
   
   RUN InDarwinDSSpar_UI. 
END PROCEDURE.



PROCEDURE DistriktExport_UI :
   /*
   DEFINE INPUT PARAMETER DATASET-HANDLE InDarwinDS BIND.
   */
   ForetagDBbuffh:FIND-FIRST("WHERE  ",NO-LOCK) NO-ERROR.
   CREATE ForetagData.
   ASSIGN 
   ForetagData.IdentifikationsnrForetag = ForetagDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE
   ForetagData.Foretag = ForetagDBbuffh:BUFFER-FIELD("AVDELNINGNAMN"):BUFFER-VALUE.       
   
   OUTPUT TO "C:\PROTEMP10\DKL.txt".
   kommandoquery = "FOR EACH " + DistriktDBbuffh:TABLE + " NO-LOCK". 
   RUN CreateCustomQuery(INPUT DistriktDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      RUN DistriktUt_UI.
      
      qH:GET-NEXT().
   END.
   kommandoquery = "FOR EACH " + KundDataDBbuffh:TABLE + " NO-LOCK". 
   RUN CreateCustomQuery(INPUT KundDataDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      DistriktDBbuffh:FIND-FIRST("WHERE DISTRIKTID = " + STRING(KundDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE.
      KundDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE. 
      KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttab(KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE).
      RUN KunddataUt_UI.
      
      qH:GET-NEXT().
   END. 
   kommandoquery = "FOR EACH " + LedninggsDataDBbuffh:TABLE + " NO-LOCK by integer(spanid)". 
   RUN CreateCustomQuery(INPUT LedninggsDataDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      
      DistriktDBbuffh:FIND-FIRST("WHERE DISTRIKTID = " + STRING(LedninggsDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      LedninggsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE.
      LedninggsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE. 
      LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttab(LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE).
      FIND FIRST STORNATUPPKOPP WHERE 
      STORNATUPPKOPP.NATUPPLAGGID1 = LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID1"):BUFFER-VALUE AND 
      STORNATUPPKOPP.NATUPPLAGGID2 = LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID2"):BUFFER-VALUE AND
      STORNATUPPKOPP.NATUPPLAGGID3 = LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID3"):BUFFER-VALUE AND 
      STORNATUPPKOPP.NATUPPLAGGID4 = LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID4"):BUFFER-VALUE NO-LOCK NO-ERROR.
      FIND FIRST STORTEXTER WHERE STORTEXTER.TID = STORNATUPPKOPP.TEXTID1 NO-LOCK NO-ERROR.
      LedninggsDataDBbuffh:BUFFER-FIELD("TEXT1"):BUFFER-VALUE = STORTEXTER.NAMN.
      FIND FIRST STORTEXTER WHERE STORTEXTER.TID = STORNATUPPKOPP.TEXTID2 NO-LOCK NO-ERROR.
      LedninggsDataDBbuffh:BUFFER-FIELD("TEXT2"):BUFFER-VALUE = STORTEXTER.NAMN.
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE =   LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE * STORNATUPPKOPP.M-KM.  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE =  LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE * STORNATUPPKOPP.M-KM.   
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE =  LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE * STORNATUPPKOPP.M-KM.  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE =       LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE * STORNATUPPKOPP.M-KM.        
      RUN LedningsDataUt_UI.
      
      qH:GET-NEXT().
   END. 
   
   kommandoquery = "FOR EACH " + StorningsDataDBbuffh:TABLE + " NO-LOCK by AVDELNINGNR by VIDISTRIKT by HDATUM by HKLOCKAN". 
   RUN CreateCustomQuery(INPUT StorningsDataDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
  
   DO WHILE qH:QUERY-OFF-END = FALSE:
      DistriktDBbuffh:FIND-FIRST("WHERE DISTRIKTID = " + STRING(StorningsDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      StorningsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE.
      StorningsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE. 
      StorningsDataDBbuffh:BUFFER-FIELD("HKLOCKAN"):BUFFER-VALUE = StorningsDataDBbuffh:BUFFER-FIELD("HKLOCKAN"):BUFFER-VALUE * 100.
      StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE = StorningsDataDBbuffh:BUFFER-FIELD("BORTMW"):BUFFER-VALUE * 1000 + StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE. 
      StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE = StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE * 100.
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKW"):BUFFER-VALUE = StorningsDataDBbuffh:BUFFER-FIELD("EJBORTMW"):BUFFER-VALUE * 1000 + StorningsDataDBbuffh:BUFFER-FIELD("EJBORTMW"):BUFFER-VALUE.
      StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE = StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE * 100.
       
      FIND LAST BORTKOPPLAD WHERE BORTKOPPLAD.STORNUMMERID = StorningsDataDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE 
      USE-INDEX AVBROTT NO-LOCK NO-ERROR.
      IF AVAILABLE BORTKOPPLAD THEN DO:
         ASSIGN
         StorningsDataDBbuffh:BUFFER-FIELD("DATUM100%"):BUFFER-VALUE = BORTKOPPLAD.ATERDATUM
         StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE = BORTKOPPLAD.ATERKLOCKAN * 100.
      END.
      /*Driftstörning*/
      
      
      
      IF StorningsDataDBbuffh:BUFFER-FIELD("STORTYPID"):BUFFER-VALUE = 1 THEN DO:
         StorningsDataDBbuffh:BUFFER-FIELD("FELSPANID"):BUFFER-VALUE = FFinlasttab(StorningsDataDBbuffh:BUFFER-FIELD("FELSPANID"):BUFFER-VALUE).
         StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONERID"):BUFFER-VALUE = STRING(FFinlasttabFL("SEKTIONERING",StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONERID"):BUFFER-VALUE)).
         StorningsDataDBbuffh:BUFFER-FIELD("UTLOSID"):BUFFER-VALUE = FFinlasttabFL("UTLOSNINGSKYDD",StorningsDataDBbuffh:BUFFER-FIELD("UTLOSID"):BUFFER-VALUE).
         StorningsDataDBbuffh:BUFFER-FIELD("RELINID"):BUFFER-VALUE = FFinlasttabFL("RELAINDIKERING",StorningsDataDBbuffh:BUFFER-FIELD("RELINID"):BUFFER-VALUE).
         StorningsDataDBbuffh:BUFFER-FIELD("FELOID"):BUFFER-VALUE = FFinlasttabFL("FELORSAK",StorningsDataDBbuffh:BUFFER-FIELD("FELOID"):BUFFER-VALUE).
      END.
      StorningsDataDBbuffh:BUFFER-FIELD("FRANSPANID"):BUFFER-VALUE = FFinlasttab(StorningsDataDBbuffh:BUFFER-FIELD("FRANSPANID"):BUFFER-VALUE).
      StorningsDataDBbuffh:BUFFER-FIELD("BRYTOID"):BUFFER-VALUE = FFinlasttabFL("BRYTORGAN",StorningsDataDBbuffh:BUFFER-FIELD("BRYTOID"):BUFFER-VALUE).
      StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTID"):BUFFER-VALUE = FFinlasttabFL("STORDRIFTOMR",StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTID"):BUFFER-VALUE).
      StorningsDataDBbuffh:BUFFER-FIELD("NATTYPID"):BUFFER-VALUE = STRING(FFinlasttabFL("NATTYP",StorningsDataDBbuffh:BUFFER-FIELD("NATTYPID"):BUFFER-VALUE)).
      StorningsDataDBbuffh:BUFFER-FIELD("ADELID"):BUFFER-VALUE = STRING(FFinlasttabFL("ANLAGGNINGSDEL",StorningsDataDBbuffh:BUFFER-FIELD("ADELID"):BUFFER-VALUE)).
      RUN StorningsDataUt_UI.
      qH:GET-NEXT().
   END. 
   kommandoquery = "FOR EACH " + StorFelMtrlDBbuffh:TABLE + " NO-LOCK by STORNUMMERID by SFMID". 
   RUN CreateCustomQuery(INPUT StorFelMtrlDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
  
   DO WHILE qH:QUERY-OFF-END = FALSE:
      StorningsDataDBbuffh:FIND-FIRST("WHERE STORNUMMERID = " + STRING(StorFelMtrlDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      RUN StorFelMtrlDataUt_UI.
      qH:GET-NEXT().
   END.    
   OUTPUT CLOSE.
   InDarwinDS:WRITE-XML("FILE", "C:\PROTEMP10\DKL.xml").   
   DATASET DataStorningDs:WRITE-XML("FILE", "C:\PROTEMP10\" + ForetagData.Foretag + ".xml").   
END PROCEDURE.
PROCEDURE DistriktUt_UI :
   CREATE DistriktData.
   ASSIGN 
   DistriktData.IdentifikationsnrForetag = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE
   DistriktData.DistriktsId = DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE       
   DistriktData.Artal = DistriktDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE
   DistriktData.DistriktsNamn = DistriktDBbuffh:BUFFER-FIELD("NAMN"):BUFFER-VALUE
   DistriktData.RID = RECID(ForetagData).
   
   PUT UNFORMATTED
      DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE ";"
      DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE ";"
      DistriktDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE ";"
      DistriktDBbuffh:BUFFER-FIELD("NAMN"):BUFFER-VALUE ";"
      SKIP.
    
      
END PROCEDURE.

PROCEDURE KundDataUt_UI :
   CREATE KundData.
   ASSIGN
   KundData.IdentifikationsnrForetag    = KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE    
   KundData.DistriktsId                 = KundDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE     
   KundData.Artal                       = KundDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE          
   KundData.SpanNivId                   = KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE         
   KundData.AntalKunderLuftnat          = KundDataDBbuffh:BUFFER-FIELD("ANTALLUFT"):BUFFER-VALUE      
   KundData.AntalKunderBlandNat         = KundDataDBbuffh:BUFFER-FIELD("ANTALBLAND"):BUFFER-VALUE     
   KundData.AntalKunderKabelNat         = KundDataDBbuffh:BUFFER-FIELD("ANTALKABEL"):BUFFER-VALUE     
   KundData.AntalKunderTotalt           = KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE    
   KundData.RID = RECID(DistriktData).   
   
   PUT UNFORMATTED
      KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("ANTALLUFT"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("ANTALBLAND"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("ANTALKABEL"):BUFFER-VALUE ";"
      KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE ";"
      
      SKIP.
END PROCEDURE.
PROCEDURE LedningsDataUt_UI :
   CREATE LedningData.
   ASSIGN
   LedningData.IdentifikationsnrForetag     = LedninggsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE    
   LedningData.DistriktsId                  = LedninggsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE     
   LedningData.Artal                        = LedninggsDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE          
   LedningData.SpanNivId                    = LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE         
   LedningData.Text1                        = LedninggsDataDBbuffh:BUFFER-FIELD("TEXT1"):BUFFER-VALUE          
   LedningData.Text2                        = LedninggsDataDBbuffh:BUFFER-FIELD("TEXT2"):BUFFER-VALUE          
   LedningData.AntalLuftnat                 = LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE      
   LedningData.AntalBlandNat                = LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE     
   LedningData.AntalKabelNat                = LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE     
   LedningData.AntalTotalt                  = LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE          
   LedningData.RID = RECID(DistriktData).
   PUT UNFORMATTED
      LedninggsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("TEXT1"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("TEXT2"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE ";"
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE ";"
      SKIP.
END PROCEDURE.
PROCEDURE StorningsDataUt_UI :
   CREATE StorningData.
   ASSIGN                                                                                                                
   StorningData.IdentifikationsnrForetag    = StorningsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE       
   StorningData.DistriktsId                 = StorningsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE          
   StorningData.StorId                      = StorningsDataDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE      
   StorningData.hDatum                      = StorningsDataDBbuffh:BUFFER-FIELD("HDATUM"):BUFFER-VALUE         
   StorningData.hKlockan                    = StorningsDataDBbuffh:BUFFER-FIELD("HKLOCKAN"):BUFFER-VALUE          
   StorningData.StortypId                   = StorningsDataDBbuffh:BUFFER-FIELD("STORTYPID"):BUFFER-VALUE         
   StorningData.FranspanId                  = StorningsDataDBbuffh:BUFFER-FIELD("FRANSPANID"):BUFFER-VALUE        
   StorningData.FelspanId                   = StorningsDataDBbuffh:BUFFER-FIELD("FELSPANID"):BUFFER-VALUE         
   StorningData.BrytoId                     = StorningsDataDBbuffh:BUFFER-FIELD("BRYTOID"):BUFFER-VALUE           
   StorningData.BrytorgLit                  = StorningsDataDBbuffh:BUFFER-FIELD("BRYTORGLIT"):BUFFER-VALUE          
   StorningData.SektionerId                 = StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONERID"):BUFFER-VALUE       
   StorningData.SektionLit                  = StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONLIT"):BUFFER-VALUE          
   StorningData.UtlosId                     = StorningsDataDBbuffh:BUFFER-FIELD("UTLOSID"):BUFFER-VALUE           
   StorningData.RelinId                     = StorningsDataDBbuffh:BUFFER-FIELD("RELINID"):BUFFER-VALUE           
   StorningData.BortKW                      = StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE            
   StorningData.Datum100                       = StorningsDataDBbuffh:BUFFER-FIELD("DATUM100%"):BUFFER-VALUE     
   StorningData.Klockan100                  = StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE       
   StorningData.AvbrottsTid                = StorningsDataDBbuffh:BUFFER-FIELD("AVBROTTSTID"):BUFFER-VALUE        
   StorningData.AntalHSP                  = StorningsDataDBbuffh:BUFFER-FIELD("ANTALHSP"):BUFFER-VALUE          
   StorningData.AntalLSP                    = StorningsDataDBbuffh:BUFFER-FIELD("ANTALLSP"):BUFFER-VALUE          
   StorningData.AntalRegStn                  = StorningsDataDBbuffh:BUFFER-FIELD("ANTALREGSTN"):BUFFER-VALUE       
   StorningData.AntalNatStn                 = StorningsDataDBbuffh:BUFFER-FIELD("ANTALNATSTN"):BUFFER-VALUE       
   StorningData.EjBortKund                  = StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKUND"):BUFFER-VALUE        
   StorningData.EjBortKW                    = StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKW"):BUFFER-VALUE          
   StorningData.StDriftId                   = StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTID"):BUFFER-VALUE         
   StorningData.StDriftLit                = StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTLIT"):BUFFER-VALUE          
   StorningData.NattypId                    = StorningsDataDBbuffh:BUFFER-FIELD("NATTYPID"):BUFFER-VALUE          
   StorningData.AdelId                      = StorningsDataDBbuffh:BUFFER-FIELD("ADELID"):BUFFER-VALUE            
   StorningData.FelOId                      = StorningsDataDBbuffh:BUFFER-FIELD("FELOID"):BUFFER-VALUE            
   StorningData.AntalReservKraft            = StorningsDataDBbuffh:BUFFER-FIELD("ANTALRESERVKRAFT"):BUFFER-VALUE  
   StorningData.TidReservKraft            = StorningsDataDBbuffh:BUFFER-FIELD("TIDRESERVKRAFT"):BUFFER-VALUE.     
    
   IF StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE = ? THEN DO:
       StorningData.Datum70   = "".
       StorningData.Klockan70 = 0.
   END.   
   ELSE DO: 
      StorningData.Datum70   = STRING(StorningsDataDBbuffh:BUFFER-FIELD("DATUM70%"):BUFFER-VALUE,"9999/99/99"). 
      StorningData.Klockan70 = StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE.
   END.               
   StorningData.RID = RECID(DistriktData).
   
   PUT UNFORMATTED
      StorningsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE  ';'
      STRING(StorningsDataDBbuffh:BUFFER-FIELD("HDATUM"):BUFFER-VALUE,"9999/99/99")  ';'
      STRING(StorningsDataDBbuffh:BUFFER-FIELD("HKLOCKAN"):BUFFER-VALUE,"9999")   ';' 
      StorningsDataDBbuffh:BUFFER-FIELD("STORTYPID"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("FRANSPANID"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("FELSPANID"):BUFFER-VALUE  ';'
      StorningsDataDBbuffh:BUFFER-FIELD("BRYTOID"):BUFFER-VALUE  ';'
      '"' StorningsDataDBbuffh:BUFFER-FIELD("BRYTORGLIT"):BUFFER-VALUE '"' ';'
      StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONERID"):BUFFER-VALUE ';'
      '"' StorningsDataDBbuffh:BUFFER-FIELD("SEKTIONLIT"):BUFFER-VALUE '"' ';'
      StorningsDataDBbuffh:BUFFER-FIELD("UTLOSID"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("RELINID"):BUFFER-VALUE ';'
      "0;"
      StorningsDataDBbuffh:BUFFER-FIELD("BORTKW"):BUFFER-VALUE  ';'.
      
      IF StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE = ? THEN DO:
         PUT UNFORMATTED '          ;0000;'.
         
      END.   
      ELSE DO: 
         PUT UNFORMATTED  
         STRING(StorningsDataDBbuffh:BUFFER-FIELD("DATUM70%"):BUFFER-VALUE,"9999/99/99") ';'
         STRING(StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN70%"):BUFFER-VALUE,"9999") ';'.
      END.
      PUT UNFORMATTED  
      STRING(StorningsDataDBbuffh:BUFFER-FIELD("DATUM100%"):BUFFER-VALUE,"9999/99/99") ';'
      STRING(StorningsDataDBbuffh:BUFFER-FIELD("KLOCKAN100%"):BUFFER-VALUE,"9999") ';' 
      STRING(StorningsDataDBbuffh:BUFFER-FIELD("AVBROTTSTID"):BUFFER-VALUE,">>>>>>9.99") ';' 
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALHSP"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALLSP"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALREGSTN"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALNATSTN"):BUFFER-VALUE  ';'
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKUND"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("EJBORTKW"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTID"):BUFFER-VALUE  ';"'
      StorningsDataDBbuffh:BUFFER-FIELD("STDRIFTLIT"):BUFFER-VALUE '";'
      "0;"
      "0;"
      StorningsDataDBbuffh:BUFFER-FIELD("NATTYPID"):BUFFER-VALUE  ';'
      StorningsDataDBbuffh:BUFFER-FIELD("ADELID"):BUFFER-VALUE  ';'
      StorningsDataDBbuffh:BUFFER-FIELD("FELOID"):BUFFER-VALUE ';'
       "0;" 
      StorningsDataDBbuffh:BUFFER-FIELD("ANTALRESERVKRAFT"):BUFFER-VALUE ';'
      StorningsDataDBbuffh:BUFFER-FIELD("TIDRESERVKRAFT"):BUFFER-VALUE ';'
      SKIP.
   
END PROCEDURE.
PROCEDURE StorFelMtrlDataUt_UI:
   CREATE StorFelMtrlData.
   ASSIGN
   StorFelMtrlData.IdentifikationsnrForetag    = StorFelMtrlDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE       
   StorFelMtrlData.DistriktsId                 = StorFelMtrlDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE          
   StorFelMtrlData.StorId                      = StorFelMtrlDBbuffh:BUFFER-FIELD("STORNUMMERID"):BUFFER-VALUE  
   StorFelMtrlData.SfmId                 = StorFelMtrlDBbuffh:BUFFER-FIELD("SfmId"):BUFFER-VALUE
   StorFelMtrlData.Apparat               = StorFelMtrlDBbuffh:BUFFER-FIELD("Apparat"):BUFFER-VALUE  
   StorFelMtrlData.Leverantor            = StorFelMtrlDBbuffh:BUFFER-FIELD("Leverantor"):BUFFER-VALUE   
   StorFelMtrlData.Fabrikat              = StorFelMtrlDBbuffh:BUFFER-FIELD("Fabrikat"):BUFFER-VALUE 
   StorFelMtrlData.Artikelnr             = StorFelMtrlDBbuffh:BUFFER-FIELD("Artikelnr"):BUFFER-VALUE 
   StorFelMtrlData.Artal                 = StorFelMtrlDBbuffh:BUFFER-FIELD("Artal"):BUFFER-VALUE   
   StorFelMtrlData.RID = RECID(StorningData).
END PROCEDURE.
PROCEDURE DistriktEfterImport_UI :
  /*Anders Olsson Elpool i Umeå AB  9 mar 2017 13:40:26 
  körs inte 
  */
   DEFINE VARIABLE txtId1in AS INTEGER NO-UNDO.
   DEFINE VARIABLE txtId2in AS INTEGER NO-UNDO.
   DEFINE VARIABLE lastdnr AS INTEGER NO-UNDO.
   
   FIND LAST STORDISTRIKT USE-INDEX DISTRIKTID NO-LOCK NO-ERROR.                   
   lastdnr = STORDISTRIKT.DISTRIKTID + 1.  
   ForetagDBbuffh:FIND-FIRST("WHERE  ",NO-LOCK) NO-ERROR.
   DEBUGGER:SET-BREAK().
   kommandoquery = "FOR EACH " + DistriktDBbuffh:TABLE + " USE-INDEX VIDISTRIKT NO-LOCK". 
   RUN CreateCustomQuery(INPUT DistriktDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE = lastdnr. 
      lastdnr = lastdnr + 1.           
      qH:GET-NEXT().
   END.
   
   kommandoquery = "FOR EACH " + KundDataDBbuffh:TABLE + " NO-LOCK". 
   RUN CreateCustomQuery(INPUT KundDataDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      DistriktDBbuffh:FIND-FIRST("WHERE VIDISTRIKT = " + STRING(KundDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE) + " AND ARTAL = " + STRING(KundDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE.
      KundDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE. 
      
      KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttabIN(INPUT "D",input "1", INPUT KundDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE ). 
      IF KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE = 0 THEN DO:
         KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE = KundDataDBbuffh:BUFFER-FIELD("ANTALLUFT"):BUFFER-VALUE + 
         KundDataDBbuffh:BUFFER-FIELD("ANTALBLAND"):BUFFER-VALUE + KundDataDBbuffh:BUFFER-FIELD("ANTALKABEL"):BUFFER-VALUE.
      END.
      IF KundDataDBbuffh:BUFFER-FIELD("ANTALKUNDER"):BUFFER-VALUE = 0 THEN KundDataDBbuffh:BUFFER-DELETE.      
      qH:GET-NEXT().
   END. 
   
   kommandoquery = "FOR EACH " + LedninggsDataDBbuffh:TABLE + " NO-LOCK by integer(spanid)". 
   RUN CreateCustomQuery(INPUT LedninggsDataDBbuffh,INPUT kommandoquery,OUTPUT qh).
   qH:GET-FIRST().
   DO WHILE qH:QUERY-OFF-END = FALSE:
      DistriktDBbuffh:FIND-FIRST("WHERE VIDISTRIKT = " + STRING(LedninggsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):BUFFER-VALUE) + " AND ARTAL = " + STRING(LedninggsDataDBbuffh:BUFFER-FIELD("ARTAL"):BUFFER-VALUE),NO-LOCK) NO-ERROR.
      LedninggsDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):BUFFER-VALUE.
      LedninggsDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE = DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):BUFFER-VALUE.
      /*Anders Olsson Elpool i Umeå AB  15 feb 2017 16:06:15 
      översättnin mellan Star och Darwin import spänning i Star+ och Darwin+ ska  INKODPOSCH bort
      */
      LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE = FFinlasttabIN(INPUT "D",input "1", INPUT LedninggsDataDBbuffh:BUFFER-FIELD("SPANID"):BUFFER-VALUE ).
      
      FIND FIRST STORTEXTER WHERE STORTEXTER.NAMN = LedninggsDataDBbuffh:BUFFER-FIELD("TEXT1"):BUFFER-VALUE NO-LOCK NO-ERROR.
      txtId1in = STORTEXTER.TID.
      FIND FIRST STORTEXTER WHERE STORTEXTER.NAMN = LedninggsDataDBbuffh:BUFFER-FIELD("TEXT2"):BUFFER-VALUE NO-LOCK NO-ERROR.
      txtId2in = STORTEXTER.TID.
      FIND FIRST STORNATUPPKOPP WHERE STORNATUPPKOPP.TEXTID1 = txtId1in AND STORNATUPPKOPP.TEXTID2 = txtId2in NO-LOCK NO-ERROR.
      ASSIGN
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID1"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID1 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID2"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID2 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID3"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID3 
      LedninggsDataDBbuffh:BUFFER-FIELD("NATUPPLAGGID4"):BUFFER-VALUE = STORNATUPPKOPP.NATUPPLAGGID4. 
      
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE =   LedninggsDataDBbuffh:BUFFER-FIELD("LANGDLUFT"):BUFFER-VALUE / STORNATUPPKOPP.M-KM.  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE =  LedninggsDataDBbuffh:BUFFER-FIELD("LANGDBLAND"):BUFFER-VALUE / STORNATUPPKOPP.M-KM.   
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE =  LedninggsDataDBbuffh:BUFFER-FIELD("LANGDKABEL"):BUFFER-VALUE / STORNATUPPKOPP.M-KM.  
      LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE =       LedninggsDataDBbuffh:BUFFER-FIELD("LANGD"):BUFFER-VALUE / STORNATUPPKOPP.M-KM.        
      qH:GET-NEXT().
   END. 
   /*Anders Olsson Elpool i Umeå AB  28 feb 2017 11:12:02 
   ej klart för störning 
   */
   
   
END PROCEDURE.   
PROCEDURE DistriktCreate_UI :
   DEFINE VARIABLE iField AS INTEGER NO-UNDO.
   CREATE TEMP-TABLE Foretagtth IN WIDGET-POOL "DynTable".
   Foretagtth:CREATE-LIKE("AVDELNING").
   Foretagtth:ADD-NEW-FIELD("TTRECID","RECID").
   Foretagtth:TEMP-TABLE-PREPARE("Foretaget").
   ForetagDBbuffh = Foretagtth:DEFAULT-BUFFER-HANDLE.
   ForetagDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
   CREATE TEMP-TABLE Distrikttth IN WIDGET-POOL "DynTable".
   Distrikttth:CREATE-LIKE("STORDISTRIKT").
   Distrikttth:ADD-NEW-FIELD("TTRECID","RECID").
   Distrikttth:TEMP-TABLE-PREPARE("Distrikten").
   DistriktDBbuffh = Distrikttth:DEFAULT-BUFFER-HANDLE.
   DistriktDBbuffh:BUFFER-FIELD("VIDISTRIKT"):XML-NODE-NAME = "dId".   
   DistriktDBbuffh:BUFFER-FIELD("DISTRIKTID"):XML-NODE-TYPE = "HIDDEN". 
   DistriktDBbuffh:BUFFER-FIELD("AVDELNINGNR"):XML-NODE-TYPE = "HIDDEN".
  /*
   DistriktDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
   */
   
   CREATE TEMP-TABLE KundDatatth IN WIDGET-POOL "DynTable".
   KundDatatth:CREATE-LIKE("KUNDSTOR").
   KundDatatth:ADD-NEW-FIELD("AVDELNINGNR","INTEGER").  
   KundDatatth:ADD-NEW-FIELD("VIDISTRIKT","CHARACTER").
   KundDatatth:ADD-NEW-FIELD("TTRECID","RECID"). 
   KundDatatth:TEMP-TABLE-PREPARE("KundDatat").
   KundDataDBbuffh = KundDatatth:DEFAULT-BUFFER-HANDLE.  
   KundDataDBbuffh:BUFFER-FIELD("AVDELNINGNR"):XML-NODE-TYPE = "HIDDEN".
   KundDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):XML-NODE-NAME = "dId". 
   KundDataDBbuffh:BUFFER-FIELD("DISTRIKTID"):XML-NODE-TYPE = "HIDDEN".
   KundDataDBbuffh:BUFFER-FIELD("INDATUM"):XML-NODE-TYPE = "HIDDEN".  
   /*
   KundDataDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
   */
   CREATE TEMP-TABLE LedninggsDatatth IN WIDGET-POOL "DynTable".
   LedninggsDatatth:CREATE-LIKE("LEDNINGSDATA").
   LedninggsDatatth:ADD-NEW-FIELD("AVDELNINGNR","INTEGER").  
   LedninggsDatatth:ADD-NEW-FIELD("VIDISTRIKT","CHARACTER"). 
   LedninggsDatatth:ADD-NEW-FIELD("TEXT1","CHARACTER"). 
   LedninggsDatatth:ADD-NEW-FIELD("TEXT2","CHARACTER"). 
   LedninggsDatatth:ADD-NEW-FIELD("TTRECID","RECID").
   LedninggsDatatth:TEMP-TABLE-PREPARE("LedningsDatat").
   LedninggsDataDBbuffh = LedninggsDatatth:DEFAULT-BUFFER-HANDLE.
   LedninggsDataDBbuffh:BUFFER-FIELD("VIDISTRIKT"):XML-NODE-NAME = "dId".    
   LedninggsDataDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
   CREATE TEMP-TABLE StorningsDatatth IN WIDGET-POOL "DynTable".
   StorningsDatatth:CREATE-LIKE("STORNINGSTAB").
   StorningsDatatth:ADD-NEW-FIELD("AVDELNINGNR","INTEGER").  
   StorningsDatatth:ADD-NEW-FIELD("VIDISTRIKT","CHARACTER").
   StorningsDatatth:ADD-NEW-FIELD("ATERDATUM","DATE").
   StorningsDatatth:ADD-NEW-FIELD("ATERKLOCKAN","INTEGER"). 
   StorningsDatatth:ADD-NEW-FIELD("TTRECID","RECID").
   StorningsDatatth:TEMP-TABLE-PREPARE("StorningsDatat").
   StorningsDataDBbuffh = StorningsDatatth:DEFAULT-BUFFER-HANDLE.
   StorningsDataDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
   DO iField = 1 TO StorningsDataDBbuffh:NUM-FIELDS:
      IF StorningsDataDBbuffh:BUFFER-FIELD(iField):NAME MATCHES "*%*" THEN DO:
         StorningsDataDBbuffh:BUFFER-FIELD(iField):XML-NODE-NAME = REPLACE(StorningsDataDBbuffh:BUFFER-FIELD(iField):NAME,"%","x").   
      END. 
   END. 
   CREATE TEMP-TABLE StorFelMtrltth IN WIDGET-POOL "DynTable".
   StorFelMtrltth:CREATE-LIKE("STORFELMTRL").
   StorFelMtrltth:ADD-NEW-FIELD("TTRECID","RECID").
   StorFelMtrltth:TEMP-TABLE-PREPARE("StorFelMtrl").
   StorFelMtrlDBbuffh = StorFelMtrltth:DEFAULT-BUFFER-HANDLE.  
   StorFelMtrlDBbuffh:BUFFER-FIELD("TTRECID"):XML-NODE-TYPE = "HIDDEN".
END PROCEDURE.

PROCEDURE laddaDistriktsDataDS_UI :
   DEFINE INPUT  PARAMETER vad AS CHARACTER NO-UNDO. 
   DEFINE INPUT  PARAMETER vadi AS INTEGER NO-UNDO.
   /*
   DEFINE OUTPUT PARAMETER DATASET-HANDLE InDarwinDS BIND.
   */
   IF VALID-HANDLE(InDarwinDS) THEN InDarwinDS:EMPTY-DATASET().
   ELSE RUN DistriktCreate_UI.
  /*
   RUN GetDatasetDeftt_UI ("InDarwinDS").  
   DatasetDeftt.antaltab = 1.
   DatasetDeftt.pcBuffers[1] = STRING(StorningsDataDBbuffh).
   DatasetDeftt.pcSources[1] = "STORNINGSTAB".
   DatasetDeftt.pcSourceKeys[1] = "DISTRIKTID,STORNUMMERID".
   DatasetDeftt.pcKeyValue[1] = "STORNINGSTAB.DISTRIKTID = 1028 and STORNINGSTAB.STORNUMMERID = 0" .
   DatasetDeftt.repMode = FALSE.
   DatasetDeftt.nestMode = TRUE.  
   RUN DefAndLoadDs_UI IN dyndamicDSh 
   ({DataSetInput.I} OUTPUT DATASET-HANDLE InDarwinDS BIND).
   */
   RUN GetDatasetDeftt_UI ("InDarwinDS").  
   DatasetDeftt.antaltab = 5.
   DatasetDeftt.pcBuffers[1] = STRING(ForetagDBbuffh).
   DatasetDeftt.pcBuffers[2] = STRING(DistriktDBbuffh). 
   DatasetDeftt.pcBuffers[3] = STRING(KundDataDBbuffh). 
   DatasetDeftt.pcBuffers[4] = STRING(LedninggsDataDBbuffh).
   DatasetDeftt.pcBuffers[5] = STRING(StorningsDataDBbuffh).
   DatasetDeftt.pcSources[1] = "AVDELNING".
   DatasetDeftt.pcSources[2] = "STORDISTRIKT".
   DatasetDeftt.pcSources[3] = "KUNDSTOR".
   DatasetDeftt.pcSources[4] = "LEDNINGSDATA".
   DatasetDeftt.pcSources[5] = "STORNINGSTAB".
   
   DatasetDeftt.pcSourceKeys[1] = "AVDELNINGNR".
   DatasetDeftt.pcSourceKeys[2] = "DISTRIKTID".
   DatasetDeftt.pcSourceKeys[3] = "DISTRIKTID,SPANID,ARTAL".
   DatasetDeftt.pcSourceKeys[4] = "DISTRIKTID,SPANID,ARTAL,NATUPPLAGGID1,NATUPPLAGGID2,NATUPPLAGGID3,NATUPPLAGGID4".
   DatasetDeftt.pcSourceKeys[5] = "DISTRIKTID,STORNUMMERID".
   DatasetDeftt.pcKeyValue[1] = "AVDELNING.AVDELNINGNR = " + QUOTER(vad) + " AND AVDELNING.KOSTMASK = 1 ".
   DatasetDeftt.pcKeyValue[2] = "STORDISTRIKT.AVDELNINGNR = " + QUOTER(vad) + " AND STORDISTRIKT.ARTAL = " + STRING(vadi).
   DatasetDeftt.pcKeyValue[3] = "KUNDSTOR.DISTRIKTID = 1028" + " AND KUNDSTOR.ARTAL = " + STRING(vadi).
   DatasetDeftt.pcKeyValue[4] = "LEDNINGSDATA.DISTRIKTID = 1028" + " AND LEDNINGSDATA.ARTAL = " + STRING(vadi).
   DatasetDeftt.pcKeyValue[5] = "STORNINGSTAB.DISTRIKTID = 1028".  
   DatasetDeftt.repMode = FALSE.
   DatasetDeftt.nestMode = FALSE.  
   RUN DefAndLoadDs_UI IN dyndamicDSh 
   ({DataSetInput.I} OUTPUT DATASET-HANDLE InDarwinDS BIND).
   
   
   
   /*Anders Olsson Elpool i Umeå AB  24 feb 2017 15:14:24 
   utan företag
   DatasetDeftt.antaltab = 5.
   DatasetDeftt.pcBuffers[1] = STRING(DistriktDBbuffh). 
   DatasetDeftt.pcBuffers[2] = STRING(KundDataDBbuffh). 
   DatasetDeftt.pcBuffers[3] = STRING(LedninggsDataDBbuffh).
   DatasetDeftt.pcBuffers[4] = STRING(StorningsDatatth).
   DatasetDeftt.pcBuffers[5] = STRING(StorFelMtrlDBbuffh). 
   DatasetDeftt.pcRelTables[1] = "1,2".
   DatasetDeftt.pcRelTables[2] = "1,3".
   DatasetDeftt.pcRelTables[3] = "1,4".
   DatasetDeftt.pcRelTables[4] = "4,5".
   DatasetDeftt.pcRelFields[1] = "DISTRIKTID,DISTRIKTID".
   DatasetDeftt.pcRelFields[2] = "DISTRIKTID,DISTRIKTID".
   DatasetDeftt.pcRelFields[3] = "DISTRIKTID,DISTRIKTID".
   DatasetDeftt.pcRelFields[4] = "STORNUMMERID,STORNUMMERID".
   
   DatasetDeftt.pcSources[1] = "STORDISTRIKT".
   DatasetDeftt.pcSources[2] = "KUNDSTOR".
   DatasetDeftt.pcSources[3] = "LEDNINGSDATA".
   DatasetDeftt.pcSources[4] = "STORNINGSTAB".
   DatasetDeftt.pcSources[5] = "STORFELMTRL".
   
   DatasetDeftt.pcSourceKeys[1] = "DISTRIKTID".
   DatasetDeftt.pcSourceKeys[2] = "DISTRIKTID,SPANID,ARTAL".
   DatasetDeftt.pcSourceKeys[3] = "DISTRIKTID,SPANID,ARTAL,NATUPPLAGGID1,NATUPPLAGGID2,NATUPPLAGGID3,NATUPPLAGGID4".
   DatasetDeftt.pcSourceKeys[4] = "DISTRIKTID,STORNUMMERID".
   DatasetDeftt.pcSourceKeys[5] = "STORNUMMERID,SFMID".
   DatasetDeftt.pcKeyValue[1] = "STORDISTRIKT.AVDELNINGNR = " + QUOTER(vad) + " AND STORDISTRIKT.ARTAL = " + STRING(vadi).
   DatasetDeftt.repMode = FALSE.
   DatasetDeftt.nestMode = TRUE. 
   */
   
  
END PROCEDURE.

PROCEDURE avsluta_UI :
   DELETE WIDGET-POOL "DynTable" NO-ERROR.
   DELETE OBJECT Foretagtth NO-ERROR.
   Foretagtth = ?.
   DELETE OBJECT ForetagDBbuffh NO-ERROR.
   ForetagDBbuffh = ?.
   DELETE OBJECT Distrikttth NO-ERROR.
   Distrikttth = ?.
   DELETE OBJECT DistriktDBbuffh NO-ERROR.
   DistriktDBbuffh = ?.
   DELETE OBJECT KundDatatth NO-ERROR.
   KundDatatth = ?.
   DELETE OBJECT KundDataDBbuffh NO-ERROR.
   KundDataDBbuffh = ?.
   DELETE OBJECT LedninggsDatatth NO-ERROR.
   LedninggsDatatth = ?.
   DELETE OBJECT LedninggsDataDBbuffh NO-ERROR.
   LedninggsDataDBbuffh = ?.
   
   DELETE OBJECT StorningsDatatth NO-ERROR.
   StorningsDatatth = ?.
   DELETE OBJECT StorningsDataDBbuffh NO-ERROR.
   StorningsDataDBbuffh = ?.
   DELETE OBJECT StorFelMtrltth NO-ERROR.
   StorFelMtrltth = ?.
   DELETE OBJECT StorFelMtrlDBbuffh NO-ERROR.
   StorFelMtrlDBbuffh = ?.
   IF VALID-HANDLE(dyndamicDSh) THEN DO:
      RUN RelDatset_UI IN dyndamicDSh.
      DELETE PROCEDURE dyndamicDSh NO-ERROR.
      dyndamicDSh = ?.
   END.   
   
END PROCEDURE.
PROCEDURE CreateCustomQuery:
   DEFINE INPUT PARAMETER tth  AS HANDLE NO-UNDO.
   DEFINE INPUT PARAMETER q AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER CustomQueryh AS HANDLE NO-UNDO.
   CREATE QUERY CustomQueryh IN WIDGET-POOL "DynTable".
   CustomQueryh:SET-BUFFERS(tth).
   CustomQueryh:QUERY-PREPARE(q).
   CustomQueryh:QUERY-OPEN().
END PROCEDURE.
   
PROCEDURE CloseCustomQuery:
   DEFINE INPUT PARAMETER CustomQueryh AS HANDLE NO-UNDO.
   CustomQueryh:QUERY-CLOSE()  NO-ERROR.
   CustomQueryh = ?.
END PROCEDURE.
      
      
      
      
      
      
      
      
      
      
      
      
       /*
           dumpa_temp2.FORETAG            ';' AVDELNINGNR
           dumpa_temp2.DISTRIKT           ';' VIDISTRIKT
           dumpa_temp2.BDAT FORMAT "9999/99/99" ';' HDATUM
           dumpa_temp2.BTID FORMAT "9999" ';'  HKLOCKAN
           dumpa_temp2.C1                 ';'   STORTYPID
           dumpa_temp2.D1                 ';'  FRANSPANID
           dumpa_temp2.D2                 ';' FELSPANID
           dumpa_temp2.E1                 ';'  BRYTOID
       '"' dumpa_temp2.E2 '"'         ';'     BRYTORGLIT
           dumpa_temp2.F1                 ';' SEKTIONERID
       '"' dumpa_temp2.F2 '"'         ';'     SEKTIONLIT
           dumpa_temp2.G1                 ';' UTLOSID
           dumpa_temp2.G2                 ';' RELINID
           dumpa_temp2.G3                 ';' 0
           dumpa_temp2.H                  ';'   ((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW)
           dumpa_temp2.J1DAT FORMAT "9999/99/99"       ';'   STORNINGSTAB.DATUM70%
           dumpa_temp2.J1KLOCK FORMAT "9999"           ';'   STORNINGSTAB.KLOCKAN70% * 100
           dumpa_temp2.J2DAT FORMAT "9999/99/99"       ';'  STORNINGSTAB.DATUM100%   BORTKOPPLAD.ATERDATUM
           dumpa_temp2.J2KLOCK FORMAT "9999"           ';'  STORNINGSTAB.KLOCKAN100% * 100  BORTKOPPLAD.ATERKLOCKAN 
            dumpa_temp2.J3 FORMAT ">>>>>>9.99"          ';' STORNINGSTAB.AVBROTTSTID
            dumpa_temp2.K1                 ';'              STORNINGSTAB.ANTALHSP
            dumpa_temp2.K2                 ';'              STORNINGSTAB.ANTALLSP
            dumpa_temp2.L1                 ';'              STORNINGSTAB.ANTALREGSTN
            dumpa_temp2.L2                 ';'              STORNINGSTAB.ANTALNATSTN
            dumpa_temp2.M1                 ';'              STORNINGSTAB.EJBORTKUND
            dumpa_temp2.M2                 ';'              ((STORNINGSTAB.EJBORTMW * 1000) + STORNINGSTAB.EJBORTKW)
            dumpa_temp2.N1                 ';'              STDRIFTID
            '"' dumpa_temp2.N2 '"'         ';'              " STORNINGSTAB.STDRIFTLIT "
            dumpa_temp2.P1                 ';'             0
            dumpa_temp2.P2                 ';'             0
           
            dumpa_temp2.Q                  ';'             NATTYPID
            dumpa_temp2.R                  ';'             ADELID
            dumpa_temp2.S                  ';'             93. FELOID
            dumpa_temp2.T1                 ';'             0
            dumpa_temp2.T2                 ';'             STORNINGSTAB.ANTALRESERVKRAFT
            dumpa_temp2.T3                                 STORNINGSTAB.TIDRESERVKRAFT
  
     */
  
   
   

      
