                   
/*MULTITRIGG.P*/
{ALLDEF.I}


DEFINE VARIABLE C-WIN AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_AONR AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_BER AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_DEPA AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_FAKT AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_FLEX AS HANDLE NO-UNDO.              
DEFINE VARIABLE BTN_GURU AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_KALK AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_MARK AS HANDLE NO-UNDO. 
DEFINE VARIABLE BTN_MTRL AS HANDLE NO-UNDO. 
DEFINE VARIABLE BTN_PERS AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_PLAN AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_REG AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_SEK AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_SMS AS HANDLE NO-UNDO.  
DEFINE VARIABLE BTN_SKARM AS HANDLE NO-UNDO.            
DEFINE VARIABLE BTN_STOR AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_EBRKAT AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_TID AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_UPPF AS HANDLE NO-UNDO. 
DEFINE VARIABLE BTN_AVB AS HANDLE NO-UNDO. 
DEFINE VARIABLE FBTN_ATER AS HANDLE NO-UNDO. 
DEFINE VARIABLE FBTN_STATUS AS HANDLE NO-UNDO. 
DEFINE VARIABLE IMAGE-4 AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_ARENDE AS HANDLE NO-UNDO.
DEFINE VARIABLE btnnovit AS HANDLE NO-UNDO.

{WHANDLTEMP.I}
DEFINE VARIABLE ordnr AS INTEGER NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER huvprogh AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR whandltemp.
FIND FIRST whandltemp WHERE NO-LOCK NO-ERROR.

ASSIGN
ordnr = ordnr + 1                                       
C-WIN = whandltemp.WF[ordnr]                            
ordnr = ordnr + 1                                       
BTN_AONR = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_BER = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1                                       
BTN_DEPA = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_FAKT = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_FLEX = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_GURU = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_KALK = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_MARK = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_MTRL = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_PERS = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_PLAN = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1                                       
BTN_REG = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1                                       
BTN_SEK = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1                                       
BTN_SMS = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1
BTN_SKARM = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1                               
BTN_STOR = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1
BTN_EBRKAT = whandltemp.WF[ordnr]                         
ordnr = ordnr + 1
                                       
BTN_TID = whandltemp.WF[ordnr]                          
ordnr = ordnr + 1                                       
BTN_UPPF = whandltemp.WF[ordnr]
ordnr = ordnr + 1                                       
BTN_AVB = whandltemp.WF[ordnr]
ordnr = ordnr + 1                                       
FBTN_ATER = whandltemp.WF[ordnr]  
ordnr = ordnr + 1                                       
FBTN_STATUS = whandltemp.WF[ordnr]
ordnr = ordnr + 1                                       
IMAGE-4 = whandltemp.WF[ordnr]
ordnr = ordnr + 1                                       
BTN_ARENDE = whandltemp.WF[ordnr].

ON 'MOUSE-MENU-DBLCLICK':U OF IMAGE-4 PERSISTENT RUN mmIMAGE-4_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_AONR PERSISTENT RUN btnaonr_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_BER PERSISTENT RUN btnber_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_DEPA PERSISTENT RUN btndepa_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_FAKT PERSISTENT RUN btnfakt_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_GURU PERSISTENT RUN btnguru_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_KALK PERSISTENT RUN btnkalk_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_ARENDE PERSISTENT RUN btnarende_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_MARK PERSISTENT RUN btnmark_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_MTRL PERSISTENT RUN btnmtrl_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_PERS PERSISTENT RUN btnpers_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_PLAN PERSISTENT RUN btnplan_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_REG PERSISTENT RUN btnreg_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_SEK PERSISTENT RUN btnsek_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_SMS PERSISTENT RUN btnsms_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_SKARM PERSISTENT RUN bytskarm_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_STOR PERSISTENT RUN btnstor_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_EBRKAT PERSISTENT RUN btnebr_UI IN THIS-PROCEDURE.

ON 'CHOOSE':U OF BTN_TID PERSISTENT RUN btntid_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_UPPF PERSISTENT RUN btnupp_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_FLEX PERSISTENT RUN btnflex_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_AVB PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'ENDKEY':U OF BTN_AVB PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF FBTN_ATER PERSISTENT RUN btnater_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF FBTN_STATUS PERSISTENT RUN btnstatus_UI IN THIS-PROCEDURE.


PROCEDURE mmIMAGE-4_UI :
   APPLY "MOUSE-MENU-DBLCLICK" TO c-win.
END PROCEDURE.
PROCEDURE bytskarm_UI :
   DEFINE VARIABLE skarmval AS LOGICAL NO-UNDO.
   IF C-WIN:X < SESSION:WORK-AREA-WIDTH-PIXELS THEN DO:
      IF Guru.GlobalaVariabler:FleraBildskarmar = TRUE THEN skarmval = TRUE.
      ELSE DO:
         MESSAGE "Har du två eller flera bildskärmar?"
         VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE skarmval.
      END.
      IF skarmval = TRUE THEN DO:
         Guru.GlobalaVariabler:FleraBildskarmar = TRUE.
         Guru.GlobalaVariabler:fonstercol =  SESSION:WORK-AREA-WIDTH-PIXELS + C-WIN:X.
         /*Om man har fönstret för långt åt vänster vid start*/
         IF Guru.GlobalaVariabler:fonstercol <= SESSION:WORK-AREA-WIDTH-PIXELS THEN Guru.GlobalaVariabler:fonstercol = SESSION:WORK-AREA-WIDTH-PIXELS + 5.
         /*Om man har fönstret för långt åt höger vid start*/
         ELSE IF Guru.GlobalaVariabler:fonstercol + C-WIN:WIDTH-PIXELS >= 2 * SESSION:WORK-AREA-WIDTH-PIXELS THEN Guru.GlobalaVariabler:fonstercol = SESSION:WORK-AREA-WIDTH-PIXELS + 5.
      END.
   END.   
   ELSE IF C-WIN:X > SESSION:WORK-AREA-WIDTH-PIXELS THEN DO:
      Guru.GlobalaVariabler:fonstercol =  5.
   END.   
   C-WIN:X = Guru.GlobalaVariabler:fonstercol.
    
   
  
END PROCEDURE.
PROCEDURE btnsms_UI :
   MESSAGE "Det krävs lite extra utrustning för att köra SMS." VIEW-AS ALERT-BOX.
END PROCEDURE.
PROCEDURE btnplan_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_PLAN).
   {OMSTARTAVGURUH.I}       
   
   IF NOT VALID-HANDLE(Guru.SharedVariable:btnaonrh) THEN DO:
      RUN btnaonr_UI IN huvprogh (INPUT "PLAN").
   END.   
   RUN btnplan0_UI IN huvprogh.
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnreg_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_REG).
   {OMSTARTAVGURUH.I}       
   RUN btnreg0_UI IN huvprogh.
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.

PROCEDURE btnsek_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_SEK).
   {OMSTARTAVGURUH.I}       
   RUN btnsek0_UI IN huvprogh.
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnpers_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_PERS).
   {OMSTARTAVGURUH.I}       
   RUN btnpers0_UI IN huvprogh.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.
PROCEDURE btnupp_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_UPPF).
   {OMSTARTAVGURUH.I}       
   RUN btnupp0_UI IN huvprogh.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.
PROCEDURE btntid_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_TID).
   {OMSTARTAVGURUH.I}       
   RUN btntid0_UI IN huvprogh.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.
PROCEDURE btndepa_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_DEPA).
   {OMSTARTAVGURUH.I}       
   RUN btndep0_UI IN huvprogh.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.
PROCEDURE btnmtrl_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_MTRL).
   {OMSTARTAVGURUH.I}       
   RUN btnmtrl0_UI IN huvprogh.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.
PROCEDURE btnber_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_BER).
   {OMSTARTAVGURUH.I}     
   RUN kolltt_UI IN huvprogh (INPUT 1,OUTPUT musz).      
   IF musz = TRUE THEN DO: 
      musz = FALSE.
      RUN btnber0_UI IN huvprogh.
   END.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnkalk_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_KALK).
   {OMSTARTAVGURUH.I} 
   RUN arendeset_UI  IN huvprogh (INPUT "KAL").
   RUN gomaarende_UI IN huvprogh.
   RUN kolltt_UI IN huvprogh (INPUT 2,OUTPUT musz).      
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RUN btnkalk0_UI IN huvprogh.
   END.
   
   RUN repo_UI IN Guru.SharedVariable:btnkalkh.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnarende_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_ARENDE).
   {OMSTARTAVGURUH.I} 
   RUN arendeset_UI IN huvprogh (INPUT "ÄRENDE").
   RUN gomaarende_UI IN huvprogh.
   RUN kolltt_UI IN huvprogh (INPUT 2,OUTPUT musz).
      
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RUN btnkalk0_UI IN huvprogh.
   END.
   
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnmark_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_MARK).
   {OMSTARTAVGURUH.I} 
   RUN kolltt_UI IN huvprogh (INPUT 3,OUTPUT musz).      
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RUN btnmark0_UI IN huvprogh.
   END.
   {musarrow.i}
END PROCEDURE.

PROCEDURE btnfakt_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_FAKT).
   {OMSTARTAVGURUH.I} 
   RUN kolltt_UI IN huvprogh (INPUT 4,OUTPUT musz).      
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RUN btnfakt0_UI IN huvprogh.
   END.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnstatus_UI :
   {OMSTARTAVGURUH.I}  
   musz = FALSE.
   RUN btnstatus_UI IN huvprogh.
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnater_UI :
   {OMSTARTAVGURUH.I}       
   RUN frame_UI IN huvprogh (INPUT "AONR").
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnguru_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_GURU).
   {OMSTARTAVGURUH.I}  
     
   RUN btnguru_UI IN huvprogh.
   RUN frame_UI IN huvprogh (INPUT "START").
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.

PROCEDURE btnaonr_UI :
   {OMSTARTAVGURUH.I}      
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_AONR).
   RUN btnaonr_UI IN huvprogh (INPUT "AONR").
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.

PROCEDURE btnebr_UI :
   musz = FALSE.
   {OMSTARTAVGURUH.I}    
  
   IF NOT VALID-HANDLE(Guru.SharedVariable:btnkalkh) THEN RUN btnkalk0_UI IN huvprogh. 
      
   RUN btnekg_UI IN Guru.SharedVariable:btnkalkh.
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnstor_UI :
   musz = FALSE.
   {OMSTARTAVGURUH.I}       
   RUN btnvit_UI (INPUT BTN_STOR).
   RUN btnstor0_UI IN huvprogh.
  
   /*
    MESSAGE "inte klar! glöm inte knapparna för malung" VIEW-AS ALERT-BOX.
   ELSE IF SEL_UPP = "Avbrott/Störning" THEN vartpro = "STR".
   ELSE IF SEL_UPP = "Rapporter" THEN vartpro = "STR1".
   ELSE IF SEL_UPP = "Administration" THEN vartpro = "STR2".
   ELSE IF SEL_UPP = "Import/Export" THEN vartpro = "STR3". 
   */
   musz = FALSE.
   {musarrow.i}
END PROCEDURE.
PROCEDURE btnflex_UI :
   musz = FALSE.
   RUN btnvit_UI (INPUT BTN_FLEX).
   {OMSTARTAVGURUH.I}       
   {AVBGOM2.I}
   RUN FLEXTIDU.W. 
   {AVBFRAM2.I}
     
   musz = FALSE.
   {musarrow.i}
   IF Guru.Konstanter:globanvbyt = {LOSENKOLLFEL10.I} THEN DO:
      RUN avb_UI IN Guru.Konstanter:MultiStarth.
   END. 
END PROCEDURE.

PROCEDURE btnavb_UI :
   {OMSTARTAVGURUH.I}       
   RUN avb_UI IN huvprogh.
   {musarrow.i}
END PROCEDURE.

PROCEDURE btnvit_UI :
   DEFINE INPUT PARAMETER btnh AS HANDLE NO-UNDO.
   DEFINE VARIABLE btnlabel AS CHARACTER NO-UNDO.
   Guru.GlobalaVariabler:fonstercol = C-WIN:X.
   Guru.GlobalaVariabler:fonsterrow = C-WIN:Y .
   
   IF btnnovit NE ? THEN DO:
      btnlabel = btnnovit:IMAGE.
      btnlabel = REPLACE(btnlabel,"_vit.gif",".gif"). 
      btnlabel = REPLACE(btnlabel,"_vit.jpg",".jpg"). 
      btnnovit:LOAD-IMAGE (btnlabel) NO-ERROR.
   END.
   btnlabel = btnh:IMAGE.
   btnlabel = REPLACE(btnlabel,".gif","_vit.gif").
   btnlabel = REPLACE(btnlabel,".jpg","_vit.jpg"). 
   btnh:LOAD-IMAGE (btnlabel) NO-ERROR.
   btnnovit = btnh.  
   
END PROCEDURE.
