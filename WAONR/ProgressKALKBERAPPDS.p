
/*------------------------------------------------------------------------
    File        : KALKBERAPPDS.p
    Purpose     : 

    Syntax      :

    Description : 

    Author(s)   : elpao
    Created     : Thu Aug 30 08:30:08 CEST 2012
    Notes       :
  ----------------------------------------------------------------------*/
DEFINE TEMP-TABLE kalkhuvtt NO-UNDO  
   BEFORE-TABLE kalkhuvttbef
   FIELD KALKNR AS INTEGER
   FIELD OMRADE AS CHARACTER
   FIELD BENAMNING AS CHARACTER
   FIELD KLOGID AS INTEGER
   FIELD TYPKALK AS INTEGER 
   FIELD EGETMTRL AS LOGICAL
   FIELD EGNAPRISER AS LOGICAL
   FIELD FAKTORER AS LOGICAL
   FIELD TTRECID AS RECID
   FIELD ANMARKNING AS CHARACTER
   FIELD BESTID AS CHARACTER
   FIELD KALKANV AS CHARACTER
   FIELD ANVANDARE AS CHARACTER
   FIELD AKTIV AS LOGICAL INITIAL TRUE
   FIELD UTYP AS INTEGER INITIAL 1
   INDEX KALKNR KALKNR
   INDEX TYPKALK TYPKALK.
DEFINE TEMP-TABLE ekalkhuvtt NO-UNDO LIKE kalkhuvtt.
DEFINE  TEMP-TABLE kalknumtt NO-UNDO
   BEFORE-TABLE kalknumttbef
   FIELD KALKNR AS INTEGER
   FIELD OMRADE AS CHARACTER
   FIELD KLOGSUBID AS INTEGER
   FIELD ARBKOD AS CHARACTER
   FIELD LOPNR AS INTEGER    
   FIELD NUM AS INTEGER
   FIELD MATRIS AS INTEGER 
   FIELD BENAMNING AS CHARACTER
   FIELD ANTAL AS DECIMAL  LABEL "Antal"  DECIMALS 6  /*OBS MÅNGA DECIMALER*/
   FIELD ENHET AS CHARACTER
   FIELD KOMMENTAR AS CHARACTER
   FIELD ANMARKNING AS CHARACTER
   FIELD TTRECID AS RECID
   FIELD TYPKALK AS INTEGER 
   FIELD TOTKOST AS DECIMAL   DECIMALS 4 /*OBS MÅNGA DECIMALER*/  
   FIELD MARKNING AS CHARACTER
   FIELD MARKSUB AS CHARACTER
   FIELD RISK AS DECIMAL  DECIMALS 4
   FIELD VINST AS DECIMAL  DECIMALS 4
   FIELD FRITOTKOST AS DECIMAL DECIMALS 4
  
   FIELD SID AS INTEGER   
   FIELD BERNUM AS INTEGER
   INDEX SID SID ARBKOD LOPNR
   INDEX BERNUM BERNUM ARBKOD LOPNR
   
   INDEX KALKNR KALKNR 
   INDEX MATRIS KALKNR MATRIS
   INDEX KLOGSUBID KLOGSUBID
   INDEX ARBKOD IS PRIMARY ARBKOD LOPNR NUM
   INDEX NUM NUM.
   
   /*FIELD STTOTKOST  AS DECIMAL  /*styckkostnad lena*/  
   FIELD STFRITOTKOST  AS DECIMAL
   FIELD STPROJKOST  AS DECIMAL
   FIELD STFRIPROJKOST  AS DECIMAL
   FIELD STUTSMET  AS DECIMAL
   FIELD STFRIUTSMET  AS DECIMAL*/
   
   
   
DEFINE BUFFER kalknumttbuf FOR kalknumtt.   
DEFINE TEMP-TABLE ekalknumtt NO-UNDO LIKE kalknumtt.
   
DEFINE TEMP-TABLE kalknumsubtt NO-UNDO
   BEFORE-TABLE kalknumsubttbef
   FIELD KALKNR AS INTEGER
   FIELD OMRADE AS CHARACTER
   FIELD NUM AS INTEGER 
   FIELD NUMSUBID AS INTEGER  
   FIELD KPID AS INTEGER
   FIELD TIMMAR AS DECIMAL     DECIMALS 10
   FIELD KOSTNAD AS DECIMAL         DECIMALS 4                                
   FIELD BENAMNING AS CHARACTER
   FIELD PRIS AS DECIMAL      DECIMALS 10
   FIELD MARKNING AS CHARACTER
   FIELD MARKSUB AS CHARACTER
   FIELD FRITIMMAR AS DECIMAL   DECIMALS 10
   FIELD FRIKOSTNAD AS DECIMAL   DECIMALS 10
   FIELD FRIBENAMNING AS CHARACTER
   FIELD AVRUND AS DECIMAL     DECIMALS 10
   FIELD FRIAVRUND AS DECIMAL     DECIMALS 10
   FIELD FRIPRIS AS DECIMAL       DECIMALS 10
   FIELD TTRECID AS RECID
   FIELD EGENPRISUPP AS LOGICAL
   FIELD EGENKODUPP AS LOGICAL
   INDEX NUM NUM NUMSUBID
   INDEX BENAMNING IS PRIMARY BENAMNING.

DEFINE DATASET KalkylDS FOR kalkhuvtt,kalknumtt,kalknumsubtt
DATA-RELATION huvNumsDR FOR kalkhuvtt, kalknumtt RELATION-FIELDS (kalkhuvtt.KALKNR,kalknumtt.KALKNR,kalkhuvtt.OMRADE,kalknumtt.OMRADE)
DATA-RELATION numSubsDR FOR kalknumtt, kalknumsubtt RELATION-FIELDS (kalknumtt.KALKNR,kalknumsubtt.KALKNR,kalknumtt.OMRADE,kalknumsubtt.OMRADE,kalknumtt.NUM,kalknumsubtt.NUM).



FUNCTION detachDataSetKalkylDS RETURNS logic (INPUT phDataSet AS HANDLE):
  DEFINE VARIABLE iBuff AS INTEGER NO-UNDO.
  DO iBuff = 1 TO DATASET KalkylDS:NUM-BUFFERS:
    phDataSet:GET-BUFFER-HANDLE(iBuff):DETACH-DATA-SOURCE().
  END.

END FUNCTION. /* detachDataSet */

PROCEDURE SparaProDataSetKalkylDS:
   DEFINE INPUT PARAMETER DATASET FOR KalkylDS.
   DEFINE VARIABLE ChDataSet AS HANDLE NO-UNDO.
   DEFINE VARIABLE okreset AS LOGICAL NO-UNDO. 
   
   RUN attachKalkylDS.
   ChDataSet = DATASET KalkylDS:HANDLE.
   
   RUN SPARADATSET.p (INPUT ChDataSet).
   okreset = detachDataSetKalkylDS(ChDataSet).
   
END PROCEDURE.




PROCEDURE postDataSetFillKalkylDS :
   DEFINE INPUT PARAMETER DATASET FOR KalkylDS.
   DEFINE VARIABLE iBuff AS INTEGER NO-UNDO.
   DEFINE VARIABLE kommandosortquery AS CHARACTER NO-UNDO.
   DEFINE VARIABLE dynbuffh AS HANDLE NO-UNDO.
   DEFINE VARIABLE dynok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE dynqueh AS HANDLE NO-UNDO.
   DEFINE VARIABLE dynfalth AS HANDLE NO-UNDO.
   CREATE WIDGET-POOL "StaticDs" NO-ERROR.
   DO iBuff = 1 TO DATASET KalkylDS:NUM-BUFFERS:
      dynbuffh = DATASET KalkylDS:GET-BUFFER-HANDLE(iBuff).
      CREATE QUERY dynqueh IN WIDGET-POOL "StaticDs".
      dynqueh:SET-BUFFERS(dynbuffh).
      kommandosortquery = "FOR EACH " + dynbuffh:TABLE + ".".    
      dynok = dynqueh:QUERY-PREPARE(kommandosortquery).   
      dynok = dynqueh:QUERY-OPEN() NO-ERROR.
      REPEAT:
         dynqueh:GET-NEXT(NO-LOCK).
         IF dynqueh:QUERY-OFF-END THEN LEAVE.            
         dynfalth = dynbuffh:BUFFER-FIELD("TTRECID").
         dynfalth:BUFFER-VALUE = dynbuffh:RECID.                               
      END.     
   END.
   DELETE WIDGET-POOL "StaticDs" NO-ERROR.
   dynqueh:QUERY-CLOSE()  NO-ERROR. 
   DELETE OBJECT dynqueh NO-ERROR.
   dynqueh = ?.
   DELETE OBJECT dynbuffh NO-ERROR.
   dynbuffh = ?.
   
END PROCEDURE.

DEFINE QUERY KalkylQuery FOR KALKHUV.
DEFINE DATA-SOURCE KalkhuvSrc FOR QUERY KalkylQuery KALKHUV KEYS (KALKNR,OMRADE).   /*keys unika nycklar*/
DEFINE DATA-SOURCE NumSrc FOR KALKNUM KEYS (KALKNR,OMRADE,NUM).
DEFINE DATA-SOURCE NumSubSrc FOR KALKNUMSUB KEYS (KALKNR,OMRADE,NUM,NUMSUBID).


DEFINE VARIABLE hKalkylDataSet   AS HANDLE     NO-UNDO.         /*handl till dataset*/
hKalkylDataSet = DATASET KalkylDS:HANDLE.      /*koppla handel till dataset*/

hKalkylDataSet:SET-CALLBACK-PROCEDURE ("AFTER-FILL", "postDataSetFillKalkylDS", THIS-PROCEDURE). 


/*KalkylDS*/



PROCEDURE attachKalkylDS: /*kopplar ihop temptabell med skarptababell.      */
   hKalkylDataSet:GET-BUFFER-HANDLE("kalkhuvtt"):ATTACH-DATA-SOURCE(DATA-SOURCE KalkhuvSrc:HANDLE).
   hKalkylDataSet:GET-BUFFER-HANDLE("kalknumtt"):ATTACH-DATA-SOURCE(DATA-SOURCE NumSrc:HANDLE).
   hKalkylDataSet:GET-BUFFER-HANDLE("kalknumsubtt"):ATTACH-DATA-SOURCE(DATA-SOURCE NumsubSrc:HANDLE).

END PROCEDURE.
PROCEDURE LaddaKalkyl:
   DEFINE INPUT PARAMETER KalkNrvar AS INTEGER.
   DEFINE INPUT PARAMETER KalkOmr AS CHARACTER.  
   DEFINE OUTPUT PARAMETER DATASET FOR KalkylDS.
   DEFINE VARIABLE queryprep AS CHARACTER NO-UNDO.
   
   DATASET KalkylDS:EMPTY-DATASET().
   IF KalkNrvar NE ? THEN DO:
      queryprep = "FOR EACH KALKHUV WHERE KALKHUV.KALKNR = " + STRING(KalkNrvar) + 
      " AND KALKHUV.OMRADE = " + "'" + KalkOmr + "'" + "  NO-LOCK". 
      QUERY KalkylQuery:QUERY-PREPARE(queryprep).
   END.   
   RUN attachKalkylDS.
   IF KalkNrvar NE ? THEN DATASET KalkylDS:FILL().
   detachDataSetKalkylDS(hKalkylDataSet).
  
END PROCEDURE.

