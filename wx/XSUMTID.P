 /* AUREG.P AUTOMATREGISTRERING   */
DEFINE NEW SHARED VARIABLE aonrrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE aonrrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE printer LIKE SKRIVARDEF.UTSKRIFTSTYP NO-UNDO.
DEFINE NEW SHARED VARIABLE printer1 LIKE SKRIVARDEF.SKRIVARID NO-UNDO.
DEFINE NEW SHARED VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE globanv LIKE ANVANDARE.ANVANDARE NO-UNDO.
DEFINE NEW SHARED VARIABLE globlos LIKE ANVANDARE.AV-LOSEN NO-UNDO.
DEFINE NEW SHARED VARIABLE globforetag LIKE FORETAG.FORETAG NO-UNDO.
DEFINE NEW SHARED VARIABLE plusaonr LIKE TIDREGITAB.AONR NO-UNDO.
DEFINE NEW SHARED VARIABLE plusdnr LIKE TIDREGITAB.DELNR NO-UNDO.
DEFINE NEW SHARED VARIABLE plusrec AS RECID  NO-UNDO.
DEFINE NEW SHARED VARIABLE plustidrec AS RECID  NO-UNDO.
DEFINE NEW SHARED VARIABLE plustid AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE plusdval LIKE PROGVAL.JANEJ NO-UNDO.
DEFINE NEW SHARED VARIABLE succelval LIKE PROGVAL.JANEJ NO-UNDO.     
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE bdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE avdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE bilforare AS LOGICAL FORMAT "JA/NEJ" NO-UNDO.
DEFINE NEW SHARED VARIABLE enflerdygns AS LOGICAL FORMAT "ENDAGS/FLERDYGNS" NO-UNDO.
DEFINE NEW SHARED VARIABLE vart AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE NEW SHARED VARIABLE klocka LIKE TIDREGITAB.START NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE muszval AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE vartgamla AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten LIKE ARBETSTIDTAB.LUNCHSTART NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet LIKE ARBETSTIDTAB.LUNCHSLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.   
DEFINE NEW SHARED VARIABLE regstartsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE regslutsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE bustart3 LIKE TIDREGITAB.START NO-UNDO.
DEFINE VARIABLE justtid AS DECIMAL FORMAT "99.99" NO-UNDO.   
DEFINE TEMP-TABLE ekoforst
   FIELD PERSONALKOD LIKE EKRAPPRESULT.EPERSONALKOD 
   FIELD AONR LIKE EKRAPPRESULT.EPROJEKT 
   FIELD DELNR LIKE TIDREGITAB.DELNR
   FIELD ORG LIKE EKRAPPRESULT.EORG  
   FIELD PRIS LIKE TIDREGITAB.PRIS   
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP    
   FIELD BELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD ANTAL AS DECIMAL
   FIELD OTIMMAR AS DECIMAL             
 /*  FIELD LONTILLAGG LIKE EKRAPPRESULT.ELONTILLAGG 
   FIELD LONTILLANTAL LIKE EKRAPPRESULT.ELONTILLANTAL    */
   FIELD LONBELOPP LIKE EKRAPPRESULT.ELONBELOPP  
   FIELD OANT1 LIKE TIDREGITAB.OANT1 
   FIELD OANT2 LIKE TIDREGITAB.OANT2 
   FIELD OANT3 LIKE TIDREGITAB.OANT3 
   FIELD OKOD1 LIKE TIDREGITAB.OKOD1 
   FIELD OKOD2 LIKE TIDREGITAB.OKOD2 
   FIELD OKOD3 LIKE TIDREGITAB.OKOD3   
   FIELD TRAKTKOD LIKE TIDREGITAB.TRAKTKOD 
   FIELD TRAKTANTAL LIKE TIDREGITAB.TRAKTANTAL      
   FIELD TBELOPP LIKE EKRAPPRESULT.EBELOPP
   INDEX PERSAO IS PRIMARY PERSONALKOD AONR DELNR ASCENDING
   INDEX ORGAONR ORG AONR DELNR ASCENDING.
DEFINE TEMP-TABLE trakt
   FIELD TRAKTKOD LIKE TRAKTATAB.TRAKTKOD
   FIELD ERSATTNING LIKE TRAKTATAB.ERSATTNING
   INDEX TRAKT IS PRIMARY TRAKTKOD ASCENDING .
DEFINE TEMP-TABLE lon
   FIELD LONTILLAGG LIKE LONTILL.LONTILLAGG
   FIELD ERSATTNING LIKE LONTILL.ERSATTNING
   INDEX LONT IS PRIMARY LONTILLAGG ASCENDING.   
DEFINE TEMP-TABLE slutsum           
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL AS DECIMAL LABEL "TIMMAR"          
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR"
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "™-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "™-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"         
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.  
DEFINE TEMP-TABLE oversum   
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL LIKE EKRAPPRESULT.EANTAL                 
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP              
   FIELD OVERTIDTILL LIKE TIDREGITAB.OVERTIDTILL
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.     
DEFINE TEMP-TABLE traktsum   
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS     
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD AONR LIKE TIDREGITAB.AONR
   FIELD DELNR LIKE TIDREGITAB.DELNR 
   FIELD ANTAL LIKE EKRAPPRESULT.EANTAL                 
   FIELD BELOPP LIKE EKRAPPRESULT.EBELOPP              
   FIELD TRAKTKOD LIKE TIDREGITAB.TRAKTKOD
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.                                                      
    
DEFINE WORKFILE overtidhj 
   FIELD PERSONALKOD LIKE ekoforst.PERSONALKOD 
   FIELD PRIS LIKE TIDREGITAB.PRIS    
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP   
   FIELD AONR LIKE EKRAPPRESULT.EPROJEKT 
   FIELD DELNR LIKE TIDREGITAB.DELNR     
   FIELD BELOPP LIKE TIDREGITAB.PRIS
   FIELD OVERTIDTILL LIKE TIDREGITAB.OVERTIDTILL   
   FIELD OVERANTAL LIKE TIDREGITAB.OVERANTAL.      

DEFINE VARIABLE tidtim AS DECIMAL NO-UNDO. 
DEFINE VARIABLE otidtim AS DECIMAL NO-UNDO.
DEFINE VARIABLE tid100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim1 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE otidtim3 AS DECIMAL NO-UNDO.
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE arrhjsum2 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsum3 AS DECIMAL NO-UNDO.  

DEFINE VARIABLE regdatum2 AS DATE NO-UNDO.  
DEFINE VARIABLE regdatum3 AS DATE NO-UNDO.
DEFINE VARIABLE helg AS INTEGER NO-UNDO.  
DEFINE VARIABLE regdatumspar AS DATE NO-UNDO.
DEFINE VARIABLE regdagspar AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE VARIABLE nattpers LIKE TIDREGITAB.PERSONALKOD NO-UNDO.    
DEFINE VARIABLE nattpris LIKE TIDREGITAB.PRIS NO-UNDO.   
DEFINE VARIABLE nattaonr LIKE AONRTAB.AONR NO-UNDO.  
DEFINE VARIABLE nattdelnr LIKE AONRTAB.DELNR NO-UNDO.  
DEFINE VARIABLE nattaoomr LIKE AONRTAB.OMRADE NO-UNDO.  
DEFINE VARIABLE ovkod LIKE TIDREGITAB.OVERTIDTILL NO-UNDO. 
DEFINE VARIABLE ovantal LIKE TIDREGITAB.OVERANTAL NO-UNDO.
DEFINE VARIABLE ovbelopp LIKE EKRAPPRESULT.EOVERBELOPP NO-UNDO. 
DEFINE VARIABLE multi AS DECIMAL FORMAT "99.99" NO-UNDO.

DEFINE BUFFER tidbuff FOR TIDREGITAB.
{LDALIAS.I}
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.
IF FORETAG.PROGRAM = "PLUSD" THEN plusdval = TRUE.
			     ELSE plusdval = FALSE.
IF FORETAG.PROGRAM = "SUCCEL" THEN succelval = TRUE.
			      ELSE succelval = FALSE.

regdatum = DATE(01,01,YEAR(TODAY)).        
FOR EACH SUMTID WHERE SUMTID.DATUM = regdatum USE-INDEX AONR EXCLUSIVE-LOCK:
   DELETE SUMTID.   
END.             

regdatum = DATE(01,01,YEAR(TODAY)).                     
FOR EACH TIDREGITAB WHERE TIDREGITAB.DATUM >= regdatum AND 
TIDREGITAB.TIDLOG = TRUE NO-LOCK
BY TIDREGITAB.AONR BY TIDREGITAB.DELNR BY TIDREGITAB.PERSONALKOD:                       
   ASSIGN
   tidtim = 0
   otidtim = 0
   tid100 = 0
   otidtim1 = 0
   otidtim2 = 0
   otidtim3 = 0.                                
   IF globforetag = "NORD" THEN DO:
      IF nattpers NE TIDREGITAB.PERSONALKOD THEN DO:
         FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = TIDREGITAB.PERSONALKOD
         USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.
         nattpers = TIDREGITAB.PERSONALKOD.
         IF nattaonr NE TIDREGITAB.AONR AND nattdelnr NE TIDREGITAB.DELNR THEN DO:
            FIND FIRST AONRTAB WHERE 
            AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR 
            USE-INDEX AONR NO-LOCK NO-ERROR.
            ASSIGN 
            nattaoomr = AONRTAB.OMRADE
            nattaonr = TIDREGITAB.AONR 
            nattdelnr = TIDREGITAB.DELNR.
         END.    
         IF nattaoomr NE "" THEN DO:                        
            IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:
               FIND FIRST TIMKOSTNADSTAB WHERE 
               TIMKOSTNADSTAB.PERSONALKOD = nattpers AND 
               TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" USE-INDEX PRISPERS NO-LOCK NO-ERROR.
               nattpris = TIMKOSTNADSTAB.PRISA.
            END.
            ELSE DO:
               nattpris = TIDREGITAB.PRIS.
            END.     
         END. 
         ELSE DO:
            nattpris = TIDREGITAB.PRIS.
         END.           
      END.
      ELSE DO:  
         IF nattaonr NE TIDREGITAB.AONR AND nattdelnr NE TIDREGITAB.DELNR THEN DO:
            FIND FIRST AONRTAB WHERE 
            AONRTAB.AONR = TIDREGITAB.AONR AND AONRTAB.DELNR = TIDREGITAB.DELNR 
            USE-INDEX AONR NO-LOCK NO-ERROR.
            ASSIGN   
            nattaoomr = AONRTAB.OMRADE
            nattaonr = TIDREGITAB.AONR 
            nattdelnr = TIDREGITAB.DELNR.
         END.    
         IF nattaoomr NE "" THEN DO:                        
            IF PERSONALTAB.OMRADE NE AONRTAB.OMRADE THEN DO:
               FIND FIRST TIMKOSTNADSTAB WHERE 
               TIMKOSTNADSTAB.PERSONALKOD = nattpers AND 
               TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" USE-INDEX PRISPERS NO-LOCK NO-ERROR.
               nattpris = TIMKOSTNADSTAB.PRISA.
            END.
            ELSE DO:
               nattpris = TIDREGITAB.PRIS.
            END.     
         END. 
         ELSE DO:
            nattpris = TIDREGITAB.PRIS.
         END.   
      END.    
   END.
   ELSE DO: 
      nattpris = TIDREGITAB.PRIS.
   END.
   IF TIDREGITAB.OKOD1 = " " AND TIDREGITAB.OKOD2 = " " AND TIDREGITAB.OKOD3 = " " THEN DO:   
      tidtim = DECIMAL(SUBSTRING(STRING(TIDREGITAB.TOTALT,"99.99"),1,2)).
      tid100 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.TOTALT,"99.99"),4,2)) / 60.
      tidtim = tidtim + tid100.     
   END.
   ELSE DO:
      otidtim = DECIMAL(SUBSTRING(STRING(TIDREGITAB.TOTALT,"99.99"),1,2)).
      tid100 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.TOTALT,"99.99"),4,2)) / 60.
      otidtim = otidtim + tid100.     
   END.   
   otidtim1 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT1,"99.99"),1,2)).
   tid100 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT1,"99.99"),4,2)) / 60.
   otidtim1 = otidtim1 + tid100.    
  
   otidtim2 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT2,"99.99"),1,2)).
   tid100 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT2,"99.99"),4,2)) / 60.
   otidtim2 = otidtim2 + tid100.    
  
   otidtim3 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT3,"99.99"),1,2)).
   tid100 = DECIMAL(SUBSTRING(STRING(TIDREGITAB.OANT3,"99.99"),4,2)) / 60.
   otidtim3 = otidtim3 + tid100.    
  
   CREATE ekoforst.
   ASSIGN
   ekoforst.PERSONALKOD = TIDREGITAB.PERSONALKOD 
   ekoforst.AONR = TIDREGITAB.AONR
   ekoforst.DELNR = TIDREGITAB.DELNR                  
   ekoforst.PRIS = TIDREGITAB.PRIS           
   ekoforst.PRISTYP = TIDREGITAB.PRISTYP  
   ekoforst.BELOPP = nattpris
   ekoforst.OBELOPP = nattpris 
   ekoforst.ANTAL = tidtim  
   ekoforst.OTIMMAR = otidtim      
   ekoforst.OANT1 = otidtim1    
   ekoforst.OANT2 = otidtim2    
   ekoforst.OANT3 = otidtim3    
   ekoforst.OKOD1 = TIDREGITAB.OKOD1 
   ekoforst.OKOD2 = TIDREGITAB.OKOD2 
   ekoforst.OKOD3 = TIDREGITAB.OKOD3                       
 /*ekoforst.LONTILLAGG = TIDREGITAB.LONTILLAGG 
   ekoforst.LONTILLANTAL = TIDREGITAB.LONTILLANTAL         */
   ekoforst.TRAKTKOD = TIDREGITAB.TRAKTKOD 
   ekoforst.TRAKTANTAL = TIDREGITAB.TRAKTANTAL.
   IF TIDREGITAB.OKOD1 NE " " THEN ASSIGN ekoforst.BELOPP = 0.
   IF TIDREGITAB.OKOD2 NE " " THEN ASSIGN ekoforst.BELOPP = 0.
   IF TIDREGITAB.OKOD3 NE " " THEN ASSIGN ekoforst.BELOPP = 0.
   ASSIGN ekoforst.BELOPP = ekoforst.ANTAL * ekoforst.BELOPP.   
END.           
ASSIGN    
arrhjsum = 0
arrhjsum2 = 0.    
FOR EACH ekoforst BREAK BY ekoforst.PERSONALKOD BY ekoforst.AONR BY 
ekoforst.DELNR BY ekoforst.PRISTYP:
   IF ekoforst.OANT1 > 0  THEN DO:      
      CREATE overtidhj.
      ASSIGN                          
      overtidhj.PERSONALKOD = ekoforst.PERSONALKOD 
      overtidhj.PRIS = ekoforst.PRIS     
      overtidhj.PRISTYP = ekoforst.PRISTYP 
      overtidhj.AONR = ekoforst.AONR 
      overtidhj.DELNR = ekoforst.DELNR 
      overtidhj.BELOPP = ekoforst.OBELOPP * ekoforst.OANT1 
      overtidhj.OVERANTAL = ekoforst.OANT1 
      overtidhj.OVERTIDTILL = ekoforst.OKOD1. 
      /*MULTI
      ovbelopp = (TIDREGITAB.PRIS + (TIDREGITAB.PRIS * multi)) * ovantal.*/           
      IF globforetag = "NORD" THEN DO:
         ASSIGN
         ovkod = ekoforst.OKOD1
         ovantal = ekoforst.OANT1.         
         RUN over_UI.  
         overtidhj.BELOPP = ovbelopp.                          
      END.
   END. 
   IF ekoforst.OANT2 > 0  THEN DO:      
      CREATE overtidhj.      
      ASSIGN
      overtidhj.PERSONALKOD = ekoforst.PERSONALKOD 
      overtidhj.PRIS = ekoforst.PRIS     
      overtidhj.PRISTYP = ekoforst.PRISTYP 
      overtidhj.AONR = ekoforst.AONR 
      overtidhj.DELNR = ekoforst.DELNR 
      overtidhj.BELOPP = ekoforst.OBELOPP * ekoforst.OANT2   
      overtidhj.OVERANTAL = ekoforst.OANT2
      overtidhj.OVERTIDTILL = ekoforst.OKOD2.
      IF globforetag = "NORD" THEN DO:
         ASSIGN
         ovkod = ekoforst.OKOD2
         ovantal = ekoforst.OANT2.         
         RUN over_UI.  
         overtidhj.BELOPP = ovbelopp.                          
      END.                      
   END.                    
   IF ekoforst.OANT3 > 0  THEN DO:      
      CREATE overtidhj.           
      ASSIGN               
      overtidhj.PERSONALKOD = ekoforst.PERSONALKOD 
      overtidhj.PRIS = ekoforst.PRIS     
      overtidhj.PRISTYP = ekoforst.PRISTYP 
      overtidhj.AONR = ekoforst.AONR 
      overtidhj.DELNR = ekoforst.DELNR 
      overtidhj.BELOPP = ekoforst.OBELOPP * ekoforst.OANT3
      overtidhj.OVERANTAL = ekoforst.OANT3
      overtidhj.OVERTIDTILL = ekoforst.OKOD3. 
      IF globforetag = "NORD" THEN DO:
         ASSIGN
         ovkod = ekoforst.OKOD3
         ovantal = ekoforst.OANT3.         
         RUN over_UI.  
         overtidhj.BELOPP = ovbelopp.                          
      END.                          
   END.                                                             
   ACCUMULATE ekoforst.BELOPP 
   (TOTAL BY ekoforst.PERSONALKOD BY ekoforst.AONR BY ekoforst.DELNR BY ekoforst.PRISTYP). 
   ACCUMULATE ekoforst.ANTAL 
   (TOTAL BY ekoforst.PERSONALKOD BY ekoforst.AONR BY ekoforst.DELNR BY ekoforst.PRISTYP).  
   ACCUMULATE ekoforst.OTIMMAR 
   (TOTAL BY ekoforst.PERSONALKOD BY ekoforst.AONR BY ekoforst.DELNR BY ekoforst.PRISTYP).     
   IF LAST-OF(ekoforst.PRISTYP) THEN DO:
      CREATE slutsum.
      ASSIGN 
      slutsum.PERSONALKOD = ekoforst.PERSONALKOD 
      slutsum.PRIS = ekoforst.PRIS     
      slutsum.PRISTYP = ekoforst.PRISTYP 
      slutsum.AONR = ekoforst.AONR
      slutsum.DELNR = ekoforst.DELNR         
      slutsum.BELOPP = (ACCUM TOTAL ekoforst.BELOPP) - arrhjsum                       
      slutsum.ANTAL = (ACCUM TOTAL ekoforst.ANTAL) - arrhjsum2  
      slutsum.OTIMMAR = (ACCUM TOTAL ekoforst.OTIMMAR) - arrhjsum3.  
      arrhjsum = ACCUM TOTAL ekoforst.BELOPP.  
      arrhjsum2 = ACCUM TOTAL ekoforst.ANTAL.  
      arrhjsum3 = ACCUM TOTAL ekoforst.OTIMMAR.        
   END. 
END.                           
ASSIGN
arrhjsum = 0
arrhjsum2 = 0 
arrhjsum3 = 0.   
FOR EACH overtidhj BREAK 
BY overtidhj.PERSONALKOD BY overtidhj.AONR BY overtidhj.DELNR BY overtidhj.OVERTIDTILL:
   ACCUMULATE overtidhj.BELOPP 
   (TOTAL BY overtidhj.PERSONALKOD BY overtidhj.AONR BY overtidhj.DELNR BY overtidhj.OVERTIDTILL). 
   ACCUMULATE overtidhj.OVERANTAL 
   (TOTAL BY overtidhj.PERSONALKOD BY overtidhj.AONR BY overtidhj.DELNR BY overtidhj.OVERTIDTILL).
   IF LAST-OF(overtidhj.OVERTIDTILL) THEN DO:
      CREATE oversum.
      ASSIGN         
      oversum.PERSONALKOD = overtidhj.PERSONALKOD 
      oversum.PRIS = overtidhj.PRIS     
      oversum.PRISTYP = overtidhj.PRISTYP 
      oversum.AONR = overtidhj.AONR
      oversum.DELNR = overtidhj.DELNR 
      oversum.OVERTIDTILL = overtidhj.OVERTIDTILL
      oversum.BELOPP = (ACCUM TOTAL overtidhj.BELOPP) - arrhjsum 
      oversum.ANTAL = (ACCUM TOTAL overtidhj.OVERANTAL) - arrhjsum2.                          
      arrhjsum = ACCUM TOTAL overtidhj.BELOPP.
      arrhjsum2 = ACCUM TOTAL overtidhj.OVERANTAL.                                          
   END.   
END.         
ASSIGN        
arrhjsum = 0
arrhjsum2 = 0.    
FOR EACH oversum BREAK BY oversum.PERSONALKOD BY oversum.AONR BY oversum.DELNR:
   FIND FIRST OVERKOD WHERE OVERKOD.OVERTIDTILL = oversum.OVERTIDTILL 
   USE-INDEX OVER NO-LOCK NO-ERROR.
   IF AVAILABLE OVERKOD THEN DO:
      ASSIGN oversum.BELOPP = (1 + OVERKOD.ERSATTNING) * oversum.BELOPP.
   END.                                                              
   ACCUMULATE oversum.BELOPP (TOTAL BY oversum.PERSONALKOD BY oversum.AONR BY oversum.DELNR). 
   ACCUMULATE oversum.ANTAL (TOTAL BY oversum.PERSONALKOD BY oversum.AONR BY oversum.DELNR).
   IF LAST-OF(oversum.DELNR) THEN DO:
      FIND FIRST slutsum WHERE slutsum.PERSONALKOD = oversum.PERSONALKOD AND
      slutsum.AONR = oversum.AONR AND slutsum.DELNR = oversum.DELNR 
      USE-INDEX AONR NO-ERROR.
      IF AVAILABLE slutsum THEN DO:
         ASSIGN slutsum.OBELOPP = (ACCUM TOTAL oversum.BELOPP) - arrhjsum
         slutsum.OANTAL = (ACCUM TOTAL oversum.ANTAL) - arrhjsum2.     
         arrhjsum = ACCUM TOTAL oversum.BELOPP.    
         arrhjsum2 = ACCUM TOTAL oversum.ANTAL.                                
      END.
   END.  
END.        
ASSIGN         
arrhjsum = 0
arrhjsum2 = 0.    
FOR EACH ekoforst BREAK BY ekoforst.PERSONALKOD BY ekoforst.AONR BY ekoforst.DELNR BY ekoforst.TRAKTKOD:
   ACCUMULATE ekoforst.TRAKTANTAL 
   (TOTAL BY ekoforst.PERSONALKOD BY ekoforst.AONR BY ekoforst.DELNR BY ekoforst.TRAKTKOD).
   IF LAST-OF(ekoforst.DELNR) THEN DO:
      CREATE traktsum.                    
      ASSIGN 
      traktsum.PERSONALKOD = ekoforst.PERSONALKOD 
      traktsum.PRIS = ekoforst.PRIS     
      traktsum.PRISTYP = ekoforst.PRISTYP 
      traktsum.AONR = ekoforst.AONR
      traktsum.DELNR = ekoforst.DELNR 
      traktsum.TRAKTKOD = ekoforst.TRAKTKOD
      traktsum.ANTAL = (ACCUM TOTAL ekoforst.TRAKTANTAL) - arrhjsum.      
      arrhjsum = ACCUM TOTAL ekoforst.TRAKTANTAL.                                                             
   END.   
END.        
ASSIGN         
arrhjsum = 0
arrhjsum2 = 0. 
FOR EACH traktsum BREAK BY traktsum.PERSONALKOD BY traktsum.AONR BY traktsum.DELNR:
   FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAKTKOD = traktsum.TRAKTKOD USE-INDEX TRAKT NO-LOCK NO-ERROR.
   IF AVAILABLE TRAKTATAB THEN DO:
      ASSIGN traktsum.BELOPP = TRAKTATAB.ERSATTNING * traktsum.ANTAL.
   END.
   ACCUMULATE traktsum.BELOPP (TOTAL BY traktsum.PERSONALKOD BY traktsum.AONR BY traktsum.DELNR).
   ACCUMULATE traktsum.ANTAL (TOTAL BY traktsum.PERSONALKOD BY traktsum.AONR BY traktsum.DELNR).
   IF LAST-OF(traktsum.DELNR) THEN DO:
      FIND FIRST slutsum WHERE slutsum.PERSONALKOD = traktsum.PERSONALKOD AND
      slutsum.AONR = traktsum.AONR AND slutsum.DELNR = traktsum.DELNR 
      USE-INDEX AONR NO-ERROR.
      IF AVAILABLE slutsum THEN DO:
         ASSIGN slutsum.TBELOPP = (ACCUM TOTAL traktsum.BELOPP) - arrhjsum
         slutsum.TANTAL = (ACCUM TOTAL traktsum.ANTAL) - arrhjsum2.      
         arrhjsum = ACCUM TOTAL traktsum.BELOPP.       
         arrhjsum2 = ACCUM TOTAL traktsum.ANTAL.                                 
      END.
   END.   
END.                 
FOR EACH slutsum:     
   CREATE SUMTID.
   ASSIGN                              
   SUMTID.PERSONALKOD = slutsum.PERSONALKOD 
   SUMTID.PRIS = slutsum.PRIS     
   SUMTID.DATUM = regdatum 
   SUMTID.AUTODATUM = TODAY
   SUMTID.AONR = slutsum.AONR   
   SUMTID.DELNR = slutsum.DELNR
   SUMTID.PRISTYP = slutsum.PRISTYP 
   SUMTID.TIMMAR = slutsum.ANTAL 
   SUMTID.OTIMMAR = slutsum.OTIMMAR  
   SUMTID.BELOPP = slutsum.BELOPP
   SUMTID.OBELOPP = slutsum.OBELOPP
   SUMTID.TBELOPP = slutsum.TBELOPP.     
END.  
FOR EACH PERSONALTAB USE-INDEX PERSONALKOD NO-LOCK:                                                
   IF globforetag = "NORD" THEN DO:
      FIND FIRST TIMKOSTNADSTAB WHERE 
      TIMKOSTNADSTAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
      TIMKOSTNADSTAB.PRISTYP = "INTERNPRI" USE-INDEX PRISPERS NO-LOCK NO-ERROR.
   END.   
   DO TRANSACTION:
      FIND FIRST SUMTID WHERE SUMTID.DATUM = regdatum AND 
      SUMTID.PERSONALKOD = PERSONALTAB.PERSONALKOD 
      USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE SUMTID THEN NEXT.
      ELSE DO :
         ASSIGN 
         SUMTID.FORNAMN = PERSONALTAB.FORNAMN 
         SUMTID.EFTERNAMN = PERSONALTAB.EFTERNAMN
         SUMTID.OMRADE = PERSONALTAB.OMRADE
         SUMTID.BEFATTNING = PERSONALTAB.BEFATTNING 
         SUMTID.PERSMASK = PERSONALTAB.PERSMASK.  
         IF AVAILABLE TIMKOSTNADSTAB THEN DO:
            ASSIGN SUMTID.PRISI = TIMKOSTNADSTAB.PRISA.
         END.                     
         ELSE DO: 
            ASSIGN SUMTID.PRISI =  SUMTID.PRIS.
         END.
      END.
   END.    
   REPEAT TRANSACTION:
      FIND NEXT SUMTID WHERE SUMTID.DATUM = regdatum AND 
      SUMTID.PERSONALKOD = PERSONALTAB.PERSONALKOD 
      USE-INDEX PERSONALKOD EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE SUMTID THEN LEAVE.
      ELSE DO :
         ASSIGN 
         SUMTID.FORNAMN = PERSONALTAB.FORNAMN 
         SUMTID.EFTERNAMN = PERSONALTAB.EFTERNAMN
         SUMTID.OMRADE = PERSONALTAB.OMRADE
         SUMTID.BEFATTNING = PERSONALTAB.BEFATTNING 
         SUMTID.PERSMASK = PERSONALTAB.PERSMASK.
         IF AVAILABLE TIMKOSTNADSTAB THEN DO:
            ASSIGN SUMTID.PRISI = TIMKOSTNADSTAB.PRISA.
         END.                     
         ELSE DO: 
            ASSIGN SUMTID.PRISI =  SUMTID.PRIS.
         END.
      END.
   END.       
END.       
FOR EACH AONRTAB USE-INDEX AONR NO-LOCK:                                                
   DO TRANSACTION:
      FIND FIRST SUMTID WHERE SUMTID.DATUM = regdatum AND 
      SUMTID.AONR = AONRTAB.AONR AND
      SUMTID.DELNR = AONRTAB.DELNR
      USE-INDEX AONR EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE SUMTID THEN NEXT.
      ELSE DO :
         ASSIGN 
         SUMTID.FASTAAONR = AONRTAB.FASTAAONR          
         SUMTID.GEOMRADE = AONRTAB.OMRADE 
         SUMTID.ORT = AONRTAB.ORT.
         IF AONRTAB.OMRADE = "" THEN ASSIGN SUMTID.OMRADE = SUMTID.OMRADE.
      END.
   END.    
   REPEAT TRANSACTION:
      FIND NEXT SUMTID WHERE SUMTID.DATUM = regdatum AND 
      SUMTID.AONR = AONRTAB.AONR AND
      SUMTID.DELNR = AONRTAB.DELNR
      USE-INDEX AONR EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE SUMTID THEN LEAVE.
      ELSE DO :
         ASSIGN           
         SUMTID.FASTAAONR = AONRTAB.FASTAAONR         
         SUMTID.GEOMRADE = AONRTAB.OMRADE 
         SUMTID.ORT = AONRTAB.ORT.
         IF AONRTAB.OMRADE = "" THEN ASSIGN SUMTID.OMRADE = SUMTID.OMRADE.
      END.
   END.       
END.      
 
   
/* **********************  Internal Procedures  *********************** */


PROCEDURE nastatid_UI :
   FIND PREV TIDREGITAB WHERE
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIDREGITAB.DATUM < regdatum3 AND TIDREGITAB.TIDLOG = TRUE AND
   TIDREGITAB.OKOD1 = "" AND TIDREGITAB.PRISTYP NE "RESTID..." 
   /*TIDREGITAB.START GE regstart AND TIDREGITAB.SLUT LE regslut */
   USE-INDEX PSTART NO-LOCK NO-ERROR.
END PROCEDURE.
PROCEDURE over_UI:
   multi = 0.
   IF ovkod = "370" THEN multi = 0.       /*DESSA KODER FINNS I N2.P*/
   ELSE IF ovkod = "371" THEN multi = 0.5.
   ELSE IF ovkod = "372" THEN multi = 1.0.  
   ELSE IF ovkod = "375" THEN multi = 0.  
   ELSE IF ovkod = "376" THEN multi = 0.5.  
   ELSE IF ovkod = "377" THEN multi = 1.0.          
   ELSE IF ovkod = "380" THEN multi = 0.   
   ELSE IF ovkod = "334" THEN multi = 0.  
   ELSE IF ovkod = "381" THEN multi = 0.457.                    /*137/94*/
   ELSE IF ovkod = "382" THEN multi = 0.903.                    /*137/72*/
   ELSE IF ovkod = "385" THEN multi = 1.0. 
   ELSE IF ovkod = "386" THEN multi = 0.457.                    /*137/94*/
   ELSE IF ovkod = "387" THEN multi = 0.903.                    /*137/72*/
   ELSE IF ovkod = "320" THEN multi = 0.
   ELSE IF ovkod = "321" THEN multi = 0.5.
   ELSE IF ovkod = "322" THEN multi = 0.75.  
   ELSE IF ovkod = "323" THEN multi = 1.0.  
   ELSE IF ovkod = "324" THEN multi = 1.5.   
   ELSE IF ovkod = "325" THEN multi = 0.
   ELSE IF ovkod = "326" THEN multi = 0.5.
   ELSE IF ovkod = "327" THEN multi = 0.75.  
   ELSE IF ovkod = "328" THEN multi = 1.0.  
   ELSE IF ovkod = "329" THEN multi = 1.5.      
   ELSE IF ovkod = "330" THEN multi = 0.5. 
   ELSE IF ovkod = "331" THEN multi = 0.75. 
   ELSE IF ovkod = "332" THEN multi = 1.0. 
   ELSE IF ovkod = "333" THEN multi = 1.5. 
   ELSE IF ovkod = "335" THEN multi = 0.5. 
   ELSE IF ovkod = "336" THEN multi = 0.75. 
   ELSE IF ovkod = "337" THEN multi = 1.0. 
   ELSE IF ovkod = "338" THEN multi = 1.5.    
   ELSE IF ovkod = "435" THEN multi = 0.5.   
   ELSE IF ovkod = "436" THEN multi = 0.75.   
   ELSE IF ovkod = "437" THEN multi = 1.0.   
   ELSE IF ovkod = "438" THEN multi = 1.5.                    
   ELSE IF ovkod = "450" THEN multi = 0.254.                     /*137/540*/
   ELSE IF ovkod = "451" THEN multi = 0.457.                     /*137/300*/
   ELSE IF ovkod = "452" THEN multi = 0.913.                     /*137/150*/
   ELSE RETURN.      
   ovbelopp = (nattpris + (nattpris * multi)) * ovantal. 
END.