/*RAPPAPP.P*/
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}

{ANMARKD.I}
DEFINE VARIABLE RAD_FAST AS LOGICAL NO-UNDO.
DEFINE VARIABLE SEL_LIST AS CHARACTER NO-UNDO.
DEFINE VARIABLE SEL_OMR AS CHARACTER NO-UNDO.
DEFINE VARIABLE TOG_AVS AS LOGICAL NO-UNDO.
DEFINE VARIABLE TOG_BEN AS LOGICAL NO-UNDO.
DEFINE VARIABLE TOG_EJAV AS LOGICAL NO-UNDO.
DEFINE VARIABLE TOG_KONTO AS LOGICAL NO-UNDO.
DEFINE VARIABLE listnr AS INTEGER NO-UNDO.
DEFINE VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE VARIABLE aonrrec AS RECID NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.         
DEFINE VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE VARIABLE regdatum AS DATE NO-UNDO.
DEFINE VARIABLE bdatum AS DATE NO-UNDO.
DEFINE VARIABLE avdatum AS DATE NO-UNDO.
DEFINE VARIABLE FILL-IN-PRISTYP AS CHARACTER FORMAT "X(9)":U INITIAL ? NO-UNDO.
DEFINE VARIABLE FILL-IN_ANLNR AS CHARACTER FORMAT "x(15)". 
DEFINE VARIABLE FILL-IN_ARBANSVARIG AS CHARACTER FORMAT "x(5)". 
DEFINE VARIABLE FILL-IN_ARBARTKOD AS INTEGER FORMAT ">>" INITIAL 0 .    
DEFINE VARIABLE FILL-IN_BEREDARE AS CHARACTER FORMAT "x(5)" .     
DEFINE VARIABLE FILL-IN_OMRADE AS CHARACTER FORMAT "x(6)" .     
DEFINE VARIABLE FILL-IN_PKOD AS INTEGER FORMAT ">>" INITIAL 0 .     
DEFINE VARIABLE FILL-IN_SLUTVNR AS INTEGER FORMAT ">>>" INITIAL 0 .   
DEFINE VARIABLE FILL-IN_STARTVNR AS INTEGER FORMAT ">>>" INITIAL 0 .
DEFINE VARIABLE TOG_ANL AS LOGICAL INITIAL no 
     LABEL "ALLA ANLÄGGNINGAR" 
     VIEW-AS TOGGLE-BOX
     SIZE 23 BY 1 NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(80)" NO-UNDO.
DEFINE VARIABLE varomr LIKE OMRADETAB.OMRADE NO-UNDO.
{TIDUTTT.I}
DEFINE TEMP-TABLE tidut2
   FIELD UT AS CHARACTER FORMAT "X(79)"
   FIELD UDATUM AS DATE
   FIELD KDATUM AS DATE
   FIELD ARBARTKOD AS INTEGER
   FIELD BEN AS CHARACTER
   FIELD ORT AS CHARACTER FORMAT "X(30)"  . 
DEFINE TEMP-TABLE listtemp
   FIELD SORTERING AS INTEGER 
   FIELD Alistnr AS INTEGER 
   FIELD Askrivut AS LOGICAL 
   FIELD Aaonrrec AS RECID 
   FIELD Amusz AS LOGICAL          
   FIELD Aregvnr AS INTEGER FORMAT "999" 
   FIELD Aregdagnamn AS CHARACTER FORMAT "X(3)"         
   FIELD Aregdatum AS DATE 
   FIELD Abdatum AS DATE 
   FIELD Aavdatum AS DATE 
   FIELD APRISTYP AS CHARACTER FORMAT "X(9)" 
   FIELD AANLNR AS CHARACTER FORMAT "x(15)"
   FIELD AARBANSVARIG AS CHARACTER FORMAT "x(5)"
   FIELD AARBARTKOD AS INTEGER FORMAT ">>"     
   FIELD ABEREDARE AS CHARACTER FORMAT "x(5)"     
   FIELD AOMRADE AS CHARACTER FORMAT "x(6)"      
   FIELD APKOD AS INTEGER FORMAT ">>"      
   FIELD ASLUTVNR AS INTEGER FORMAT ">>>"    
   FIELD ASTARTVNR AS INTEGER FORMAT ">>>" 
   FIELD AANL AS LOGICAL   
   FIELD ARAD_FAST AS LOGICAL
   FIELD ASEL_LIST AS CHARACTER  
   FIELD ASEL_OMR AS CHARACTER 
   FIELD ATOG_AVS AS LOGICAL 
   FIELD ATOG_BEN AS LOGICAL 
   FIELD ATOG_EJAV AS LOGICAL 
   FIELD ATOG_KONTO AS LOGICAL.


FIND FIRST FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
&Scoped-define NEW 
&Scoped-define SHARED  
{BESTKUNDALLT.I}
DEFINE INPUT PARAMETER TABLE FOR listtemp. 
DEFINE OUTPUT PARAMETER TABLE FOR tidut.

FIND FIRST listtemp NO-ERROR.
ASSIGN
listnr = listtemp.Alistnr  
skrivut = listtemp.Askrivut  
aonrrec = listtemp.Aaonrrec 
musz = listtemp.Amusz           
regvnr = listtemp.Aregvnr  
regdagnamn = listtemp.Aregdagnamn         
regdatum = listtemp.Aregdatum  
bdatum = listtemp.Abdatum  
avdatum = listtemp.Aavdatum  
FILL-IN-PRISTYP = listtemp.APRISTYP  
FILL-IN_ANLNR = listtemp.AANLNR 
FILL-IN_ARBANSVARIG = listtemp.AARBANSVARIG 
FILL-IN_ARBARTKOD = listtemp.AARBARTKOD      
FILL-IN_BEREDARE = listtemp.ABEREDARE      
FILL-IN_OMRADE = listtemp.AOMRADE       
FILL-IN_PKOD = listtemp.APKOD       
FILL-IN_SLUTVNR = listtemp.ASLUTVNR     
FILL-IN_STARTVNR = listtemp.ASTARTVNR 
TOG_ANL = listtemp.AANL
RAD_FAST = listtemp.ARAD_FAST 
SEL_LIST = listtemp.ASEL_LIST 
SEL_OMR = listtemp.ASEL_OMR 
TOG_AVS = listtemp.ATOG_AVS 
TOG_BEN = listtemp.ATOG_BEN 
TOG_EJAV = listtemp.ATOG_EJAV 
TOG_KONTO = listtemp.ATOG_KONTO.

IF listnr = 1 THEN RUN viaorg_UI.
ELSE IF listnr = 2 THEN RUN videborg_UI.
ELSE IF listnr = 3 THEN RUN viarborg_UI.
ELSE IF listnr = 4 THEN RUN vipriorg_UI.
ELSE IF listnr = 5 THEN RUN vivnrorg_UI.
ELSE IF listnr = 6 THEN RUN vibesorg_UI.
ELSE IF listnr = 7 THEN RUN viberorg_UI.
ELSE IF listnr = 8 THEN RUN vianvorg_UI.
ELSE IF listnr = 9 THEN RUN viskeorg_UI.   
ELSE IF listnr = 10 THEN RUN vianlorg_UI.
ELSE IF listnr = 12 THEN RUN viavrop_UI.
ELSE IF listnr = 13 THEN RUN viaorg_UI.
ELSE IF listnr = 14 THEN RUN vibuorg_UI.
ELSE IF listnr = 15 THEN RUN viprojorg_UI.
ELSE IF listnr = 16 THEN RUN viaorg_UI.
ELSE IF listnr = 17 THEN RUN viaorg_UI.
ELSE IF listnr = 19 THEN RUN viaorg_UI.

/* **********************  Internal Procedures  *********************** */

PROCEDURE anmarkning.
   /*ANMARK2.I*/    
   DEFINE INPUT PARAMETER gforetag AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER retvar AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER edtext AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER ednum AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER edtecken AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER ednum2 AS INTEGER NO-UNDO.
   /*DEFINE INPUT-OUTPUT PARAMETER tidtext AS CHARACTER NO-UNDO.*/
   DEFINE INPUT-OUTPUT PARAMETER ednum3 AS INTEGER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut2.
   ASSIGN Guru.Konstanter:globforetag = gforetag.
   FIND LAST tidut NO-LOCK NO-ERROR.
   IF retvar = 0 THEN DO:                 
      IF SUBSTRING(edtext,edtecken,1) = " " THEN DO:  
         tidtext = SUBSTRING(edtext,ednum,edtecken).
         ednum = ednum + edtecken.
      END.
      ELSE DO:                  
         ednum2 = 1. 
         retvar = INDEX(edtext," ",ednum2).
         IF retvar > edtecken THEN DO:
            tidtext = SUBSTRING(edtext,ednum,edtecken).
            ednum = ednum + edtecken.
         END.
         ELSE IF retvar = 0 THEN DO:
            tidtext = SUBSTRING(edtext,ednum,edtecken).
            ednum = ednum + edtecken.
         END.
         ELSE DO:     
            DO WHILE ednum2 < edtecken:
               IF ednum2 > 0 THEN DO:
                  retvar = INDEX(edtext," ",ednum2).
                  ednum2 = INDEX(edtext," ",retvar + 1).                   
               END.
               ELSE LEAVE.   
            END.             
            tidtext = SUBSTRING(edtext,ednum,retvar).
            ednum = ednum + retvar.
         END.   
      END.
     RUN anmark (INPUT 2,INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT TABLE tidut2).
      DO WHILE ednum < ednum3:
         IF SUBSTRING(edtext,ednum + edtecken,1) = " " THEN DO:
            tidtext = SUBSTRING(edtext,ednum,edtecken).
            ednum = ednum + edtecken + 1.
         END.
         ELSE DO:           
            ednum2 = ednum.
            retvar = INDEX(edtext," ",ednum2).
            IF retvar > edtecken + ednum THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE IF retvar = 0 THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE DO:               
               DO WHILE ednum2 < edtecken + ednum:
                  IF ednum2 > 0 THEN DO:
                     retvar = INDEX(edtext," ",ednum2).
                     ednum2 = INDEX(edtext," ",retvar + 1).                   
                  END.
                  ELSE LEAVE.   
               END. 
               tidtext = SUBSTRING(edtext,ednum,retvar - ednum).
               ednum = retvar + 1.
            END.   
         END.   
        RUN anmark (INPUT 2,INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT TABLE tidut2).
      END.
   END.
   ELSE DO:
      IF retvar <= edtecken THEN DO:         
         tidtext = SUBSTRING(edtext,ednum,retvar - 1).
         ednum = retvar + 1.
      END.
      ELSE DO:
         IF SUBSTRING(edtext,edtecken,1) = " " THEN DO:
            tidtext = SUBSTRING(edtext,ednum,edtecken).
            ednum = ednum + edtecken + 1.
         END.
         ELSE DO:    
            ednum2 = 1.  
            retvar = INDEX(edtext," ",ednum2).
            IF retvar > edtecken THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE IF retvar = 0 THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE DO:    
               DO WHILE ednum2 < edtecken:
                  IF ednum2 > 0 THEN DO:
                     retvar = INDEX(edtext," ",ednum2).
                     ednum2 = INDEX(edtext," ",retvar + 1).
                  END.
                  ELSE LEAVE.   
               END. 
               tidtext = SUBSTRING(edtext,ednum,retvar).
               ednum = ednum + retvar.  
            END.   
         END.
      END.
      retvar = INDEX(edtext,CHR(10),ednum).
     RUN anmark (INPUT 2,INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT TABLE tidut2).
      DO WHILE retvar > 0:
         IF retvar <= edtecken + ednum THEN DO:         
            tidtext = SUBSTRING(edtext,ednum,retvar - ednum).
            ednum = retvar + 1.
         END.
         ELSE DO:
            IF SUBSTRING(edtext,edtecken + ednum,1) = " " THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken + 1.
            END.
            ELSE DO:    
               ednum2 = ednum.      
               retvar = INDEX(edtext," ",ednum2).
               IF retvar > edtecken + ednum THEN DO:
                  tidtext = SUBSTRING(edtext,ednum,edtecken).
                  ednum = ednum + edtecken.
               END.
               ELSE IF retvar = 0 THEN DO:
                  tidtext = SUBSTRING(edtext,ednum,edtecken).
                  ednum = ednum + edtecken.
               END.
               ELSE DO:
                  DO WHILE ednum2 < edtecken + ednum:
                     IF ednum2 > 0 THEN DO:
                        retvar = INDEX(edtext," ",ednum2).
                        ednum2 = INDEX(edtext," ",retvar + 1).
                     END.
                     ELSE LEAVE.   
                  END. 
                  tidtext = SUBSTRING(edtext,ednum,retvar - ednum).
                  ednum = retvar + 1.  
               END.   
            END.
         END.
         retvar = INDEX(edtext,CHR(10),ednum).
        RUN anmark (INPUT 2,INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT TABLE tidut2).
      END.   
      DO WHILE ednum < ednum3:
         IF SUBSTRING(edtext,ednum + edtecken,1) = " " THEN DO:
            tidtext = SUBSTRING(edtext,ednum,edtecken).
            ednum = ednum + edtecken + 1.
         END.
         ELSE DO:           
            ednum2 = ednum.
            retvar = INDEX(edtext," ",ednum2).
            IF retvar > edtecken + ednum THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE IF retvar = 0 THEN DO:
               tidtext = SUBSTRING(edtext,ednum,edtecken).
               ednum = ednum + edtecken.
            END.
            ELSE DO:               
               DO WHILE ednum2 < edtecken + ednum:
                  IF ednum2 > 0 THEN DO:
                     retvar = INDEX(edtext," ",ednum2).
                     ednum2 = INDEX(edtext," ",retvar + 1).                   
                  END.
                  ELSE LEAVE.   
               END. 
               tidtext = SUBSTRING(edtext,ednum,retvar - ednum).
               ednum = retvar + 1.
            END.   
         END.   
         RUN anmark (INPUT 2,INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT TABLE tidut2).
      END.
   END.
END PROCEDURE.

PROCEDURE anmark.
   DEFINE INPUT PARAMETER anmark AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER gforetag AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut2.
   ASSIGN Guru.Konstanter:globforetag = gforetag.
   FIND LAST tidut2 NO-LOCK NO-ERROR.
   IF anmark = 2 THEN DO:        
      IF    
         Guru.Konstanter:globforetag = "VAST" THEN DO:
         ASSIGN            
         SUBSTRING(tidut2.UT,20) = ""   
         SUBSTRING(tidut2.UT,22) = tidtext.
         CREATE tidut.
      END.
      ELSE DO:
         ASSIGN            
         SUBSTRING(tidut2.UT,20) = ":"   
         SUBSTRING(tidut2.UT,22) = tidtext.
         CREATE tidut2.
      END.      
   END.                              
END PROCEDURE.


PROCEDURE aonrkont2_UI :
       /*AONRKONT2*/      
   DO TRANSACTION:       
      CREATE tidut2.
      ASSIGN
      SUBSTRING(tidut2.UT,1) = AONRTAB.AONR 
      SUBSTRING(tidut2.UT,8) = STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1])                                 
      SUBSTRING(tidut2.UT,14) = AONRTAB.OMRADE.  
      IF TOG_AVS = TRUE THEN DO:                               
         IF AONRTAB.AONRAVDATUM NE 01/01/91 THEN
         SUBSTRING(tidut2.UT,60) = STRING(AONRTAB.AONRAVDATUM).  
         SUBSTRING(tidut2.UT,69) = AONRTAB.UTFARDAT. 
      END.                                       
      ELSE SUBSTRING(tidut2.UT,60) = AONRTAB.UTFARDAT. 
      IF TOG_KONTO = TRUE THEN DO:
         musz = TRUE.  
         OPEN QUERY aokontq FOR EACH AONRKONTKOD WHERE AONRKONTKOD.AONR = AONRTAB.AONR AND 
         AONRKONTKOD.DELNR = AONRTAB.DELNR 
         USE-INDEX AONRKONT NO-LOCK.
         GET FIRST aokontq NO-LOCK.
         DO WHILE AVAILABLE(AONRKONTKOD):          
            IF musz = FALSE THEN CREATE tidut2.    
            musz = FALSE.
            ASSIGN
            SUBSTRING(tidut2.UT,21) = AONRKONTKOD.K1
            SUBSTRING(tidut2.UT,28) = AONRKONTKOD.K2
            SUBSTRING(tidut2.UT,35) = AONRKONTKOD.K3
            SUBSTRING(tidut2.UT,42) = AONRKONTKOD.K4
            SUBSTRING(tidut2.UT,49) = AONRKONTKOD.K5
            SUBSTRING(tidut2.UT,56) = STRING(AONRKONTKOD.SATS%).       
            musz = FALSE.          
            GET NEXT aokontq NO-LOCK.
         END.
         CLOSE QUERY aokontq.
         IF TOG_BEN = TRUE THEN DO:               
            CREATE tidut2.
            SUBSTRING(tidut2.UT,1) = AONRTAB.ORT.                        
         END.
         musz = FALSE.         
      END. 
      ELSE DO:         
         SUBSTRING(tidut2.UT,21) = SUBSTRING(AONRTAB.ORT,1,40).        
      END.     
   END.         
END PROCEDURE.
PROCEDURE aonrkont3_UI :
       /*AONRKONT3 körs ej*/
   /*
   DO TRANSACTION:             
      CREATE tidut2.                                           
      ASSIGN
      SUBSTRING(tidut2.UT,1) = AONRTAB.AONR
      SUBSTRING(tidut2.UT,8) = STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1])                                               
      SUBSTRING(tidut2.UT,14,19) = SUBSTRING(AONRTAB.ORT,1,19)   
      SUBSTRING(tidut2.UT,34) = AONRTAB.OMRADE.  
      IF TOG_AVS = TRUE THEN DO:                               
         IF AONRTAB.AONRAVDATUM NE 01/01/91 THEN
         SUBSTRING(tidut2.UT,81) = STRING(AONRTAB.AONRAVDATUM).           
      END.               
      ASSIGN
      SUBSTRING(tidut2.UT,41) = STRING(AONRTAB.STARTVNR)
      SUBSTRING(tidut2.UT,45) = AONRTAB.STARTDAG
      SUBSTRING(tidut2.UT,53) = STRING(AONRTAB.SLUTVNR) 
      SUBSTRING(tidut2.UT,57) = AONRTAB.SLUTDAG.                                  
      FIND FIRST TIDREGITAB WHERE TIDREGITAB.AONR = AONRTAB.AONR AND 
      TIDREGITAB.DELNR = AONRTAB.DELNR AND TIDLOG = TRUE 
      USE-INDEX AONR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE TIDREGITAB THEN FILL-IN_STARTVNR = FILL-IN_STARTVNR.
      ELSE DO:                                        
         ASSIGN
         SUBSTRING(tidut2.UT,65) = STRING(TIDREGITAB.VECKONUMMER)
         SUBSTRING(tidut2.UT,69) = TIDREGITAB.DAG.
      END.    
      FIND LAST TIDREGITAB WHERE TIDREGITAB.AONR = AONRTAB.AONR AND 
      TIDREGITAB.DELNR = AONRTAB.DELNR AND TIDLOG = TRUE 
      USE-INDEX AONR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE TIDREGITAB THEN FILL-IN_STARTVNR = FILL-IN_STARTVNR.
      ELSE DO:                                                  
         ASSIGN
         SUBSTRING(tidut2.UT,73) = STRING(TIDREGITAB.VECKONUMMER)
         SUBSTRING(tidut2.UT,77) = TIDREGITAB.DAG.
      END.             
   END.         
   */
END PROCEDURE.
PROCEDURE aonrkont_UI :
       /*AONRKONT*/
   DO TRANSACTION:       
      CREATE tidut2.     
      ASSIGN
      SUBSTRING(tidut2.UT,1) = AONRTAB.AONR
      SUBSTRING(tidut2.UT,8) = STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1])                                                
      SUBSTRING(tidut2.UT,14) = AONRTAB.OMRADE  
      SUBSTRING(tidut2.UT,21) = AONRTAB.PRISTYP.
      /*CCCC*/
      IF listnr = 17 THEN .
      ELSE IF listnr NE 13 THEN DO:                                                  
         SUBSTRING(tidut2.UT,35) = SUBSTRING(AONRTAB.ORT,1,35).         
      END.
      ELSE DO:
         SUBSTRING(tidut2.UT,35) = SUBSTRING(AONRTAB.ORT,1,15).   
         SUBSTRING(tidut2.UT,50) = " Ansvarig:" + AONRTAB.ARBANSVARIG.
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + AONRTAB.ARBANSVARIG.
      END.
      IF listnr = 19 THEN DO:
         tidut2.ARBARTKOD = AONRTAB.ARBARTKOD.                                                        
      END.
      /*AONRTAB.PRISTYP*/ 
      IF AONRTAB.AONRAVDATUM NE 01/01/91 THEN DO:                             
         SUBSTRING(tidut2.UT,70) = STRING(AONRTAB.AONRAVDATUM).
      END.      
      IF TOG_KONTO = TRUE THEN DO:      
         /*CCCC*/
         IF listnr = 17 THEN musz = TRUE.
         OPEN QUERY aokontq FOR EACH AONRKONTKOD WHERE AONRKONTKOD.AONR = AONRTAB.AONR AND 
         AONRKONTKOD.DELNR = AONRTAB.DELNR 
         USE-INDEX AONRKONT NO-LOCK. 
         GET FIRST aokontq NO-LOCK.
         DO WHILE AVAILABLE(AONRKONTKOD):            
            /*CCCC*/
            IF musz = FALSE THEN CREATE tidut2.           
            /*CREATE tidut2. */                               
            IF listnr = 17 THEN DO:
               ASSIGN
               SUBSTRING(tidut2.UT,1) = AONRTAB.AONR
               SUBSTRING(tidut2.UT,8) = STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1])                                                
               SUBSTRING(tidut2.UT,14) = AONRTAB.OMRADE
               SUBSTRING(tidut2.UT,21) = AONRTAB.PRISTYP.
            END.
            ASSIGN               
            SUBSTRING(tidut2.UT,31) = AONRKONTKOD.K1
            SUBSTRING(tidut2.UT,38) = AONRKONTKOD.K2
            SUBSTRING(tidut2.UT,45) = AONRKONTKOD.K3
            SUBSTRING(tidut2.UT,52) = AONRKONTKOD.K4
            SUBSTRING(tidut2.UT,59) = AONRKONTKOD.K5
            SUBSTRING(tidut2.UT,66) = STRING(AONRKONTKOD.SATS%,">>9").            

            IF listnr = 17 THEN DO:
               FIND FIRST AONRTIDLAGE WHERE AONRTIDLAGE.AONR = AONRTAB.AONR AND 
               AONRTIDLAGE.IDTIDLAG = "AOUPPLAGT" NO-LOCK NO-ERROR.
               IF AVAILABLE AONRTIDLAGE THEN DO: 
                  ASSIGN
                  tidut2.UDATUM = AONRTIDLAGE.DATUM1
                  tidut2.ORT = SUBSTRING(AONRTAB.ORT,1,30).                                         
               END.
               ELSE DO:
                  ASSIGN
                  tidut2.UDATUM =  ?
                  tidut2.ORT = SUBSTRING(AONRTAB.ORT,1,30).                                         
               END.
               FIND FIRST AONRTIDLAGE WHERE AONRTIDLAGE.AONR = AONRTAB.AONR AND 
               AONRTIDLAGE.IDTIDLAG = "AOKONTO" NO-LOCK NO-ERROR.
               IF AVAILABLE AONRTIDLAGE THEN DO:
                  IF tidut2.UDATUM = AONRTIDLAGE.DATUM1 THEN tidut2.KDATUM = tidut2.KDATUM.
                  ELSE tidut2.KDATUM = AONRTIDLAGE.DATUM1.
               END.
            END.            
            /*CCCC*/
            musz = FALSE.
            GET NEXT aokontq NO-LOCK.
         END. 
         CLOSE QUERY aokontq.       
         IF TOG_BEN = TRUE THEN DO:               
            IF listnr = 17 THEN musz = musz.
            ELSE DO:               
               CREATE tidut2.
               /*CCCC*/
               /*IF listnr NE 13 THEN DO:
                  SUBSTRING(tidut2.UT,1) = AONRTAB.ORT.                        
               END.
               ELSE DO:
                  SUBSTRING(tidut2.UT,1) = SUBSTRING(AONRTAB.ORT,1,30).
                  CREATE tidut2.   
                  SUBSTRING(tidut2.UT,1) = "Ansvarig:" + AONRTAB.ARBANSVARIG.                     
               END.*/
            END.
            IF listnr = 16 THEN DO:
               IF LENGTH(AONRTAB.ARBUPPG[1]) > 0 THEN DO:
                  CREATE tidut2. 
                  ASSIGN
                  SUBSTRING(tidut2.UT,20) = ":"
                  SUBSTRING(tidut2.UT,1) = "Arbetsuppgift"
                  retvar = 1
                  ednum = 1
                  ednum3 = LENGTH(AONRTAB.ARBUPPG[1])
                  retvar = INDEX(AONRTAB.ARBUPPG[1],CHR(10),ednum)
                  edtecken = 38
                  edtext = AONRTAB.ARBUPPG[1]
                  tidtext = "".  
                  RUN anmarkning (INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT retvar,INPUT-OUTPUT edtext,INPUT-OUTPUT ednum,
                     INPUT-OUTPUT edtecken,INPUT-OUTPUT ednum2,
                     INPUT-OUTPUT ednum3,INPUT-OUTPUT TABLE tidut2).                                
               END.                            
            END.                           
         END.
         musz = FALSE.
      END. 
      ELSE DO:
         /*CCCC*/
         /*IF listnr NE 13 THEN DO:                                                  
            SUBSTRING(tidut2.UT,21) = SUBSTRING(AONRTAB.ORT,1,40).         
         END.
         ELSE DO:
            SUBSTRING(tidut2.UT,21) = SUBSTRING(AONRTAB.ORT,1,30).   
            SUBSTRING(tidut2.UT,55) = " Ansvarig:" + AONRTAB.ARBANSVARIG.
         END. */
         IF listnr = 16 THEN DO:
            IF LENGTH(AONRTAB.ARBUPPG[1]) > 0 THEN DO:
               CREATE tidut2. 
               ASSIGN
               SUBSTRING(tidut2.UT,20) = ":"
               SUBSTRING(tidut2.UT,1) = "Arbetsuppgift"
               retvar = 1
               ednum = 1
               ednum3 = LENGTH(AONRTAB.ARBUPPG[1])
               retvar = INDEX(AONRTAB.ARBUPPG[1],CHR(10),ednum)
               edtecken = 38
               edtext = AONRTAB.ARBUPPG[1]
               tidtext = "".  
               RUN anmarkning (INPUT Guru.Konstanter:globforetag,INPUT-OUTPUT retvar,INPUT-OUTPUT edtext,INPUT-OUTPUT ednum,
                        INPUT-OUTPUT edtecken,INPUT-OUTPUT ednum2,
                        INPUT-OUTPUT ednum3,INPUT-OUTPUT TABLE tidut2).                    
               /*{ANMARK2.I}                             */
            END.         
         END.
         IF listnr = 17 THEN DO:
            IF AVAILABLE AONRTIDLAGE THEN DO:                     
               ASSIGN
               tidut2.UDATUM = AONRTIDLAGE.DATUM1
               tidut2.ORT = SUBSTRING(AONRTAB.ORT,1,30).                                         
            END.
            ELSE DO:
               ASSIGN
               tidut2.UDATUM =  ?
               tidut2.ORT = SUBSTRING(AONRTAB.ORT,1,30).                                         
            END.
         END.
         IF listnr = 19 THEN DO:
            tidut2.ARBARTKOD = AONRTAB.ARBARTKOD.                                         
         END.
      END.     
   END.         
END PROCEDURE.

PROCEDURE avslut_UI :
       /*AVSLUT*/
   DO TRANSACTION:      
     IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         CREATE tidut. 
         IF RAD_FAST = FALSE THEN SUBSTRING(tidut.UT,1) = "TILLFÄLLIGA " + CAPS(Guru.Konstanter:gaok).
         ELSE SUBSTRING(tidut.UT,1) = "FASTA " + CAPS(Guru.Konstanter:gaok).
         ASSIGN
         SUBSTRING(tidut.UT,21) = "AVSLUTADE"
         SUBSTRING(tidut.UT,31) = "MELLAN"
         SUBSTRING(tidut.UT,40) = STRING(bdatum)
         SUBSTRING(tidut.UT,50) = "OCH"
         SUBSTRING(tidut.UT,55) = STRING(avdatum).
      END.   
      ELSE DO:
         CREATE tidut. 
         IF RAD_FAST = FALSE THEN SUBSTRING(tidut.UT,1) = "TILLFÄLLIGA " + CAPS(Guru.Konstanter:gaok).
         ELSE SUBSTRING(tidut.UT,1) = "FASTA " + CAPS(Guru.Konstanter:gaok).
         SUBSTRING(tidut.UT,21) = "EJ AVSLUTADE".
         IF TOG_AVS = TRUE AND TOG_EJAV = TRUE 
         THEN DO:                                 
            ASSIGN                    
            SUBSTRING(tidut.UT,21) = "EJ AVSLUTADE OCH AVSLUTADE"
            SUBSTRING(tidut.UT,48) = "MELLAN"
            SUBSTRING(tidut.UT,57) = STRING(bdatum)
            SUBSTRING(tidut.UT,67) = "OCH"
            SUBSTRING(tidut.UT,72) = STRING(avdatum).
         END.
      END.
   END.       
END PROCEDURE.

PROCEDURE huvud2_UI :
       /*HUVUD2*/
   DO TRANSACTION:                
      IF TOG_KONTO = TRUE THEN DO:
         FIND FIRST KBENAMNING USE-INDEX KBEN NO-LOCK NO-ERROR.
         CREATE tidut.                 
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)      
         SUBSTRING(tidut.UT,21) = KBENAMNING.K1
         SUBSTRING(tidut.UT,28) = KBENAMNING.K2
         SUBSTRING(tidut.UT,35) = KBENAMNING.K3
         SUBSTRING(tidut.UT,42) = KBENAMNING.K4
         SUBSTRING(tidut.UT,49) = KBENAMNING.K5
         SUBSTRING(tidut.UT,56) = " %"
         SUBSTRING(tidut.UT,60) = "UTFÄRDAT AV".
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN bdatum = bdatum.       
         ELSE DO:                        
            ASSIGN
            SUBSTRING(tidut.UT,60) = "AVSLUTAT"
            SUBSTRING(tidut.UT,69) = "UTFÄRDAT AV". 
         END.
         CREATE tidut.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =  
            "============.======.======.======.======.======.======.===.=========================".
         END.
         ELSE DO:
            tidut.UT = 
            "============.======.======.======.======.======.======.===.========.============================".
         END. 
      END. 
      ELSE DO:
         CREATE tidut.                         
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)      
         SUBSTRING(tidut.UT,21) = CAPS(Guru.Konstanter:gaonamnk)   
         SUBSTRING(tidut.UT,60) = "UTFÄRDAT AV".
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN bdatum = bdatum.       
         ELSE DO:                               
            ASSIGN
            SUBSTRING(tidut.UT,60) = "AVSLUTAT"
            SUBSTRING(tidut.UT,69) = "UTFÄRDAT AV". 
         END.
         CREATE tidut.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =   
            "============.======.======================================.=========================".
         END.        
         ELSE DO:
            tidut.UT =  
            "============.======.======================================.========.============================".                   
         END. 
      END.             
   END.
END PROCEDURE.  

PROCEDURE huvud_UI :
       /*HUVUD*/
   DO TRANSACTION:       
      IF TOG_KONTO = TRUE THEN DO:
         FIND FIRST KBENAMNING USE-INDEX KBEN NO-LOCK NO-ERROR.
         CREATE tidut.                         
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)                                                                                
         SUBSTRING(tidut.UT,21) = "DEB. PRIS"
         SUBSTRING(tidut.UT,31) = KBENAMNING.K1
         SUBSTRING(tidut.UT,38) = KBENAMNING.K2
         SUBSTRING(tidut.UT,45) = KBENAMNING.K3
         SUBSTRING(tidut.UT,52) = KBENAMNING.K4
         SUBSTRING(tidut.UT,59) = KBENAMNING.K5
         SUBSTRING(tidut.UT,66) = " % ".
         IF listnr = 17 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,80) = "SKAPAT"                                      
            SUBSTRING(tidut.UT,89) = "ÄNDRAT"
            SUBSTRING(tidut.UT,98) = CAPS(Guru.Konstanter:gaonamnk).
         END.
         IF listnr = 19 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,80) = "ABETSART".
            
         END.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN bdatum = bdatum.       
         ELSE DO:
            SUBSTRING(tidut.UT,70) = "AVSLUTAT".
         END.
         CREATE tidut.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =           
            "============.======.=========.======.======.======.======.======.===".
         END.
         ELSE DO:
            tidut.UT =                                                                 
            "============.======.=========.======.======.======.======.======.===.========".    
         END.
         IF listnr = 17 THEN DO:
             tidut.UT =                                                                 
         "============.======.=========.======.======.======.======.======.===.=========.========.========.==============================.".
         END.
         IF listnr = 19  THEN DO:
             tidut.UT =                                                                 
         "============.======.=========.======.======.======.======.======.===.=========.========.".
         END.
      END.
      ELSE DO:                                 
         CREATE tidut.                         
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)      
         SUBSTRING(tidut.UT,21) = CAPS(Guru.Konstanter:gaonamnk).
         IF listnr = 17 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,80) = "SKAPAT"
            SUBSTRING(tidut.UT,90) = "".
         END.
         IF listnr = 19 THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,80) = CAPS(Guru.Konstanter:gartk).
            
         END.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN bdatum = bdatum.       
         ELSE DO:
            SUBSTRING(tidut.UT,70) = "AVSLUTAT".
         END.
         CREATE tidut.         
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =                                                                
            "============.======.================================================".
         END.
         ELSE DO:
            tidut.UT =                                                                 
            "============.======.================================================.========.".    
         END.
         IF listnr = 17 THEN DO:
             tidut.UT =
         "============.======.==========================================================.========.".         
         END.
         IF listnr = 19 THEN DO:
             tidut.UT =
         "============.======.==========================================================.=========.".
         END.
         

      END.
   END.         
END PROCEDURE.

PROCEDURE huvud3_UI :
       /*HUVUD*/
   DO TRANSACTION:       
      IF TOG_KONTO = TRUE THEN DO:
         FIND FIRST KBENAMNING USE-INDEX KBEN NO-LOCK NO-ERROR.
         CREATE tidut.                         
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)                                                                                
         SUBSTRING(tidut.UT,21) = "DEB. PRIS"
         SUBSTRING(tidut.UT,31) = KBENAMNING.K1
         SUBSTRING(tidut.UT,38) = KBENAMNING.K2
         SUBSTRING(tidut.UT,45) = KBENAMNING.K3
         SUBSTRING(tidut.UT,52) = KBENAMNING.K4
         SUBSTRING(tidut.UT,59) = KBENAMNING.K5
         SUBSTRING(tidut.UT,66) = " % ".
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO: 
             SUBSTRING(tidut.UT,70) = CAPS(Guru.Konstanter:gbestk).
         END.
         ELSE DO:
            SUBSTRING(tidut.UT,70) = "AVSLUTAT".
            SUBSTRING(tidut.UT,80) = CAPS(Guru.Konstanter:gbestk).
         END.
         CREATE tidut.
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =           
            "============.======.=========.======.======.======.======.======.===.====================".
         END.
         ELSE DO:
            tidut.UT =                                                                 
            "============.======.=========.======.======.======.======.======.===.========.=================".    
         END.
      END.
      ELSE DO:                                 
         CREATE tidut.                         
         ASSIGN
         SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)
         SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gomrk)      
         SUBSTRING(tidut.UT,21) = CAPS(Guru.Konstanter:gaonamnk).
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
             SUBSTRING(tidut.UT,70) = CAPS(Guru.Konstanter:gbestk).
         END.
         ELSE DO:
            SUBSTRING(tidut.UT,70) = "AVSLUTAT".
            SUBSTRING(tidut.UT,80) = CAPS(Guru.Konstanter:gbestk).
         END.
         CREATE tidut.         
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
            tidut.UT =                                                                
            "============.======.================================================.=========================".
         END.
         ELSE DO:
            tidut.UT =                                                                 
            "============.======.================================================.========.=========================".    
         END.
      END.
   END.         
END PROCEDURE.

PROCEDURE vianlorg_UI :
       /*VIANLORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.      
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.                
   DO TRANSACTION:  
      FIND FIRST ANLAGGNING WHERE ANLAGGNING.ANLNR  = FILL-IN_ANLNR NO-LOCK NO-ERROR.
      CREATE tidut.                       
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS").
      CREATE tidut.                                    
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,37) = SEL_OMR.
      CREATE tidut. 
      SUBSTRING(tidut.UT,1)= "MED ANLÄGGNING".       
      IF TOG_ANL = FALSE THEN
      IF AVAILABLE ANLAGGNING THEN SUBSTRING(tidut.UT,20)= STRING(FILL-IN_ANLNR, "x(15)") + " " + ANLAGGNING.BENAMNING.      
      ELSE SUBSTRING(tidut.UT,20)= STRING(FILL-IN_ANLNR, "x(15)").
      IF TOG_ANL = TRUE THEN SUBSTRING(tidut.UT,20)= "ALLA".     
      RUN avslut_UI. 
      RUN huvud_UI.
   END.     
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD ALLA OMRÅDEN*/ 
      IF TOG_ANL = FALSE THEN DO:
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
            AONRTAB.ANLNR = FILL-IN_ANLNR AND
            AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB):             
               RUN aonrkont_UI.         
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.                 
         END.
         ELSE IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
            /*ALLA AVSLUTADE*/
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
            AONRTAB.ANLNR = FILL-IN_ANLNR AND
            AONRTAB.AONRAVDATUM  >= bdatum AND 
            AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB):    
               RUN aonrkont_UI.            
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.          
         END. 
         ELSE IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
            /*ALLA AVSLUTADE ALLA OMRÅDEN*/
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.ANLNR = FILL-IN_ANLNR AND
            ((AONRTAB.AONRAVDATUM >= bdatum AND 
            AONRTAB.AONRAVDATUM <= avdatum) OR 
            AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB): 
               RUN aonrkont_UI.             
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.      
         END.  
      END.    
      ELSE DO:
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1)= 
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING. 
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):   
                  RUN aonrkont_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.      
               CREATE  tidut.   
            END.                    
         END.
         IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
            /*ALLA AVSLUTADE*/           
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1)= 
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING. 
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):    
                  RUN aonrkont_UI.            
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.                 
               CREATE  tidut.   
            END.       
         END. 
         IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
            /*ALLA AVSLUTADE*/                                
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1)= 
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING. 
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB): 
                  RUN aonrkont_UI.             
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.                 
               CREATE  tidut.   
            END.      
         END.  
      END.   
   END. 
   ELSE DO:                          
      IF TOG_ANL = TRUE THEN DO:
         /*EJ AVSLUTAD*/               
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1) =                
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING.
               FIND FIRST AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK NO-ERROR.
               IF NOT AVAILABLE AONRTAB THEN DO:
                  DELETE tidut.
                  NEXT.
               END.
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB): 
                  RUN aonrkont_UI.            
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.    
               CREATE  tidut.   
            END.                 
         END.
         IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
            /*ALLA AVSLUTADE*/
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1) = 
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING. 
               FIND FIRST AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK NO-ERROR.
               IF NOT AVAILABLE AONRTAB THEN DO:
                  DELETE tidut.
                  NEXT.
               END.
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB): 
                  RUN aonrkont_UI.             
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.                 
               CREATE  tidut.   
            END.    
         END. 
         IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
            /*ALLA AVSLUTADE*/
            FOR EACH ANLAGGNING USE-INDEX ANLAGGNING NO-LOCK:
               CREATE  tidut.                                 
               SUBSTRING(tidut.UT,1) = 
               STRING(ANLAGGNING.ANLNR, "x(15)"). 
               SUBSTRING(tidut.UT,21)= ANLAGGNING.BENAMNING. 
               FIND FIRST AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR  
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK NO-ERROR.
               IF NOT AVAILABLE AONRTAB THEN DO:
                  DELETE tidut.
                  NEXT.
               END.
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.ANLNR = ANLAGGNING.ANLNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR  
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB): 
                  RUN aonrkont_UI.             
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.    
               CREATE  tidut.   
            END.   
         END. 
      END. 
      ELSE DO: 
         /*EJ AVSLUTAD*/  
         IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
            AONRTAB.ANLNR = FILL-IN_ANLNR AND
            AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB): 
               RUN aonrkont_UI.            
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.               
         END.
         IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
            /*ALLA AVSLUTADE*/
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
            AONRTAB.ANLNR = FILL-IN_ANLNR AND
            AONRTAB.AONRAVDATUM  >= bdatum AND 
            AONRTAB.AONRAVDATUM <= avdatum AND 
            AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB):   
               RUN aonrkont_UI.             
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.        
         END. 
         IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
            /*ALLA AVSLUTADE*/
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
            AONRTAB.ANLNR = FILL-IN_ANLNR AND
            ((AONRTAB.AONRAVDATUM >= bdatum AND 
            AONRTAB.AONRAVDATUM <= avdatum) OR  
            AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
            GET FIRST aonrq NO-LOCK.
            DO WHILE AVAILABLE(AONRTAB): 
               RUN aonrkont_UI.             
               GET NEXT aonrq NO-LOCK.             
            END.
            CLOSE QUERY aonrq.      
         END. 
      END. 
   END.   
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR. 
END PROCEDURE.

PROCEDURE vianvorg_UI :
       /*VIANVORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = FILL-IN_ARBANSVARIG NO-LOCK NO-ERROR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,37) = SEL_OMR. 
      CREATE tidut.                          
      ASSIGN
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:garbak).
      IF AVAILABLE PERSONALTAB THEN DO:
         SUBSTRING(tidut.UT,20)= FILL-IN_ARBANSVARIG + " " + PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + PERSONALTAB.PERSONALKOD.
      END.
      ELSE SUBSTRING(tidut.UT,20)= FILL-IN_ARBANSVARIG.
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):   
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                  
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.    
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI. 
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                 
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBANSVARIG = FILL-IN_ARBANSVARIG AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   {GDPRLOGGCLIENT.I}
   EMPTY TEMP-TABLE tidut2 NO-ERROR.    
END PROCEDURE.

PROCEDURE viaorg_UI :
       /*VIAORG*/
   
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".      
   END.
   DO TRANSACTION:  
      CREATE tidut.                        
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,47) = SEL_OMR.     
      RUN avslut_UI.
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         IF listtemp.SORTERING = 1 THEN DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
            AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
         END.
         ELSE DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
            AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX AONR NO-LOCK.
         END.
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         IF listtemp.SORTERING = 1 THEN DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM  >= bdatum AND 
            AONRTAB.AONRAVDATUM  <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
         END.
         ELSE DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM  >= bdatum AND 
            AONRTAB.AONRAVDATUM  <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX AONR NO-LOCK.
         END.
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         IF listtemp.SORTERING = 1 THEN DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE
            ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
            AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX OMRADE NO-LOCK.
         END.
         ELSE DO:
            OPEN QUERY aonrq FOR EACH AONRTAB WHERE
            ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
            AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
            USE-INDEX AONR NO-LOCK.

         END.
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND  
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.   
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.         
      END. 
   END.
   GET FIRST aonrq NO-LOCK.
   DO WHILE AVAILABLE(AONRTAB): 
      IF listnr = 16 THEN DO:
         REPEAT:
            IF NOT AVAILABLE AONRTAB THEN LEAVE.
            IF LENGTH(AONRTAB.ARBUPPG[1]) = 0 THEN GET NEXT aonrq NO-LOCK.
            ELSE LEAVE.
         END.
      END.
      /*
      IF listnr = 17 THEN DO:
         FIND FIRST AONRTIDLAGE WHERE AONRTIDLAGE.AONR = AONRTAB.AONR AND 
         AONRTIDLAGE.IDTIDLAG = "AOUPPLAGT" NO-LOCK NO-ERROR.
      END.
      */
      IF AVAILABLE AONRTAB THEN RUN aonrkont_UI.
      GET NEXT aonrq NO-LOCK.             
   END.
   CLOSE QUERY aonrq. 
   IF listnr = 17 THEN DO:
       FOR EACH tidut2 WHERE tidut2.UDATUM = ? BY tidut2.UT:
          CREATE tidut.
          ASSIGN
          SUBSTRING(tidut.UT,1,79) = tidut2.UT.
          IF TOG_BEN = TRUE THEN SUBSTRING(tidut.UT,98,30) = SUBSTRING(tidut2.ORT,1,30).   
          DELETE tidut2.
       END.
       /*Lena plockar bort BY tidut2.UT 20070420. Listan skall sorteras på UDATUM*/
       FOR EACH tidut2 /*BY tidut2.UT*/ BY tidut2.UDATUM DESCENDING :
           CREATE tidut.
           ASSIGN
           SUBSTRING(tidut.UT,1,79) = tidut2.UT
           SUBSTRING(tidut.UT,80,8) = STRING(tidut2.UDATUM).
           IF tidut2.UDATUM NE tidut2.KDATUM THEN DO: 
              IF tidut2.KDATUM  NE ? THEN SUBSTRING(tidut.UT,89,8) = STRING(tidut2.KDATUM).
           END.           
           IF TOG_BEN = TRUE THEN SUBSTRING(tidut.UT,98,30) = SUBSTRING(tidut2.ORT,1,30).   
       END.       
   END.
   ELSE IF listnr = 19 THEN DO:       
       FOR EACH ARBETSART NO-LOCK,
       EACH tidut2 WHERE tidut2.ARBARTKOD = ARBETSART.ARBARTKOD:
          tidut2.BEN = ARBETSART.ARBBENAMNING.
       END.
       FOR EACH tidut2 :
           CREATE tidut.
           ASSIGN
           SUBSTRING(tidut.UT,1,79) = tidut2.UT.
           IF tidut2.ARBARTKOD NE 0 THEN SUBSTRING(tidut.UT,80) = STRING(tidut2.ARBARTKOD) + " " + tidut2.BEN.
          /* IF TOG_KONTO = TRUE THEN SUBSTRING(tidut.UT,83,30) = SUBSTRING(tidut2.ORT,1,30).   */
       END.       
   END.
   ELSE DO:
      FOR EACH tidut2 :
         CREATE tidut.
         ASSIGN
         tidut.UT = tidut2.UT.
      END.
   END.
   EMPTY TEMP-TABLE tidut2 NO-ERROR.
   
  {GDPRLOGGCLIENT.I}    
END PROCEDURE.

PROCEDURE viavrop_UI :
       /*viavrop*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:  
      CREATE tidut.                        
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.     
      RUN avslut_UI.
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY joinq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI.
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.                                         
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY joinq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI. 
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.   
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY joinq FOR EACH AONRTAB WHERE
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI. 
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.  
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY joinq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI. 
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY joinq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND  
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):   
            RUN aonrkont_UI. 
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.     
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY joinq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK,EACH AVROP WHERE AVROP.AONR = AONRTAB.AONR AND
         AVROP.DELNR = AONRTAB.DELNR NO-LOCK.
         GET FIRST joinq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB): 
            RUN aonrkont_UI.  
            GET NEXT joinq NO-LOCK.             
         END.
         CLOSE QUERY joinq.    
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR.    
   {GDPRLOGGCLIENT.I}
END PROCEDURE.

PROCEDURE viarborg_UI :
       /*VIARBORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      FIND FIRST ARBETSART WHERE  ARBETSART.ARBARTKOD = FILL-IN_ARBARTKOD NO-LOCK NO-ERROR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS").        
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gartk).
      IF AVAILABLE ARBETSART THEN SUBSTRING(tidut.UT,20)= STRING(FILL-IN_ARBARTKOD) + " " + ARBETSART.ARBBENAMNING.  
      ELSE SUBSTRING(tidut.UT,20)= STRING(FILL-IN_ARBARTKOD).
     
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                  
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.    
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBARTKOD = FILL-IN_ARBARTKOD AND 
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.    
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR. 
   {GDPRLOGGCLIENT.I}   
END PROCEDURE.
PROCEDURE viberorg_UI :
       /*VIBERORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = FILL-IN_BEREDARE NO-LOCK NO-ERROR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut.                         
      ASSIGN       
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gberek).
      IF AVAILABLE PERSONALTAB THEN DO:
         SUBSTRING(tidut.UT,26)= FILL-IN_BEREDARE + " " + PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + PERSONALTAB.PERSONALKOD.
      END.         
      ELSE SUBSTRING(tidut.UT,26)= FILL-IN_BEREDARE.      
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                  
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BEREDARE = FILL-IN_BEREDARE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR. 
   {GDPRLOGGCLIENT.I}   
END PROCEDURE.

PROCEDURE vibesorg_UI :
       /*VIBESORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      CREATE tidut.                                  
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut. 
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gbestk).
      FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = FILL-IN_OMRADE
      AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF NOT AVAILABLE OMRADETAB THEN DO:
         FIND FIRST BESTTAB WHERE BESTTAB.BESTID = FILL-IN_OMRADE
         USE-INDEX BEST NO-LOCK NO-ERROR.
         IF AVAILABLE BESTTAB THEN DO:
            ASSIGN SUBSTRING(tidut.UT,24)= BESTTAB.BESTNAMN.
         END.
      END.
      ELSE SUBSTRING(tidut.UT,24)= OMRADETAB.NAMN.           
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.BESTID = FILL-IN_OMRADE AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.BESTID = FILL-IN_OMRADE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.BESTID = FILL-IN_OMRADE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BESTID = FILL-IN_OMRADE AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.BESTID = FILL-IN_OMRADE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BESTID = FILL-IN_OMRADE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR. 
   {GDPRLOGGCLIENT.I}   
END PROCEDURE.

PROCEDURE vibuorg_UI :
       /*VIBESORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      CREATE tidut.                                  
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,47) = SEL_OMR.
      CREATE tidut. 
      SUBSTRING(tidut.UT,1)= "MED UTOMSTÅENDE " + CAPS(Guru.Konstanter:gbestk).
      /*FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = FILL-IN_OMRADE
      AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF NOT AVAILABLE OMRADETAB THEN DO:
         FIND FIRST BESTTAB WHERE BESTTAB.BESTID = FILL-IN_OMRADE
         USE-INDEX BEST NO-LOCK NO-ERROR.
         SUBSTRING(tidut.UT,24)= BESTTAB.BESTNAMN.
      END.
      ELSE SUBSTRING(tidut.UT,24)= OMRADETAB.NAMN.           */
      OPEN QUERY bq FOR EACH BESTTAB WHERE BESTTAB.AOKUND = TRUE
      USE-INDEX BEST NO-LOCK.
      GET FIRST bq NO-LOCK.
      DO WHILE AVAILABLE(BESTTAB):
         CREATE bestkundallt.
         ASSIGN 
         bestkundallt.VIBESTID = BESTTAB.VIBESTID 
         bestkundallt.BESTID = BESTTAB.BESTID 
         bestkundallt.BESTNAMN = BESTTAB.BESTNAMN.
         GET NEXT bq NO-LOCK.
      END.      
      RUN avslut_UI. 
      RUN huvud3_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.BESTID = bestkundallt.BESTID AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            SUBSTRING(tidut2.UT,70) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq.                
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE 
         AONRTAB.BESTID = bestkundallt.BESTID AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):
            RUN aonrkont_UI. 
            ASSIGN
            SUBSTRING(tidut2.UT,80) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq. 
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE AONRTAB.BESTID = bestkundallt.BESTID AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            SUBSTRING(tidut2.UT,80) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq.  
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BESTID = bestkundallt.BESTID AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            SUBSTRING(tidut2.UT,70) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.BESTID = bestkundallt.BESTID AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            SUBSTRING(tidut2.UT,80) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq. 
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrbq FOR EACH bestkundallt NO-LOCK,
         EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.BESTID = bestkundallt.BESTID AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrbq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            SUBSTRING(tidut2.UT,80) = bestkundallt.BESTNAMN. 
            GET NEXT aonrbq NO-LOCK.             
         END.
         CLOSE QUERY aonrbq.   
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR.   
   {GDPRLOGGCLIENT.I} 
END PROCEDURE.

PROCEDURE videborg_UI :
       /*VIDEBORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:         
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gdebk)
      SUBSTRING(tidut.UT,20)= FILL-IN-PRISTYP.      
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.PRISTYP = FILL-IN-PRISTYP AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.PRISTYP = FILL-IN-PRISTYP AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.PRISTYP = FILL-IN-PRISTYP AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.PRISTYP = FILL-IN-PRISTYP AND 
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.PRISTYP = FILL-IN-PRISTYP AND 
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.PRISTYP = FILL-IN-PRISTYP AND 
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR.    
   {GDPRLOGGCLIENT.I}
END PROCEDURE.
PROCEDURE vipriorg_UI :
       /*VIPRIORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      FIND FIRST PRIORITET WHERE  PRIORITET.PKOD = FILL-IN_PKOD NO-LOCK NO-ERROR.
      CREATE tidut.                          
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS").  
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.  
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gpriok).
      IF AVAILABLE PRIORITET THEN SUBSTRING(tidut.UT,20)= STRING(FILL-IN_PKOD) + " " + PRIORITET.P-BENAMNING.
      ELSE SUBSTRING(tidut.UT,20)= STRING(FILL-IN_PKOD).
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.PKOD = FILL-IN_PKOD AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.PKOD = FILL-IN_PKOD AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.    
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.PKOD = FILL-IN_PKOD AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.PKOD = FILL-IN_PKOD AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                  
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.PKOD = FILL-IN_PKOD AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.PKOD = FILL-IN_PKOD AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR. 
   {GDPRLOGGCLIENT.I}
END PROCEDURE.

PROCEDURE viprojorg_UI :
       /*VIprojORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = FILL-IN_BEREDARE NO-LOCK NO-ERROR.
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut.                         
      ASSIGN       
      SUBSTRING(tidut.UT,1)= "MED " + CAPS(Guru.Konstanter:gprojk).
      IF AVAILABLE PERSONALTAB THEN DO:
         SUBSTRING(tidut.UT,26)= FILL-IN_BEREDARE + " " + PERSONALTAB.FORNAMN + " " + PERSONALTAB.EFTERNAMN.
         Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + PERSONALTAB.PERSONALKOD.
      END.       
      ELSE SUBSTRING(tidut.UT,26)= FILL-IN_BEREDARE.
      RUN avslut_UI. 
      RUN huvud_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.               
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                  
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.STARTDAG = FILL-IN_BEREDARE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq. 
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR.    
   {GDPRLOGGCLIENT.I}
END PROCEDURE.


PROCEDURE viskeorg_UI :
       /*VISKEORG*/
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST)
      SUBSTRING(tidut.UT,40) = SEL_OMR
      SUBSTRING(tidut.UT,57)= "MED ARBETSBESKED".              
      RUN avslut_UI. 
      RUN huvud2_UI.
   END.   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM = 01/01/91 AND 
         AONRTAB.ARBBESKED = TRUE AND
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont2_UI.                      
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.                 
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
         AONRTAB.ARBBESKED = TRUE AND
         AONRTAB.AONRAVDATUM  >= bdatum AND 
         AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont2_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.    
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.ARBBESKED = TRUE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR 
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont2_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END. 
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBBESKED = TRUE AND
         AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):  
            RUN aonrkont2_UI.            
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.             
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND 
         AONRTAB.ARBBESKED = TRUE AND
         AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum AND 
         AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):    
            RUN aonrkont2_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.  
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
         AONRTAB.ARBBESKED = TRUE AND
         ((AONRTAB.AONRAVDATUM >= bdatum AND AONRTAB.AONRAVDATUM <= avdatum) OR  
         AONRTAB.AONRAVDATUM = 01/01/91) AND AONRTAB.FASTAAONR = RAD_FAST
         USE-INDEX OMRADE NO-LOCK.
         GET FIRST aonrq NO-LOCK.
         DO WHILE AVAILABLE(AONRTAB):     
            RUN aonrkont2_UI.             
            GET NEXT aonrq NO-LOCK.             
         END.
         CLOSE QUERY aonrq.   
      END. 
   END.
   FOR EACH tidut2 :
      CREATE tidut.
      ASSIGN
      tidut.UT = tidut2.UT.
   END.   
   EMPTY TEMP-TABLE tidut2 NO-ERROR.    
END PROCEDURE.


PROCEDURE vivnrorg_UI :
   /*körs ej*/    
   /*VIVNRORG*/   
   /*
   IF SEL_OMR NE "ALLA" THEN DO:
      FIND FIRST OMRADETAB WHERE OMRADETAB.NAMN = SEL_OMR AND OMRADETAB.ELVOMRKOD = 0 NO-LOCK NO-ERROR.
      IF AVAILABLE OMRADETAB THEN DO:
         varomr = OMRADETAB.OMRADE.
      END.                         
      ELSE varomr = "".
   END.
   DO TRANSACTION:                    
      CREATE tidut.                     
      ASSIGN
      SUBSTRING(tidut.UT,50) = STRING(TODAY)
      SUBSTRING(tidut.UT,60) = STRING(TIME,"HH:MM:SS"). 
      CREATE tidut.                         
      ASSIGN
      SUBSTRING(tidut.UT,1) = CAPS(SEL_LIST).
      SUBSTRING(tidut.UT,40) = SEL_OMR.
      CREATE tidut. 
      SUBSTRING(tidut.UT,4) = "PLANERAD START VECKA:".
      IF FILL-IN_STARTVNR NE 0 THEN 
      SUBSTRING(tidut.UT,26) = STRING(FILL-IN_STARTVNR).
      CREATE tidut. 
      SUBSTRING(tidut.UT,4) = "PLANERAD SLUT VECKA :".      
      IF FILL-IN_SLUTVNR NE 0 THEN 
      SUBSTRING(tidut.UT,26) = STRING(FILL-IN_SLUTVNR).              
      RUN avslut_UI.  
      CREATE tidut. 
      ASSIGN
      SUBSTRING(tidut.UT,47) = "PLANERAD"
      SUBSTRING(tidut.UT,66) = "TIDSKRIVNING".        
      CREATE tidut.                      
      ASSIGN
      SUBSTRING(tidut.UT,1) = SUBSTRING(CAPS(Guru.Konstanter:gaol),1,12)  
      SUBSTRING(tidut.UT,14) = CAPS(Guru.Konstanter:gaonamnk)
      SUBSTRING(tidut.UT,34) = CAPS(Guru.Konstanter:gomrk)      
      SUBSTRING(tidut.UT,41) = "START VECKA"
      SUBSTRING(tidut.UT,53) = "SLUT VECKA"
      SUBSTRING(tidut.UT,65) = "FÖRSTA"
      SUBSTRING(tidut.UT,73) = "SISTA".
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN bdatum = bdatum.       
      ELSE DO:
         SUBSTRING(tidut.UT,81) = "AVSLUTAT".
      END.
      CREATE tidut.
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:         
         tidut.UT =                      
         "============.===================.======.===========.===========.=======.=======".
      END.
      ELSE DO:
         tidut.UT =    
         "============.===================.======.===========.===========.=======.=======.========".    
      END.
   END.         
   
   IF SEL_OMR = "ALLA" THEN DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND               
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.AONRAVDATUM = 01/01/91 AND AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):      
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.      
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE  
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.  
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE  
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):      
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE  
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE                 
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.      
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE  
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):      
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE 
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE  
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):      
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE                 
               ((AONRTAB.AONRAVDATUM >= bdatum AND
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.               
      END. 
   END.  
   ELSE DO:
      /*EJ AVSLUTAD*/  
      IF TOG_AVS = FALSE AND TOG_EJAV = TRUE THEN DO:
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.AONRAVDATUM = 01/01/91 AND                
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq. 
            END.
         END.      
      END.
      IF TOG_AVS = TRUE AND TOG_EJAV = FALSE THEN DO:
         /*ALLA AVSLUTADE*/
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):      
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.                       
            END.
            ELSE DO:   
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE
               AONRTAB.OMRADE = varomr AND               
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND                    
               AONRTAB.AONRAVDATUM  >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.
         END.      
      END. 
      IF TOG_AVS = TRUE AND TOG_EJAV = TRUE THEN DO:
         /*ALLA AVSLUTADE*/
         IF FILL-IN_STARTVNR NE 0 THEN DO:
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND 
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.STARTVNR <= FILL-IN_SLUTVNR AND
               AONRTAB.SLUTVNR >= FILL-IN_STARTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):     
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.STARTVNR >= FILL-IN_STARTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.
         END.  
         ELSE DO: 
            IF FILL-IN_SLUTVNR NE 0 THEN DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND
               AONRTAB.SLUTVNR <= FILL-IN_SLUTVNR AND
               ((AONRTAB.AONRAVDATUM >= bdatum AND 
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.           
            ELSE DO:
               OPEN QUERY aonrq FOR EACH AONRTAB WHERE AONRTAB.OMRADE = varomr AND                
               ((AONRTAB.AONRAVDATUM >= bdatum AND
               AONRTAB.AONRAVDATUM <= avdatum) OR 
               AONRTAB.AONRAVDATUM = 01/01/91) AND 
               AONRTAB.FASTAAONR = RAD_FAST
               USE-INDEX OMRADE NO-LOCK.
               GET FIRST aonrq NO-LOCK.
               DO WHILE AVAILABLE(AONRTAB):       
                  RUN aonrkont3_UI.                      
                  GET NEXT aonrq NO-LOCK.             
               END.
               CLOSE QUERY aonrq.     
            END.
         END.               
      END. 
   END.  
   */
END PROCEDURE.


/*PROCEDURE anmark_UI :
   DEFINE INPUT PARAMETER anmark AS INTEGER NO-UNDO.
   IF anmark = 2 THEN DO:        
      ASSIGN            
      SUBSTRING(tidut2.UT,20) = ""   
      SUBSTRING(tidut2.UT,22) = tidtext.
      CREATE tidut2.      
   END.                              
END PROCEDURE.*/


