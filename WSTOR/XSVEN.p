DEFINE NEW SHARED VARIABLE startdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE starttid LIKE TIDREGITAB.START NO-UNDO.
DEFINE NEW SHARED VARIABLE totavbrott AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lspantal LIKE STORNINGSTAB.ANTALLSP NO-UNDO.
DEFINE NEW SHARED VARIABLE hspantal LIKE STORNINGSTAB.ANTALLSP NO-UNDO.

DEFINE VARIABLE datum70 AS DATE NO-UNDO.
DEFINE VARIABLE datum30 AS DATE NO-UNDO.
DEFINE VARIABLE tid70 LIKE TIDREGITAB.START NO-UNDO.
DEFINE VARIABLE tid30 LIKE TIDREGITAB.START NO-UNDO.
DEFINE VARIABLE timmar100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE timmar60 AS DECIMAL NO-UNDO.
DEFINE VARIABLE bortavbrott AS DECIMAL NO-UNDO.
DEFINE VARIABLE totbortfall AS DECIMAL NO-UNDO.
DEFINE VARIABLE mestbort AS INTEGER NO-UNDO.
DEFINE VARIABLE bortfallrec AS RECID NO-UNDO.
DEFINE VARIABLE divmestbort AS DECIMAL NO-UNDO.
DEFINE VARIABLE ejvalue AS LOGICAL NO-UNDO.

FUNCTION klockan100 RETURNS DECIMAL
  (INPUT ber60 AS DECIMAL) :
  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600. 
END FUNCTION.

FUNCTION klockan60 RETURNS DECIMAL
  (INPUT ber100 AS DECIMAL) :
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60.
END FUNCTION.

   OPEN QUERY mtrlq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.INDATUM = TODAY - 1 NO-LOCK.
   DO TRANSACTION:
      GET FIRST mtrlq EXCLUSIVE-LOCK.
      RUN summa_UI.
   END.   
   REPEAT:
      DO TRANSACTION:
         GET NEXT mtrlq EXCLUSIVE-LOCK.
         IF AVAILABLE STORNINGSTAB THEN DO:
            RUN summa_UI.
         END.
         ELSE LEAVE.
      END.
   END.      
PROCEDURE summa_UI.    
   ASSIGN
   totavbrott = 0
   totbortfall = 0.
   IF STORNINGSTAB.DATUM70% NE ? THEN DO:     
      RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM70%, INPUT STORNINGSTAB.HKLOCKAN,
      INPUT STORNINGSTAB.KLOCKAN70%, OUTPUT timmar100, OUTPUT timmar60).   
      
      totbortfall = totbortfall + ((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * timmar100.
      totavbrott = totavbrott + (timmar100 * (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP)).
      RUN TIDBER.P (INPUT STORNINGSTAB.DATUM70%, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.KLOCKAN70%,
      INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      
      totbortfall = totbortfall + (((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * (((STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP) * 0.3) / (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP)) * timmar100).
      totavbrott = totavbrott + (timmar100 * ((STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP) * 0.3)).
   END.
   ELSE DO:
      RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.HKLOCKAN,
      INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      
      ASSIGN
      totbortfall = totbortfall + ((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW) * timmar100
      totavbrott = totavbrott + (timmar100 * (STORNINGSTAB.ANTALLSP + STORNINGSTAB.ANTALHSP)).
   END.      
   ASSIGN
   STORNINGSTAB.BORTFALL = totbortfall
   STORNINGSTAB.AVBROTTSTID = totavbrott.
END PROCEDURE.   
