/*EXKSKKORTU.P*/

FUNCTION getcolname RETURNS CHARACTER (INPUT i AS INTEGER):
   IF i = 1 THEN RETURN "a".
   IF i = 2 THEN RETURN "b".
   IF i = 3 THEN RETURN "c".
   IF i = 4 THEN RETURN "d".
   IF i = 5 THEN RETURN "e".
   IF i = 6 THEN RETURN "f".
   IF i = 7 THEN RETURN "g".
   IF i = 8 THEN RETURN "h".
   IF i = 9 THEN RETURN "i".
   IF i = 10 THEN RETURN "j".
   IF i = 11 THEN RETURN "k".
   IF i = 12 THEN RETURN "l".
   IF i = 13 THEN RETURN "m".
   IF i = 14 THEN RETURN "n".
   IF i = 15 THEN RETURN "o".
   IF i = 16 THEN RETURN "p".
   IF i = 17 THEN RETURN "q".
   IF i = 18 THEN RETURN "r".
   IF i = 19 THEN RETURN "s".
   IF i = 20 THEN RETURN "t".
   IF i = 21 THEN RETURN "u".
   IF i = 22 THEN RETURN "v".
   IF i = 23 THEN RETURN "x".
   IF i = 24 THEN RETURN "y".
   IF i = 25 THEN RETURN "z".
   IF i = 26 THEN RETURN "aa".
   IF i = 27 THEN RETURN "ab".
   IF i = 28 THEN RETURN "ac".
   IF i = 29 THEN RETURN "ad".
   IF i = 30 THEN RETURN "ae".
   IF i = 31 THEN RETURN "af".
   IF i = 32 THEN RETURN "ag".
   IF i = 33 THEN RETURN "ah".
   IF i = 34 THEN RETURN "ai".
   IF i = 35 THEN RETURN "aj".    
   IF i = 36 THEN RETURN "ak".
   IF i = 37 THEN RETURN "al".
   IF i = 38 THEN RETURN "am".
   IF i = 39 THEN RETURN "an".
   IF i = 40 THEN RETURN "ao".
   IF i = 41 THEN RETURN "ap".
   IF i = 42 THEN RETURN "aq".
   IF i = 43 THEN RETURN "ar".
   IF i = 44 THEN RETURN "as".
   IF i = 45 THEN RETURN "at".  
END FUNCTION.
{LISTDEF.I}
DEFINE VARIABLE imageKtypi AS INTEGER NO-UNDO.
DEFINE VARIABLE totheigtKtyp AS INTEGER NO-UNDO. 
DEFINE VARIABLE felexcel AS LOGICAL NO-UNDO.
         
                              

DEFINE SHARED VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE SHARED VARIABLE valort AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valomrade AS CHARACTER NO-UNDO.  
DEFINE VARIABLE totheight AS DECIMAL NO-UNDO.
DEFINE VARIABLE colin AS INTEGER NO-UNDO.
colin = 500.  
DEFINE VARIABLE markag AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader2 AS INTEGER NO-UNDO.
DEFINE VARIABLE extram AS INTEGER NO-UNDO.
DEFINE VARIABLE emg AS INTEGER NO-UNDO.
DEFINE VARIABLE uColumn  AS INTEGER INITIAL 0.
DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE link AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytcol AS LOGICAL NO-UNDO.
DEFINE VARIABLE bytacol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytccol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytgcol AS CHARACTER NO-UNDO.
DEFINE VARIABLE radrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE anradrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE hjsakr AS CHARACTER NO-UNDO.
DEFINE VARIABLE antskap AS INTEGER NO-UNDO.
DEFINE VARIABLE hjantskap AS INTEGER NO-UNDO.
DEFINE VARIABLE skapstorlek AS INTEGER NO-UNDO.
DEFINE VARIABLE frikortapph AS HANDLE NO-UNDO.
DEFINE VARIABLE prisvar AS INTEGER NO-UNDO.

DEFINE VARIABLE pos AS INTEGER NO-UNDO.
DEFINE VARIABLE pos2 AS INTEGER NO-UNDO.
DEFINE VARIABLE artecken AS LOGICAL NO-UNDO.
DEFINE VARIABLE forraadress AS CHARACTER NO-UNDO.
DEFINE VARIABLE slutradlsp AS INTEGER NO-UNDO.

DEFINE TEMP-TABLE uppfoltemp   
   FIELD FORETAG AS CHARACTER
   FIELD ANVANDARE AS CHARACTER  
   FIELD ALLAMA AS LOGICAL
   FIELD VALVARD AS CHARACTER
   FIELD FORSTA AS LOGICAL
   FIELD STAMP AS LOGICAL.  
{TIDUTTT.I} 

DEFINE TEMP-TABLE bskaptemp NO-UNDO
   FIELD ENR       AS CHARACTER FORMAT "X(11)" LABEL "Enr"             
   FIELD BENAMNING AS CHARACTER FORMAT "x(40)" LABEL "Benämning"
   FIELD ENHET     AS CHARACTER FORMAT "x(5)" LABEL "Enhet"    
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"    
   FIELD PRIS      AS DECIMAL   FORMAT ">>>>99.99" INITIAL 0 LABEL "Pris"     
   FIELD LEVKOD    AS CHARACTER FORMAT "x(4)" LABEL "LEV-ID"   
   FIELD MODUL     AS INTEGER   FORMAT ">>>9" INITIAL 0 LABEL "Moduler"  
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"
   FIELD BERSKAPROW AS ROWID
   INDEX KOD IS PRIMARY KTYPKOD KOD
   INDEX MOD KTYPKOD MODUL.

DEFINE TEMP-TABLE bsktemp NO-UNDO
   FIELD ANTAL     AS INTEGER   FORMAT ">>>>>9" INITIAL 0 LABEL "Antal"       
   FIELD KTYPKOD   AS CHARACTER FORMAT "X(10)"                    
   FIELD KOD       AS CHARACTER FORMAT "X(12)" LABEL "Kod"   
   INDEX KOD IS PRIMARY KTYPKOD KOD.
DEFINE TEMP-TABLE mtrl_temp2   
   {MTRLTEMP2TT.I}

DEFINE SHARED VARIABLE lin_rowid AS ROWID NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE chExcelApplication      AS COM-HANDLE.
DEFINE VARIABLE chWorkbook              AS COM-HANDLE.
DEFINE VARIABLE chWorksheet             AS COM-HANDLE.
DEFINE VARIABLE chChart                 AS COM-HANDLE.
DEFINE VARIABLE chWorksheetRange        AS COM-HANDLE.
DEFINE VARIABLE iCount                  AS INTEGER.
DEFINE VARIABLE iIndex                  AS INTEGER.
DEFINE VARIABLE iMonth                  AS INTEGER.
DEFINE VARIABLE dAnnualQuota            AS DECIMAL.
DEFINE VARIABLE dTotalSalesAmount       AS DECIMAL.
DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.
DEFINE VARIABLE cRange                  AS CHARACTER.
DEFINE VARIABLE radnrS                  AS CHARACTER.
DEFINE VARIABLE pristext                AS CHARACTER.
DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vkab AS CHARACTER NO-UNDO.
DEFINE VARIABLE vkabstl AS CHARACTER NO-UNDO.
DEFINE VARIABLE sidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE sidvarh AS INTEGER NO-UNDO.
DEFINE VARIABLE bilnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE antfri AS INTEGER NO-UNDO.
DEFINE VARIABLE blistapph AS HANDLE NO-UNDO.
DEFINE VARIABLE medmedd AS CHARACTER NO-UNDO.   
DEFINE VARIABLE mprisvar AS INTEGER NO-UNDO.
DEFINE VARIABLE mvalort AS CHARACTER NO-UNDO. 
DEFINE VARIABLE svar AS LOGICAL NO-UNDO.
&Scoped-define NEW 
&Scoped-define SHARED SHARED
{KONSTRMTRL.I}
{KONVALTEMP.I}
{LISTMTRL.I}
{KONID.I}   
{FRITEMP.I} 
{BERSKAP.I}
{MARKGRUPP.I}
{HOPPSEK2W.I}
DEFINE BUFFER kon_valbuff FOR kon_val.   
DEFINE BUFFER kn_valbuff FOR kon_val.   
DEFINE INPUT PARAMETER sortvar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER mall AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR list_mtrl.
DEFINE INPUT PARAMETER TABLE FOR kon_id.
DEFINE INPUT PARAMETER TABLE FOR fri_temp.
DEFINE INPUT PARAMETER TABLE FOR kon_val.
DEFINE INPUT PARAMETER TABLE FOR konstvaltemp.
DEFINE INPUT PARAMETER TABLE FOR berskaptemp.
{GLOBVAR2DEL1.I}  
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
DEFINE TEMP-TABLE blandnamntemp NO-UNDO
   FIELD NAMN AS CHARACTER.
{FLBERTEMP.I}

IF mall = 5 THEN DO:   
   /*allmän kabelskåp*/
   antfri = 0.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:             
      antfri = antfri + 1.
   END.
   IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
      /*kabelskåpskort med grupp*/
      IF antfri LE 12 THEN ASSIGN fnamn = "KABELSKAPSKORTEG.xls".   
      ELSE ASSIGN fnamn = "KABELSKAPSKORTESG.xls".   
   END.
   ELSE DO:
      IF Guru.Konstanter:globforetag = "nylb" THEN DO:
         /*utan elpool's logga*/
         IF antfri LE 12 THEN ASSIGN fnamn = "KABELSKAPSKORTU.xls".   
         ELSE ASSIGN fnamn = "KABELSKAPSKORTUS.xls".
      END.
      ELSE DO:      
         IF antfri LE 12 THEN ASSIGN fnamn = "KABELSKAPSKORTE.xls".   
         ELSE ASSIGN fnamn = "KABELSKAPSKORTES.xls".
      END.      
   END.
   sidvar = 1.
END.
IF mall = 6 THEN DO:       
   /*allmän med flikar*/
   svar = FALSE.
   MESSAGE "Vill Ni att materielsammanställning för konstruktionen också skall visas?"
   VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE svar.   
   antfri = 0.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:             
      antfri = antfri + 1.
   END.   
   IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
      /*kabelskåpskort med grupp*/      
      IF antfri LE 12 THEN ASSIGN fnamn = "KABELSKAPSKORTEG.xls".   
      ELSE ASSIGN fnamn = "KABELSKAPSKORTESG.xls".   
   END.
   ELSE DO:      
      IF antfri LE 12 THEN fnamn = "KABELSKAPSKORTE.xls".
      ELSE ASSIGN fnamn = "KABELSKAPSKORTES.xls".   
   END.
   sidvar = 1.
END.
slutradlsp = 26.

IF mall = 12 THEN DO: 
   /*vattenfall markstation*/   
   fnamn = "ABB Nstn.xlsx".
   slutradlsp = 27.
   sidvar = 5.
   sidvarh = 2.
END.
IF mall = 13 THEN DO: 
   /*vattenfall markstation*/
   /*fnamn = "Rörlask.xls".*/
   /*bytt namn 20191127*/   
   fnamn = "SS2 utan frånskiljare.xls".
   slutradlsp = 26.
   sidvar = 4.
   sidvarh = 2.
END.
IF mall = 14 THEN DO: 
   /*vattenfall markstation*/   
   /*fnamn = "KL Rörlask.xls".*/
   /*bytt namn 20191127*/
   fnamn = "SS2 med frånskiljare.xls".
   slutradlsp = 26.
   sidvar = 4.
   sidvarh = 2.
END.
IF mall = 15 THEN DO: 
   /*vattenfall markstation*/   
   fnamn = "Magnifix.xls".
   slutradlsp = 26.
   sidvar = 4.
   sidvarh = 2.
END.
IF mall = 44 THEN DO: 
   /*vattenfall markstation*/   
   fnamn = "Hsp Luftisolerade Lastfrånskiljare.xlsx".
   slutradlsp = 26.
   sidvar = 5.
   sidvarh = 2.
END.
IF mall = 45 THEN DO: 
   /*vattenfall markstation*/   
   fnamn = "Kopplingsstn HSP Xiria_ NAL.xls".
   slutradlsp = 26.
   sidvar = 2.
   sidvarh = 3.
END.
IF mall = 46 THEN DO: 
   /*vattenfall markstation*/   
   fnamn = "Kopplingsstn Magnifix_ Kopplingsskåp.xls".
   slutradlsp = 26.   
   sidvarh = 1.
END.

IF mall = 17 THEN DO: 
   /*vattenfall markstation*/
   fnamn = "Xiria.xls".   
   slutradlsp = 26.
   sidvar = 5.
   sidvarh = 2.
END.
IF mall = 32 THEN DO: 
   /*vattenfall markstation*/
   fnamn = "unerRing.xls".
   slutradlsp = 26.   
   sidvar = 5.
   sidvarh = 2.
END.
IF mall = 18 THEN DO: 
   /*vattenfall stolpstation ny*/
   fnamn = "Stolpstation.xls".
   sidvar = 2.
END.
IF mall = 22 THEN DO:       
   /*fortum*/   
   ASSIGN   
   fnamn = "KskFortumExc.xls".   
   sidvar = 1.
END.
IF mall = 23 THEN DO: 
   /*fortum kabelskåpskort från listor . Skapar flera ark med kort i samma om man markerat flera kabelskåp*/
   ASSIGN
   fnamn = "KskFortumExc.xls"
   sidvar = 1.
END.
IF mall = 24 THEN DO:       
   /*Ny VATTENFALL tidigare 7*/   
   ASSIGN fnamn = "KSKLSP.xls".   
   sidvar = 1.
END.

IF mall = 25 THEN DO: 
   /*nykabelskåpskort från listor . Skapar flera ark med kort i samma om man markerat flera kabelskåp  tidigare 8*/
   ASSIGN
   fnamn = "KSKLSP.xls"
   sidvar = 1.
END.
IF mall = 27 THEN DO: 
   /*allmän MARKSTATION ny*/
   ASSIGN            
   fnamn = "MARKSTATIONEn3.xls"
   sidvar = 2.
END.
IF mall = 41 THEN DO:       
   /*Infratek ksk- Ellvio ccc*/   
   ASSIGN   
   fnamn = "KskEllevio.xlsx".   
   sidvar = 1.
END.
IF mall = 43 THEN DO:       
   /*Infratek ksk- Ellvio   flikar*/   
   ASSIGN   
   fnamn = "KskEllevio.xlsx".   
   sidvar = 1.
END.
IF mall = 42 THEN DO:       
   /*Infratek stn- Ellvio ccc*/   
   ASSIGN   
   fnamn = "StnEllevio.xlsx".   
   sidvar = 1.
END.
IF mall = 40 THEN DO: 
   /*MARKSTATION Kraftringen*/
   ASSIGN            
   fnamn = "StnKraftringen.xlsX"
   sidvar = 1.
END.
DEBUGGER:SET-BREAK().
IF mall = 30 THEN DO: 
   /*kabelskåp eon-es  nästan samma som 5 */
   antfri = 0.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:             
      antfri = antfri + 1.
   END.
   IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
      /*kabelskåpskort med grupp*/
      IF antfri LE 12 THEN ASSIGN fnamn = "KSKES.xls".   
      ELSE ASSIGN fnamn = "KSKESM.xls".   
   END.   
   sidvar = 1.
END.
IF mall = 31 THEN DO:       
   /*kabelskåp eon-es med flikar  nästan samma som 6*/
   svar = FALSE.
   MESSAGE "Vill Ni att materielsammanställning för konstruktionen också skall visas?"
   VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE svar.   
   antfri = 0.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM:             
      antfri = antfri + 1.
   END.   
   IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
      /*kabelskåpskort med grupp*/      
      IF antfri LE 12 THEN ASSIGN fnamn = "KSKES.xls".   
      ELSE ASSIGN fnamn = "KSKESM.xls".      
   END.   
   sidvar = 1.
END.
IF mall = 35 THEN DO: 
   /* kabelskåp Kraftringen - från allmänt*/
   ASSIGN fnamn = "KABELSKAPSKORTKRING.xlsx".         
   sidvar = 1.   
END.
IF mall = 36 THEN DO: 
   /* kabelskåp Kraftringen - EGET*/
   ASSIGN fnamn = "KskKraftringen.xlsx".         
   sidvar = 1.   
END.
IF mall = 50 THEN DO:       
   /*C4EN ksk*/   
   ASSIGN   
   fnamn = "KskC4Elnät.xlsx".   
   sidvar = 1.
END.

IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   {FINNSDYNBLOB.I} 
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.   
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).      
   IF resid = ? THEN kommando = SEARCH(fnamn).
   ELSE DO:      
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.      
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).
   END.
   RUN deleteproc_UI IN blobproch.
   IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.
END.
ELSE kommando = SEARCH(fnamn).       
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.  
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN kommando2 = webclienttempdir.
OS-CREATE-DIR VALUE(kommando2) NO-ERROR.
IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
   kommando2 = kommando2 + fnamn.
END.
ELSE DO:
   kommando2 = kommando2 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn.
END.
OS-COPY VALUE(kommando) VALUE(kommando2).
kommando = kommando2.
IF Guru.Konstanter:appcon THEN DO:
   RUN BLISTAPP1.P PERSISTENT SET blistapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN BLISTAPP1.P PERSISTENT SET blistapph.
END.
CREATE "Excel.Application" chExcelApplication.
chExcelApplication:Visible = TRUE NO-ERROR.
link = ?.
/*FOREBILDER*/
{LOGGOR.I}
{OPENEXCEL.I}
chWorkbook = chExcelApplication:Workbooks:OPEN(kommando)  NO-ERROR.
chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.        


IF mall = 5 OR mall = 30 THEN DO: 
   IF link NE ? THEN DO:
      IF Guru.Konstanter:globforetag = "gran" OR Guru.Konstanter:globforetag = "NAEK" OR Guru.Konstanter:globforetag = "LIMO" OR Guru.Konstanter:globforetag = "Celpa"  OR Guru.Konstanter:globforetag = "CPOMA"  THEN DO:         
         RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).
         ASSIGN 
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "BI" + cColumn.         
      END.           
      ELSE DO:
          IF Guru.Konstanter:globforetag = "ELKB" THEN totheight = 22. 
          ELSE IF Guru.Konstanter:globforetag = "ORBI" THEN DO:
             totheight = 4.
             colin = 470.
          END.
          ELSE IF Guru.Konstanter:globforetag = "HANA" THEN DO:
             totheight = 0.
             colin = 470.
          END.   
          RUN imageexcel_UI (INPUT link,INPUT "AY",INPUT 1, INPUT colin).
          colin = 500.
          totheight = 0.
          ASSIGN 
          iColumn = 1
          cColumn = STRING(iColumn)
          cRange = "A" + cColumn.
       END.           
   END.
   ELSE DO:
      ASSIGN
      iColumn = 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
   END.   
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "K" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
      ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "AO" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      {EXCELFEL2.I}
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.
   /*eones vill ej ha datum och sign*/
   IF mall = 30 THEN.
   ELSE DO:   
      ASSIGN
      iColumn = 36
      cColumn = STRING(iColumn)
      cRange = "BJ" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "AY" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   {EXCELFEL2.I}
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)            
      cRange = "AE" + cColumn.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
      END.         
   END.   
   {EXCELFEL2.I}
   DEBUGGER:SET-BREAK().   
   radrakn = 11.
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                 
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn.
         IF antfri > 12 THEN anradrakn = radrakn + 19.
         ASSIGN
         cColumn = STRING(iColumn).
         IF mall = 5 THEN cRange = "AY" + cColumn.
         ELSE cRange = "AT" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.SAKR > 0 THEN DO:
            IF mall = 5 THEN  cRange = "BN" + cColumn.
            ELSE cRange = "BO" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_temp.SAKR).              
         END.   
         IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
            FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
            IF AVAILABLE markgrupp THEN DO: 
               ASSIGN
               cRange = "C" + cColumn.
               RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).           
            END.            
            ASSIGN
            cRange = "E" + cColumn.
            IF fri_temp.BENAMNING = "Tom"  THEN.
            ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).
         END.
         ELSE DO:         
            ASSIGN
            cRange = "C" + cColumn.
            IF fri_temp.BENAMNING = "Tom"  THEN.
            ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).
         END.
         IF mall = 5 THEN cRange = "U" + cColumn.
         ELSE cRange = "S" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.TYP).
         IF mall = 5 THEN cRange = "AE" + cColumn.
         ELSE cRange = "Z" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.APPARAT).
         IF mall = 5 THEN cRange = "BP" + cColumn.
         ELSE cRange = "BQ" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
         IF mall = 5 THEN cRange = "Z" + cColumn.
         ELSE cRange = "W" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.METER)).                      
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.ANMARK).
         IF mall = 5 THEN DO:    
            IF kon_val.TYP = 1 OR kon_val.TYP = 2 OR kon_val.TYP = 3 THEN DO:               
               FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND list_mtrl.SKAPNUM = kon_val.SKAPNUM AND list_mtrl.TYPBER = TRUE  USE-INDEX NUM2 NO-LOCK NO-ERROR.
               IF AVAILABLE list_mtrl THEN DO:               
                  link = Guru.Konstanter:gurubilder + "typ" + STRING(kon_val.TYP) + ".bmp".
                  imageKtypi = imageKtypi + 1.
                  RUN imageKtyp_UI (INPUT link,INPUT "a",INPUT 37).
               END.                      
            END.
         END.          
      END.     
      {EXCELFEL2.I}
      GET NEXT ftq.
   END.
   iColumn = 1. 
   RUN flikmtrl_UI.      
END.
ELSE IF mall = 6 OR mall = 31 THEN DO:    
   IF link NE ? THEN DO:
      IF Guru.Konstanter:globforetag = "gran" OR Guru.Konstanter:globforetag = "NAEK" OR Guru.Konstanter:globforetag = "LIMO" OR Guru.Konstanter:globforetag = "elpa"  OR Guru.Konstanter:globforetag = "CPOMA"  THEN DO:
          RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).
          ASSIGN
          iColumn = 1
          cColumn = STRING(iColumn)
          cRange = "BL" + cColumn.
      END.            
      ELSE DO:
         RUN imageexcel_UI (INPUT link,INPUT "AY",INPUT 1, INPUT 500).
         ASSIGN
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
      END.            
   END.
   ELSE DO:
      ASSIGN
      iColumn = 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
   END.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   antskap = 0.      
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.GRUPP = 0:
      antskap = antskap + 1.         
   END.
   hjantskap = 2.
   IF antskap > 1 THEN DO:
      REPEAT:         
         IF hjantskap > antskap THEN LEAVE.            
         sidvar = hjantskap - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantskap = hjantskap + 1.
         {EXCELFEL2.I}
      END.
   END.      
   sidvar = 1.   
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.GRUPP = 0 BY kon_val.ID:
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.        
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Kabelskåp Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
      ELSE bilnamn = "Kabelskåp Id " + STRING(kon_val.ID2).          
      RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
      chWorkSheet:Name = bilnamn NO-ERROR.         
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      skapstorlek = 0.               
      FOR EACH kn_valbuff WHERE kn_valbuff.NUM = kon_id.NUM USE-INDEX NUM:       
         FOR EACH list_mtrl WHERE list_mtrl.NUM = kn_valbuff.NUM AND
         list_mtrl.SKAPNUM = kn_valbuff.SKAPNUM USE-INDEX NUM2:
            IF list_mtrl.TYPBER = TRUE THEN DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kn_valbuff.TYP).               
            END.
            ELSE DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.               
            END.   
         END.      
         IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
            IF kon_val.F2 = "BEF" THEN DO:
               IF kon_val.F1 BEGINS "CDC"  OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
               IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
            END.
         END.
      END.         
      {EXCELFEL2.I}
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp THEN DO:         
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).                     
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.         
         IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "AO" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            iColumn = 8
            cColumn = STRING(iColumn)
            cRange = "K" + cColumn.               
            IF kon_valbuff.F1 BEGINS "CDC" OR kon_valbuff.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
            IF kon_valbuff.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
            IF kon_valbuff.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").           
         END.
      END.      
      {EXCELFEL2.I}
      /*eones vill ej ha datum och sign*/
      IF mall = 31 THEN.
      ELSE DO:      
         ASSIGN
         iColumn = 36
         cColumn = STRING(iColumn)
         cRange = "BJ" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).         
         cRange = "AY" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).
      END.
      FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
      list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
      IF AVAILABLE list_mtrl THEN DO:         
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)            
         cRange = "AE" + cColumn.
         FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
         NO-LOCK NO-ERROR.   
         IF AVAILABLE fri_temp  THEN DO:
            FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
            kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
            IF AVAILABLE kon_val THEN DO:
               IF kon_valbuff.F1 BEGINS "CDC" OR kon_valbuff.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                           
               IF kon_valbuff.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                           
               IF kon_valbuff.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                           
            END.
         END.         
      END.   
      {EXCELFEL2.I}
      DEBUGGER:SET-BREAK().
      radrakn = 11.
      IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
      ELSE OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
      GET FIRST ftq.
      DO WHILE AVAILABLE(fri_temp):            
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:           
            ASSIGN
            radrakn = (radrakn + 1)
            anradrakn = radrakn + 13
            iColumn = radrakn
            cColumn = STRING(iColumn).            
            IF mall = 6 THEN cRange = "AY" + cColumn.
            ELSE cRange = "AT" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.KABADR).
            IF fri_temp.SAKR > 0 THEN DO:
               IF mall = 6 THEN  cRange = "BN" + cColumn.
               ELSE cRange = "BO" + cColumn.               
               RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SAKR).                 
            END.           
            IF Guru.Konstanter:varforetypval[34] = 1 THEN DO:
               FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
               IF AVAILABLE markgrupp THEN DO: 
                  ASSIGN
                  cRange = "C" + cColumn.
                  RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).           
               END.
               ASSIGN
               cRange = "E" + cColumn.
               IF fri_temp.BENAMNING = "Tom"  THEN.
               ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).
            END.
            ELSE DO:         
               ASSIGN
               cRange = "C" + cColumn.
               IF fri_temp.BENAMNING = "Tom"  THEN.
               ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).
            END.
            IF mall = 6 THEN cRange = "U" + cColumn.
            ELSE cRange = "S" + cColumn.            
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.TYP).            
            IF mall = 6 THEN cRange = "AE" + cColumn.
            ELSE cRange = "Z" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.APPARAT).            
            IF mall = 6 THEN cRange = "BP" + cColumn.
            ELSE cRange = "BQ" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
            IF mall = 6 THEN cRange = "Z" + cColumn.
            ELSE cRange = "W" + cColumn.                          
            IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.METER)).   
            ASSIGN
            iColumn = anradrakn
            cColumn = STRING(iColumn)
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.ANMARK).  
            IF mall = 6 THEN DO:    
               IF kon_val.TYP = 1 OR kon_val.TYP = 2 OR kon_val.TYP = 3 THEN DO:
                  FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND list_mtrl.SKAPNUM = kon_val.SKAPNUM AND list_mtrl.TYPBER = TRUE  USE-INDEX NUM2 NO-LOCK NO-ERROR.
                  IF AVAILABLE list_mtrl THEN DO:               
                     link = Guru.Konstanter:gurubilder + "typ" + STRING(kon_val.TYP) + ".bmp".
                     imageKtypi = imageKtypi + 1.
                     RUN imageKtyp_UI (INPUT link,INPUT "a",INPUT 37).
                  END.                      
               END.
            END.        
            {EXCELFEL2.I}
         END.  
         GET NEXT ftq.        
      END.       
      IF svar = TRUE THEN DO:         
         IF antfri LE 12 THEN iColumn = 41. 
         ELSE iColumn = 53. 
         RUN flikmtrl2_UI.
      END.
      RELEASE OBJECT chWorksheet NO-ERROR. 
      sidvar = sidvar + 1.
   END.
END.

IF mall = 35  THEN DO:
   /*KRAFTRINGEN KABELSKÅPSKORT*/         
   ASSIGN
   iColumn = 1
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "K" + cColumn.      
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
      ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "AO" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      {EXCELFEL2.I}
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.           
   END.   
   ASSIGN
   iColumn = 36
   cColumn = STRING(iColumn)
   cRange = "BJ" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "AY" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).

   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   {EXCELFEL2.I}
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)            
      cRange = "AE" + cColumn.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
      END.         
   END.   
   {EXCELFEL2.I}
   radrakn = 11.
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                 
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:                   
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn.         
         ASSIGN
         cColumn = STRING(iColumn)
         cRange = "AQ" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_temp.SAKR).              
         END.            
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).           
         END.
         ASSIGN
         cRange = "E" + cColumn.
         IF fri_temp.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).         
         cRange = "Q" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.TYP).
         cRange = "Y" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.APPARAT).
         cRange = "BP" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
         ASSIGN
         cRange = "U" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.METER)).                      
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.ANMARK).           
      END.     
      {EXCELFEL2.I}
      GET NEXT ftq.
   END.
   iColumn = 1. 
   RUN flikmtrl_UI.
       
END.

IF mall = 36  THEN DO:
   /*KRAFTRINGEN KABELSKÅPSKORT eget 20150914*/         
   ASSIGN
   iColumn = 1
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "H" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).      
      DEBUGGER:SET-BREAK().      
      pos2 = LENGTH(fri_temp.SKAPADR).
      pos = 1.
      DO WHILE pos <= pos2:
         pos = pos + 1.
         RUN isSiffra_UI (INPUT SUBSTRING(fri_temp.SKAPADR,pos,1),OUTPUT artecken).
         IF artecken = TRUE THEN LEAVE.
      END.    
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "I" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_temp.SKAPADR,1,(pos - 1))).
      IF pos LE pos2 THEN DO:
         ASSIGN
         iColumn = 2
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_temp.SKAPADR,pos)).
      END.      
      ASSIGN
      iColumn = 4
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
      ASSIGN
      iColumn = 4
      cColumn = STRING(iColumn)
      cRange = "I" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      {EXCELFEL2.I}
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 4
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.            
   END.   
   ASSIGN
   iColumn = 45
   cColumn = STRING(iColumn)
   cRange = "G" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "A" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).      
   {EXCELFEL2.I}
   radrakn = 7.
   forraadress = "".
   DEBUGGER:SET-BREAK().
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                 
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:                    
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 19
         iColumn = radrakn.    
         ASSIGN         
         cColumn = STRING(iColumn)
         cRange = "I" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.KABADR).         
         IF forraadress NE "" AND forraadress = fri_temp.KABADR THEN DO:
            ASSIGN            
            cColumn = STRING(iColumn)
            cRange = "E" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(2)).
            ASSIGN 
            iColumn = radrakn - 1
            cColumn = STRING(iColumn)
            cRange = "E" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(1)).
            iColumn = radrakn.
            cColumn = STRING(iColumn).
         END.     
         forraadress = fri_temp.KABADR.         
         hjsakr = LEFT-TRIM(kon_val.F5).         
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "D" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  LEFT-TRIM(kon_val.F5)).
         END.
         
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "A" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).
            cRange = "H" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.ABONNENT).           
         END.
         ASSIGN
         cRange = "F" + cColumn.
         IF fri_temp.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.BENAMNING).                  
         cRange = "K" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.TYP).
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.APPARAT).
         ASSIGN
         cRange = "G" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.METER)).            
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn).  
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO:             
            cRange = "A" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).                    
         END.                             
         cRange = "B" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.ANMARK).                    
      END.     
      {EXCELFEL2.I}
      GET NEXT ftq.
   END.
   iColumn = 1. 
   RUN flikmtrl_UI.       
END.
ELSE IF mall = 12 THEN DO: 
   RUN mall10_UI.
END.
ELSE IF mall = 13 OR mall = 14 THEN DO: 
   RUN mall10_UI.
END.
ELSE IF mall = 15 OR mall = 44 THEN DO: 
   RUN mall10_UI.
END.
ELSE IF mall = 17 OR mall = 32 THEN DO: 
   RUN mall10_UI.
END.
ELSE IF mall = 18 THEN DO: 
   RUN mall18_UI.
END.
ELSE IF mall = 22 THEN DO: 
   RUN mall22_UI.
END.
ELSE IF mall = 23 THEN DO: 
   RUN mall23_UI.
END.
ELSE IF mall = 24 THEN DO: 
   RUN mall24_UI.
END.
ELSE IF mall = 25 THEN DO: 
   RUN mall25_UI.
END.
/*ELSE IF mall = 26 THEN DO: 
   RUN mall26_UI.
END.*/
ELSE IF mall = 27 THEN DO: 
   RUN mall27_UI.
END.
ELSE IF mall = 41 THEN DO: 
   RUN mall41_UI.
END.
ELSE IF mall = 43 THEN DO: 
   RUN mall43_UI.
END.
ELSE IF mall = 40 THEN DO: 
   RUN mall40_UI.
END.
ELSE IF mall = 42 THEN DO: 
   RUN mall42_UI.
END.
ELSE IF mall = 45 OR mall = 46 THEN DO: 
   RUN mall45_UI.
END.
ELSE IF mall = 50 THEN DO: 
   RUN mall50_UI.
END.

RELEASE OBJECT chExcelApplication NO-ERROR.      
RELEASE OBJECT chWorkbook NO-ERROR.
RELEASE OBJECT chWorksheet NO-ERROR.      
IF VALID-HANDLE(blistapph) THEN DELETE PROCEDURE blistapph.

PROCEDURE imageKtyp_UI.
   DEFINE INPUT PARAMETER link AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vilkencol AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER inrow AS INTEGER NO-UNDO.   
   IF antfri LE 12 THEN .
   ELSE inrow = 49.
   IF imageKtypi > 4 THEN RETURN.
   DEFINE VARIABLE cRad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE bild AS CHARACTER NO-UNDO.
   cRange = vilkencol + STRING(inrow).  
   chWorkSheet:Rows(cRange):SELECT NO-ERROR.
   DEBUGGER:SET-BREAK().
   IF imageKtypi > 1 THEN DO:
      IF imageKtypi = 2 THEN cRange = "N" + STRING(inrow).
      IF imageKtypi = 3 THEN cRange = "AB" + STRING(inrow).
      IF imageKtypi = 4 THEN cRange = "AM" + STRING(inrow).      
   END.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 9,INPUT STRING(fri_temp.KABNR) + " " + fri_temp.TYP + " " + fri_temp.BENAMNING).
   IF imageKtypi = 1 THEN DO:
      totheigtKtyp = (chWorkSheet:Range(cRange):RowHeight) * (inrow) NO-ERROR. 
      chWorkSheet:Range(cRange):RowHeight = 40.
      chWorkSheetRange = chWorkSheet:Pictures:INSERT(link)  NO-ERROR.
      chWorkSheetRange:TOP = totheigtKtyp  NO-ERROR.
      chWorkSheetRange:LEFT = 85 * imageKtypi NO-ERROR.
   END.
   ELSE DO:
      chWorkSheetRange = chWorkSheet:Pictures:INSERT(link)  NO-ERROR.
      chWorkSheetRange:TOP = totheigtKtyp  NO-ERROR.
      chWorkSheetRange:LEFT = 110 * imageKtypi NO-ERROR.
   END.   
   RELEASE OBJECT chWorkSheetRange NO-ERROR.
   chWorkSheetRange = ?.   
   chExcelApplication:VISIBLE = TRUE NO-ERROR.  
   IF cRad = "1" THEN cRad = "0".
   {EXCELFEL.I}
END PROCEDURE.

   
PROCEDURE imageexcel_UI.
   DEFINE INPUT PARAMETER link AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vilkencol AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER inrow AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER incol AS INTEGER NO-UNDO.
   DEFINE VARIABLE cRad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE bild AS CHARACTER NO-UNDO.
   
   cRad = STRING(inrow).
   IF cRad = "" THEN DO:
      ASSIGN cRad = "1".
   END.  
   IF totheight = 0 THEN totheight = 1.      
   bild  = vilkencol + cRad.      
   chWorkSheet:range(bild):SELECT NO-ERROR. 
   chWorkSheetRange = chWorkSheet:Pictures:INSERT(link)  NO-ERROR.
   chWorkSheetRange:TOP = totheight  NO-ERROR.
   chWorkSheetRange:LEFT = incol NO-ERROR.
   RELEASE OBJECT chWorkSheetRange NO-ERROR.
   chWorkSheetRange = ?.
   chExcelApplication:VISIBLE = TRUE NO-ERROR.  
   IF cRad = "1" THEN cRad = "0".
   {EXCELFEL.I}
END PROCEDURE.


PROCEDURE bladnamn_UI :
   DEFINE INPUT-OUTPUT PARAMETER inblad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgblad AS CHARACTER NO-UNDO.
   orgblad = inblad.
   i = 1.
   REPEAT:
      FIND FIRST blandnamntemp WHERE blandnamntemp.NAMN = inblad NO-LOCK NO-ERROR.
      IF NOT AVAILABLE blandnamntemp THEN DO:
         CREATE blandnamntemp.
         blandnamntemp.NAMN = inblad.
         LEAVE.
      END.
      i = i + 1.
      inblad = orgblad + " (" + STRING(i) + ")".  
   END.
END PROCEDURE.
PROCEDURE utexcel_UI :
   DEFINE INPUT PARAMETER typsnitt AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER storlek AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER varde AS CHARACTER NO-UNDO.
   IF varde = "" THEN RETURN.
   IF varde = ? THEN RETURN.
   ASSIGN
   chWorkSheet:Range(cRange):Font:NAME = typsnitt NO-ERROR.
   chWorkSheet:Range(cRange):Font:SIZE = storlek  NO-ERROR.
   chWorkSheet:Range(cRange):Value = varde NO-ERROR.  
   {EXCELFEL.I}
END PROCEDURE.


PROCEDURE mall10_UI :
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.        
   ASSIGN
   iColumn = 35.
   IF mall = 12 THEN iColumn = 36.
   IF mall = 44 THEN iColumn = 36.
   ASSIGN
   cColumn = STRING(iColumn)
   cRange = "AW" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "AQ" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   radrakn = 14.
   IF mall = 12 THEN radrakn = 15.
   IF mall = 44 THEN radrakn = 15.   
   {EXCELFEL2.I}
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                
      IF fri_temp.LSP = 2 THEN.
      ELSE DO:      
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:            
            ASSIGN
            radrakn = (radrakn + 1)
            iColumn = radrakn.
            IF radrakn LE slutradlsp THEN DO:
               ASSIGN
               cColumn = STRING(iColumn)
               cRange = "D" + cColumn.
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
               IF fri_temp.SAKR > 0 THEN DO:
                  ASSIGN
                  cRange = "AV" + cColumn.
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR)).              
               END.                 
               IF mall = 12 OR mall = 13 OR mall = 14 OR mall = 15  OR mall = 17 OR mall = 32 OR mall = 44 THEN DO:
                  ASSIGN
                  cRange = "X" + cColumn.
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
               END.
               ELSE DO:         
                  ASSIGN
                  cRange = "Y" + cColumn.
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
               END.
               cRange = "AJ" + cColumn.
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT  kon_val.F3).
               cRange = "AQ" + cColumn.
               hjsakr = LEFT-TRIM(kon_val.F4).                       
               IF hjsakr  BEGINS "D"  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").         
               ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").         
               ASSIGN
               cRange = "BB" + cColumn.
               IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER) + "m " + fri_temp.ANMARK).
               ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).
               ASSIGN
               cRange = "AZ" + cColumn.
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "I").                
            END.
         END.             
      END.
      {EXCELFEL2.I}
      GET NEXT ftq.
   END. 
   /*HSP*/   
   chWorkSheet = chExcelApplication:Sheets:Item(sidvarh)  NO-ERROR.
   IF mall = 12 THEN DO: 
      iColumn = 31.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BF" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BS" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF mall = 13  THEN DO: 
      iColumn = 32.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BI" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BX" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF  mall = 14 THEN DO: 
      iColumn = 33.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BI" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BX" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF mall = 15 THEN DO: 
      iColumn = 33.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BI" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BT" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF mall = 44 THEN DO: 
      iColumn = 31.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BF" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BS" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF mall = 17 OR mall = 32 THEN DO: 
      iColumn = 35.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BG" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BT" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.      
   radrakn = 13.
   IF mall = 17 OR mall = 32 OR mall = 44 THEN radrakn = 14.
   IF mall = 12 THEN radrakn = 14.
   IF mall = 13 OR mall = 14 THEN radrakn = 15.
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM AND fri_temp.LSP = 2 USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM AND fri_temp.LSP = 2 USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                      
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:                  
         ASSIGN
         radrakn = (radrakn + 1)
         iColumn = radrakn
         cColumn = STRING(iColumn).                 
         IF mall = 12   THEN DO:
            cRange = "BC" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BL" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.
         ELSE IF  mall = 13 OR mall = 14   THEN DO:
            cRange = "BD" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BL" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.      
         ELSE IF mall = 15   THEN DO:
            cRange = "AQ" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BH" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.
         ELSE IF mall = 44   THEN DO:
            cRange = "BC" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BL" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.      
         ELSE IF mall = 17  THEN DO:
            cRange = "AE" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "AT" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
            ASSIGN
            cRange = "BG" + cColumn.
            IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER) + "m " + fri_temp.ANMARK).
            ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).            
         END.
         ELSE IF  mall = 32  THEN DO:
            cRange = "AY" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).                  
         END.                
      END.                
      {EXCELFEL2.I}
      GET NEXT ftq.
   END.    
  /*alla mallar har gemensamdata 20192228*/ 
   /*gemensam data*/
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.
   chWorkSheet = chExcelApplication:Sheets:Item(1)  NO-ERROR. 
   iColumn = 2.
   ASSIGN
   cColumn = STRING(iColumn)
   cRange = "c" + cColumn.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
END PROCEDURE.

PROCEDURE mall45_UI :
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.          
   /*HSP*/      
   IF mall = 45 THEN DO: 
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.
      iColumn = 35.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "AQ" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "AW" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   IF mall = 46  THEN DO: 
      chWorkSheet = chExcelApplication:Sheets:Item(sidvarh)  NO-ERROR.
      iColumn = 32.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "BI" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "BT" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   END.
   chWorkSheet = chExcelApplication:Sheets:Item(sidvarh)  NO-ERROR.      
   IF mall = 45  THEN radrakn = 10.
   IF mall = 46  THEN radrakn = 13.   
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM AND fri_temp.LSP = 2 USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM AND fri_temp.LSP = 2 USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):                      
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:                  
         ASSIGN
         radrakn = (radrakn + 1)
         iColumn = radrakn
         cColumn = STRING(iColumn).                              
         IF mall = 45  THEN DO:
            cRange = "D" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "U" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.            
         ELSE IF mall = 46   THEN DO:
            cRange = "AD" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            ASSIGN
            cRange = "BE" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         END.         
      END.                
      {EXCELFEL2.I}
      GET NEXT ftq.
   END. 
   IF mall = 45  THEN DO:   
      /*gemensam data*/
      FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.
      chWorkSheet = chExcelApplication:Sheets:Item(1)  NO-ERROR. 
      iColumn = 2.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "c" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).
   END.
   IF mall = 46  THEN DO:   
      /*har ej gemensam data*/
      FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.      
      iColumn = 6.
      ASSIGN
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).
   END.                
END PROCEDURE.

PROCEDURE mall18_UI :   
   chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.      
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:        
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 11
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
   END.
   hjrakn = 0.
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
      hjrakn = hjrakn + 1.
   END.         
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
   EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
      CREATE bskaptemp.
      BUFFER-COPY berskaptemp TO bskaptemp.
      ASSIGN bskaptemp.antal = 1.
   END.
   FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
      ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
      IF LAST-OF(bskaptemp.KOD) THEN DO:
         CREATE bsktemp.
         ASSIGN 
         bsktemp.KOD = bskaptemp.KOD         
         bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
         bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
      END.     
   END.      
   FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
   IF AVAILABLE bsktemp THEN DO:
      ASSIGN
      iColumn = 11
      cColumn = STRING(iColumn)
      cRange = "P" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT bsktemp.KOD).         
   END.
   {EXCELFEL2.I}
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.
   ASSIGN
   iColumn = 38
   cColumn = STRING(iColumn)
   cRange = "AW" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   ASSIGN
   iColumn = 40
   cColumn = STRING(iColumn)   
   cRange = "AW" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   {EXCELFEL2.I}
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 25
      cColumn = STRING(iColumn)            
      cRange = "AW" + cColumn.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS  "GEVEA" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " + STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
      END.         
   END.
   radrakn = 15.
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):         
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         radrakn = (radrakn + 1)
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "D" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "AV" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR)).              
         END.         
         ASSIGN
         cRange = "Y" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         cRange = "AK" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_val.F3).
         cRange = "AQ" + cColumn.
         hjsakr = LEFT-TRIM(kon_val.F5).                       
         IF hjsakr  BEGINS "D"  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").         
         ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").         
         ASSIGN
         cRange = "BB" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER) + "m " + fri_temp.ANMARK).
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT  fri_temp.ANMARK).
         ASSIGN
         cRange = "AZ" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "I").                
         {EXCELFEL2.I}
      END.    
      GET NEXT ftq.      
   END. 
END PROCEDURE.

PROCEDURE mall22_UI :   
   IF link NE ? THEN DO:
      totheight = 10.
      RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).        
      totheight = 0.
   END.   
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_id THEN DO:       
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "B" + cColumn.   
      chWorkSheet:Range(cRange):NumberFormat = "@".      
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
      ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI2).               
      {EXCELFEL2.I}
   END.
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:  
      ASSIGN
      iColumn = 7
      cColumn = STRING(iColumn)
      cRange = "B" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
      {EXCELFEL2.I}            
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 7
         cColumn = STRING(iColumn)
         cRange = "E" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB").
         IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
         IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
         IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR  kon_val.F1 BEGINS "Kabeldon"  THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.
   hjrakn = 0.
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
      hjrakn = hjrakn + 1.
   END.         
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
   EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
      CREATE bskaptemp.
      BUFFER-COPY berskaptemp TO bskaptemp.
      ASSIGN bskaptemp.antal = 1.
   END.
   FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
      ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
      IF LAST-OF(bskaptemp.KOD) THEN DO:
         CREATE bsktemp.
         ASSIGN 
         bsktemp.KOD = bskaptemp.KOD         
         bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
         bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
      END.     
   END.      
   FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
   IF AVAILABLE bsktemp THEN DO:
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "E" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT bsktemp.KOD).                
      {EXCELFEL2.I}
   END.
   ASSIGN
   iColumn = 6
   cColumn = STRING(iColumn)
   cRange = "H" + cColumn.
   chWorkSheet:Range(cRange):NumberFormat = "@".      
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   {EXCELFEL2.I}
   radrakn = 12.   
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):               
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 14
         iColumn = radrakn
         cColumn = STRING(iColumn).
         cRange = "B" + cColumn.
         IF fri_temp.APPARAT NE ""  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.APPARAT + " / I").
         cRange = "I" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.MAXSAKR > 0 THEN DO:
            ASSIGN
            cRange = "E" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.MAXSAKR)).              
         END.
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "D" + cColumn.            
            hjsakr = LEFT-TRIM(kon_val.F5).                       
            IF hjsakr  BEGINS "D" THEN DO: 
               IF fri_temp.SAKR > 0 THEN DO:
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A/ DIAZED").                                
               END.
               ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT " DIAZED").                                                   
            END.
            ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN DO:
               IF fri_temp.SAKR > 0 THEN DO:
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A/ HICAP").                                                  
               END.
               ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "A/ HICAP").                                                  
            END.
            ELSE DO:
               IF fri_temp.SAKR > 0 THEN DO:
                  RUN utexcel_UI (INPUT "ARIAL", INPUT 10, INPUT STRING(fri_temp.SAKR)). /* om MTRL ej finns, använd kort-värde*/
               END.
            END.
         END.
         {EXCELFEL2.I}
         ASSIGN
         cRange = "G" + cColumn.
         IF fri_temp.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).               
         ASSIGN
         cRange = "H" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER)+ "m ").                  
         {EXCELFEL2.I}          
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "B" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).           
         {EXCELFEL2.I}
      END.
      GET NEXT ftq.          
   END. 
END PROCEDURE.

PROCEDURE mall41_UI :    
   ASSIGN
   iColumn = 2
   cColumn = STRING(iColumn)
   cRange = "F" + cColumn.  
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).   
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_id THEN DO:       
      ASSIGN
      iColumn = 5
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.   
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
      ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI2).               
      {EXCELFEL2.I}
   END.
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:  
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
      ASSIGN
      iColumn = 5
      cColumn = STRING(iColumn)
      cRange = "V" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
      IF Guru.Konstanter:globforetag = "FORS" THEN DO:
         ASSIGN
         iColumn = 5
         cColumn = STRING(iColumn)
         cRange = "AL" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Infratek").
         {EXCELFEL2.I}
      END.
      IF Guru.Konstanter:globforetag = "FORS" THEN DO:
         ASSIGN
         iColumn = 5
         cColumn = STRING(iColumn)
         cRange = "AL" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Vattenfall Services Nordic AB").
         {EXCELFEL2.I}
      END.
      IF Guru.Konstanter:globforetag = "vast" THEN DO:
         ASSIGN
         iColumn = 5
         cColumn = STRING(iColumn)
         cRange = "AL" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Vattenfall Services Nordic AB").
         {EXCELFEL2.I}
      END.                           
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "V" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB").
         IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
         IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
         IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
      END.
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "AL" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      {EXCELFEL2.I}
   END.
   radrakn = 10.   
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):               
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         radrakn = (radrakn + 1)         
         iColumn = radrakn
         cColumn = STRING(iColumn).
         cRange = "D" + cColumn.
         IF fri_temp.APPARAT NE ""  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.APPARAT + " / I").
         cRange = "AG" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.MAXSAKR > 0 THEN DO:
            ASSIGN
            cRange = "T" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.MAXSAKR) + " A" ).              
         END.      
         IF Guru.Konstanter:globforetag = "vast"  THEN DO:
            /*Rasmus Åkesson vill ha fabrikat på skåpet istället för fabrikat på säkring 20211112*/
            cRange = "J" + cColumn.        
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Kabeldon").
            IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
            IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
            IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").
         END.
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "O" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + " A").
            IF Guru.Konstanter:globforetag = "vast"  THEN.
            ELSE DO:                               
               ASSIGN
               cRange = "J" + cColumn.            
               hjsakr = LEFT-TRIM(kon_val.F5).                       
               IF hjsakr  BEGINS "D" THEN DO:                
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").                                                                                                  
               END.
               ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN DO:
                  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").                                                  
               END.
            END.               
         END.
         {EXCELFEL2.I}
         ASSIGN
         cRange = "Y" + cColumn.
         IF fri_temp.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).          
         cRange = "AR" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).           
         {EXCELFEL2.I}
      END.
      GET NEXT ftq.          
   END. 

END PROCEDURE.

PROCEDURE mall43_UI :
   antskap = 0.      
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE.
      antskap = antskap + 1.         
   END.
   hjantskap = 2.
   IF antskap > 1 THEN DO:
      REPEAT:         
         IF hjantskap > antskap THEN LEAVE.            
         sidvar = hjantskap - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantskap = hjantskap + 1 NO-ERROR.
         {EXCELFEL.I}
      END.
   END.   
   sidvar = 1.
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE BY kon_val.ID:
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar).
      bilnamn = "Kabelskåpskort Id " + STRING(kon_val.ID2).          
      RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
      chWorkSheet:Name = bilnamn NO-ERROR.         
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      skapstorlek = 0.               
      FOR EACH kn_valbuff WHERE kn_valbuff.NUM = kon_id.NUM USE-INDEX NUM:       
         FOR EACH list_mtrl WHERE list_mtrl.NUM = kn_valbuff.NUM AND
         list_mtrl.SKAPNUM = kn_valbuff.SKAPNUM USE-INDEX NUM2:
            IF list_mtrl.TYPBER = TRUE THEN DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kn_valbuff.TYP).               
            END.
            ELSE DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.               
            END.   
         END.      
         IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
            IF kon_val.F2 = "BEF" THEN DO:
               IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
               IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
            END.
         END.
      END.                     
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.  
      RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT STRING(TODAY,"9999/99/99")).   
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.      
      IF AVAILABLE kon_id THEN DO:       
         ASSIGN
         iColumn = 5
         cColumn = STRING(iColumn)
         cRange = "F" + cColumn.   

         IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT kon_id.FRI3).         
         ELSE RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT kon_id.FRI2).               
         {EXCELFEL2.I}
      END.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp THEN DO:  
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "F" + cColumn.
         RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT fri_temp.SKAPADR).
         ASSIGN
         iColumn = 5
         cColumn = STRING(iColumn)
         cRange = "V" + cColumn.
         RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT fri_temp.SKAP).
         IF Guru.Konstanter:globforetag = "FORS" THEN DO:
            ASSIGN
            iColumn = 5
            cColumn = STRING(iColumn)
            cRange = "AL" + cColumn.
            RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "Infratek").
            {EXCELFEL2.I}
         END.
         IF Guru.Konstanter:globforetag = "FORS" THEN DO:
            ASSIGN
            iColumn = 5
            cColumn = STRING(iColumn)
            cRange = "AL" + cColumn.
            RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "Vattenfall Services Nordic AB").
            {EXCELFEL2.I}
         END.
         IF Guru.Konstanter:globforetag = "vast" THEN DO:
            ASSIGN
            iColumn = 5
            cColumn = STRING(iColumn)
            cRange = "AL" + cColumn.
            RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "Vattenfall Services Nordic AB").
            {EXCELFEL2.I}
         END.                              
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            iColumn = 6
            cColumn = STRING(iColumn)
            cRange = "V" + cColumn.
            IF kon_valbuff.F1 BEGINS "CDC" OR kon_valbuff.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "ABB").
            IF kon_valbuff.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "IFÖ"). 
            IF kon_valbuff.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "GEVEA"). 
            IF kon_valbuff.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "CEWE").             
         END.
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "AL" + cColumn.
         RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT STRING(fri_temp.ARTAL)).
         {EXCELFEL2.I}
      END.
      DEBUGGER:SET-BREAK().
      radrakn = 10.   
      IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
      ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
      GET FIRST ftq.
      DO WHILE AVAILABLE(fri_temp):               
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            radrakn = (radrakn + 1)
            iColumn = radrakn
            cColumn = STRING(iColumn).
            cRange = "D" + cColumn.                        
            IF kon_valbuff.F3 NE ""  THEN RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT kon_valbuff.F3 + " / I").
            cRange = "AG" + cColumn.
            RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT fri_temp.KABADR).
            IF fri_temp.MAXSAKR > 0 THEN DO:
               ASSIGN
               cRange = "T" + cColumn.
               RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT STRING(fri_temp.MAXSAKR) + " A" ).              
            END.   
            IF fri_temp.SAKR > 0 THEN DO:
               ASSIGN
               cRange = "O" + cColumn.
               RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT STRING(fri_temp.SAKR) + " A").
            END.                
            IF Guru.Konstanter:globforetag = "vast" THEN DO:
               /*Rasmus Åkesson vill ha fabrikat på skåpet istället för fabrikat på säkring 20211112*/
               cRange = "J" + cColumn.        
               IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 10,INPUT "Kabeldon").
               IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 10,INPUT "IFÖ"). 
               IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 10,INPUT "GEVEA"). 
               IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "Calibri",INPUT 10,INPUT "CEWE").
            END.    
            ELSE DO:
               ASSIGN
               cRange = "J" + cColumn.            
               hjsakr = LEFT-TRIM(kon_valbuff.F5).                       
               IF hjsakr  BEGINS "D" THEN DO:                
                  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "DIAZED").                                                                                                  
               END.
               ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN DO:
                  RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT "HICAP").                                                  
               END.
            END.                              
            {EXCELFEL2.I}
            ASSIGN
            cRange = "Y" + cColumn.
            IF fri_temp.BENAMNING = "Tom"  THEN.
            ELSE RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT fri_temp.BENAMNING).             
            cRange = "AR" + cColumn.
            RUN utexcel_UI (INPUT "Calibri",INPUT 11,INPUT fri_temp.ANMARK).           
            {EXCELFEL2.I}
         END.
         GET NEXT ftq.          
      END.       
      RELEASE OBJECT chWorksheet NO-ERROR. 
      sidvar = sidvar + 1.
   END.
END PROCEDURE.

PROCEDURE mall50_UI :    
   DEFINE VARIABLE delrak AS INTEGER NO-UNDO.
   DEFINE VARIABLE hjtext AS CHARACTER NO-UNDO.
      
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_id THEN DO:       
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "C" + cColumn.   
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
      ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI2).               
      {EXCELFEL2.I}
   END.
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "Q" + cColumn.  
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
        
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "F" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "K" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
      
                     
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "L" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB/KABELDON").
         IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
         IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
         IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
      END.
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "AL" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      {EXCELFEL2.I}
   END.
   radrakn = 10.   
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):               
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
                  
         ASSIGN
         radrakn = (radrakn + 1)         
         iColumn = radrakn
         cColumn = STRING(iColumn).
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_temp.NUM AND markgrupp.KABNR = fri_temp.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "A" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.GRUPP).           
         END.
         
         cRange = "K" + cColumn.
         IF fri_temp.APPARAT NE ""  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.APPARAT + " / I").
         /*cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).*/
         /*IF fri_temp.MAXSAKR > 0 THEN DO:
            ASSIGN
            cRange = "T" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.MAXSAKR) + " A" ).              
         END.      
         IF Guru.Konstanter:globforetag = "vast"  THEN DO:
            /*Rasmus Åkesson vill ha fabrikat på skåpet istället för fabrikat på säkring 20211112*/
            cRange = "J" + cColumn.        
            IF kon_val.F1 = "CDC" OR kon_val.F1 = "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Kabeldon").
            IF kon_val.F1 = "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
            IF kon_val.F1 = "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
            IF kon_val.F1 = "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").
         END.*/
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "J" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + " A").
                           
         END.
         {EXCELFEL2.I}
         
         /*delrak = INDEX(fri_temp.BENAMNING, " " , 1).                                                
         IF delrak > 0 THEN DO:
            hjtext =    SUBSTRING(fri_temp.BENAMNING,1,(delrak - 1)).
            cRange = "G" + cColumn.         
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT hjtext).
            
            hjtext =    SUBSTRING(fri_temp.BENAMNING,(delrak + 1)).
            cRange = "H" + cColumn.         
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT hjtext).
         END.*/   
         
                  
         cRange = "G" + cColumn.         
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).
         cRange = "C" + cColumn.         
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).          
         cRange = "L" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).           
         {EXCELFEL2.I}
         IF fri_temp.TYP = "Servis" THEN DO:        
            cRange = "E" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.TYP).           
            {EXCELFEL2.I}
         END.   
         cRange = "F" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.METER).           
         {EXCELFEL2.I}
         
      END.
      GET NEXT ftq.          
   END. 

END PROCEDURE.

PROCEDURE mall23_UI :   
   antskap = 0.      
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE.
      antskap = antskap + 1.         
   END.
   hjantskap = 2.
   IF antskap > 1 THEN DO:
      REPEAT:         
         IF hjantskap > antskap THEN LEAVE.            
         sidvar = hjantskap - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantskap = hjantskap + 1 NO-ERROR.
         {EXCELFEL.I}
      END.
   END.   
   sidvar = 1.
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE BY kon_val.ID:
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar).      
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      IF AVAILABLE kon_id AND kon_id.FRI3 NE ""  THEN bilnamn = "Kabelskåp Id " + STRING(kon_val.ID2) + " " + STRING(kon_id.FRI3).                   
      ELSE bilnamn = "Kabelskåp Id " + STRING(kon_val.ID2).          
      RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
      chWorkSheet:Name = bilnamn NO-ERROR.         
      IF link NE ? THEN DO:
         totheight = 10.
         RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).        
         totheight = 0.
      END.
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      skapstorlek = 0.               
      FOR EACH kn_valbuff WHERE kn_valbuff.NUM = kon_id.NUM USE-INDEX NUM:       
         FOR EACH list_mtrl WHERE list_mtrl.NUM = kn_valbuff.NUM AND
         list_mtrl.SKAPNUM = kn_valbuff.SKAPNUM USE-INDEX NUM2:
            IF list_mtrl.TYPBER = TRUE THEN DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kn_valbuff.TYP).               
            END.
            ELSE DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.               
            END.   
         END.   
         IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
            IF kon_val.F2 = "BEF" THEN DO:
               IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
               IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
            END.
         END.
      END.                     
      IF AVAILABLE kon_id THEN DO:          
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "B" + cColumn.   
         chWorkSheet:Range(cRange):NumberFormat = "@".      
         IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI2).               
         {EXCELFEL2.I}
      END.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp THEN DO: 
         ASSIGN
         iColumn = 7
         cColumn = STRING(iColumn)
         cRange = "B" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
         {EXCELFEL2.I}
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            iColumn = 7
            cColumn = STRING(iColumn)
            cRange = "E" + cColumn.
            IF kon_valbuff.F1 BEGINS "CDC" OR kon_valbuff.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB").
            IF kon_valbuff.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
            IF kon_valbuff.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
            IF kon_valbuff.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
         END.
         {EXCELFEL2.I}
      END.
      hjrakn = 0.
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
         hjrakn = hjrakn + 1.
      END.                  
      EMPTY TEMP-TABLE bskaptemp NO-ERROR. 
      EMPTY TEMP-TABLE bsktemp NO-ERROR. 
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
      EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
         CREATE bskaptemp.
         BUFFER-COPY berskaptemp TO bskaptemp.
         ASSIGN bskaptemp.antal = 1.        
      END.         
      FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
         ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
         IF LAST-OF(bskaptemp.KOD) THEN DO:
            CREATE bsktemp.
            ASSIGN 
            bsktemp.KOD = bskaptemp.KOD         
            bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
            bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
         END.     
      END.                     
      FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
      IF AVAILABLE bsktemp THEN DO:
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "E" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT bsktemp.KOD).            
      END.
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "H" + cColumn.
      chWorkSheet:Range(cRange):NumberFormat = "@".      
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).      
      radrakn = 12.
      IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
      ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
      GET FIRST ftq.
      DO WHILE AVAILABLE(fri_temp):                     
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
         radrakn = (radrakn + 1)
         iColumn = radrakn
         cColumn = STRING(iColumn).
         cRange = "B" + cColumn.
         IF fri_temp.APPARAT NE ""  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.APPARAT + " / I").         
         cRange = "I" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            IF fri_temp.MAXSAKR > 0 THEN DO:
               ASSIGN
               cRange = "E" + cColumn.
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.MAXSAKR)).              
               {EXCELFEL2.I}
            END.
            IF fri_temp.SAKR > 0 THEN DO:
               ASSIGN
               cRange = "D" + cColumn.            
               hjsakr = LEFT-TRIM(kon_valbuff.F5).                       
               IF hjsakr  BEGINS "D" THEN DO: 
                  IF fri_temp.SAKR > 0 THEN DO:
                     RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A/ DIAZED").                                
                  END.
                  ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT " DIAZED").                                                   
               END.
               ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN DO:
                  IF fri_temp.SAKR > 0 THEN DO:
                     RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR) + "A/ HICAP").                                                  
                  END.
                  ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "A/ HICAP").                                                  
               END.
            END.
            {EXCELFEL2.I}
            ASSIGN
            cRange = "G" + cColumn.
            IF fri_temp.BENAMNING = "Tom"  THEN.
            ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
            {EXCELFEL2.I}
            ASSIGN
            cRange = "H" + cColumn.
            IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER)+ "m ").                     
            {EXCELFEL2.I}
         END. 
         GET NEXT ftq.         
      END. 
      RELEASE OBJECT chWorksheet NO-ERROR. 
      sidvar = sidvar + 1.
   END.
END PROCEDURE.

PROCEDURE mall24_UI :

   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_id THEN DO: 
      ASSIGN
      iColumn = 6  
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.        /*"P"*/
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.NATNR).
      {EXCELFEL2.I}
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "AQ" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
      {EXCELFEL2.I}
   END.
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:  
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
      {EXCELFEL2.I}
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "AH" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      {EXCELFEL2.I}
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "P" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB").
         IF kon_val.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
         IF kon_val.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
         IF kon_val.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.            
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.   
   hjrakn = 0.
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
      hjrakn = hjrakn + 1.
   END.         
   FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
   EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
      CREATE bskaptemp.
      BUFFER-COPY berskaptemp TO bskaptemp.
      ASSIGN bskaptemp.antal = 1.
   END.
   FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
      ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
      IF LAST-OF(bskaptemp.KOD) THEN DO:
         CREATE bsktemp.
         ASSIGN 
         bsktemp.KOD = bskaptemp.KOD         
         bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
         bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
      END.     
   END.      
   FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
   IF AVAILABLE bsktemp THEN DO:
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "Y" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT bsktemp.KOD).                
      {EXCELFEL2.I}
   END.
   ASSIGN
   iColumn = 36
   cColumn = STRING(iColumn)
   cRange = "AW" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "AQ" + cColumn.
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
   {EXCELFEL2.I}
   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 26
      cColumn = STRING(iColumn)            
      cRange = "AX" + cColumn.         
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                              
            IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                              
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " + STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
         {EXCELFEL2.I}
      END.         
   END.  
   radrakn = 13.
   IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
   ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
   GET FIRST ftq.
   DO WHILE AVAILABLE(fri_temp):         
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         radrakn = (radrakn + 1)         
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "D" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
         IF fri_temp.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "AV" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR)).              
         END.
         {EXCELFEL2.I}
         ASSIGN
         cRange = "Z" + cColumn.
         IF fri_temp.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).      
         cRange = "AK" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT  kon_val.F3).
         cRange = "AQ" + cColumn.
         hjsakr = LEFT-TRIM(kon_val.F5).                       
         IF hjsakr  BEGINS "D"  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").                       
         ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").                               
         ASSIGN
         cRange = "BB" + cColumn.
         IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER) + "m " + fri_temp.ANMARK).
         ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).
         ASSIGN
         cRange = "AZ" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "I").           
         {EXCELFEL2.I}
      END.  
      GET NEXT ftq.        
   END. 
END PROCEDURE.

PROCEDURE mall25_UI :
   antskap = 0.      
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE.
      antskap = antskap + 1.         
   END.
   hjantskap = 2.
   IF antskap > 1 THEN DO:
      REPEAT:         
         IF hjantskap > antskap THEN LEAVE.            
         sidvar = hjantskap - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantskap = hjantskap + 1 NO-ERROR.
         {EXCELFEL.I}
      END.
   END.   
   sidvar = 1.
   FOR EACH kon_val WHERE kon_val.KSKAP = FALSE BY kon_val.ID:
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar).
      bilnamn = "Kabelskåpskort Id " + STRING(kon_val.ID2).          
      RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
      chWorkSheet:Name = bilnamn NO-ERROR.         
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM NO-LOCK NO-ERROR.   
      skapstorlek = 0.               
      FOR EACH kn_valbuff WHERE kn_valbuff.NUM = kon_id.NUM USE-INDEX NUM:       
         FOR EACH list_mtrl WHERE list_mtrl.NUM = kn_valbuff.NUM AND
         list_mtrl.SKAPNUM = kn_valbuff.SKAPNUM USE-INDEX NUM2:
            IF list_mtrl.TYPBER = TRUE THEN DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kn_valbuff.TYP).               
            END.
            ELSE DO:
               IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.               
            END.   
         END.      
         IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
            IF kon_val.F2 = "BEF" THEN DO:
               IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN skapstorlek = skapstorlek + 3.
               IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
            END.
         END.
      END.               
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp THEN DO:    
         ASSIGN
         iColumn = 6  
         cColumn = STRING(iColumn)
         cRange = "P" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FORNR + kon_id.NATNR).
         {EXCELFEL2.I}
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "AQ" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT kon_id.FRI3).         
         {EXCELFEL2.I}
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.SKAP).
         {EXCELFEL2.I}
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "AH" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            iColumn = 8
            cColumn = STRING(iColumn)
            cRange = "P" + cColumn.
            IF kon_valbuff.F1 BEGINS "CDC" OR kon_valbuff.F1 BEGINS "KABELDON" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "ABB").
            IF kon_valbuff.F1 BEGINS "IFÖ" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "IFÖ"). 
            IF kon_valbuff.F1 BEGINS "GEVEA" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "GEVEA"). 
            IF kon_valbuff.F1 BEGINS "CEWE" THEN  RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "CEWE").             
         END. 
      END.
      hjrakn = 0.
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK:      
         hjrakn = hjrakn + 1.
      END.                  
      EMPTY TEMP-TABLE bskaptemp NO-ERROR. 
      EMPTY TEMP-TABLE bsktemp NO-ERROR. 
      FOR EACH list_mtrl WHERE list_mtrl.SKAPNUM = 99 AND list_mtrl.NUM = kon_id.NUM NO-LOCK,
      EACH berskaptemp WHERE berskaptemp.ENR = list_mtrl.ENR  NO-LOCK.      
         CREATE bskaptemp.
         BUFFER-COPY berskaptemp TO bskaptemp.
         ASSIGN bskaptemp.antal = 1.        
      END.         
      FOR EACH bskaptemp NO-LOCK BREAK BY bskaptemp.KOD : 
         ACCUMULATE bskaptemp.ANTAL (TOTAL BY bskaptemp.KOD).       
         IF LAST-OF(bskaptemp.KOD) THEN DO:
            CREATE bsktemp.
            ASSIGN 
            bsktemp.KOD = bskaptemp.KOD         
            bsktemp.KTYPKOD = bskaptemp.KTYPKOD         
            bsktemp.ANTAL = (ACCUM TOTAL BY bskaptemp.KOD bskaptemp.ANTAL).                               
         END.     
      END.                     
      FIND FIRST bsktemp WHERE bsktemp.ANTAL = hjrakn  NO-LOCK NO-ERROR.
      IF AVAILABLE bsktemp THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "Y" + cColumn.
         RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT bsktemp.KOD).            
      END.
      ASSIGN
      iColumn = 36
      cColumn = STRING(iColumn)
      cRange = "AW" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
      cRange = "AQ" + cColumn.
      RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT Guru.Konstanter:globanv).
      {EXCELFEL2.I}
      FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
      list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
      IF AVAILABLE list_mtrl THEN DO:         
         ASSIGN
         iColumn = 26
         cColumn = STRING(iColumn)            
         cRange = "AX" + cColumn.                  
         IF kon_val.F1 BEGINS "CDC"  OR kon_val.F1 BEGINS "KABELDON"  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " +  STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "Reserv " + STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                     
      END.
      radrakn = 13.
      IF sortvar = FALSE THEN OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM.
      ELSE OPEN QUERY ftq FOR EACH  fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX GRUPPNR. 
      GET FIRST ftq.
      DO WHILE AVAILABLE(fri_temp):            
         FIND FIRST kon_valbuff WHERE kon_valbuff.NUM = fri_temp.NUM  AND
         kon_valbuff.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_valbuff THEN DO:
            ASSIGN
            radrakn = (radrakn + 1)
            iColumn = radrakn
            cColumn = STRING(iColumn)
            cRange = "D" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.KABADR).
            {EXCELFEL2.I}
            IF fri_temp.SAKR > 0 THEN DO:
               ASSIGN
               cRange = "AV" + cColumn.
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.SAKR)).              
            END.
            ASSIGN
            cRange = "Z" + cColumn.
            IF fri_temp.BENAMNING = "Tom"  THEN.
            ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.BENAMNING).             
            cRange = "AK" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT  kon_valbuff.F3).
            cRange = "AQ" + cColumn.
            hjsakr = LEFT-TRIM(kon_valbuff.F5).                       
            IF hjsakr  BEGINS "D"  THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").                          
            ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").                         
            ASSIGN
            cRange = "BB" + cColumn.
            IF fri_temp.METER > 0 THEN RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_temp.METER) + "m " + fri_temp.ANMARK).
            ELSE RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT fri_temp.ANMARK).
            ASSIGN
            cRange = "AZ" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "I").           
            {EXCELFEL2.I}
         END.
         GET NEXT ftq.          
      END. 
      RELEASE OBJECT chWorksheet NO-ERROR. 
      sidvar = sidvar + 1.
   END.
END PROCEDURE.

PROCEDURE mall26_UI :                                                           
   /*IF link NE ? THEN DO:
      RUN imageexcel_UI (INPUT link,INPUT "AY",INPUT 1, INPUT 500).        
   END.
   EMPTY TEMP-TABLE fri_tempm NO-ERROR. 
   FOR EACH fri_temp:
      CREATE fri_tempm.
      BUFFER-COPY fri_temp TO fri_tempm.
   END.
  
   FOR EACH fri_tempm :        
      /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM AND kon_val.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val  THEN DO:
         fri_tempm.KTYPKOD = kon_val.F5.            
         FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
         konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
         IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
         ELSE DO:
            FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
            konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
            IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.            
            ELSE DO:
               FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
               konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
               IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.  
               ELSE DO:
                  IF Guru.Konstanter:globforetag = "fors" THEN DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 36 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                     ELSE DO:
                        FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 35 AND
                        konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                        IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        ELSE DO:
                           FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 41 AND
                           konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                           IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.                        
                        END.                           
                     END.   
                  END.
                  IF Guru.Konstanter:globforetag = "krin" THEN DO:
                     IF LEFT-TRIM(kon_val.F5) BEGINS "MAG" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "KAP" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "SM" THEN fri_tempm.LSP = 2.
                  END.
               END.                
            END.
         END.
      END.        
   END.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.      
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).      
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).      
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      {EXCELFEL2.I}
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR  kon_val.F1 BEGINS "Kabeldon" THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.      
   ASSIGN
   iColumn = 36
   cColumn = STRING(iColumn)
   cRange = "BJ" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "AY" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).
   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   {EXCELFEL2.I}
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)            
      cRange = "AE" + cColumn.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
      END.         
   END.   
   {EXCELFEL2.I}
   radrakn = 11.
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).
         IF fri_tempm.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_tempm.SAKR).              
         END.                 
         ASSIGN
         cRange = "C" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "AO" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "BP" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.ARTAL)).
         cRange = "BK" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.TYP).
         ASSIGN
         cRange = "Z" + cColumn.
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END.    
   ASSIGN
   sidvar = 1
   radrakn = 11.
   chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM  NO-LOCK NO-ERROR.
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
   ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
   END.
   ASSIGN
   iColumn = 6
   cColumn = STRING(iColumn)
   cRange = "K" + cColumn.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
   ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
   ASSIGN
   iColumn = 6
   cColumn = STRING(iColumn)
   cRange = "U" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
   ASSIGN
   iColumn = 8
   cColumn = STRING(iColumn)
   cRange = "U" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
   ASSIGN
   iColumn = 36
   cColumn = STRING(iColumn)
   cRange = "BJ" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "AY" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 2 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).
         IF fri_tempm.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_tempm.SAKR).              
         END.                 
         ASSIGN
         cRange = "C" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "AO" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "BP" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.ARTAL)).         
         ASSIGN
         cRange = "Z" + cColumn.
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END. */    
END PROCEDURE.

PROCEDURE mall27_UI :                                                             
   IF link NE ? THEN DO:
      IF Guru.Konstanter:globforetag = "gran" OR Guru.Konstanter:globforetag = "NAEK" OR Guru.Konstanter:globforetag = "LIMO" OR Guru.Konstanter:globforetag = "elpa"  OR Guru.Konstanter:globforetag = "CPOMA" THEN DO:
         RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).
         ASSIGN
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "BL" + cColumn.
      END.            
      ELSE DO:         
         IF Guru.Konstanter:globforetag = "ELKB" THEN totheight = 22.
         ELSE IF Guru.Konstanter:globforetag = "ORBI" THEN colin = 470.
         ELSE IF Guru.Konstanter:globforetag = "HANA" THEN DO:
            colin = 470.
         END.
         RUN imageexcel_UI (INPUT link,INPUT "AY",INPUT 1, INPUT colin).
         colin = 500.
         totheight = 0.
         ASSIGN
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
      END.            
   END.
   ELSE DO:
      ASSIGN
      iColumn = 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
   END.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   EMPTY TEMP-TABLE fri_tempm NO-ERROR. 
   FOR EACH fri_temp:
      CREATE fri_tempm.
      BUFFER-COPY fri_temp TO fri_tempm.
   END.

   FOR EACH fri_tempm :
      /*sätt kabeln till lsp initialt, då klarar den att den inte återfinns i 14=lsp*/         
      /*ta inte bortredan klassasehsp Lena 20210307*/
      IF fri_tempm.LSP = 2 THEN.
      ELSE fri_tempm.LSP = 1.             
      /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM AND kon_val.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val  THEN DO:
         fri_tempm.KTYPKOD = kon_val.F5.                   
         FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
         konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
         IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
         ELSE DO:
            FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
            konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
            IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.            
            ELSE DO:
               FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
               konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
               IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.        
               ELSE DO:
                  IF Guru.Konstanter:globforetag = "fors" THEN DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 36 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                     ELSE DO:
                        FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 35 AND
                        konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                        IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        ELSE DO:
                           FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 41 AND
                           konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                           IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        END.
                     END.   
                  END.
                  IF Guru.Konstanter:globforetag = "krin" THEN DO:
                     IF LEFT-TRIM(kon_val.F5) BEGINS "MAG" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "KAP" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "SM" THEN fri_tempm.LSP = 2.
                  END.
               END.       
            END.
         END.
      END.        
   END.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.      
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      IF kon_id.NATNR NE "" THEN  RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).      
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "U" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
      {EXCELFEL2.I}
      IF AVAILABLE kon_val THEN DO:
         ASSIGN
         iColumn = 8
         cColumn = STRING(iColumn)
         cRange = "K" + cColumn.
         IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "KABELDON").           
         IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "GEVEA").           
         IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "CEWE-SELFA AB").             
      END.
      {EXCELFEL2.I}
   END.
   skapstorlek = 0.         
   FOR EACH kon_val WHERE kon_val.NUM = kon_id.NUM USE-INDEX NUM:       
      FOR EACH list_mtrl WHERE list_mtrl.NUM = kon_val.NUM AND
      list_mtrl.SKAPNUM = kon_val.SKAPNUM USE-INDEX NUM2:
         IF list_mtrl.TYPBER = TRUE THEN DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + (list_mtrl.MODUL * kon_val.TYP).            
         END.
         ELSE DO:
            IF list_mtrl.ANTAL > 0 THEN skapstorlek = skapstorlek + list_mtrl.MODUL.            
         END.   
      END.      
      IF Guru.Konstanter:globforetag = "FORS" OR Guru.Konstanter:globforetag = "elpa" THEN DO:      
         IF kon_val.F2 = "BEF" THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR  kon_val.F1 BEGINS "Kabeldon" THEN skapstorlek = skapstorlek + 3.
            IF kon_val.F1 BEGINS "Cewe" THEN skapstorlek = skapstorlek + 49.
         END.
      END.
   END.         
   FIND FIRST list_mtrl WHERE list_mtrl.NUM = kon_id.NUM AND 
   list_mtrl.SKAPMTRL = TRUE NO-LOCK NO-ERROR.
   {EXCELFEL2.I}
   IF AVAILABLE list_mtrl THEN DO:         
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)            
      cRange = "AE" + cColumn.
      FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
      NO-LOCK NO-ERROR.   
      IF AVAILABLE fri_temp  THEN DO:
         FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
         kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            IF kon_val.F1 BEGINS "CDC" OR kon_val.F1 BEGINS "KABELDON" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "GEVEA" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " moduler").                        
            IF kon_val.F1 BEGINS "CEWE" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(list_mtrl.SKAPMODUL - skapstorlek,"->>>>") + " mm").                        
         END.
      END.         
   END.   
   {EXCELFEL2.I}
   radrakn = 11.
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).
         IF fri_tempm.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_tempm.SAKR).              
         END.                 
         ASSIGN
         cRange = "F" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "AT" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "BP" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.ARTAL)).
         cRange = "BK" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.TYP).
         ASSIGN
         cRange = "AO" + cColumn.  /*Z*/
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_tempm.NUM AND markgrupp.KABNR = fri_tempm.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.GRUPP).           
         END.
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END. 
   RELEASE OBJECT chWorksheet NO-ERROR. 
   ASSIGN
   sidvar = 1
   radrakn = 11.
   chWorkSheet = chExcelApplication:Sheets:Item(sidvar)  NO-ERROR.
   IF link NE ? THEN DO:
      IF Guru.Konstanter:globforetag = "gran" OR Guru.Konstanter:globforetag = "NAEK" OR Guru.Konstanter:globforetag = "LIMO" OR Guru.Konstanter:globforetag = "elpa"  OR Guru.Konstanter:globforetag = "CPOMA" THEN DO:
         RUN imageexcel_UI (INPUT link,INPUT "A",INPUT 1, INPUT 1).
         ASSIGN
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "BL" + cColumn.
      END.            
      ELSE DO:
         IF Guru.Konstanter:globforetag = "ELKB" THEN totheight = 22.
         RUN imageexcel_UI (INPUT link,INPUT "AY",INPUT 1, INPUT 500).
         ASSIGN
         iColumn = 1
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
      END.            
   END.
   ELSE DO:
      ASSIGN
      iColumn = 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
   END.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM  NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 8
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
   END.
   ASSIGN
   iColumn = 6
   cColumn = STRING(iColumn)
   cRange = "K" + cColumn.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
   ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
   ASSIGN
   iColumn = 6
   cColumn = STRING(iColumn)
   cRange = "U" + cColumn.
   IF AVAILABLE fri_temp THEN 
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAPADR).
   ASSIGN
   iColumn = 8
   cColumn = STRING(iColumn)
   cRange = "U" + cColumn.
   IF AVAILABLE fri_temp THEN 
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_temp.ARTAL)).   
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 2 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 13
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).
         IF fri_tempm.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "BN" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  fri_tempm.SAKR).              
         END.                
         ASSIGN
         cRange = "F" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "AT" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "BP" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.ARTAL)).         
         ASSIGN
         cRange = "AO" + cColumn.  /*Z*/
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_tempm.NUM AND markgrupp.KABNR = fri_tempm.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.GRUPP).           
         END.
         ASSIGN
         iColumn = anradrakn
         cColumn = STRING(iColumn)
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END.     
END PROCEDURE.

PROCEDURE mall42_UI :               
   ASSIGN
   iColumn = 2
   cColumn = STRING(iColumn)
   cRange = "E" + cColumn.  
   RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).   
   IF Guru.Konstanter:globforetag = "fors" THEN DO:
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "AJ" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Infratek"  ).
   END.
   IF Guru.Konstanter:globforetag = "vast" THEN DO:
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "AJ" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Vattenfall Services Nordic AB"  ).
   END.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   IF AVAILABLE kon_id THEN DO:  
      FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val  THEN DO:                                              
         FIND FIRST konstgrptemp WHERE konstgrptemp.KONSKOD = kon_val.GRUPP NO-LOCK NO-ERROR.
         IF AVAILABLE konstgrptemp THEN DO:
            ASSIGN
            iColumn = 5
            cColumn = STRING(iColumn)
            cRange = "AJ" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT konstgrptemp.BENAMNING  ).
         END.
      END.
   END.            
   EMPTY TEMP-TABLE fri_tempm NO-ERROR. 
   FOR EACH fri_temp:
      CREATE fri_tempm.
      BUFFER-COPY fri_temp TO fri_tempm.
   END.
   
   FOR EACH fri_tempm :        
      /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM AND kon_val.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val  THEN DO:
         fri_tempm.KTYPKOD = kon_val.F5.
                     
         FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
         konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
         IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
         ELSE DO:
            FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
            konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
            IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.            
            ELSE DO:
               FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
               konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
               IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
               ELSE DO:
                  IF Guru.Konstanter:globforetag = "fors" THEN DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 36 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                     ELSE DO:
                        FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 35 AND
                        konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                        IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        ELSE DO:
                           FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 41 AND
                           konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                           IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        END.
                     END.   
                  END.
                  IF Guru.Konstanter:globforetag = "krin" THEN DO:
                     IF LEFT-TRIM(kon_val.F5) BEGINS "MAG" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "KAP" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "SM" THEN fri_tempm.LSP = 2.
                  END.                   
               END.               
            END.
            IF Guru.Konstanter:globforetag = "VAST" THEN DO:
               /*HITTAR INTE LÄNGRE LSP I konskod =14  SÄTT ALLATILL LSP Lena 20210307*/
              IF fri_tempm.KTYPKOD NE " " THEN fri_tempm.LSP = 1.
            END.         
         END.
      END.        
   END.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.      
   radrakn = 21.
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)        
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "L" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "I").
         cRange = "AH" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).
         IF fri_tempm.SAKR > 0 THEN DO:
            ASSIGN
            cRange = "T" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  STRING(fri_tempm.SAKR) + " A").   
            ASSIGN
            cRange = "O" + cColumn.            
            hjsakr = LEFT-TRIM(kon_val.F4).                       
            IF hjsakr  BEGINS "D" THEN DO:                
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "DIAZED").                                                                                                  
            END.
            ELSE IF  hjsakr  BEGINS "0" OR hjsakr  BEGINS "1" OR hjsakr  BEGINS "2" THEN DO:
               RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT "HICAP").                                                  
            END.                  
         END.
         IF fri_tempm.MAXSAKR > 0 THEN DO:
            ASSIGN
            cRange = "X" + cColumn.
            RUN utexcel_UI (INPUT "ARIAL",INPUT 10,INPUT STRING(fri_tempm.MAXSAKR) + " A" ).              
         END.                        
         ASSIGN
         cRange = "AB" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "G" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).                   
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_tempm.NUM AND markgrupp.KABNR = fri_tempm.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "D" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.GRUPP).           
         END.
         ASSIGN         
         cRange = "AR" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END.          
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM  NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 5
      cColumn = STRING(iColumn)
      cRange = "S" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
      IF fri_temp.SKAP BEGINS "HOLTAB" THEN DO:
         ASSIGN
         iColumn = 6
         cColumn = STRING(iColumn)
         cRange = "S" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Holtab").         
      END.   
   END.
   IF Guru.Konstanter:globforetag = "vast" THEN DO:
      ASSIGN
      iColumn = 5
      cColumn = STRING(iColumn)
      cRange = "E" + cColumn.
      IF kon_id.NATNR NE "" THEN  RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).      
      ASSIGN
      iColumn = 6
      cColumn = STRING(iColumn)
      cRange = "E" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
      ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
   END.
   ELSE DO:   
      ASSIGN
      iColumn = 5
      cColumn = STRING(iColumn)
      cRange = "E" + cColumn.
      IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
      ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
   END.      
   radrakn = 8.   
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 2 USE-INDEX NUM:             
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:            
         ASSIGN
         radrakn = (radrakn + 1)   
         iColumn = radrakn
         cColumn = STRING(iColumn).            
         cRange = "N" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "I").                     
         cRange = "AG" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempM.KABADR).                
         ASSIGN
         cRange = "Y" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         ASSIGN
         cRange = "AO" + cColumn.  /*Z*/
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         cRange = "AR" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).           
      END.     
      {EXCELFEL2.I}
   END.     
END PROCEDURE.

PROCEDURE mall40_UI :
   /*kRAFTRINGEN MARKSTATIONSKORT*/    
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.                                                            
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   ASSIGN
   iColumn = 2
   cColumn = STRING(iColumn)
   cRange = "J" + cColumn.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI3).
   ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.FRI2).
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      ASSIGN
      iColumn = 4
      cColumn = STRING(iColumn)
      cRange = "M" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_temp.SKAP).
   END.
   ASSIGN
   iColumn = 45
   cColumn = STRING(iColumn)
   cRange = "I" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(TODAY,"9999/99/99")).
   cRange = "A" + cColumn.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:globanv).   
   EMPTY TEMP-TABLE fri_tempm NO-ERROR. 
   FOR EACH fri_temp:
      CREATE fri_tempm.
      BUFFER-COPY fri_temp TO fri_tempm.
   END.   
   FOR EACH fri_tempm :        
      /*markera lsp hsp för sej spara ktypkod dvs förkortning på kabeln*/
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM AND kon_val.SKAPNUM = fri_tempm.KABNR NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val  THEN DO:
         fri_tempm.KTYPKOD = kon_val.F5.            
         FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 14 AND
         konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
         IF AVAILABLE konsttemp THEN fri_tempm.LSP = 1.         
         ELSE DO:
            FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 25 AND
            konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
            IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.            
            ELSE DO:
               FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 27 AND
               konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
               IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.   
               ELSE DO:
                  IF Guru.Konstanter:globforetag = "fors" THEN DO:
                     FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 36 AND
                     konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                     IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                     ELSE DO:
                        FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 35 AND
                        konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                        IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.    
                        ELSE DO:
                           FIND FIRST konsttemp WHERE konsttemp.KONSKOD = 41 AND
                           konsttemp.KTYPKOD =  LEFT-TRIM(kon_val.F5) NO-LOCK NO-ERROR.
                           IF AVAILABLE konsttemp THEN fri_tempm.LSP = 2.
                        END.                    
                     END.   
                  END.
                  IF Guru.Konstanter:globforetag = "krin" THEN DO:
                     IF LEFT-TRIM(kon_val.F5) BEGINS "MAG" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "KAP" THEN fri_tempm.LSP = 2.
                     ELSE IF LEFT-TRIM(kon_val.F5) BEGINS "SM" THEN fri_tempm.LSP = 2.
                  END.
                END.              
            END.
         END.
      END.        
   END.
   FIND FIRST kon_id WHERE ROWID(kon_id) = lin_rowid NO-LOCK NO-ERROR.   
   FIND FIRST fri_temp WHERE fri_temp.NUM = kon_id.NUM USE-INDEX NUM
   NO-LOCK NO-ERROR.   
   IF AVAILABLE fri_temp THEN DO:         
      FIND FIRST kon_val WHERE kon_val.NUM = fri_temp.NUM  AND
      kon_val.SKAPNUM = fri_temp.KABNR  NO-LOCK NO-ERROR.      
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "J" + cColumn.
      IF kon_id.NATNR NE "" THEN  RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT kon_id.NATNR).          
      pos2 = LENGTH(fri_temp.SKAPADR).
      pos = 1.
      DO WHILE pos <= pos2:
         pos = pos + 1.
         RUN isSiffra_UI (INPUT SUBSTRING(fri_temp.SKAPADR,pos,1),OUTPUT artecken).
         IF artecken = TRUE THEN LEAVE.
      END.     
      ASSIGN
      iColumn = 2
      cColumn = STRING(iColumn)
      cRange = "Q" + cColumn.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_temp.SKAPADR,1,(pos - 1))).
      IF pos LE pos2 THEN DO:
         ASSIGN
         iColumn = 2
         cColumn = STRING(iColumn)
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_temp.SKAPADR,pos)).
      END.   
   END.         
   radrakn = 7.
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 2 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:           
         ASSIGN
         radrakn = (radrakn + 1)         
         iColumn = radrakn
         cColumn = STRING(iColumn)
         cRange = "Q" + cColumn.         
         pos2 = LENGTH(fri_tempM.KABADR).
         pos = 1.
         DO WHILE pos <= pos2:
            pos = pos + 1.
            RUN isSiffra_UI (INPUT SUBSTRING(fri_tempM.KABADR,pos,1),OUTPUT artecken).
            IF artecken = TRUE THEN LEAVE.
         END.        
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_tempM.KABADR,1,(pos - 1))).
         IF pos LE pos2 THEN DO:            
            cRange = "T" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_tempM.KABADR,pos)).
         END.                        
         ASSIGN
         cRange = "E" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  LEFT-TRIM(kon_val.F4)).                                
         ASSIGN
         cRange = "J" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.TYP).
         ASSIGN
         cRange = "M" + cColumn.  
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_tempm.NUM AND markgrupp.KABNR = fri_tempm.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "A" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.GRUPP).
            cRange = "O" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT markgrupp.ABONNENT).           
         END.                               
      END.     
      {EXCELFEL2.I}
   END.   
   ASSIGN  
   radrakn = 19.         
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM  NO-LOCK NO-ERROR.   
   FOR EACH fri_tempm WHERE fri_tempm.NUM = kon_id.NUM AND fri_tempm.LSP = 1 USE-INDEX NUM:       
      FIND FIRST kon_val WHERE kon_val.NUM = fri_tempm.NUM  AND
      kon_val.SKAPNUM = fri_tempm.KABNR  NO-LOCK NO-ERROR.
      IF AVAILABLE kon_val THEN DO:                 
         ASSIGN
         radrakn = (radrakn + 1)
         anradrakn = radrakn + 22
         iColumn = radrakn
         cColumn = STRING(iColumn).                  
         pos2 = LENGTH(fri_tempm.KABADR).
         pos = 1.
         DO WHILE pos <= pos2:
            pos = pos + 1.
            RUN isSiffra_UI (INPUT SUBSTRING(fri_tempm.KABADR,pos,1),OUTPUT artecken).
            IF artecken = TRUE THEN LEAVE.
         END.            
         ASSIGN         
         cColumn = STRING(iColumn)
         cRange = "Q" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_tempm.KABADR,1,(pos - 1))).
         IF pos LE pos2 THEN DO:
            ASSIGN            
            cColumn = STRING(iColumn)
            cRange = "T" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(fri_tempm.KABADR,pos)).
         END.
         ASSIGN
         cRange = "E" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  LEFT-TRIM(kon_val.F4)).                   
         ASSIGN
         cRange = "J" + cColumn.
         IF fri_tempm.BENAMNING = "Tom"  THEN.
         ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.BENAMNING).         
         cRange = "C" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.APPARAT).
         cRange = "U" + cColumn.
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.TYP).
         ASSIGN
         cRange = "M" + cColumn.  /*Z*/
         IF fri_tempm.METER > 0 THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT STRING(fri_tempm.METER)).                      
         FIND FIRST markgrupp WHERE markgrupp.NUM = fri_tempm.NUM AND markgrupp.KABNR = fri_tempm.KABNR NO-ERROR.
         IF AVAILABLE markgrupp THEN DO: 
            ASSIGN
            cRange = "A" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.GRUPP).
            cRange = "O" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMA",INPUT 10,INPUT markgrupp.ABONNENT).           
         END.         
         IF anradrakn LE 43 THEN DO:
           /*DET RYMMS BARA 3 ANMÄRKNINGAR*/
            ASSIGN
            iColumn = anradrakn
            cColumn = STRING(iColumn)
            cRange = "C" + cColumn.
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT fri_tempm.ANMARK).
         END.              
      END.     
      {EXCELFEL2.I}
   END.     
END PROCEDURE.


PROCEDURE flikmtrl_UI :
   EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR.
   EMPTY TEMP-TABLE ekon_val NO-ERROR. 
   CREATE ekon_val.
   BUFFER-COPY kon_val TO ekon_val.
   ASSIGN ekon_val.BERAONR = valaonr ekon_val.OMRADE = valomrade.   
   RUN skapalista_UI IN blistapph (INPUT valaonr,INPUT valomrade,INPUT TABLE ekon_val,OUTPUT TABLE mtrl_temp2,OUTPUT TABLE mtrl_temp).
   RELEASE OBJECT chWorksheet NO-ERROR.
   chWorkSheet = chExcelApplication:Sheets:ADD NO-ERROR.
   chWorkSheet:Name = "Materielbilaga"   NO-ERROR.
   chWorkSheet:MOVE(,chWorkbook:Sheets(2)) NO-ERROR.   
   chWorkSheet = chExcelApplication:Sheets:Item(2) NO-ERROR.   
   chWorkSheet:Columns("A"):ColumnWidth = 10 NO-ERROR.
   chWorkSheet:Columns("B"):ColumnWidth = 40 NO-ERROR.
   chWorkSheet:Columns("C"):ColumnWidth = 5 NO-ERROR.
   chWorkSheet:Columns("D"):ColumnWidth = 8 NO-ERROR.
   chWorkSheet:Columns("E"):ColumnWidth = 8 NO-ERROR.
   chWorkSheet:Columns("F"):ColumnWidth = 10 NO-ERROR.      
    ASSIGN   
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I} 
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   {EXCELFEL.I}
   assign
   iColumn = iColumn + 1   
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I}
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Lista materiel/projekt " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).      
   END.
   ELSE IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Materielspecifikation " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).      
   END.
   ELSE DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Lista materiel/artikel " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).       
   END.    
   {EXCELFEL.I} 
   ASSIGN
   iColumn = iColumn + 2
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.   
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I}
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaonamnk + ": " + valort).
   {EXCELFEL.I}       
   IF Guru.GlobalaVariabler:plusaonr NE "" THEN DO:
      ASSIGN
      iColumn = iColumn + 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + Guru.GlobalaVariabler:plusaonr + " Delnr:" +
      STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])).      
   END.
   ELSE DO:
      ASSIGN
      iColumn = iColumn + 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Beredning nr : " + STRING(valaonr)).      
   END.   
   {EXCELFEL.I}  
   ASSIGN
   iColumn = iColumn + 1
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Kabelskåp: " + STRING(kon_id.FRI3)).
   ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Kabelskåp: " + STRING(kon_id.FRI2)).
   {EXCELFEL.I}            
   ASSIGN
   iColumn = iColumn + 2
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11   NO-ERROR.   
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:genk).     
   cRange = "B" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.   
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Benämning").
   cRange = "C" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11   NO-ERROR.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Enhet").      
   cRange = "D" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE   NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Antal").   
   IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:
      ASSIGN
      cRange = "E" + cColumn
      chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Pris/Enhet").      
      cRange = "F" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Summa").      
   END.    
   {EXCELFEL.I}    
   chWorkSheet:Range("A:A"):NumberFormat = "@" NO-ERROR.   
   FOR EACH mtrl_temp2 USE-INDEX ENR:
      {EXCELFEL.I} 
      IF mtrl_temp2.ANTAL > 0 THEN DO:      
         iColumn = iColumn + 1.
         cColumn = STRING(iColumn).
         cRange = "A" + cColumn.                                 
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ENR).                        
         cRange = "B" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(mtrl_temp2.BENAMNING,1,40)).
         cRange = "C" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ENHET).
         cRange = "D" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  mtrl_temp2.ANTAL).
         IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:      
            cRange = "E" + cColumn.            
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.PRIS).
            cRange = "F" + cColumn.            
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ANTAL * mtrl_temp2.PRIS).
         END.
         {EXCELFEL.I}
      END.      
   END.
   chWorkSheet = chExcelApplication:Sheets:Item(1) NO-ERROR.
   chWorkSheet:SELECT NO-ERROR. 
 END PROCEDURE.        

PROCEDURE flikmtrl2_UI :
   DEFINE VARIABLE chCell             AS COM-HANDLE NO-UNDO.
   DEFINE VARIABLE chPageBreak        AS COM-HANDLE NO-UNDO.
   DEFINE VARIABLE cActiveCell        AS COM-HANDLE NO-UNDO.
   ASSIGN
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):SELECT NO-ERROR.
   ASSIGN
   cActiveCell = chExcelApplication:ActiveCell NO-ERROR.
   chCell = chWorkSheet:Range(cRange) NO-ERROR.                
   chPageBreak = chWorkSheet:HPageBreaks:ADD(chCell) NO-ERROR.
   RELEASE OBJECT chCell NO-ERROR.
   RELEASE OBJECT chPageBreak NO-ERROR.
   RELEASE OBJECT cActiveCell NO-ERROR. 
   ASSIGN
   chCell = ?
   chPageBreak = ?
   cActiveCell = ?.
   EMPTY TEMP-TABLE mtrl_temp2 NO-ERROR.
   EMPTY TEMP-TABLE ekon_val NO-ERROR. 
   CREATE ekon_val.
   BUFFER-COPY kon_val TO ekon_val.
   ASSIGN ekon_val.BERAONR = valaonr ekon_val.OMRADE = valomrade.   
   RUN skapalista_UI IN blistapph (INPUT valaonr,INPUT valomrade,INPUT TABLE ekon_val,OUTPUT TABLE mtrl_temp2,OUTPUT TABLE mtrl_temp).   
   ASSIGN   
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I} 
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1]))).
   {EXCELFEL.I}
   assign
   iColumn = iColumn + 1   
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I}
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Lista materiel/projekt " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).      
   END.
   ELSE IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Materielspecifikation " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).      
   END.
   ELSE DO:
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Lista materiel/artikel " + STRING(TODAY) + " " + STRING(TIME,"HH:MM:SS")).       
   END.    
   {EXCELFEL.I} 
   ASSIGN
   iColumn = iColumn + 2
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.   
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   {EXCELFEL.I}
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaonamnk + ": " + valort).
   {EXCELFEL.I}       
   IF Guru.GlobalaVariabler:plusaonr NE "" THEN DO:
      ASSIGN
      iColumn = iColumn + 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:gaok + ": " + Guru.GlobalaVariabler:plusaonr + " Delnr:" +
      STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])).     
   END.
   ELSE DO:
      ASSIGN
      iColumn = iColumn + 1
      cColumn = STRING(iColumn)
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Beredning nr : " + STRING(valaonr)).      
   END.   
   {EXCELFEL.I}  
   ASSIGN
   iColumn = iColumn + 1
   cColumn = STRING(iColumn)
   cRange = "A" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.
   IF kon_id.FRI3 NE "" THEN RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Kabelskåp: " + STRING(kon_id.FRI3)).
   ELSE RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Kabelskåp: " + STRING(kon_id.FRI2)).
   {EXCELFEL.I}            
   ASSIGN
   iColumn = iColumn + 2
   cColumn = STRING(iColumn)
   cRange = "U" + cColumn.
   chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11   NO-ERROR.   
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT Guru.Konstanter:genk).     
   cRange = "E" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11  NO-ERROR.   
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Benämning").
   cRange = "Z" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11   NO-ERROR.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Enhet").      
   cRange = "AE" + cColumn.
   ASSIGN
   chWorkSheet:Range(cRange):Font:Bold = TRUE   NO-ERROR.
   chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
   RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Antal").   
   IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:
      ASSIGN
      cRange = "E" + cColumn
      chWorkSheet:Range(cRange):Font:Bold = TRUE  NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Pris/Enhet").      
      cRange = "F" + cColumn.
      chWorkSheet:Range(cRange):Font:Bold = TRUE NO-ERROR.
      chWorkSheet:Range(cRange):FONT:ColorIndex = 11 NO-ERROR.
      RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT "Summa").      
   END.    
   {EXCELFEL.I}    
   chWorkSheet:Range("U:U"):NumberFormat = "@" NO-ERROR.   
   FOR EACH mtrl_temp2 USE-INDEX ENR:
      {EXCELFEL.I} 
      IF mtrl_temp2.ANTAL > 0 THEN DO:      
         iColumn = iColumn + 1.
         cColumn = STRING(iColumn).
         cRange = "U" + cColumn.                                 
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ENR).                        
         cRange = "E" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT SUBSTRING(mtrl_temp2.BENAMNING,1,40)).
         cRange = "Z" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ENHET).
         cRange = "AE" + cColumn.         
         RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT  mtrl_temp2.ANTAL).
         IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN DO:      
            cRange = "E" + cColumn.            
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.PRIS).
            cRange = "F" + cColumn.            
            RUN utexcel_UI (INPUT "TIMES NEW ROMAN",INPUT 10,INPUT mtrl_temp2.ANTAL * mtrl_temp2.PRIS).
         END.
         {EXCELFEL.I}
      END.      
   END.
   RELEASE OBJECT chWorksheet NO-ERROR.
   chWorkSheet = chExcelApplication:Sheets:Item(1) NO-ERROR.
   chWorkSheet:SELECT NO-ERROR. 
 END PROCEDURE.        
 
 PROCEDURE isSiffra_UI :   
   DEFINE INPUT PARAMETER varde AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER artecken AS LOGICAL NO-UNDO.
   DEFINE VARIABLE ascivarde AS INTEGER NO-UNDO.   
   ascivarde = ASC(varde).
   /*siffror*/
   IF ascivarde >= 48 AND ascivarde <= 57 THEN artecken = TRUE.
   ELSE artecken = FALSE.
END PROCEDURE.
 
 
