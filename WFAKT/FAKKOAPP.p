/*FAKKOAPP.P GURUKUND TIMMAR GURUHBOK*/
/*
DEFINE TEMP-TABLE foretemp NO-UNDO
   FIELD FTG AS CHARACTER
   INDEX FTG IS PRIMARY FTG.
   */
   
 &Scoped-define NEW NEW  
 {FAKTTEMP.I}  
 {NAMNDB.I}
{STARTFORAPP.I}
DEFINE TEMP-TABLE strokund
   FIELD FORETAG LIKE AVDELNING.AVDELNINGNR
   FIELD ORDNING AS INTEGER
   FIELD ORDNINGNUM AS INTEGER 
   FIELD TRANSKOD AS CHARACTER  
   FIELD KLIENTNR LIKE AVDELNING.AVDELNINGNR 
   FIELD KUNDNR LIKE BESTTAB.VIBESTID        
   FIELD DELKUND AS INTEGER
   FIELD NAMNKUND LIKE FAKTNAMN.BESTNAMN
   FIELD ADRESS LIKE FAKTNAMN.FAKADRESS         
   FIELD POSTNR LIKE FAKTNAMN.FAKPNR
   FIELD FAKTNR LIKE FAKTSKARP.LOPNR                                 
   FIELD DATUMFAKT AS DATE
   FIELD DATUMFF AS DATE
   FIELD MBELOPP AS DECIMAL 
   FIELD BELOPP AS DECIMAL
   FIELD DEBKRED AS CHARACTER
   FIELD POSTADRESS LIKE FAKTNAMN.FAKORT
   FIELD KUNDTYPFAKT AS CHARACTER
   FIELD BOKDATUM AS DATE                                      
   FIELD KUNDKONTO LIKE KUNDFODRAN.KUNDKONTO
   FIELD REF2 AS CHARACTER                                                      
   FIELD AONR LIKE FAKTKUNDKONTO.AONR
   FIELD DELNR LIKE FAKTKUNDKONTO.DELNR
   INDEX SORT IS PRIMARY FORETAG ORDNING ORDNINGNUM KLIENTNR DELKUND.

{VISKONTAB.I}


DEFINE STREAM eko.
DEFINE STREAM ekospar.

DEFINE TEMP-TABLE huvudtemp   NO-UNDO
   FIELD ORDNING AS INTEGER
   FIELD TRANSKOD AS CHARACTER
   FIELD KUND AS CHARACTER
   INDEX SORT IS PRIMARY ORDNING.

DEFINE TEMP-TABLE sumkont
   FIELD AONR LIKE AONRKONTKOD.AONR 
   FIELD DELNR LIKE AONRKONTKOD.DELNR
   FIELD K1 LIKE AONRKONTKOD.K1 
   FIELD K2 LIKE AONRKONTKOD.K2 
   FIELD K3 LIKE AONRKONTKOD.K3 
   FIELD K4 LIKE AONRKONTKOD.K4 
   FIELD K5 LIKE AONRKONTKOD.K5 
   FIELD KOSTNADSLAG AS CHARACTER
   FIELD OMRADEKOP AS CHARACTER
   FIELD OMRADESALJ AS CHARACTER
   FIELD SATS% AS INTEGER
   FIELD BELOPP AS DECIMAL
   FIELD AONRKOP LIKE AONRKONTKOD.AONR 
   FIELD DELNRKOP LIKE AONRKONTKOD.DELNR
   
   INDEX AONR IS PRIMARY AONR DELNR K1 K2
   INDEX AONRKOP AONRKOP DELNRKOP K1 K2
   INDEX OMRADESALJ OMRADESALJ
   INDEX OMRADEKOP OMRADEKOP.
DEFINE TEMP-TABLE sumkontkop NO-UNDO LIKE sumkont
   FIELD K1SALJ AS CHARACTER.
   
DEFINE BUFFER sumkontbuff FOR sumkont.
DEFINE BUFFER sumkontkopbuff FOR sumkontkop.


DEFINE INPUT PARAMETER debkred AS LOGICAL NO-UNDO.   
DEFINE INPUT PARAMETER fplanr LIKE FAKTPLAN.FAKTNR NO-UNDO.
DEFINE INPUT PARAMETER fpdelnr LIKE FAKTPLAN.FDELNR NO-UNDO.
DEFINE INPUT PARAMETER skarpvar LIKE FAKTSKARP.LOPNR NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp. 
EMPTY TEMP-TABLE felmeddtemp NO-ERROR. 
DEFINE VARIABLE bestvarmapp AS CHARACTER NO-UNDO.
DEFINE VARIABLE orevar AS LOGICAL NO-UNDO.
DEFINE VARIABLE varbokdatum AS DATE NO-UNDO.
DEFINE VARIABLE varfakturd AS DATE NO-UNDO.
DEFINE VARIABLE varforfalld AS DATE NO-UNDO.
DEFINE VARIABLE strovar AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE varbelopp AS DECIMAL NO-UNDO.
DEFINE VARIABLE varmbelopp AS DECIMAL NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(140)" NO-UNDO.
DEFINE VARIABLE str2 AS CHARACTER FORMAT "X(140)" NO-UNDO.
DEFINE VARIABLE strIGUR1 AS CHARACTER FORMAT "X(140)" NO-UNDO.
DEFINE VARIABLE strIGUR2 AS CHARACTER FORMAT "X(140)" NO-UNDO.
DEFINE VARIABLE progrest AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE prognamnold AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE prognamnold2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE prognamndat AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE prognamnque AS CHARACTER FORMAT "X(20)" NO-UNDO.                
DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(132)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER NO-UNDO. 
DEFINE VARIABLE kommandoprog AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE prognamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnk AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamno AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnkk AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnIBT AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnkIBT AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnIBTI AS CHARACTER NO-UNDO.
DEFINE VARIABLE prognamnkIBTI AS CHARACTER NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE bredd AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE nrcol AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE breddantal AS INTEGER NO-UNDO.

DEFINE VARIABLE utnrk AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE breddk AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE nrcolk AS INTEGER EXTENT 55 NO-UNDO.
DEFINE VARIABLE breddantalk AS INTEGER NO-UNDO.

DEFINE VARIABLE breddantalIBT AS INTEGER NO-UNDO.
DEFINE VARIABLE utnrIBT AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE breddIBT AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE nrcolIBT AS INTEGER EXTENT 50 NO-UNDO.
DEFINE VARIABLE i AS INTEGER NO-UNDO. 
DEFINE VARIABLE fbestapph AS HANDLE NO-UNDO.
DEFINE VARIABLE lasanv AS CHARACTER NO-UNDO.
{EXTRATAB.I}

{TIDUTTT.I}
DEFINE BUFFER faktureradbuff FOR FAKTURERAD.
{AMERICANEUROPEAN.I}
strovar = FALSE.
FIND FIRST FAKTPLAN WHERE FAKTPLAN.FAKTNR = fplanr NO-LOCK NO-ERROR.
FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = FAKTPLAN.OMRADE NO-LOCK NO-ERROR.
FIND FIRST AVDELNING WHERE AVDELNING.AVDELNINGNR = OMRADETAB.AVDELNINGNR 
NO-LOCK NO-ERROR.
FIND FIRST BESTTAB WHERE BESTTAB.BESTID = FAKTPLAN.BESTID 
USE-INDEX BEST NO-LOCK NO-ERROR.
FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR 
USE-INDEX FAKTREGLER NO-LOCK NO-ERROR.
FIND FIRST KUNDTYP WHERE KUNDTYP.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
/*FAKTFOR*/

IF Guru.Konstanter:globforetag = "GRAN"  OR Guru.Konstanter:globforetag = "CELPA"  THEN DO:
   IF debkred = FALSE THEN DO:         
      FIND FIRST FAKTURERAD WHERE FAKTURERAD.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTURERAD.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundres_UI.
      RUN faktim_UI.
   END.
   ELSE DO:
      FIND FIRST FAKTKRED WHERE FAKTKRED.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTKRED.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundreskre_UI.
      RUN faktimkre_UI.
   END.
   RUN utgr_UI.    
END.
IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "cELPA"  THEN DO:
   IF debkred = FALSE THEN DO:         
      FIND FIRST FAKTURERAD WHERE FAKTURERAD.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTURERAD.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundres_UI.
      RUN faktim_UI.
   END.
   ELSE DO:
      FIND FIRST FAKTKRED WHERE FAKTKRED.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTKRED.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundreskre_UI.
      RUN faktimkre_UI.
   END.
   RUN utlule_UI.    
END.
IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA"  THEN DO:
   /*DEBET*/
   IF debkred = FALSE THEN DO:         
      FIND FIRST FAKTURERAD WHERE FAKTURERAD.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTURERAD.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundres_UI.
      RUN faktim_UI.
   END.
   ELSE DO:
      /*KREDIT*/
      FIND FIRST FAKTKRED WHERE FAKTKRED.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTKRED.FDELNR = fpdelnr NO-LOCK NO-ERROR.  
      RUN kundreskre_UI.
      RUN faktimkre_UI.
   END.
   RUN utsund_UI.   
    
END.

{GRFAKKONTO.I}

{LULEFAKKONTO.I}

{SUNDFAKKONTO.I}


{EUROPEANAMERICAN.I}

PROCEDURE kundres_UI:
   FIND FIRST FAKTKUNDKONTO WHERE 
   FAKTKUNDKONTO.FAKTNR = fplanr AND  
   FAKTKUNDKONTO.FDELNR = fpdelnr AND 
   FAKTKUNDKONTO.VFAKTNR = skarpvar NO-LOCK NO-ERROR.
   IF NOT AVAILABLE FAKTKUNDKONTO THEN DO:
      RETURN.
   END.
   ASSIGN
   varbokdatum = FAKTURERAD.BOKDATUM
   varfakturd = FAKTKUNDKONTO.FAKTDATUM 
   varforfalld = FAKTKUNDKONTO.FDATUM.
   OPEN QUERY kq FOR EACH FAKTKUNDKONTO WHERE 
   FAKTKUNDKONTO.FAKTNR = fplanr AND 
   FAKTKUNDKONTO.VFAKTNR = skarpvar NO-LOCK. 
   GET FIRST kq NO-LOCK.
   DO WHILE AVAILABLE(FAKTKUNDKONTO):   
      varbelopp = varbelopp + FAKTKUNDKONTO.BELOPP. 
      GET NEXT kq NO-LOCK.
   END.       
   OPEN QUERY mq FOR EACH FAKTMOMS WHERE 
   FAKTMOMS.FAKTNR = fplanr AND 
   FAKTMOMS.VFAKTNR = skarpvar NO-LOCK.  
   GET FIRST mq NO-LOCK.
   DO WHILE AVAILABLE(FAKTMOMS):   
      varmbelopp = varmbelopp + FAKTMOMS.MOMSBELOPP. 
      GET NEXT mq NO-LOCK.
   END.
   varmbelopp = varmbelopp + FAKTURERAD.ORESUTJ.
   /*KUND ÄR MOMSAD OCH ÖRESUTJ*/
END PROCEDURE.
PROCEDURE grbokfor_UI:
   
END PROCEDURE.


PROCEDURE kundreskre_UI:
   FIND FIRST FAKTKUNDKONTOKRED WHERE 
   FAKTKUNDKONTOKRED.FAKTNR = fplanr AND  
   FAKTKUNDKONTOKRED.FDELNR = fpdelnr AND 
   FAKTKUNDKONTOKRED.VKREDIT = skarpvar NO-LOCK NO-ERROR.
   IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN DO:
      RETURN.
   END.
   ASSIGN
   varbokdatum = FAKTKRED.BOKDATUM
   varfakturd = FAKTKUNDKONTOKRED.FAKTDATUM 
   varforfalld = FAKTKUNDKONTOKRED.FDATUM.
   OPEN QUERY kkq FOR EACH FAKTKUNDKONTOKRED WHERE 
   FAKTKUNDKONTOKRED.FAKTNR = fplanr AND 
   FAKTKUNDKONTOKRED.VKREDIT = skarpvar NO-LOCK. 
   GET FIRST kkq NO-LOCK.
   DO WHILE AVAILABLE(FAKTKUNDKONTOKRED):   
      varbelopp = varbelopp + FAKTKUNDKONTOKRED.BELOPP. 
      GET NEXT kkq NO-LOCK.
   END.       
   OPEN QUERY kmq FOR EACH FAKTMOMSKRED WHERE 
   FAKTMOMSKRED.FAKTNR = fplanr AND 
   FAKTMOMSKRED.VKREDIT = skarpvar NO-LOCK.  
   GET FIRST kmq NO-LOCK.
   DO WHILE AVAILABLE(FAKTMOMSKRED):   
      varmbelopp = varmbelopp + FAKTMOMSKRED.MOMSBELOPP. 
      GET NEXT kmq NO-LOCK.
   END.
   varmbelopp = varmbelopp + FAKTKRED.ORESUTJ.
   
END PROCEDURE.
PROCEDURE grbokforkre_UI:
   
END PROCEDURE.

PROCEDURE styrintakt_UI :
   {STYRDEB.I}   
END PROCEDURE.
PROCEDURE viskont_UI :
   OPEN QUERY BRW_K1 FOR EACH FAKTKUNDKONTO WHERE 
   FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTKUNDKONTO.VFAKTNR = FAKTURERAD.VFAKTNR NO-LOCK, 
   EACH KUNDFODRAN WHERE KUNDFODRAN.KUNDKONTOID = FAKTKUNDKONTO.KUNDKONTOID NO-LOCK, 
   EACH MOTPART WHERE MOTPART.MOTPARTID = FAKTKUNDKONTO.MOTPARTID NO-LOCK.
   
   OPEN QUERY BRW_K2 FOR EACH FAKTINTAKTKONT WHERE 
   FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTINTAKTKONT.VFAKTNR = FAKTURERAD.VFAKTNR NO-LOCK, 
   EACH INTAKTTAB WHERE INTAKTTAB.INTAKTID = FAKTINTAKTKONT.INTAKTID NO-LOCK, 
   EACH MOTPART WHERE MOTPART.MOTPARTID = FAKTINTAKTKONT.MOTPARTID NO-LOCK.
   OPEN QUERY BRW_K4 FOR EACH FAKTMOMS WHERE 
   FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTMOMS.VFAKTNR = FAKTURERAD.VFAKTNR NO-LOCK, 
   EACH MOMSTAB WHERE MOMSTAB.MOMSID = FAKTMOMS.MOMSID NO-LOCK.       
   {VISKONT.I}    
   GET FIRST BRW_K2 NO-LOCK.
   DO WHILE AVAILABLE(FAKTINTAKTKONT):
      OPEN QUERY faokq FOR EACH FAKTAONRKONTO WHERE 
      FAKTAONRKONTO.FDELNR = 0 AND
      FAKTAONRKONTO.FAKTNR = FAKTINTAKTKONT.FAKTNR AND 
      FAKTAONRKONTO.VFAKTNR = FAKTINTAKTKONT.VFAKTNR AND
      FAKTAONRKONTO.AONR = FAKTINTAKTKONT.AONR AND       
      FAKTAONRKONTO.DELNR = FAKTINTAKTKONT.DELNR NO-LOCK.
      GET FIRST faokq NO-LOCK.
      DO WHILE AVAILABLE(FAKTAONRKONTO):
         CREATE sumkont.
         ASSIGN
         sumkont.AONR = FAKTAONRKONTO.AONR 
         sumkont.DELNR = FAKTAONRKONTO.DELNR
         sumkont.K1 = FAKTAONRKONTO.K1 
         sumkont.K2 = FAKTAONRKONTO.K2 
         sumkont.K3 = FAKTAONRKONTO.K3 
         sumkont.K4 = FAKTAONRKONTO.K4 
         sumkont.K5 = FAKTAONRKONTO.K5 
         sumkont.SATS% = FAKTAONRKONTO.SATS%
         sumkont.BELOPP = ROUND(FAKTAONRKONTO.SATS% * FAKTINTAKTKONT.BELOPP / 100,2).
         GET NEXT faokq NO-LOCK.
      END.
      GET NEXT BRW_K2 NO-LOCK.
   END.
   /*KÖPARE*/
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      RUN EXTRATABHMT.P PERSISTENT SET fbestapph.    
      FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK,
      EACH EXTRAKOPPLINGAR WHERE EXTRAKOPPLINGAR.PROGRAM = "FBDEB" AND
      EXTRAKOPPLINGAR.KOPPLACHAR1 = FAKTAONR.AONR AND       
      EXTRAKOPPLINGAR.KOPPLAINT1 = FAKTAONR.DELNR AND 
      EXTRAKOPPLINGAR.SOKINT[1] = FAKTURERAD.VFAKTNR
      NO-LOCK:
         FOR EACH FAKTAONRKONTO WHERE FAKTAONRKONTO.FDELNR = 1 AND
         FAKTAONRKONTO.FAKTNR = FAKTPLAN.FAKTNR AND FAKTAONRKONTO.VFAKTNR = FAKTURERAD.VFAKTNR AND
         FAKTAONRKONTO.AONR = EXTRAKOPPLINGAR.KOPPLACHAR2 AND FAKTAONRKONTO.DELNR = EXTRAKOPPLINGAR.KOPPLAINT2
         NO-LOCK:

            CREATE sumkontkop.
            ASSIGN
            sumkontkop.AONR = EXTRAKOPPLINGAR.KOPPLACHAR1
            sumkontkop.DELNR = EXTRAKOPPLINGAR.KOPPLAINT1
            sumkontkop.AONRKOP = EXTRAKOPPLINGAR.KOPPLACHAR2
            sumkontkop.DELNRKOP = EXTRAKOPPLINGAR.KOPPLAINT2
            sumkontkop.K1 = FAKTAONRKONTO.K1 
            sumkontkop.K2 = FAKTAONRKONTO.K2 
            sumkontkop.K3 = FAKTAONRKONTO.K3 
            sumkontkop.K4 = FAKTAONRKONTO.K4 
            sumkontkop.K5 = FAKTAONRKONTO.K5     
            sumkontkop.SATS% = FAKTAONRKONTO.SATS%
                                       /*fakturerat belopp * % från faktura bestproj * kontoförd*/
            sumkontkop.BELOPP = ROUND(EXTRAKOPPLINGAR.SOKDEC[1] * sumkontkop.SATS% / 100,2).         
         END.
      END.
      IF VALID-HANDLE(fbestapph) THEN DELETE PROCEDURE fbestapph.
      fbestapph = ?.
   END.
END PROCEDURE.
PROCEDURE viskontK_UI :
   OPEN QUERY BRW_K1 FOR EACH FAKTKUNDKONTOKRED WHERE 
   FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTKUNDKONTOKRED.VKREDIT = FAKTKRED.VKREDIT NO-LOCK, 
   EACH KUNDFODRAN WHERE KUNDFODRAN.KUNDKONTOID = FAKTKUNDKONTOKRED.KUNDKONTOID NO-LOCK, 
   EACH MOTPART WHERE MOTPART.MOTPARTID = FAKTKUNDKONTOKRED.MOTPARTID NO-LOCK. 
   OPEN QUERY BRW_K2 FOR EACH FAKTINTAKTKONTKRED WHERE 
   FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTINTAKTKONTKRED.VKREDIT = FAKTKRED.VKREDIT NO-LOCK, 
   EACH INTAKTTAB WHERE INTAKTTAB.INTAKTID = FAKTINTAKTKONTKRED.INTAKTID NO-LOCK, 
   EACH MOTPART WHERE MOTPART.MOTPARTID = FAKTINTAKTKONTKRED.MOTPARTID NO-LOCK.
   
   OPEN QUERY BRW_K4 FOR EACH FAKTMOMSKRED WHERE 
   FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND 
   FAKTMOMSKRED.VKREDIT = FAKTKRED.VKREDIT NO-LOCK, 
   EACH MOMSTAB WHERE MOMSTAB.MOMSID = FAKTMOMSKRED.MOMSID NO-LOCK.       
   {VISKONTK.I}     
      
   GET FIRST BRW_K2 NO-LOCK.
   DO WHILE AVAILABLE(FAKTINTAKTKONTKRED):
      OPEN QUERY faokq FOR EACH FAKTAONRKONTOKRED WHERE 
      FAKTAONRKONTOKRED.FDELNR = 0 AND
      FAKTAONRKONTOKRED.FAKTNR = FAKTINTAKTKONTKRED.FAKTNR AND 
      FAKTAONRKONTOKRED.VKREDIT = FAKTINTAKTKONTKRED.VKREDIT AND
      FAKTAONRKONTOKRED.AONR = FAKTINTAKTKONTKRED.AONR AND       
      FAKTAONRKONTOKRED.DELNR = FAKTINTAKTKONTKRED.DELNR NO-LOCK.
      GET FIRST faokq NO-LOCK.
      DO WHILE AVAILABLE(FAKTAONRKONTOKRED):
         CREATE sumkont.
         ASSIGN
         sumkont.AONR = FAKTAONRKONTOKRED.AONR 
         sumkont.DELNR = FAKTAONRKONTOKRED.DELNR
         sumkont.K1 = FAKTAONRKONTOKRED.K1 
         sumkont.K2 = FAKTAONRKONTOKRED.K2 
         sumkont.K3 = FAKTAONRKONTOKRED.K3 
         sumkont.K4 = FAKTAONRKONTOKRED.K4 
         sumkont.K5 = FAKTAONRKONTOKRED.K5 
         sumkont.SATS% = FAKTAONRKONTOKRED.SATS%
         sumkont.BELOPP = ROUND(FAKTAONRKONTOKRED.SATS% * FAKTINTAKTKONTKRED.BELOPP / 100,2).
         GET NEXT faokq NO-LOCK.
      END.
      GET NEXT BRW_K2 NO-LOCK.
   END.
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:
      RUN EXTRATABHMT.P PERSISTENT SET fbestapph.    
      FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK,
      EACH EXTRAKOPPLINGAR WHERE EXTRAKOPPLINGAR.PROGRAM = "FBKRED" AND
      EXTRAKOPPLINGAR.KOPPLACHAR1 = FAKTAONR.AONR AND       
      EXTRAKOPPLINGAR.KOPPLAINT1 = FAKTAONR.DELNR AND
      EXTRAKOPPLINGAR.SOKINT[1] = FAKTKRED.VKREDIT NO-LOCK,
      EACH FAKTAONRKONTOKRED WHERE FAKTAONRKONTOKRED.FDELNR = 1 AND
      FAKTAONRKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND FAKTAONRKONTOKRED.VKREDIT = FAKTKRED.VKREDIT NO-LOCK.
         CREATE sumkontkop.
         ASSIGN
         sumkontkop.AONR = EXTRAKOPPLINGAR.KOPPLACHAR1
         sumkontkop.DELNR = EXTRAKOPPLINGAR.KOPPLAINT1
         sumkontkop.AONRKOP = EXTRAKOPPLINGAR.KOPPLACHAR2
         sumkontkop.DELNRKOP = EXTRAKOPPLINGAR.KOPPLAINT2
         sumkontkop.K1 = FAKTAONRKONTOKRED.K1 
         sumkontkop.K2 = FAKTAONRKONTOKRED.K2 
         sumkontkop.K3 = FAKTAONRKONTOKRED.K3 
         sumkontkop.K4 = FAKTAONRKONTOKRED.K4 
         sumkontkop.K5 = FAKTAONRKONTOKRED.K5     
         sumkontkop.SATS% = FAKTAONRKONTOKRED.SATS%
         sumkontkop.BELOPP = ROUND(EXTRAKOPPLINGAR.SOKDEC[1] * sumkontkop.SATS% / 100,2).         
      END.                
      IF VALID-HANDLE(fbestapph) THEN DELETE PROCEDURE fbestapph. 
      fbestapph = ?.
   END.
END PROCEDURE.

PROCEDURE faktim_UI:
   RUN GRFAKTIM.P 
   (INPUT debkred, INPUT fplanr, INPUT fpdelnr, INPUT skarpvar).
END PROCEDURE.
PROCEDURE faktimkre_UI:
   RUN GRFAKTIM.P 
   (INPUT debkred, INPUT fplanr, INPUT fpdelnr, INPUT skarpvar).
END PROCEDURE.

