/*VISINKOPAPP.P*/
{STARTFORAPP.I}
{BESTMTRL.I}
FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ) FORWARD.
DEFINE VARIABLE priset AS LOGICAL NO-UNDO.                
DEFINE VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.         
DEFINE VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE VARIABLE valort AS CHARACTER NO-UNDO. 
DEFINE VARIABLE valomrade AS CHARACTER NO-UNDO.  
DEFINE VARIABLE datvar AS DATE NO-UNDO.  
DEFINE VARIABLE klockansek AS INTEGER NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(130)" NO-UNDO. 
DEFINE VARIABLE sumpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE kommandosortquery AS CHARACTER NO-UNDO.
{TIDUTTTNEW.I}

DEFINE TEMP-TABLE superlev NO-UNDO
      FIELD levkod AS CHARACTER
      FIELD levnamn AS CHARACTER
      FIELD LPRIS AS DECIMAL.
      

         
PROCEDURE skapakom_UI :
   /* fler best per dag          */
   DEFINE INPUT PARAMETER komsort AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valaonr2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valort2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER datvar2 AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER priset2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER klockansek2 AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR best_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   ASSIGN 
   kommandosortquery = komsort
   klockansek = klockansek2
   valaonr = valaonr2
   valomrade = valomrade2
   valort = valort2
   datvar = datvar2
   priset = priset2.
   RUN huvudny_UI.   
   RUN rubrikkom_UI.
   
END PROCEDURE.
PROCEDURE skapa_UI :
   /* fler best per dag          */
   DEFINE INPUT PARAMETER valaonr2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valomrade2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valort2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER datvar2 AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER priset2 AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER klockansek2 AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER musz AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR best_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE tidut NO-ERROR. 
   ASSIGN 
   klockansek = klockansek2
   valaonr = valaonr2
   valomrade = valomrade2
   valort = valort2
   datvar = datvar2
   priset = priset2.
   RUN huvud_UI.   
   RUN rubrik_UI.
   
END PROCEDURE.

PROCEDURE huvud_UI :
   DO TRANSACTION:   
      CREATE tidut. 
      ASSIGN        
      SUBSTRING(tidut.UT,1) = "INKÖPSPROTOKOLL"
      SUBSTRING(tidut.UT,40) = STRING(TODAY)
      SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS").                                                               
      CREATE tidut.     
      CREATE tidut. 
      CREATE tidut.
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = "BEREDNING NR: " + valaonr.
      CREATE tidut. 
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaonamnk) + ": " + valort.
      CREATE tidut.          
      FIND FIRST BEREDNING WHERE BEREDNING.BERAONR = valaonr AND 
      BEREDNING.OMRADE = valomrade NO-LOCK NO-ERROR.
      FIND FIRST AONRTAB WHERE AONRTAB.AONR = BEREDNING.AONR AND
      AONRTAB.DELNR = BEREDNING.DELNR USE-INDEX AONR NO-LOCK NO-ERROR. 
      &Scoped-define FORMATNAMN AONRTAB.AONR
      {AOFORMAT2.I}
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok) + ": " + formataonr + " " + 
      "DELNR: " + STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1]).    
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "DATUM:" + STRING(datvar) + " " + STRING(klockan60(klockansek / 3600),">9.99"). 
      CREATE tidut.   
      CREATE tidut.              
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      SUBSTRING(tidut.UT,39) = "LEVERANTÖR"
      SUBSTRING(tidut.UT,50) = "ANMÄ."
      SUBSTRING(tidut.UT,56) = "ENH"
      SUBSTRING(tidut.UT,59) = "ANTAL".
      IF priset = TRUE THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,66) = "PRIS/ENHET"
         SUBSTRING(tidut.UT,77) = "SUMMA".         
      END.   
      CREATE tidut. 
      ASSIGN
       str =
"===========.=========================.==========.=====.===.=====".         
      IF priset = TRUE THEN DO:
         str = str + ".==========.==========".
      END.                                                         
      SUBSTRING(tidut.UT,1) = str. 

   END.
END PROCEDURE.


PROCEDURE huvudny_UI :
   DO TRANSACTION:   
      CREATE tidut. 
      ASSIGN        
      SUBSTRING(tidut.UT,1) = "INKÖPSPROTOKOLL"
      SUBSTRING(tidut.UT,40) = STRING(TODAY)
      SUBSTRING(tidut.UT,50) = STRING(TIME,"HH:MM:SS")                                                               
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut.     
      CREATE tidut. 
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut.
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = "BEREDNING NR: " + valaonr.
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut. 
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaonamnk) + ": " + valort
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut.          
      FIND FIRST BEREDNING WHERE BEREDNING.BERAONR = valaonr AND 
      BEREDNING.OMRADE = valomrade NO-LOCK NO-ERROR.
      FIND FIRST AONRTAB WHERE AONRTAB.AONR = BEREDNING.AONR AND
      AONRTAB.DELNR = BEREDNING.DELNR USE-INDEX AONR NO-LOCK NO-ERROR. 
      &Scoped-define FORMATNAMN AONRTAB.AONR
      {AOFORMAT2.I}
      ASSIGN                                                               
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gaok) + ": " + formataonr + " " + 
      "DELNR: " + STRING(AONRTAB.DELNR,Guru.Konstanter:varforetypchar[1])
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "DATUM:" + STRING(datvar) + " " + STRING(klockan60(klockansek / 3600),">9.99").
      SUBSTRING(tidut.UT,225) = "T".
      CREATE tidut.   
      /*
      CREATE tidut.              
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      SUBSTRING(tidut.UT,39) = "LEVERANTÖR"
      SUBSTRING(tidut.UT,50) = "ANMÄ."
      SUBSTRING(tidut.UT,56) = "ENH"
      SUBSTRING(tidut.UT,60) = "ANTAL".
      IF priset = TRUE THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,66) = "PRIS/ENHET"
         SUBSTRING(tidut.UT,77) = "SUMMA".         
      END.   
      CREATE tidut. 
      ASSIGN
       str =
"===========.=========================.==========.=====.===.=====".         
      IF priset = TRUE THEN DO:
         str = str + ".==========.==========".
      END.                                                         
      SUBSTRING(tidut.UT,1) = str.  */

   END.
END PROCEDURE.

      
PROCEDURE huvud2_UI :
   
   
   CREATE tidut.              
      ASSIGN  
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)
      SUBSTRING(tidut.UT,13) = "BENÄMNING"
      /*SUBSTRING(tidut.UT,39) = "LEVERANTÖR"*/
      SUBSTRING(tidut.UT,39) = "ANMÄ."
      SUBSTRING(tidut.UT,45) = "ENH"
      SUBSTRING(tidut.UT,49) = "ANTAL".
      IF priset = TRUE THEN DO:
         ASSIGN
         SUBSTRING(tidut.UT,55) = "PRIS/ENHET"
         SUBSTRING(tidut.UT,66) = "SUMMA".         
      END.   
      SUBSTRING(tidut.UT,225) = "R".
END PROCEDURE.

/*PROCEDURE rubrikkom_UI :
DEFINE VARIABLE best_mtrlh AS HANDLE NO-UNDO.
   DEFINE VARIABLE qh AS HANDLE NO-UNDO.
   ASSIGN best_mtrlh = TEMP-TABLE best_mtrl:DEFAULT-BUFFER-HANDLE.
   sumpris = 0.   
   CREATE QUERY qh.
   qh:SET-BUFFERS(best_mtrlh).
   qh:QUERY-PREPARE(kommandosortquery).   
   qh:QUERY-OPEN().
   qh:GET-FIRST(NO-LOCK).
   DO WHILE best_mtrlh:AVAILABLE:                    
      
   /* fler best per dag          */   
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = best_mtrl.ENR              
      SUBSTRING(tidut.UT,13) = SUBSTRING(best_mtrl.BENAMNING,1,25).
      FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
      IF AVAILABLE LEVERANTOR THEN 
      SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10). 
      ASSIGN
      SUBSTRING(tidut.UT,50) = best_mtrl.DBEST   
      SUBSTRING(tidut.UT,56) = best_mtrl.ENHET
      SUBSTRING(tidut.UT,60) = STRING(best_mtrl.ANTAL,">>>>9").
      IF priset = TRUE THEN DO: 
         ASSIGN
         SUBSTRING(tidut.UT,66) = STRING(best_mtrl.PRIS,">>>>>>9.99")
         SUBSTRING(tidut.UT,77) = STRING(best_mtrl.PRIS * best_mtrl.ANTAL,">>>>>>9.99")         
         sumpris = sumpris + (best_mtrl.PRIS * best_mtrl.ANTAL).
      END.   
      qh:GET-NEXT(NO-LOCK).        
   END.  
   qh:QUERY-CLOSE().   
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str.                                                                                           
   IF priset = TRUE THEN DO:
      CREATE tidut.     
      ASSIGN
      SUBSTRING(tidut.UT,65) = "TOTAL SUMMA:"
      SUBSTRING(tidut.UT,77) = STRING(sumpris,">>>>>>9.99").
   END.   
END PROCEDURE.
*/

PROCEDURE rubrikkom_UI :
   DEFINE VARIABLE best_mtrlh AS HANDLE NO-UNDO.
   DEFINE VARIABLE qh AS HANDLE NO-UNDO.
   ASSIGN best_mtrlh = TEMP-TABLE best_mtrl:DEFAULT-BUFFER-HANDLE.
   sumpris = 0.   
   CREATE QUERY qh.
   qh:SET-BUFFERS(best_mtrlh).
   qh:QUERY-PREPARE(kommandosortquery).   
   qh:QUERY-OPEN().
   qh:GET-FIRST(NO-LOCK).
   str =
"===========.=========================.=====.===.=====".         
   IF priset = TRUE THEN DO:
      str = str + ".==========.==========".
   END.
   DO WHILE best_mtrlh:AVAILABLE:
      FIND FIRST superlev WHERE superlev.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE superlev THEN DO:
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
         IF AVAILABLE LEVERANTOR THEN DO:
            CREATE superlev.
            superlev.LEVKOD = LEVERANTOR.LEVKOD.
            superlev.LEVNAMN = LEVERANTOR.LEVNAMN.
         END.
      END.
      qh:GET-NEXT(NO-LOCK).
   END.
   
   FOR EACH superlev NO-LOCK:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "Leverantör: " + superlev.LEVNAMN.
      SUBSTRING(tidut.UT,225) = "T".
      
      RUN huvud2_UI.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.
      qh:GET-FIRST(NO-LOCK).
      DO WHILE best_mtrlh:AVAILABLE:                    
         IF best_mtrl.LEVKOD = superlev.LEVKOD THEN DO:
            CREATE tidut.
            
            /*
            SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:genk)
            SUBSTRING(tidut.UT,13) = "BENÄMNING"
            
            SUBSTRING(tidut.UT,39) = "ANMÄ."
            SUBSTRING(tidut.UT,45) = "ENH"
            SUBSTRING(tidut.UT,49) = "ANTAL".
            IF priset = TRUE THEN DO:
            ASSIGN
            SUBSTRING(tidut.UT,55) = "PRIS/ENHET"
            SUBSTRING(tidut.UT,66) = "SUMMA".*/
            
            ASSIGN
            SUBSTRING(tidut.UT,1) = best_mtrl.ENR              
            SUBSTRING(tidut.UT,13) = SUBSTRING(best_mtrl.BENAMNING,1,25).
            FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
            IF AVAILABLE LEVERANTOR THEN 
            /*SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10). */
            ASSIGN
            SUBSTRING(tidut.UT,39) = best_mtrl.DBEST   
            SUBSTRING(tidut.UT,45) = best_mtrl.ENHET
            SUBSTRING(tidut.UT,49) = STRING(best_mtrl.ANTAL,">>>>9").
            IF priset = TRUE THEN DO: 
               ASSIGN
               SUBSTRING(tidut.UT,55) = STRING(best_mtrl.PRIS,">>>>>>9.99")
               SUBSTRING(tidut.UT,66) = STRING(best_mtrl.PRIS * best_mtrl.ANTAL,">>>>>>9.99")         
               sumpris = sumpris + (best_mtrl.PRIS * best_mtrl.ANTAL).
               superlev.LPRIS = superlev.LPRIS + (best_mtrl.PRIS * best_mtrl.ANTAL).
               /*fixa färg */
               FIND FIRST MTRL WHERE MTRL.LEVKOD = best_mtrl.LEVKOD AND MTRL.ENR = best_mtrl.ENR AND MTRL.KALKNR = 0 AND MTRL.KUND = TRUE NO-LOCK NO-ERROR.
               IF AVAILABLE MTRL THEN DO:                         
                  SUBSTRING(tidut.UT,230) = "@".
                  /*ASSIGN
                  tempbermtrl.RABATT = TRUE.*/
               END.      
               ELSE DO:
                  /*ASSIGN
                  tempbermtrl.RABATT = FALSE.*/
               END.


            END.
            SUBSTRING(tidut.UT,225) = "P". /* post */
         END.         
         qh:GET-NEXT(NO-LOCK).        
      END.
      CREATE tidut.    
      SUBSTRING(tidut.UT,1) = str.
      CREATE tidut. 
      ASSIGN
      SUBSTRING(tidut.UT,55) = "SUMMA LEV:"
      SUBSTRING(tidut.UT,66) = STRING(superlev.LPRIS,">>>>>>9.99").
      SUBSTRING(tidut.UT,225) = "P". /* post */
      CREATE tidut. 
   END.
     
   qh:QUERY-CLOSE().   
   
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str.                                                                                           
   IF priset = TRUE THEN DO:
      CREATE tidut.     
      ASSIGN
      SUBSTRING(tidut.UT,55) = "TOTAL SUMMA:"
      SUBSTRING(tidut.UT,66) = STRING(sumpris,">>>>>>9.99").
      SUBSTRING(tidut.UT,225) = "P". /* post */
   END.   
END PROCEDURE.



PROCEDURE rubrik_UI :
   sumpris = 0.   
   /* fler best per dag          */   
   FOR EACH best_mtrl WHERE best_mtrl.DATUM = datvar AND best_mtrl.DELNR = klockansek BY best_mtrl.ENR:            
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,1) = best_mtrl.ENR              
      SUBSTRING(tidut.UT,13) = SUBSTRING(best_mtrl.BENAMNING,1,25).
      FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
      IF AVAILABLE LEVERANTOR THEN 
      SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10). 
      ASSIGN
      SUBSTRING(tidut.UT,50) = best_mtrl.DBEST   
      SUBSTRING(tidut.UT,56) = best_mtrl.ENHET
      SUBSTRING(tidut.UT,60) = STRING(best_mtrl.ANTAL,">>>>9").
      IF priset = TRUE THEN DO: 
         ASSIGN
         SUBSTRING(tidut.UT,66) = STRING(best_mtrl.PRIS,">>>>>>9.99")
         SUBSTRING(tidut.UT,77) = STRING(best_mtrl.PRIS * best_mtrl.ANTAL,">>>>>>9.99")         
         sumpris = sumpris + (best_mtrl.PRIS * best_mtrl.ANTAL).
      END.   
   END.     
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str.                                                                                           
   IF priset = TRUE THEN DO:
      CREATE tidut.     
      ASSIGN
      SUBSTRING(tidut.UT,65) = "TOTAL SUMMA:"
      SUBSTRING(tidut.UT,77) = STRING(sumpris,">>>>>>9.99").
   END.   
   

END PROCEDURE.

/*
NY RUBRIK SOM INTE ANVÄNDS

PROCEDURE rubrik_UI :
   EMPTY TEMP-TABLE superlev.

   sumpris = 0.   
   /* fler best per dag          */   
   FOR EACH best_mtrl WHERE best_mtrl.DATUM = datvar AND best_mtrl.DELNR = klockansek BY best_mtrl.ENR:
      FIND FIRST superlev WHERE superlev.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE superlev THEN DO:
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
         IF AVAILABLE LEVERANTOR THEN DO:
            CREATE superlev.
            superlev.LEVKOD = LEVERANTOR.LEVKOD.
            superlev.LEVNAMN = LEVERANTOR.LEVNAMN.
         END.
      END.
   END.

   FOR EACH superlev NO-LOCK:
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "Leverantör: " + superlev.LEVNAMN.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = str.

      FOR EACH best_mtrl WHERE best_mtrl.DATUM = datvar AND best_mtrl.LEVKOD = superlev.LEVKOD AND best_mtrl.DELNR = klockansek BY best_mtrl.ENR:            
         CREATE tidut.
         ASSIGN
         SUBSTRING(tidut.UT,1) = best_mtrl.ENR              
         SUBSTRING(tidut.UT,13) = SUBSTRING(best_mtrl.BENAMNING,1,25).
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD = best_mtrl.LEVKOD NO-LOCK NO-ERROR.
         IF AVAILABLE LEVERANTOR THEN 
         SUBSTRING(tidut.UT,39) = SUBSTRING(LEVERANTOR.LEVNAMN,1,10). 
         ASSIGN
         SUBSTRING(tidut.UT,50) = best_mtrl.DBEST   
         SUBSTRING(tidut.UT,56) = best_mtrl.ENHET
         SUBSTRING(tidut.UT,60) = STRING(best_mtrl.ANTAL,">>>>9").
         IF priset = TRUE THEN DO: 
            ASSIGN
            SUBSTRING(tidut.UT,66) = STRING(best_mtrl.PRIS,">>>>>>9.99")
            SUBSTRING(tidut.UT,77) = STRING(best_mtrl.PRIS * best_mtrl.ANTAL,">>>>>>9.99")         
            sumpris = sumpris + (best_mtrl.PRIS * best_mtrl.ANTAL).
         END.   
      END. 
   END.

       
   CREATE tidut.    
   SUBSTRING(tidut.UT,1) = str.                                                                                           
   IF priset = TRUE THEN DO:
      CREATE tidut.     
      ASSIGN
      SUBSTRING(tidut.UT,65) = "TOTAL SUMMA:"
      SUBSTRING(tidut.UT,77) = STRING(sumpris,">>>>>>9.99").
   END.   
END PROCEDURE.

*/

FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
/*------------------------------------------------------------------------------
  Purpose:  
    Notes:  
------------------------------------------------------------------------------*/
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 

END FUNCTION.
