/*DELFKALK.P DELETE AV EN FAST KALKYL. OBS EJ FASTSPEC POSTEN*/
{GATILL.I}
DEFINE INPUT PARAMETER kalkvar LIKE FASTSPEC.KALKNR.   
{EXTRADATA.I}
DEFINE VARIABLE exdatahmth AS HANDLE NO-UNDO.
FIND FIRST FORETAG NO-LOCK NO-ERROR.
FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = kalkvar 
USE-INDEX KALK NO-LOCK NO-ERROR. 
DEFINE QUERY kkq FOR FASTKALK.
/*KALKRUTIN*/
RUN KALKRUTIN.P 
(INPUT 4, INPUT FASTSPEC.KALKNR,INPUT ?,INPUT ?,INPUT ?,INPUT "",INPUT "",OUTPUT TABLE gatill APPEND).  
OPEN QUERY kkq FOR EACH FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR 
AND FASTKALK.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK.
DO TRANSACTION:       
   GET FIRST kkq EXCLUSIVE-LOCK.
   IF AVAILABLE FASTKALK THEN DELETE FASTKALK.    
END.
REPEAT:  
   DO TRANSACTION:
      GET NEXT kkq EXCLUSIVE-LOCK.
      IF AVAILABLE FASTKALK THEN DELETE FASTKALK.    
      ELSE LEAVE.      
   END.         
END.      
IF FASTSPEC.KALKNR NE 0 THEN DO:
   OPEN QUERY befq FOR EACH KALKBEF WHERE KALKBEF.OMRADE = FASTSPEC.OMRADE AND
   KALKBEF.KALKNR = FASTSPEC.KALKNR USE-INDEX OMRADE NO-LOCK.
   DO TRANSACTION:
      GET FIRST befq EXCLUSIVE-LOCK.
      IF AVAILABLE KALKBEF THEN DELETE KALKBEF.
   END.
   REPEAT:   
      DO TRANSACTION:     
         GET NEXT befq EXCLUSIVE-LOCK.
         IF AVAILABLE KALKBEF THEN DELETE KALKBEF.
         ELSE LEAVE.
      END.   
   END.      
   CLOSE QUERY befq.   
END.      
IF FASTSPEC.FAKTOR = TRUE THEN DO TRANSACTION:
   FIND FIRST FAKTOR WHERE FAKTOR.OMRADE = FASTSPEC.OMRADE AND
   FAKTOR.KALKNR = FASTSPEC.KALKNR USE-INDEX OMRADE EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE FAKTOR THEN DELETE FAKTOR.
END. 
DO TRANSACTION:      
   FIND FIRST KALKUPP WHERE KALKUPP.KALKNR = FASTSPEC.KALKNR
   USE-INDEX KALKNR EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE KALKUPP THEN DELETE KALKUPP.        
END.
IF FASTSPEC.EGETMTRL = TRUE THEN DO:
   IF FASTSPEC.KALKNR NE 0 THEN DO:
      OPEN QUERY mtrlq FOR EACH MTRL WHERE MTRL.KALKNR = FASTSPEC.KALKNR 
      USE-INDEX KALK NO-LOCK.
      DO TRANSACTION:
         GET FIRST mtrlq EXCLUSIVE-LOCK.
         IF AVAILABLE MTRL THEN DELETE MTRL.
      END.
      REPEAT:   
         DO TRANSACTION:
            GET NEXT mtrlq EXCLUSIVE-LOCK.
            IF AVAILABLE MTRL THEN DELETE MTRL.          
            ELSE LEAVE.                                        
         END.   
      END.
   END.  
END.
OPEN QUERY forq FOR EACH KALKFOR WHERE KALKFOR.KALKNR = FASTSPEC.KALKNR 
NO-LOCK.
DO TRANSACTION:
   GET FIRST forq EXCLUSIVE-LOCK.
   IF AVAILABLE KALKFOR THEN DELETE KALKFOR.
END.
REPEAT:   
   DO TRANSACTION:
      GET NEXT forq EXCLUSIVE-LOCK.
      IF AVAILABLE KALKFOR THEN DELETE KALKFOR.          
      ELSE LEAVE.                                        
   END.   
END.
DO TRANSACTION:
   FIND FIRST KALKKUND WHERE KALKKUND.KALKNR = FASTSPEC.KALKNR
   USE-INDEX KALKNR EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE KALKKUND THEN DELETE KALKKUND.
END.
DO TRANSACTION:
   FIND FIRST KALKNATT WHERE KALKNATT.DELNR = FASTSPEC.KALKNR
   EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE KALKNATT THEN DELETE KALKNATT.
END.
RUN EXTRADATAHMT.P PERSISTENT SET exdatahmth. 
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "DOKALKYL"                   
inextradatatemp.HUVUDCH = FASTSPEC.OMRADE
inextradatatemp.HUVUDINT = FASTSPEC.KALKNR.
RUN exbort_UI IN exdatahmth (INPUT TABLE inextradatatemp). 
EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
IF VALID-HANDLE(exdatahmth) THEN DELETE PROCEDURE exdatahmth NO-ERROR.
