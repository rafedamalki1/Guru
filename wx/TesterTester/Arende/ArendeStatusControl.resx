<?xml version="1.0" encoding="utf-8" standalone="no"?><root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  <data mimetype="application/x-microsoft.net.object.bytearray.base64" name="splitContainerStatus.Panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing">
    <value>
        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
</value>
  </data>
</root>