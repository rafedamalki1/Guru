/*VARDSPECUAPP.P*/
{STARTFORAPP.I}
{FASTIGHET.I}
{MARKVARD.I}
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
DEFINE BUFFER VOLSKOGBUF FOR VOLSKOG.
{EXTRADATA.I}

PROCEDURE fastighbethmt.
   DEFINE INPUT PARAMETER valdfast AS RECID NO-UNDO.
   DEFINE OUTPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   FIND FASTIGHET WHERE RECID(FASTIGHET) = valdfast NO-LOCK NO-ERROR.
   ASSIGN fastighbet = FASTIGHET.BETECKNING.
END PROCEDURE.

PROCEDURE laddany_UI :
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volskogtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR akerkabtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markfasttemp. 
   /*DEFINE OUTPUT PARAMETER TABLE FOR markagaretemp.*/
   EMPTY TEMP-TABLE volskogtemp NO-ERROR. 
   EMPTY TEMP-TABLE akerkabtemp NO-ERROR. 
   EMPTY TEMP-TABLE fastighettemp NO-ERROR. 
   EMPTY TEMP-TABLE markfasttemp NO-ERROR. 
   /*EMPTY TEMP-TABLE markagaretemp NO-ERROR.            */
   OPEN QUERY voq FOR EACH VOLSKOG WHERE VOLSKOG.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST voq NO-LOCK.                                   
   DO WHILE AVAILABLE(VOLSKOG):                             
      CREATE volskogtemp.                                   
      BUFFER-COPY VOLSKOG TO volskogtemp.                   
      ASSIGN                                                
      volskogtemp.VOLSKOGREC = RECID(VOLSKOG).              
      GET NEXT voq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY voq.
   OPEN QUERY akq FOR EACH AKERKAB WHERE AKERKAB.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST akq NO-LOCK.                                   
   DO WHILE AVAILABLE(AKERKAB):                             
      CREATE akerkabtemp.                                   
      BUFFER-COPY AKERKAB TO akerkabtemp.                   
      ASSIGN akerkabtemp.AKERKABREC = RECID(AKERKAB).              
      GET NEXT akq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY akq.  
   OPEN QUERY fq FOR EACH FASTVARD WHERE FASTVARD.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST fq NO-LOCK.
   DO WHILE AVAILABLE(FASTVARD):
      OPEN QUERY ftq FOR EACH FASTIGHET WHERE FASTIGHET.BETECKNING = FASTVARD.BETECKNING USE-INDEX FASTIGHET NO-LOCK.
      GET FIRST ftq NO-LOCK.
      DO WHILE AVAILABLE(FASTIGHET):
         OPEN QUERY mq FOR EACH MARKFAST WHERE MARKFAST.BETECKNING = FASTIGHET.BETECKNING USE-INDEX FAST NO-LOCK.
         GET FIRST mq NO-LOCK.
         DO WHILE AVAILABLE(MARKFAST):
           
            CREATE markfasttemp.
            BUFFER-COPY MARKFAST TO markfasttemp.
            Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + STRING(markfasttemp.MARKNR).
   
            GET NEXT mq NO-LOCK.
         END.
         CLOSE QUERY mq.
         GET NEXT ftq NO-LOCK.
      END.
      CLOSE QUERY ftq.
     
      GET NEXT fq NO-LOCK.
   END.
   CLOSE QUERY fq.
   Guru.GlobalaVariabler:GDPRtyp = "M". 
   {GDPRLOGGCLIENT.I}
   RETURN.
END PROCEDURE.

PROCEDURE laddany2_UI :
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volskogtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR akerkabtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markfasttemp. 
   DEFINE OUTPUT PARAMETER TABLE FOR markagaretemp.
   EMPTY TEMP-TABLE volskogtemp NO-ERROR. 
   EMPTY TEMP-TABLE akerkabtemp NO-ERROR. 
   EMPTY TEMP-TABLE fastighettemp NO-ERROR. 
   EMPTY TEMP-TABLE markfasttemp NO-ERROR. 
   EMPTY TEMP-TABLE markagaretemp NO-ERROR.            
   OPEN QUERY voq FOR EACH VOLSKOG WHERE VOLSKOG.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST voq NO-LOCK.                                   
   DO WHILE AVAILABLE(VOLSKOG):                             
      CREATE volskogtemp.                                   
      BUFFER-COPY VOLSKOG TO volskogtemp.                   
      ASSIGN                                                
      volskogtemp.VOLSKOGREC = RECID(VOLSKOG).              
      GET NEXT voq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY voq.
   OPEN QUERY akq FOR EACH AKERKAB WHERE AKERKAB.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST akq NO-LOCK.                                   
   DO WHILE AVAILABLE(AKERKAB):                             
      CREATE akerkabtemp.                                   
      BUFFER-COPY AKERKAB TO akerkabtemp.                   
      ASSIGN akerkabtemp.AKERKABREC = RECID(AKERKAB).              
      GET NEXT akq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY akq.  
   OPEN QUERY fq FOR EACH FASTVARD WHERE FASTVARD.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST fq NO-LOCK.
   DO WHILE AVAILABLE(FASTVARD):
      OPEN QUERY ftq FOR EACH FASTIGHET WHERE FASTIGHET.BETECKNING = FASTVARD.BETECKNING USE-INDEX FASTIGHET NO-LOCK.
      GET FIRST ftq NO-LOCK.
      DO WHILE AVAILABLE(FASTIGHET):
         OPEN QUERY mq FOR EACH MARKFAST WHERE MARKFAST.BETECKNING = FASTIGHET.BETECKNING USE-INDEX FAST NO-LOCK.
         GET FIRST mq NO-LOCK.
         DO WHILE AVAILABLE(MARKFAST):
            OPEN QUERY meq FOR EACH MARKAGARE WHERE MARKAGARE.MARKNR = MARKFAST.MARKNR USE-INDEX MARKNR NO-LOCK.
            GET FIRST meq NO-LOCK.
            DO WHILE AVAILABLE(MARKAGARE):
               CREATE markagaretemp.
               BUFFER-COPY MARKAGARE TO markagaretemp.
               Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + STRING(MARKAGARE.MARKNR).
               GET NEXT meq NO-LOCK.
            END.
            CLOSE QUERY meq.
            CREATE markfasttemp.
            BUFFER-COPY MARKFAST TO markfasttemp.
            GET NEXT mq NO-LOCK.
         END.
         CLOSE QUERY mq.
         GET NEXT ftq NO-LOCK.
      END.
      CLOSE QUERY ftq.
     
      GET NEXT fq NO-LOCK.
   END.
   CLOSE QUERY fq.
   Guru.GlobalaVariabler:GDPRtyp = "M". 
   {GDPRLOGGCLIENT.I}
   
   RETURN.
END PROCEDURE.

PROCEDURE laddany3_UI :
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volskogtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR akerkabtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markfasttemp. 
   DEFINE OUTPUT PARAMETER TABLE FOR markagaretemp.
   DEFINE OUTPUT PARAMETER TABLE FOR revtemp.
   EMPTY TEMP-TABLE volskogtemp NO-ERROR. 
   EMPTY TEMP-TABLE akerkabtemp NO-ERROR. 
   EMPTY TEMP-TABLE fastighettemp NO-ERROR. 
   EMPTY TEMP-TABLE markfasttemp NO-ERROR. 
   EMPTY TEMP-TABLE markagaretemp NO-ERROR.            
   EMPTY TEMP-TABLE revtemp NO-ERROR. 
   OPEN QUERY voq FOR EACH VOLSKOG WHERE VOLSKOG.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST voq NO-LOCK.                                   
   DO WHILE AVAILABLE(VOLSKOG):                             
      CREATE volskogtemp.                                   
      BUFFER-COPY VOLSKOG TO volskogtemp.                   
      ASSIGN                                                
      volskogtemp.VOLSKOGREC = RECID(VOLSKOG).              
      GET NEXT voq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY voq.
   OPEN QUERY akq FOR EACH AKERKAB WHERE AKERKAB.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST akq NO-LOCK.                                   
   DO WHILE AVAILABLE(AKERKAB):                             
      CREATE akerkabtemp.                                   
      BUFFER-COPY AKERKAB TO akerkabtemp.                   
      ASSIGN akerkabtemp.AKERKABREC = RECID(AKERKAB).              
      GET NEXT akq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY akq.  
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph.      
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "REVAVTAL"                   
   inextradatatemp.HUVUDINT = valvardnr                    
   inextradatatemp.HUVUDCH = ?.                          
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FOR EACH extradatatemp :
      CREATE revtemp.
      ASSIGN
      revtemp.VARDNR = valvardnr
      revtemp.BETECKNING = extradatatemp.HUVUDCH
      revtemp.ZON = extradatatemp.SOKINT[1]
      revtemp.KRPM = extradatatemp.SOKDEC[1]
      revtemp.METER = extradatatemp.SOKDEC[2]
      revtemp.KRONOR = extradatatemp.SOKDEC[3].
      revtemp.BENAMNING = extradatatemp.SOKCHAR[1].
   END.
   OPEN QUERY fq FOR EACH FASTVARD WHERE FASTVARD.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST fq NO-LOCK.
   DO WHILE AVAILABLE(FASTVARD):
      OPEN QUERY ftq FOR EACH FASTIGHET WHERE FASTIGHET.BETECKNING = FASTVARD.BETECKNING USE-INDEX FASTIGHET NO-LOCK.
      GET FIRST ftq NO-LOCK.
      DO WHILE AVAILABLE(FASTIGHET):
         OPEN QUERY mq FOR EACH MARKFAST WHERE MARKFAST.BETECKNING = FASTIGHET.BETECKNING USE-INDEX FAST NO-LOCK.
         GET FIRST mq NO-LOCK.
         DO WHILE AVAILABLE(MARKFAST):
            OPEN QUERY meq FOR EACH MARKAGARE WHERE MARKAGARE.MARKNR = MARKFAST.MARKNR USE-INDEX MARKNR NO-LOCK.
            GET FIRST meq NO-LOCK.
            DO WHILE AVAILABLE(MARKAGARE):
               CREATE markagaretemp.
               BUFFER-COPY MARKAGARE TO markagaretemp.
               Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + STRING(MARKAGARE.MARKNR).
               GET NEXT meq NO-LOCK.
            END.
            CLOSE QUERY meq.
            CREATE markfasttemp.
            BUFFER-COPY MARKFAST TO markfasttemp.
            GET NEXT mq NO-LOCK.
         END.
         CLOSE QUERY mq.
         GET NEXT ftq NO-LOCK.
      END.
      CLOSE QUERY ftq.
     
      GET NEXT fq NO-LOCK.
   END.
   CLOSE QUERY fq.
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.        
   edataapph = ?.
   Guru.GlobalaVariabler:GDPRtyp = "M". 
   {GDPRLOGGCLIENT.I}
   
   RETURN.
END PROCEDURE.


PROCEDURE ladda_UI :
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volskogtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR akerkabtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR fastvardtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markfasttemp. 
   DEFINE OUTPUT PARAMETER TABLE FOR markagaretemp.
   EMPTY TEMP-TABLE volskogtemp NO-ERROR. 
   EMPTY TEMP-TABLE akerkabtemp NO-ERROR. 
   EMPTY TEMP-TABLE fastvardtemp NO-ERROR. 
   EMPTY TEMP-TABLE fastighettemp NO-ERROR. 
   EMPTY TEMP-TABLE markfasttemp NO-ERROR. 
   EMPTY TEMP-TABLE markagaretemp NO-ERROR.
   OPEN QUERY voq FOR EACH VOLSKOG WHERE VOLSKOG.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST voq NO-LOCK.                                   
   DO WHILE AVAILABLE(VOLSKOG):                             
      CREATE volskogtemp.                                   
      BUFFER-COPY VOLSKOG TO volskogtemp.                   
      ASSIGN                                                
      volskogtemp.VOLSKOGREC = RECID(VOLSKOG).              
      GET NEXT voq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY voq.
   OPEN QUERY akq FOR EACH AKERKAB WHERE AKERKAB.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST akq NO-LOCK.                                   
   DO WHILE AVAILABLE(AKERKAB):                             
      CREATE akerkabtemp.                                   
      BUFFER-COPY AKERKAB TO akerkabtemp.                   
      ASSIGN akerkabtemp.AKERKABREC = RECID(AKERKAB).              
      GET NEXT akq NO-LOCK.                                 
   END.                                                     
   CLOSE QUERY akq.  
   OPEN QUERY fq FOR EACH FASTVARD WHERE FASTVARD.VARDNR = valvardnr USE-INDEX VARDNR NO-LOCK.
   GET FIRST fq NO-LOCK.
   DO WHILE AVAILABLE(FASTVARD):
      OPEN QUERY ftq FOR EACH FASTIGHET WHERE FASTIGHET.BETECKNING = FASTVARD.BETECKNING USE-INDEX FASTIGHET NO-LOCK.
      GET FIRST ftq NO-LOCK.
      DO WHILE AVAILABLE(FASTIGHET):
         OPEN QUERY mq FOR EACH MARKFAST WHERE MARKFAST.BETECKNING = FASTIGHET.BETECKNING USE-INDEX FAST NO-LOCK.
         GET FIRST mq NO-LOCK.
         DO WHILE AVAILABLE(MARKFAST):
            OPEN QUERY meq FOR EACH MARKAGARE WHERE MARKAGARE.MARKNR = MARKFAST.MARKNR USE-INDEX MARKNR NO-LOCK.
            GET FIRST meq NO-LOCK.
            DO WHILE AVAILABLE(MARKAGARE):
               CREATE markagaretemp.
               BUFFER-COPY MARKAGARE TO markagaretemp.
               Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + STRING(MARKAGARE.MARKNR).
               GET NEXT meq NO-LOCK.
            END.
            CLOSE QUERY meq.
            CREATE markfasttemp.
            BUFFER-COPY MARKFAST TO markfasttemp.
            GET NEXT mq NO-LOCK.
         END.
         CLOSE QUERY mq.
         GET NEXT ftq NO-LOCK.
      END.
      CLOSE QUERY ftq.
      CREATE fastvardtemp.
      BUFFER-COPY FASTVARD TO fastvardtemp.
      GET NEXT fq NO-LOCK.
   END.
   CLOSE QUERY fq.
   Guru.GlobalaVariabler:GDPRtyp = "M". 
   {GDPRLOGGCLIENT.I}
   RETURN.
END PROCEDURE.

PROCEDURE laddaakerkab.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
     
   RETURN.
END PROCEDURE.

PROCEDURE mtre.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER mtrevar AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER volrec AS RECID NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR volskogtemp.
   DO TRANSACTION:
      FIND FIRST VOLSKOG  WHERE VOLSKOG.VARDNR = valvardnr AND
      VOLSKOG.BETECKNING = fastighbet AND VOLSKOG.DIAM = 0 USE-INDEX VARDNR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE VOLSKOG  THEN DO:
         CREATE VOLSKOG.
         ASSIGN
         VOLSKOG.VARDNR = valvardnr 
         VOLSKOG.BETECKNING = fastighbet
         VOLSKOG.DIAM = 0.
         volrec = RECID(VOLSKOG).  
      END.      
      FIND FIRST volskogtemp  WHERE volskogtemp.VARDNR = valvardnr AND
      volskogtemp.BETECKNING = fastighbet AND volskogtemp.DIAM = 0 USE-INDEX VARDNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE volskogtemp THEN DO:
         CREATE volskogtemp.
         BUFFER-COPY VOLSKOG TO volskogtemp.
         ASSIGN 
         volskogtemp.VOLSKOGREC = RECID(VOLSKOG). 
         ASSIGN volskogtemp.OM3 = mtrevar.
      END.      
      ASSIGN VOLSKOG.OM3 = mtrevar.
      IF VOLSKOG.OM3 = 0 THEN DO:
         DELETE VOLSKOG.  
         DELETE volskogtemp.
         volrec = ?.
      END.
   END.
   RELEASE VOLSKOG NO-ERROR.
   
END PROCEDURE.


PROCEDURE bortskog.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bestandvar AS INTEGER NO-UNDO.
   FOR EACH SKOGVARD WHERE SKOGVARD.VARDNR = valvardnr AND 
   SKOGVARD.BETECKNING = fastighbet AND 
   SKOGVARD.BESTAND = bestandvar EXCLUSIVE-LOCK:   
      DELETE SKOGVARD.  
   END.
END PROCEDURE.

PROCEDURE bortvol.
   DEFINE INPUT PARAMETER volskogtabrec AS RECID NO-UNDO.
   FIND FIRST VOLSKOG WHERE RECID(VOLSKOG) = volskogtabrec EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE VOLSKOG THEN DO:
      DELETE VOLSKOG.  
   END.
END PROCEDURE.


PROCEDURE bortvolstamp.
   DEFINE INPUT PARAMETER volskogtabrec AS RECID NO-UNDO.
   FIND FIRST VOLSKOG WHERE RECID(VOLSKOG) = volskogtabrec NO-LOCK NO-ERROR.   
   IF AVAILABLE VOLSKOG THEN DO:
      DO TRANSACTION:
         FOR EACH  VOLSKOGBUF WHERE VOLSKOGBUF.VARDNR =  VOLSKOG.VARDNR AND VOLSKOGBUF.BETECKNING =  VOLSKOG.BETECKNING AND
         VOLSKOGBUF.GHKL =  VOLSKOG.GHKL AND VOLSKOGBUF.THKL =  VOLSKOG.THKL AND VOLSKOGBUF.BHKL =  VOLSKOG.BHKL AND VOLSKOGBUF.OHKL =  VOLSKOG.OHKL   EXCLUSIVE-LOCK:                        
            DELETE VOLSKOGBUF.
         END.
      END.   
        
   END.
END PROCEDURE.

PROCEDURE bortakervard.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bortvar AS INTEGER NO-UNDO.
   FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND 
   AKERVARD.BETECKNING = fastighbet AND AKERVARD.STOLPNR = stpnr AND 
   AKERVARD.L5 = bortvar EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE AKERVARD THEN DO:
      DELETE AKERVARD.  
   END.
END PROCEDURE.


PROCEDURE bortakerkab.
   DEFINE INPUT PARAMETER akerrec AS RECID NO-UNDO.   
   FIND FIRST AKERKAB WHERE RECID(AKERKAB) = akerrec EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE AKERKAB THEN DO:
      IF AKERKAB.FASTPRIS = FALSE THEN DO: 
         FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR AND 
         AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.L1 AND AKERVARD.STOLPNR = 0 EXCLUSIVE-LOCK NO-ERROR.
      END.
      ELSE DO:
         FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR AND 
         AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.KRONOR AND AKERVARD.STOLPNR = 0 EXCLUSIVE-LOCK NO-ERROR.
      END.
      IF AVAILABLE AKERVARD THEN DO:         
         IF Guru.Konstanter:globforetag = "UMEA" OR Guru.Konstanter:globforetag = "UMBR"  THEN DELETE AKERVARD. 
         ELSE IF AKERVARD.L5 > 1 THEN DELETE AKERVARD.  
      END.
      DELETE AKERKAB.
   END.
   
END PROCEDURE.

PROCEDURE sparfordyrad.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER fordyrvar AS INTEGER NO-UNDO.
   FIND FIRST FASTVARD WHERE FASTVARD.VARDNR = valvardnr AND 
   FASTVARD.BETECKNING = fastighbet EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE FASTVARD THEN DO:
      ASSIGN FASTVARD.FORDYRAD = fordyrvar.
   END.
   RELEASE FASTVARD NO-ERROR.
END PROCEDURE.
