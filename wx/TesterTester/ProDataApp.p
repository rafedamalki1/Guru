/*ProDataApp.p*/


{KALKYLKAT.i}
/*
DEFINE VARIABLE ChDataSet AS HANDLE NO-UNDO.
*/


{C:\DELAD\pro9\guru\2Guru\Tester\prodatakalk.i}

{SparaProDatasSet.i KalkylDS}

DEFINE QUERY KalkylQuery FOR KALKHUV .
DEFINE DATA-SOURCE KalkhuvSrc FOR QUERY KalkylQuery KALKHUV KEYS (KALKNR,OMRADE). 
DEFINE DATA-SOURCE NumSrc FOR KALKNUM KEYS (KALKNR,OMRADE,NUM).
DEFINE DATA-SOURCE NumsubSrc FOR KALKNUMSUB KEYS (KALKNR,OMRADE,NUM,NUMSUBID).
DEFINE VARIABLE hDataSet   AS HANDLE     NO-UNDO.
hDataSet = DATASET KalkylDS:HANDLE.   
hDataSet:SET-CALLBACK-PROCEDURE ("AFTER-FILL", "postDataSetFillKalkylDS", THIS-PROCEDURE).
           
PROCEDURE attachKalkylDS:
   hDataSet:GET-BUFFER-HANDLE("kalkhuvtt"):ATTACH-DATA-SOURCE(DATA-SOURCE KalkhuvSrc:HANDLE).
   hDataSet:GET-BUFFER-HANDLE("kalknumtt"):ATTACH-DATA-SOURCE(DATA-SOURCE NumSrc:HANDLE).
   hDataSet:GET-BUFFER-HANDLE("kalknumsubtt"):ATTACH-DATA-SOURCE(DATA-SOURCE NumsubSrc:HANDLE). 
   
END PROCEDURE.

PROCEDURE LaddaKalkyl:  
   DEFINE OUTPUT PARAMETER DATASET FOR KalkylDS.
   DEFINE INPUT PARAMETER KalkNr AS INTEGER.
   DATASET KalkylDS:EMPTY-DATASET().
   QUERY KalkylQuery:QUERY-PREPARE("FOR EACH KALKHUV NO-LOCK WHERE KALKHUV.KALKNR = " + STRING(KalkNr)).
   RUN attachKalkylDS.
   DATASET KalkylDS:FILL().
   detachDataSetKalkylDS(hDataSet).
   
END PROCEDURE.

