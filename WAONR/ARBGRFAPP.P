/*ARBGRFAPP.P*/
FUNCTION mannam RETURNS CHARACTER 
   ( INPUT mannr AS INTEGER ):
   IF mannr = 1 THEN RETURN "jan". 
   IF mannr = 2 THEN RETURN "feb".
   IF mannr = 3 THEN RETURN "mars".
   IF mannr = 4 THEN RETURN "april".
   IF mannr = 5 THEN RETURN "maj".
   IF mannr = 6 THEN RETURN "juni".
   IF mannr = 7 THEN RETURN "juli".
   IF mannr = 8 THEN RETURN "aug".
   IF mannr = 9 THEN RETURN "sep".
   IF mannr = 10 THEN RETURN "okt".
   IF mannr = 11 THEN RETURN "nov".
   IF mannr = 12 THEN RETURN "dec".
END FUNCTION.
FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):

  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.


FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 

END FUNCTION.
{TIDUTTT.I}

DEFINE TEMP-TABLE dagtemp
   FIELD OMRADE LIKE SUMTIDDAG.OMRADE 
   FIELD ARTAL AS INTEGER
   FIELD MANAD AS INTEGER 
   FIELD AONR LIKE SUMTIDDAG.AONR 
   FIELD PERSONALKOD LIKE SUMTIDDAG.PERSONALKOD 
   FIELD PRISTYP LIKE SUMTIDDAG.PRISTYP
   FIELD NAMN AS CHARACTER
   FIELD TIMMAR LIKE SUMTIDDAG.TIMMAR
   FIELD OTIMMAR LIKE SUMTIDDAG.OTIMMAR  
   FIELD GEOMRADE AS CHARACTER           
   INDEX PKOD IS PRIMARY AONR OMRADE PERSONALKOD PRISTYP
   INDEX ARTAL ARTAL MANAD.
DEFINE TEMP-TABLE restid
   FIELD OMRADE LIKE SUMTIDDAG.OMRADE
   FIELD ARTAL AS INTEGER
   FIELD MANAD AS INTEGER 
   FIELD PERSONALKOD LIKE SUMTIDDAG.PERSONALKOD 
   FIELD NAMN AS CHARACTER
   FIELD TIMMAR LIKE SUMTIDDAG.TIMMAR   
   INDEX PKOD IS PRIMARY OMRADE PERSONALKOD
   INDEX ARTAL ARTAL MANAD.

DEFINE TEMP-TABLE franvarotemp
   FIELD OMRADE LIKE SUMTIDDAG.OMRADE 
   FIELD ARTAL AS INTEGER
   FIELD MANAD AS INTEGER 
   FIELD PERSONALKOD LIKE SUMTIDDAG.PERSONALKOD 
   FIELD NAMN AS CHARACTER
   FIELD TIMMAR LIKE SUMTIDDAG.TIMMAR   
   INDEX PKOD IS PRIMARY OMRADE PERSONALKOD
   INDEX ARTAL ARTAL MANAD.


DEFINE TEMP-TABLE sumpers
   FIELD OMRADE LIKE OMRADETAB.OMRADE
   FIELD DATUM LIKE SUMTIDDAG.OMRADE 
   FIELD ARTAL AS INTEGER
   FIELD MANAD AS INTEGER 
   FIELD PERSONALKOD LIKE PERSONALTAB.PERSONALKOD
   FIELD NAMN AS CHARACTER
   FIELD ORDNING AS INTEGER   
   FIELD FTIMMAR AS DECIMAL 
   FIELD DTIMMAR AS DECIMAL
   FIELD ITIMMAR AS DECIMAL
   FIELD OTIMMAR AS DECIMAL
   FIELD RTIMMAR AS DECIMAL
   FIELD MTIMMAR AS DECIMAL
   FIELD NTIMMAR AS DECIMAL
   FIELD DEBGRADN AS DECIMAL
   FIELD DEBGRADM AS DECIMAL
   INDEX ORDNIG IS PRIMARY OMRADE ARTAL MANAD ORDNING
   INDEX DATUM DATUM
   INDEX ARTAL ARTAL MANAD.
&SCOPED-DEFINE NEW NEW
{OMRTEMPW.I}
DEFINE TEMP-TABLE omrtemp2 NO-UNDO LIKE omrtemp.
{SOKDEF.I}
DEFINE INPUT PARAMETER TABLE FOR valsoktemp.
DEFINE INPUT PARAMETER TABLE FOR omrtemp2.
DEFINE OUTPUT PARAMETER TABLE FOR tidut.
FIND FIRST valsoktemp NO-ERROR.
IF NOT AVAILABLE valsoktemp THEN RETURN.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE utomr AS CHARACTER NO-UNDO.
DEFINE VARIABLE artalvar AS INTEGER NO-UNDO.
DEFINE VARIABLE manadvar AS INTEGER NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
DEFINE QUERY sumarq FOR omrtemp2,SUMTIDDAG.
DEFINE BUFFER sumbuff FOR sumpers.
DEFINE BUFFER sumbuff2 FOR sumpers.
DEFINE VARIABLE persmaskvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE tisek AS LOGICAL NO-UNDO.

FIND FIRST FORETAG NO-LOCK NO-ERROR. 
persmaskvar = TRUE.
RUN open_UI.
RUN summa_UI.
RUN huvud_UI.
CREATE tidut. 
CREATE tidut. 

persmaskvar = FALSE.
CREATE tidut. 
tidut.UT = "Främmande tjänst".
EMPTY TEMP-TABLE sumpers  NO-ERROR. 
EMPTY TEMP-TABLE dagtemp  NO-ERROR. 
EMPTY TEMP-TABLE restid NO-ERROR. 
EMPTY TEMP-TABLE franvarotemp NO-ERROR. 

CREATE tidut. 
RUN open_UI.
RUN summa_UI.
RUN huvud_UI.
PROCEDURE huvud_UI :
   IF persmaskvar = TRUE THEN DO:
      CREATE tidut. 
      SUBSTRING(tidut.UT,60) = STRING(TODAY,"9999/99/99") + " " + STRING(TIME,"HH:MM"). 
      CREATE tidut.
      CREATE tidut.
                                 
      tidut.UT = "U120- DEBITERINGSGRAD-" + CAPS(Guru.Konstanter:gomrl) + " PERIOD".
      IF valsoktemp.SOKINT[1] = 1 THEN DO: 
         SUBSTRING(tidut.UT,45) = STRING(valsoktemp.SOKINT[2],"9999").
      END.
      IF valsoktemp.SOKINT[1] = 2 THEN DO:
         SUBSTRING(tidut.UT,45) = STRING(valsoktemp.SOKDATE[1],"9999/99/99") + " - " + STRING(valsoktemp.SOKDATE[2],"9999/99/99").     
      END.         
      CREATE tidut.
      CREATE tidut.            
      SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrk) + " :".
      FOR EACH omrtemp2:
         IF SUBSTRING(tidut.UT,10,4) = "    " THEN SUBSTRING(tidut.UT,10) = omrtemp2.NAMN.
         ELSE DO:
            CREATE tidut.
            SUBSTRING(tidut.UT,10) = omrtemp2.NAMN.
         END.
      END.
   END.
   ASSIGN
   utnr[1] = 1
   utnr[2] = 14
   utnr[3] = 30
   utnr[4] = 38
   utnr[5] = 46
   utnr[6] = 54
   utnr[7] = 61
   utnr[8] = 68
   utnr[9] = 76
   utnr[10] = 84.
   str = "".
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DO WHILE i <= 89:
      i = i + 1.
      str = str + "=".      
   END.   
   i = 2.   
   DO WHILE i <= 10:             
      SUBSTRING(str,(utnr[i] - 1),1) = ".".      
      i = i + 1.
   END.   
   CREATE tidut.  
   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,utnr[1]) = CAPS(Guru.Konstanter:gomrl)
   SUBSTRING(tidut.UT,utnr[2]) = "NAMN"
   SUBSTRING(tidut.UT,utnr[3]) = "MÖJLIG" 
   SUBSTRING(tidut.UT,utnr[4]) = "NÄRVARO"  
   SUBSTRING(tidut.UT,utnr[5]) = "ÖVERTID"   
   SUBSTRING(tidut.UT,utnr[6]) = "RESTID"
   SUBSTRING(tidut.UT,utnr[7]) = "INTERN"
   SUBSTRING(tidut.UT,utnr[8]) = "DEB."                  
   SUBSTRING(tidut.UT,utnr[9]) = "DEB.".   
   SUBSTRING(tidut.UT,utnr[10]) = "DEB.".
   CREATE tidut.                 
   ASSIGN                           
   SUBSTRING(tidut.UT,utnr[3]) = "ARB.TID" 
   SUBSTRING(tidut.UT,utnr[4]) = "TIMMAR"  
   SUBSTRING(tidut.UT,utnr[5]) = "TIMMAR"   
   SUBSTRING(tidut.UT,utnr[6]) = "TIMMAR"
   SUBSTRING(tidut.UT,utnr[7]) = "TIMMAR"
   SUBSTRING(tidut.UT,utnr[8]) = "TIMMAR"                  
   SUBSTRING(tidut.UT,utnr[9]) = "GRAD %"
   SUBSTRING(tidut.UT,utnr[10]) = "GRAD %".
   CREATE tidut.                 
   ASSIGN                           
   SUBSTRING(tidut.UT,utnr[9]) = "NÄRVARO"
   SUBSTRING(tidut.UT,utnr[10]) = "MÖJLIG".
   CREATE tidut.
   tidut.UT = str.
   utomr = "". 
   FOR EACH sumpers USE-INDEX ORDNIG:
      IF sumpers.ORDNING = 5 OR sumpers.ORDNING = 6 THEN DO:
         musz = musz.      
      END.
      ELSE IF sumpers.ORDNING NE 13 THEN DO:
         IF utomr NE sumpers.OMRADE THEN DO:
            FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = sumpers.OMRADE NO-LOCK NO-ERROR.
            IF AVAILABLE OMRADETAB THEN DO:
               CREATE tidut.
               SUBSTRING(tidut.UT,utnr[1]) = SUBSTRING(OMRADETAB.NAMN,1,12). 
            END.
            utomr = sumpers.OMRADE.
            RUN summand_UI.            
            IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
            ELSE DO:         
               FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = utomr NO-LOCK NO-ERROR.
               IF AVAILABLE OMRADETAB THEN DO:
                  CREATE tidut.
                  SUBSTRING(tidut.UT,utnr[1]) = "TOTALT " +  SUBSTRING(OMRADETAB.NAMN,1,12). 
               END.
            END.
         END.
         IF sumpers.ORDNING = 12 THEN DO:          
            CREATE tidut.
            tidut.UT = str.
            FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = utomr NO-LOCK NO-ERROR.
            CREATE tidut.
            SUBSTRING(tidut.UT,utnr[1]) = "SUMMA " + SUBSTRING(OMRADETAB.NAMN,1,12).
         END.
         ELSE DO:
            IF valsoktemp.SOKLOG[1] = TRUE THEN DO:
               CREATE tidut.
               SUBSTRING(tidut.UT,utnr[1]) = sumpers.PERSONALKOD.
            END.
         END.
         IF valsoktemp.SOKLOG[1] = FALSE AND sumpers.ORDNING = 11 THEN musz = musz.
         ELSE DO:         
            ASSIGN 
            SUBSTRING(tidut.UT,utnr[2]) = SUBSTRING(sumpers.NAMN,1,15)
            SUBSTRING(tidut.UT,utnr[3]) = STRING(sumpers.MTIMMAR,">>>>>>9") 
            SUBSTRING(tidut.UT,utnr[4]) = STRING(sumpers.NTIMMAR,">>>>>>9") 
            SUBSTRING(tidut.UT,utnr[5]) = STRING(sumpers.OTIMMAR,">>>>>>9")   
            SUBSTRING(tidut.UT,utnr[6]) = STRING(sumpers.RTIMMAR,">>>>>9")
            SUBSTRING(tidut.UT,utnr[7]) = STRING(sumpers.ITIMMAR,">>>>>9")
            SUBSTRING(tidut.UT,utnr[8]) = STRING(sumpers.DTIMMAR,">>>>>>9")                  
            SUBSTRING(tidut.UT,utnr[9]) = STRING(sumpers.DEBGRADN * 100 ,">>>>>>9")
            SUBSTRING(tidut.UT,utnr[10]) = STRING(sumpers.DEBGRADM * 100 ,">>>>>>9").
         END.
         IF sumpers.ORDNING = 12 THEN DO:          
            CREATE tidut.            
         END.
         DELETE sumpers.
      END.
   END.
   FOR EACH sumpers WHERE sumpers.ORDNING = 13:
      CREATE tidut.
      tidut.UT = str.
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,utnr[1]) = "SUMMA ALLA"
      SUBSTRING(tidut.UT,utnr[3]) = STRING(sumpers.MTIMMAR,">>>>>>9") 
      SUBSTRING(tidut.UT,utnr[4]) = STRING(sumpers.NTIMMAR,">>>>>>9")  
      SUBSTRING(tidut.UT,utnr[5]) = STRING(sumpers.OTIMMAR,">>>>>>9")   
      SUBSTRING(tidut.UT,utnr[6]) = STRING(sumpers.RTIMMAR,">>>>>>9")
      SUBSTRING(tidut.UT,utnr[7]) = STRING(sumpers.ITIMMAR,">>>>>>9")
      SUBSTRING(tidut.UT,utnr[8]) = STRING(sumpers.DTIMMAR,">>>>>>9")                  
      SUBSTRING(tidut.UT,utnr[9]) = STRING(sumpers.DEBGRADN * 100 ,">>>>>>9")
      SUBSTRING(tidut.UT,utnr[10]) = STRING(sumpers.DEBGRADM * 100 ,">>>>>>9").     
      DELETE sumpers.                                         
   END.
END PROCEDURE.
PROCEDURE summand_UI:
   artalvar = 0.
   FOR EACH sumbuff WHERE sumbuff.ORDNING = 5 AND sumbuff.OMRADE = sumpers.OMRADE USE-INDEX ORDNIG:
      IF artalvar = sumbuff.ARTAL AND manadvar = sumbuff.MANAD THEN musz = musz.
      ELSE DO:   
         FIND FIRST sumbuff2 WHERE sumbuff2.ORDNING = 6 AND sumbuff2.OMRADE = sumpers.OMRADE AND
         sumbuff2.ARTAL = artalvar AND sumbuff2.MANAD = manadvar
         NO-ERROR.
         IF AVAILABLE sumbuff2 THEN DO:
            IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
            ELSE DO:         
               CREATE tidut.
               tidut.UT = str.
            END.
            CREATE tidut.
            ASSIGN
            SUBSTRING(tidut.UT,utnr[1]) = "SUMMA " + STRING(sumbuff2.ARTAL) + " " + mannam(sumbuff2.MANAD)
            SUBSTRING(tidut.UT,utnr[3]) = STRING(sumbuff2.MTIMMAR,">>>>>>9") 
            SUBSTRING(tidut.UT,utnr[4]) = STRING(sumbuff2.NTIMMAR,">>>>>>9") 
            SUBSTRING(tidut.UT,utnr[5]) = STRING(sumbuff2.OTIMMAR,">>>>>>9")   
            SUBSTRING(tidut.UT,utnr[6]) = STRING(sumbuff2.RTIMMAR,">>>>>9")
            SUBSTRING(tidut.UT,utnr[7]) = STRING(sumbuff2.ITIMMAR,">>>>>9")
            SUBSTRING(tidut.UT,utnr[8]) = STRING(sumbuff2.DTIMMAR,">>>>>>9")                  
            SUBSTRING(tidut.UT,utnr[9]) = STRING(sumbuff2.DEBGRADN * 100 ,">>>>>>9")
            SUBSTRING(tidut.UT,utnr[10]) = STRING(sumbuff2.DEBGRADM * 100 ,">>>>>>9").
            IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
            ELSE DO:         
               CREATE tidut.
               tidut.UT = str.
            END.
            DELETE sumbuff2.
         END.
         IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
         ELSE DO:         
            CREATE tidut.
            SUBSTRING(tidut.UT,utnr[1]) = STRING(sumbuff.ARTAL) + " " + mannam(sumbuff.MANAD).                      
         END.
         ASSIGN
         artalvar = sumbuff.ARTAL 
         manadvar = sumbuff.MANAD.
      END.      
      IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
      ELSE DO:         
         CREATE tidut.
         ASSIGN 
         SUBSTRING(tidut.UT,utnr[1]) = sumbuff.PERSONALKOD
         SUBSTRING(tidut.UT,utnr[2]) = SUBSTRING(sumbuff.NAMN,1,15)
         SUBSTRING(tidut.UT,utnr[3]) = STRING(sumbuff.MTIMMAR,">>>>>>9") 
         SUBSTRING(tidut.UT,utnr[4]) = STRING(sumbuff.NTIMMAR,">>>>>>9") 
         SUBSTRING(tidut.UT,utnr[5]) = STRING(sumbuff.OTIMMAR,">>>>>>9")   
         SUBSTRING(tidut.UT,utnr[6]) = STRING(sumbuff.RTIMMAR,">>>>>9")
         SUBSTRING(tidut.UT,utnr[7]) = STRING(sumbuff.ITIMMAR,">>>>>9")
         SUBSTRING(tidut.UT,utnr[8]) = STRING(sumbuff.DTIMMAR,">>>>>>9")                  
         SUBSTRING(tidut.UT,utnr[9]) = STRING(sumbuff.DEBGRADN * 100 ,">>>>>>9")
         SUBSTRING(tidut.UT,utnr[10]) = STRING(sumbuff.DEBGRADM * 100 ,">>>>>>9").
      END.
      DELETE sumbuff.
   END.
   FIND FIRST sumbuff2 WHERE sumbuff2.ORDNING = 6 AND sumbuff2.OMRADE = sumpers.OMRADE AND
   sumbuff2.ARTAL = artalvar AND sumbuff2.MANAD = manadvar
   NO-ERROR.
   IF AVAILABLE sumbuff2 THEN DO:
      IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
      ELSE DO:         
         CREATE tidut.
         tidut.UT = str.
      END.
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,utnr[1]) = "SUMMA " + STRING(sumbuff2.ARTAL) + " " + mannam(sumbuff2.MANAD)
      SUBSTRING(tidut.UT,utnr[3]) = STRING(sumbuff2.MTIMMAR,">>>>>>9") 
      SUBSTRING(tidut.UT,utnr[4]) = STRING(sumbuff2.NTIMMAR,">>>>>>9") 
      SUBSTRING(tidut.UT,utnr[5]) = STRING(sumbuff2.OTIMMAR,">>>>>>9")   
      SUBSTRING(tidut.UT,utnr[6]) = STRING(sumbuff2.RTIMMAR,">>>>>9")
      SUBSTRING(tidut.UT,utnr[7]) = STRING(sumbuff2.ITIMMAR,">>>>>9")
      SUBSTRING(tidut.UT,utnr[8]) = STRING(sumbuff2.DTIMMAR,">>>>>>9")                  
      SUBSTRING(tidut.UT,utnr[9]) = STRING(sumbuff2.DEBGRADN * 100 ,">>>>>>9")
      SUBSTRING(tidut.UT,utnr[10]) = STRING(sumbuff2.DEBGRADM * 100 ,">>>>>>9").
      IF valsoktemp.SOKLOG[1] = FALSE THEN musz = musz.
      ELSE DO:         
         CREATE tidut.
         tidut.UT = str.
      END.
      DELETE sumbuff2.
   END.
END PROCEDURE.
PROCEDURE open_UI :
   IF valsoktemp.SOKINT[1] = 1 THEN DO:
      OPEN QUERY sumarq FOR EACH omrtemp2, 
      EACH SUMTIDDAG WHERE SUMTIDDAG.OMRADE = omrtemp2.OMRADE AND 
      YEAR(SUMTIDDAG.DATUM) = valsoktemp.SOKINT[2] AND SUMTIDDAG.PERSMASK = persmaskvar NO-LOCK.                   
   END.
   IF valsoktemp.SOKINT[1] = 2 THEN DO:         
      OPEN QUERY sumarq FOR EACH omrtemp2, 
      EACH SUMTIDDAG WHERE SUMTIDDAG.OMRADE = omrtemp2.OMRADE AND 
      SUMTIDDAG.DATUM >= valsoktemp.SOKDATE[1] AND SUMTIDDAG.DATUM <= valsoktemp.SOKDATE[2] AND SUMTIDDAG.PERSMASK = persmaskvar NO-LOCK.         
   END.
   RUN skapadag_UI.
END PROCEDURE.
PROCEDURE skapadag_UI :     
   
   GET FIRST sumarq NO-LOCK.
   DO WHILE AVAILABLE(SUMTIDDAG):  
      {ANVOMRSEKKOLL.I}
      IF tisek = TRUE THEN DO: 
         IF SUMTIDDAG.PRISTYP = "RESTID..." THEN DO: 
            FIND FIRST restid WHERE restid.OMRADE = SUMTIDDAG.OMRADE AND
            restid.PERSONALKOD = SUMTIDDAG.PERSONALKOD AND
            restid.ARTAL = YEAR(SUMTIDDAG.DATUM) AND
            restid.MANAD = MONTH(SUMTIDDAG.DATUM)
            NO-ERROR.
            IF NOT AVAILABLE restid THEN CREATE restid.
            ASSIGN          
            restid.OMRADE = SUMTIDDAG.OMRADE        
            restid.ARTAL = YEAR(SUMTIDDAG.DATUM) 
            restid.MANAD = MONTH(SUMTIDDAG.DATUM)
            restid.PERSONALKOD = SUMTIDDAG.PERSONALKOD  
            restid.NAMN = SUBSTRING(SUMTIDDAG.FORNAMN,1,1) + "." + SUMTIDDAG.EFTERNAMN          
            restid.TIMMAR = restid.TIMMAR + SUMTIDDAG.TIMMAR.                  
         END.
         ELSE IF SUMTIDDAG.PRISTYP = "FRÅNVARO." THEN DO: 
            FIND FIRST franvarotemp WHERE franvarotemp.OMRADE = SUMTIDDAG.OMRADE AND
            franvarotemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD AND
            franvarotemp.ARTAL = YEAR(SUMTIDDAG.DATUM) AND
            franvarotemp.MANAD = MONTH(SUMTIDDAG.DATUM)
            NO-ERROR.
            IF NOT AVAILABLE franvarotemp THEN CREATE franvarotemp.
            ASSIGN          
            franvarotemp.OMRADE = SUMTIDDAG.OMRADE        
            franvarotemp.ARTAL = YEAR(SUMTIDDAG.DATUM) 
            franvarotemp.MANAD = MONTH(SUMTIDDAG.DATUM)
            franvarotemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD            
            franvarotemp.NAMN = SUBSTRING(SUMTIDDAG.FORNAMN,1,1) + "." + SUMTIDDAG.EFTERNAMN
            franvarotemp.TIMMAR = franvarotemp.TIMMAR + SUMTIDDAG.TIMMAR.                     
         END. 
         ELSE DO:
            FIND FIRST dagtemp WHERE dagtemp.AONR = SUMTIDDAG.AONR AND
            dagtemp.OMRADE = SUMTIDDAG.OMRADE AND
            dagtemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD AND 
            dagtemp.PRISTYP = SUMTIDDAG.PRISTYP AND
            dagtemp.ARTAL = YEAR(SUMTIDDAG.DATUM) AND
            dagtemp.MANAD = MONTH(SUMTIDDAG.DATUM)
            NO-ERROR.
            IF NOT AVAILABLE dagtemp THEN CREATE dagtemp.
            ASSIGN          
            dagtemp.ARTAL = YEAR(SUMTIDDAG.DATUM) 
            dagtemp.MANAD = MONTH(SUMTIDDAG.DATUM)
            dagtemp.AONR = SUMTIDDAG.AONR
            dagtemp.OMRADE = SUMTIDDAG.OMRADE 
            dagtemp.PERSONALKOD = SUMTIDDAG.PERSONALKOD 
            dagtemp.PRISTYP = SUMTIDDAG.PRISTYP
            dagtemp.NAMN = SUBSTRING(SUMTIDDAG.FORNAMN,1,1) + "." + SUMTIDDAG.EFTERNAMN
            dagtemp.TIMMAR = dagtemp.TIMMAR + SUMTIDDAG.TIMMAR
            dagtemp.OTIMMAR = dagtemp.OTIMMAR + SUMTIDDAG.OTIMMAR.             
            
            IF FORETAG.FORETAG = "MISV" THEN DO:
               /*MITTSVERIGE VILL EJ HA MED TID MED BESTÄLLARE MITTSVERIGE*/
               FIND FIRST AONRTAB WHERE AONRTAB.AONR = SUMTIDDAG.AONR NO-LOCK NO-ERROR.
               IF AVAILABLE AONRTAB THEN DO:
                  IF AONRTAB.BESTID = "SVAB" THEN DELETE dagtemp.
               END.
            END.
         END.
      END.   
      GET NEXT sumarq NO-LOCK. 
   END.  
END PROCEDURE.

PROCEDURE summa_UI.
   FOR EACH dagtemp BREAK BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD:               
      ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD).                     
      ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD).      
      IF LAST-OF(dagtemp.MANAD) THEN DO:
         CREATE sumpers.         
         ASSIGN
         sumpers.ARTAL = dagtemp.ARTAL
         sumpers.MANAD = dagtemp.MANAD
         sumpers.OMRADE = dagtemp.OMRADE         
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD
         sumpers.NAMN = dagtemp.NAMN
         sumpers.ORDNING = 5
         sumpers.MTIMMAR = (ACCUM TOTAL BY dagtemp.MANAD dagtemp.TIMMAR)
         sumpers.NTIMMAR = (ACCUM TOTAL BY dagtemp.MANAD dagtemp.TIMMAR)               
         sumpers.OTIMMAR = (ACCUM TOTAL BY dagtemp.MANAD dagtemp.OTIMMAR).        
      END.   
   END.
   FOR EACH franvarotemp BREAK BY franvarotemp.OMRADE BY franvarotemp.PERSONALKOD BY franvarotemp.ARTAL BY franvarotemp.MANAD:
      ACCUMULATE franvarotemp.TIMMAR (TOTAL BY franvarotemp.OMRADE BY franvarotemp.PERSONALKOD BY franvarotemp.ARTAL BY franvarotemp.MANAD).      
      IF LAST-OF(franvarotemp.MANAD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 5 AND
         sumpers.OMRADE = franvarotemp.OMRADE AND         
         sumpers.PERSONALKOD = franvarotemp.PERSONALKOD AND
         sumpers.ARTAL = franvarotemp.ARTAL AND
         sumpers.MANAD = franvarotemp.MANAD
         NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.         
         ASSIGN
         sumpers.ARTAL = franvarotemp.ARTAL
         sumpers.MANAD = franvarotemp.MANAD
         sumpers.OMRADE = franvarotemp.OMRADE         
         sumpers.PERSONALKOD = franvarotemp.PERSONALKOD
         sumpers.NAMN = franvarotemp.NAMN
         sumpers.ORDNING = 5
         sumpers.FTIMMAR = (ACCUM TOTAL BY franvarotemp.MANAD franvarotemp.TIMMAR) 
         sumpers.MTIMMAR = sumpers.MTIMMAR + (ACCUM TOTAL BY franvarotemp.MANAD franvarotemp.TIMMAR).                
      END.   
   END.
   FOR EACH restid BREAK BY restid.OMRADE BY restid.PERSONALKOD BY restid.ARTAL BY restid.MANAD:
      ACCUMULATE restid.TIMMAR (TOTAL BY restid.OMRADE BY restid.PERSONALKOD BY restid.ARTAL BY restid.MANAD).      
      IF LAST-OF(restid.MANAD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 5 AND
         sumpers.OMRADE = restid.OMRADE AND       
         sumpers.PERSONALKOD = restid.PERSONALKOD AND        
         sumpers.ARTAL = restid.ARTAL AND
         sumpers.MANAD = restid.MANAD
         NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.         
         ASSIGN
         sumpers.ARTAL = restid.ARTAL
         sumpers.MANAD = restid.MANAD
         sumpers.OMRADE = restid.OMRADE         
         sumpers.PERSONALKOD = restid.PERSONALKOD
         sumpers.NAMN = restid.NAMN
         sumpers.ORDNING = 5
         sumpers.RTIMMAR = (ACCUM TOTAL BY restid.MANAD restid.TIMMAR). 
      END.   
   END.                                                                  
   FOR EACH dagtemp BREAK BY dagtemp.OMRADE BY dagtemp.PERSONALKOD :               
      ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD).                     
      ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD).      
      IF LAST-OF(dagtemp.PERSONALKOD) THEN DO:
         CREATE sumpers.         
         ASSIGN
         sumpers.OMRADE = dagtemp.OMRADE         
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD
         sumpers.NAMN = dagtemp.NAMN
         sumpers.ORDNING = 11
         sumpers.MTIMMAR = (ACCUM TOTAL BY dagtemp.PERSONALKOD dagtemp.TIMMAR)
         sumpers.NTIMMAR = (ACCUM TOTAL BY dagtemp.PERSONALKOD dagtemp.TIMMAR)               
         sumpers.OTIMMAR = (ACCUM TOTAL BY dagtemp.PERSONALKOD dagtemp.OTIMMAR).        
      END.   
   END.
   FOR EACH franvarotemp BREAK BY franvarotemp.OMRADE BY franvarotemp.PERSONALKOD:
      ACCUMULATE franvarotemp.TIMMAR (TOTAL BY franvarotemp.OMRADE BY franvarotemp.PERSONALKOD).      
      IF LAST-OF(franvarotemp.PERSONALKOD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 11 AND
         sumpers.OMRADE = franvarotemp.OMRADE AND         
         sumpers.PERSONALKOD = franvarotemp.PERSONALKOD NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.         
         ASSIGN
         sumpers.OMRADE = franvarotemp.OMRADE         
         sumpers.PERSONALKOD = franvarotemp.PERSONALKOD
         sumpers.NAMN = franvarotemp.NAMN
         sumpers.ORDNING = 11
         sumpers.FTIMMAR = (ACCUM TOTAL BY franvarotemp.PERSONALKOD franvarotemp.TIMMAR) 
         sumpers.MTIMMAR = sumpers.MTIMMAR + (ACCUM TOTAL BY franvarotemp.PERSONALKOD franvarotemp.TIMMAR).                
      END.   
   END.
   FOR EACH restid BREAK BY restid.OMRADE BY restid.PERSONALKOD:
      ACCUMULATE restid.TIMMAR (TOTAL BY restid.OMRADE BY restid.PERSONALKOD).      
      IF LAST-OF(restid.PERSONALKOD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 11 AND
         sumpers.OMRADE = restid.OMRADE AND       
         sumpers.PERSONALKOD = restid.PERSONALKOD NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.         
         ASSIGN
         sumpers.OMRADE = restid.OMRADE         
         sumpers.PERSONALKOD = restid.PERSONALKOD
         sumpers.NAMN = restid.NAMN
         sumpers.ORDNING = 11
         sumpers.RTIMMAR = (ACCUM TOTAL BY restid.PERSONALKOD restid.TIMMAR). 
      END.   
   END.                                                                  
   /*ej debi*/
   FOR EACH dagtemp WHERE dagtemp.PRISTYP = "TOT.PRIS." BREAK BY dagtemp.OMRADE BY dagtemp.PERSONALKOD :               
      ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD).                     
      ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD).      
      IF LAST-OF(dagtemp.PERSONALKOD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 11 AND
         sumpers.OMRADE = dagtemp.OMRADE AND        
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.
         ASSIGN
         sumpers.OMRADE = dagtemp.OMRADE         
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD
         sumpers.NAMN = dagtemp.NAMN
         sumpers.ORDNING = 11
         sumpers.DTIMMAR = (ACCUM TOTAL BY dagtemp.PERSONALKOD dagtemp.TIMMAR) 
         sumpers.ITIMMAR = sumpers.NTIMMAR - (ACCUM TOTAL BY dagtemp.PERSONALKOD dagtemp.TIMMAR).                       
      END.   
   END.
   
   FOR EACH dagtemp WHERE dagtemp.PRISTYP = "TOT.PRIS." BREAK BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD:
      ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD).                     
      ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.OMRADE BY dagtemp.PERSONALKOD BY dagtemp.ARTAL BY dagtemp.MANAD).      
      IF LAST-OF(dagtemp.MANAD) THEN DO:
         FIND FIRST sumpers WHERE 
         sumpers.ORDNING = 5 AND
         sumpers.OMRADE = dagtemp.OMRADE AND        
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD AND
         sumpers.ARTAL = dagtemp.ARTAL AND 
         sumpers.MANAD = dagtemp.MANAD 
         NO-ERROR.
         IF NOT AVAILABLE sumpers THEN CREATE sumpers.
         ASSIGN
         sumpers.OMRADE = dagtemp.OMRADE         
         sumpers.PERSONALKOD = dagtemp.PERSONALKOD
         sumpers.NAMN = dagtemp.NAMN
         sumpers.ARTAL = dagtemp.ARTAL  
         sumpers.MANAD = dagtemp.MANAD 
         sumpers.ORDNING = 5
         sumpers.DTIMMAR = (ACCUM TOTAL BY dagtemp.MANAD dagtemp.TIMMAR) 
         sumpers.ITIMMAR = sumpers.NTIMMAR - (ACCUM TOTAL BY dagtemp.MANAD dagtemp.TIMMAR).                       
      END.   
   END.

   FOR EACH sumpers WHERE sumpers.ORDNING = 11 BREAK BY sumpers.OMRADE:               
      ACCUMULATE sumpers.FTIMMAR (TOTAL BY sumpers.OMRADE). 
      ACCUMULATE sumpers.DTIMMAR (TOTAL BY sumpers.OMRADE).
      ACCUMULATE sumpers.ITIMMAR (TOTAL BY sumpers.OMRADE).
      ACCUMULATE sumpers.OTIMMAR (TOTAL BY sumpers.OMRADE).
      ACCUMULATE sumpers.RTIMMAR (TOTAL BY sumpers.OMRADE).
      ACCUMULATE sumpers.MTIMMAR (TOTAL BY sumpers.OMRADE).
      ACCUMULATE sumpers.NTIMMAR (TOTAL BY sumpers.OMRADE).
      IF LAST-OF(sumpers.OMRADE) THEN DO:
         CREATE sumbuff.
         ASSIGN
         sumbuff.OMRADE = sumpers.OMRADE                  
         sumbuff.PERSONALKOD = "99"
         sumbuff.ORDNING = 12
         sumbuff.FTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.FTIMMAR) 
         sumbuff.DTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.DTIMMAR)
         sumbuff.ITIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.ITIMMAR)
         sumbuff.OTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.OTIMMAR)
         sumbuff.RTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.RTIMMAR)
         sumbuff.MTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.MTIMMAR)
         sumbuff.NTIMMAR = (ACCUM TOTAL BY sumpers.OMRADE sumpers.NTIMMAR).                                
      END.
   END.
   FOR EACH sumpers WHERE sumpers.ORDNING = 5 BREAK BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD:               
      ACCUMULATE sumpers.FTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD). 
      ACCUMULATE sumpers.DTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      ACCUMULATE sumpers.ITIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      ACCUMULATE sumpers.OTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      ACCUMULATE sumpers.RTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      ACCUMULATE sumpers.MTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      ACCUMULATE sumpers.NTIMMAR (TOTAL BY sumpers.OMRADE BY sumpers.ARTAL BY sumpers.MANAD).
      IF LAST-OF(sumpers.MANAD) THEN DO:
         CREATE sumbuff.
         ASSIGN
         sumbuff.OMRADE = sumpers.OMRADE   
         sumbuff.ARTAL = sumpers.ARTAL
         sumbuff.MANAD = sumpers.MANAD
         sumbuff.PERSONALKOD = "99"
         sumbuff.ORDNING = 6
         sumbuff.FTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.FTIMMAR) 
         sumbuff.DTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.DTIMMAR)
         sumbuff.ITIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.ITIMMAR)
         sumbuff.OTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.OTIMMAR)
         sumbuff.RTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.RTIMMAR)
         sumbuff.MTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.MTIMMAR)
         sumbuff.NTIMMAR = (ACCUM TOTAL BY sumpers.MANAD sumpers.NTIMMAR).                                
      END.
   END.
   FOR EACH sumpers WHERE sumpers.ORDNING = 12 BREAK BY sumpers.PERSONALKOD:               
      ACCUMULATE sumpers.FTIMMAR (TOTAL BY sumpers.PERSONALKOD). 
      ACCUMULATE sumpers.DTIMMAR (TOTAL BY sumpers.PERSONALKOD).
      ACCUMULATE sumpers.ITIMMAR (TOTAL BY sumpers.PERSONALKOD).
      ACCUMULATE sumpers.OTIMMAR (TOTAL BY sumpers.PERSONALKOD).
      ACCUMULATE sumpers.RTIMMAR (TOTAL BY sumpers.PERSONALKOD).
      ACCUMULATE sumpers.MTIMMAR (TOTAL BY sumpers.PERSONALKOD).
      ACCUMULATE sumpers.NTIMMAR (TOTAL BY sumpers.PERSONALKOD).
      IF LAST-OF(sumpers.PERSONALKOD) THEN DO:
         CREATE sumbuff.
         ASSIGN         
         sumbuff.ORDNING = 13
         sumbuff.FTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.FTIMMAR) 
         sumbuff.DTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.DTIMMAR)
         sumbuff.ITIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.ITIMMAR)
         sumbuff.OTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.OTIMMAR)
         sumbuff.RTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.RTIMMAR)
         sumbuff.MTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.MTIMMAR)
         sumbuff.NTIMMAR = (ACCUM TOTAL BY sumpers.PERSONALKOD sumpers.NTIMMAR).                                
      END.
   END.    


   FOR EACH sumpers BY sumpers.ORDNING:      
      IF sumpers.NTIMMAR NE 0 THEN
      sumpers.DEBGRADN = sumpers.DTIMMAR / sumpers.NTIMMAR.
      IF sumpers.MTIMMAR NE 0 THEN
      sumpers.DEBGRADM = sumpers.DTIMMAR / sumpers.MTIMMAR.
   END.

END PROCEDURE.   
   

