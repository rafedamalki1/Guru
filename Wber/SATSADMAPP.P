/*SATSADMAPP.P*/

{MTRLTEMP.I}

DEFINE TEMP-TABLE sats_mtrl
   FIELD KOD AS CHARACTER
   FIELD ENR AS CHARACTER 
   FIELD BENAMNING AS CHARACTER LABEL "Benämning"
   FIELD ENHET AS CHARACTER LABEL "Enhet" 
   FIELD ANTAL AS INTEGER LABEL "Antal"
   FIELD PRIS AS DECIMAL LABEL "Pris"
   FIELD LEVKOD AS CHARACTER.

DEFINE BUFFER skapbuff FOR SATS.

PROCEDURE bortsats_UI :
   DEFINE INPUT PARAMETER skap_row AS ROWID NO-UNDO.
   DEFINE INPUT PARAMETER kodvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER levkodvar AS CHARACTER NO-UNDO.
   DO TRANSACTION:
      FOR EACH skapbuff WHERE skapbuff.KOD = kodvar AND 
      skapbuff.LEVKOD = levkodvar AND skapbuff.SATS = FALSE:          
         DELETE skapbuff.
      END.
      FIND SATS WHERE ROWID(SATS) = skap_row EXCLUSIVE-LOCK.  
      IF AVAILABLE SATS THEN DO:
         DELETE SATS.  
      END.
   END.
END PROCEDURE.

PROCEDURE skapsats_UI :
   DEFINE INPUT PARAMETER kodvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vald_lev AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR sats_mtrl.
   EMPTY TEMP-TABLE sats_mtrl NO-ERROR. 
   OPEN QUERY skapq FOR EACH SATS WHERE SATS.KOD = kodvar AND
   SATS.LEVKOD = vald_lev AND SATS.SATS = FALSE USE-INDEX KOD NO-LOCK.
   GET FIRST skapq NO-LOCK.
   DO WHILE AVAILABLE(SATS):
      CREATE sats_mtrl.
      ASSIGN         
      sats_mtrl.KOD = SATS.KOD
      sats_mtrl.ENR = SATS.ENR2 
      sats_mtrl.BENAMNING = SATS.BENAMNING2 
      sats_mtrl.ENHET = SATS.ENHET2 
      sats_mtrl.ANTAL = SATS.ANTAL 
      sats_mtrl.PRIS = SATS.PRIS2 
      sats_mtrl.LEVKOD = SATS.LEVKOD.
      GET NEXT skapq NO-LOCK.
   END. 
   RETURN.
END PROCEDURE.

PROCEDURE satshmten_UI :
   DEFINE INPUT PARAMETER skap_row AS ROWID NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR satstemp.
   EMPTY TEMP-TABLE satstemp NO-ERROR. 
   FIND FIRST SATS WHERE ROWID(SATS) = skap_row NO-LOCK NO-ERROR.
   IF AVAILABLE SATS THEN DO:
      CREATE satstemp.
      BUFFER-COPY SATS TO satstemp.
      satstemp.SATSROW = ROWID(SATS).      
   END.
END PROCEDURE.
