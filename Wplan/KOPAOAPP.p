/*KOPAOAPP.P*/
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}
{REGVAR.I}

{PLANNRTEMP.I}
{AONRDEF.I}
/* {AONRTEMP.I} */
DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER delvar AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER plannrvar AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER artalvar AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.

DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.

FOR EACH AONRKONTKOD WHERE AONRKONTKOD.AONR = aonrvar AND
AONRKONTKOD.DELNR = delvar USE-INDEX AONRKONT NO-LOCK:
   FIND FIRST PLANKONTO WHERE PLANKONTO.PLANNR = plannrvar AND
   PLANKONTO.ARTAL = artalvar AND
   PLANKONTO.K1 = AONRKONTKOD.K1 AND
   PLANKONTO.K2 = AONRKONTKOD.K2 AND
   PLANKONTO.K3 = AONRKONTKOD.K3 AND
   PLANKONTO.K4 = AONRKONTKOD.K4 AND
   PLANKONTO.K5 = AONRKONTKOD.K5 USE-INDEX PLANKONT NO-LOCK NO-ERROR.
   IF NOT AVAILABLE PLANKONTO THEN musz = TRUE.
END.
IF musz = TRUE THEN DO:
   musz = FALSE.
   RUN fel_UI.
END.
ELSE DO:
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonrvar AND AONRTAB.DELNR = delvar EXCLUSIVE-LOCK NO-ERROR.
   ASSIGN
   AONRTAB.PLANNR = plannrvar
   AONRTAB.ARTAL = artalvar.
   FIND FIRST PLANNRTAB WHERE PLANNRTAB.PLANNR = plannrvar AND
   PLANNRTAB.ARTAL = artalvar EXCLUSIVE-LOCK NO-ERROR.
   ASSIGN 
   PLANNRTAB.KOPPAO = TRUE.   
END.                                          

PROCEDURE fel_UI:     
   CREATE felmeddtemp.
   felmeddtemp.FELMEDD = "Koppling ej möjlig då " + CAPS(Guru.Konstanter:gaok) + " innehåller konto som ej finns på " + CAPS(Guru.Konstanter:gplk).    
END PROCEDURE.        
    
    
    

