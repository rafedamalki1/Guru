/*LISTPROGD.P för delinköp*/

DEFINE VARIABLE datvar LIKE BERMTRL.DATUM NO-UNDO.

DEFINE TEMP-TABLE mtrl_temp 
   {MTRLTEMPTT.I}
   
DEFINE TEMP-TABLE lin_upp   
   FIELD METER LIKE BERLINKAB.METER      
   FIELD ENR LIKE BERLINKAB.ENR         
   FIELD BENAMNING LIKE BERLINKAB.BENAMNING 
   FIELD PRIS LIKE BERLINKAB.PRIS
   FIELD ENHET LIKE BERLINKAB.ENHET   
   FIELD TOTMETER LIKE BERLINKAB.TOTMETER
   FIELD UPPLAG LIKE BERLINKAB.UPPLAG 
   FIELD LEVKOD LIKE BERLINKAB.LEVKOD
   FIELD TOTPRIS LIKE BERMTRL.PRIS         
   INDEX ENR ENR ASCENDING.     
   
DEFINE TEMP-TABLE lin_temp  
   FIELD NUM1 LIKE BERLINKAB.NUM1
   FIELD NUM2 LIKE BERLINKAB.NUM2 
   FIELD METER LIKE BERLINKAB.METER              
   FIELD BENAMNING LIKE BERLINKAB.BENAMNING       
   INDEX NUM NUM1 NUM2 ASCENDING.   

DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR mtrl_temp.
DEFINE OUTPUT PARAMETER TABLE FOR lin_upp.
DEFINE OUTPUT PARAMETER TABLE FOR lin_temp.
DEFINE VARIABLE inkberh AS HANDLE NO-UNDO.
DEFINE VARIABLE fragavar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.  
{INKSUMBERTEMP.I}  
{INKKOLL3.I}
{DYNPOSTFINNS.I}
IF inkopkollvar = TRUE THEN DO:               
   fragavar = "INKMTRL.BERNR = " + STRING(valaonr) + " AND INKMTRL.OMRADE = '" + valomrade + "'".  
   RUN finnspostdyn_UI (INPUT "INKMTRL",INPUT fragavar,OUTPUT musz).
   IF musz = FALSE THEN RUN gamminkop_UI.
   ELSE DO:
      musz = FALSE.
      RUN inkop_UI.
     
   END.                     
END.        
ELSE RUN gamminkop_UI.
PROCEDURE inkop_UI:
   DEFINE VARIABLE inkaonr AS CHARACTER NO-UNDO.
   DEFINE VARIABLE inkdelnr AS INTEGER NO-UNDO.
   RUN INKBERAPP.P PERSISTENT SET inkberh.
   RUN faltvarde_UI (INPUT "AONRAONR",OUTPUT fragavar).
   inkaonr = fragavar.
   RUN faltvarde_UI (INPUT "AONRDELNR",OUTPUT fragavar).
   inkdelnr = INTEGER(fragavar).
   RUN beredningskontroll_UI IN inkberh (INPUT inkaonr,INPUT inkdelnr,OUTPUT TABLE sumbernum_mtrl,OUTPUT TABLE sumberskapnum_mtrl).
   FOR EACH BERVAL WHERE BERVAL.AONR = valaonr AND BERVAL.OMRADE = valomrade AND BERVAL.KSKAP = FALSE NO-LOCK,
   EACH BERMTRL WHERE BERMTRL.AONR = BERVAL.AONR AND BERMTRL.OMRADE = BERVAL.OMRADE AND BERMTRL.NUM = BERVAL.NUM
   NO-LOCK.
      FIND FIRST sumberskapnum_mtrl WHERE sumberskapnum_mtrl.NUM = BERMTRL.NUM AND 
      sumberskapnum_mtrl.SKAPNUM = BERMTRL.SKAPNUM AND
      sumberskapnum_mtrl.ENRORG = BERMTRL.ENR AND  
      sumberskapnum_mtrl.LEVKOD = BERMTRL.LEVKOD 
      NO-LOCK NO-ERROR.    
      IF NOT AVAILABLE sumberskapnum_mtrl THEN DO:
         CREATE mtrl_temp.
         ASSIGN  
         mtrl_temp.NUM = BERMTRL.NUM
         mtrl_temp.ENR = BERMTRL.ENR     
         mtrl_temp.BENAMNING = BERMTRL.BENAMNING
         mtrl_temp.ENHET = BERMTRL.ENHET
         mtrl_temp.ANTAL = BERMTRL.ANTAL
         mtrl_temp.PRIS = BERMTRL.PRIS 
         mtrl_temp.TOTPRIS = BERMTRL.PRIS * BERMTRL.ANTAL      
         mtrl_temp.LEVKOD = BERMTRL.LEVKOD
         mtrl_temp.PAR = BERMTRL.PAR
         mtrl_temp.MTRLTEXT = BERMTRL.MTRLTEXT.
      END.
   END.
   
   IF VALID-HANDLE(inkberh) THEN DO: 
      RUN InkAvs_UI IN inkberh.
      DELETE PROCEDURE inkberh NO-ERROR.
   END.    
END PROCEDURE.              
PROCEDURE gamminkop_UI :
   /*Anders Olsson Elpool i Umeå AB  29 aug 2016 15:56:47 
   /*måste köras*/   
   */ 
   /*Anders Olsson Elpool i Umeå AB  19 apr 2017 11:51:12 
    
    
  
   */
   FIND LAST BERMTRL WHERE BERMTRL.AONR = valaonr AND BERMTRL.OMRADE = valomrade AND BERMTRL.INKOP = FALSE 
   USE-INDEX DATUM NO-LOCK NO-ERROR.
   IF AVAILABLE BERMTRL THEN DO:
      datvar = BERMTRL.DATUM.
   END.     
   ELSE datvar = TODAY.
   OPEN QUERY mtrlprisq FOR EACH BERVAL WHERE BERVAL.AONR = valaonr AND BERVAL.OMRADE = valomrade
   /*AND BERVAL.ORT = ""*/  AND BERVAL.KSKAP = FALSE USE-INDEX OMR NO-LOCK,
   EACH BERMTRL WHERE BERMTRL.AONR = valaonr AND BERMTRL.OMRADE = valomrade AND BERMTRL.NUM = BERVAL.NUM
   AND BERMTRL.INKOP = FALSE AND BERMTRL.DATUM = datvar USE-INDEX DATUM NO-LOCK.
   GET FIRST mtrlprisq NO-LOCK.
   DO WHILE AVAILABLE(BERMTRL): 
      IF BERVAL.ORT = "" OR BERVAL.ORT = "STOPP" THEN DO:
         CREATE mtrl_temp.
         ASSIGN  
         mtrl_temp.NUM = BERMTRL.NUM
         mtrl_temp.ENR = BERMTRL.ENR     
         mtrl_temp.BENAMNING = BERMTRL.BENAMNING
         mtrl_temp.ENHET = BERMTRL.ENHET
         mtrl_temp.ANTAL = BERMTRL.ANTAL
         mtrl_temp.PRIS = BERMTRL.PRIS 
         mtrl_temp.TOTPRIS = BERMTRL.PRIS * BERMTRL.ANTAL      
         mtrl_temp.LEVKOD = BERMTRL.LEVKOD
         mtrl_temp.PAR = BERMTRL.PAR
         mtrl_temp.MTRLTEXT = BERMTRL.MTRLTEXT.
      END.
      ELSE /*GAMLA INKÖPET*/.   
      GET NEXT mtrlprisq NO-LOCK.
   END.    
   CLOSE QUERY mtrlprisq.         
   
   OPEN QUERY linq FOR EACH BERUPP WHERE BERUPP.AONR = valaonr AND BERUPP.OMRADE = valomrade AND 
   BERUPP.UPPLAG NE ? AND BERUPP.ANTALRADER <= 100 AND BERUPP.DELNR = 0 NO-LOCK, 
   EACH BERLINKAB WHERE BERLINKAB.AONR = valaonr AND BERLINKAB.OMRADE = valomrade AND
   BERLINKAB.UPPLAG = BERUPP.UPPLAG AND  BERLINKAB.DATUM = datvar AND BERLINKAB.KORTKOD = ?
   AND BERLINKAB.UPPLAG NE ? USE-INDEX INKOP NO-LOCK.
   GET FIRST linq NO-LOCK.
   DO WHILE AVAILABLE(BERLINKAB):
      CREATE lin_upp.
      ASSIGN
      lin_upp.ENR = BERLINKAB.ENR
      lin_upp.BENAMNING = BERLINKAB.BENAMNING
      lin_upp.ENHET = BERLINKAB.ENHET
      lin_upp.PRIS = BERLINKAB.PRIS
      lin_upp.LEVKOD = BERLINKAB.LEVKOD
      lin_upp.METER = BERLINKAB.METER
      lin_upp.TOTMETER = BERLINKAB.TOTMETER
      lin_upp.UPPLAG = BERLINKAB.UPPLAG
      lin_upp.TOTPRIS = BERLINKAB.PRIS * BERLINKAB.TOTMETER.
      GET NEXT linq NO-LOCK.
   END.          
   CLOSE QUERY linq.
   OPEN QUERY linq FOR EACH BERUPP WHERE BERUPP.AONR = valaonr AND BERUPP.OMRADE = valomrade AND 
   BERUPP.UPPLAG NE ? AND BERUPP.ANTALRADER <= 100 AND BERUPP.DELNR = 0 NO-LOCK, 
   EACH BERLINKAB WHERE BERLINKAB.AONR = valaonr AND BERLINKAB.OMRADE = valomrade AND
   BERLINKAB.UPPLAG = BERUPP.UPPLAG AND BERLINKAB.DATUM = datvar AND BERLINKAB.KORTKOD = ?
   AND BERLINKAB.TOTMETER = 0 USE-INDEX INKOP NO-LOCK.
   GET FIRST linq NO-LOCK.
   DO WHILE AVAILABLE(BERLINKAB):
      FIND FIRST lin_upp WHERE lin_upp.ENR = BERLINKAB.ENR AND
      lin_upp.LEVKOD = BERLINKAB.LEVKOD NO-LOCK NO-ERROR.
      IF AVAILABLE lin_upp THEN DO:
         datvar = datvar.
      END.
      ELSE DO:
         CREATE mtrl_temp.
         ASSIGN  
         mtrl_temp.NUM = BERLINKAB.NUM1
         mtrl_temp.ENR = BERLINKAB.ENR     
         mtrl_temp.BENAMNING = BERLINKAB.BENAMNING
         mtrl_temp.ENHET = BERLINKAB.ENHET
         mtrl_temp.ANTAL = BERLINKAB.METER * BERLINKAB.LEDARE
         mtrl_temp.PRIS = BERLINKAB.PRIS 
         mtrl_temp.TOTPRIS = BERLINKAB.PRIS * mtrl_temp.ANTAL      
         mtrl_temp.LEVKOD = BERLINKAB.LEVKOD.                  
      END.   
      CREATE lin_temp.
      ASSIGN  
      lin_temp.NUM1 = BERLINKAB.NUM1
      lin_temp.NUM2 = BERLINKAB.NUM2
      lin_temp.BENAMNING = BERLINKAB.BENAMNING         
      lin_temp.METER = BERLINKAB.METER.
      GET NEXT linq NO-LOCK.
   END.          
   CLOSE QUERY linq. 
   
END PROCEDURE.