/*BSPECANVAPP.P*/
&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}

{DEPATEMP.I}
{SMTRL.I}

&Scoped-define NEW 
&Scoped-define SHARED 
{ANVTEMPS.I}
{MTRLTEMP.I}
{LEVTEMP.I}         

DEFINE VARIABLE rad AS INTEGER NO-UNDO.
DEFINE VARIABLE summa AS INTEGER NO-UNDO.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(86)" NO-UNDO.    
DEFINE VARIABLE str1 AS CHARACTER FORMAT "X(86)" NO-UNDO.
DEFINE VARIABLE totpris AS DECIMAL NO-UNDO.
DEFINE VARIABLE varpaslag AS DECIMAL FORMAT "->9.99" NO-UNDO.
DEFINE VARIABLE nbestnr AS INTEGER NO-UNDO.
DEFINE VARIABLE invdat AS DATE NO-UNDO.
DEFINE VARIABLE berdatumvar AS DATE NO-UNDO.
DEFINE VARIABLE berlev AS CHARACTER NO-UNDO.
 

PROCEDURE admbortmtrl_UI:   
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR emtrltemp. 
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp. 

   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST emtrltemp NO-ERROR.
   DO TRANSACTION:         
      FIND FIRST MTRL WHERE ROWID(MTRL) = emtrltemp.MTRLROW EXCLUSIVE-LOCK NO-ERROR.                           
      IF AVAILABLE MTRL THEN DELETE MTRL.                     
   END.
   RELEASE MTRL NO-ERROR.
   RELEASE MTRLSPEC NO-ERROR.

END PROCEDURE.

PROCEDURE admsparmtrl_UI:
   /*DEFINE INPUT PARAMETER rowvar AS ROWID NO-UNDO. */     
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR emtrltemp. 
   FIND FIRST emtrltemp NO-LOCK NO-ERROR.
   IF AVAILABLE emtrltemp THEN DO:   
      IF emtrltemp.MTRLROW = ? THEN DO TRANSACTION:
         CREATE MTRL.
         BUFFER-COPY emtrltemp TO MTRL.
          {MTRLCREATE.I}
         ASSIGN emtrltemp.MTRLROW = ROWID(MTRL).      
      END.
      ELSE DO:  
         DO TRANSACTION:      
            FIND FIRST MTRL WHERE MTRL.ENR = emtrltemp.ENR AND MTRL.LEVKOD = emtrltemp.LEVKOD AND MTRL.KALKNR = 0 EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE MTRL THEN DO:                 
               FIND FIRST emtrltemp NO-LOCK NO-ERROR.
               BUFFER-COPY emtrltemp TO MTRL.  
                {MTRLCREATE.I} 
            END. 
         END.
      END.      
      RELEASE MTRL NO-ERROR.
      RELEASE MTRLDEP NO-ERROR.
   END.
END PROCEDURE.


PROCEDURE kollenr_UI :
   DEFINE INPUT PARAMETER rowkoll AS ROWID NO-UNDO.     
   DEFINE INPUT PARAMETER kollenr AS CHARACTER NO-UNDO.     
   DEFINE INPUT PARAMETER leverant AS CHARACTER NO-UNDO.     
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.   
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST MTRL WHERE MTRL.ENR = kollenr AND
   MTRL.LEVKOD = leverant AND ROWID(MTRL) NE rowkoll USE-INDEX ENR NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:                 
      CREATE felmeddtemp.  
      ASSIGN               
      felmeddtemp.FELMEDD = "Det finns redan ett materiel med detta " + LC(Guru.Konstanter:genk) + " " +  kollenr +  ". Ange ett nytt." .
   END.
   ELSE DO:
      IF rowkoll NE ? THEN DO:      
         DO TRANSACTION:
            FIND FIRST MTRL WHERE ROWID(MTRL) = rowkoll EXCLUSIVE-LOCK NO-ERROR.
            MTRL.ENR = kollenr.
         END.
         RELEASE MTRL.
      END.
   END.
     
END PROCEDURE.    

PROCEDURE kollvlevenr_UI :
   DEFINE INPUT-OUTPUT  PARAMETER TABLE FOR espec_mtrl.     
   DEFINE INPUT PARAMETER valomrade AS CHARACTER NO-UNDO.     
   DEFINE INPUT PARAMETER valaonr AS CHARACTER NO-UNDO.   
   DEFINE OUTPUT PARAMETER finns AS LOGICAL NO-UNDO.   
      
   
   FIND FIRST espec_mtrl NO-ERROR.
   finns = FALSE.
   FIND FIRST BETFRIA WHERE BETFRIA.FAKTTEXT = valomrade AND
   BETFRIA.BETNR = INTEGER(valaonr) NO-LOCK NO-ERROR. 
   IF AVAILABLE BETFRIA THEN berlev = BETFRIA.TYP.         
   ELSE berlev = "".
      
   IF berlev = "" THEN DO:       
      FIND FIRST HUVUDLEV WHERE HUVUDLEV.DEP-NR = 999 NO-LOCK NO-ERROR.
      IF AVAILABLE HUVUDLEV THEN DO:
         berlev = HUVUDLEV.LEVKOD.
      END.
      ELSE DO:
         FIND FIRST LEVERANTOR WHERE LEVERANTOR.LEVKOD NE "0"
         AND LEVERANTOR.BORTTAG = FALSE NO-LOCK NO-ERROR.
         berlev = LEVERANTOR.LEVKOD.
      END.
   END.  
   /*MESSAGE berlev VIEW-AS ALERT-BOX.*/          
   FIND FIRST MTRL WHERE MTRL.ENR = espec_mtrl.ENR AND
   MTRL.LEVKOD = berlev  USE-INDEX ENR NO-LOCK NO-ERROR.
   IF AVAILABLE MTRL THEN DO:     
      ASSIGN
      espec_mtrl.BENAMNING = MTRL.BENAMNING 
      espec_mtrl.ENHET = MTRL.ENHET
      espec_mtrl.NPRIS = MTRL.NPRIS
      espec_mtrl.BPRIS = MTRL.BPRIS
      espec_mtrl.LEVKOD = MTRL.LEVKOD.
      finns = TRUE.
   END.        
END PROCEDURE.    


PROCEDURE hamta_UI :   
   DEFINE INPUT PARAMETER anvvar AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR mtrltemp.
   EMPTY TEMP-TABLE mtrltemp NO-ERROR.    
   FOR EACH MTRL WHERE MTRL.LEVKOD = "99" + anvvar AND MTRL.KALKNR = 0 NO-LOCK:   
      CREATE mtrltemp.
      ASSIGN
      mtrltemp.ENR = MTRL.ENR
      mtrltemp.BENAMNING = MTRL.BENAMNING
      mtrltemp.ENHET = LC(MTRL.ENHET)
      mtrltemp.NPRIS = MTRL.NPRIS
      mtrltemp.BPRIS = MTRL.BPRIS
      mtrltemp.LEVKOD = MTRL.LEVKOD
      mtrltemp.KUND = MTRL.KUND
      mtrltemp.MTRLROW = ROWID(MTRL). 
   END.   
END PROCEDURE.
