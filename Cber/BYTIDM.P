/*BYTIDM.P*/
{BYTIDMWID.I}
{ALLDEF.I}
&Scoped-define NEW 
{GLOBVAR2DEL1.I}
&Scoped-define SHARED SHARED
{KONSTRMTRL.I}
{BBENAMNTEMP.I}
{ANNAMN.I}
{KONVALTEMP.I} 
{KONID.I} 
DEFINE SHARED VARIABLE btnbervalh AS HANDLE NO-UNDO.
DEFINE SHARED VARIABLE kon_rowid AS ROWID NO-UNDO.
DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.      
DEFINE SHARED VARIABLE valaonr AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE valdelnr AS INTEGER NO-UNDO.
DEFINE SHARED VARIABLE valort AS CHARACTER NO-UNDO. 
DEFINE SHARED VARIABLE valomrade AS CHARACTER NO-UNDO.  
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO. 
DEFINE VARIABLE kon_idh AS HANDLE NO-UNDO.
DEFINE VARIABLE kon_valh AS HANDLE NO-UNDO.
DEFINE VARIABLE idkon_valh AS HANDLE NO-UNDO.
DEFINE VARIABLE selrowvar AS ROWID NO-UNDO.
DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO. 
DEFINE VARIABLE forvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE linvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE natvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE gruppvar AS INTEGER NO-UNDO. 
DEFINE VARIABLE numvar AS INTEGER NO-UNDO.   
DEFINE VARIABLE numvar2 AS INTEGER NO-UNDO.
DEFINE VARIABLE cmbspar AS CHARACTER EXTENT 3 NO-UNDO.
DEFINE TEMP-TABLE id_temp
   FIELD ROWVAR AS ROWID
   INDEX ROWVAR IS PRIMARY ROWVAR ASCENDING.
DEFINE TEMP-TABLE konord NO-UNDO
   FIELD ROWVAR AS ROWID
   FIELD ORGORD AS INTEGER
   FIELD NYORD AS INTEGER
   INDEX ORGORD IS PRIMARY ORGORD
   INDEX NYORD NYORD.
DEFINE TEMP-TABLE kon_idhelp NO-UNDO
   FIELD NUM AS INTEGER
   FIELD GRUPP AS INTEGER
   FIELD FRI1 AS INTEGER
   FIELD FRI2 AS INTEGER.
framesizeh = framesizeextrah.
kon_idh = TEMP-TABLE  kon_id:DEFAULT-BUFFER-HANDLE.
kon_valh = TEMP-TABLE  kon_val:DEFAULT-BUFFER-HANDLE.
idkon_valh = TEMP-TABLE  idkon_val:DEFAULT-BUFFER-HANDLE.
ON 'MOUSE-MENU-CLICK' OF BRW_FRAN PERSISTENT RUN brwfran_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_FRAN PERSISTENT RUN vbrwfran_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_NER PERSISTENT RUN btnner_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_UPP PERSISTENT RUN btnupp_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_MORDNERID PERSISTENT RUN btnmordnerID_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_MORDUPPID PERSISTENT RUN btnmorduppID_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_VAL PERSISTENT RUN cmbval_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_MORDNER PERSISTENT RUN btnmordner_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_MORDUPP PERSISTENT RUN btnmordupp_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_KOPPIDORD PERSISTENT RUN btnkopp_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF RAD_ORD PERSISTENT RUN radord_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ORD PERSISTENT RUN vbrword_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ORDID PERSISTENT RUN vbrwordId_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ORDIDVAL PERSISTENT RUN vbrwordidval_UI IN THIS-PROCEDURE.

PROCEDURE btnkopp_UI :
   DEFINE VARIABLE raknare AS INTEGER NO-UNDO.
   DEFINE BUFFER idkonbuff FOR idkon_val.
   IF FILL-IN-IDNRORDID2:SCREEN-VALUE = "" OR FILL-IN-IDNRORDID2:SCREEN-VALUE = ? THEN DO:
      MESSAGE "Du måste sätta ett start värde!" VIEW-AS ALERT-BOX.
      RETURN.
   END.
   IF bbenamntemp.ID1 NE "" THEN DO:        
      IF FILL-IN-IDNRORDID:SCREEN-VALUE = ? THEN DO:          
         MESSAGE "Ni har angett ett ogiltigt värde i fältet för " bbenamntemp.ID1 + "."
         VIEW-AS ALERT-BOX TITLE "Meddelande".
         APPLY "ENTRY" TO FILL-IN-IDNRORDID.
         RETURN NO-APPLY.
      END.
   END.  
   IF bbenamntemp.ID2 NE "" THEN DO:  
      IF FILL-IN-IDNRORDID2:SCREEN-VALUE = ? THEN DO:
         MESSAGE "Ni har angett ett ogiltigt värde i fältet för " bbenamntemp.ID2 + "."
         VIEW-AS ALERT-BOX TITLE "Meddelande".
         APPLY "ENTRY" TO FILL-IN-IDNRORDID2.
         RETURN NO-APPLY.
      END.
   END.    
   RUN getnumresult_UI IN brwproc[4] (OUTPUT raknare).
   raknare = raknare - 1.
   FOR EACH kon_id:
      CREATE kon_idhelp.
      BUFFER-COPY kon_id TO kon_idhelp.
   END.
   FOR EACH kon_idhelp:
      FIND FIRST idkon_val WHERE idkon_val.NUM = kon_idhelp.NUM NO-LOCK NO-ERROR.            
      IF AVAILABLE idkon_val THEN DELETE kon_idhelp.
   END.
   raknare = INTEGER(FILL-IN-IDNRORDID2:SCREEN-VALUE).
   FOR EACH idkon_val USE-INDEX ORD:
      IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:
         FIND FIRST kon_idhelp WHERE kon_idhelp.FRI2 = raknare NO-LOCK NO-ERROR.            
      END.
      ELSE DO:
         FIND FIRST kon_idhelp WHERE kon_idhelp.GRUPP = idkon_val.GRUPP AND kon_idhelp.FRI1 = INTEGER(FILL-IN-IDNRORDID:SCREEN-VALUE) AND 
         kon_idhelp.FRI2 = raknare NO-LOCK NO-ERROR.            
      END.
      IF AVAILABLE kon_idhelp THEN DO:
         MESSAGE "Identitet "kon_idhelp.FRI1 " " kon_idhelp.FRI2 " finns redan" VIEW-AS ALERT-BOX.
         RETURN.
      END.
      raknare = raknare + 1.
   END.
   raknare = INTEGER(FILL-IN-IDNRORDID2:SCREEN-VALUE).
   FOR EACH idkon_val USE-INDEX ORD:
      FIND FIRST kon_id WHERE kon_id.NUM = idkon_val.NUM NO-LOCK NO-ERROR.
      FIND FIRST kon_val WHERE kon_val.NUM = idkon_val.NUM AND kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kon_id  THEN DO:
         CREATE kon_id.
         ASSIGN
         kon_id.NUM = kon_val.NUM
         kon_id.GRUPP = kon_val.GRUPP.
      END.
      IF AVAILABLE kon_id THEN DO:
         IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:
            ASSIGN kon_id.FRI1 = 0.
         END.
         ELSE DO:
            ASSIGN kon_id.FRI1 = INTEGER(FILL-IN-IDNRORDID:SCREEN-VALUE).
         END.
         IF kon_id.FRI1 = ? THEN kon_id.FRI1 = 0.
         ASSIGN
         kon_id.FRI2 = raknare
         idkon_val.ID2 = STRING(raknare)
         kon_val.ID2 = STRING(raknare)
         kon_val.ANDRAD = "AND"
         kon_val.ID = TRUE.   
         raknare = raknare + 1.
      END.
   END.
   RUN openbdynspec_UI IN brwproc[1].
   RUN openbdynspec_UI IN brwproc[2].
   RUN openbdynspec_UI IN brwproc[3].
   RUN openbdynspec_UI IN brwproc[4].
END PROCEDURE.
PROCEDURE vbrwordidval_UI :
   RUN selectfoc_UI (INPUT 4).
   IF AVAILABLE idkon_val THEN DO:
      FIND FIRST kon_val WHERE kon_val.NUM = idkon_val.NUM AND kon_val.SKAPNUM = idkon_val.SKAPNUM NO-LOCK NO-ERROR.
      kon_rowid = ROWID(kon_val).      
      FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP
      USE-INDEX KOD NO-LOCK NO-ERROR.
     
      IF AVAILABLE bbenamntemp THEN DO:
         RUN konlabel_UI IN huvprogh 
            (INPUT "VALORD",
             INPUT bbenamntemp.B1,
         INPUT bbenamntemp.B2,
         INPUT bbenamntemp.B3,
         INPUT bbenamntemp.B4,
         INPUT bbenamntemp.B5,
         INPUT bbenamntemp.B6,
         INPUT "",
         INPUT "",
         INPUT "",
         INPUT bbenamntemp.ID2).
      END.
   END.
END PROCEDURE.
PROCEDURE vbrwordId_UI :
   RUN selectfoc_UI (INPUT 3).
   IF AVAILABLE kon_val THEN DO:
      kon_rowid = ROWID(kon_val).      
      FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP
      USE-INDEX KOD NO-LOCK NO-ERROR.
     
      IF AVAILABLE bbenamntemp THEN DO:
         RUN konlabel_UI IN huvprogh 
            (INPUT "VALORD",
             INPUT bbenamntemp.B1,
         INPUT bbenamntemp.B2,
         INPUT bbenamntemp.B3,
         INPUT bbenamntemp.B4,
         INPUT bbenamntemp.B5,
         INPUT bbenamntemp.B6,
         INPUT "",
         INPUT "",
         INPUT "",
         INPUT bbenamntemp.ID2).
      END.
     
   END.
END PROCEDURE.
PROCEDURE btnmordnerID_UI :
   BTN_OVERID:HIDDEN = TRUE. 
   RUN uppnerID_UI (FALSE).   
END PROCEDURE.

PROCEDURE btnmorduppID_UI :
   BTN_OVERID:HIDDEN = TRUE.
   RUN uppnerID_UI (TRUE).
END PROCEDURE.

PROCEDURE btnmordner_UI :
   RUN uppner_UI (FALSE).   
END PROCEDURE.

PROCEDURE btnmordupp_UI :
   RUN uppner_UI (TRUE).
END PROCEDURE.

PROCEDURE uppnerID_UI :
   DEFINE INPUT PARAMETER uppvar AS LOGICAL NO-UNDO.
   DEFINE VARIABLE frannr AS INTEGER NO-UNDO.
   DEFINE VARIABLE tillnr AS INTEGER NO-UNDO.
   DEFINE VARIABLE till_rowid AS ROWID NO-UNDO.

   DEFINE VARIABLE starti AS INTEGER NO-UNDO.
   DEFINE VARIABLE sluti AS INTEGER NO-UNDO.
   FIND FIRST idkon_val USE-INDEX ORD NO-LOCK NO-ERROR.
   IF NOT AVAILABLE idkon_val THEN RETURN.
   starti = idkon_val.ORD.
   FIND LAST idkon_val USE-INDEX ORD NO-LOCK NO-ERROR.
   sluti = idkon_val.ORD.
   IF starti = sluti THEN RETURN.
   ASSIGN
   antal_valda = BRW_ORDIDVAL:NUM-SELECTED-ROWS
   antal_raknare = 1.
   IF antal_valda < 1 THEN RETURN.
   EMPTY TEMP-TABLE konord NO-ERROR. 
   DO WHILE antal_raknare LE antal_valda:
      RUN fselectfoc_UI (INPUT 4).
      IF AVAILABLE idkon_val THEN DO:
         CREATE konord.
         ASSIGN
         konord.ROWVAR = ROWID(idkon_val)
         konord.ORGORD = idkon_val.ORD.
         IF uppvar = TRUE THEN konord.NYORD = idkon_val.ORD - 1.  
         ELSE IF uppvar = FALSE THEN konord.NYORD = idkon_val.ORD + 1. 
      END.
      antal_raknare = antal_raknare + 1.  
   END.     
   IF uppvar = TRUE THEN DO:
      FIND FIRST idkon_val WHERE idkon_val.KSKAP = FALSE USE-INDEX ORD NO-LOCK NO-ERROR.
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      IF idkon_val.ORD >= konord.ORGORD THEN DO:
         MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
         RETURN.
      END.      
   END.
   ELSE IF uppvar = FALSE THEN DO:
      FIND LAST idkon_val WHERE idkon_val.KSKAP = FALSE USE-INDEX ORD NO-LOCK NO-ERROR.
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      IF idkon_val.ORD <= konord.ORGORD THEN DO:
         MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
         RETURN.
      END.
   END.
   FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
   antal_raknare = konord.ORGORD.
   FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
   IF konord.ORGORD - antal_raknare = antal_valda - 1 THEN.
   ELSE DO:
      MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
      RETURN.
   END.
   /*ÄNDRAR PÅ DEN SOM LIGGER NÄRMAST DE MARKERADE*/
   IF uppvar = TRUE THEN DO:
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      FIND FIRST idkon_val WHERE idkon_val.KSKAP = FALSE AND idkon_val.ORD = konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE idkon_val THEN DO:
         FIND PREV idkon_val WHERE idkon_val.KSKAP = FALSE AND idkon_val.ORD <= konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      END.
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      ASSIGN
      idkon_val.ANDRAD = "AND"
      idkon_val.ORD = konord.NYORD + 1.
   END.
   ELSE IF uppvar = FALSE THEN DO:
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      FIND FIRST idkon_val WHERE idkon_val.KSKAP = FALSE AND idkon_val.ORD = konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE idkon_val THEN DO:
         FIND NEXT idkon_val WHERE idkon_val.KSKAP = FALSE AND idkon_val.ORD >= konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      END.
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      ASSIGN
      idkon_val.ANDRAD = "AND"
      idkon_val.ORD = konord.NYORD - 1.
   END.
   /*ÄNDRAR PÅ DE MARKERADE*/
   FOR EACH konord USE-INDEX ORGORD:
      FIND FIRST idkon_val WHERE ROWID(idkon_val) = konord.ROWVAR NO-LOCK NO-ERROR.
      ASSIGN
      idkon_val.ANDRAD = "AND"
      idkon_val.ORD = konord.NYORD.   
   END.   
   RUN openbdynspec_UI IN brwproc[4].
   RUN multiselectID_UI.
   EMPTY TEMP-TABLE konord NO-ERROR. 
END PROCEDURE.

PROCEDURE uppner_UI :
   DEFINE INPUT PARAMETER uppvar AS LOGICAL NO-UNDO.
   DEFINE VARIABLE frannr AS INTEGER NO-UNDO.
   DEFINE VARIABLE tillnr AS INTEGER NO-UNDO.
   DEFINE VARIABLE till_rowid AS ROWID NO-UNDO.
   ASSIGN
   antal_valda = BRW_ORD:NUM-SELECTED-ROWS
   antal_raknare = 1.
   IF antal_valda < 1 THEN RETURN.
   EMPTY TEMP-TABLE konord NO-ERROR. 
   DO WHILE antal_raknare LE antal_valda:
      RUN fselectfoc_UI (INPUT 2).
      IF AVAILABLE kon_val THEN DO:
         CREATE konord.
         ASSIGN
         konord.ROWVAR = ROWID(kon_val)
         konord.ORGORD = kon_val.ORD.
         IF uppvar = TRUE THEN konord.NYORD = kon_val.ORD - 1.  
         ELSE IF uppvar = FALSE THEN konord.NYORD = kon_val.ORD + 1. 
      END.
      antal_raknare = antal_raknare + 1.  
   END.     
   IF uppvar = TRUE THEN DO:
      FIND FIRST kon_val WHERE kon_val.KSKAP = FALSE USE-INDEX ORD NO-LOCK NO-ERROR.
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      IF kon_val.ORD >= konord.ORGORD THEN DO:
         MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
         RETURN.
      END.      
   END.
   ELSE IF uppvar = FALSE THEN DO:
      FIND LAST kon_val WHERE kon_val.KSKAP = FALSE USE-INDEX ORD NO-LOCK NO-ERROR.
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      IF kon_val.ORD <= konord.ORGORD THEN DO:
         MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
         RETURN.
      END.
   END.
   FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
   antal_raknare = konord.ORGORD.
   FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
   IF konord.ORGORD - antal_raknare = antal_valda - 1 THEN.
   ELSE DO:
      MESSAGE "Felaktig markering!" VIEW-AS ALERT-BOX.
      RETURN.
   END.
   /*ÄNDRAR PÅ DEN SOM LIGGER NÄRMAST DE MARKERADE*/
   IF uppvar = TRUE THEN DO:
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      FIND FIRST kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.ORD = konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kon_val THEN DO:
         FIND PREV kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.ORD <= konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      END.
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      ASSIGN
      kon_val.ANDRAD = "AND"
      kon_val.ORD = konord.NYORD + 1.
   END.
   ELSE IF uppvar = FALSE THEN DO:
      FIND LAST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      FIND FIRST kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.ORD = konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kon_val THEN DO:
         FIND NEXT kon_val WHERE kon_val.KSKAP = FALSE AND kon_val.ORD >= konord.NYORD USE-INDEX ORD NO-LOCK NO-ERROR.
      END.
      FIND FIRST konord USE-INDEX ORGORD NO-LOCK NO-ERROR.
      ASSIGN
      kon_val.ANDRAD = "AND"
      kon_val.ORD = konord.NYORD - 1.
   END.
   /*ÄNDRAR PÅ DE MARKERADE*/
   FOR EACH konord USE-INDEX ORGORD:
      FIND FIRST kon_val WHERE ROWID(kon_val) = konord.ROWVAR NO-LOCK NO-ERROR.
      ASSIGN
      kon_val.ANDRAD = "AND"
      kon_val.ORD = konord.NYORD.   
   END.   
   RUN openbdynspec_UI IN brwproc[2].
   RUN multiselect_UI.
   RUN franord_UI IN btnbervalh. 
   EMPTY TEMP-TABLE konord NO-ERROR. 
END PROCEDURE.
PROCEDURE multiselectID_UI :
   DEFINE VARIABLE dynok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE rightqueh AS HANDLE NO-UNDO.
   rightqueh = BRW_ORDIDVAL:QUERY.
   BRW_ORDIDVAL:REFRESHABLE = FALSE.  /* Ingen uppdatering av browser */
   FOR EACH konord USE-INDEX ORGORD:
      dynok = rightqueh:REPOSITION-TO-ROWID(konord.ROWVAR) NO-ERROR.  /* Positionerar queryn */
      IF dynok = TRUE THEN BRW_ORDIDVAL:SELECT-FOCUSED-ROW() NO-ERROR.    /* Markerar postitionerad post */
   END.
   BRW_ORDIDVAL:REFRESHABLE = TRUE.   /* Först nu uppdateras förändringarna */
END PROCEDURE.
PROCEDURE multiselect_UI :
   DEFINE VARIABLE dynok AS LOGICAL NO-UNDO.
   DEFINE VARIABLE rightqueh AS HANDLE NO-UNDO.
   rightqueh = BRW_ORD:QUERY.
   BRW_ORD:REFRESHABLE = FALSE.  /* Ingen uppdatering av browser */
   FOR EACH konord USE-INDEX ORGORD:
      dynok = rightqueh:REPOSITION-TO-ROWID(konord.ROWVAR) NO-ERROR.  /* Positionerar queryn */
      IF dynok = TRUE THEN BRW_ORD:SELECT-FOCUSED-ROW() NO-ERROR.    /* Markerar postitionerad post */
   END.
   BRW_ORD:REFRESHABLE = TRUE.   /* Först nu uppdateras förändringarna */
END PROCEDURE.

PROCEDURE vbrword_UI :
   RUN selectfoc_UI (INPUT 2).
   IF AVAILABLE kon_val THEN DO:
      kon_rowid = ROWID(kon_val).      
      FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP
      USE-INDEX KOD NO-LOCK NO-ERROR.
     
      IF AVAILABLE bbenamntemp THEN DO:
         RUN konlabel_UI IN huvprogh 
            (INPUT "VALORD",
             INPUT bbenamntemp.B1,
         INPUT bbenamntemp.B2,
         INPUT bbenamntemp.B3,
         INPUT bbenamntemp.B4,
         INPUT bbenamntemp.B5,
         INPUT bbenamntemp.B6,
         INPUT "",
         INPUT "",
         INPUT "",
         INPUT bbenamntemp.ID2).
      END.
      RUN franord_UI IN btnbervalh.
   END.    
END PROCEDURE.

PROCEDURE radord_UI :
   ASSIGN
   BTN_MORDUPP:HIDDEN = TRUE 
   BTN_MORDNER:HIDDEN = TRUE
   BRW_ORD:HIDDEN = TRUE
   BRW_FRAN:HIDDEN = TRUE
   BTN_NER:HIDDEN = TRUE
   BTN_UPP:HIDDEN = TRUE
   CMB_VAL:HIDDEN = TRUE
   BRW_ORDID:HIDDEN = TRUE              
   BRW_ORDIDVAL:HIDDEN = TRUE           
   FILL-IN-IDNRORDID:HIDDEN = TRUE      
   FILL-IN-IDNRORDID2:HIDDEN = TRUE     
   BTN_OVERID:HIDDEN = TRUE             
   BTN_BACKID:HIDDEN = TRUE             
   BTN_MORDUPPID:HIDDEN = TRUE          
   BTN_MORDNERID:HIDDEN = TRUE          
   BTN_KOPPIDORD:HIDDEN = TRUE          
   FILL-IN-ID1ORD:HIDDEN = TRUE         
   FILL-IN-ID2ORD:HIDDEN = TRUE.  
   FILL-IN-ID2ORD:VISIBLE = FALSE.             
   CMB_VAL:LIST-ITEMS = "".
   IF RAD_ORD:SCREEN-VALUE = "1" THEN DO:
      FIND FIRST kon_id NO-ERROR.
      IF NOT AVAILABLE kon_id THEN DO:
         RAD_ORD:SCREEN-VALUE = "2".
         APPLY "VALUE-CHANGED" TO RAD_ORD.                 
      END.
      FOR EACH konstgrptemp USE-INDEX ORD NO-LOCK:
         FIND FIRST kon_id WHERE kon_id.GRUPP = konstgrptemp.KONSKOD 
         AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.
         IF AVAILABLE kon_id THEN DO:
            ASSIGN
            status-ok = CMB_VAL:ADD-LAST(konstgrptemp.BENAMNING) 
            CMB_VAL:SCREEN-VALUE = konstgrptemp.BENAMNING.   
         END.
      END.
      IF cmbspar[1] NE "" THEN CMB_VAL:SCREEN-VALUE = cmbspar[1].   
   END.
   IF RAD_ORD:SCREEN-VALUE = "3" THEN DO:
      FOR EACH konstgrptemp USE-INDEX ORD NO-LOCK:
         FIND FIRST kon_val WHERE kon_val.GRUPP = konstgrptemp.KONSKOD 
         AND kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.
         IF AVAILABLE kon_val THEN DO:
            ASSIGN
            status-ok = CMB_VAL:ADD-LAST(konstgrptemp.BENAMNING) 
            CMB_VAL:SCREEN-VALUE = konstgrptemp.BENAMNING.   
         END.
      END.
      IF cmbspar[3] NE "" THEN CMB_VAL:SCREEN-VALUE = cmbspar[3].   
   END.
   IF RAD_ORD:SCREEN-VALUE = "1" THEN DO:
      ASSIGN
      BRW_FRAN:HIDDEN = FALSE
      BTN_NER:HIDDEN = FALSE
      BTN_UPP:HIDDEN = FALSE
      CMB_VAL:HIDDEN = FALSE.
   END.
   ELSE IF RAD_ORD:SCREEN-VALUE = "2" THEN DO:
      ASSIGN
      BTN_MORDUPP:HIDDEN = FALSE 
      BTN_MORDNER:HIDDEN = FALSE
      BRW_ORD:HIDDEN = FALSE.
      RUN vbrword_UI.
   END.
   IF RAD_ORD:SCREEN-VALUE = "3" THEN DO:
      ASSIGN
      CMB_VAL:HIDDEN = FALSE
      BRW_ORDID:HIDDEN = FALSE             
      BRW_ORDIDVAL:HIDDEN = FALSE          
      FILL-IN-IDNRORDID:HIDDEN = FALSE     
      FILL-IN-IDNRORDID2:HIDDEN = FALSE    
      BTN_OVERID:HIDDEN = FALSE            
      BTN_BACKID:HIDDEN = FALSE            
      BTN_MORDUPPID:HIDDEN = FALSE         
      BTN_MORDNERID:HIDDEN = FALSE         
      BTN_KOPPIDORD:HIDDEN = FALSE         
      FILL-IN-ID1ORD:HIDDEN = FALSE        
      FILL-IN-ID2ORD:HIDDEN = FALSE.              
   END.
   IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:
      CMB_VAL:HIDDEN = TRUE.
   END.   
   APPLY "VALUE-CHANGED" TO CMB_VAL.
END PROCEDURE.
PROCEDURE cmbval_UI :
   FIND FIRST konstgrptemp WHERE konstgrptemp.BENAMNING = CMB_VAL:SCREEN-VALUE 
   NO-LOCK NO-ERROR.    
   FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = konstgrptemp.KONSKOD 
   NO-LOCK NO-ERROR.
   IF RAD_ORD:SCREEN-VALUE = "1" THEN DO:
      cmbspar[INTEGER(RAD_ORD:SCREEN-VALUE)] = CMB_VAL:SCREEN-VALUE.
      RUN konlabel_UI IN huvprogh 
      (INPUT "ORD",
       INPUT annamntemp.TAB2,
       INPUT annamntemp.TAB3,
       INPUT bbenamntemp.ID1,
       INPUT bbenamntemp.ID2,
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT ""). 
      IF Guru.Konstanter:varforetypval[32] = 0 OR Guru.Konstanter:varforetypval[32] = 3 OR Guru.Konstanter:varforetypval[32] = 5 THEN RUN setcolsortvar_UI IN brwproc[1] (INPUT " WHERE kon_id.GRUPP = '" + STRING(konstgrptemp.KONSKOD) + "' AND kon_id.ENDKOMB = FALSE ").
      ELSE RUN setcolsortvar_UI IN brwproc[1] (INPUT " WHERE  kon_id.ENDKOMB = FALSE ").
      RUN openbdynspec_UI IN brwproc[1].
      APPLY "VALUE-CHANGED" TO BRW_FRAN.   
   END.
   ELSE IF RAD_ORD:SCREEN-VALUE = "3" THEN DO:
      IF cmbspar[INTEGER(RAD_ORD:SCREEN-VALUE)] = CMB_VAL:SCREEN-VALUE THEN.
      ELSE DO:
         EMPTY TEMP-TABLE idkon_val  NO-ERROR. 
         BTN_OVERID:HIDDEN = FALSE.
      END.
      cmbspar[INTEGER(RAD_ORD:SCREEN-VALUE)] = CMB_VAL:SCREEN-VALUE.
      RUN konlabel_UI IN huvprogh 
         (INPUT "VALORD",
          INPUT bbenamntemp.B1,
      INPUT bbenamntemp.B2,
      INPUT bbenamntemp.B3,
      INPUT bbenamntemp.B4,
      INPUT bbenamntemp.B5,
      INPUT bbenamntemp.B6,
      INPUT "",
      INPUT "",
      INPUT "",
      INPUT "").
      IF Guru.Konstanter:varforetypval[32] = 0 OR Guru.Konstanter:varforetypval[32] = 3 OR Guru.Konstanter:varforetypval[32] = 5 THEN RUN setcolsortvar_UI IN brwproc[3] (INPUT " WHERE kon_val.GRUPP = '" + STRING(konstgrptemp.KONSKOD) + "' AND kon_val.KSKAP = FALSE ").
      ELSE RUN setcolsortvar_UI IN brwproc[3] (INPUT " WHERE  kon_val.KSKAP = FALSE ").
      RUN openbdynspec_UI IN brwproc[3].
      RUN openbdynspec_UI IN brwproc[4].
      RUN id_UI.
   END.
END PROCEDURE.

PROCEDURE id_UI :
   RUN getfirst_UI IN brwproc[INTEGER(RAD_ORD:SCREEN-VALUE)].
   RUN selectfoc_UI (INPUT 3).
   FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP NO-LOCK NO-ERROR.   
   IF bbenamntemp.ID1 = "" THEN DO:
      FILL-IN-IDNRORDID:SCREEN-VALUE = ?.
      ASSIGN         
      FILL-IN-IDNRORDID:HIDDEN = TRUE
      FILL-IN-ID1ORD:HIDDEN  = TRUE.  
   END.  
   ELSE DO:   
      FILL-IN-ID1ORD:SCREEN-VALUE = bbenamntemp.ID1.
      ASSIGN         
      FILL-IN-IDNRORDID:HIDDEN = FALSE
      FILL-IN-ID1ORD:HIDDEN  = FALSE.        
   END.   
   IF bbenamntemp.ID2 = "" THEN DO:  
      FILL-IN-IDNRORDID2:SCREEN-VALUE = ?.
      ASSIGN         
      FILL-IN-IDNRORDID2:HIDDEN = TRUE
      FILL-IN-ID2ORD:HIDDEN = TRUE.  
   END.                
   ELSE DO:   
      FILL-IN-ID2ORD:SCREEN-VALUE = bbenamntemp.ID2.
      ASSIGN         
      FILL-IN-IDNRORDID2:HIDDEN = FALSE
      FILL-IN-ID2ORD:HIDDEN  = FALSE.              
   END.          
END PROCEDURE.


PROCEDURE btnupp_UI :
   musz = FALSE.
   APPLY "VALUE-CHANGED" TO BRW_FRAN.
   ASSIGN
   forvar = kon_id.FORNR 
   linvar = kon_id.LINNR
   natvar = kon_id.NATNR
   gruppvar = kon_id.GRUPP
   numvar = kon_id.FRI1
   numvar2 = kon_id.FRI2. 
   IF numvar2 = 1 THEN DO:
      MESSAGE "Konstruktion är den första!" VIEW-AS ALERT-BOX.
      RETURN NO-APPLY.
   END.
   FIND FIRST annamntemp NO-LOCK NO-ERROR.
   FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = gruppvar NO-LOCK NO-ERROR.
   MESSAGE "Är det korrekt att konstruktion med " + annamntemp.TAB1 + ":" + forvar + " " +
   annamntemp.TAB2 + ":" + linvar + " " + annamntemp.TAB3 + ":" + natvar + " " +
   bbenamntemp.ID1 + ":" + STRING(numvar) + " " + bbenamntemp.ID2 + ":" + STRING(numvar2) + 
   " och efterföljande konstruktioner ska minskas med 1 i fältet för " + bbenamntemp.ID2 + "?"
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Ändring av identifikation" UPDATE svar AS LOGICAL.         
   IF svar THEN DO:
      musz = TRUE.
   END.
   ELSE DO: 
      musz = FALSE.
   END.         
   
   IF musz = TRUE THEN DO: 
      musz = FALSE.              
      IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:      
         FIND FIRST kon_id WHERE  
         kon_id.FRI2 = (numvar2 - 1) AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.
      END.
      ELSE DO:
         FIND FIRST kon_id WHERE kon_id.GRUPP = gruppvar AND kon_id.FORNR = forvar AND
         kon_id.LINNR = linvar AND kon_id.NATNR = natvar AND kon_id.FRI1 = numvar AND 
         kon_id.FRI2 = (numvar2 - 1) AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.
      END.   
      IF AVAILABLE kon_id THEN DO:
         MESSAGE "Det är ej möjligt att ändra identitet för konstruktionen då " + 
         bbenamntemp.ID2 + ":" + STRING(numvar2 - 1) + " redan finns." 
         VIEW-AS ALERT-BOX TITLE "Meddelande".
      END.
      ELSE DO:
         EMPTY TEMP-TABLE id_temp NO-ERROR.           
         IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:
            FOR EACH kon_id WHERE  
            kon_id.FRI2 >= numvar2 AND kon_id.ENDKOMB = FALSE:
               FIND FIRST id_temp WHERE id_temp.ROWVAR = ROWID(kon_id) USE-INDEX ROWVAR 
               NO-LOCK NO-ERROR.
               IF AVAILABLE id_temp THEN DO:
                  musz = musz.
               END.
               ELSE DO:   
                  ASSIGN
                  kon_id.FRI2 = kon_id.FRI2 - 1.
                  FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND 
                  kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.                  
                  ASSIGN
                  kon_val.ANDRAD = "AND"
                  kon_val.ID2 = STRING(kon_id.FRI2).
                  CREATE id_temp.
                  id_temp.ROWVAR = ROWID(kon_id).
               END.   
            END.
            FIND FIRST kon_id WHERE ROWID(kon_id) = selrowvar NO-LOCK NO-ERROR.
            IF AVAILABLE kon_id THEN DO:
               RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(kon_id)).
               RUN lastselectdyn_UI IN brwproc[1]. 
            END.         
         END.
         ELSE DO:              
            FOR EACH kon_id WHERE kon_id.GRUPP = gruppvar AND kon_id.FORNR = forvar AND
            kon_id.LINNR = linvar AND kon_id.NATNR = natvar AND kon_id.FRI1 = numvar AND 
            kon_id.FRI2 >= numvar2 AND kon_id.ENDKOMB = FALSE:
               FIND FIRST id_temp WHERE id_temp.ROWVAR = ROWID(kon_id) USE-INDEX ROWVAR NO-LOCK NO-ERROR.
               IF AVAILABLE id_temp THEN DO:
                  musz = musz.
               END.
               ELSE DO:   
                  ASSIGN
                  kon_id.FRI2 = kon_id.FRI2 - 1.
                  FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND 
                  kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.                  
                  ASSIGN
                  kon_val.ANDRAD = "AND"
                  kon_val.ID2 = STRING(kon_id.FRI2).
                  CREATE id_temp.
                  id_temp.ROWVAR = ROWID(kon_id).
               END.   
            END.
            FIND FIRST kon_id WHERE ROWID(kon_id) = selrowvar NO-LOCK NO-ERROR.
            IF AVAILABLE kon_id THEN DO:
               RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(kon_id)).
               RUN lastselectdyn_UI IN brwproc[1]. 
            END.         
         END.   
      END.   
   END.         
END PROCEDURE.
PROCEDURE btnner_UI :
   musz = FALSE.
   APPLY "VALUE-CHANGED" TO BRW_FRAN.
   ASSIGN
   forvar = kon_id.FORNR 
   linvar = kon_id.LINNR
   natvar = kon_id.NATNR
   gruppvar = kon_id.GRUPP
   numvar = kon_id.FRI1
   numvar2 = kon_id.FRI2. 
   FIND FIRST annamntemp NO-LOCK NO-ERROR.
   FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = gruppvar NO-LOCK NO-ERROR.  
   MESSAGE "Är det korrekt att markerad konstruktion  och efterföljande konstruktioner ska ökas med 1 i fältet för " + bbenamntemp.ID2 + "?"
   VIEW-AS ALERT-BOX
   QUESTION BUTTONS YES-NO TITLE "Ändring av identifikation" UPDATE svar AS LOGICAL.          
   IF svar THEN DO:
      musz = TRUE.
   END.
   ELSE DO: 
      musz = FALSE.
   END.         
   IF musz = TRUE THEN DO: 
      musz = FALSE.      
      EMPTY TEMP-TABLE id_temp NO-ERROR.                         
      IF Guru.Konstanter:varforetypval[32] = 1 OR Guru.Konstanter:varforetypval[32] = 2 OR Guru.Konstanter:varforetypval[32] = 4 THEN DO:  
         FOR EACH kon_id WHERE  
         kon_id.FRI2 >= numvar2 AND kon_id.ENDKOMB = FALSE:
            FIND FIRST id_temp WHERE id_temp.ROWVAR = ROWID(kon_id) USE-INDEX ROWVAR NO-LOCK NO-ERROR.
            IF AVAILABLE id_temp THEN DO:
               musz = musz.
            END.
            ELSE DO:            
               ASSIGN
               kon_id.FRI2 = kon_id.FRI2 + 1.
               FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND 
               kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.               
               ASSIGN
               kon_val.ANDRAD = "AND"
               kon_val.ID2 = STRING(kon_id.FRI2).
               CREATE id_temp.
               id_temp.ROWVAR = ROWID(kon_id).
            END.   
         END.     
         FIND FIRST kon_id WHERE ROWID(kon_id) = selrowvar NO-LOCK NO-ERROR.
         IF AVAILABLE kon_id THEN DO:
            RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(kon_id)).
            RUN lastselectdyn_UI IN brwproc[1]. 
         END.         
      END.
      ELSE DO:               
         FOR EACH kon_id WHERE kon_id.GRUPP = gruppvar AND kon_id.FORNR = forvar AND
         kon_id.LINNR = linvar AND kon_id.NATNR = natvar AND kon_id.FRI1 = numvar AND 
         kon_id.FRI2 >= numvar2 AND kon_id.ENDKOMB = FALSE:
            FIND FIRST id_temp WHERE id_temp.ROWVAR = ROWID(kon_id) USE-INDEX ROWVAR NO-LOCK NO-ERROR.
            IF AVAILABLE id_temp THEN DO:
               musz = musz.
            END.
            ELSE DO:            
               ASSIGN
               kon_id.FRI2 = kon_id.FRI2 + 1.
               FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND 
               kon_val.KSKAP = FALSE NO-LOCK NO-ERROR.               
               ASSIGN
               kon_val.ANDRAD = "AND"
               kon_val.ID2 = STRING(kon_id.FRI2).
               CREATE id_temp.
               id_temp.ROWVAR = ROWID(kon_id).
            END.   
         END. 
         FIND FIRST kon_id WHERE ROWID(kon_id) = selrowvar NO-LOCK NO-ERROR.
         IF AVAILABLE kon_id THEN DO:
            RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(kon_id)).
            RUN lastselectdyn_UI IN brwproc[1]. 
         END.         
      END.         
   END.         
END PROCEDURE.
PROCEDURE vbrwfran_UI :
   {muswait.i}                                  
   RUN selectfoc_UI (INPUT 1).
   selrowvar = ROWID(kon_id).
   {musarrow.i}   
END PROCEDURE.
PROCEDURE brwfran_UI :
   /*
   RUN selectfoc_UI (INPUT 1).
   FIND FIRST kon_val WHERE kon_val.NUM = kon_id.NUM AND
   kon_val.KSKAP = FALSE USE-INDEX NUM NO-LOCK NO-ERROR.
   {muswait.i}      
   {AVBGOM2.I}
   RUN BERINFOU2.W (INPUT ROWID(kon_val)).  
   {AVBFRAM2.I}
   {musarrow.i}
   */
END PROCEDURE.
PROCEDURE main_UI :
   {muswait.i}
   {ALLSTARTDYN.I} 
   CMB_VAL:LIST-ITEMS = "".
   EMPTY TEMP-TABLE idkon_val NO-ERROR. 
   RUN openbdynspec_UI IN brwproc[4].
   FOR EACH konstgrptemp USE-INDEX ORD NO-LOCK:
      FIND FIRST kon_id WHERE kon_id.GRUPP = konstgrptemp.KONSKOD 
      AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.
      IF AVAILABLE kon_id THEN DO:
         ASSIGN
         status-ok = CMB_VAL:ADD-LAST(konstgrptemp.BENAMNING) 
         CMB_VAL:SCREEN-VALUE = konstgrptemp.BENAMNING.   
      END.
   END.   

   IF CMB_VAL:SCREEN-VALUE = ? THEN DO:
      RAD_ORD:SCREEN-VALUE = "2".      
   END.
   FIND kon_val WHERE ROWID(kon_val) = kon_rowid NO-LOCK NO-ERROR.
   FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP
   USE-INDEX KOD NO-LOCK NO-ERROR.
   IF AVAILABLE bbenamntemp THEN DO:
      RUN konlabel_UI IN huvprogh 
         (INPUT "VALORD",
          INPUT bbenamntemp.B1,
      INPUT bbenamntemp.B2,
      INPUT bbenamntemp.B3,
      INPUT bbenamntemp.B4,
      INPUT bbenamntemp.B5,
      INPUT bbenamntemp.B6,
      INPUT "",
      INPUT "",
      INPUT "",
      INPUT "").
   END.
   FIND FIRST annamntemp NO-LOCK NO-ERROR.
   FIND kon_val WHERE ROWID(kon_val) = kon_rowid NO-LOCK NO-ERROR.
   IF AVAILABLE kon_val THEN DO:
      FIND FIRST konstgrptemp WHERE konstgrptemp.KONSKOD = kon_val.GRUPP NO-ERROR.                       
   END.
   IF AVAILABLE konstgrptemp THEN CMB_VAL:SCREEN-VALUE = konstgrptemp.BENAMNING.
   ELSE FIND FIRST konstgrptemp WHERE konstgrptemp.BENAMNING = CMB_VAL:SCREEN-VALUE NO-LOCK NO-ERROR.
   IF AVAILABLE konstgrptemp THEN DO:
      FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = konstgrptemp.KONSKOD NO-LOCK NO-ERROR.
   END.
   ELSE DO:
      FIND FIRST bbenamntemp WHERE bbenamntemp.KONSKOD = kon_val.GRUPP NO-LOCK NO-ERROR.
   END.
   IF AVAILABLE bbenamntemp THEN DO:
      RUN konlabel_UI IN huvprogh 
      (INPUT "ORD",
       INPUT annamntemp.TAB2,
       INPUT annamntemp.TAB3,
       INPUT bbenamntemp.ID1,
       INPUT bbenamntemp.ID2,
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT "",
       INPUT "").                                
   END.
   FIND FIRST konstgrptemp WHERE konstgrptemp.BENAMNING = CMB_VAL:SCREEN-VALUE NO-LOCK NO-ERROR.        
   IF NOT AVAILABLE konstgrptemp THEN DO:
      FIND FIRST konstgrptemp WHERE konstgrptemp.KONSKOD = kon_val.GRUPP NO-LOCK NO-ERROR. 
   END.
   IF Guru.Konstanter:varforetypval[32] = 0 OR Guru.Konstanter:varforetypval[32] = 3 OR Guru.Konstanter:varforetypval[32] = 5 THEN DO:
      RUN setcolsortvar_UI IN brwproc[1] (INPUT " WHERE kon_id.GRUPP = '" + STRING(konstgrptemp.KONSKOD) + "' AND kon_id.ENDKOMB = FALSE ").
      RUN openbdynspec_UI IN brwproc[1].
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM AND kon_id.GRUPP = konstgrptemp.KONSKOD AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.      
   END.
   ELSE DO:
      CMB_VAL:HIDDEN = TRUE.
      RUN setcolsortvar_UI IN brwproc[1] (INPUT " WHERE kon_id.ENDKOMB = FALSE ").
      RUN openbdynspec_UI IN brwproc[1].
      FIND FIRST kon_id WHERE kon_id.NUM = kon_val.NUM AND kon_id.ENDKOMB = FALSE NO-LOCK NO-ERROR.
   END.       
   IF AVAILABLE kon_id THEN DO:
      RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(kon_id)).
      RUN lastselectdyn_UI IN brwproc[1]. 
   END.
   RUN setlastrowid_UI IN brwproc[2] (INPUT kon_rowid).
   RUN openbdynspec_UI IN brwproc[2].
   RUN lastselectdyn_UI IN brwproc[2]. 
   RUN radord_UI.
   {musarrow.i}
END PROCEDURE.
PROCEDURE allstartbrw_UI :
  DEFINE VARIABLE sortvar AS CHARACTER NO-UNDO.
   IF NOT VALID-HANDLE(brwproc[1]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[1] (INPUT BRW_FRAN).
   IF NOT VALID-HANDLE(brwproc[2]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[2] (INPUT BRW_ORD).
   IF NOT VALID-HANDLE(brwproc[3]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[3] (INPUT BRW_ORDID).
   IF NOT VALID-HANDLE(brwproc[4]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[4] (INPUT BRW_ORDIDVAL).
   IF NOT VALID-HANDLE(brwproc[5]) THEN DO:
      RUN DYNARROW.P PERSISTENT SET brwproc[5] (INPUT BRW_ORDID,INPUT BRW_ORDIDVAL,
                                                     INPUT BTN_OVERID, INPUT ?,
                                                     INPUT ?, INPUT BTN_BACKID).
      RUN dynprogextra IN brwproc[5]  (INPUT "rdwkomp_UI",INPUT THIS-PROCEDURE).
      RUN rowcompextrakor IN  brwproc[5] (INPUT TRUE).
   END.
   RUN setcolindex_UI IN brwproc[1] (INPUT "LINNR BY NATNR BY FRI1 BY FRI2").
   RUN brwsetupstop_UI IN brwproc[1] (INPUT 1).   
   RUN brwsetupstop_UI IN brwproc[3] (INPUT 1).    
   RUN brwsetupstop_UI IN brwproc[4] (INPUT 1).      
   sortvar = " WHERE KSKAP = FALSE ".
   RUN setcolsortvar_UI IN brwproc[2] (INPUT sortvar).
   RUN setshiftcol_UI IN brwproc[2] (INPUT FALSE).
   RUN brwsetupstop_UI IN brwproc[2] (INPUT 1).   
   RUN setcolindex_UI IN brwproc[2] (INPUT "ORD"). 
   RUN setcolindex_UI IN brwproc[3] (INPUT "ORD"). 
   RUN setcolindex_UI IN brwproc[4] (INPUT "ORD"). 
END PROCEDURE.

PROCEDURE rdwkomp_UI :
   DEFINE INPUT PARAMETER brwh AS HANDLE NO-UNDO.
   IF brwh:NAME = "BRW_ORDIDVAL" THEN DO:
      
   END.
   musz = FALSE.
END PROCEDURE.
          
PROCEDURE pselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   IF NOT VALID-HANDLE(kon_idh) THEN  kon_idh = TEMP-TABLE kon_id:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(kon_valh) THEN  kon_valh = TEMP-TABLE kon_val:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(idkon_valh) THEN  idkon_valh = TEMP-TABLE idkon_val:DEFAULT-BUFFER-HANDLE.
   RUN pselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST kon_id WHERE ROWID(kon_id) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 3 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 4 THEN FIND FIRST idkon_val WHERE ROWID(idkon_val) = brwrowid NO-LOCK NO-ERROR.  
END PROCEDURE.
PROCEDURE nselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   IF NOT VALID-HANDLE(kon_idh) THEN  kon_idh = TEMP-TABLE kon_id:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(kon_valh) THEN  kon_valh = TEMP-TABLE kon_val:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(idkon_valh) THEN  idkon_valh = TEMP-TABLE idkon_val:DEFAULT-BUFFER-HANDLE.
   RUN nselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST kon_id WHERE ROWID(kon_id) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 3 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 4 THEN FIND FIRST idkon_val WHERE ROWID(idkon_val) = brwrowid NO-LOCK NO-ERROR.  
END PROCEDURE.

PROCEDURE selectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.   
   IF NOT VALID-HANDLE(kon_idh) THEN  kon_idh = TEMP-TABLE kon_id:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(kon_valh) THEN  kon_valh = TEMP-TABLE kon_val:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(idkon_valh) THEN  idkon_valh = TEMP-TABLE idkon_val:DEFAULT-BUFFER-HANDLE.
   RUN selectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST kon_id WHERE ROWID(kon_id) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 3 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 4 THEN FIND FIRST idkon_val WHERE ROWID(idkon_val) = brwrowid NO-LOCK NO-ERROR.  
END PROCEDURE.
PROCEDURE fselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   IF NOT VALID-HANDLE(kon_idh) THEN  kon_idh = TEMP-TABLE kon_id:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(kon_valh) THEN  kon_valh = TEMP-TABLE kon_val:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(idkon_valh) THEN  idkon_valh = TEMP-TABLE idkon_val:DEFAULT-BUFFER-HANDLE.
   RUN fetrowid_UI IN brwproc[brwvald] (INPUT antal_raknare,OUTPUT brwrowid).
   IF brwvald = 1 THEN FIND FIRST kon_id WHERE ROWID(kon_id) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.   
   IF brwvald = 3 THEN FIND FIRST kon_val WHERE ROWID(kon_val) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 4 THEN FIND FIRST idkon_val WHERE ROWID(idkon_val) = brwrowid NO-LOCK NO-ERROR.  
END PROCEDURE.
PROCEDURE borthand_UI :
   kon_idh:EMPTY-TEMP-TABLE() NO-ERROR.   
   IF VALID-HANDLE(kon_idh) THEN   DELETE OBJECT kon_idh  NO-ERROR.
   IF VALID-HANDLE(kon_valh) THEN   DELETE OBJECT kon_valh  NO-ERROR.
   IF VALID-HANDLE(idkon_valh) THEN   DELETE OBJECT idkon_valh  NO-ERROR.
   ASSIGN
   kon_idh  = ?     
   kon_valh  = ?     
   idkon_valh  = ?.     
   {BORTBRWPROC.I}      
END PROCEDURE.
