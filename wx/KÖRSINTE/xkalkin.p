/*xkalkin.p*/
DEFINE TEMP-TABLE tabnamn NO-UNDO
   FIELD NAMN AS CHARACTER
   FIELD DUMPNAMN AS CHARACTER
   INDEX NAMN IS PRIMARY NAMN.

DEFINE TEMP-TABLE k2 NO-UNDO
      FIELD OMRADE LIKE KALKYL.OMRADE
      FIELD RECKALKYL AS INTEGER 
      FIELD BEFATTNING LIKE KALKYL.BEFATTNING 
      FIELD PRIS LIKE KALKYL.PRIS 
      FIELD TIMMAR LIKE KALKYL.TIMMAR 
      FIELD OT50 LIKE KALKYL.OT50 
      FIELD OT75 LIKE KALKYL.OT75 
      FIELD OT100 LIKE KALKYL.OT100 
      FIELD PERSMASK LIKE KALKYL.PERSMASK 
      FIELD TYP LIKE KALKYL.TYP
      FIELD RADNR LIKE KALKYL.RADNR. 
DEFINE VARIABLE qh AS HANDLE NO-UNDO.
DEFINE VARIABLE bh AS HANDLE NO-UNDO.
DEFINE VARIABLE falth AS HANDLE NO-UNDO.
DEFINE VARIABLE falt2h AS HANDLE NO-UNDO.
DEFINE VARIABLE tabvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE kollh  AS HANDLE NO-UNDO.
DEFINE VARIABLE kollqh AS HANDLE NO-UNDO.
DEFINE VARIABLE kommando AS CHARACTER NO-UNDO.
DEFINE VARIABLE uservar AS CHARACTER NO-UNDO.
uservar = USERID.
IF uservar NE {setuser.I} THEN DO:
   SETUSERID({setuser.I},{setpwd.I}).
END.
{AMERICANEUROPEAN.I}
SESSION:NUMERIC-FORMAT = "AMERICAN".
tabvar = "_File".
kommando = "FOR EACH " + tabvar + " WHERE " + tabvar + "._FROZEN = FALSE NO-LOCK".
CREATE BUFFER bh FOR TABLE tabvar.
CREATE QUERY qh.
qh:SET-BUFFERS(bh).
qh:QUERY-PREPARE(kommando).   
qh:QUERY-OPEN().
qh:GET-FIRST(NO-LOCK).
DO WHILE bh:AVAILABLE:
   falth = bh:BUFFER-FIELD("_FILE-NAME").
   falt2h = bh:BUFFER-FIELD("_Dump-name").
   CREATE tabnamn.
   ASSIGN
   tabnamn.DUMPNAMN = SESSION:TEMP-DIR + falt2h:BUFFER-VALUE + ".d".
   tabnamn.NAMN = falth:BUFFER-VALUE.
   qh:GET-NEXT(NO-LOCK).        
END.
RUN kalkin_UI.
{EUROPEANAMERICAN.I}
PROCEDURE kalkin_UI :
   FIND FIRST tabnamn WHERE tabnamn.NAMN = "KALKYL" NO-LOCK NO-ERROR.
   INPUT FROM VALUE(tabnamn.DUMPNAMN) NO-ECHO.
   REPEAT:
      CREATE k2.
      ASSIGN.
      IMPORT k2 NO-ERROR.
   END.
   INPUT CLOSE.
   FOR EACH k2 WHERE k2.RECKALKYL = 0 OR k2.RECKALKYL = ?:
      DELETE k2.
   END.
   FOR EACH k2:
      CREATE KALKYL.
      BUFFER-COPY k2 EXCEPT RECKALKYL TO KALKYL . 
      KALKYL.RECKALKYL = k2.RECKALKYL.
   END.
END PROCEDURE.
