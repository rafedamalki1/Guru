/*STORSUM.P SUMMERING AV STÖRNING*/
DEFINE VARIABLE timmar100 AS DECIMAL NO-UNDO.
DEFINE VARIABLE timmar60 AS DECIMAL FORMAT ">9.999" NO-UNDO.

DEFINE TEMP-TABLE avd_temp
   FIELD AVDELNINGNR LIKE STORDISTRIKT.AVDELNINGNR   
   FIELD NAMN LIKE STORDISTRIKT.NAMN
   INDEX AVD IS PRIMARY AVDELNINGNR.

DEFINE INPUT PARAMETER TABLE FOR avd_temp.
DEFINE INPUT PARAMETER valfore AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER distvar LIKE STORDISTRIKT.DISTRIKTID NO-UNDO.   
DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER period AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER uttyp AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER vallista AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER alla AS LOGICAL NO-UNDO.
DEFINE OUTPUT PARAMETER driftant AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER planant AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER hspant AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER lspant AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER totavbrott AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER totbortfall AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER bortbelast AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER totkunder AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER treminuter AS LOGICAL NO-UNDO.

FUNCTION klockan100 RETURNS DECIMAL
  (INPUT ber60 AS DECIMAL) :
  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600. 
END FUNCTION.

FUNCTION klockan60 RETURNS DECIMAL
  (INPUT ber100 AS DECIMAL) :
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60.
END FUNCTION.

   {muswait.i}
   ASSIGN
   driftant = 0
   planant = 0
   hspant = 0
   lspant = 0
   totavbrott = 0
   totbortfall = 0
   bortbelast = 0
   totkunder = 0.
   IF valfore = TRUE THEN DO:
      FOR EACH avd_temp USE-INDEX AVD:
         OPEN QUERY dq FOR EACH STORDISTRIKT WHERE 
         STORDISTRIKT.AVDELNINGNR = avd_temp.AVDELNINGNR AND 
         STORDISTRIKT.ARTAL = YEAR(bdatum) USE-INDEX AVDARTAL NO-LOCK.
         GET FIRST dq NO-LOCK.
         DO WHILE AVAILABLE(STORDISTRIKT):
            distvar = STORDISTRIKT.DISTRIKTID.
            RUN distrikt_UI.
            GET NEXT dq NO-LOCK.
         END.
         CLOSE QUERY dq.
      END.         
   END.
   ELSE DO:
      IF alla = TRUE THEN DO:
         IF uttyp = 3 THEN DO:
            IF period = 1 THEN DO:
               OPEN QUERY sq FOR EACH STORNINGSTAB WHERE YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum)
               USE-INDEX DATUM NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.HDATUM >= bdatum AND
               STORNINGSTAB.HDATUM <= avdatum USE-INDEX DATUM NO-LOCK.
            END.
         END.
         ELSE DO:
            IF period = 1 THEN DO:
               OPEN QUERY sq FOR EACH STORNINGSTAB WHERE YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND 
               STORNINGSTAB.STORTYPID = uttyp USE-INDEX DATUM NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.HDATUM >= bdatum AND
               STORNINGSTAB.HDATUM <= avdatum AND 
               STORNINGSTAB.STORTYPID = uttyp USE-INDEX DATUM NO-LOCK.
            END.
         END.      
         GET FIRST sq NO-LOCK.
         DO WHILE AVAILABLE(STORNINGSTAB):
            IF STORNINGSTAB.AVBROTTSTID > 0 THEN DO:
               RUN summa_UI.         
            END.
            GET NEXT sq NO-LOCK.
         END.
         CLOSE QUERY sq.
         OPEN QUERY kq FOR EACH KUNDSTOR WHERE 
         KUNDSTOR.ARTAL = YEAR(bdatum) USE-INDEX DISTRIKT NO-LOCK.
         GET FIRST kq NO-LOCK.
         DO WHILE AVAILABLE(KUNDSTOR):      
            ASSIGN      
            totkunder = totkunder + KUNDSTOR.ANTALKUNDER.
            GET NEXT kq NO-LOCK.
         END.
         CLOSE QUERY kq.
      END.
      ELSE DO:
         RUN distrikt_UI.         
      END.
   END.

PROCEDURE distrikt_UI:
   IF uttyp = 3 THEN DO:
      IF period = 1 THEN DO:
         OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
         YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) USE-INDEX DATUM NO-LOCK.
      END.
      ELSE DO:
         OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
         STORNINGSTAB.HDATUM >= bdatum AND
         STORNINGSTAB.HDATUM <= avdatum USE-INDEX DATUM NO-LOCK.
      END.
   END.
   ELSE DO:
      IF period = 1 THEN DO:
         OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
         YEAR(STORNINGSTAB.HDATUM) = YEAR(bdatum) AND STORNINGSTAB.STORTYPID = uttyp
         USE-INDEX DATUM NO-LOCK.
      END.
      ELSE DO:
         OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = distvar AND
         STORNINGSTAB.HDATUM >= bdatum AND
         STORNINGSTAB.HDATUM <= avdatum AND STORNINGSTAB.STORTYPID = uttyp
         USE-INDEX DATUM NO-LOCK.
      END.
   END.     
   GET FIRST sq NO-LOCK.
   DO WHILE AVAILABLE(STORNINGSTAB):          
      IF STORNINGSTAB.AVBROTTSTID > 0 THEN DO:
         RUN summa_UI.
      END.
      GET NEXT sq NO-LOCK.
   END.
   CLOSE QUERY sq. 

   OPEN QUERY kq FOR EACH KUNDSTOR WHERE KUNDSTOR.DISTRIKTID = distvar AND
   KUNDSTOR.ARTAL = YEAR(bdatum) USE-INDEX DISTRIKT NO-LOCK.
   GET FIRST kq NO-LOCK.
   DO WHILE AVAILABLE(KUNDSTOR):      
      ASSIGN      
      totkunder = totkunder + KUNDSTOR.ANTALKUNDER.
      GET NEXT kq NO-LOCK.
   END.
   CLOSE QUERY kq.
END PROCEDURE.

PROCEDURE summa_UI:
   IF treminuter = TRUE THEN DO:
      FIND LAST BORTKOPPLAD WHERE BORTKOPPLAD.STORNUMMERID = STORNINGSTAB.STORNUMMERID
      USE-INDEX AVBROTT NO-LOCK NO-ERROR.
      IF AVAILABLE BORTKOPPLAD THEN DO:
         RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT BORTKOPPLAD.ATERDATUM, INPUT STORNINGSTAB.HKLOCKAN,
         INPUT BORTKOPPLAD.ATERKLOCKAN, OUTPUT timmar100, OUTPUT timmar60).
      END.
      ELSE DO:
         RUN TIDBER.P (INPUT STORNINGSTAB.HDATUM, INPUT STORNINGSTAB.DATUM100%, INPUT STORNINGSTAB.HKLOCKAN,
         INPUT STORNINGSTAB.KLOCKAN100%, OUTPUT timmar100, OUTPUT timmar60).
      END.     
      /*
      IF STRING(timmar60,"9999.99") > "0000.03" THEN DO:   
      */
      IF timmar60 > 0000.03 THEN DO:   
         IF STORNINGSTAB.STORTYPID = 1 THEN driftant = driftant + 1.
         ELSE planant = planant + 1.
         ASSIGN
         lspant = lspant + STORNINGSTAB.ANTALLSP
         hspant = hspant + STORNINGSTAB.ANTALHSP
         totavbrott = totavbrott + STORNINGSTAB.AVBROTTSTID
         bortbelast = bortbelast + STORNINGSTAB.BORTMW + (STORNINGSTAB.BORTKW / 1000)      
         totbortfall = totbortfall + STORNINGSTAB.BORTFALL.
      END.
   END.
   ELSE DO:
      IF STORNINGSTAB.STORTYPID = 1 THEN driftant = driftant + 1.
      ELSE planant = planant + 1.
      ASSIGN
      lspant = lspant + STORNINGSTAB.ANTALLSP
      hspant = hspant + STORNINGSTAB.ANTALHSP
      totavbrott = totavbrott + STORNINGSTAB.AVBROTTSTID
      bortbelast = bortbelast + STORNINGSTAB.BORTMW + (STORNINGSTAB.BORTKW / 1000)      
      totbortfall = totbortfall + STORNINGSTAB.BORTFALL.
   END.   
END PROCEDURE.
