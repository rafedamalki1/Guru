/*IMPBERKALKSKAP.P*/
DEFINE INPUT  PARAMETER classerkollin AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER valbernr AS  CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER valomrade AS CHARACTER  NO-UNDO.
{KALKKAT20G.I}
DEFINE VARIABLE forsta AS LOGICAL NO-UNDO.
DEFINE VARIABLE valnum AS INTEGER NO-UNDO.
{STARTFORAPPC.I}
   /*Anders Olsson Elpool i Umeå AB  19 jan 2018 16:14:10*/
 
DEFINE BUFFER bvalbuff FOR BERVAL.

RUN ladda_UI.
/*HUVUDPROGRAM*/   
forsta = TRUE.

FIND FIRST BERVAL WHERE BERVAL.AONR = valbernr AND
BERVAL.OMRADE = valomrade AND BERVAL.KSKAP = FALSE NO-LOCK NO-ERROR.

REPEAT:
   IF AVAILABLE BERVAL THEN DO:
      valnum = BERVAL.NUM. 
      FIND FIRST BERKALK WHERE BERKALK.AONR = valbernr AND
      BERKALK.OMRADE = valomrade AND BERKALK.NUM = valnum NO-LOCK NO-ERROR.
      IF AVAILABLE BERKALK THEN DO:
      END.
      ELSE DO:
         FOR EACH bvalbuff WHERE bvalbuff.AONR = valbernr AND
            bvalbuff.OMRADE = valomrade  AND bvalbuff.NUM = valnum:
            RUN val_UI.
         END.
      END.
   END.   
   ELSE LEAVE.
   FIND NEXT BERVAL WHERE BERVAL.AONR = valbernr AND BERVAL.OMRADE = valomrade AND BERVAL.NUM = valnum AND 
   BERVAL.KSKAP = FALSE NO-LOCK NO-ERROR.  
END.
   
/*SLUT HUVUDPROGRAM*/   
                                       
PROCEDURE val_UI.
/*Anders Olsson Elpool i Umeå AB  18 feb 2014 11:01:39 
Hämtar koder från uplägget 
*/
   IF forsta = TRUE THEN DO:      
      /*HÄMTA KODER SOM LIGGER DIREKT PÅ KONSTRUKTIONEN ENDAST EN GÅNG*/
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F1 = "" AND KALKBER.F2 = " " AND KALKBER.F3 = " " AND
      KALKBER.F4 = " " AND KALKBER.F5 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.
      forsta = FALSE.      
   END.      
   IF bvalbuff.F2 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F1 = bvalbuff.F2 AND KALKBER.F2 = " " AND KALKBER.F3 = " " AND
      KALKBER.F4 = " " AND KALKBER.F5 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.     
   IF bvalbuff.F3 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F2 = bvalbuff.F3 AND KALKBER.F1 = " " AND KALKBER.F3 = " " AND
      KALKBER.F4 = " " AND KALKBER.F5 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF bvalbuff.F4 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F3 = bvalbuff.F4 AND KALKBER.F1 = " " AND KALKBER.F2 = " " AND
      KALKBER.F4 = " " AND KALKBER.F5 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF bvalbuff.F5 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F4 = bvalbuff.F5 AND KALKBER.F1 = " " AND KALKBER.F2 = " " AND
      KALKBER.F3 = " " AND KALKBER.F5 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF bvalbuff.F6 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH KALKBER WHERE KALKBER.KTYPKOD = bvalbuff.KTYPKOD AND
      KALKBER.F5 = bvalbuff.F6 AND KALKBER.F1 = " " AND KALKBER.F2 = " " AND
      KALKBER.F3 = " " AND KALKBER.F4 = " " USE-INDEX AR NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(KALKBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.     
END PROCEDURE.  
   
PROCEDURE ladda_UI :
   DEFINE VARIABLE katnrartal AS INTEGER NO-UNDO.
   /*Anders Olsson Elpool i Umeå AB  18 feb 2014 14:19:18 
   Behövs inte! 
   */
   /*kalkår*/
   IF katnrartal = katnrartal THEN RETURN.
   katnrartal = INTEGER(STRING(TODAY,"99999999")).
    
      
      FIND LAST EBRPRIS USE-INDEX AR NO-LOCK NO-ERROR.
      IF AVAILABLE EBRPRIS THEN hjkatvar[1] = EBRPRIS.ARTAL.
      ELSE  hjkatvar[1] = YEAR(TODAY). 
    
END PROCEDURE.

PROCEDURE skapa_UI : 
    
   
   DO TRANSACTION:
      
      FIND FIRST BERKALK WHERE BERKALK.AONR = valbernr  AND BERKALK.OMRADE = valomrade AND   
      BERKALK.NUM = bvalbuff.NUM AND BERKALK.ARBKOD = KALKBER.ARBKOD AND BERKALK.LOPNR = KALKBER.LOPNR
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE BERKALK THEN DO:
         CREATE BERKALK.
         ASSIGN 
         BERKALK.AONR = valbernr 
         BERKALK.OMRADE = valomrade
         BERKALK.NUM = bvalbuff.NUM
         BERKALK.ARBKOD = KALKBER.ARBKOD
         BERKALK.LOPNR = KALKBER.LOPNR      
         BERKALK.BENAMNING = KALKBER.BENAMNING
         BERKALK.ENHET = KALKBER.ENHET      
         BERKALK.ANTAL = KALKBER.ANTAL.
      END.
      ELSE DO:
         BERKALK.ANTAL = BERKALK.ANTAL + KALKBER.ANTAL.
      END.    
   END.    
END PROCEDURE.      


