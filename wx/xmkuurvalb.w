/*
               KSV Editor
    Copyright: (C) 2000-2003 Serguey Klimoff (bulkl0DD)
     Filename: XMKUURVALB.W
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2009.02.24 14:33 ELPAO   
     Modified: 
*/


&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v9r12 GUI
&ANALYZE-RESUME
/* Connected Databases 
          temp-db          PROGRESS
*/
&Scoped-define WINDOW-NAME C-Win

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS C-Win 
/*------------------------------------------------------------------------

  File: 

  Description: 

  Input Parameters:
      <none>

  Output Parameters:
      <none>

  Author: 

  Created: 

------------------------------------------------------------------------*/
/*          This .W file was created with the Progress AppBuilder.      */
/*----------------------------------------------------------------------*/

/* Create an unnamed pool to store all the widgets created 
     by this procedure. This is a good default which assures
     that this procedure's triggers and internal procedures 
     will execute in this procedure's storage, and that proper
     cleanup will occur on deletion of the procedure. */

CREATE WIDGET-POOL.

/* ***************************  Definitions  ************************** */

/* Parameters Definitions ---                                           */

/* Local Variable Definitions ---                                       */


{AVDTEMP.I}
{ALLDEF.I}
{GLOBVAR2DEL1.I}
{HOPPSEK2W.I}
{BESTKUNDALLT.I}
&Scoped-define NEW 
{FAKTTYPDEF.I}

{BRWSOK.I}
{OMRTEMPW.I}
/*/*{EGENBEN.I}*/*/
{ANSPROJBER.I}
{SOKDEF.I}
{ARBATE.I}
{AVTPLANTEMP.I}
{JURPERST.I}

{LEVERANT.I}

{EXECLIN.I}
 
&Scoped-define SHARED SHARED
{DIRDEF.I}
   
&Scoped-define NEW

   
/*DEFINE SHARED VARIABLE Guru.SharedVariable:btnupph AS HANDLE NO-UNDO.*/
DEFINE VARIABLE hamtapp AS HANDLE NO-UNDO.
DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE aonrrec AS RECID NO-UNDO.
DEFINE SHARED VARIABLE skrivut AS LOGICAL NO-UNDO. 
DEFINE SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE SHARED VARIABLE bdatum AS DATE NO-UNDO.
DEFINE SHARED VARIABLE avdatum AS DATE NO-UNDO.
DEFINE SHARED VARIABLE valar AS INTEGER NO-UNDO. 
DEFINE SHARED VARIABLE valmanad AS INTEGER NO-UNDO. 
DEFINE SHARED VARIABLE valdelnrlog AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE aonummer AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE delnummer AS INTEGER NO-UNDO.
DEFINE SHARED VARIABLE  visvalvar AS INTEGER NO-UNDO.   /* 1= progres vis 2 = excel 3 = IE 4 = pdf*/
DEFINE VARIABLE ttbuffcopyh AS HANDLE NO-UNDO.
DEFINE VARIABLE tillbakaaonr AS CHARACTER NO-UNDO. 
DEFINE VARIABLE tillbakadelnr AS INTEGER NO-UNDO.
DEFINE VARIABLE valdarec AS RECID NO-UNDO.
DEFINE VARIABLE my1hand AS WIDGET-HANDL NO-UNDO.
DEFINE VARIABLE uppar AS INTEGER NO-UNDO.
DEFINE VARIABLE aosok AS CHARACTER FORMAT "X(8)" NO-UNDO. 
DEFINE VARIABLE ortssok AS CHARACTER NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO. 
DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
DEFINE VARIABLE kuurvalapph AS HANDLE NO-UNDO.
DEFINE VARIABLE projvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE bortvar AS LOGICAL NO-UNDO.
DEFINE VARIABLE excellista AS INTEGER NO-UNDO.
DEFINE VARIABLE val1 AS LOGICAL.
DEFINE VARIABLE aonrapph AS HANDLE NO-UNDO.
DEFINE VARIABLE nyttaoapph2 AS HANDLE NO-UNDO.                      /*NYTTAOAPP.P*/
DEFINE VARIABLE jid AS CHARACTER NO-UNDO.
DEFINE VARIABLE vallista AS INTEGER NO-UNDO.
DEFINE VARIABLE nettoh AS HANDLE NO-UNDO.
DEFINE TEMP-TABLE tidut
   FIELD UT AS CHARACTER FORMAT "X(132)".

DEFINE TEMP-TABLE delNRaonr NO-UNDO
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER 
   INDEX AONR IS PRIMARY AONR DELNR.
{VISUPPTMP.I}

DEFINE SHARED TEMP-TABLE aoval NO-UNDO
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD AONRREC AS RECID
   INDEX AONR IS PRIMARY AONR DELNR. 



/*DEFINE INPUT-OUTPUT PARAMETER vallista AS INTEGER NO-UNDO.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR uppvaltemp.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR bestkundallt.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR omrtemp.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR avdtemp.*/

   /*
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR evaldaao.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR uvaldaao.
*/

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Window
&Scoped-define DB-AWARE no

/* Name of first Frame and/or Browse and/or first Query                 */
&Scoped-define FRAME-NAME DEFAULT-FRAME
&Scoped-define BROWSE-NAME BRW_AONR

/* Internal Tables (found by Frame, Query & Browse Queries)             */
&Scoped-define INTERNAL-TABLES uvaldaao evaldaao

/* Definitions for BROWSE BRW_AONR                                      */
&Scoped-define FIELDS-IN-QUERY-BRW_AONR uvaldaao.OMRADE uvaldaao.AONR ~
uvaldaao.DELNR uvaldaao.ORT 
&Scoped-define ENABLED-FIELDS-IN-QUERY-BRW_AONR 
&Scoped-define QUERY-STRING-BRW_AONR FOR EACH uvaldaao NO-LOCK ~
    BY uvaldaao.OMRADE ~
       BY uvaldaao.AONR ~
        BY uvaldaao.DELNR
&Scoped-define OPEN-QUERY-BRW_AONR OPEN QUERY BRW_AONR FOR EACH uvaldaao NO-LOCK ~
    BY uvaldaao.OMRADE ~
       BY uvaldaao.AONR ~
        BY uvaldaao.DELNR.
&Scoped-define TABLES-IN-QUERY-BRW_AONR uvaldaao
&Scoped-define FIRST-TABLE-IN-QUERY-BRW_AONR uvaldaao


/* Definitions for BROWSE BRW_VAONR                                     */
&Scoped-define FIELDS-IN-QUERY-BRW_VAONR evaldaao.AONR evaldaao.DELNR ~
evaldaao.ORT 
&Scoped-define ENABLED-FIELDS-IN-QUERY-BRW_VAONR 
&Scoped-define QUERY-STRING-BRW_VAONR FOR EACH evaldaao NO-LOCK
&Scoped-define OPEN-QUERY-BRW_VAONR OPEN QUERY BRW_VAONR FOR EACH evaldaao NO-LOCK.
&Scoped-define TABLES-IN-QUERY-BRW_VAONR evaldaao
&Scoped-define FIRST-TABLE-IN-QUERY-BRW_VAONR evaldaao


/* Definitions for FRAME DEFAULT-FRAME                                  */
&Scoped-define OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME ~
    ~{&OPEN-QUERY-BRW_AONR}~
    ~{&OPEN-QUERY-BRW_VAONR}

/* Standard List Definitions                                            */
&Scoped-Define ENABLED-OBJECTS RECT-49 RECT-SOK IMAGE-1 CMB_ARTAL BTN_NVE ~
BTN_NVE-2 RAD_PERIOD FILL-IN-STARTDAT FILL-IN-STOPPDAT BTN_FVE BTN_FVE-2 ~
BTN_NVE-3 BTN_NVE-4 FILL-IN-AVSTARTD FILL-IN-AVSLUTD TOG_PAGA TOG_AVSLUTADE ~
BTN_FVE-3 BTN_FVE-4 TOG_TILLF TOG_FASTA FBTN_VISA CMB_PROJ CMB_JURP FBTN_EX ~
CMB_AVD CMB_BERE BTN_AOF CMB_ANSV CMB_OMR CMB_BESORG CMB_FAK BTN_HAOF ~
TOGGLE-LEV CMB_LEV BTN_HAMT BRW_AONR BRW_VAONR BTN_ALLOVER BTN_OVER ~
BTN_BACK BTN_ALLBACK FILL-IN_SAONR FILL-IN_ORT FILL-IN_EAONR FILL-IN_DELNR ~
BTN_AVB 
&Scoped-Define DISPLAYED-OBJECTS CMB_ARTAL RAD_PERIOD FILL-IN-STARTDAT ~
FILL-IN-STOPPDAT FILL-IN-MELL FILL-IN-AVSTARTD FILL-IN-OCH FILL-IN-AVSLUTD ~
TOG_PAGA TOG_AVSLUTADE TOG_TILLF TOG_FASTA CMB_PROJ CMB_JURP CMB_AVD ~
CMB_BERE CMB_ANSV CMB_OMR CMB_BESORG CMB_FAK TOGGLE-LEV CMB_LEV ~
FILL-IN_SAONR FILL-IN_ORT FILL-IN_EAONR FILL-IN_DELNR FILL-IN-AOTEXT ~
FILL-IN-VAL 

/* Custom List Definitions                                              */
/* List-1,List-2,List-3,List-4,List-5,List-6                            */

/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* ***********************  Control Definitions  ********************** */

/* Define the widget handle for the window                              */
DEFINE VAR C-Win AS WIDGET-HANDLE NO-UNDO.

/* Definitions of the field level widgets                               */
DEFINE BUTTON BTN_ALLBACK 
     IMAGE-UP FILE "BILDER\rewind-u":U
     LABEL "Alla aonr i listan":L 
     SIZE 4 BY 1.21 TOOLTIP "Alla valda aonr tas bort"
     FONT 11.

DEFINE BUTTON BTN_ALLOVER 
     IMAGE-UP FILE "BILDER\forwrd-u":U
     LABEL "Alla aonr i listan":L 
     SIZE 4 BY 1.21 TOOLTIP "Alla aonr väljs"
     FONT 11.

DEFINE BUTTON BTN_AOF 
     LABEL "spara favorit" 
     SIZE 14 BY 1.

DEFINE BUTTON BTN_AVB AUTO-END-KEY 
     LABEL "Avsluta":L 
     SIZE 14 BY 1.

DEFINE BUTTON BTN_BACK 
     IMAGE-UP FILE "BILDER\prev-u":U
     LABEL "":L 
     SIZE 4 BY 1.21 TOOLTIP "Markerade tas bort".

DEFINE BUTTON BTN_EXTRA 
     LABEL "Enstaka aonr" 
     SIZE 6.88 BY 1 TOOLTIP "Tryck här för välja enstaka aonr."
     FONT 11.

DEFINE BUTTON BTN_FVE 
     LABEL "-" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_FVE-2 
     LABEL "-" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_FVE-3 
     LABEL "-" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_FVE-4 
     LABEL "-" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_HAMT 
     LABEL "Hämta och visa urval" 
     SIZE 22 BY 1.

DEFINE BUTTON BTN_HAOF 
     LABEL "HÄMTA favorit" 
     SIZE 14 BY 1.

DEFINE BUTTON BTN_NVE 
     LABEL "+" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_NVE-2 
     LABEL "+" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_NVE-3 
     LABEL "+" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_NVE-4 
     LABEL "+" 
     SIZE 2.5 BY .75.

DEFINE BUTTON BTN_OVER 
     IMAGE-UP FILE "BILDER\next-u":U
     LABEL "":L 
     SIZE 4 BY 1.21 TOOLTIP "Markerade väljs".

DEFINE BUTTON FBTN_EX 
     LABEL "Visa i excel" 
     SIZE 14 BY 1.

DEFINE BUTTON FBTN_VISA 
     LABEL "Visa" 
     SIZE 14 BY 1.

DEFINE VARIABLE CMB_ANSV AS CHARACTER FORMAT "X(256)":U 
     LABEL "Arbetsansvarig" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_ARBART AS CHARACTER FORMAT "X(256)":U 
     LABEL "Arbetsart" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_ARTAL AS INTEGER FORMAT "9999":U INITIAL 0 
     LABEL "Årtal" 
     VIEW-AS COMBO-BOX INNER-LINES 7
     LIST-ITEMS "0" 
     DROP-DOWN-LIST
     SIZE 12.25 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_AVD AS CHARACTER FORMAT "X(256)":U INITIAL ? 
     LABEL "Avdelning" 
     VIEW-AS COMBO-BOX INNER-LINES 15
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_BERE AS CHARACTER FORMAT "X(256)":U 
     LABEL "Beredare" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_BESORG AS CHARACTER FORMAT "X(256)":U 
     LABEL "Best./Kund" 
     VIEW-AS COMBO-BOX INNER-LINES 15
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_FAK AS CHARACTER FORMAT "X(256)":U 
     LABEL "Fakturakat." 
     VIEW-AS COMBO-BOX INNER-LINES 6
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_JURP AS CHARACTER FORMAT "X(256)":U INITIAL ? 
     LABEL "Juridisp" 
     VIEW-AS COMBO-BOX INNER-LINES 15
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_LEV AS CHARACTER FORMAT "X(256)":U 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 24.5 BY .96 NO-UNDO.

DEFINE VARIABLE CMB_OMR AS CHARACTER FORMAT "X(256)":U INITIAL ? 
     LABEL "Område" 
     VIEW-AS COMBO-BOX INNER-LINES 15
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE CMB_PROJ AS CHARACTER FORMAT "X(256)":U 
     LABEL "Projektör" 
     VIEW-AS COMBO-BOX INNER-LINES 5
     DROP-DOWN-LIST
     SIZE 23 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-AOTEXT AS CHARACTER FORMAT "X(256)":U INITIAL "Gör urval :" 
      VIEW-AS TEXT 
     SIZE 22.5 BY .83
     FGCOLOR 2 FONT 17 NO-UNDO.

DEFINE VARIABLE FILL-IN-AR AS INTEGER FORMAT "9999":U INITIAL ? 
     VIEW-AS FILL-IN 
     SIZE 9 BY .92 NO-UNDO.

DEFINE VARIABLE FILL-IN-AVSLUTD AS DATE FORMAT "99/99/99":U 
     VIEW-AS FILL-IN 
     SIZE 9 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-AVSTARTD AS DATE FORMAT "99/99/99":U 
     VIEW-AS FILL-IN 
     SIZE 9 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-MELL AS CHARACTER FORMAT "X(6)":U 
     VIEW-AS FILL-IN 
     SIZE 7 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-OCH AS CHARACTER FORMAT "X(3)":U 
     VIEW-AS FILL-IN 
     SIZE 4 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-STARTDAT AS DATE FORMAT "99/99/99":U 
     LABEL "Från" 
     VIEW-AS FILL-IN 
     SIZE 9 BY .92 NO-UNDO.

DEFINE VARIABLE FILL-IN-STOPPDAT AS DATE FORMAT "99/99/99":U 
     LABEL "Till" 
     VIEW-AS FILL-IN 
     SIZE 9 BY 1 NO-UNDO.

DEFINE VARIABLE FILL-IN-VAL AS CHARACTER FORMAT "X(256)":U INITIAL "Hämta aonr:" 
      VIEW-AS TEXT 
     SIZE 9.75 BY .67 NO-UNDO.

DEFINE VARIABLE FILL-IN_DELNR AS INTEGER FORMAT ">99" INITIAL 0 
     VIEW-AS FILL-IN 
     SIZE 4 BY .83
     FGCOLOR 2 .

DEFINE VARIABLE FILL-IN_EAONR AS CHARACTER FORMAT "X(6)" 
     LABEL "Aonr" 
     VIEW-AS FILL-IN 
     SIZE 7 BY .83
     FGCOLOR 2 .

DEFINE VARIABLE FILL-IN_ORT AS CHARACTER FORMAT "x(40)" 
     LABEL "Ort/Benämning" 
     VIEW-AS FILL-IN 
     SIZE 11.88 BY .83 NO-UNDO.

DEFINE VARIABLE FILL-IN_SAONR AS CHARACTER FORMAT "X(6)" 
     LABEL "Aonr" 
     VIEW-AS FILL-IN 
     SIZE 8 BY .83
     FGCOLOR 2  NO-UNDO.

DEFINE IMAGE IMAGE-1
     FILENAME "BILDER\sokpa.gif":U CONVERT-3D-COLORS
     SIZE 8 BY .83.

DEFINE {&NEW} SHARED VARIABLE RAD_PERIOD AS INTEGER 
     VIEW-AS RADIO-SET HORIZONTAL
     RADIO-BUTTONS 
          "Visa allt", 3,
"Visning per år", 1,
"Visning per period", 2
     SIZE 55.5 BY 1 TOOLTIP "Vising av kostnader och intäkter." NO-UNDO.

DEFINE RECTANGLE RECT-49
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 53.5 BY 1.21
     BGCOLOR 8 .

DEFINE RECTANGLE RECT-SOK
     EDGE-PIXELS 2 GRAPHIC-EDGE  NO-FILL 
     SIZE 49.5 BY 1.21
     BGCOLOR 8 .

DEFINE VARIABLE TOGGLE-LEV AS LOGICAL INITIAL no 
     LABEL "Alla leverantörer" 
     VIEW-AS TOGGLE-BOX
     SIZE 19.5 BY .79 NO-UNDO.

DEFINE VARIABLE TOG_AVSLUTADE AS LOGICAL INITIAL no 
     LABEL "Avslutade" 
     VIEW-AS TOGGLE-BOX
     SIZE 19 BY .88 TOOLTIP "Utsökningen ska gälla avslutade mellan angivna datum." NO-UNDO.

DEFINE VARIABLE TOG_FASTA AS LOGICAL INITIAL no 
     LABEL "Fasta" 
     VIEW-AS TOGGLE-BOX
     SIZE 13.13 BY .83 NO-UNDO.

DEFINE VARIABLE TOG_PAGA AS LOGICAL INITIAL no 
     LABEL "Pågående" 
     VIEW-AS TOGGLE-BOX
     SIZE 15.13 BY .88 TOOLTIP "Utsökningen ska gälla pågående." NO-UNDO.

DEFINE VARIABLE TOG_TILLF AS LOGICAL INITIAL no 
     LABEL "Tillfälliga" 
     VIEW-AS TOGGLE-BOX
     SIZE 15.63 BY .83 NO-UNDO.

/* Query definitions                                                    */
&ANALYZE-SUSPEND
DEFINE QUERY BRW_AONR FOR 
      uvaldaao SCROLLING.

DEFINE QUERY BRW_VAONR FOR 
      evaldaao SCROLLING.
&ANALYZE-RESUME

/* Browse definitions                                                   */
DEFINE BROWSE BRW_AONR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS BRW_AONR C-Win _STRUCTURED
  QUERY BRW_AONR NO-LOCK DISPLAY
      uvaldaao.OMRADE COLUMN-LABEL "Område" FORMAT "x(6)":U
      uvaldaao.AONR COLUMN-LABEL "Aonr" FORMAT "X(6)":U
      uvaldaao.DELNR COLUMN-LABEL "Delnr" FORMAT ">99":U
      uvaldaao.ORT COLUMN-LABEL "Ort/Benämning" FORMAT "x(40)":U
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-ROW-MARKERS NO-COLUMN-SCROLLING MULTIPLE SIZE 49.5 BY 11.54
         FONT 4
         TITLE "Urvalsresultat".

DEFINE BROWSE BRW_VAONR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _DISPLAY-FIELDS BRW_VAONR C-Win _STRUCTURED
  QUERY BRW_VAONR NO-LOCK DISPLAY
      evaldaao.AONR COLUMN-LABEL "Aonr" FORMAT "X(6)":U
      evaldaao.DELNR COLUMN-LABEL "Delnr" FORMAT ">99":U
      evaldaao.ORT COLUMN-LABEL "Ort/Benämning" FORMAT "x(40)":U
/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME
    WITH NO-ROW-MARKERS NO-COLUMN-SCROLLING MULTIPLE SIZE 53.5 BY 11.54
         FONT 4
         TITLE "Arbeta vidare med".


/* ************************  Frame Definitions  *********************** */

DEFINE FRAME DEFAULT-FRAME
     CMB_ARTAL AT ROW 2.5 COL 65.38
     BTN_NVE AT ROW 3.63 COL 73.25
     BTN_NVE-2 AT ROW 3.63 COL 92.75
     RAD_PERIOD AT ROW 3.83 COL 2 NO-LABEL
     FILL-IN-STARTDAT AT ROW 3.83 COL 61.25 COLON-ALIGNED
     FILL-IN-STOPPDAT AT ROW 3.83 COL 80.75 COLON-ALIGNED
     BTN_FVE AT ROW 4.46 COL 73.25
     BTN_FVE-2 AT ROW 4.46 COL 92.75
     BTN_NVE-3 AT ROW 6.38 COL 73.25
     BTN_NVE-4 AT ROW 6.38 COL 92.75
     FILL-IN-MELL AT ROW 6.67 COL 52.63 COLON-ALIGNED NO-LABEL
     FILL-IN-AVSTARTD AT ROW 6.67 COL 61.25 COLON-ALIGNED NO-LABEL
     FILL-IN-OCH AT ROW 6.67 COL 75.25 COLON-ALIGNED NO-LABEL
     FILL-IN-AVSLUTD AT ROW 6.67 COL 80.75 COLON-ALIGNED NO-LABEL
     TOG_PAGA AT ROW 6.79 COL 2
     TOG_AVSLUTADE AT ROW 6.79 COL 22.13
     BTN_FVE-3 AT ROW 7.25 COL 73.25
     BTN_FVE-4 AT ROW 7.25 COL 92.75
     TOG_TILLF AT ROW 8.21 COL 2
     TOG_FASTA AT ROW 8.21 COL 22.13
     FBTN_VISA AT ROW 8.5 COL 111
     CMB_PROJ AT ROW 9.17 COL 53.25 COLON-ALIGNED
     CMB_JURP AT ROW 9.21 COL 5.75
     FBTN_EX AT ROW 9.33 COL 111
     CMB_AVD AT ROW 10.29 COL 4.75
     CMB_BERE AT ROW 10.29 COL 53.25 COLON-ALIGNED
     BTN_AOF AT ROW 10.42 COL 111
     CMB_ANSV AT ROW 11.33 COL 53.25 COLON-ALIGNED
     CMB_OMR AT ROW 11.38 COL 7.75
     CMB_BESORG AT ROW 12.42 COL 13.75 COLON-ALIGNED
     CMB_ARBART AT ROW 12.42 COL 53.25 COLON-ALIGNED
     CMB_FAK AT ROW 13.5 COL 53.25 COLON-ALIGNED
     BTN_HAOF AT ROW 13.5 COL 111
     TOGGLE-LEV AT ROW 14 COL 86.5
     CMB_LEV AT ROW 15 COL 85 NO-LABEL
     BTN_HAMT AT ROW 15.04 COL 15
     BTN_EXTRA AT ROW 15.54 COL 113.5
     BRW_AONR AT ROW 16.29 COL 1.5
     BRW_VAONR AT ROW 16.29 COL 56
     BTN_ALLOVER AT ROW 18.58 COL 51.25
     FILL-IN-AR AT ROW 18.79 COL 109.5 COLON-ALIGNED NO-LABEL
     BTN_OVER AT ROW 20.75 COL 51.25
     BTN_BACK AT ROW 23 COL 51.25
     BTN_ALLBACK AT ROW 25.17 COL 51.25
     FILL-IN_SAONR AT ROW 28.08 COL 12.38 COLON-ALIGNED
     FILL-IN_ORT AT ROW 28.08 COL 36.13 COLON-ALIGNED
     FILL-IN_EAONR AT ROW 28.08 COL 72.88 COLON-ALIGNED
     FILL-IN_DELNR AT ROW 28.08 COL 85.38 COLON-ALIGNED NO-LABEL
     BTN_AVB AT ROW 28.21 COL 111
     FILL-IN-AOTEXT AT ROW 1.25 COL 2.25 NO-LABEL
     FILL-IN-VAL AT ROW 28.17 COL 54.38 COLON-ALIGNED NO-LABEL
     RECT-49 AT ROW 27.96 COL 56
     RECT-SOK AT ROW 27.96 COL 1.5
     IMAGE-1 AT ROW 28.17 COL 1.63
    WITH 1 DOWN NO-BOX KEEP-TAB-ORDER OVERLAY 
         SIDE-LABELS NO-UNDERLINE THREE-D 
         AT COL 1 ROW 1
         SIZE 124.88 BY 28.42.


/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Window
   Allow: Basic,Browse,DB-Fields,Window,Query
   Temp-Tables and Buffers:
      TABLE: evaldaao T "?" NO-UNDO temp-db evaldaao
      TABLE: uvaldaao T "?" NO-UNDO temp-db uvaldaao
      TABLE: valdaao T "?" NO-UNDO temp-db valdaao
   END-TABLES.
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
IF SESSION:DISPLAY-TYPE = "GUI":U THEN
  CREATE WINDOW C-Win ASSIGN
         HIDDEN             = YES
         TITLE              = "<insert window title>"
         HEIGHT             = 28.42
         WIDTH              = 125
         MAX-HEIGHT         = 28.42
         MAX-WIDTH          = 125
         VIRTUAL-HEIGHT     = 28.42
         VIRTUAL-WIDTH      = 125
         RESIZE             = yes
         SCROLL-BARS        = no
         STATUS-AREA        = no
         BGCOLOR            = ?
         FGCOLOR            = ?
         KEEP-FRAME-Z-ORDER = yes
         THREE-D            = yes
         MESSAGE-AREA       = no
         SENSITIVE          = yes.
ELSE {&WINDOW-NAME} = CURRENT-WINDOW.
/* END WINDOW DEFINITION                                                */
&ANALYZE-RESUME



/* ***********  Runtime Attributes and AppBuilder Settings  *********** */

&ANALYZE-SUSPEND _RUN-TIME-ATTRIBUTES
/* SETTINGS FOR WINDOW C-Win
  NOT-VISIBLE,,RUN-PERSISTENT                                           */
/* SETTINGS FOR FRAME DEFAULT-FRAME
                                                                        */
/* BROWSE-TAB BRW_AONR BTN_EXTRA DEFAULT-FRAME */
/* BROWSE-TAB BRW_VAONR BRW_AONR DEFAULT-FRAME */
ASSIGN 
       BRW_AONR:MAX-DATA-GUESS IN FRAME DEFAULT-FRAME         = 1000
       BRW_AONR:ALLOW-COLUMN-SEARCHING IN FRAME DEFAULT-FRAME = TRUE.

ASSIGN 
       BRW_VAONR:MAX-DATA-GUESS IN FRAME DEFAULT-FRAME         = 10000
       BRW_VAONR:ALLOW-COLUMN-SEARCHING IN FRAME DEFAULT-FRAME = TRUE.

/* SETTINGS FOR BUTTON BTN_EXTRA IN FRAME DEFAULT-FRAME
   NO-ENABLE                                                            */
ASSIGN 
       BTN_EXTRA:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_FVE:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_FVE-2:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_FVE-3:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_FVE-4:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_NVE:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_NVE-2:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_NVE-3:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       BTN_NVE-4:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* SETTINGS FOR COMBO-BOX CMB_ARBART IN FRAME DEFAULT-FRAME
   NO-DISPLAY NO-ENABLE                                                 */
ASSIGN 
       CMB_ARBART:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* SETTINGS FOR COMBO-BOX CMB_ARTAL IN FRAME DEFAULT-FRAME
   ALIGN-L                                                              */
/* SETTINGS FOR COMBO-BOX CMB_AVD IN FRAME DEFAULT-FRAME
   ALIGN-L                                                              */
/* SETTINGS FOR COMBO-BOX CMB_JURP IN FRAME DEFAULT-FRAME
   ALIGN-L                                                              */
/* SETTINGS FOR COMBO-BOX CMB_LEV IN FRAME DEFAULT-FRAME
   ALIGN-L                                                              */
/* SETTINGS FOR COMBO-BOX CMB_OMR IN FRAME DEFAULT-FRAME
   ALIGN-L                                                              */
/* SETTINGS FOR FILL-IN FILL-IN-AOTEXT IN FRAME DEFAULT-FRAME
   NO-ENABLE ALIGN-L                                                    */
/* SETTINGS FOR FILL-IN FILL-IN-AR IN FRAME DEFAULT-FRAME
   NO-DISPLAY NO-ENABLE                                                 */
ASSIGN 
       FILL-IN-AR:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       FILL-IN-AVSLUTD:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       FILL-IN-AVSTARTD:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* SETTINGS FOR FILL-IN FILL-IN-MELL IN FRAME DEFAULT-FRAME
   NO-ENABLE                                                            */
ASSIGN 
       FILL-IN-MELL:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* SETTINGS FOR FILL-IN FILL-IN-OCH IN FRAME DEFAULT-FRAME
   NO-ENABLE                                                            */
ASSIGN 
       FILL-IN-OCH:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       FILL-IN-STARTDAT:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

ASSIGN 
       FILL-IN-STOPPDAT:HIDDEN IN FRAME DEFAULT-FRAME           = TRUE.

/* SETTINGS FOR FILL-IN FILL-IN-VAL IN FRAME DEFAULT-FRAME
   NO-ENABLE                                                            */
/* SETTINGS FOR RADIO-SET RAD_PERIOD IN FRAME DEFAULT-FRAME
   SHARED                                                               */
IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
THEN C-Win:HIDDEN = yes.

/* _RUN-TIME-ATTRIBUTES-END */
&ANALYZE-RESUME


/* Setting information for Queries and Browse Widgets fields            */

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE BRW_AONR
/* Query rebuild information for BROWSE BRW_AONR
     _TblList          = "Temp-Tables.uvaldaao"
     _Options          = "NO-LOCK"
     _OrdList          = "Temp-Tables.uvaldaao.OMRADE|yes,Temp-Tables.uvaldaao.AONR|yes,Temp-Tables.uvaldaao.DELNR|yes"
     _FldNameList[1]   > Temp-Tables.uvaldaao.OMRADE
"uvaldaao.OMRADE" "Område" ? "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[2]   > Temp-Tables.uvaldaao.AONR
"uvaldaao.AONR" "Aonr" ? "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[3]   > Temp-Tables.uvaldaao.DELNR
"uvaldaao.DELNR" "Delnr" ">99" "integer" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[4]   > Temp-Tables.uvaldaao.ORT
"uvaldaao.ORT" "Ort/Benämning" ? "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _Query            is OPENED
*/  /* BROWSE BRW_AONR */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _QUERY-BLOCK BROWSE BRW_VAONR
/* Query rebuild information for BROWSE BRW_VAONR
     _TblList          = "Temp-Tables.evaldaao"
     _Options          = "NO-LOCK"
     _FldNameList[1]   > Temp-Tables.evaldaao.AONR
"evaldaao.AONR" "Aonr" ? "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[2]   > Temp-Tables.evaldaao.DELNR
"evaldaao.DELNR" "Delnr" ">99" "integer" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _FldNameList[3]   > Temp-Tables.evaldaao.ORT
"evaldaao.ORT" "Ort/Benämning" ? "character" ? ? ? ? ? ? no ? no no ? yes no no "U" "" ""
     _Query            is OPENED
*/  /* BROWSE BRW_VAONR */
&ANALYZE-RESUME

 



/* ************************  Control Triggers  ************************ */

&Scoped-define SELF-NAME C-Win
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON END-ERROR OF C-Win /* <insert window title> */
OR ENDKEY OF {&WINDOW-NAME} ANYWHERE DO:
  /* This case occurs when the user presses the "Esc" key.
     In a persistently run window, just ignore this.  If we did not, the
     application would exit. */
   APPLY "CLOSE":U TO THIS-PROCEDURE.
  IF THIS-PROCEDURE:PERSISTENT THEN RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL C-Win C-Win
ON WINDOW-CLOSE OF C-Win /* <insert window title> */
DO:
  /* This event will close the window and terminate the procedure.  */
  APPLY "CLOSE":U TO THIS-PROCEDURE.
  RETURN NO-APPLY.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME BRW_VAONR
&Scoped-define SELF-NAME BRW_VAONR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BRW_VAONR C-Win
ON VALUE-CHANGED OF BRW_VAONR IN FRAME DEFAULT-FRAME /* Arbeta vidare med */
DO:
    /*ccc*/
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_AOF
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_AOF C-Win
ON CHOOSE OF BTN_AOF IN FRAME DEFAULT-FRAME /* spara favorit */
DO:
   RUN sparaaofavoriter_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_AVB
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_AVB C-Win
ON CHOOSE OF BTN_AVB IN FRAME DEFAULT-FRAME /* Avsluta */
DO:
   /*
   MESSAGE "Vill du spara dina valda " LC(Guru.Konstanter:gaok) " för snabbare åtkomst ?"
      VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE val AS LOGICAL.
   IF val = TRUE THEN DO:
      RUN sparaaofavoriter_UI.      
   END.        
   RUN sparao_UI IN Guru.SharedVariable:btnupph (INPUT TABLE evaldaao).
   */
   /*RUN sparao_UI IN Guru.SharedVariable:btnupph (INPUT TABLE evaldaao).*/
   APPLY "CLOSE":U TO THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_EXTRA
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_EXTRA C-Win
ON CHOOSE OF BTN_EXTRA IN FRAME DEFAULT-FRAME /* Enstaka aonr */
DO:
   {muswait.i}
   RUN btnextra_UI.
   
   {musarrow.i} 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_FVE
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_FVE C-Win
ON CHOOSE OF BTN_FVE IN FRAME DEFAULT-FRAME /* - */
DO: 
   ASSIGN
   FILL-IN-STARTDAT = INPUT FILL-IN-STARTDAT.   
   FILL-IN-STARTDAT = FILL-IN-STARTDAT - 1.      
   DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.     
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_FVE-2
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_FVE-2 C-Win
ON CHOOSE OF BTN_FVE-2 IN FRAME DEFAULT-FRAME /* - */
DO: 
   ASSIGN
   FILL-IN-STOPPDAT = INPUT FILL-IN-STOPPDAT.   
   FILL-IN-STOPPDAT = FILL-IN-STOPPDAT - 1.      
   DISPLAY FILL-IN-STOPPDAT WITH FRAME {&FRAME-NAME}.     
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_FVE-3
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_FVE-3 C-Win
ON CHOOSE OF BTN_FVE-3 IN FRAME DEFAULT-FRAME /* - */
DO: 
   ASSIGN
   FILL-IN-AVSTARTD = INPUT FILL-IN-AVSTARTD.   
   FILL-IN-AVSTARTD = FILL-IN-AVSTARTD - 1.      
   DISPLAY FILL-IN-AVSTARTD WITH FRAME {&FRAME-NAME}.        
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_FVE-4
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_FVE-4 C-Win
ON CHOOSE OF BTN_FVE-4 IN FRAME DEFAULT-FRAME /* - */
DO: 
   ASSIGN
   FILL-IN-AVSLUTD = INPUT FILL-IN-AVSLUTD.   
   FILL-IN-AVSLUTD = FILL-IN-AVSLUTD - 1.      
   DISPLAY FILL-IN-AVSLUTD WITH FRAME {&FRAME-NAME}.        
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_HAMT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_HAMT C-Win
ON CHOOSE OF BTN_HAMT IN FRAME DEFAULT-FRAME /* Hämta och visa urval */
DO:   
   RUN utvald_UI. 
   EMPTY TEMP-TABLE valsoktemp NO-ERROR.      
   CREATE valsoktemp.    
   ASSIGN
   valsoktemp.SOKCHAR[1] = CMB_ARBART
   valsoktemp.SOKCHAR[2] = uppvaltemp.VALDLISTA.
   FIND FIRST aarttemp WHERE CMB_ARBART = aarttemp.ARBBENAMNING  USE-INDEX ARBARTKOD NO-LOCK NO-ERROR.
   IF AVAILABLE aarttemp THEN valsoktemp.SOKINT[1] = aarttemp.ARBARTKOD.   
   ELSE valsoktemp.SOKINT[1] = ?.         
   IF NOT AVAILABLE valsoktemp THEN CREATE valsoktemp.
   valsoktemp.SOKCHAR[3] = "Alla".
   FIND FIRST jurperstemp WHERE jurperstemp.NAMN = CMB_JURP NO-LOCK NO-ERROR.        
   IF AVAILABLE jurperstemp THEN valsoktemp.SOKCHAR[3] = jurperstemp.JUDID.
   RUN allaao_UI.   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_HAOF
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_HAOF C-Win
ON CHOOSE OF BTN_HAOF IN FRAME DEFAULT-FRAME /* HÄMTA favorit */
DO:
   RUN hmtfavoriter_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_NVE
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_NVE C-Win
ON CHOOSE OF BTN_NVE IN FRAME DEFAULT-FRAME /* + */
DO:   
   ASSIGN
   FILL-IN-STARTDAT = INPUT FILL-IN-STARTDAT.   
   FILL-IN-STARTDAT = FILL-IN-STARTDAT + 1.        
   DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_NVE-2
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_NVE-2 C-Win
ON CHOOSE OF BTN_NVE-2 IN FRAME DEFAULT-FRAME /* + */
DO:   
   ASSIGN
   FILL-IN-STOPPDAT = INPUT FILL-IN-STOPPDAT.   
   FILL-IN-STOPPDAT = FILL-IN-STOPPDAT + 1.        
   DISPLAY FILL-IN-STOPPDAT WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_NVE-3
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_NVE-3 C-Win
ON CHOOSE OF BTN_NVE-3 IN FRAME DEFAULT-FRAME /* + */
DO:   
   ASSIGN
   FILL-IN-AVSTARTD = INPUT FILL-IN-AVSTARTD.   
   FILL-IN-AVSTARTD = FILL-IN-AVSTARTD + 1.        
   DISPLAY FILL-IN-AVSTARTD WITH FRAME {&FRAME-NAME}.   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME BTN_NVE-4
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL BTN_NVE-4 C-Win
ON CHOOSE OF BTN_NVE-4 IN FRAME DEFAULT-FRAME /* + */
DO:   
   ASSIGN
   FILL-IN-AVSLUTD = INPUT FILL-IN-AVSLUTD.   
   FILL-IN-AVSLUTD = FILL-IN-AVSLUTD + 1.        
   DISPLAY FILL-IN-AVSLUTD WITH FRAME {&FRAME-NAME}.
   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_ARTAL
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_ARTAL C-Win
ON LEAVE OF CMB_ARTAL IN FRAME DEFAULT-FRAME /* Årtal */
DO:    
   ASSIGN                        
   CMB_ARTAL = INPUT CMB_ARTAL
   FILL-IN-AR = INPUT CMB_ARTAL.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_ARTAL C-Win
ON VALUE-CHANGED OF CMB_ARTAL IN FRAME DEFAULT-FRAME /* Årtal */
DO:                           
   ASSIGN
   CMB_ARTAL = INPUT CMB_ARTAL
   FILL-IN-AR = INPUT CMB_ARTAL.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_AVD
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_AVD C-Win
ON VALUE-CHANGED OF CMB_AVD IN FRAME DEFAULT-FRAME /* Avdelning */
DO:
   CMB_AVD = INPUT CMB_AVD.
    {CMB_AVDN1.I}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_BESORG
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_BESORG C-Win
ON LEAVE OF CMB_BESORG IN FRAME DEFAULT-FRAME /* Best./Kund */
DO:
   CMB_BESORG = INPUT CMB_BESORG.    
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_FAK
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_FAK C-Win
ON VALUE-CHANGED OF CMB_FAK IN FRAME DEFAULT-FRAME /* Fakturakat. */
DO:
   CMB_FAK = INPUT CMB_FAK.      
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_JURP
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_JURP C-Win
ON VALUE-CHANGED OF CMB_JURP IN FRAME DEFAULT-FRAME /* Juridisp */
DO:
     
   CMB_JURP = INPUT CMB_JURP.      
   
   {CMB_JURP.I}
   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_LEV
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_LEV C-Win
ON VALUE-CHANGED OF CMB_LEV IN FRAME DEFAULT-FRAME
DO:                           
   
   CMB_LEV = INPUT CMB_LEV.
   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME CMB_OMR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL CMB_OMR C-Win
ON VALUE-CHANGED OF CMB_OMR IN FRAME DEFAULT-FRAME /* Område */
DO:
   CMB_OMR = INPUT CMB_OMR.                 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FBTN_EX
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FBTN_EX C-Win
ON CHOOSE OF FBTN_EX IN FRAME DEFAULT-FRAME /* Visa i excel */
DO:
   /*visvalvar = 2.
   vallista = 1.
   RUN btnok_UI.   */

   RUN visa_UI.

END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FBTN_VISA
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FBTN_VISA C-Win
ON CHOOSE OF FBTN_VISA IN FRAME DEFAULT-FRAME /* Visa */
DO:
   /*visvalvar = 1.
   RUN btnok_UI.   */

   RUN visa_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FBTN_VISA C-Win
ON GO OF FBTN_VISA IN FRAME DEFAULT-FRAME /* Visa */
DO:
   DEFINE VARIABLE status-musdia AS LOGICAL NO-UNDO. 
   status-musdia = SESSION:SET-WAIT-STATE("").
   RUN SetDefaultCursors IN Guru.Konstanter:hpApi.
   Guru.GlobalaVariabler:retvalkoll = FALSE.   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN-AR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-AR C-Win
ON LEAVE OF FILL-IN-AR IN FRAME DEFAULT-FRAME
DO:
   FILL-IN-AR = INPUT FILL-IN-AR.  
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN-AVSLUTD
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-AVSLUTD C-Win
ON LEAVE OF FILL-IN-AVSLUTD IN FRAME DEFAULT-FRAME
DO:
   FILL-IN-AVSLUTD = INPUT FILL-IN-AVSLUTD.
   IF FILL-IN-AVSLUTD < FILL-IN-AVSTARTD THEN DO:
      FILL-IN-AVSTARTD = FILL-IN-AVSLUTD.
      DISPLAY FILL-IN-AVSTARTD WITH FRAME {&FRAME-NAME}.
   END.      
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-AVSLUTD C-Win
ON MOUSE-MENU-CLICK OF FILL-IN-AVSLUTD IN FRAME DEFAULT-FRAME
DO:
   ASSIGN
   FILL-IN-AVSLUTD = INPUT FILL-IN-AVSLUTD
   regdatum = INPUT FILL-IN-AVSLUTD.
   RUN AlmanBtn.w.
   FILL-IN-AVSLUTD = regdatum.
   DISPLAY FILL-IN-AVSLUTD WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN-AVSTARTD
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-AVSTARTD C-Win
ON LEAVE OF FILL-IN-AVSTARTD IN FRAME DEFAULT-FRAME
DO:
   FILL-IN-AVSTARTD = INPUT FILL-IN-AVSTARTD.
   IF FILL-IN-AVSLUTD < FILL-IN-AVSTARTD THEN DO:
      FILL-IN-AVSLUTD = FILL-IN-AVSTARTD.
      DISPLAY FILL-IN-AVSLUTD WITH FRAME {&FRAME-NAME}.
   END.      
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-AVSTARTD C-Win
ON MOUSE-MENU-CLICK OF FILL-IN-AVSTARTD IN FRAME DEFAULT-FRAME
DO:
  ASSIGN
   FILL-IN-AVSTARTD = INPUT FILL-IN-AVSTARTD
   regdatum = INPUT FILL-IN-AVSTARTD.
   RUN AlmanBtn.w.
   FILL-IN-AVSTARTD = regdatum.
   DISPLAY FILL-IN-AVSTARTD WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN-STARTDAT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-STARTDAT C-Win
ON LEAVE OF FILL-IN-STARTDAT IN FRAME DEFAULT-FRAME /* Från */
DO:
  FILL-IN-STARTDAT = INPUT FILL-IN-STARTDAT.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-STARTDAT C-Win
ON MOUSE-MENU-CLICK OF FILL-IN-STARTDAT IN FRAME DEFAULT-FRAME /* Från */
DO:
   ASSIGN
   FILL-IN-STARTDAT = INPUT FILL-IN-STARTDAT
   regdatum = INPUT FILL-IN-STARTDAT.
   RUN AlmanBtn.w.
   FILL-IN-STARTDAT = regdatum.
   DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN-STOPPDAT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-STOPPDAT C-Win
ON LEAVE OF FILL-IN-STOPPDAT IN FRAME DEFAULT-FRAME /* Till */
DO:
  FILL-IN-STOPPDAT = INPUT FILL-IN-STOPPDAT.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN-STOPPDAT C-Win
ON MOUSE-MENU-CLICK OF FILL-IN-STOPPDAT IN FRAME DEFAULT-FRAME /* Till */
DO: 
   ASSIGN
   FILL-IN-STOPPDAT = INPUT FILL-IN-STOPPDAT
   regdatum = INPUT FILL-IN-STOPPDAT.
   RUN AlmanBtn.w.
   FILL-IN-STOPPDAT = regdatum.
   DISPLAY FILL-IN-STOPPDAT WITH FRAME {&FRAME-NAME}.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN_DELNR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_DELNR C-Win
ON ANY-KEY OF FILL-IN_DELNR IN FRAME DEFAULT-FRAME
DO:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_EAONR IN FRAME {&FRAME-NAME}.
   END. 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_DELNR C-Win
ON ENTRY OF FILL-IN_DELNR IN FRAME DEFAULT-FRAME
DO:
   /*BTN_EXTRA:DEFAULT = TRUE. */
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_DELNR C-Win
ON LEAVE OF FILL-IN_DELNR IN FRAME DEFAULT-FRAME
DO:
    /*
   BTN_EXTRA:DEFAULT = FALSE. 
   BTN_VISA:DEFAULT = TRUE.*/
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_DELNR C-Win
ON MOUSE-SELECT-DBLCLICK OF FILL-IN_DELNR IN FRAME DEFAULT-FRAME
DO:
   APPLY "CHOOSE" TO BTN_EXTRA.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN_EAONR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_EAONR C-Win
ON ANY-KEY OF FILL-IN_EAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_EAONR IN FRAME {&FRAME-NAME}.
   END. 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_EAONR C-Win
ON ENTRY OF FILL-IN_EAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
    /*
    BTN_EXTRA:DEFAULT = TRUE. */
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_EAONR C-Win
ON LEAVE OF FILL-IN_EAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
    /*
   BTN_EXTRA:DEFAULT = FALSE.
   BTN_VISA:DEFAULT = TRUE.
   */
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_EAONR C-Win
ON MOUSE-SELECT-DBLCLICK OF FILL-IN_EAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
   APPLY "CHOOSE" TO BTN_EXTRA.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN_ORT
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_ORT C-Win
ON ANY-KEY OF FILL-IN_ORT IN FRAME DEFAULT-FRAME /* Ort/Benämning */
DO:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_ORT IN FRAME {&FRAME-NAME}.
   END.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_ORT C-Win
ON LEAVE OF FILL-IN_ORT IN FRAME DEFAULT-FRAME /* Ort/Benämning */
DO:
   FILL-IN_ORT = INPUT FILL-IN_ORT.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_ORT C-Win
ON MOUSE-SELECT-DBLCLICK OF FILL-IN_ORT IN FRAME DEFAULT-FRAME /* Ort/Benämning */
DO:   
   FILL-IN_ORT = INPUT FILL-IN_ORT.
   status-ok = BRW_AONR:SELECT-FOCUSED-ROW() NO-ERROR.
   APPLY "VALUE-CHANGED" TO BRW_AONR.
   ASSIGN   
   aonummer = uvaldaao.AONR
   delnummer = uvaldaao.DELNR.      
   IF FILL-IN_ORT = '' THEN DO:
      MESSAGE "Sökbegreppet kan inte vara blankt." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_ORT IN FRAME {&FRAME-NAME}.
      RETURN NO-APPLY.
   END.      
   ortssok = '*' + FILL-IN_ORT + '*'.   
   FIND uvaldaao WHERE uvaldaao.AONR = aonummer AND 
   uvaldaao.DELNR = delnummer NO-LOCK NO-ERROR.
   FIND NEXT uvaldaao WHERE uvaldaao.ORT MATCHES ortssok 
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE uvaldaao THEN DO:
      FIND FIRST uvaldaao WHERE uvaldaao.ORT MATCHES ortssok 
      NO-LOCK NO-ERROR.      
   END.
   IF NOT AVAILABLE uvaldaao THEN DO:
      MESSAGE "Det finns inget på sökbegreppet." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_ORT IN FRAME {&FRAME-NAME}.
      RETURN NO-APPLY.   
   END.
   IF AVAILABLE uvaldaao THEN DO:
      RUN setlastrowid_UI IN brwproc[{&LEFT-BROWSE}] (INPUT ROWID(uvaldaao)).
      RUN lastselectdyn_UI IN brwproc[{&LEFT-BROWSE}].
   END.   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME FILL-IN_SAONR
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_SAONR C-Win
ON ANY-KEY OF FILL-IN_SAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_SAONR IN FRAME {&FRAME-NAME}.
   END. 
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_SAONR C-Win
ON LEAVE OF FILL-IN_SAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
   FILL-IN_SAONR = INPUT FILL-IN_SAONR.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL FILL-IN_SAONR C-Win
ON MOUSE-SELECT-DBLCLICK OF FILL-IN_SAONR IN FRAME DEFAULT-FRAME /* Aonr */
DO:
   FILL-IN_SAONR = INPUT FILL-IN_SAONR.
   status-ok = BRW_AONR:SELECT-FOCUSED-ROW() NO-ERROR.
   APPLY "VALUE-CHANGED" TO BRW_AONR.
   ASSIGN
   aonummer = uvaldaao.AONR
   delnummer = uvaldaao.DELNR.
   IF FILL-IN_SAONR = '' THEN DO:
      MESSAGE "Sökbegreppet kan inte vara blankt." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_SAONR IN FRAME {&FRAME-NAME}.
      RETURN NO-APPLY.
   END.      
   aosok = '*' + FILL-IN_SAONR + '*'.
   FIND FIRST uvaldaao WHERE uvaldaao.AONR = aonummer AND 
   uvaldaao.DELNR = delnummer NO-LOCK NO-ERROR.
   FIND NEXT uvaldaao WHERE uvaldaao.AONR MATCHES aosok 
   NO-LOCK NO-ERROR.
   IF NOT AVAILABLE uvaldaao THEN DO:
      FIND FIRST uvaldaao WHERE uvaldaao.AONR MATCHES aosok 
      NO-LOCK NO-ERROR.
   END.
   IF NOT AVAILABLE uvaldaao THEN DO:
      MESSAGE "Det finns inget på sökbegreppet." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_SAONR IN FRAME {&FRAME-NAME}.
      RETURN NO-APPLY.     
   END.
   IF AVAILABLE uvaldaao THEN DO:
      RUN setlastrowid_UI IN brwproc[{&LEFT-BROWSE}] (INPUT ROWID(uvaldaao)).
      RUN lastselectdyn_UI IN brwproc[{&LEFT-BROWSE}].
   END.   
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME RAD_PERIOD
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL RAD_PERIOD C-Win
ON VALUE-CHANGED OF RAD_PERIOD IN FRAME DEFAULT-FRAME
DO:
   RAD_PERIOD = INPUT RAD_PERIOD.
   RUN goma_UI.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME TOGGLE-LEV
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL TOGGLE-LEV C-Win
ON VALUE-CHANGED OF TOGGLE-LEV IN FRAME DEFAULT-FRAME /* Alla leverantörer */
DO:
   {muswait.i}
   TOGGLE-LEV = INPUT TOGGLE-LEV. 

   IF TOGGLE-LEV = TRUE THEN DO:
      CMB_LEV:VISIBLE = FALSE.
   END.
   ELSE IF TOGGLE-LEV = FALSE THEN DO:
      CMB_LEV:VISIBLE = TRUE.
   END.
   
   {musarrow.i}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME TOG_AVSLUTADE
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL TOG_AVSLUTADE C-Win
ON VALUE-CHANGED OF TOG_AVSLUTADE IN FRAME DEFAULT-FRAME /* Avslutade */
DO:
   {muswait.i}                
   TOG_AVSLUTADE = INPUT TOG_AVSLUTADE. 
   RUN goma_UI.               
   {musarrow.i}               
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME TOG_FASTA
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL TOG_FASTA C-Win
ON VALUE-CHANGED OF TOG_FASTA IN FRAME DEFAULT-FRAME /* Fasta */
DO:
   {muswait.i}
   TOG_FASTA = INPUT TOG_FASTA. 
   RUN goma_UI.
   {musarrow.i}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME TOG_PAGA
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL TOG_PAGA C-Win
ON VALUE-CHANGED OF TOG_PAGA IN FRAME DEFAULT-FRAME /* Pågående */
DO:
   {muswait.i}                
   TOG_PAGA = INPUT TOG_PAGA. 
   RUN goma_UI.               
   {musarrow.i}               
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define SELF-NAME TOG_TILLF
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CONTROL TOG_TILLF C-Win
ON VALUE-CHANGED OF TOG_TILLF IN FRAME DEFAULT-FRAME /* Tillfälliga */
DO:
   {muswait.i}
   TOG_TILLF = INPUT TOG_TILLF. 
   RUN goma_UI.
   {musarrow.i}
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&Scoped-define BROWSE-NAME BRW_AONR
&UNDEFINE SELF-NAME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK C-Win 


/* ***************************  Main Block  *************************** */

/* Set CURRENT-WINDOW: this will parent dialog-boxes and frames.        */
ASSIGN CURRENT-WINDOW                = {&WINDOW-NAME} 
       THIS-PROCEDURE:CURRENT-WINDOW = {&WINDOW-NAME}.

/* The CLOSE event can be used from inside or outside the procedure to  */
/* terminate it.                                                        */
ON CLOSE OF THIS-PROCEDURE 
DO:
   IF VALID-HANDLE(kuurvalapph) THEN DELETE PROCEDURE kuurvalapph.
   IF VALID-HANDLE(nyttaoapph2) THEN DELETE PROCEDURE nyttaoapph2 NO-ERROR.
   IF VALID-HANDLE(aonrapph) THEN DELETE PROCEDURE aonrapph NO-ERROR.      
   {BORTBRWPROC.I}
   musz = TRUE.
   RUN disable_UI.
END.
   

/* Best default for GUI applications is...                              */
PAUSE 0 BEFORE-HIDE.

/* Now enable the interface and wait for the exit condition.            */
/* (NOTE: handle ERROR and END-KEY so cleanup code will always fire.    */
MAIN-BLOCK:
DO ON ERROR   UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK
   ON END-KEY UNDO MAIN-BLOCK, LEAVE MAIN-BLOCK:
   {WIN_M_START.I}
   {muswait.i}  
   FBTN_VISA:VISIBLE = FALSE.
   {ALLSTARTDYN.I}      

   IF Guru.Konstanter:mtrlsekvar[6] = TRUE THEN DO:
      /*DISABLE*/
      QUIT.

      /*CMB_PRIS:SELECTABLE = TRUE.*/
   END.

   CREATE uppvaltemp.
   ASSIGN         
   uppvaltemp.VALDLISTA = "Gjorda beställningar"
   uppvaltemp.ENDBEST = ?
   uppvaltemp.DELNRKOLL = TRUE
   uppvaltemp.VISPERAR = TRUE
   uppvaltemp.STARTDATUM = DATE(01,01,YEAR(TODAY))
   uppvaltemp.SLUTDATUM  = TODAY
   uppvaltemp.AVSLUTSTART = DATE(01,01,YEAR(TODAY))
   uppvaltemp.AVSLUTSLUT = TODAY
   uppvaltemp.TILLFALLFAST = 1
   SUBSTRING(uppvaltemp.PROJEKTOR,1,20) = "ALLA"
   uppvaltemp.BEREDARE = "ALLA"
   uppvaltemp.ARBANSVARIG = "ALLA"
   uppvaltemp.BESTNAMN = "ALLA"
   uppvaltemp.OMRNAMN = "ALLA"
   uppvaltemp.AVDNAMN = "ALLA"
   uppvaltemp.AVDNR = "ALLA"
   uppvaltemp.FAKTTYP = "ALLA"
   uppvaltemp.PAAV = 1
   uppvaltemp.MANUPPD = FALSE.
   CREATE visaupp.
   ASSIGN
   visaupp.ORDNING = 1
   visaupp.UPPFOLJVAL = 1
   visaupp.KUURVAL = TRUE  
   visaupp.DELNRKOLL = TRUE
   visaupp.VISEX = 1
   visaupp.VISAP = 1
   visaupp.TYP = "U500"
   visaupp.UT = "Gjorda beställningar".      
   FIND FIRST uppvaltemp NO-LOCK NO-ERROR.
   RUN delnrkoll_UI.   
   {JURPAVDSTART2.I}          
   status-ok = CMB_OMR:ADD-FIRST("Alla").   
   musz = FALSE.   
   status-ok = CMB_BESORG:ADD-FIRST("Alla").
   FOR EACH bestkundallt USE-INDEX BESTNAMN NO-LOCK:
      status-ok = CMB_BESORG:ADD-LAST(bestkundallt.BESTNAMN).
   END.
   status-ok = CMB_BESORG:ADD-LAST("Samma som ovan").
   status-ok = CMB_ANSV:ADD-FIRST("Alla").
   FOR EACH ansvaraotemp USE-INDEX NAMN NO-LOCK:
      status-ok = CMB_ANSV:ADD-LAST(ansvaraotemp.NAMN).
   END.
   status-ok = CMB_ARBART:ADD-FIRST("Alla").
   FOR EACH aarttemp USE-INDEX ARBARTKOD NO-LOCK:
      status-ok = CMB_ARBART:ADD-LAST(aarttemp.ARBBENAMNING).
   END.
   status-ok = CMB_PROJ:ADD-FIRST("Alla").
   FOR EACH projtemp USE-INDEX NAMN NO-LOCK:
      status-ok = CMB_PROJ:ADD-LAST(projtemp.NAMN).
   END.
   status-ok = CMB_BERE:ADD-FIRST("Alla").
   FOR EACH beredartemp USE-INDEX NAMN NO-LOCK:
      status-ok = CMB_BERE:ADD-LAST(beredartemp.NAMN).
   END.
   FOR EACH faktyptemp : 
      status-ok = CMB_FAK:ADD-LAST(faktyptemp.VIFAKTTYP).      
   END.   
   FIND FIRST kbenamntemp USE-INDEX KBEN NO-LOCK NO-ERROR.   
   
   ASSIGN
   FILL-IN_SAONR:LABEL = Guru.Konstanter:gaok
   FILL-IN_EAONR:LABEL = Guru.Konstanter:gaok
   FILL-IN-VAL = "Hämta " + LC(Guru.Konstanter:gaok)
   CMB_BESORG:LABEL = RIGHT-TRIM(SUBSTRIN(Guru.Konstanter:gbestk,1,12))
   CMB_JURP:LABEL = Guru.Konstanter:gjuk
   CMB_AVD:LABEL= Guru.Konstanter:gavdk
   CMB_PROJ:LABEL = gprojl
   CMB_BERE:LABEL = Guru.Konstanter:gberek 
   CMB_ANSV:LABEL = Guru.Konstanter:garbal
   CMB_OMR:LABEL = Guru.Konstanter:gomrk
   uvaldaao.OMRADE:LABEL IN BROWSE BRW_AONR = Guru.Konstanter:gomrk
   uvaldaao.AONR:LABEL IN BROWSE BRW_AONR = Guru.Konstanter:gaok
   BTN_ALLBACK:TOOLTIP = "Alla valda " + LC(Guru.Konstanter:gaok) + " tas bort"   
   BTN_ALLOVER:TOOLTIP = "Alla " + LC(Guru.Konstanter:gaok) + " väljs"
   evaldaao.AONR:LABEL IN BROWSE BRW_VAONR = Guru.Konstanter:gaok
   BTN_EXTRA:LABEL = "Enstaka " +  LC(Guru.Konstanter:gaok)
   TOG_PAGA:TOOLTIP = "Vilka " + LC(Guru.Konstanter:gaok) + " skall visas ?".
   {TOGTIFA.I}
   /*{TILLFASA.I}*/
   &Scoped-define FORMATNAMN uvaldaao.AONR
   &Scoped-define BROWSE-NAME BRW_AONR
   {AOFORMAT1.I}
   &Scoped-define FORMATNAMN evaldaao.AONR
   &Scoped-define BROWSE-NAME BRW_VAONR
   {AOFORMAT1.I}
   &Scoped-define FORMATNAMN FILL-IN_SAONR   
   {AOFORMAT3.I}
   &Scoped-define FORMATNAMN FILL-IN_EAONR   
   {AOFORMAT3.I}
   &Scoped-define FORMATNAMN FILL-IN_DELNR   
   {DELNRFORMAT.I}
   ASSIGN
   FILL-IN-MELL = "mellan" 
   FILL-IN-OCH = "och".  
   RUN btnupp_UI.
   RUN enable_UI.
   {FRMSIZE.I}
   RUN ladda_UI. 
   Guru.GlobalaVariabler:collefth = ?.
   FBTN_VISA:HIDDEN = FALSE.
   Guru.GlobalaVariabler:colrighth = FBTN_VISA:HANDLE.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).      
   FBTN_EX:HIDDEN = FALSE.
   Guru.GlobalaVariabler:colrighth = FBTN_EX:HANDLE.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).      
   BTN_HAOF:HIDDEN = FALSE.
   Guru.GlobalaVariabler:colrighth = BTN_HAOF:HANDLE.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).      
   BTN_AOF:HIDDEN = FALSE.
   Guru.GlobalaVariabler:colrighth = BTN_AOF:HANDLE.           
   RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).      
   ASSIGN C-Win:TITLE = uppvaltemp.VALDLISTA.
   
   GET FIRST BRW_VAONR NO-LOCK. 
   {ARTALBORT.I}
   {musarrow.i}   
   {WIN_M_SLUT.I}
   RUN goma_UI.
   FIND FIRST jurperstemp NO-LOCK NO-ERROR.
   IF NOT AVAILABLE jurperstemp THEN CMB_JURP:HIDDEN = TRUE.
   IF jid NE "" THEN CMB_JURP:HIDDEN IN FRAME {&FRAME-NAME} = TRUE.
   IF Guru.Konstanter:globforetag = "lule" OR Guru.Konstanter:globforetag = "celpa" THEN CMB_JURP:HIDDEN IN FRAME {&FRAME-NAME} = FALSE.
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "celpa" THEN TOG_FASTA:HIDDEN IN FRAME {&FRAME-NAME} = TRUE.
   RUN openbdyn_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT "").


   RUN hamtalev_UI IN hamtapp (OUTPUT TABLE templeverant).
   FOR EACH templeverant NO-LOCK:
      CMB_LEV:ADD-LAST(templeverant.LEVNAMN).
   END.

   IF NOT THIS-PROCEDURE:PERSISTENT THEN
    WAIT-FOR CLOSE OF THIS-PROCEDURE.
END.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE allaao_UI C-Win 
PROCEDURE allaao_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   {muswait.i}
   EMPTY TEMP-TABLE uvaldaao NO-ERROR. 
   IF Guru.Konstanter:appcon THEN DO:                           
      RUN AOHMTALLT.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT visaupp.UT, INPUT-OUTPUT TABLE uppvaltemp, INPUT-OUTPUT TABLE uvaldaao, INPUT TABLE valsoktemp).
   END.
   ELSE DO:
      RUN AOHMTALLT.P  
      (INPUT visaupp.UT, INPUT-OUTPUT TABLE uppvaltemp, INPUT-OUTPUT TABLE uvaldaao, INPUT TABLE valsoktemp).                  
   END.             
   OPEN QUERY BRW_AONR FOR EACH uvaldaao NO-LOCK.
   
   RUN goma_UI.
   {musarrow.i}
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE allstartbrw_UI C-Win 
PROCEDURE allstartbrw_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   RUN DYNBRW.P PERSISTENT SET brwproc[{&LEFT-BROWSE}]
      (INPUT BRW_AONR:HANDLE IN FRAME {&FRAME-NAME}).  
   RUN DYNBRW.P PERSISTENT SET brwproc[{&RIGHT-BROWSE}]
      (INPUT BRW_VAONR:HANDLE IN FRAME {&FRAME-NAME}).  
   RUN DYNARROW.P PERSISTENT SET brwproc[{&ARROWS}]
      (INPUT BRW_AONR:HANDLE, INPUT BRW_VAONR:HANDLE ,
       INPUT BTN_OVER:HANDLE, INPUT BTN_ALLOVER:HANDLE ,
       INPUT BTN_ALLBACK:HANDLE, INPUT BTN_BACK:HANDLE).
   IF Guru.Konstanter:appcon THEN DO:
      RUN KUURVALAPP.P PERSISTENT SET kuurvalapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      RUN MAONRAPP.P PERSISTENT SET aonrapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      RUN NYTTAOAPP.P PERSISTENT SET nyttaoapph2 ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      RUN DIVHAMTAPP.P PERSISTENT SET hamtapp ON Guru.Konstanter:apphand TRANSACTION DISTINCT.
      RUN NETTOMARK.P PERSISTENT SET nettoh ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      RUN KUURVALAPP.P PERSISTENT SET kuurvalapph.
      RUN MAONRAPP.P PERSISTENT SET aonrapph.
      RUN NYTTAOAPP.P PERSISTENT SET nyttaoapph2.
      RUN DIVHAMTAPP.P PERSISTENT SET hamtapp.
      RUN NETTOMARK.P PERSISTENT SET nettoh. 
   END.
  
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE aokomp_UI C-Win 
PROCEDURE aokomp_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   IF vad = 1 THEN DO:
      FOR EACH evaldaao NO-LOCK:
         RUN komplettaonr IN aonrapph 
         (INPUT evaldaao.AONR,INPUT evaldaao.DELNR,
         OUTPUT aonrrec,OUTPUT projvar,OUTPUT bortvar).
         ASSIGN
         evaldaao.PROJEKTOR = projvar
         evaldaao.AONRREC = aonrrec
         evaldaao.TABORT = bortvar.      
      END.
      FOR EACH evaldaao,
      EACH omrtemp WHERE omrtemp.OMRADE = evaldaao.OMRADE:
         evaldaao.AVDELNINGNR = omrtemp.AVDELNINGNR.
      END.
   END.
   ELSE IF vad = 2 THEN DO:
      RUN komplettaonr IN aonrapph 
         (INPUT evaldaao.AONR,INPUT evaldaao.DELNR,
         OUTPUT aonrrec,OUTPUT projvar,OUTPUT bortvar).
      ASSIGN
      evaldaao.PROJEKTOR = projvar
      evaldaao.AONRREC = aonrrec
      evaldaao.TABORT = bortvar.      
      FIND FIRST omrtemp WHERE omrtemp.OMRADE = evaldaao.OMRADE NO-LOCK NO-ERROR.
      IF AVAILABLE omrtemp THEN DO:
         evaldaao.AVDELNINGNR = omrtemp.AVDELNINGNR.
      END.

   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE btnextra_UI C-Win 
PROCEDURE btnextra_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/   
   ASSIGN
   FILL-IN_EAONR = INPUT FRAME {&FRAME-NAME}  FILL-IN_EAONR
   FILL-IN_DELNR = INPUT FILL-IN_DELNR.
   IF uppvaltemp.DELNRKOLL = FALSE AND FILL-IN_DELNR NE 0 THEN DO:
      MESSAGE "Ni använder Er ej av delnr i denna rutin."
      VIEW-AS ALERT-BOX.         
      RETURN NO-APPLY.      
   END.  
   ASSIGN
   aonummer = FILL-IN_EAONR
   delnummer = FILL-IN_DELNR.   
   status-ok = BRW_VAONR:SELECT-FOCUSED-ROW() IN FRAME {&FRAME-NAME} NO-ERROR. 
   IF AVAILABLE evaldaao THEN DO:
      ASSIGN
      tillbakaaonr = evaldaao.AONR
      tillbakadelnr = evaldaao.DELNR.
   END.
   ELSE tillbakaaonr = ?.
   FIND FIRST evaldaao WHERE evaldaao.AONR = aonummer AND 
   evaldaao.DELNR = delnummer NO-LOCK NO-ERROR. 
   IF AVAILABLE evaldaao THEN DO:
      RUN setlastrowid_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT ROWID(evaldaao)).
      RUN openbdyn_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT "").
      RUN lastselectdyn_UI IN brwproc[{&RIGHT-BROWSE}].        
   END.
   ELSE DO:
      RUN aonrhmtaen IN aonrapph (INPUT aonummer,INPUT delnummer,
      OUTPUT TABLE evaldaao APPEND,OUTPUT TABLE felmeddtemp).
      FIND FIRST felmeddtemp NO-LOCK NO-ERROR.
      IF AVAILABLE felmeddtemp THEN DO:
         FIND FIRST evaldaao WHERE evaldaao.AONR = tillbakaaonr AND 
         evaldaao.DELNR = tillbakadelnr NO-LOCK NO-ERROR. 
         IF AVAILABLE evaldaao THEN DO:
            RUN setlastrowid_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT ROWID(evaldaao)).
            RUN openbdyn_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT "").
            RUN lastselectdyn_UI IN brwproc[{&RIGHT-BROWSE}].        
         END.
         MESSAGE felmeddtemp.FELMEDD VIEW-AS ALERT-BOX TITLE "Meddelande".
         DELETE felmeddtemp.         
      END.
      ELSE DO:
         RUN openbdyn_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT "").
         FIND FIRST evaldaao WHERE evaldaao.AONR = aonummer AND 
         evaldaao.DELNR = delnummer NO-LOCK NO-ERROR.
         IF AVAILABLE evaldaao THEN DO:      
            RUN aokomp_UI (INPUT 2).
            RUN setlastrowid_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT ROWID(evaldaao)).
            RUN lastselectdyn_UI IN brwproc[{&RIGHT-BROWSE}].
         END.
      END.  
   END.
   ASSIGN 
   aonummer = FILL-IN_EAONR
   delnummer = FILL-IN_DELNR.
   RUN goma_UI.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE btnok_UI C-Win 
PROCEDURE btnok_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   RUN utvald_UI.
   ASSIGN
   bdatum = FILL-IN-STARTDAT
   avdatum = FILL-IN-STOPPDAT.
   {muswait.i}
   IF vallista = 1 THEN DO:
      excellista = 16.
      IF Guru.Konstanter:appcon THEN DO:
         RUN GJBESTAPP.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT
         (INPUT TABLE uppvaltemp, INPUT TABLE evaldaao, 
         OUTPUT TABLE tidut). /*,OUTPUT str, OUTPUT str2, OUTPUT str3)*/
      END.
      ELSE DO:                   
         RUN GJBESTAPP.P 
         (INPUT TABLE uppvaltemp, INPUT TABLE evaldaao, 
         OUTPUT TABLE tidut). /*,OUTPUT str, OUTPUT str2, OUTPUT str3)*/         
      END.
      RUN AKIVINEX.P (INPUT excellista,INPUT TABLE tidut).       
   END.
   /*FIND FIRST visaupp WHERE visaupp.UPPFOLJVAL = vallista NO-LOCK NO-ERROR.
   FIND FIRST uppvaltemp WHERE uppvaltemp.VALDLISTA = visaupp.UT NO-LOCK NO-ERROR.
   IF vallista = 21 THEN DO:
      excellista = 6.
      IF Guru.Konstanter:appcon THEN DO:
         RUN AOMEAPP.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT
         (INPUT TABLE uppvaltemp, INPUT TABLE evaldaao, 
         OUTPUT TABLE tidut). /*,OUTPUT str, OUTPUT str2, OUTPUT str3)*/
      END.
      ELSE DO:                   
         RUN AOMEAPP.P 
         (INPUT TABLE uppvaltemp, INPUT TABLE evaldaao, 
         OUTPUT TABLE tidut). /*,OUTPUT str, OUTPUT str2, OUTPUT str3)*/         
      END.
      RUN AKIVINEX.P (INPUT excellista,INPUT TABLE tidut).       
   END.
   ELSE IF vallista = 41 THEN DO:
      {AVBGOM.I} 
      RUN BEFVAL.W.
      IF musz = TRUE THEN DO:
         musz = FALSE.
         {AVBFRAM.I}
         RETURN NO-APPLY.         
      END.
      RUN DIRUTFU.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
      {AVBFRAM.I}
   END.
   ELSE IF vallista = 4 OR  vallista = 28 THEN DO: 
      val1 = TRUE.                                 
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "ELPA"  THEN DO:
         IF TOG_SUMKONTO = TRUE THEN DO:         
            RUN extraval_UI.  
            RUN DIRUTFNU2.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
         END.
         ELSE DO: 
            RUN extraval_UI.  
            RUN DIRUTFU.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
         END.
      END.
      ELSE DO:
         RUN extraval_UI.  
         RUN DIRUTFU.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
      END.
   END.
   ELSE IF vallista = 34 THEN DO:       
      RUN DIRUTFNU2.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
   END.
   ELSE DO:
      RUN DIRUTFU.W (INPUT vallista,INPUT TABLE uppvaltemp, INPUT TABLE evaldaao).
   END.*/
   
   
   {musarrow.i}
   APPLY "GO" TO FBTN_VISA IN FRAME {&FRAME-NAME}.    
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE btnupp_UI C-Win 
PROCEDURE btnupp_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/   
   
   FIND FIRST uppvaltemp NO-ERROR.
   ASSIGN             
   uppvaltemp.DELNRKOLL = visaupp.DELNRKOLL
   uppvaltemp.VALDLIST = visaupp.UT.   
   
   RUN goma_UI.
   
   IF visaupp.VISEX = 1 THEN FBTN_EX:HIDDEN IN FRAME {&FRAME-NAME} = FALSE .
   ELSE  FBTN_EX:HIDDEN = TRUE.
   IF visaupp.VISAP = 1 THEN FBTN_VISA:HIDDEN = FALSE.
   ELSE FBTN_VISA:HIDDEN = TRUE.
   
   
   CMB_ARBART:HIDDEN IN FRAME {&FRAME-NAME} = FALSE.
   CMB_ARBART = "ALLA".
   CMB_ARBART:SCREEN-VALUE = "Alla".
   ENABLE CMB_ARBART WITH FRAME {&FRAME-NAME}.
   APPLY "VALUE-CHANGED" TO RAD_PERIOD.
   /*ASSIGN C-win:TITLE = uppvaltemp.VALDLISTA.*/
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE delnrkoll_UI C-Win 
PROCEDURE delnrkoll_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   IF uppvaltemp.DELNRKOLL = FALSE THEN DO: 
      FIND FIRST evaldaao NO-LOCK NO-ERROR.
      IF AVAILABLE evaldaao THEN DO:
         FOR EACH evaldaao BREAK BY evaldaao.AONR:      
            IF LAST-OF(evaldaao.AONR) THEN DO: 
               FIND FIRST delnraonr WHERE delnraonr.AONR = evaldaao.AONR NO-LOCK NO-ERROR.
               IF NOT AVAILABLE delnraonr THEN CREATE delnraonr.
               ASSIGN delnraonr.AONR = evaldaao.AONR.                 
            END.         
         END.
         FOR EACH delnraonr:
            FIND FIRST evaldaao WHERE evaldaao.AONR = delnraonr.AONR NO-ERROR.
            IF AVAILABLE evaldaao THEN DO:
               ASSIGN evaldaao.DELNR = ?.
            END.
            FOR EACH evaldaao WHERE evaldaao.AONR = delnraonr.AONR AND 
               evaldaao.DELNR NE ?:
               DELETE evaldaao.
            END.
         END.
         FOR EACH evaldaao:
            evaldaao.DELNR = 0.
         END.
      END.
      FOR EACH uvaldaao:
         IF uvaldaao.DELNR NE 0 THEN DELETE uvaldaao.
      END.
   END.
   BRW_VAONR:SELECT-ROW(1) IN FRAME {&FRAME-NAME} NO-ERROR.      
   RUN refreshbrw_UI IN brwproc[2].
   BRW_VAONR:DESELECT-ROWS() NO-ERROR.   
   BRW_AONR:SELECT-ROW(1) NO-ERROR.      
   RUN refreshbrw_UI IN brwproc[1].
   BRW_AONR:DESELECT-ROWS() NO-ERROR.   
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE disable_UI C-Win  _DEFAULT-DISABLE
PROCEDURE disable_UI :
/*------------------------------------------------------------------------------
  Purpose:     DISABLE the User Interface
  Parameters:  <none>
  Notes:       Here we clean-up the user-interface by deleting
               dynamic widgets we have created and/or hide 
               frames.  This procedure is usually called when
               we are ready to "clean-up" after running.
------------------------------------------------------------------------------*/
  /* Delete the WINDOW we created */
  IF SESSION:DISPLAY-TYPE = "GUI":U AND VALID-HANDLE(C-Win)
  THEN DELETE WIDGET C-Win.
  IF THIS-PROCEDURE:PERSISTENT THEN DELETE PROCEDURE THIS-PROCEDURE.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE enable_UI C-Win  _DEFAULT-ENABLE
PROCEDURE enable_UI :
/*------------------------------------------------------------------------------
  Purpose:     ENABLE the User Interface
  Parameters:  <none>
  Notes:       Here we display/view/enable the widgets in the
               user-interface.  In addition, OPEN all queries
               associated with each FRAME and BROWSE.
               These statements here are based on the "Other 
               Settings" section of the widget Property Sheets.
------------------------------------------------------------------------------*/
  DISPLAY CMB_ARTAL RAD_PERIOD FILL-IN-STARTDAT FILL-IN-STOPPDAT FILL-IN-MELL 
          FILL-IN-AVSTARTD FILL-IN-OCH FILL-IN-AVSLUTD TOG_PAGA TOG_AVSLUTADE 
          TOG_TILLF TOG_FASTA CMB_PROJ CMB_JURP CMB_AVD CMB_BERE CMB_ANSV 
          CMB_OMR CMB_BESORG CMB_FAK TOGGLE-LEV CMB_LEV FILL-IN_SAONR 
          FILL-IN_ORT FILL-IN_EAONR FILL-IN_DELNR FILL-IN-AOTEXT FILL-IN-VAL 
      WITH FRAME DEFAULT-FRAME IN WINDOW C-Win.
  ENABLE RECT-49 RECT-SOK IMAGE-1 CMB_ARTAL BTN_NVE BTN_NVE-2 RAD_PERIOD 
         FILL-IN-STARTDAT FILL-IN-STOPPDAT BTN_FVE BTN_FVE-2 BTN_NVE-3 
         BTN_NVE-4 FILL-IN-AVSTARTD FILL-IN-AVSLUTD TOG_PAGA TOG_AVSLUTADE 
         BTN_FVE-3 BTN_FVE-4 TOG_TILLF TOG_FASTA FBTN_VISA CMB_PROJ CMB_JURP 
         FBTN_EX CMB_AVD CMB_BERE BTN_AOF CMB_ANSV CMB_OMR CMB_BESORG CMB_FAK 
         BTN_HAOF TOGGLE-LEV CMB_LEV BTN_HAMT BRW_AONR BRW_VAONR BTN_ALLOVER 
         BTN_OVER BTN_BACK BTN_ALLBACK FILL-IN_SAONR FILL-IN_ORT FILL-IN_EAONR 
         FILL-IN_DELNR BTN_AVB 
      WITH FRAME DEFAULT-FRAME IN WINDOW C-Win.
  {&OPEN-BROWSERS-IN-QUERY-DEFAULT-FRAME}
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE excel_UI C-Win 
PROCEDURE excel_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE VARIABLE pfarg AS INTEGER NO-UNDO.
   DEFINE VARIABLE efarg AS INTEGER NO-UNDO.
   /*DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.*/


   pfarg = varforetypval[28].
   RUN profexcelfarg_UI (INPUT pfarg, OUTPUT efarg).
   
   
   bladvar = 0.
   iRad = 1.
   ASSIGN
   breddantal = 6
   bredd[1] = 10
   bredd[2] = 20
   bredd[3] = 10
   bredd[4] = 10
   bredd[5] = 10
   bredd[6] = 10.
   slutbredd =  bredd[6].
   IF allac[1] = "" THEN RUN allac_UI.
   RUN colbredd_UI.  
   RUN startexcel_UI.
   RUN namnbladexcel_UI (INPUT "Uppföljning beställt materiel").
   
   /*Rubriker*/
   FIND FIRST tidut NO-LOCK NO-ERROR.
   raknare = 1.
   /*Kolumnbredd*/
   RUN kolumnexcel_UI.
   
   /*FIND FIRST tidut NO-LOCK NO-ERROR.
   RUN rubrikerexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 11).
     */
   REPEAT:
      RUN rubrikerexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 11).
      FIND NEXT tidut NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidut THEN DO:
         LEAVE.
      END.                                   
      IF SUBSTRING(tidut.UT,1) = "==" THEN DO:
         LEAVE.
      END.
   END.


   raknare = 1.
   FIND NEXT tidut NO-LOCK NO-ERROR.
   REPEAT:
      IF tidut.UT NE "" THEN DO:                                                    /**/
         RUN posterexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 0,INPUT FALSE,INPUT FALSE,INPUT 0,INPUT 0).
      END.
      
      IF SUBSTRING(tidut.UT,230) = "@" THEN DO:
         /*RUN bgcell_UI (INPUT efarg).*/
         RUN bgcellc_UI (INPUT "F", INPUT "F", INPUT efarg).
      END.
      ELSE RUN bgcellc_UI (INPUT "F", INPUT "F", INPUT 0).

      

      FIND NEXT tidut NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidut THEN DO:
         LEAVE.
      END.
   END.
   RUN slutexcel_UI. 


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE extraval_UI C-Win 
PROCEDURE extraval_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE VARIABLE val1 AS LOGICAL.
   MESSAGE "Vill du att samtliga " + LC(Guru.Konstanter:gaok) + " skall summeras på huvudnummret ?"
   VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE val1.
   CASE val1:
      WHEN TRUE THEN DO:
         valdelnrlog = TRUE.          
      END.
      WHEN FALSE THEN DO:
         valdelnrlog = FALSE.          
      END.
   END CASE.  
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE goma_UI C-Win 
PROCEDURE goma_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   IF TOG_AVSLUTADE = TRUE THEN DO:
      ASSIGN
      BTN_FVE-3:HIDDEN IN FRAME {&FRAME-NAME} = FALSE 
      BTN_FVE-4:HIDDEN = FALSE 
      BTN_NVE-3:HIDDEN = FALSE 
      BTN_NVE-4:HIDDEN = FALSE
      FILL-IN-MELL:HIDDEN = FALSE 
      FILL-IN-OCH:HIDDEN = FALSE 
      FILL-IN-AVSLUTD:HIDDEN = FALSE 
      FILL-IN-AVSTARTD:HIDDEN = FALSE.       
   END.
   ELSE DO:
      ASSIGN
      BTN_FVE-3:HIDDEN = TRUE
      BTN_FVE-4:HIDDEN = TRUE
      BTN_NVE-3:HIDDEN = TRUE
      BTN_NVE-4:HIDDEN = TRUE
      FILL-IN-MELL:HIDDEN = TRUE
      FILL-IN-OCH:HIDDEN = TRUE
      FILL-IN-AVSLUTD:HIDDEN = TRUE
      FILL-IN-AVSTARTD:HIDDEN = TRUE.
   END.
   GET FIRST BRW_AONR NO-LOCK.
   IF AVAILABLE uvaldaao THEN DO:
      ASSIGN                      
      BTN_ALLBACK:HIDDEN = FALSE 
      BTN_ALLOVER:HIDDEN = FALSE 
      BTN_OVER:HIDDEN = FALSE
      BTN_BACK:HIDDEN = FALSE
      BRW_AONR:HIDDEN = FALSE  
      IMAGE-1:HIDDEN = FALSE
      FILL-IN_ORT:HIDDEN = FALSE 
      RECT-SOK:HIDDEN = FALSE
      FILL-IN_SAONR:HIDDEN = FALSE.
   END.    
   DO:   
         IF RAD_PERIOD = 1 THEN DO:
         ASSIGN
         CMB_ARTAL:HIDDEN = FALSE
         BTN_FVE:HIDDEN = TRUE 
         BTN_FVE-2:HIDDEN = TRUE 
         BTN_NVE:HIDDEN = TRUE 
         BTN_NVE-2:HIDDEN = TRUE         
         FILL-IN-STARTDAT:HIDDEN = TRUE 
         FILL-IN-STOPPDAT:HIDDEN = TRUE.
      END.
      ELSE IF RAD_PERIOD = 2 THEN DO:
         ASSIGN
         CMB_ARTAL:HIDDEN = FALSE
         BTN_FVE:HIDDEN = FALSE 
         BTN_FVE-2:HIDDEN = FALSE 
         BTN_NVE:HIDDEN = FALSE 
         BTN_NVE-2:HIDDEN = FALSE
         FILL-IN-STARTDAT:HIDDEN = FALSE 
         FILL-IN-STOPPDAT:HIDDEN = FALSE.
      END.           
      ELSE IF RAD_PERIOD = 3 THEN DO:
         ASSIGN
         CMB_ARTAL:HIDDEN = TRUE
         BTN_FVE:HIDDEN = TRUE  
         BTN_FVE-2:HIDDEN = TRUE 
         BTN_NVE:HIDDEN = TRUE 
         BTN_NVE-2:HIDDEN = TRUE
         FILL-IN-STARTDAT:HIDDEN = TRUE 
         FILL-IN-STOPPDAT:HIDDEN = TRUE.
      END.
      DISPLAY RAD_PERIOD WITH FRAME {&FRAME-NAME}.
   END.
   
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE hmtfavoriter_UI C-Win 
PROCEDURE hmtfavoriter_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE VARIABLE ttbuffh AS HANDLE NO-UNDO.
   tthandle = TEMP-TABLE evaldaao:HANDLE.
   ttbuffh = tthandle:DEFAULT-BUFFER-HANDLE.
   RUN ttcopy_UI (INPUT TABLE-HANDLE tthandle).
   ttbuffh:EMPTY-TEMP-TABLE().
   FIND FIRST sparaladdatemp NO-ERROR.
   IF NOT AVAILABLE sparaladdatemp THEN CREATE sparaladdatemp.
   ASSIGN
   sparaladdatemp.GLOBANV = Guru.Konstanter:globanv /*Användare, i detta fall ELPAO*/
   sparaladdatemp.BENAMNING = "KUUR" /*Benämnings sufix, i detta fall ELPAO$STOR*/
   sparaladdatemp.TABVAL = "AONRTAB" /*Tabellnamn*/
   sparaladdatemp.FALTVALAO = "AONR" /*CHARACTER field*/
   sparaladdatemp.FALTVALDEL = "DELNR" /*Integer field*/
   sparaladdatemp.FALTVALDATE = "".   /*DATE field*/
   RUN laddabrw_UI IN brwproc[{&RIGHT-BROWSE}] 
      (INPUT TABLE-HANDLE tthandle, INPUT TABLE sparaladdatemp). 
   RUN aokomp_UI (INPUT 1).
   RUN ttjmf_UI (INPUT-OUTPUT ttbuffh).
   RUN openbdyn_UI IN brwproc[{&RIGHT-BROWSE}] (INPUT ""). 
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ladda_UI C-Win 
PROCEDURE ladda_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FIND faktyptemp WHERE faktyptemp.FAKTTYP = uppvaltemp.FAKTTYP NO-ERROR.
   CMB_FAK = faktyptemp.VIFAKTTYP.   
   /*CMB_ARTAL = YEAR(uppvaltemp.STARTDATUM)*/ 
   FIND FIRST projtemp WHERE projtemp.PERSONALKOD = SUBSTRING(uppvaltemp.PROJEKTOR,1,24) NO-ERROR.
   IF AVAILABLE projtemp THEN CMB_PROJ = projtemp.NAMN.
   ELSE CMB_PROJ = "ALLA". 
   FIND FIRST ansvaraotemp WHERE ansvaraotemp.PERSONALKOD = uppvaltemp.ARBANSVARIG NO-ERROR.
   IF AVAILABLE ansvaraotemp THEN CMB_ANSV = ansvaraotemp.NAMN.
   ELSE CMB_ANSV = "ALLA".
   FIND FIRST bestkundallt WHERE bestkundallt.BESTID = uppvaltemp.BESTID NO-LOCK NO-ERROR.
   IF AVAILABLE bestkundallt THEN CMB_BESORG = bestkundallt.BESTNAMN.
   ELSE CMB_BESORG = "ALLA". 
   FIND FIRST beredartemp WHERE beredartemp.PERSONALKOD = uppvaltemp.BEREDARE NO-ERROR.
   IF AVAILABLE beredartemp THEN CMB_BERE = beredartemp.NAMN.
   ELSE CMB_BERE = "ALLA".
   ASSIGN        
   CMB_OMR = uppvaltemp.OMRNAMN
   CMB_AVD = uppvaltemp.AVDNAMN
   FILL-IN-AVSLUTD = uppvaltemp.AVSLUTSLUT 
   FILL-IN-AVSTARTD = uppvaltemp.AVSLUTSTART
   FILL-IN-STARTDAT = uppvaltemp.STARTDATUM
   FILL-IN-STOPPDAT = uppvaltemp.SLUTDATUM.   
   IF uppvaltemp.TILLFALLFAST = 1 THEN DO:
      ASSIGN
      TOG_TILLF = TRUE
      TOG_FASTA = FALSE.
   END.
   ELSE IF uppvaltemp.TILLFALLFAST = 2 THEN DO:
      ASSIGN
      TOG_TILLF = FALSE
      TOG_FASTA = TRUE.
   END.
   ELSE IF uppvaltemp.TILLFALLFAST = 0 OR uppvaltemp.TILLFALLFAST = 3 THEN DO:
      ASSIGN
      TOG_TILLF = TRUE 
      TOG_FASTA = TRUE.
   END.
   IF uppvaltemp.PAAV = 1 THEN DO:
      ASSIGN
      TOG_PAGA = TRUE
      TOG_AVSLUTADE = FALSE.
   END.
   ELSE IF uppvaltemp.PAAV = 2 THEN DO:
      ASSIGN
      TOG_PAGA = FALSE
      TOG_AVSLUTADE = TRUE.
   END.
   ELSE IF uppvaltemp.PAAV = 0 OR uppvaltemp.PAAV = 3 THEN DO:
      ASSIGN
      TOG_PAGA = TRUE 
      TOG_AVSLUTADE = TRUE.
   END.   
   IF uppvaltemp.VISPERAR = TRUE THEN DO:
      RAD_PERIOD = 1.
   END.
   ELSE IF uppvaltemp.VISPERAR = FALSE THEN DO:
      RAD_PERIOD = 2.
   END.
   ELSE DO:
      RAD_PERIOD = 3.
   END.   
   DISPLAY CMB_AVD CMB_OMR CMB_BESORG CMB_ANSV CMB_BERE CMB_PROJ CMB_FAK FILL-IN-AVSLUTD  
   FILL-IN-AVSTARTD FILL-IN-STARTDAT FILL-IN-STOPPDAT  
   RAD_PERIOD  
   TOG_PAGA TOG_AVSLUTADE TOG_TILLF TOG_FASTA WITH FRAME {&FRAME-NAME}.
   RUN goma_UI.                
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE skapaoval_UI C-Win 
PROCEDURE skapaoval_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   EMPTY TEMP-TABLE aoval NO-ERROR.    
   FOR EACH evaldaao:
      CREATE aoval.
      ASSIGN 
      aoval.AONR = evaldaao.AONR
      aoval.DELNR = evaldaao.DELNR.            
   END. 
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE sparaaofavoriter_UI C-Win 
PROCEDURE sparaaofavoriter_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   tthandle = TEMP-TABLE evaldaao:HANDLE.
   FIND FIRST sparaladdatemp NO-ERROR.
   IF NOT AVAILABLE sparaladdatemp THEN CREATE sparaladdatemp.
   ASSIGN
   sparaladdatemp.GLOBANV = Guru.Konstanter:globanv /*Användare, i detta fall ELPAO*/
   sparaladdatemp.BENAMNING = "KUUR" /*Benämnings sufix, i detta fall ELPAO$STOR*/
   sparaladdatemp.TABVAL = "AONRTAB" /*Tabellnamn*/
   sparaladdatemp.FALTVALAO = "AONR" /*Character field*/
   sparaladdatemp.FALTVALDEL = "DELNR" /*Integer field*/
   sparaladdatemp.FALTVALDATE = "".  /*DATE field*/
   RUN sparabrw_UI IN brwproc[{&RIGHT-BROWSE}] 
         (INPUT TABLE-HANDLE tthandle, INPUT TABLE sparaladdatemp).
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE tidutar_UI C-Win 
PROCEDURE tidutar_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE INPUT PARAMETER sumpris AS INTEGER NO-UNDO.
   
   DEFINE VARIABLE utnr AS INTEGER EXTENT 50 NO-UNDO.
   DEFINE VARIABLE bredd AS INTEGER EXTENT 50 NO-UNDO.
   DEFINE VARIABLE nrcol AS INTEGER EXTENT 50 NO-UNDO.
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DEFINE VARIABLE str AS CHARACTER NO-UNDO.
   DEFINE VARIABLE levtitel AS CHARACTER NO-UNDO.

   EMPTY TEMP-TABLE tidut.
   
   ASSIGN
   nrcol[1] = 1
   nrcol[2] = 2
   nrcol[3] = 3
   nrcol[4] = 4
   nrcol[5] = 5
   nrcol[6] = 6.
   
   ASSIGN
   breddantal = 6   /*antal kolumner*/
   bredd[1] = 10
   bredd[2] = 20
   bredd[3] = 10
   bredd[4] = 10
   bredd[5] = 10
   bredd[6] = 10.

   ASSIGN
   utnr[1] = 1
   utnr[2] = 2
   utnr[3] = 3
   utnr[4] = 4
   utnr[5] = 5
   utnr[6] = 6.
   
   i = 2.     
   utnr[nrcol[1]] = 1.
   DO WHILE i <= breddantal:             
      utnr[i] = utnr[i - 1] + bredd[i - 1] + 1.            
      i = i + 1.
   END.   
   ASSIGN
   str = "".  
   i = 1.
   DO WHILE i <= utnr[breddantal] + bredd[breddantal] - 1:
      str = str + "=".     
      i = i + 1.
   END.   
   i = 2.      
   DO WHILE i <= breddantal:             
      SUBSTRING(str,(utnr[i] - 1),1) = ".".      
      i = i + 1.
   END.

   IF TOGGLE-LEV = TRUE THEN levtitel = "Alla Leverantörer".
   ELSE IF TOGGLE-LEV = FALSE THEN levtitel = CMB_LEV.

   CREATE tidut.
      ASSIGN      
      SUBSTRING(tidut.UT,1) = levtitel.
   CREATE tidut.
   CREATE tidut.
   /*rubriker*/
   
   
   SUBSTRING(tidut.UT,utnr[nrcol[1]]) = "ENR".
   SUBSTRING(tidut.UT,utnr[nrcol[2]]) = "BENÄMNING".
   SUBSTRING(tidut.UT,utnr[nrcol[3]]) = "ANTAL".
   SUBSTRING(tidut.UT,utnr[nrcol[4]]) = "ENHET".
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "LEV-ID".
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = "Pris".
   
   CREATE tidut.
   SUBSTRING(tidut.UT,1) = "==".
   
   FOR EACH tempbermtrl NO-LOCK:
      CREATE tidut.
      ASSIGN
      SUBSTRING(tidut.UT,utnr[nrcol[1]]) = tempbermtrl.ENR.
      SUBSTRING(tidut.UT,utnr[nrcol[2]]) = SUBSTRING(tempbermtrl.BENAMNING,1,15).
      SUBSTRING(tidut.UT,utnr[nrcol[3]]) = STRING(tempbermtrl.ANTAL).
      SUBSTRING(tidut.UT,utnr[nrcol[4]]) = tempbermtrl.ENHET.
      SUBSTRING(tidut.UT,utnr[nrcol[5]]) = tempbermtrl.LEVKOD.
      SUBSTRING(tidut.UT,utnr[nrcol[6]]) = STRING(tempbermtrl.PRIS).

      IF tempbermtrl.RABATT = TRUE THEN DO:
         SUBSTRING(tidut.UT,230) = "@".
      END.
   END.

   CREATE tidut.
   ASSIGN
   SUBSTRING(tidut.UT,utnr[nrcol[5]]) = "Totalpris:".
   SUBSTRING(tidut.UT,utnr[nrcol[6]]) = STRING(sumpris).
   /*
   FOR EACH tidut WHERE NO-LOCK:
      MESSAGE tidut.UT VIEW-AS ALERT-BOX.
   END.*/

   RUN excel_UI.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ttcopy_UI C-Win 
PROCEDURE ttcopy_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE INPUT PARAMETER TABLE-HANDLE tthandle.
   DEFINE VARIABLE ttcopyh AS HANDLE NO-UNDO.
   DEFINE VARIABLE komcop AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ttqh AS HANDLE NO-UNDO.
   DEFINE VARIABLE ttbuffh AS HANDLE NO-UNDO.
   /*
   CREATE TEMP-TABLE ttcopyh. 
   ttcopyh:ADD-FIELDS-FROM(tthandle:NAME).                                
   */

   ttbuffh = tthandle:DEFAULT-BUFFER-HANDLE.  
   CREATE TEMP-TABLE ttcopyh. 
   ttcopyh:CREATE-LIKE(ttbuffh).
   ttcopyh:TEMP-TABLE-PREPARE("ttkopia"). 
   ttbuffcopyh = ttcopyh:DEFAULT-BUFFER-HANDLE.
   ttbuffh = tthandle:DEFAULT-BUFFER-HANDLE.  
   komcop = "FOR EACH " + ttbuffh:TABLE + " NO-LOCK.".
   CREATE QUERY ttqh.
   ttqh:SET-BUFFERS(ttbuffh).
   ttqh:QUERY-PREPARE(komcop).
   ttqh:QUERY-OPEN().
   ttqh:GET-FIRST(NO-LOCK).
   DO WHILE ttqh:QUERY-OFF-END = FALSE:
      ttbuffcopyh:BUFFER-CREATE().
      ttbuffcopyh:BUFFER-COPY(ttbuffh).
      ttqh:GET-NEXT(NO-LOCK).
   END.
   ttqh:QUERY-CLOSE.
   DELETE OBJECT ttqh NO-ERROR.     
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE ttjmf_UI C-Win 
PROCEDURE ttjmf_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE INPUT-OUTPUT PARAMETER favbuffh AS HANDLE.
   DEFINE VARIABLE compsave AS LOGICAL NO-UNDO.
   DEFINE VARIABLE komfav AS CHARACTER NO-UNDO.
   DEFINE VARIABLE komcop AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ttcopqh AS HANDLE NO-UNDO.
   DEFINE VARIABLE ttfavqh AS HANDLE NO-UNDO.
   komcop = "FOR EACH " + ttbuffcopyh:TABLE + " NO-LOCK.".
   komfav = "FOR EACH " + favbuffh:TABLE + " NO-LOCK.".
   CREATE QUERY ttcopqh.
   ttcopqh:SET-BUFFERS(ttbuffcopyh).
   ttcopqh:QUERY-PREPARE(komcop).
   ttcopqh:QUERY-OPEN().
   CREATE QUERY ttfavqh.
   ttfavqh:SET-BUFFERS(favbuffh).
   ttfavqh:QUERY-PREPARE(komfav).
   ttfavqh:QUERY-OPEN().
   ttcopqh:GET-FIRST(NO-LOCK).
   DO WHILE ttcopqh:QUERY-OFF-END = FALSE:
      ttfavqh:GET-FIRST(NO-LOCK).
      compsave = FALSE.
      DO WHILE ttfavqh:QUERY-OFF-END = FALSE:
         IF favbuffh:BUFFER-COMPARE(ttbuffcopyh) THEN DO:
            compsave = TRUE.       
            ttfavqh:GET-LAST(NO-LOCK).
            ttfavqh:GET-NEXT(NO-LOCK).
         END.
         ttfavqh:GET-NEXT(NO-LOCK).
      END.                  
      IF compsave = TRUE THEN DO:
         ttbuffcopyh:BUFFER-DELETE().  
      END.
      ELSE DO:
         favbuffh:BUFFER-CREATE().
         favbuffh:BUFFER-COPY(ttbuffcopyh).
      END.
      ttcopqh:GET-NEXT(NO-LOCK).
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE utvald_UI C-Win 
PROCEDURE utvald_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   FIND FIRST uppvaltemp NO-ERROR.      
   ASSIGN
   
   
   CMB_ANSV = INPUT FRAME {&FRAME-NAME} CMB_ANSV 
   CMB_ARBART = INPUT FRAME {&FRAME-NAME} CMB_ARBART 
   CMB_BERE = INPUT FRAME {&FRAME-NAME} CMB_BERE  
   CMB_PROJ = INPUT FRAME {&FRAME-NAME} CMB_PROJ.  
   
   
   
   IF jid = "" THEN CMB_JURP = INPUT FRAME {&FRAME-NAME} CMB_JURP. 
   IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "celpa" THEN CMB_JURP = INPUT FRAME {&FRAME-NAME} CMB_JURP. 
   
   
   
   ASSIGN     
   uppvaltemp.VISPERAR = FALSE
   uppvaltemp.STARTDATUM = FILL-IN-STARTDAT
   uppvaltemp.SLUTDATUM  = FILL-IN-STOPPDAT
   uppvaltemp.AVSLUTSTART = FILL-IN-AVSTARTD
   uppvaltemp.AVSLUTSLUT = FILL-IN-AVSLUTD
   
   uppvaltemp.BESTNAMN = CMB_BESORG
   uppvaltemp.OMRNAMN = CMB_OMR
   uppvaltemp.AVDNAMN = CMB_AVD
   
   uppvaltemp.BEREDARE = CMB_BERE
   uppvaltemp.ARBANSVARIG = CMB_ANSV.   
   

   IF TOG_PAGA = TRUE AND TOG_AVSLUTADE = TRUE THEN uppvaltemp.PAAV = 3.
   ELSE IF TOG_PAGA = FALSE AND TOG_AVSLUTADE = TRUE THEN uppvaltemp.PAAV = 2.
   ELSE IF TOG_PAGA = TRUE AND TOG_AVSLUTADE = FALSE THEN uppvaltemp.PAAV = 1.
   ELSE IF TOG_PAGA = FALSE AND TOG_AVSLUTADE = FALSE THEN uppvaltemp.PAAV = 3.
   IF TOG_TILLF = TRUE AND TOG_FASTA = TRUE THEN uppvaltemp.TILLFALLFAST = 3.
   ELSE IF TOG_TILLF = FALSE AND TOG_FASTA = TRUE THEN uppvaltemp.TILLFALLFAST = 2.
   ELSE IF TOG_TILLF = TRUE AND TOG_FASTA = FALSE THEN uppvaltemp.TILLFALLFAST = 1.
   ELSE IF TOG_TILLF = FALSE AND TOG_FASTA = FALSE THEN uppvaltemp.TILLFALLFAST = 3.
   
   FIND FIRST omrtemp WHERE omrtemp.NAMN = CMB_OMR NO-LOCK NO-ERROR.      
   IF AVAILABLE omrtemp THEN uppvaltemp.OMRADE = omrtemp.OMRADE.
   ELSE uppvaltemp.OMRADE = "Alla".
   FIND FIRST bestkundallt WHERE bestkundallt.BESTNAMN = CMB_BESORG NO-LOCK NO-ERROR.
   IF AVAILABLE bestkundallt THEN uppvaltemp.BESTID = bestkundallt.BESTID.
   ELSE DO:
      IF CMB_BESORG = "Samma som ovan" THEN uppvaltemp.BESTID = uppvaltemp.OMRADE.
      ELSE uppvaltemp.BESTID = CMB_BESORG. 
   END.      
   FIND FIRST faktyptemp WHERE faktyptemp.VIFAKTTYP = CMB_FAK NO-ERROR.
   uppvaltemp.FAKTTYP = faktyptemp.FAKTTYP.   

   FIND FIRST beredartemp WHERE beredartemp.NAMN = CMB_BERE NO-ERROR.
   IF AVAILABLE beredartemp THEN uppvaltemp.BEREDARE = beredartemp.PERSONALKOD.
   ELSE uppvaltemp.BEREDARE = "ALLA".
   
   uppvaltemp.PROJEKTOR = "".
   FIND FIRST projtemp WHERE projtemp.NAMN = CMB_PROJ NO-ERROR.
   IF AVAILABLE projtemp THEN SUBSTRING(uppvaltemp.PROJEKTOR,1,24) = projtemp.PERSONALKOD.
   ELSE SUBSTRING(uppvaltemp.PROJEKTOR,1,24) = "ALLA". 
   
   

   FIND FIRST ansvaraotemp WHERE ansvaraotemp.NAMN = CMB_ANSV NO-ERROR.
   IF AVAILABLE ansvaraotemp THEN uppvaltemp.ARBANSVARIG = ansvaraotemp.PERSONALKOD.
   ELSE uppvaltemp.ARBANSVARIG = "ALLA".

   IF AVAILABLE bestkundallt THEN uppvaltemp.BESTID = bestkundallt.BESTID.
   ELSE uppvaltemp.BESTID = "ALLA".
   IF AVAILABLE omrtemp THEN uppvaltemp.OMRADE = omrtemp.OMRADE.
   ELSE uppvaltemp.OMRADE = "ALLA".   

   FIND FIRST avdtemp WHERE avdtemp.AVDELNINGNAMN = CMB_AVD NO-LOCK NO-ERROR.   
   IF AVAILABLE avdtemp THEN uppvaltemp.AVDNR = STRING(avdtemp.AVDELNINGNR).
   ELSE uppvaltemp.AVDNR = "ALLA".

   IF RAD_PERIOD = 1 THEN DO:
      ASSIGN         
      uppvaltemp.VISPERAR = TRUE
      uppvaltemp.STARTDATUM = DATE(01,01,CMB_ARTAL).
   END.
   ELSE IF RAD_PERIOD = 3 THEN DO:
      ASSIGN         
      uppvaltemp.VISPERAR = ?.
   END.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE visa_UI C-Win 
PROCEDURE visa_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   DEFINE VARIABLE levkodvar AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sumpris AS INTEGER NO-UNDO.

   levkodvar = CMB_LEV.
   /*MESSAGE levkodvar VIEW-AS ALERT-BOX.*/
   EMPTY TEMP-TABLE tempbermtrl.
   EMPTY TEMP-TABLE tempbermtrl2.

   
   FOR EACH evaldaao NO-LOCK:
      RUN hamtabermtrl_UI IN hamtapp (INPUT TOGGLE-LEV, INPUT levkodvar, INPUT evaldaao.AONR, INPUT evaldaao.DELNR, INPUT evaldaao.OMRADE, OUTPUT TABLE tempbermtrl2).
      
      FOR EACH tempbermtrl2 NO-LOCK:
         FIND FIRST tempbermtrl WHERE tempbermtrl.ENR = tempbermtrl2.ENR AND tempbermtrl.LEVKOD = tempbermtrl2.LEVKOD NO-ERROR.

         /*om enr finns lägg till i antal*/
         IF AVAILABLE tempbermtrl THEN DO:
            tempbermtrl.ANTAL = tempbermtrl.ANTAL + tempbermtrl2.ANTAL.
            tempbermtrl.PRIS = tempbermtrl.PRIS + (tempbermtrl2.PRIS * tempbermtrl2.ANTAL).
         END.
         ELSE DO:
            CREATE tempbermtrl.
            BUFFER-COPY tempbermtrl2 TO tempbermtrl.
            tempbermtrl.PRIS = tempbermtrl.PRIS * tempbermtrl.ANTAL.
         END.         
      END.

      
      
   END.
   
   FOR EACH tempbermtrl NO-LOCK:
      sumpris = sumpris + tempbermtrl.PRIS.
   END.

   RUN uppnettomark_UI IN nettoh (INPUT-OUTPUT TABLE tempbermtrl).
   
   /*RUN prisa_UI IN hamtapp (INPUT-OUTPUT TABLE tempbermtrl).*/

   

   RUN tidutar_UI (INPUT sumpris).


END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


