/*G:\PRO9S\WX\XKALKMES.P*/
DEFINE NEW SHARED TEMP-TABLE tidut
   FIELD UT AS CHARACTER FORMAT "X(132)".
/*DEFINE INPUT PARAMETER excellista AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER gforetag AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR tidut.*/
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.



DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE bladvar2 AS INTEGER NO-UNDO.
DEFINE VARIABLE protvar AS INTEGER NO-UNDO.

DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.

DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.   
DEFINE VARIABLE vadress AS CHARACTER NO-UNDO.
DEFINE VARIABLE vpadress AS CHARACTER NO-UNDO.
DEFINE VARIABLE vtelef AS CHARACTER NO-UNDO.
DEFINE VARIABLE felmedd AS CHARACTER NO-UNDO.
DEFINE VARIABLE omromr AS CHARACTER NO-UNDO.
DEFINE VARIABLE hjproc AS INTEGER NO-UNDO.
DEFINE VARIABLE hjagare AS INTEGER NO-UNDO.
DEFINE VARIABLE projl AS CHARACTER NO-UNDO.
DEFINE VARIABLE arrendator AS CHARACTER NO-UNDO.
DEFINE VARIABLE ipfakt AS INTEGER NO-UNDO.
DEFINE VARIABLE ivfaktaker AS INTEGER NO-UNDO.
DEFINE VARIABLE bbelopp AS INTEGER NO-UNDO.
DEFINE VARIABLE pomr AS CHARACTER NO-UNDO.
DEFINE VARIABLE pfakt AS INTEGER NO-UNDO.
DEFINE VARIABLE vskog AS CHARACTER NO-UNDO.
DEFINE VARIABLE oktforekpi  AS DECIMAL NO-UNDO.
DEFINE VARIABLE kpi1995 AS DECIMAL NO-UNDO.
DEFINE VARIABLE kabersatt AS DECIMAL NO-UNDO.
DEFINE VARIABLE allnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE allpersnr AS CHARACTER NO-UNDO.
DEFINE VARIABLE antag AS INTEGER NO-UNDO.
DEFINE VARIABLE kontpers AS CHARACTER NO-UNDO.
DEFINE VARIABLE skogfast AS LOGICAL NO-UNDO.
DEFINE VARIABLE fdyr AS INTEGER NO-UNDO.
DEFINE VARIABLE skprotapph AS HANDLE NO-UNDO.
DEFINE VARIABLE extrarad AS INTEGER NO-UNDO.
DEFINE VARIABLE revkost  AS INTEGER NO-UNDO.
DEFINE VARIABLE revtext AS CHARACTER NO-UNDO.
DEFINE VARIABLE adel AS CHARACTER NO-UNDO.

DEFINE VARIABLE felexcel AS LOGICAL NO-UNDO.
DEFINE VARIABLE link AS CHARACTER NO-UNDO.
DEFINE VARIABLE totheight AS DECIMAL NO-UNDO.
DEFINE VARIABLE chExcelApplication AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chWorkbook         AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chWorksheet        AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chChart            AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chWorksheetRange   AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chCell             AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chPageBreak        AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE cActiveCell        AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE chWindow           AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE iCount             AS INTEGER    NO-UNDO.
DEFINE VARIABLE iIndex             AS INTEGER    NO-UNDO.
DEFINE VARIABLE iMonth             AS INTEGER    NO-UNDO.
DEFINE VARIABLE dAnnualQuota       AS DECIMAL    NO-UNDO.
DEFINE VARIABLE dTotalSalesAmount  AS DECIMAL    NO-UNDO.
DEFINE VARIABLE iRad               AS INTEGER    INITIAL 0.
DEFINE VARIABLE iRadslut           AS INTEGER    INITIAL 0.
DEFINE VARIABLE cRad               AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cRange             AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cRange1             AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cRange2             AS CHARACTER  NO-UNDO.
DEFINE VARIABLE cRangefont         AS CHARACTER  NO-UNDO.
DEFINE VARIABLE radnrS             AS CHARACTER  NO-UNDO.
DEFINE VARIABLE allac              AS CHARACTER  EXTENT 100 NO-UNDO. /*alla kolumner*/
DEFINE VARIABLE allacolumtext      AS CHARACTER  EXTENT 100 NO-UNDO. /*inläsning från excel*/
DEFINE VARIABLE allachar           AS LOGICAL    EXTENT 100 NO-UNDO. /*skall kolumn vara text även om den innehåller tal*/
DEFINE VARIABLE startc             AS CHARACTER  NO-UNDO.
DEFINE VARIABLE slutc              AS CHARACTER  NO-UNDO.
DEFINE VARIABLE slutbredd          AS INTEGER    NO-UNDO.
DEFINE VARIABLE raknare            AS INTEGER    NO-UNDO.
DEFINE VARIABLE rubrikvar          AS LOGICAL    NO-UNDO.
DEFINE VARIABLE utnr               AS INTEGER    EXTENT 100 NO-UNDO.
DEFINE VARIABLE estartnr           AS INTEGER    EXTENT 100 NO-UNDO.
DEFINE VARIABLE bredd              AS INTEGER    EXTENT 100 NO-UNDO.
DEFINE VARIABLE nrcol              AS INTEGER    EXTENT 100 NO-UNDO.
DEFINE VARIABLE breddantal         AS INTEGER    NO-UNDO.
DEFINE VARIABLE datchar            AS CHARACTER  NO-UNDO.
DEFINE VARIABLE arvar              AS INTEGER    NO-UNDO.
DEFINE VARIABLE manvar             AS INTEGER    NO-UNDO.
DEFINE VARIABLE dagvar             AS INTEGER    NO-UNDO.

DEFINE VARIABLE bladvar            AS INTEGER    NO-UNDO.
DEFINE VARIABLE bladvarkoll        AS LOGICAL NO-UNDO.
DEFINE VARIABLE radanmrak          AS INTEGER    NO-UNDO.
DEFINE VARIABLE helaben            AS CHARACTER  NO-UNDO.           /*lägga ut hela benämningen*/
DEFINE VARIABLE startnu            AS LOGICAL    NO-UNDO.
DEFINE VARIABLE slutnu             AS LOGICAL    NO-UNDO.
DEFINE VARIABLE bermtrlvar             AS LOGICAL    NO-UNDO.
DEFINE VARIABLE bild AS CHARACTER NO-UNDO.
DEFINE VARIABLE excelmus AS LOGICAL NO-UNDO.
/*RAD variabler*/
DEFINE VARIABLE vilkencol AS CHARACTER NO-UNDO.
DEFINE VARIABLE helafalt AS LOGICAL   NO-UNDO.
DEFINE VARIABLE coltext  AS CHARACTER NO-UNDO.
DEFINE VARIABLE coltextrange  AS CHARACTER NO-UNDO.
DEFINE VARIABLE radklar  AS LOGICAL   NO-UNDO.
DEFINE VARIABLE antalbladstart AS INTEGER NO-UNDO.

DEFINE VARIABLE excelbrwhand AS HANDLE NO-UNDO.
DEFINE VARIABLE excelbuffh AS HANDLE NO-UNDO.
DEFINE VARIABLE exceltempbufh AS HANDLE NO-UNDO.
DEFINE VARIABLE excelbrwqh AS HANDLE NO-UNDO.
DEFINE VARIABLE exceltempcolh AS HANDLE NO-UNDO.
DEFINE VARIABLE decichar AS CHARACTER NO-UNDO.
DEFINE VARIABLE excellabelvar AS CHARACTER NO-UNDO EXTENT 50.
DEFINE VARIABLE excellabelvar2 AS CHARACTER NO-UNDO EXTENT 50.
DEFINE VARIABLE excellabelrad2 AS LOGICAL NO-UNDO.
DEFINE VARIABLE colhjalpi AS INTEGER NO-UNDO.
DEFINE VARIABLE maxantalcolexcel AS INTEGER NO-UNDO.
DEFINE VARIABLE sparadocnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE visavarexcel AS LOGICAL NO-UNDO.

/*DEFINE NEW SHARED VARIABLE varforetypval AS INTEGER EXTENT 100 NO-UNDO.     
DEFINE NEW SHARED VARIABLE varforetypchar AS CHARACTER EXTENT 100 NO-UNDO.     
DEFINE NEW SHARED VARIABLE globnystart AS LOGICAL NO-UNDO.*/



   

DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.

DEFINE NEW SHARED VARIABLE appcon AS LOGICAL NO-UNDO.




&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{GLOBVAR2DEL1.I}

{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
/*{EXECLIN.I}*/
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
/*{EXTRADATA.I}
IF Guru.Konstanter:appcon THEN DO:
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
  RUN EXTRADATAHMT.P PERSISTENT SET edataapph.  
END.
IF Guru.Konstanter:appcon THEN DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph.
END.*/
/*IF Guru.Konstanter:appcon THEN DO:
   RUN SKAPPROTOU6.P PERSISTENT SET skprotapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN SKAPPROTOU6.P PERSISTENT SET skprotapph.
END.*/
/*extrarad = 0.
IF mall = 5 OR mall = 19 THEN fnamn = "VP_Vattenfalleldistr.XLS". 
IF mall = 9 THEN DO: 
   fnamn = "VP_Vattenfall2008.XLS".
   extrarad = 1.
END.

IF mall = 16 OR mall = 20 THEN DO: 
   fnamn = "VP_Vattenfall2009.XLS".
   extrarad = 1.
END.*/
fnamn = "kalkes2009.XLT". 

IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   RUN DYNBLOB.P PERSISTENT SET blobproch. 
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).
   IF resid = ? THEN DO:
      kommando = SEARCH(fnamn).      
   END.
   ELSE DO:
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).      
   END.
   RUN deleteproc_UI IN blobproch.
END.
ELSE kommando = SEARCH(fnamn).   
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.   
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN kommando2 = webclienttempdir.

OS-CREATE-DIR VALUE(kommando2) NO-ERROR.

kommando2 = kommando2 + fnamn.


OS-COPY VALUE(kommando) VALUE(kommando2).
kommando = kommando2.

/*/*RUN startexcel_UI.*/
FIND FIRST markval NO-LOCK NO-ERROR.  
IF Guru.Konstanter:appcon THEN DO:                           
   RUN EXVPFAKT.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
   (INPUT markval.VARDNR,INPUT markval.BETECKNING,INPUT TABLE markval,OUTPUT omravd,OUTPUT omromr,OUTPUT aovar,OUTPUT delnrvar,OUTPUT ortvar,OUTPUT fkommun,OUTPUT fvaker
   ,OUTPUT vman,OUTPUT vadress,OUTPUT vpadress, OUTPUT vtelef , OUTPUT projl, OUTPUT arrendator,
    OUTPUT ipfakt,OUTPUT ivfaktaker,OUTPUT pomr,OUTPUT bbelopp,OUTPUT pfakt,OUTPUT vskog,OUTPUT oktforekpi,OUTPUT kpi1995, OUTPUT kabersatt,OUTPUT TABLE marag ).
END.
ELSE DO:
   RUN EXVPFAKT.P 
   (INPUT markval.VARDNR,INPUT markval.BETECKNING,INPUT TABLE markval,OUTPUT omravd,OUTPUT omromr,OUTPUT aovar,OUTPUT delnrvar,OUTPUT ortvar,OUTPUT fkommun,OUTPUT fvaker
   ,OUTPUT vman,OUTPUT vadress,OUTPUT vpadress, OUTPUT vtelef , OUTPUT projl , OUTPUT arrendator,
    OUTPUT ipfakt,OUTPUT ivfaktaker,OUTPUT pomr,OUTPUT bbelopp,OUTPUT pfakt,OUTPUT vskog,OUTPUT oktforekpi,OUTPUT kpi1995, OUTPUT kabersatt,OUTPUT TABLE marag ).
END.   

CREATE uppfoltemp.
ASSIGN
uppfoltemp.FORETAG = globforetag   
uppfoltemp.ALLAMA = FALSE
uppfoltemp.VALVARD = ""
uppfoltemp.FORSTA = TRUE
uppfoltemp.STAMP = TRUE.   
FIND FIRST markval NO-LOCK NO-ERROR.  
RUN vpVSAB_UI IN skprotapph
   (INPUT "" ,INPUT markval.BETECKNING,INPUT markval.MARKREC,INPUT TABLE uppfoltemp,INPUT TABLE markval,INPUT TABLE maga,OUTPUT TABLE akevard,
   OUTPUT TABLE svard ,OUTPUT TABLE akekab,OUTPUT TABLE sumtemp,OUTPUT allnamn, OUTPUT allpersnr,OUTPUT TABLE fastaga).

FIND FIRST markval NO-LOCK NO-ERROR.  
RUN fordyrad_UI IN skprotapph
   (INPUT markval.VARDNR ,INPUT markval.BETECKNING,OUTPUT fdyr).

FIND FIRST markval NO-LOCK NO-ERROR.  
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "MARKFASTANDEL"                   
inextradatatemp.HUVUDINT = markval.MARKNR.                    
inextradatatemp.HUVUDCH = markval.BETECKNING.                    
RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
FIND FIRST extradatatemp NO-LOCK NO-ERROR.
IF AVAILABLE extradatatemp THEN DO:      
   ASSIGN
   /*fastfortemp.CHE1 = extradatatemp.SOKCHAR[1]
   fastfortemp.INTE1 = extradatatemp.SOKINT[1]
   fastfortemp.INTE2 = extradatatemp.SOKINT[2].         */
   adel = extradatatemp.SOKCHAR[1].
END.
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
EMPTY TEMP-TABLE extradatatemp NO-ERROR. 



EMPTY TEMP-TABLE tidut NO-ERROR. 
*/
CREATE "Excel.Application" chExcelApplication.
chExcelApplication:Visible = TRUE.
{OPENEXCEL.I}
chWorkbook = chExcelApplication:Workbooks:OPEN(kommando).

chWorkSheet = chExcelApplication:Sheets:Item(7) NO-ERROR.

   iColumn = 23.
   cColumn = STRING(iColumn).
   cRange = "g" + cColumn.
  
   chWorkSheet:Range(cRange):Value = string(15) NO-ERROR.
   iColumn = 23.
   cColumn = STRING(iColumn).
   cRange = "h" + cColumn.
  
   chWorkSheet:Range(cRange):Value = string(2) NO-ERROR.

/*iColumn = 7.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(bbelopp) NO-ERROR.
iColumn = 11.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(ipfakt) NO-ERROR.
iColumn = 14.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(ivfaktaker) NO-ERROR.
iColumn = 17.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = pomr NO-ERROR.
iColumn = 22.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.

/*IF vskog = "N" THEN chWorkSheet:Range(cRange):Value = STRING(pfakt - 1).
IF vskog = "S" THEN chWorkSheet:Range(cRange):Value = STRING(pfakt).
IF vskog = "G" THEN chWorkSheet:Range(cRange):Value = STRING(pfakt + 1).*/
chWorkSheet:Range(cRange):Value = STRING(pfakt) NO-ERROR.

iColumn = 24.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
IF vskog = "N" THEN chWorkSheet:Range(cRange):Value = "Norrl" NO-ERROR.
IF vskog = "S" THEN chWorkSheet:Range(cRange):Value = "Svea" NO-ERROR.
IF vskog = "G" THEN chWorkSheet:Range(cRange):Value = "Göta" NO-ERROR.
iColumn = 29.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(oktforekpi,">99.9") NO-ERROR.
iColumn = 32.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(oktforekpi,">99.9") NO-ERROR.
iColumn = 35.
cColumn = STRING(iColumn).
cRange = "C" + cColumn.
chWorkSheet:Range(cRange):Value = STRING(kabersatt) NO-ERROR.
                                                   

chWorkSheet = chExcelApplication:Sheets:Item(1) NO-ERROR.
{EXCELFEL.I}
FIND FIRST markval NO-LOCK NO-ERROR.  
FIND FIRST marag NO-LOCK NO-ERROR. 

IF mall = 19 OR mall = 20 THEN DO:
   RUN LOGGORIN.P (INPUT "BODE", INPUT gurubilder,OUTPUT link).   
   IF link NE ? THEN RUN imageexcel2_UI .
END.

EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "FASTLOPNR"                   
inextradatatemp.HUVUDCH = marag.BETECKNING.                    
RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
FIND FIRST extradatatemp NO-LOCK NO-ERROR.
IF AVAILABLE extradatatemp THEN DO:      
   IF extradatatemp.SOKINT[1] NE 0 THEN DO:      
      /*markägarnummer sparat på fastigheten*/
      FIND FIRST marbuff WHERE marbuff.BETECKNING = marag.BETECKNING AND marbuff.MARKNR = extradatatemp.SOKINT[1] NO-LOCK NO-ERROR.
      IF AVAILABLE marbuff THEN DO:
         kontpers = marbuff.MARKAGARE.
      END.
      ELSE RUN ktakt_UI IN skprotapph (INPUT marag.BETECKNING,INPUT extradatatemp.SOKINT[1],OUTPUT kontpers).
      
   END.
END.

iColumn = 6.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.
chWorkSheet:Range(cRange):Value = fkommun NO-ERROR.
iColumn = 7.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.
chWorkSheet:Range(cRange):Value = markval.BETECKNING NO-ERROR.
IF globforetag = "PICA" OR globforetag = "tect" OR globforetag = "elpa" THEN DO:
   IF mall = 19 OR mall = 20 THEN DO:
      iColumn = 6.
      cColumn = STRING(iColumn).
      cRange = "F" + cColumn.
      chWorkSheet:Range(cRange):Value = "Bodens Energi Nät AB              " NO-ERROR.        
   END.
   ELSE DO:   
      cRange = "F" + cColumn.
      IF fkommun = "Haparanda" OR fkommun = "Kalix" OR fkommun = "Överkalix" OR fkommun =  "Övertorneå"   THEN DO:    
         chWorkSheet:Range(cRange):Value = "Näsbyn 4:15              " NO-ERROR.        
      END.
      IF fkommun = "Gällivare" OR fkommun = "Jokkmokk" OR fkommun = "Kiruna" OR fkommun =  "Pajala"   THEN DO:    
         chWorkSheet:Range(cRange):Value = "Videt 7                   " NO-ERROR.
      END.        
      IF fkommun = "Arvidsjaur" OR fkommun = "Arjeplog" OR fkommun = "Boden" OR fkommun =  "Piteå" OR fkommun =  "Älvsbyn"  THEN DO:    
         chWorkSheet:Range(cRange):Value = "Arvidsjaur 6:20           " NO-ERROR.
      END.
      IF fvaker = "Västerbottens län" OR fvaker = "Västernorrlands län" THEN DO:
         chWorkSheet:Range(cRange):Value = "Harrselsfors 1:22          " NO-ERROR.         
      END.
   END.
   
END.

IF globforetag = "VAST" OR globforetag = "Celpa" THEN DO:
  cRange = "F" + cColumn.
  IF omravd = 1 OR omravd = 2  THEN DO:    
     chWorkSheet:Range(cRange):Value = "Begonian 10                  " NO-ERROR.              
  END.
  IF omravd = 3 THEN DO:
     chWorkSheet:Range(cRange):Value = "Nyköpingsbruk 6              " NO-ERROR.                                                      
  END.
END.
IF globforetag = "tect" OR globforetag = "celpa" THEN DO:
   cRange = "F" + cColumn.
   chWorkSheet:Range(cRange):Value = "Harrselefors 1:22        " NO-ERROR.
END.
iColumn = 8.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.

IF allamark = "alla" THEN DO:
   IF globforetag = "TECT" OR globforetag = "PICA" OR globforetag = "GREL" OR globforetag = "ELPA"  THEN DO:
      IF kontpers NE "" THEN DO:
         chWorkSheet:Range(cRange):Value = kontpers NO-ERROR.
      END.
      ELSE DO:
         chWorkSheet:Range(cRange):Value = marag.MARKAGARE NO-ERROR.
      END.
   END.
   ELSE IF allnamn NE "" THEN DO:
      chWorkSheet:Range(cRange):Value = allnamn NO-ERROR.
   END.
   ELSE DO:
      chWorkSheet:Range(cRange):Value = marag.MARKAGARE NO-ERROR.
   END.
END.
ELSE DO:
   /*Bara en markägare till VP*/
   /*FOR EACH markval NO-LOCK:
      alnamn = alnamn + " " + markval.MARKAGARE.
   END.*/
   FIND FIRST markval NO-ERROR.
   chWorkSheet:Range(cRange):Value = markval.MARKAGARE NO-ERROR.
   iColumn = 37 - extrarad.
   cColumn = STRING(iColumn).
   cRange = "G" + cColumn.   
   chWorkSheet:Range(cRange):Value = adel NO-ERROR.
   iColumn = 36 - extrarad.
   cColumn = STRING(iColumn).
   cRange = "H" + cColumn.   
   chWorkSheet:Range(cRange):Value = adel NO-ERROR.
END.
{EXCELFEL.I}
IF mall = 9 THEN .
ELSE IF mall = 16 THEN .
ELSE DO:
   iColumn = 9.
   cColumn = STRING(iColumn).
   cRange = "B" + cColumn.
   IF globforetag = "TECT" OR globforetag = "PICA" OR globforetag = "GREL" OR globforetag = "ELPA"  THEN DO:
      IF AVAILABLE marbuff THEN DO:
         IF marbuff.PNR2 BEGINS "0000" THEN chWorkSheet:Range(cRange):Value = STRING(marbuff.PERSONNUMMER,"999999-9999") NO-ERROR.
         ELSE DO:
            ASSIGN          
            chWorkSheet:Range(cRange):Value = STRING(marbuff.PERSONNUMMER,"999999-9999") + " " + STRING(marbuff.PNR2,"999999-9999") NO-ERROR.      
         END.            
      END.
      ELSE DO:
         IF marag.PNR2 BEGINS "0000" THEN chWorkSheet:Range(cRange):Value = STRING(marag.PERSONNUMMER,"999999-9999") NO-ERROR.
         ELSE DO:
            ASSIGN          
            chWorkSheet:Range(cRange):Value = STRING(marag.PERSONNUMMER,"999999-9999") + " " + STRING(marag.PNR2,"999999-9999") NO-ERROR.      
         END.      
      END.
   END.
   ELSE IF allpersnr NE "" THEN DO:
      chWorkSheet:Range(cRange):Value = allpersnr NO-ERROR.
   END.
   ELSE DO:   
      IF marag.PNR2 BEGINS "0000" THEN chWorkSheet:Range(cRange):Value = STRING(marag.PERSONNUMMER,"999999-9999") NO-ERROR.
      ELSE DO:
         ASSIGN          
         chWorkSheet:Range(cRange):Value = STRING(marag.PERSONNUMMER,"999999-9999") + " " + STRING(marag.PNR2,"999999-9999") NO-ERROR.      
      END.      
   END.
END.
{EXCELFEL.I}
iColumn = 10 - extrarad.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.
chWorkSheet:Range(cRange):Value = marag.GATUADRESS NO-ERROR.
iColumn = 11 - extrarad.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.
chWorkSheet:Range(cRange):Value = marag.POSTNUMMER + " " + marag.POSTADRESS NO-ERROR.

iColumn = 11 - extrarad.
cColumn = STRING(iColumn).
cRange = "F" + cColumn.
chWorkSheet:Range(cRange):Value = vman NO-ERROR.


revkost = 0.
revtext = "".
{EXCELFEL.I}
EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "REVAVTAL"                   
inextradatatemp.HUVUDINT = marag.VARDNR
inextradatatemp.HUVUDCH = marag.BETECKNING.                          
RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
FOR EACH extradatatemp :         
   IF extradatatemp.SOKINT[1] = 1  THEN DO:            
      revtext = STRING(extradatatemp.SOKDEC[2]) + " m Zon1".       
   END.
   IF extradatatemp.SOKINT[1] = 2  THEN DO:          
      IF revtext = "" THEN revtext = revtext + STRING(extradatatemp.SOKDEC[2]) + " m Zon2". 
      ELSE revtext = revtext + "+ " + STRING(extradatatemp.SOKDEC[2]) + " m Zon2".       
   END.         
   revkost = revkost + extradatatemp.SOKDEC[3].
END.
iColumn = 21 - extrarad.
cColumn = STRING(iColumn).
cRange = "H" + cColumn.
IF revkost > 0 THEN DO:
   chWorkSheet:Range(cRange):Value = STRING(revkost,">>999") NO-ERROR.  
END.
iColumn = 21 - extrarad.
cColumn = STRING(iColumn).
cRange = "B" + cColumn.
IF revtext NE ""  THEN DO:
   chWorkSheet:Range(cRange):Value = revtext NO-ERROR.  
END.
IF revkost > 0 THEN DO:
   EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "REVADM"                   
   inextradatatemp.HUVUDINT = 1                    
   inextradatatemp.HUVUDCH = "1".                          
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp  NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO: 
      iColumn = 22 - extrarad.
      cColumn = STRING(iColumn).
      cRange = "B" + cColumn.   
      chWorkSheet:Range(cRange):Value = "Fast belopp väghållare" NO-ERROR.  
      iColumn = 22 - extrarad.
      cColumn = STRING(iColumn).
      cRange = "H" + cColumn.   
      chWorkSheet:Range(cRange):Value = extradatatemp.SOKDEC[1] NO-ERROR.        
   END.
END.
ELSE DO:

   iColumn = 22 - extrarad.
   cColumn = STRING(iColumn).
   cRange = "H" + cColumn.
   FIND FIRST sumtemp NO-LOCK NO-ERROR.
   IF AVAILABLE sumtemp THEN DO:           
      chWorkSheet:Range(cRange):Value = STRING((sumtemp.TSF - sumtemp.TSB + sumtemp.TSKF - sumtemp.TSKB),">>999") NO-ERROR.
   END.
   IF globforetag = "PICA" OR globforetag = "tect" OR globforetag = "ELPA"  THEN DO:
      /*storskog*/
      
      FIND FIRST svard WHERE svard.MARKTYP = "Norrlands inland" OR svard.MARKTYP = "Norrlands kustland" OR svard.MARKTYP = "Svealand" OR svard.MARKTYP = "Götaland" NO-LOCK NO-ERROR.
      IF NOT AVAILABLE svard THEN DO:
         /*dummy för excelfel*/
        FIND FIRST svard NO-LOCK NO-ERROR.
        IF NOT AVAILABLE svard  THEN DO:
           FIND FIRST sumtemp NO-LOCK NO-ERROR.
        END.
      END.
      ELSE DO:                 

         iColumn = 27 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "H" + cColumn.
         FIND FIRST sumtemp NO-LOCK NO-ERROR.
         IF AVAILABLE sumtemp THEN DO:                               
            IF (sumtemp.TILLAGG - ( sumtemp.ovrig - sumtemp.SMF - sumtemp.JKF - sumtemp.OMF)) > 0 THEN
            chWorkSheet:Range(cRange):Value = STRING((sumtemp.TILLAGG),">>999") NO-ERROR.
            /*måste lägga ut en tilläggspost för att få med  mellanskillnaden mellan tillägg för vanligt avtal och storskosavtalen
            tex 2500 - 15% */
            /*chWorkSheet:Range(cRange):Value = STRING((sumtemp.ovrig - sumtemp.TILLAGG),">>999") NO-ERROR.*/
         END.
         /*iColumn = 29 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "H" + cColumn.
         FIND FIRST sumtemp NO-LOCK NO-ERROR.
         IF AVAILABLE sumtemp THEN DO:       
            
            IF (sumtemp.TILLAGG - ( sumtemp.ovrig - sumtemp.SMF - sumtemp.JKF - sumtemp.OMF)) > 0 THEN
            chWorkSheet:Range(cRange):Value = STRING((sumtemp.TILLAGG - ( sumtemp.ovrig - sumtemp.SMF - sumtemp.JKF - sumtemp.OMF) ),">>999") NO-ERROR.
            /*måste lägga ut en tilläggspost för att få med  mellanskillnaden mellan tillägg för vanligt avtal och storskosavtalen
            tex 2500 - 15% */
            /*chWorkSheet:Range(cRange):Value = STRING((sumtemp.ovrig - sumtemp.TILLAGG),">>999") NO-ERROR.*/
         END.*/
      END.
   END.
   
END.
{EXCELFEL.I}
IF fnamn = "VP_Vattenfall2008.XLS" THEN DO:
   iColumn = 53.
   cColumn = STRING(iColumn).
   cRange = "B" + cColumn.
   IF globforetag = "TECT" OR globforetag = "PICA" OR globforetag = "GREL" OR globforetag = "ELPA"  THEN DO:
      IF kontpers NE "" THEN DO:
         chWorkSheet:Range(cRange):Value = kontpers NO-ERROR.
      END.
      ELSE DO:
         chWorkSheet:Range(cRange):Value = marag.MARKAGARE NO-ERROR.
      END.
   END.
   ELSE IF allnamn NE "" THEN DO:
      chWorkSheet:Range(cRange):Value = allnamn NO-ERROR.
   END.
   ELSE DO:
      chWorkSheet:Range(cRange):Value = marag.MARKAGARE NO-ERROR.
   END.
END.
ELSE IF fnamn = "VP_Vattenfall2009.XLS" THEN DO:
   
END.
ELSE DO:
 
   antag = 0.
   FOR EACH fastaga NO-LOCK:
      antag = antag + 1.
   END.
   IF antag LE 4 THEN DO:
      FIND FIRST fastaga NO-LOCK NO-ERROR.
      IF AVAILABLE fastaga THEN DO:
         iColumn = 51 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "B" + cColumn.
         chWorkSheet:Range(cRange):Value = fastaga.MARKAGARE NO-ERROR.
      END.
      FIND NEXT fastaga NO-LOCK NO-ERROR.
      IF AVAILABLE fastaga THEN DO:
         iColumn = 51 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "F" + cColumn.
         chWorkSheet:Range(cRange):Value = fastaga.MARKAGARE NO-ERROR.
      END.
      FIND NEXT fastaga NO-LOCK NO-ERROR.
      IF AVAILABLE fastaga THEN DO:
         iColumn = 53 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "B" + cColumn.
         chWorkSheet:Range(cRange):Value = fastaga.MARKAGARE NO-ERROR.
      END.
      FIND NEXT fastaga NO-LOCK NO-ERROR.
      IF AVAILABLE fastaga THEN DO:
         iColumn = 53 - extrarad.
         cColumn = STRING(iColumn).
         cRange = "F" + cColumn.
         chWorkSheet:Range(cRange):Value = fastaga.MARKAGARE NO-ERROR.
      END.
   END.
END.
{EXCELFEL.I}
FIND FIRST akevard WHERE akevard.MARKNR = marag.MARKNR AND akevard.BETECKNING = marag.BETECKNING
AND akevard.L5 = 1 AND akevard.STOLPNR NE 0 AND akevard.BENAMNING NE "" NO-LOCK NO-ERROR.
IF AVAILABLE   akevard THEN DO:
   iColumn = 22 - extrarad.
   cColumn = STRING(iColumn).
   cRange = "B" + cColumn.
   chWorkSheet:Range(cRange):Value = akevard.BENAMNING NO-ERROR.
END.

FIND FIRST sumtemp NO-LOCK NO-ERROR.
IF AVAILABLE sumtemp THEN DO:
   IF sumtemp.ROT > 0 THEN DO:
      iColumn = 29 - extrarad.
      cColumn = STRING(iColumn).
      cRange = "H" + cColumn.      
      chWorkSheet:Range(cRange):Value = STRING((sumtemp.ROT),">>>>99") NO-ERROR.
   END.
END.



chWorkSheet = chExcelApplication:Sheets:Item(2) NO-ERROR.
{EXCELFEL.I}
FIND FIRST markval NO-LOCK NO-ERROR.  
FIND FIRST marag NO-LOCK NO-ERROR.  

iColumn = 12.
cColumn = STRING(iColumn).
FOR EACH akevard WHERE akevard.MARKNR = markval.MARKNR AND akevard.BETECKNING = markval.BETECKNING
AND akevard.L5 = 0 AND akevard.STOLPNR NE 0 :
   {EXCELFEL.I}
   /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris*/
   IF akevard.FASTPRIS = TRUE AND akevard.KRONOR > 0 THEN iColumn = iColumn.
   ELSE DO:   
      cColumn = STRING(iColumn).
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akevard.STOLPNR,">>9") NO-ERROR.
      cRange = "B" + cColumn.
      chWorkSheet:Range(cRange):Value = akevard.BENAMNING NO-ERROR.
      cRange = "E" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akevard.L1,">>>9") NO-ERROR.   
      cRange = "G" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akevard.L2,">>>9") NO-ERROR.
      cRange = "I" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akevard.L3,">>>9") NO-ERROR.   
      IF akevard.SORT = "Åker" THEN DO:
         cRange = "J" + cColumn.
         chWorkSheet:Range(cRange):Value = "Å" NO-ERROR.
      END.
      IF akevard.SORT = "Betesmark" THEN DO:
         cRange = "J" + cColumn.
         chWorkSheet:Range(cRange):Value = "B" NO-ERROR.
      END.
      IF akevard.SORT = "Impediment" THEN DO:
         cRange = "J" + cColumn.
         chWorkSheet:Range(cRange):Value = "I" NO-ERROR.
      END.
   
      IF akevard.KR > 0 THEN DO:
         cRange = "L" + cColumn.
         chWorkSheet:Range(cRange):Value = "N" NO-ERROR.
      END.
      ELSE DO:
         cRange = "L" + cColumn.
         chWorkSheet:Range(cRange):Value = "B" NO-ERROR.
      END.
      iColumn = iColumn + 1.
      cColumn = STRING(iColumn).
   END.
END.

chWorkSheet = chExcelApplication:Sheets:Item(3).
iColumn = 13.
cColumn = STRING(iColumn).
FOR EACH svard WHERE svard.MARKNR = markval.MARKNR AND svard.BETECKNING = markval.BETECKNING BY svard.BESTAND:
   {EXCELFEL.I}
   /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris
   tectel har  50 års skognorm och lägger in priset fast  som ska med*/
   skogfast = FALSE.
   IF globforetag = "VAST" OR globforetag = "CELPA"  THEN DO:  
      IF svard.FASTPRIS = TRUE AND svard.KRONOR > 0 THEN skogfast = TRUE.
   END.
  
   IF globforetag = "TECT" OR globforetag = "PICA" OR globforetag = "ELPA"  THEN DO:  
      
      IF svard.FASTPRIS = TRUE AND svard.KRONOR > 0 THEN DO: 
         skogfast = TRUE.
         cColumn = STRING(iColumn).
         cRange = "A" + cColumn.
         chWorkSheet:Range(cRange):Value = STRING(svard.BESTAND,">>9") NO-ERROR.
         cRange = "L" + cColumn.
         chWorkSheet:Range(cRange):Value = STRING(svard.KRONOR,">>>>>9") NO-ERROR.         
         iColumn = iColumn + 1.
         cColumn = STRING(iColumn).                  
      END.
   END.
   
   /*IF svard.FASTPRIS = TRUE AND svard.KRONOR > 0 THEN iColumn = iColumn.*/
   IF skogfast = TRUE THEN skogfast = FALSE.
   ELSE DO:
      cColumn = STRING(iColumn).
      cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(svard.BESTAND,">>9") NO-ERROR.
      cRange = "B" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(svard.LANGD) NO-ERROR.
      cRange = "C" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(svard.BREDD) NO-ERROR.
      cRange = "E" + cColumn.
      chWorkSheet:Range(cRange):Value = svard.MARKTYP NO-ERROR.
      cRange = "F" + cColumn.
      IF svard.BESTTYP = "1" THEN chWorkSheet:Range(cRange):Value = "plantskog" NO-ERROR.
      IF svard.BESTTYP = "2" THEN chWorkSheet:Range(cRange):Value = "röjningsskog" NO-ERROR.
      IF svard.BESTTYP = "3" THEN chWorkSheet:Range(cRange):Value = "massavedskog" NO-ERROR.
      IF svard.BESTTYP = "4" THEN chWorkSheet:Range(cRange):Value = "yngre_timmerskog" NO-ERROR.
      IF svard.BESTTYP = "5A" THEN chWorkSheet:Range(cRange):Value = "äldre_timmerskog" NO-ERROR.
      IF svard.BESTTYP = "5B" THEN chWorkSheet:Range(cRange):Value = "kalmark" NO-ERROR.  
      cRange = "G" + cColumn.
      chWorkSheet:Range(cRange):Value = svard.SLENH.
      cRange = "H" + cColumn.         
      chWorkSheet:Range(cRange):Value = INTEGER(SUBSTRING(svard.BARRLOV,1,INDEX(svard.BARRLOV,".",1) - 1)) NO-ERROR.
      cRange = "I" + cColumn.         
      chWorkSheet:Range(cRange):Value = INTEGER(SUBSTRING(svard.BARRLOV,INDEX(svard.BARRLOV,".",1) + 1)) NO-ERROR.
      cRange = "J" + cColumn.
      IF svard.PROCENT < 100 AND svard.PROCENT > 0 THEN chWorkSheet:Range(cRange):Value = STRING(svard.PROCENT) NO-ERROR.
      ELSE chWorkSheet:Range(cRange):Value = STRING(100) NO-ERROR.
      
      IF svard.MARKTYP = "Norrlands inland" OR svard.MARKTYP = "Norrlands kustland" OR svard.MARKTYP = "Svealand" OR svard.MARKTYP = "Götaland" THEN DO:         
         
         cRange = "K" + cColumn.         
         chWorkSheet:Range(cRange):Value = STRING(svard.KR-HA,">>>>9") NO-ERROR.         
         cRange = "L" + cColumn.         
         chWorkSheet:Range(cRange):Value = STRING(svard.KRONOR,">>>>9") NO-ERROR.         
      END.
      /*svard.procent verkar inte laddas längre chWorkSheet:Range(cRange):Value = STRING(svard.PROCENT).*/
      
      
      iColumn = iColumn + 1.
      cColumn = STRING(iColumn).                  
   END.
   
END.

{EXCELFEL.I}
chWorkSheet = chExcelApplication:Sheets:Item(4)  NO-ERROR.
iColumn = 12.
cColumn = STRING(iColumn).
FOR EACH akekab WHERE akekab.MARKNR = markval.MARKNR AND akekab.BETECKNING = markval.BETECKNING:
   {EXCELFEL.I}
   /*Tillfällig skada regleras separat- dvs fast pris ska inte med förrutom borttaget intrång som jag har lagt som fast pris*/
   IF akekab.FASTPRIS = TRUE AND akekab.KRONOR > 0 THEN DO:
      IF globforetag = "PICA" OR globforetag = "tect"  OR globforetag = "ELPA"  THEN DO:  
         cColumn = STRING(iColumn).      
         cRange = "B" + cColumn.
         chWorkSheet:Range(cRange):Value = akekab.BENAMNING NO-ERROR.
         cRange = "H" + cColumn.
         chWorkSheet:Range(cRange):Value = STRING(akekab.KRONOR,">>>>9") NO-ERROR.   
         iColumn = iColumn + 1.
      END.
   END.
   ELSE DO:
      cColumn = STRING(iColumn).
      /*cRange = "A" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akevard.STOLPNR,">>9").*/
      cRange = "B" + cColumn.
      chWorkSheet:Range(cRange):Value = akekab.BENAMNING NO-ERROR.
      cRange = "D" + cColumn.
      chWorkSheet:Range(cRange):Value = STRING(akekab.L1,">>>9") NO-ERROR.   
      cRange = "E" + cColumn.
      IF akekab.L2 = 0 THEN chWorkSheet:Range(cRange):Value = STRING(1,">>>9") NO-ERROR.
      chWorkSheet:Range(cRange):Value = STRING(akekab.L2 + 1) NO-ERROR.
      iColumn = iColumn + 1.
      cColumn = STRING(iColumn).
   END.
END. */
                   
{EXCELFEL.I}                   
RELEASE OBJECT chExcelApplication NO-ERROR.      
RELEASE OBJECT chWorkbook NO-ERROR.
RELEASE OBJECT chWorksheet NO-ERROR.

IF VALID-HANDLE(skprotapph) THEN DELETE PROCEDURE skprotapph.      
skprotapph = ?.
IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.      
edataapph = ?.


/*PROCEDURE imageexcel2_UI.   
   ASSIGN iColumn = iColumn + 1.
   cColumn = STRING(iColumn).
   cRange = "H" + cColumn.
   chWorkSheet:Range(cRange):SELECT NO-ERROR.  
   IF link NE  ? THEN DO:
      chWorksheetRange = chWorkSheet:Pictures:INSERT(link) NO-ERROR.
      chWorksheetRange:TOP = 1.
      chWorksheetRange:LEFT = 280.
   END.
   chExcelApplication:VISIBLE = TRUE NO-ERROR.
   ASSIGN iColumn = iColumn + 7.
   {EXCELFEL.I}
END PROCEDURE.*/


