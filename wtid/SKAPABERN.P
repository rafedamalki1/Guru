/*SKAPABERN.P*/
{APP.I}
&Scoped-define NEW NEW
{TIDALLT.I}
DEFINE NEW SHARED VARIABLE reco AS RECID NO-UNDO. 
DEFINE VARIABLE datb AS DATE NO-UNDO.
DEFINE VARIABLE data AS DATE NO-UNDO.             
DEFINE VARIABLE utrrec AS RECID  NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
DEFINE VARIABLE my1hand AS WIDGET-HANDL NO-UNDO.
DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
DEFINE VARIABLE antal_raknare AS INTEGER NO-UNDO.
DEFINE VARIABLE overant AS INTEGER NO-UNDO.
DEFINE VARIABLE otim AS INTEGER NO-UNDO.
DEFINE VARIABLE otim2 AS INTEGER NO-UNDO.
DEFINE VARIABLE regdagspar AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE VARIABLE regdatumspar AS DATE NO-UNDO.
DEFINE VARIABLE beredst LIKE BEREDSKAPSTART.BEREDSKAPSTART NO-UNDO.
DEFINE VARIABLE beredsl LIKE BEREDSKAPSTART.BEREDSKAPSLUT NO-UNDO.
DEFINE VARIABLE beredstg LIKE BEREDSKAPSTART.BEREDSKAPSTART NO-UNDO.
DEFINE VARIABLE beredslg LIKE BEREDSKAPSTART.BEREDSKAPSLUT NO-UNDO.
DEFINE VARIABLE beredsts AS INTEGER NO-UNDO.
DEFINE VARIABLE beredsls AS INTEGER NO-UNDO.
DEFINE VARIABLE beantal LIKE TIDREGITAB.BERANTAL.
DEFINE VARIABLE bantal LIKE TIDREGITAB.BERANTAL.
DEFINE VARIABLE berednr AS INTEGER NO-UNDO.
DEFINE VARIABLE krav AS LOGICAL NO-UNDO.
DEFINE VARIABLE antal AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE bant AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE hjadat AS DATE NO-UNDO.
DEFINE VARIABLE hjbdat AS DATE NO-UNDO. 
DEFINE VARIABLE hoj AS LOGICAL NO-UNDO. 
DEFINE VARIABLE bperiod AS INTEGER NO-UNDO.  
DEFINE VARIABLE kolldatum AS DATE NO-UNDO.
DEFINE VARIABLE ovkod LIKE OVERKOD.OVERTIDTILL NO-UNDO.
DEFINE VARIABLE regdat1 AS DATE NO-UNDO.   
DEFINE VARIABLE regdat2 AS DATE NO-UNDO.
DEFINE VARIABLE busl3 LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE VARIABLE regvnr9 AS INTEGER FORMAT "999" NO-UNDO.
DEFINE VARIABLE bjour AS LOGICAL NO-UNDO.
DEFINE VARIABLE hfaktor AS LOGICAL NO-UNDO.
DEFINE VARIABLE bereavt LIKE PERSONALTAB.BEREDSKAPSAVTAL NO-UNDO.
DEFINE VARIABLE bhjdat AS DATE NO-UNDO.
DEFINE VARIABLE berantal AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE berslut AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE hj3adat AS DATE NO-UNDO.
DEFINE VARIABLE hj3bdat AS DATE NO-UNDO.
DEFINE VARIABLE bbdatum AS DATE NO-UNDO.
DEFINE VARIABLE avbdatum AS DATE NO-UNDO.
DEFINE VARIABLE hjforstedat AS DATE NO-UNDO.
DEFINE VARIABLE hjsistfdat AS DATE NO-UNDO.
DEFINE VARIABLE tatdagar AS INTEGER NO-UNDO.
DEFINE VARIABLE hjdatum AS DATE NO-UNDO.
DEFINE VARIABLE hjstart AS DECIMAL NO-UNDO.
DEFINE VARIABLE hjslut AS DECIMAL NO-UNDO.
DEFINE VARIABLE skift AS LOGICAL NO-UNDO.
DEFINE QUERY ordq FOR BEREDSKAPTAB.
DEFINE QUERY avikq FOR BEREDSKAPAV.  
DEFINE QUERY utryck FOR TIDREGITAB. 
DEFINE QUERY tidq FOR TIDREGITAB.
DEFINE BUFFER tidbuff FOR TIDREGITAB.
DEFINE BUFFER tidbufffo FOR TIDREGITAB.
DEFINE BUFFER tidbuffef FOR TIDREGITAB.
DEFINE BUFFER okodbuff FOR OVERKOD.
DEFINE NEW SHARED TEMP-TABLE ohjalp
 FIELD ODATUM LIKE TIDREGITAB.DATUM 
 FIELD OSTART LIKE TIDREGITAB.START
 FIELD OSLUT LIKE TIDREGITAB.SLUT 
 FIELD OKOD1 LIKE TIDREGITAB.OKOD1
 FIELD OANT1 LIKE TIDREGITAB.OANT1
 FIELD OST1 LIKE TIDREGITAB.START 
 FIELD OSL1 LIKE TIDREGITAB.SLUT
 FIELD OKOD2 LIKE TIDREGITAB.OKOD2 
 FIELD OANT2 LIKE TIDREGITAB.OANT2
 FIELD OST2 LIKE TIDREGITAB.START 
 FIELD OSL2 LIKE TIDREGITAB.SLUT
 FIELD OKOD3 LIKE TIDREGITAB.OKOD3 
 FIELD OANT3 LIKE TIDREGITAB.OANT3
 FIELD OST3 LIKE TIDREGITAB.START 
 FIELD OSL3 LIKE TIDREGITAB.SLUT
 FIELD OTOTALT LIKE TIDREGITAB.TOTALT 
 FIELD OOVERAUTO LIKE TIDREGITAB.OVERAUTO 
 FIELD OENKE LIKE OVERKOD.ENKEL
 FIELD OAONR LIKE TIDREGITAB.AONR 
 FIELD ODELNR LIKE TIDREGITAB.DELNR 
 FIELD OETOT LIKE TIDREGITAB.TOTALT 
 FIELD OUTR LIKE TIDREGITAB.UTRYCKNING 
 FIELD RECTIDVIS AS RECID
 FIELD OVERTIDUTTAG LIKE TIDREGITAB.OVERTIDUTTAG
 FIELD OAVBE LIKE TIDREGITAB.LAGANTAL
 INDEX ODATUM IS PRIMARY ODATUM ASCENDING OSTART ASCENDING.
DEFINE TEMP-TABLE bhjalp
   FIELD BEREDSKAP LIKE TIDREGITAB.BEREDSKAP
   FIELD BERANTAL LIKE TIDREGITAB.BERANTAL
   FIELD BERBYT LIKE BHOJ.BERBYT
   FIELD RECTIDVIS AS RECID
   FIELD MULTIP AS DECIMAL
   FIELD DATUM LIKE TIDREGITAB.DATUM.
                  
DEFINE TEMP-TABLE ordinarie
   FIELD DATUM AS DATE
   FIELD DAGNR LIKE BEREDSKAPTAB.DAGNR
   FIELD BEREDSKAP LIKE BEREDSKAPTAB.BEREDSKAP
   FIELD BERSTART1 LIKE BEREDSKAPTAB.BERSTART1
   FIELD BERSTOPP1 LIKE BEREDSKAPTAB.BERSTOPP1
   FIELD BERANTAL LIKE BEREDSKAPTAB.BERANTAL
   INDEX BERED IS PRIMARY DAGNR BERSTART1 BERSTOPP1 ASCENDING.      
DEFINE TEMP-TABLE avikelse
   FIELD DATUM LIKE BEREDSKAPAV.DATUM
   FIELD BEREDSKAP LIKE BEREDSKAPAV.BEREDSKAP
   FIELD BERSTART1 LIKE BEREDSKAPAV.BERSTART1
   FIELD BERSTOPP1 LIKE BEREDSKAPAV.BERSTOPP1
   FIELD BERANTAL LIKE BEREDSKAPAV.BERANTAL
   INDEX BERAV IS PRIMARY DATUM BERSTART1 BERSTOPP1 ASCENDING.
{SKABERUT.I}
FIND FIRST bertemp NO-LOCK NO-ERROR.
IF NOT AVAILABLE bertemp THEN DO:   
   RETURN.
END.
ASSIGN 


bdatum = bertemp.BDATUM  
avdatum = bertemp.AVDATUM.
bjour = bertemp.JOUR.
hfaktor = bertemp.FAKTOR.
FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = bertemp.PKOD AND 
PERSONALTAB.AKTIV = TRUE USE-INDEX PERSONALKOD NO-LOCK NO-ERROR.  
persrec = RECID(PERSONALTAB).
FIND FIRST ANSTFORMTAB WHERE ANSTFORM.ANSTALLNING = PERSONALTAB.ANSTALLNING
USE-INDEX ANSTF NO-LOCK NO-ERROR.

RUN skapstart_UI.
RUN bertolk_UI.
IF bertemp.BERBEORD = TRUE THEN DO: 
   FIND FIRST BERHOJN WHERE BERHOJN.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL USE-INDEX BERHOJ NO-LOCK NO-ERROR.
   IF AVAILABLE BERHOJN THEN DO:      
      ASSIGN
      bdatum = bertemp.BDATUM  
      avdatum = bertemp.AVDATUM.
      FIND FIRST BERHOJN WHERE BERHOJN.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL USE-INDEX BERHOJ NO-LOCK NO-ERROR.
      IF BERHOJN.PERIOD = TRUE THEN DO:
         RUN berhfasta_UI.
      END.
      ELSE DO:
         RUN berhoj_UI.
      END. 
   END.   
END.                  

IF bertemp.DATUM1 GE 11/01/2010 THEN DO:
   IF Guru.Konstanter:globforetag = "LULE" AND ( PERSONALTAB.BEREDSKAPSAVTAL = "MV" OR PERSONALTAB.BEREDSKAPSAVTAL = "MS") THEN DO:
      FIND FIRST LONTILL WHERE LONTILL.KOD = ANSTFORMTAB.KOD AND
      LONTILL.LONTILLAGG = "324" NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL THEN DO:   
         CREATE TIDREGITAB.           
         ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
         SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEROST" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
         TIDREGITAB.DATUM = bertemp.DATUM1 
         TIDREGITAB.VECKONUMMER = bertemp.VECKA
         TIDREGITAB.DAG = bertemp.DAG 
         TIDREGITAB.AONR = bertemp.AONR
         TIDREGITAB.DELNR = bertemp.DELNR 
         TIDREGITAB.START = 7.00
         TIDREGITAB.SLUT = 7.00 
         TIDREGITAB.TIDLOG = FALSE
         TIDREGITAB.LONTILLAGG = "324"
         TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
         TIDREGITAB.LONTILLANTAL = 1
         TIDREGITAB.LONAUTO = FALSE.
      END.
   END.
   IF Guru.Konstanter:globforetag = "ELPA" AND ( PERSONALTAB.BEREDSKAPSAVTAL = "TM" OR PERSONALTAB.BEREDSKAPSAVTAL = "TN") THEN DO:
      FIND FIRST LONTILL WHERE LONTILL.KOD = ANSTFORMTAB.KOD AND
      LONTILL.LONTILLAGG = "324" NO-LOCK NO-ERROR.
      IF AVAILABLE LONTILL THEN DO:   
         CREATE TIDREGITAB.           
         ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
         SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEROST" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
         TIDREGITAB.DATUM = bertemp.DATUM1 
         TIDREGITAB.VECKONUMMER = bertemp.VECKA
         TIDREGITAB.DAG = bertemp.DAG 
         TIDREGITAB.AONR = bertemp.AONR
         TIDREGITAB.DELNR = bertemp.DELNR 
         TIDREGITAB.START = 7.00
         TIDREGITAB.SLUT = 7.00 
         TIDREGITAB.TIDLOG = FALSE
         TIDREGITAB.LONTILLAGG = "324"
         TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
         TIDREGITAB.LONTILLANTAL = 1
         TIDREGITAB.LONAUTO = FALSE.
      END.
   END.
END.

/* **********************  Internal Procedures  *********************** */

PROCEDURE berhfasta_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/    
   FIND FIRST BERHOJN WHERE BERHOJN.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL USE-INDEX BERHOJN NO-LOCK NO-ERROR.
   IF BERHOJN.VECKOR  > 0 THEN DO:  /*FASTA 4 VECKOR VATTENFALL*/
      regdatum = bdatum.
      RUN REGVEC.P.
      IF regvnr < 10 THEN DO:
         IF regvnr = 1 THEN bperiod = 0.
         ELSE bperiod = TRUNCATE(DECIMAL(SUBSTRING(STRING(regvnr - 1),1,1)) / BERHOJN.VECKOR,0). 
         bperiod = bperiod * BERHOJN.VECKOR + 1.     
         IF bperiod < 10 THEN DO:
           regvnr = integer( "00" + SUBSTRING(STRING(bperiod),1,2)).
         END.
         ELSE IF bperiod > 10 THEN DO:
           regvnr = INTEGER( "0" + SUBSTRING(STRING(bperiod),1,2)).
         END.
      END.
      ELSE IF regvnr < 53 THEN DO:
         bperiod = TRUNCATE(DECIMAL(SUBSTRING(STRING(regvnr - 1),1,2)) / BERHOJN.VECKOR,0). 
         bperiod = bperiod * BERHOJN.VECKOR + 1.     
         IF bperiod < 10 THEN DO:
           regvnr = integer( "00" + SUBSTRING(STRING(bperiod),1,2)).
         END.
         ELSE IF bperiod > 10 THEN DO:
           regvnr = INTEGER( "0" + SUBSTRING(STRING(bperiod),1,2)).
         END.
      END.
      ELSE DO:   
         bperiod = TRUNCATE(DECIMAL(SUBSTRING(STRING(regvnr - 1),2,2)) / BERHOJN.VECKOR,0). 
         bperiod = bperiod * BERHOJN.VECKOR + 1.
         IF bperiod = 0 THEN bperiod = 1.
         IF bperiod < 10 THEN DO:
           regvnr = integer(SUBSTRING(STRING(regvnr),1,1) + "0" + SUBSTRING(STRING(bperiod),1,2)).
         END.
         ELSE IF bperiod > 10 THEN DO:
           regvnr = INTEGER(SUBSTRING(STRING(regvnr),1,1) + SUBSTRING(STRING(bperiod),1,2)).
         END.
      END.     
      regdagnamn = "MÅN".
      RUN VECODAT.P.           
      ASSIGN
      hjadat = regdatum
      hjbdat = hjadat + ( 7 * BERHOJN.VECKOR ) - 1
      kolldatum = hjadat.   
      STOR:
      REPEAT:                      
         IF kolldatum > hjbdat THEN LEAVE STOR.      
         OPEN QUERY tidq 
         FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = bertemp.PKOD AND 
         TIDREGITAB.DATUM = kolldatum AND
         TIDREGITAB.BERBEORD = TRUE AND TIDLOG = FALSE USE-INDEX PKOD NO-LOCK.
         GET FIRST tidq NO-LOCK.
         DO WHILE AVAILABLE(TIDREGITAB):
            IF TIDREGITAB.BEREDSKAP = "" THEN musz = musz.
            ELSE DO:
               CREATE bhjalp.
               ASSIGN bhjalp.RECTIDVIS = RECID(TIDREGITAB)
               bhjalp.DATUM = TIDREGITAB.DATUM
               bhjalp.BEREDSKAP = TIDREGITAB.BEREDSKAP
               bhjalp.BERANTAL = TIDREGITAB.BERANTAL.
            END. 
            GET NEXT tidq NO-LOCK. 
         END.    
         CLOSE QUERY tidq.   
         kolldatum = kolldatum + 1.
      END.     
      antal = 0.
      bant = 0.
      FIND FIRST bhjalp WHERE bhjalp.DATUM LE hjbdat NO-LOCK NO-ERROR.
      IF AVAILABLE bhjalp THEN DO:      
         IF bhjalp.BERANTAL > 3 AND bhjalp.BERANTAL < 9 
         THEN bant = bant + 0.5.
         ELSE IF bhjalp.BERANTAL GE 9 THEN bant = bant + 1.  
         bhjdat = bhjalp.DATUM.      
      END.  
      bhoj:
      REPEAT:
         FIND NEXT bhjalp WHERE bhjalp.DATUM LE hjbdat NO-LOCK NO-ERROR.
         IF NOT AVAILABLE bhjalp THEN LEAVE bhoj.
         IF bhjalp.DATUM NE bhjdat THEN DO:
            antal = antal + bant.
            bant = 0.
         END.   
         IF bhjalp.DATUM = bhjdat AND bant GE 1 THEN bant = 1.      
         ELSE IF bhjalp.BERANTAL > 3 AND bhjalp.BERANTAL < 9 THEN DO:      
            bant = bant + 0.5.
         END. 
         ELSE IF bhjalp.BERANTAL GE 9 THEN DO:
            bant = bant + 1 .
         END.        
         IF bant + antal > 7 AND bhjalp.datum GE bdatum THEN DO:         
            FIND FIRST BHOJ WHERE BHOJ.KOD = bhjalp.BEREDSKAP NO-LOCK NO-ERROR.
            ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.        
         END.     
         ASSIGN bhjdat = bhjalp.DATUM.
      END.
      FOR EACH bhjalp NO-LOCK:
         IF bhjalp.BERBYT = "" THEN NEXT.
         DO TRANSACTION:
            FIND TIDREGITAB WHERE RECID(TIDREGITAB) = bhjalp.RECTIDVIS EXCLUSIVE-LOCK NO-ERROR.
            ASSIGN TIDREGITAB.BEREDSKAP = bhjalp.BERBYT.
            VALIDATE TIDREGITAB.
         END.
      END.   
   END.  
   ELSE DO:  /*  FASTA MÅNADER  ES HELSINGBORG*/
      ASSIGN
      hjadat = DATE(MONTH(bdatum),01,YEAR(bdatum)).
      IF MONTH(hjadat) = 12 THEN DO:
         hjbdat = DATE(12,31,YEAR(hjadat)).
      END.   
      ELSE DO:
         hjbdat = DATE((MONTH(bdatum) + 1 ),01,YEAR(bdatum)) - 1.
      END.   
      kolldatum = hjadat.   
      STOR:
      REPEAT:                      
         IF kolldatum > hjbdat THEN LEAVE STOR.      
         OPEN QUERY tidq 
         FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = bertemp.PKOD AND 
         TIDREGITAB.DATUM = kolldatum AND
         TIDREGITAB.BERBEORD = TRUE AND TIDLOG = FALSE USE-INDEX PKOD NO-LOCK.
         GET FIRST tidq NO-LOCK.
         DO WHILE AVAILABLE(TIDREGITAB):
            IF TIDREGITAB.BEREDSKAP = "" THEN musz = musz.
            ELSE DO:
               nytid = TIDREGITAB.BERANTAL.
               RUN TIMSEK.P.
               CREATE bhjalp.
               ASSIGN bhjalp.RECTIDVIS = RECID(TIDREGITAB)
               bhjalp.DATUM = TIDREGITAB.DATUM
               bhjalp.BEREDSKAP = TIDREGITAB.BEREDSKAP
               bhjalp.BERANTAL = sekunder.
            END. 
            GET NEXT tidq NO-LOCK. 
         END.    
         CLOSE QUERY tidq.   
         kolldatum = kolldatum + 1.
      END.     
      antal = 0.
      bant = 0.
      FIND FIRST bhjalp WHERE bhjalp.DATUM LE hjbdat NO-LOCK NO-ERROR.
      IF AVAILABLE bhjalp THEN DO:      
         bant = bhjalp.BERANTAL.          
         bhjdat = bhjalp.DATUM.
      END.  
      bhoj:
      REPEAT:
         FIND NEXT bhjalp WHERE bhjalp.DATUM LE hjbdat NO-LOCK NO-ERROR.
         IF NOT AVAILABLE bhjalp THEN LEAVE bhoj.
         bant = bant + bhjalp.BERANTAL.
         IF bant >  150 * 3600 AND bhjalp.datum GE bdatum THEN DO:         
            IF bant - bhjalp.BERANTAL < 150 * 3600 THEN DO: /* BRYTREGISTRERING 148-152 TIM*/
               bhjalp.BERANTAL = bhjalp.BERANTAL - bant + ( 150 * 3600 ).
            END.
            ELSE bhjalp.BERANTAL = 0.                           
            FIND FIRST BHOJ WHERE BHOJ.KOD = bhjalp.BEREDSKAP USE-INDEX BKOD NO-LOCK NO-ERROR.
            FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL
            AND BERKOD.BEREDSKAP = BHOJ.BERBYT NO-LOCK NO-ERROR.
            IF NOT AVAILABLE BERKOD THEN DO:
               bkod:
               REPEAT:
                  FIND NEXT BHOJ WHERE BHOJ.KOD = bhjalp.BEREDSKAP NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE BHOJ THEN LEAVE bkod.
                  FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL
                  AND BERKOD.BEREDSKAP = BHOJ.BERBYT NO-LOCK NO-ERROR.
                 IF NOT AVAILABLE BERKOD THEN NEXT bkod.
                  ELSE DO:
                     ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.
                     LEAVE bkod.
                  END.   
               END.   
            END.
            ELSE ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.            
         END.  
         ASSIGN bhjdat = bhjalp.DATUM.
      END.
      FOR EACH bhjalp NO-LOCK:
         IF bhjalp.BERBYT = "" THEN NEXT.
         IF bhjalp.BERANTAL = 0 THEN DO TRANSACTION:
            FIND TIDREGITAB WHERE RECID(TIDREGITAB) = bhjalp.RECTIDVIS EXCLUSIVE-LOCK NO-ERROR.
            ASSIGN TIDREGITAB.BEREDSKAP = bhjalp.BERBYT.
            VALIDATE TIDREGITAB.
         END.
         ELSE DO TRANSACTION:
            FIND TIDREGITAB WHERE RECID(TIDREGITAB) = bhjalp.RECTIDVIS EXCLUSIVE-LOCK NO-ERROR.
            ASSIGN
            berslut = TIDREGITAB.BEREDSKAPSLUT
            berantal = TIDREGITAB.BERANTAL.            
            nytid = TIDREGITAB.BEREDSKAPSTART.
            RUN TIMSEK.P.
            sekunder = sekunder + bhjalp.BERANTAL.
            RUN SEKTIM.P.
            ASSIGN 
            TIDREGITAB.BEREDSKAPSLUT = nytid.
            sekunder = bhjalp.BERANTAL.
            RUN SEKTIM.P.
            TIDREGITAB.BERANTAL = nytid.            
            CREATE tidbuff.
            nytid = berantal.
            RUN TIMSEK.P.
            sekunder = sekunder - bhjalp.BERANTAL.
            RUN SEKTIM.P.
            ASSIGN tidbuff.BERANTAL = nytid
            tidbuff.PERSONALKOD = TIDREGITAB.PERSONALKOD
            SUBSTRING(tidbuff.PROGRAM,1,158) = "BEROSL" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
            tidbuff.DATUM = TIDREGITAB.DATUM 
            tidbuff.VECKONUMMER = TIDREGITAB.VECKONUMMER
            tidbuff.DAG = TIDREGITAB.DAG 
            tidbuff.START = 7.00
            tidbuff.SLUT = 7.00 
            tidbuff.AONR = TIDREGITAB.AONR
            tidbuff.DELNR = TIDREGITAB.DELNR
            tidbuff.TIDLOG = FALSE
            tidbuff.BEREDSKAP = bhjalp.BERBYT
            tidbuff.ANVANDARE = TIDREGITAB.ANVANDARE
            tidbuff.BERBEORD = TIDREGITAB.BERBEORD
            tidbuff.BEREDSKAPSTART = TIDREGITAB.BEREDSKAPSLUT
            tidbuff.BEREDSKAPSLUT = berslut. 
            VALIDATE TIDREGITAB.
            VALIDaTE tidbuff.                  
         END.   
      END.   
   END.  

END PROCEDURE.

PROCEDURE berhoj_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   FIND FIRST BERHOJN  WHERE BERHOJN.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL USE-INDEX BERHOJN NO-LOCK NO-ERROR.
   ASSIGN
   tatdagar = 7 * BERHOJN.VECKOR
   hjadat = bdatum - tatdagar
   hjbdat = avdatum + tatdagar
   bbdatum = bdatum
   avbdatum = avdatum.
   hoj = FALSE.
   
   FIND LAST tidbufffo WHERE tidbufffo.PERSONALKOD = bertemp.PKOD AND 
   tidbufffo.DATUM GE hjadat AND tidbufffo.DATUM < bdatum AND
   tidbufffo.BEREDSKAP NE ""  AND tidbufffo.BERBEORD = TRUE
   USE-INDEX PKOD NO-LOCK NO-ERROR.
   IF AVAILABLE tidbufffo THEN DO:  
      hoj = TRUE.            
      hjsistfdat = tidbufffo.DATUM.
      IF avdatum > hjsistfdat + tatdagar THEN avbdatum = hjsistfdat + tatdagar.      
   END.
   FIND FIRST tidbuffef WHERE tidbuffef.PERSONALKOD = bertemp.PKOD AND 
   tidbuffef.DATUM > avdatum AND tidbuffef.DATUM LE hjbdat AND
   tidbuffef.BEREDSKAP NE "" AND tidbuffef.BERBEORD = TRUE
   USE-INDEX PKOD NO-LOCK NO-ERROR.
   IF AVAILABLE tidbuffef THEN DO:  
      hoj = TRUE.            
      hjforstedat = tidbuffef.DATUM.
      IF bdatum < hjforstedat - tatdagar THEN bbdatum = hjforstedat - tatdagar.      
   END.
   IF hoj = TRUE THEN DO:                   
      musz = FALSE.
      IF Guru.Konstanter:globforetag = "GRAN"  THEN DO:
         FIND FIRST BEREDSKAPTAB WHERE BEREDSKAPTAB.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
         IF AVAILABLE BEREDSKAPTAB THEN DO.
            IF BEREDSKAPTAB.BERANTAL > 0 THEN musz = TRUE.
         END.
      END.
      IF musz = TRUE THEN DO:         
         musz = FALSE.         
         kolldatum = bbdatum.
         STOR2:
         REPEAT:                      
            IF kolldatum > avbdatum THEN LEAVE STOR2.         
            OPEN QUERY tidq 
            FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = bertemp.PKOD AND 
            TIDREGITAB.DATUM = kolldatum AND
            TIDREGITAB.BERBEORD = TRUE AND TIDREGITAB.TIDLOG = FALSE USE-INDEX PKOD NO-LOCK.        
            GET FIRST tidq NO-LOCK.
            DO WHILE AVAILABLE(TIDREGITAB):      
               musz = FALSE.
               IF Guru.Konstanter:globforetag = "GRAN"  THEN DO:
                  FIND FIRST BEREDSKAPTAB WHERE BEREDSKAPTAB.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
                  IF AVAILABLE BEREDSKAPTAB THEN DO.
                     IF BEREDSKAPTAB.BERANTAL > 0 THEN DO:                                             
                        IF avdatum NE avbdatum AND kolldatum = avbdatum THEN DO:
                           IF tidbufffo.BEREDSKAPSTART = 00 AND TIDREGITAB.BEREDSKAPSLUT = 24
                           AND TIDREGITAB.BEREDSKAPSTART NE 00 THEN musz = TRUE.
                        END.
                        IF bdatum NE bbdatum AND kolldatum = bbdatum THEN DO:
                           IF tidbuffef.BEREDSKAPSLUT = 24 AND TIDREGITAB.BEREDSKAPSTART = 00
                           AND TIDREGITAB.BEREDSKAPSLUT NE 24 THEN musz = TRUE.
                        END.
                     END.
                  END.
               END.               
               IF TIDREGITAB.BEREDSKAP = "" THEN musz = TRUE.
               IF PERSONALTAB.BEREDSKAPSAVTAL = "R0" OR PERSONALTAB.BEREDSKAPSAVTAL = "J0" THEN DO:           
                  IF TIDREGITAB.BEREDSKAP = "387" THEN musz = TRUE.
               END.
               IF musz = TRUE THEN musz = FALSE.
               ELSE DO:
                  CREATE bhjalp.
                  ASSIGN bhjalp.RECTIDVIS = RECID(TIDREGITAB)
                  bhjalp.DATUM = TIDREGITAB.DATUM
                  bhjalp.BEREDSKAP = TIDREGITAB.BEREDSKAP
                  bhjalp.BERANTAL = TIDREGITAB.BERANTAL
                  bhjalp.MULTIP = 0.  
               END.
               GET NEXT tidq NO-LOCK.   
            END. 
            CLOSE QUERY tidq.    
            kolldatum = kolldatum + 1.
        END.            
        FOR EACH bhjalp:  
          bhjalp.MULTIP = 1.25.
        END.
        IF PERSONALTAB.BEREDSKAPSAVTAL = "R0" OR PERSONALTAB.BEREDSKAPSAVTAL = "J0" THEN DO:           
           ASSIGN
           hj3adat = bdatum - ( 7 * ( BERHOJN.VECKOR - 1 ))
           hj3bdat = avdatum + ( 7 * ( BERHOJN.VECKOR - 1 )).
           /*kollar om hela veckan skall förhöjas*/
           IF hjsistfdat > hj3adat OR hjforstedat <  hj3bdat THEN DO:
              IF hjsistfdat > hj3adat THEN DO:
                 IF (hjsistfdat - hj3adat) < 7 THEN DO:
                    avbdatum = avbdatum - (7 - (hjsistfdat - hj3adat)).
                 END.
              END.
              IF hjforstedat <  hj3bdat THEN DO:
                 IF (hj3bdat - hjforstedat ) < 7 THEN DO:
                    bbdatum = bbdatum + (7 - (hj3bdat - hjforstedat )).
                 END.
              END.           
              FOR EACH bhjalp WHERE bhjalp.DATUM GE bbdatum AND bhjalp.DATUM LE avbdatum:
                ASSIGN bhjalp.MULTIP = 1.5.
              END.         
           END.
        END.
        FOR EACH bhjalp NO-LOCK:
           IF bhjalp.MULTIP = 0 THEN NEXT.
           DO TRANSACTION:
              FIND FIRST TIDREGITAB WHERE RECID(TIDREGITAB) = bhjalp.RECTIDVIS 
              EXCLUSIVE-LOCK NO-ERROR.
              IF bhjalp.MULTIP = 1.25 AND TIDREGITAB.BERANTAL = 0.5 AND TIDREGITAB.BEREDSKAPSTART = 00.00 THEN DO: 
                 /*varannan gång 0.62 och varannan gång 0.63 = 1.25*/
                 ASSIGN TIDREGITAB.BERANTAL = 0.62.
              END.
              ELSE ASSIGN TIDREGITAB.BERANTAL = TIDREGITAB.BERANTAL * bhjalp.MULTIP.
           END.
        END.
      END.
      ELSE DO:               
         kolldatum = bbdatum.
         STOR2:
         REPEAT:                      
            IF kolldatum > avbdatum THEN LEAVE STOR2.         
            OPEN QUERY tidq 
            FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = bertemp.PKOD AND 
            TIDREGITAB.DATUM = kolldatum AND
            TIDREGITAB.BERBEORD = TRUE AND TIDREGITAB.TIDLOG = FALSE USE-INDEX PKOD NO-LOCK.        
            GET FIRST tidq NO-LOCK.
            DO WHILE AVAILABLE(TIDREGITAB):      
               musz = FALSE.
               IF avdatum NE avbdatum AND kolldatum = avbdatum THEN DO:
                  IF TIDREGITAB.BEREDSKAPSTART GE tidbufffo.BEREDSKAPSLUT THEN musz = TRUE.
               END.
               IF bdatum NE bbdatum AND kolldatum = bbdatum THEN DO:
                  IF TIDREGITAB.BEREDSKAPSLUT GE tidbuffef.BEREDSKAPSTART THEN musz = TRUE.                   
               END.
               IF TIDREGITAB.BEREDSKAP = "" THEN musz = TRUE.
               IF musz = TRUE THEN musz = FALSE.
               ELSE DO:
                  CREATE bhjalp.
                  ASSIGN bhjalp.RECTIDVIS = RECID(TIDREGITAB)
                  bhjalp.BEREDSKAP = TIDREGITAB.BEREDSKAP
                  bhjalp.BERANTAL = TIDREGITAB.BERANTAL.  
               END.
               GET NEXT tidq NO-LOCK.   
            END. 
            CLOSE QUERY tidq.    
            kolldatum = kolldatum + 1.
        END.            
        FOR EACH bhjalp:  
           FIND FIRST BHOJ WHERE BHOJ.KOD = bhjalp.BEREDSKAP USE-INDEX BKOD NO-LOCK NO-ERROR.
           FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL
           AND BERKOD.BEREDSKAP = BHOJ.BERBYT NO-LOCK NO-ERROR.
           IF NOT AVAILABLE BERKOD THEN DO:
              bkod:
              REPEAT:
                 FIND NEXT BHOJ WHERE BHOJ.KOD = bhjalp.BEREDSKAP NO-LOCK NO-ERROR.
                 IF NOT AVAILABLE BHOJ THEN LEAVE bkod.
                 FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL
                 AND BERKOD.BEREDSKAP = BHOJ.BERBYT NO-LOCK NO-ERROR.
                 IF NOT AVAILABLE BERKOD THEN NEXT bkod.
                 ELSE DO:
                    ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.
                    LEAVE bkod.
                 END.   
              END.   
           END.
           ELSE DO:   
              ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.
           END.   
   
           ASSIGN bhjalp.BERBYT = BHOJ.BERBYT.  
        END.
        FOR EACH bhjalp NO-LOCK:
           IF bhjalp.BERBYT = "" THEN NEXT.
           DO TRANSACTION:
              FIND FIRST TIDREGITAB WHERE RECID(TIDREGITAB) = bhjalp.RECTIDVIS 
              EXCLUSIVE-LOCK NO-ERROR.
              ASSIGN TIDREGITAB.BEREDSKAP = bhjalp.BERBYT.
           END.
        END.
      END.
   END.             
END PROCEDURE.

PROCEDURE berosl_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   /*BEROSL.P INLAGGNING AV BEREDSKAP */        
   ASSIGN
   beredst = bertemp.START
   beredsl = bertemp.SLUT2
   beredstg = beredst
   beredslg = beredsl.   
   REPEAT:           
      ASSIGN
      beredsl = beredslg
      berednr = 0.   
      /*UTAN FÖR AKTUELL TID*/
      IF ordinarie.BERSTART1 > beredsl THEN DO:
         persrec = persrec.
      END.
      ELSE DO:
         /* TIDEN OK*/
         /*FÖLJANDE TAR REDA PÅ OM STARTIDEN SKALL AVRUNDAS */
         IF ordinarie.BERSTART1 < beredsl AND ordinarie.BERSTOPP1 >= beredsl THEN persrec = persrec.
         ELSE DO:
            IF ordinarie.BERSTOPP1 < beredsl AND ordinarie.BERSTOPP1 NE 00.00
            THEN beredsl = ordinarie.BERSTOPP1.
         END.  /*SLUT AVRUNDNINGAR*/
         /*SISTA BEREDSKAPSDAGEN */
         IF ordinarie.BERSTART1 < beredsl AND
         ordinarie.BERSTOPP1 >= beredsl THEN DO:
            berednr = 4.            
            CREATE TIDREGITAB.
            nytid = beredsl.
            RUN TIMSEK.P.                   
            ASSIGN
            beredsls = sekunder
            nytid = ordinarie.BERSTART1.
            RUN TIMSEK.P.      
            ASSIGN
            beredsts = sekunder
            sekunder = beredsls - beredsts.
            RUN SEKTIM.P.
            ASSIGN TIDREGITAB.BERANTAL = nytid
            TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
            SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEROSL" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv            
            TIDREGITAB.DATUM = avdatum 
            TIDREGITAB.VECKONUMMER = bertemp.VECKA2
            TIDREGITAB.DAG = bertemp.DAG2 
            TIDREGITAB.START = 7.00
            TIDREGITAB.SLUT = 7.00 
            TIDREGITAB.AONR = bertemp.AONR
            TIDREGITAB.DELNR = bertemp.DELNR
            TIDREGITAB.TIDLOG = FALSE
            TIDREGITAB.BEREDSKAP = ordinarie.BEREDSKAP
            TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
            TIDREGITAB.BERBEORD = bertemp.BERBEORD
            TIDREGITAB.BEREDSKAPSTART = ordinarie.BERSTART1
            TIDREGITAB.BEREDSKAPSLUT = beredsl.            
            IF ordinarie.BERANTAL NE 0.00 THEN
            ASSIGN TIDREGITAB.BERANTAL = ordinarie.BERANTAL.
            IF Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "cMISV" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
               /*MISV nyttavtal 20220101 ej komptimmar för veckovila hal eller klämdag Lena Jönsson  */            
               /* om nästa dag är en klämdag lägg ut 8 komptimmar som lönetillägg*/
               FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
               USE-INDEX ANSTF NO-LOCK NO-ERROR.                          
               FIND FIRST OVERAVTAB WHERE OVERAVTAB.DATUM = (avdatum + 1 ) AND 
               OVERAVTAB.KOD = ANSTFORMTAB.KOD USE-INDEX ODATUM NO-LOCK NO-ERROR.
               IF AVAILABLE OVERAVTAB THEN DO:   
                  IF OVERAVTAB.DAGEQ = "KLA" THEN DO:      
                     FIND FIRST LONTILL WHERE LONTILL.KOD = ANSTFORMTAB.KOD AND LONTILL.LONTILLAGG = "260" NO-LOCK NO-ERROR.
                     IF AVAILABLE LONTILL THEN DO:                     
                        ASSIGN TIDREGITAB.LONTILLAGG = "260"  
                        TIDREGITAB.LONTILLANTAL = 8
                        TIDREGITAB.LONAUTO = TRUE.               
                     END.
                  END.
               END.
            END.
            IF Guru.Konstanter:globforetag = "XGRAN"
            AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
               beantal = ordinarie.BERANTAL / bantal.
               IF beantal < 1 THEN beantal = 0.5.                                                
               ASSIGN TIDREGITAB.LONTILLAGG = "390"  
               TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
               TIDREGITAB.LONAUTO = TRUE.
            END.
            ELSE IF Guru.Konstanter:globforetag = "XGRAN"
            AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
               beantal = ordinarie.BERANTAL / bantal.
               IF beantal < 1 THEN beantal = 0.5.                                                
               ASSIGN TIDREGITAB.LONTILLAGG = "390"  
               TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
               TIDREGITAB.LONAUTO = TRUE.               
            END.            
         END.
      END.
      FIND NEXT ordinarie WHERE ordinarie.DATUM = avdatum AND ordinarie.DAGNR = WEEKDAY(avdatum) 
      USE-INDEX BERED NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ordinarie THEN DO: 
         LEAVE.
      END.
   END.
   beredsl = beredslg.
END PROCEDURE.

PROCEDURE berost_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/    
   ASSIGN
   beredst = bertemp.START
   beredsl = bertemp.SLUT2
   beredstg = beredst
   beredslg = beredsl.
   REPEAT:           
      ASSIGN
      beredst = beredstg
      beredsl = beredslg
      berednr = 0.
      /*UTAN FÖR AKTUELL TID*/
      IF ordinarie.BERSTOPP1 < beredst THEN DO:
         persrec = persrec.
      END.
      ELSE DO:                                       
         /*TIDEN OK*/
         /*FÖLJANDE TAR REDA PÅ OM STARTIDEN SKALL AVRUNDAS */
         IF ordinarie.BERSTART1 <= beredst AND 
         ordinarie.BERSTOPP1 > beredst THEN persrec = persrec.
         ELSE DO:
            IF ordinarie.BERSTART1 > beredst THEN beredst = ordinarie.BERSTART1.
         END.   /*SLUT AVRUNDNING*/
         IF bdatum = avdatum AND beredst > beredsl THEN persrec = persrec.
         ELSE DO:                           
            ovkod = "".            
            IF (Guru.Konstanter:globforetag = "GRAN" ) AND (PERSONALTAB.BEREDSKAPSAVTAL = "T"
            OR PERSONALTAB.BEREDSKAPSAVTAL = "T1") THEN DO:
               FIND FIRST ANSTFORMTAB WHERE ANSTFORM.ANSTALLNING = PERSONALTAB.ANSTALLNING
               USE-INDEX ANSTF NO-LOCK NO-ERROR. 
               FIND FIRST OVERKOD WHERE OVERKOD.KOD = ANSTFORMTAB.KOD AND
               OVERKOD.OVERTIDTILL = ordinarie.BEREDSKAP USE-INDEX OVER NO-LOCK NO-ERROR.
               IF AVAILABLE OVERKOD THEN DO:                                        
                  FIND FIRST okodbuff WHERE okodbuff.KOD = ANSTFORMTAB.KOD AND
                  okodbuff.OVERTIDUTTAG = PERSONALTAB.OVERTIDUTTAG AND 
                  okodbuff.ENKEL = OVERKOD.ENKEL USE-INDEX OVER NO-LOCK NO-ERROR.
                  IF AVAILABLE okodbuff THEN DO:
                     ovkod = okodbuff.OVERTIDTILL.
                  END.   
               END.   
            END.  
            /*FORSTA BEREDSKAPSDAGEN */
            IF ordinarie.BERSTART1 <= beredst AND
            ordinarie.BERSTOPP1 > beredst THEN DO:
               berednr = 1.
               CREATE TIDREGITAB.
               ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEROST" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv               
               TIDREGITAB.DATUM = bdatum 
               TIDREGITAB.VECKONUMMER = bertemp.VECKA
               TIDREGITAB.DAG = bertemp.DAG 
               TIDREGITAB.START = 7.00
               TIDREGITAB.SLUT = 7.00 
               TIDREGITAB.AONR = bertemp.AONR
               TIDREGITAB.DELNR = bertemp.DELNR
               TIDREGITAB.TIDLOG = FALSE
               TIDREGITAB.BEREDSKAP = ordinarie.BEREDSKAP
               TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
               TIDREGITAB.BERBEORD = bertemp.BERBEORD
               TIDREGITAB.BEREDSKAPSTART = beredst.
               IF ovkod NE "" THEN ASSIGN TIDREGITAB.BEREDSKAP = okodbuff.OVERTIDTILL.
               nytid = beredst.
               RUN TIMSEK.P.
               beredsts = sekunder.
               IF bdatum NE avdatum THEN DO:
                  ASSIGN
                  nytid = ordinarie.BERSTOPP1
                  TIDREGITAB.BEREDSKAPSLUT = ordinarie.BERSTOPP1.
               END.
               ELSE DO:
                  IF beredsl > ordinarie.BERSTOPP1 THEN DO:
                     ASSIGN
                     nytid = ordinarie.BERSTOPP1
                     TIDREGITAB.BEREDSKAPSLUT = ordinarie.BERSTOPP1.
                  END.
                  ELSE DO:
                     ASSIGN
                     nytid = beredsl
                     TIDREGITAB.BEREDSKAPSLUT = beredsl.
                  END.
               END.
               RUN TIMSEK.P.   
               ASSIGN
               beredsls = sekunder
               sekunder = beredsls - beredsts.
               RUN SEKTIM.P.
               ASSIGN TIDREGITAB.BERANTAL = nytid.
               IF ordinarie.BERANTAL NE 0.00 THEN
               ASSIGN TIDREGITAB.BERANTAL = ordinarie.BERANTAL.
               IF Guru.Konstanter:globforetag = "XGRAN"
               AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
                  beantal = ordinarie.BERANTAL / bantal.
                  IF beantal < 1 THEN beantal = 0.5.   
                  ASSIGN TIDREGITAB.LONTILLAGG = "390"  
                  TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
                  TIDREGITAB.LONAUTO = TRUE.
               END.               
               ELSE IF Guru.Konstanter:globforetag = "XGRAN"
               AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
                  beantal = ordinarie.BERANTAL / bantal.
                  IF beantal < 1 THEN beantal = 0.5.                                                
                  ASSIGN TIDREGITAB.LONTILLAGG = "390"  
                  TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
                  TIDREGITAB.LONAUTO = TRUE.                  
               END.               
            END.
            IF bdatum = avdatum THEN DO:
               IF ordinarie.BERSTOPP1 < beredsl
               AND ordinarie.BERSTOPP1 NE 00.00
               THEN beredsl = ordinarie.BERSTOPP1.
            END.
            IF berednr = 1 THEN DO:
               IF beredsl >= ordinarie.BERSTART1 AND
               beredsl <= ordinarie.BERSTOPP1 THEN berednr = 0.
            END.
         END.
      END. /*TID OK */
      FIND NEXT ordinarie WHERE ordinarie.DATUM = bdatum AND ordinarie.DAGNR = WEEKDAY(bdatum)
      USE-INDEX BERED NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ordinarie THEN LEAVE.
   END.   /*REPEAT*/    
   ASSIGN
   beredst = beredstg
   beredsl = beredslg.
 
END PROCEDURE.

PROCEDURE beroutf_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   REPEAT:
   /*KOLL ATT INTE DATUMET FINNS I AVIKELSETAB.*/   
      IF AVAILABLE ordinarie THEN DO:
         /*OVRIGA BEREDSKAPSDAGAR */
         CREATE TIDREGITAB.
         nytid = ordinarie.BERSTART1.
         RUN TIMSEK.P. 
         ASSIGN
         beredsts = sekunder
         nytid = ordinarie.BERSTOPP1.
         RUN TIMSEK.P.      
         ASSIGN
         beredsls = sekunder
         sekunder = beredsls - beredsts.
         RUN SEKTIM.P.
         ASSIGN TIDREGITAB.BERANTAL = nytid
         TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
         SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEROUTF" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv         
         TIDREGITAB.DATUM = regdatumspar
         TIDREGITAB.VECKONUMMER =  regvnr
         TIDREGITAB.DAG = regdagnamn
         TIDREGITAB.START = 7.00
         TIDREGITAB.SLUT = 7.00
         TIDREGITAB.AONR = bertemp.AONR
         TIDREGITAB.DELNR = bertemp.DELNR
         TIDREGITAB.TIDLOG = FALSE
         TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
         TIDREGITAB.BERBEORD = bertemp.BERBEORD
         TIDREGITAB.BEREDSKAP = ordinarie.BEREDSKAP
         TIDREGITAB.BEREDSKAPSTART = ordinarie.BERSTART1
         TIDREGITAB.BEREDSKAPSLUT = ordinarie.BERSTOPP1.         
         IF ordinarie.BERANTAL NE 0.00 THEN
         ASSIGN TIDREGITAB.BERANTAL = ordinarie.BERANTAL.         
         IF Guru.Konstanter:globforetag = "XGRAN"
         AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
            beantal = ordinarie.BERANTAL / bantal.
            IF beantal < 1 THEN beantal = 0.5.      
            ASSIGN TIDREGITAB.LONTILLAGG = "390"  
            TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
            TIDREGITAB.LONAUTO = TRUE.
         END.
         ELSE IF Guru.Konstanter:globforetag = "XGRAN"
         AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
            beantal = ordinarie.BERANTAL / bantal.
            IF beantal < 1 THEN beantal = 0.5.                                                
            ASSIGN TIDREGITAB.LONTILLAGG = "390"  
            TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
            TIDREGITAB.LONAUTO = TRUE.            
         END.
      END.
      FIND NEXT ordinarie WHERE ordinarie.DATUM = regdatumspar AND ordinarie.DAGNR = WEEKDAY(regdatumspar) 
      USE-INDEX BERED NO-LOCK NO-ERROR.
      IF NOT AVAILABLE ordinarie THEN LEAVE.
   END.
  
END PROCEDURE.

PROCEDURE bersl_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   ASSIGN
   beredst = bertemp.START
   beredsl = bertemp.SLUT2
   beredstg = beredst
   beredslg = beredsl.
   REPEAT:                  
      ASSIGN
      beredsl = beredslg
      berednr = 0.
      IF avikelse.BERSTART1 > beredsl THEN DO:
         persrec = persrec.
      END.
      ELSE DO:
         /*FÖLJANDE TAR REDA PÅ OM STARTIDEN SKALL AVRUNDAS */
         IF avikelse.BERSTART1 < beredsl AND 
         avikelse.BERSTOPP1 >= beredsl THEN DO:
            persrec = persrec.
         END.
         ELSE DO:
            IF avikelse.BERSTOPP1 < beredsl AND avikelse.BERSTOPP1 NE 00.00
            THEN beredsl = avikelse.BERSTOPP1.
         END.
         /*SISTA BEREDSKAPSDAGEN */
         IF avikelse.BERSTART1 < beredsl AND
         avikelse.BERSTOPP1 >= beredsl THEN DO:
            berednr = 4.
            CREATE TIDREGITAB.
            nytid = beredsl.
            RUN TIMSEK.P.
            ASSIGN
            beredsls = sekunder
            nytid = avikelse.BERSTART1.
            RUN TIMSEK.P.      
            ASSIGN
            beredsts = sekunder
            sekunder = beredsls - beredsts.
            RUN SEKTIM.P.
            ASSIGN TIDREGITAB.BERANTAL = nytid
            TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
            SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BERSL" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
            TIDREGITAB.DATUM = avdatum 
            TIDREGITAB.VECKONUMMER = bertemp.VECKA2
            TIDREGITAB.DAG = bertemp.DAG2 
            TIDREGITAB.START = 7.00
            TIDREGITAB.SLUT = 7.00 
            TIDREGITAB.AONR = bertemp.AONR
            TIDREGITAB.DELNR = bertemp.DELNR
            TIDREGITAB.TIDLOG = FALSE
            TIDREGITAB.BEREDSKAP = avikelse.BEREDSKAP
            TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
            TIDREGITAB.BERBEORD = bertemp.BERBEORD
            TIDREGITAB.BEREDSKAPSLUT = beredsl
            TIDREGITAB.BEREDSKAPSTART = avikelse.BERSTART1.
            IF avikelse.BERANTAL NE 0.00 THEN
            ASSIGN TIDREGITAB.BERANTAL = avikelse.BERANTAL.
            IF Guru.Konstanter:globforetag = "XGRAN"
            AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
               beantal = avikelse.BERANTAL / bantal.
               IF beantal < 1 THEN beantal = 0.5.      
               ASSIGN TIDREGITAB.LONTILLAGG = "390"  
               TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
               TIDREGITAB.LONAUTO = TRUE.
            END.
            ELSE IF Guru.Konstanter:globforetag = "XGRAN"
            AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
               beantal = avikelse.BERANTAL / bantal.
               IF beantal < 1 THEN beantal = 0.5.                                                
               ASSIGN TIDREGITAB.LONTILLAGG = "390"  
               TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
               TIDREGITAB.LONAUTO = TRUE.               
            END.
            IF Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "cMISV" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
               /*MISV nyttavtal 20220101 ej komptimmar för veckovila hal eller klämdag Lena Jönsson  */            
               /* om nästa dag är en klämdag lägg ut 8 komptimmar som lönetillägg*/
               FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
               USE-INDEX ANSTF NO-LOCK NO-ERROR.                          
               FIND FIRST OVERAVTAB WHERE OVERAVTAB.DATUM = (avdatum + 1 ) AND 
               OVERAVTAB.KOD = ANSTFORMTAB.KOD USE-INDEX ODATUM NO-LOCK NO-ERROR.
               IF AVAILABLE OVERAVTAB THEN DO:   
                  IF OVERAVTAB.DAGEQ = "KLA" THEN DO:      
                     FIND FIRST LONTILL WHERE LONTILL.KOD = ANSTFORMTAB.KOD AND LONTILL.LONTILLAGG = "260" NO-LOCK NO-ERROR.
                     IF AVAILABLE LONTILL THEN DO:                     
                        ASSIGN TIDREGITAB.LONTILLAGG = "260"  
                        TIDREGITAB.LONTILLANTAL = 8
                        TIDREGITAB.LONAUTO = TRUE.               
                     END.
                  END.
               END.
            END.
         END.
      END.
      FIND NEXT avikelse WHERE avikelse.DATUM = avdatum 
      USE-INDEX BERAV NO-LOCK NO-ERROR.
      IF NOT AVAILABLE avikelse THEN LEAVE.
   END.  
END PROCEDURE.

PROCEDURE berst_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/

   ASSIGN
   beredst = bertemp.START
   beredsl = bertemp.SLUT2
   beredstg = beredst
   beredslg = beredsl.
   REPEAT:           
      ASSIGN 
      beredst = beredstg
      beredsl = beredslg.
      berednr = 0.
      /*KOLL ATT INTE DATUMET FINNS I AVIKELSETAB.*/
      IF avikelse.BERSTOPP1 < beredst THEN DO:
         persrec = persrec.
      END.
      ELSE DO:
         /*FÖLJANDE TAR REDA PÅ OM STARTIDEN SKALL AVRUNDAS */
         IF avikelse.BERSTART1 <= beredst AND 
         avikelse.BERSTOPP1 > beredst THEN persrec = persrec.
         ELSE DO:
            IF avikelse.BERSTART1 > beredst THEN beredst = avikelse.BERSTART1.
         END.
         IF bdatum = avdatum AND beredst > beredsl THEN persrec = persrec.
         ELSE DO:                           
            ovkod = "".
            IF (Guru.Konstanter:globforetag = "GRAN" ) AND PERSONALTAB.BEREDSKAPSAVTAL = "T"
            OR PERSONALTAB.BEREDSKAPSAVTAL = "T1"  THEN DO:  
               FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
               USE-INDEX ANSTF NO-LOCK NO-ERROR.    
               FIND FIRST OVERKOD WHERE  OVERKOD.KOD = ANSTFORMTAB.KOD AND
               OVERKOD.OVERTIDTILL = avikelse.BEREDSKAP USE-INDEX OVER NO-LOCK NO-ERROR.
               IF AVAILABLE OVERKOD THEN DO:                                       
                  FIND FIRST ANSTFORMTAB WHERE ANSTFORM.ANSTALLNING = PERSONALTAB.ANSTALLNING
                  USE-INDEX ANSTF NO-LOCK NO-ERROR.
                  FIND FIRST okodbuff WHERE okodbuff.KOD = ANSTFORMTAB.KOD AND
                  okodbuff.OVERTIDUTTAG = PERSONALTAB.OVERTIDUTTAG AND 
                  okodbuff.ENKEL = OVERKOD.ENKEL USE-INDEX OVER NO-LOCK NO-ERROR.
                  IF AVAILABLE okodbuff THEN DO:
                     ovkod = okodbuff.OVERTIDTILL.
                  END.   
               END.   
            END. 
            /*FORSTA BEREDSKAPSDAGEN */
            IF avikelse.BERSTART1 <= beredst AND
            avikelse.BERSTOPP1 > beredst THEN DO:
            berednr = 1.
               CREATE TIDREGITAB.
               ASSIGN TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
               SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BERST" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv
               TIDREGITAB.DATUM = bdatum 
               TIDREGITAB.VECKONUMMER = bertemp.VECKA
               TIDREGITAB.DAG = bertemp.DAG 
               TIDREGITAB.START = 7.00
               TIDREGITAB.SLUT = 7.00 
               TIDREGITAB.AONR = bertemp.AONR
               TIDREGITAB.DELNR = bertemp.DELNR
               TIDREGITAB.TIDLOG = FALSE
               TIDREGITAB.BEREDSKAP = avikelse.BEREDSKAP
               TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
               TIDREGITAB.BERBEORD = bertemp.BERBEORD
               TIDREGITAB.BEREDSKAPSTART = beredst.
               IF ovkod NE "" THEN ASSIGN TIDREGITAB.BEREDSKAP = okodbuff.OVERTIDTILL.    
               nytid = beredst.
               RUN TIMSEK.P.
               beredsts = sekunder.
               IF bdatum NE avdatum THEN DO:
                  ASSIGN
                  nytid = avikelse.BERSTOPP1
                  TIDREGITAB.BEREDSKAPSLUT = avikelse.BERSTOPP1.
               END.
               ELSE DO:
                  IF beredsl > avikelse.BERSTOPP1 THEN DO:
                     ASSIGN
                     nytid = avikelse.BERSTOPP1
                     TIDREGITAB.BEREDSKAPSLUT = avikelse.BERSTOPP1.
                  END.
                  ELSE DO:
                     ASSIGN
                     nytid = beredsl
                     TIDREGITAB.BEREDSKAPSLUT = beredsl.
                  END.
               END.
               RUN TIMSEK.P.
               ASSIGN
               beredsls = sekunder
               sekunder = beredsls - beredsts.
               RUN SEKTIM.P.
               ASSIGN TIDREGITAB.BERANTAL = nytid.
               IF avikelse.BERANTAL NE 0.00 THEN TIDREGITAB.BERANTAL = avikelse.BERANTAL.
               IF Guru.Konstanter:globforetag = "XGRAN"
               AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
                  beantal = avikelse.BERANTAL / bantal.
                  IF beantal < 1 THEN beantal = 0.5.                                                
                  ASSIGN TIDREGITAB.LONTILLAGG = "390"  
                  TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
                  TIDREGITAB.LONAUTO = TRUE.
               END.
               ELSE IF Guru.Konstanter:globforetag = "XGRAN"
               AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
                  beantal = avikelse.BERANTAL / bantal.
                  IF beantal < 1 THEN beantal = 0.5.                                                
                  ASSIGN TIDREGITAB.LONTILLAGG = "390"  
                  TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
                  TIDREGITAB.LONAUTO = TRUE.                  
               END.
            END.
            IF bdatum = avdatum THEN DO:
               IF avikelse.BERSTOPP1 < beredsl AND avikelse.BERSTOPP1 NE 00.00
               THEN beredsl = avikelse.BERSTOPP1.
            END.
            IF berednr = 1 THEN DO:
               IF beredsl >= avikelse.BERSTART1 AND beredsl <= avikelse.BERSTOPP1 THEN berednr = 0.
            END.
         END.
      END.
      FIND NEXT avikelse WHERE avikelse.DATUM = bdatum 
      USE-INDEX BERAV NO-LOCK NO-ERROR.
      IF NOT AVAILABLE avikelse THEN LEAVE.
   END.   /*REPEAT*/              
   ASSIGN
   beredst = beredstg
   beredsl = beredslg.
END PROCEDURE.

PROCEDURE bertolk_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E0" THEN bantal = 1. 
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E1" THEN bantal = 1.3.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E2" THEN bantal = 1.25.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E3" THEN bantal = 1.5.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E4" THEN bantal = 1.55.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "E5" THEN bantal = 1.8.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S0" THEN bantal = 1. 
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S1" THEN bantal = 1.3.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S2" THEN bantal = 1.25.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S3" THEN bantal = 1.5.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S4" THEN bantal = 1.55.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "S5" THEN bantal = 1.8.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R0" THEN bantal = 1. 
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R1" THEN bantal = 1.3.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R2" THEN bantal = 1.25.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R3" THEN bantal = 1.5.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R4" THEN bantal = 1.55.
   IF PERSONALTAB.BEREDSKAPSAVTAL = "R5" THEN bantal = 1.8.

   ASSIGN
   regvnr = bertemp.VECKA   
   regvnr = bertemp.VECKA2.   
   /*KOLL ATT INTE DATUMET FINNS I AVIKELSETAB.*/
   FIND FIRST avikelse WHERE avikelse.DATUM = bdatum 
   USE-INDEX BERAV NO-LOCK NO-ERROR.
   IF AVAILABLE avikelse THEN DO:
      RUN berst_UI.
   END.
   ELSE DO:
      /*TA FRAM RÄTT BEREDSKAPSSTARTDAG.*/
      FIND FIRST ordinarie WHERE ordinarie.DATUM = bdatum AND ordinarie.DAGNR = WEEKDAY(bdatum) 
      USE-INDEX BERED NO-LOCK NO-ERROR.
      IF AVAILABLE ordinarie THEN DO:
         RUN berost_UI.
      END.
      ELSE DO:
         persrec = persrec.
      END.
   END.
   IF avdatum NE bdatum THEN DO:
      /*KOLL ATT INTE DATUMET FINNS I AVIKELSETAB.*/
      FIND FIRST avikelse WHERE avikelse.DATUM = avdatum 
      USE-INDEX BERAV NO-LOCK NO-ERROR.
      IF AVAILABLE avikelse THEN DO:
         RUN bersl_UI.         
      END.
      ELSE DO:
         /*TA FRAM RÄTT BEREDSKAPSSLUTDAG.*/
         FIND FIRST ordinarie WHERE ordinarie.DATUM = avdatum AND ordinarie.DAGNR = WEEKDAY(avdatum)  
         USE-INDEX BERED NO-LOCK NO-ERROR.
         IF AVAILABLE ordinarie THEN DO:
            RUN berosl_UI.
         END.
      END.
   END.
   IF avdatum NE bdatum THEN DO:
      regdatumspar = bdatum + 1.
      REPEAT:
         IF regdatumspar = avdatum THEN LEAVE.
         IF WEEKDAY(regdatumspar) = 1 THEN regdagnamn = 'sön'.
         IF WEEKDAY(regdatumspar) = 2 THEN regdagnamn = 'mån'.
         IF WEEKDAY(regdatumspar) = 3 THEN regdagnamn = 'tis'.
         IF WEEKDAY(regdatumspar) = 4 THEN regdagnamn = 'ons'.
         IF WEEKDAY(regdatumspar) = 5 THEN regdagnamn = 'tor'.
         IF WEEKDAY(regdatumspar) = 6 THEN regdagnamn = 'fre'.
         IF WEEKDAY(regdatumspar) = 7 THEN regdagnamn = 'lör'.
         regdatum = regdatumspar.
         RUN REGVEC.P.
         FIND FIRST avikelse WHERE avikelse.DATUM = regdatumspar 
         USE-INDEX BERAV NO-LOCK NO-ERROR.
         IF AVAILABLE avikelse THEN DO:
            RUN berutf_UI.
            regdatumspar = regdatumspar + 1.
         END.
         ELSE DO:
            FIND FIRST ordinarie WHERE ordinarie.DATUM = regdatumspar AND ordinarie.DAGNR = WEEKDAY(regdatumspar) 
            USE-INDEX BERED NO-LOCK NO-ERROR.
            IF AVAILABLE ordinarie THEN DO:
               RUN beroutf_UI.
               regdatumspar = regdatumspar + 1.
            END.
            ELSE IF Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:
                /* IT har inte beredskap fr 18-sö 18*/
               ASSIGN
               regdatumspar = regdatumspar + 1.
            END.
            ELSE DO:
               CREATE FELTEXT.
               ASSIGN 
               FELTEXT.ANVANDARE = Guru.Konstanter:globanv                                   
               FELTEXT.FELTEXT = 'Kontakta Elpool! För nu är det något fel! Ange läge 40.'
               FELTEXT.PROGRAM = "SKAPABER" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv.
               ASSIGN
               regdatumspar = regdatumspar + 1.
            END.
         END.
         IF regdatumspar = avdatum THEN LEAVE.
      END.
   END.
   /*RUN berord_UI.*/
   FIND FIRST ordinarie USE-INDEX BERED NO-LOCK NO-ERROR.
   IF ordinarie.BERANTAL > 0 THEN DO:
      OPEN QUERY utryck FOR EACH TIDREGITAB WHERE 
      TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
      TIDREGITAB.DATUM >= bdatum AND TIDREGITAB.DATUM <= avdatum AND 
      TIDREGITAB.TIDLOG = TRUE AND
      TIDREGITAB.UTRYCKNING = TRUE USE-INDEX PKOD NO-LOCK.
      GET FIRST utryck NO-LOCK.
      DO WHILE AVAILABLE(TIDREGITAB):   
         utrrec = RECID(TIDREGITAB).
         IF TIDREGITAB.DATUM = bdatum AND TIDREGITAB.SLUT <= beredst THEN persrec = persrec.   
         ELSE IF TIDREGITAB.DATUM = avdatum AND TIDREGITAB.START >= beredsl THEN persrec = persrec.
         ELSE DO TRANSACTION:
            FIND FIRST tidbuff WHERE tidbuff.RECTIDVIS = utrrec 
            EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE tidbuff THEN DELETE tidbuff.
         END.   
         GET NEXT utryck NO-LOCK.
      END.
      CLOSE QUERY utryck.         
   END.
   DO:
      krav = FALSE.  
      FIND PERSONALTAB WHERE RECID(PERSONALTAB) = persrec NO-LOCK NO-ERROR.
      FIND FIRST ANSTFORMTAB WHERE ANSTFORM.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.
      FIND FIRST UTRYCKNING WHERE UTRYCKNING.KOD = ANSTFORMTAB.KOD
      USE-INDEX UT NO-LOCK NO-ERROR.
      FIND FIRST UTRTAB WHERE UTRTAB.KOD = ANSTFORMTAB.KOD USE-INDEX UTRSTART NO-LOCK
      NO-ERROR.                
      IF AVAILABLE UTRTAB THEN krav = TRUE.
      IF UTRYCKNING.AVBE = TRUE THEN krav = TRUE.
      IF UTRYCKNING.UTRYCKNBER NE UTRYCKNING.UTRYCKNEJBER THEN krav = TRUE.
      IF krav = TRUE THEN DO: 
         ASSIGN   
         regvnr9 = regvnr
         datb = bdatum
         data = avdatum
         regdatum = datb 
         regdat1 = regdatum                      
         busl3 = 0.
         over1:
         REPEAT:          
            RUN REGVEC.P.
            RUN SLUTARB.P.                 
            IF regdat1 > data THEN LEAVE over1.
            FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
            TIDREGITAB.DATUM = regdat1 AND TIDREGITAB.OVERAUTO = FALSE 
            USE-INDEX PSTART NO-LOCK NO-ERROR.
            IF NOT AVAILABLE TIDREGITAB THEN DO:
               FIND FIRST TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
               TIDREGITAB.DATUM = regdat1 AND TIDREGITAB.OVERAUTO = TRUE AND
               TIDREGITAB.TIDLOG = TRUE AND 
               (TIDREGITAB.START GE regslut OR TIDREGITAB.START < regstart) 
               USE-INDEX PSTART NO-LOCK NO-ERROR.
               IF NOT AVAILABLE TIDREGITAB THEN persrec = persrec.
               ELSE IF busl3 = 24.00 AND  TIDREGITAB.START = 00.00 AND TIDREGITAB.DATUM = 
               regdat2 + 1 THEN persrec = persrec.
               ELSE DO:                      
                  ASSIGN
                  tidtabrec = RECID(TIDREGITAB)
                  bustart3 = TIDREGITAB.START
                  busl3 = TIDREGITAB.SLUT      
                  regdat2 = TIDREGITAB.DATUM.                    
                  IF Guru.Konstanter:globforetag = "GRAN" 
                    OR Guru.Konstanter:globforetag = "ELPA"   THEN DO:
                     IF ANSTFORMTAB.KOD BEGINS "K" THEN DO:
                        IF regdat1 = bertemp.DATUM1 THEN DO TRANSACTION:                      
                            IF TIDREGITAB.START GE bertemp.START AND TIDREGITAB.START GE regslut THEN DO: 
                               FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK.
                               ASSIGN TIDREGITAB.UTRYCKN = TRUE.
                            END.
                        END.                     
                        ELSE IF regdat1 = bertemp.DATUM2 THEN DO TRANSACTION:                      
                            IF TIDREGITAB.START < bertemp.SLUT AND TIDREGITAB.START < regstart THEN DO : 
                               FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK.
                               ASSIGN TIDREGITAB.UTRYCKN = TRUE.
                            END.
                        END.
                        ELSE DO TRANSACTION:                                                  
                            FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK .
                            ASSIGN TIDREGITAB.UTRYCKN = TRUE.                            
                        END.                        
                     END.                     
                  END.                  
                  RUN OTOLKPR.P.
                  IF regdatum < regdat1 THEN regdatum = regdat1.
               END.    
               over2:
               REPEAT:
                  FIND NEXT TIDREGITAB WHERE 
                  TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
                  TIDREGITAB.DATUM = regdat1 AND TIDREGITAB.OVERAUTO = TRUE AND
                  TIDREGITAB.TIDLOG = TRUE AND 
                  (TIDREGITAB.START GE regslut OR TIDREGITAB.START < regstart) 
                  USE-INDEX PSTART NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE TIDREGITAB THEN LEAVE over2.                 
                  ELSE DO:                                    
                     ASSIGN
                     tidtabrec = RECID(TIDREGITAB)
                     bustart3 = TIDREGITAB.START      
                     busl3 = TIDREGITAB.SLUT    
                     regdat2 = TIDREGITAB.DATUM.                     
                     IF Guru.Konstanter:globforetag = "GRAN" 
                       OR Guru.Konstanter:globforetag = "ELPA"   THEN DO:
                        IF ANSTFORMTAB.KOD BEGINS "K" THEN DO:
                           IF regdat1 = bertemp.DATUM1 THEN DO TRANSACTION:                      
                               IF TIDREGITAB.START GE bertemp.START AND TIDREGITAB.START GE regslut THEN DO: 
                                  FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK.
                                  ASSIGN TIDREGITAB.UTRYCKN = TRUE.
                               END.
                           END.
                           ELSE IF regdat1 = bertemp.DATUM2 THEN DO TRANSACTION:                      
                               IF TIDREGITAB.START < bertemp.SLUT AND TIDREGITAB.START < regstart THEN DO: 
                                  FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK.
                                  ASSIGN TIDREGITAB.UTRYCKN = TRUE.
                               END.
                           END.
                           ELSE DO TRANSACTION:                                                  
                               FIND CURRENT TIDREGITAB EXCLUSIVE-LOCK.
                               ASSIGN TIDREGITAB.UTRYCKN = TRUE.                            
                           END.                           
                        END.                     
                     END.                     
                     RUN OTOLKPR.P.  
                     IF regdatum < regdat1 THEN regdatum = regdat1. 
                  END.
               END.                         
               ASSIGN
               regdatum = regdatum + 1
               regdat1 = regdat1 + 1.
            END. 
            ELSE IF UTRYCKNING.AVBE = TRUE THEN DO:     
               OPEN QUERY tidq   
               FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
               TIDREGITAB.DATUM = regdat1 AND TIDREGITAB.TIDLOG = FALSE AND 
               TIDREGITAB.OANT1 > 0 AND TIDREGITAB.OVERAUTO = FALSE 
               USE-INDEX PSTART NO-LOCK.
               GET FIRST tidq NO-LOCK.
               DO WHILE AVAILABLE(TIDREGITAB):
                  CREATE ohjalp.
                  ASSIGN ohjalp.ODATUM = TIDREGITAB.DATUM 
                  ohjalp.OSLUT = TIDREGITAB.SLUT
                  ohjalp.OSTART = TIDREGITAB.START                  
                  ohjalp.OKOD1 = TIDREGITAB.OKOD1 
                  ohjalp.OANT1 = TIDREGITAB.OANT1
                  ohjalp.OST1 = TIDREGITAB.OST1 
                  ohjalp.OSL1 = TIDREGITAB.OSL1
                  ohjalp.OKOD2 = TIDREGITAB.OKOD2 
                  ohjalp.OANT2 = TIDREGITAB.OANT2
                  ohjalp.OST2 = TIDREGITAB.OST2 
                  ohjalp.OSL2 = TIDREGITAB.OSL2
                  ohjalp.OKOD3 = TIDREGITAB.OKOD3 
                  ohjalp.OANT3 = TIDREGITAB.OANT3
                  ohjalp.OST3 = TIDREGITAB.OST3 
                  ohjalp.OSL3 = TIDREGITAB.OSL3
                  /*ohjalp.OOVERANTAL = TIDREGITAB.OVERANTAL */
                  ohjalp.OTOTALT = TIDREGITAB.TOTALT
                  ohjalp.OOVERAUTO = TIDREGITAB.OVERAUTO
                  ohjalp.OAONR = TIDREGITAB.AONR 
                  ohjalp.ODELNR = TIDREGITAB.DELNR
                  ohjalp.OUTR = TIDREGITAB.UTRYCKNING 
                  ohjalp.RECTIDVIS = RECID(TIDREGITAB).
                  GET NEXT tidq NO-LOCK.
               END.                                        
               CLOSE QUERY tidq.   
               FIND FIRST ohjalp NO-LOCK NO-ERROR.
               IF AVAILABLE ohjalp THEN DO:
                  reco = ohjalp.RECTIDVIS.   
                  RUN AVBER.P.                       
               END.                
               over3:
               REPEAT:                                                   
                 FIND NEXT ohjalp NO-LOCK NO-ERROR.
                 IF NOT AVAILABLE ohjalp THEN LEAVE over3.
                 ELSE DO:
                    reco = ohjalp.RECTIDVIS.
                    RUN AVBER.P. 
                 END.
               END.                       
               ASSIGN
               regdatum = regdatum + 1
               regdat1 = regdat1 + 1.
            END.
            ELSE DO:
               ASSIGN
               regdatum = regdatum + 1
               regdat1 = regdat1 + 1.
            END.
         END. 
         regvnr = regvnr9.  
      END.
   END. 
END PROCEDURE.

PROCEDURE berutf_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/  
   REPEAT:
      /*KOLL ATT DATUMET FINNS I AVIKELSETAB.*/   
      IF AVAILABLE avikelse THEN DO:         
         /*OVRIGA BEREDSKAPSDAGAR */
         CREATE TIDREGITAB.
         nytid = avikelse.BERSTART1.
         RUN TIMSEK.P.                
         ASSIGN
         beredsts = sekunder
         nytid = avikelse.BERSTOPP1.
         RUN TIMSEK.P.      
         ASSIGN
         beredsls = sekunder
         sekunder = beredsls - beredsts.
         RUN SEKTIM.P.
         ASSIGN TIDREGITAB.BERANTAL = nytid
         TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD
         SUBSTRING(TIDREGITAB.PROGRAM,1,158) = "BEREDUTF" + STRING(TODAY) + STRING(TIME,"HH:MM") + Guru.Konstanter:globanv         
         TIDREGITAB.DATUM = regdatumspar
         TIDREGITAB.VECKONUMMER = regvnr
         TIDREGITAB.DAG = regdagnamn
         TIDREGITAB.START = 7.00
         TIDREGITAB.SLUT = 7.00
         TIDREGITAB.AONR = bertemp.AONR
         TIDREGITAB.DELNR = bertemp.DELNR
         TIDREGITAB.TIDLOG = FALSE
         TIDREGITAB.ANVANDARE = Guru.Konstanter:globanv
         TIDREGITAB.BERBEORD = bertemp.BERBEORD
         TIDREGITAB.BEREDSKAP = avikelse.BEREDSKAP
         TIDREGITAB.BEREDSKAPSTART = avikelse.BERSTART1
         TIDREGITAB.BEREDSKAPSLUT = avikelse.BERSTOPP1.
         
         IF avikelse.BERANTAL NE 0.00 THEN TIDREGITAB.BERANTAL = avikelse.BERANTAL.         
         IF Guru.Konstanter:globforetag = "XGRAN"
         AND PERSONALTAB.BEREDSKAPSAVTAL BEGINS "E" THEN DO:   
            beantal = avikelse.BERANTAL / bantal.
            IF beantal < 1 THEN beantal = 0.5.                                                
            ASSIGN TIDREGITAB.LONTILLAGG = "390"  
            TIDREGITAB.LONTILLANTAL = (171.43 * beantal) 
            TIDREGITAB.LONAUTO = TRUE.
         END.
         ELSE IF Guru.Konstanter:globforetag = "XGRAN"
         AND PERSONALTAB.PERSONALKOD GE "35169" AND PERSONALTAB.PERSONALKOD LE "35181" THEN DO:   
            beantal = avikelse.BERANTAL / bantal.
            IF beantal < 1 THEN beantal = 0.5.                                                
            ASSIGN TIDREGITAB.LONTILLAGG = "390"  
            TIDREGITAB.LONTILLANTAL = (136.86 * beantal) 
            TIDREGITAB.LONAUTO = TRUE.            
         END.         
      END.
      FIND NEXT avikelse WHERE avikelse.DATUM = regdatumspar 
      USE-INDEX BERAV NO-LOCK NO-ERROR.
      IF NOT AVAILABLE avikelse THEN LEAVE.
   END.
END PROCEDURE.



PROCEDURE skapstart_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/
   EMPTY TEMP-TABLE ordinarie NO-ERROR. 
   EMPTY TEMP-TABLE avikelse NO-ERROR.
   
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" THEN DO:   
      IF bertemp.BERALT = 1 THEN DO:      
         FIND FIRST BEREDSKAPTAB WHERE BEREDSKAPTAB.BEREDSKAPSAVTAL = "LU"
         NO-LOCK NO-ERROR.
         IF AVAILABLE BEREDSKAPTAB THEN ASSIGN bereavt = BEREDSKAPTAB.BEREDSKAPSAVTAL.
      END.
      IF bertemp.BERALT = 3 THEN DO:      
         FIND FIRST BEREDSKAPTAB WHERE BEREDSKAPTAB.BEREDSKAPSAVTAL = "BR"
         NO-LOCK NO-ERROR.
         IF AVAILABLE BEREDSKAPTAB THEN ASSIGN bereavt = BEREDSKAPTAB.BEREDSKAPSAVTAL.
      END.      
      ELSE ASSIGN bereavt = PERSONALTAB.BEREDSKAPSAVTAL.      
   END.
   ELSE ASSIGN bereavt = PERSONALTAB.BEREDSKAPSAVTAL.   
   
   regdatum = bdatum.
   /*SOMMARTID*/
   RUN bereavtcheck_UI.      
   
   /*Sök avtalets normala arbetstid*/
   FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = PERSONALTAB.ANSTALLNING 
   USE-INDEX ORDARB NO-LOCK NO-ERROR.
   sekunder = ORDARB.START1.
   RUN SEKTIM.P.
   ASSIGN
   hjstart = nytid.
   IF ORDARB.OBKOD NE "" THEN DO:
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "LULE" THEN DO:         
         FIND FIRST FLEXAVT WHERE FLEXAVT.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.
         FIND FIRST FLEXREG WHERE FLEXREG.KOD = FLEXAVT.FLEXKOD NO-LOCK NO-ERROR.
      END.
      ELSE DO:         
         FIND FIRST FLEXREG WHERE FLEXREG.KOD = ANSTFORMTAB.KOD NO-LOCK NO-ERROR.
      END.
      IF NOT AVAILABLE FLEXREG THEN DO:
         FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.
      END.      
      IF AVAILABLE FLEXREG THEN DO:
         IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN DO:
            ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
            IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.            
            IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                           
            IF Guru.Konstanter:globforetag = "MISV" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                          
         END.
         ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN DO:
            ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
            IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.            
            IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                           
            IF Guru.Konstanter:globforetag = "MISV" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.
                          
         END.
         ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN DO: 
            ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
            IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.            
            IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                           
            IF Guru.Konstanter:globforetag = "MISV" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                          
         END.
         ELSE DO:
            sekunder = ORDARB.STOPP1.
            RUN SEKTIM.P.
            hjslut = nytid.    
         END. 
      END. 
      ELSE DO:
         sekunder = ORDARB.STOPP1.
         RUN SEKTIM.P.
         hjslut = nytid.    
      END.  
   END. 
   ELSE DO:
      sekunder = ORDARB.STOPP1.
      RUN SEKTIM.P.
      hjslut = nytid.    
   END.   

   hjdatum = regdatum.
   regdatum = bdatum.
   REPEAT:            
      RUN REGVEC.P.
      RUN SLUTARB.P.
      RUN bereavtcheck_UI.
      FOR EACH BEREDSKAPTAB WHERE BEREDSKAPTAB.DAGNR = WEEKDAY(regdatum) AND
      BEREDSKAPTAB.BEREDSKAPSAVTAL = bereavt
      USE-INDEX BERED NO-LOCK:                 
         CREATE ordinarie.
         ASSIGN ordinarie.DATUM = regdatum
         ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
         ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
         ordinarie.BERSTART1 = BEREDSKAPTAB.BERSTART1
         ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
         ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
         IF Guru.Konstanter:globforetag = "lule" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
            /* skiftpersonal har beredskap vardagar 23-06 när de har rullschema ,
                                            helg   runt 7.3-12.3 om de har arbetstid annars hela dagen
                                            halvdag 11.3 - 06
             annan tid på året runt 7.3-16.3*/      
            skift = FALSE.
            FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
            RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.
            IF AVAILABLE RULLPERS THEN skift = TRUE.
            IF regdatum GE 12/04/2006 AND regdatum < 02/26/2007 THEN skift = TRUE.            
            IF regdatum GE 12/10/2007 AND regdatum < 02/24/2008 THEN skift = TRUE.            
            IF regdatum GE 12/08/2008 AND regdatum < 02/22/2009 THEN skift = TRUE.            
            IF regdatum GE 12/07/2009 AND regdatum < 02/22/2010 THEN skift = TRUE.            
            IF regdatum GE 12/13/2010 AND regdatum < 02/28/2011 THEN skift = TRUE.            
            IF regdatum = 01/05/2011 OR regdatum = 01/07/2011 THEN skift = FALSE.            
            /*Sven la inte upp rullpers 2006 utan tog det veckovis, då måste fast datum läggas in*/
            IF skift = TRUE THEN DO:            
               IF bereavt = "PV" THEN DO:                                 
                  IF regstart = 6 AND regslut = 14.30 THEN DO:               
                     IF ordinarie.BERSTART1 < regstart THEN ordinarie.BERSTOPP1 = regstart.                     
                     ELSE IF ordinarie.BERSTART1 > regstart AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTOPP1 = 19  THEN DELETE ordinarie.                     
                     ELSE IF ordinarie.BERSTOPP1 = 24 THEN ordinarie.BERSTART1 = 23.                     
                     ELSE IF ordinarie.BERSTART1 = 12 THEN ordinarie.BERSTOPP1 = 12.3.
                     
                  END.
                  IF regstart = 7.3 AND regslut = 16.30 THEN DO:              
                     IF ordinarie.BERSTART1 < 6  THEN ordinarie.BERSTOPP1 = 6.                     
                     ELSE IF ordinarie.BERSTART1 > 6 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTOPP1 = 24  THEN ordinarie.BERSTART1 = 23.                     
                     ELSE IF  ordinarie.BERSTOPP1 = 19  THEN DELETE ordinarie.                                          
                  END.
                  IF regstart = 7.3 AND regslut = 14.50 THEN DO:              
                     IF ordinarie.BERSTART1 < 6  THEN ordinarie.BERSTOPP1 = 6.                     
                     ELSE IF ordinarie.BERSTART1 > 6 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTOPP1 = 24  THEN ordinarie.BERSTART1 = 23.                     
                     ELSE IF  ordinarie.BERSTOPP1 = 19  THEN DELETE ordinarie.                                          
                  END.
                  IF regstart = 6 AND regslut = 10 THEN DO:               
                     IF ordinarie.BERSTART1 < regstart THEN ordinarie.BERSTOPP1 = regstart.                     
                     ELSE IF ordinarie.BERSTART1 > regstart AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTART1 = 12 THEN DELETE ordinarie.                     
                     ELSE IF ordinarie.BERSTOPP1 > regslut AND ordinarie.BERSTART1 < 19  THEN DO:
                        ordinarie.BERSTART1 = 11.3.
                     END.                                                               
                  END.
                  IF regstart = 7.3 AND regslut = 11.3 THEN DO:               
                     IF ordinarie.BERSTART1 < 7 THEN ordinarie.BERSTOPP1 = 6.                     
                     ELSE IF ordinarie.BERSTART1 GE 7 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTART1 = 12 THEN DELETE ordinarie.                     
                     ELSE IF ordinarie.BERSTOPP1 > regslut AND ordinarie.BERSTART1 < 19  THEN DO:
                        ordinarie.BERSTART1 = 11.3.
                     END.                                                              
                  END.
                  IF regstart = 14.3 AND regslut = 23 THEN DO:               
                     IF ordinarie.BERSTART1 < 6  THEN ordinarie.BERSTOPP1 = 6.                     
                     ELSE IF ordinarie.BERSTART1 > 6 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                     ELSE IF ordinarie.BERSTOPP1 = 24  THEN ordinarie.BERSTART1 = 23.                     
                     ELSE IF  ordinarie.BERSTOPP1 = 19  THEN DELETE ordinarie.
                     ELSE DO:                  
                        IF ordinarie.BERSTART1 = 12 THEN DO: 
                           ASSIGN
                           ordinarie.BERSTART1 = 17.3
                           ordinarie.BERSTOPP1 = 18.
                        END.
                     END.
                  END.
                  IF regstart = 7.3 AND regslut = 9.3 THEN DO:  
                     IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                        ASSIGN
                        ordinarie.BERSTOPP1 = 7.3.
                        CREATE ordinarie.
                        ASSIGN ordinarie.DATUM = regdatum
                        ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                        ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                        ordinarie.BERSTART1 = 9.3
                        ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                        ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                     END.
                  END.
                  IF regstart = 7.3 AND regslut = 12.3 THEN DO:  
                     IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                        ASSIGN
                        ordinarie.BERSTOPP1 = 7.3.
                        CREATE ordinarie.
                        ASSIGN ordinarie.DATUM = regdatum
                        ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                        ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                        ordinarie.BERSTART1 = 12.3
                        ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                        ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                     END.
                  END.
               END.
               
            END.
            ELSE DO:
               /* testa luleå*/
               IF lunchstarten = 11.3 AND lunchslutet = 12 THEN DO:
                  IF ordinarie.BERSTART1 = 12 AND ordinarie.BERSTOPP1 = 12.55 THEN DO:
                     ASSIGN ordinarie.BERSTART1 = 11.3 ordinarie.BERSTOPP1 = 12.
                  END.
                  IF ordinarie.BERSTART1 = 11.3 AND ordinarie.BERSTOPP1 = 12.05 THEN DO:
                     ASSIGN ordinarie.BERSTART1 = 11.3 ordinarie.BERSTOPP1 = 12.
                  END.
               END.
               IF regstart = 7.3 AND regslut = 9.3 THEN DO:  
                  IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                     ASSIGN
                     ordinarie.BERSTOPP1 = 7.3.
                     CREATE ordinarie.
                     ASSIGN ordinarie.DATUM = regdatum
                     ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                     ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                     ordinarie.BERSTART1 = 9.3
                     ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                     ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                  END.
               END.
               IF regstart = 7.3 AND regslut = 12.3 THEN DO:  
                  IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                     ASSIGN
                     ordinarie.BERSTOPP1 = 7.3.
                     CREATE ordinarie.
                     ASSIGN ordinarie.DATUM = regdatum
                     ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                     ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                     ordinarie.BERSTART1 = 12.3
                     ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                     ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                  END.
               END.
               IF regstart = 7.3 AND regslut = 11.3 THEN DO:               
                  IF ordinarie.BERSTART1 < 7.3 AND ordinarie.BERSTOPP1 > regstart  THEN ordinarie.BERSTOPP1 = regstart.                     
                  /*ELSE IF ordinarie.BERSTART1 GE 7 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.*/
                  ELSE IF ordinarie.BERSTART1 = 12 THEN DELETE ordinarie.                     
                  ELSE IF ordinarie.BERSTOPP1 > regslut AND ordinarie.BERSTART1 < 19  THEN DO:
                     ordinarie.BERSTART1 = 11.3.
                  END.                                                              
               END.
            END.
         END.
         IF Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
             /* skiftpersonal har beredskap vardagar  run 6-14 och 14-22 */      
             skift = FALSE.
             FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
             RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.
             IF AVAILABLE RULLPERS THEN skift = TRUE.            
             FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
             RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM = 01/01/2199 NO-LOCK NO-ERROR.
             IF AVAILABLE RULLPERS THEN skift = TRUE.            
             IF skift = TRUE THEN DO:                                           
                IF regstart = 6 AND regslut = 14 THEN DO:                              
                   IF ordinarie.BERSTART1 = 11.3 AND ordinarie.BERSTOPP1 = 12.15 THEN DELETE ordinarie.
                   ELSE DO:                   
                       IF ordinarie.BERSTART1 < regstart THEN DO:
                          ordinarie.BERSTOPP1 = regstart.
                       END.
                       IF ordinarie.BERSTART1 > regstart AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                       ELSE DO:               
                          IF ordinarie.BERSTOPP1 > regslut AND ordinarie.BERSTART1 < 19  THEN DO:
                             ordinarie.BERSTART1 = regslut.
                          END.
                          
                       END.               
                   END.
                END.
                IF regstart = 7 AND regslut = 12 THEN DO:               
                   IF ordinarie.BERSTART1 < 7 THEN ordinarie.BERSTOPP1 = 6.                     
                   ELSE IF ordinarie.BERSTART1 GE 7 AND ordinarie.BERSTOPP1 < 8 THEN DELETE ordinarie.
                   ELSE IF ordinarie.BERSTART1 = 11.3 THEN DELETE ordinarie.                     
                   ELSE IF ordinarie.BERSTOPP1 > regslut AND ordinarie.BERSTART1 < 19  THEN DO:
                      ordinarie.BERSTART1 = 12.
                   END.                                                              
                END.                
                IF regstart = 14 AND regslut = 22 THEN DO:                              
                   IF ordinarie.BERSTART1 = 11.3 AND ordinarie.BERSTOPP1 = 12.15 THEN DELETE ordinarie.                     
                   ELSE IF ordinarie.BERSTOPP1 = 19 THEN DELETE ordinarie.                                             
                   ELSE DO:                   
                      IF ordinarie.BERSTART1 < regstart AND ordinarie.BERSTOPP1 GE 7 THEN DO:
                         ordinarie.BERSTOPP1 = regstart.
                      END.
                      IF ordinarie.BERSTOPP1 = 24  THEN DO:
                         ordinarie.BERSTART1 = regslut.
                      END.               
                   END.
                END.
                /* AVFALL har 2 skift 7-16 och 16-24*/
                IF regstart = 16 AND regslut = 24 THEN DO:                    
                   
                   IF ordinarie.BERSTART1 = 00 AND ordinarie.BERSTOPP1 = 7  THEN DO:
                      ordinarie.BERSTOPP1 = 16.
                   END.
                   ELSE IF ordinarie.BERSTART1 = 11 AND ordinarie.BERSTOPP1 = 11.30 THEN DO: 
                      ASSIGN
                      ordinarie.BERSTART1 = 19.
                      ordinarie.BERSTOPP1 = 19.3.
                   END.
                   ELSE IF ordinarie.BERSTART1 = 16 AND ordinarie.BERSTOPP1 = 24  THEN DELETE ordinarie.                   
                END.
             END.                     
          END.
          IF Guru.Konstanter:globforetag = "gkal" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:
             /* skiftpersonal har beredskap vardagar  runt 7-15.30 helg runt 7-13 eller 8-12 
             20111104 helg även 7-15.48(sommar ibland inte arbetstid helg) */      
             skift = FALSE.
             FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
             RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.
             IF AVAILABLE RULLPERS THEN skift = TRUE.            
             FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD  AND RULLPERS.SLUTDATUM = 01/01/2199 NO-LOCK NO-ERROR.
             IF AVAILABLE RULLPERS THEN skift = TRUE.  
                    
             IF skift = TRUE THEN DO:
                IF regstart = 7 AND regslut = 13 THEN DO:
                  IF BEREDSKAPTAB.BERSTART1 = 00.00 AND BEREDSKAPTAB.BERSTOPP1 = 24.00 THEN DO:    
                     IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                        ASSIGN
                        ordinarie.BERSTOPP1 = 7.
                        CREATE ordinarie.
                        ASSIGN ordinarie.DATUM = regdatum
                        ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                        ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                        ordinarie.BERSTART1 = 13
                        ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                        ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                     END.
                  END.   
                END.
                ELSE IF regstart = 8 AND regslut = 12 THEN DO:
                   IF BEREDSKAPTAB.BERSTART1 = 00.00 AND BEREDSKAPTAB.BERSTOPP1 = 24.00 THEN DO:                     
                     IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:                  
                        ASSIGN
                        ordinarie.BERSTOPP1 = 8.
                        CREATE ordinarie.
                        ASSIGN ordinarie.DATUM = regdatum
                        ordinarie.DAGNR = BEREDSKAPTAB.DAGNR
                        ordinarie.BEREDSKAP = BEREDSKAPTAB.BEREDSKAP
                        ordinarie.BERSTART1 = 12
                        ordinarie.BERSTOPP1 = BEREDSKAPTAB.BERSTOPP1
                        ordinarie.BERANTAL = BEREDSKAPTAB.BERANTAL.
                     END.
                   END.
                END.
                ELSE IF WEEKDAY(regdatum) = 1 OR WEEKDAY(regdatum) = 7 THEN DO:
                   IF regstart = 7 AND regslut = 15.48 THEN DO:
                      IF BEREDSKAPTAB.BERSTART1 = 00.00 AND BEREDSKAPTAB.BERSTOPP1 = 8.00 THEN DO:
                         ASSIGN
                         ordinarie.BERSTOPP1 = 7.
                      END.      
                      ELSE IF BEREDSKAPTAB.BERSTART1 = 12.00 AND BEREDSKAPTAB.BERSTOPP1 = 24.00 THEN DO:
                         ASSIGN
                         ordinarie.BERSTART1 = 15.48.
                      END.   
                   END.                
                END.                                                                  
             END.                     
          END.
      END.
      regdatum = regdatum + 1.
      IF regdatum > avdatum THEN LEAVE.
   END.   
   OPEN QUERY avikq FOR EACH BEREDSKAPAV WHERE 
   BEREDSKAPAV.BEREDSKAPSAVTAL = bereavt AND 
   BEREDSKAPAV.DATUM >= bdatum AND BEREDSKAPAV.DATUM <= avdatum USE-INDEX BERAV NO-LOCK.
   GET FIRST avikq NO-LOCK.
   DO WHILE AVAILABLE(BEREDSKAPAV):
      regdatum = BEREDSKAPAV.DATUM.
      RUN REGVEC.P.
      RUN SLUTARB.P.
      CREATE avikelse.
      ASSIGN 
      avikelse.DATUM = BEREDSKAPAV.DATUM
      avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
      avikelse.BERSTART1 = BEREDSKAPAV.BERSTART1
      avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
      avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.
      IF Guru.Konstanter:globforetag = "lule" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:         
         skift = FALSE.
         FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.         
         IF AVAILABLE RULLPERS THEN skift = TRUE.
         IF regdatum GE 12/04/2006 AND regdatum < 02/26/2007 THEN skift = TRUE.
         IF regdatum GE 12/10/2007 AND regdatum < 02/24/2008 THEN skift = TRUE.            
         IF regdatum GE 12/08/2008 AND regdatum < 02/22/2009 THEN skift = TRUE.            
         IF regdatum GE 12/07/2009 AND regdatum < 02/22/2010 THEN skift = TRUE.            
         IF regdatum GE 12/13/2010 AND regdatum < 02/28/2011 THEN skift = TRUE.            
         IF regdatum = 01/05/2011 OR regdatum = 01/07/2011 THEN skift = FALSE.            
         IF skift = TRUE THEN DO:         
            IF bereavt = "PV" THEN DO:            
            /*IF regstart NE hjstart OR regslut NE hjslut THEN DO:*/
               IF regstart = 6 AND regslut = 14.30 THEN DO:               
                  IF avikelse.BERSTART1 < regstart THEN avikelse.BERSTOPP1 = regstart.                     
                  ELSE IF avikelse.BERSTART1 > regstart AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTOPP1 = 19  THEN DELETE avikelse.                     
                  ELSE IF avikelse.BERSTOPP1 = 24 THEN avikelse.BERSTART1 = 23.                     
                  ELSE IF avikelse.BERSTART1 = 12 THEN avikelse.BERSTOPP1 = 12.3.
                  
               END.
               IF regstart = 7.3 AND regslut = 16.30 THEN DO:              
                  IF avikelse.BERSTART1 < 6  THEN avikelse.BERSTOPP1 = 6.                     
                  ELSE IF avikelse.BERSTART1 > 6 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTOPP1 = 24  THEN avikelse.BERSTART1 = 23.                     
                  ELSE IF avikelse.BERSTOPP1 = 19  THEN DELETE avikelse.                                          
               END.
               IF regstart = 7.3 AND regslut = 14.50 THEN DO:              
                  IF avikelse.BERSTART1 < 6  THEN avikelse.BERSTOPP1 = 6.                     
                  ELSE IF avikelse.BERSTART1 > 6 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTOPP1 = 24  THEN avikelse.BERSTART1 = 23.                     
                  ELSE IF avikelse.BERSTOPP1 = 19  THEN DELETE avikelse.                                          
               END.
               IF regstart = 6 AND regslut = 10 THEN DO:               
                  IF avikelse.BERSTART1 < regstart THEN avikelse.BERSTOPP1 = regstart.                     
                  ELSE IF avikelse.BERSTART1 > regstart AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTART1 = 12 THEN DELETE avikelse.                 
                  ELSE IF avikelse.BERSTOPP1 > regslut AND avikelse.BERSTART1 < 19  THEN DO:
                     avikelse.BERSTART1 = 11.3.
                  END.                                                                                                   
               END.
               IF regstart = 7.3 AND regslut = 11.3 THEN DO:               
                  IF avikelse.BERSTART1 < 7 THEN avikelse.BERSTOPP1 = 6.                     
                  ELSE IF avikelse.BERSTART1 GE 7 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTART1 = 12 THEN DELETE avikelse.                     
                  ELSE IF avikelse.BERSTOPP1 > regslut AND avikelse.BERSTART1 < 19  THEN DO:
                     avikelse.BERSTART1 = 11.3.
                  END.                                                                                                                                                  
               END.
               IF regstart = 14.3 AND regslut = 23 THEN DO:               
                  IF avikelse.BERSTART1 < 6  THEN avikelse.BERSTOPP1 = 6.                     
                  ELSE IF avikelse.BERSTART1 > 6 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE IF avikelse.BERSTOPP1 = 24  THEN avikelse.BERSTART1 = 23.                     
                  ELSE IF  avikelse.BERSTOPP1 = 19  THEN DELETE avikelse.
                  ELSE DO:                  
                     IF avikelse.BERSTART1 = 12 THEN DO: 
                        ASSIGN
                        avikelse.BERSTART1 = 17.3
                        avikelse.BERSTOPP1 = 18.
                     END.
                  END.
               END.
               IF regstart = 7.3 AND regslut = 9.3 THEN DO:              
                  IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 > 7.3 THEN DO:               
                     ASSIGN
                     avikelse.BERSTOPP1 = 7.3.
                     CREATE avikelse.
                     ASSIGN 
                     avikelse.DATUM = regdatum
                     avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                     avikelse.BERSTART1 = 9.3
                     avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                     avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.             
                  END.
                  ELSE IF avikelse.BERSTART1 = 7  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                     ASSIGN
                     avikelse.BERSTOPP1 = 7.3.
                     CREATE avikelse.
                     ASSIGN 
                     avikelse.DATUM = regdatum
                     avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                     avikelse.BERSTART1 = 9.3
                     avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                     avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
                  END.            
               END.
               IF regstart = 7.3 AND regslut = 12.3 THEN DO:              
                  IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 > 7.3 THEN DO:               
                     ASSIGN
                     avikelse.BERSTOPP1 = 7.3.
                     CREATE avikelse.
                     ASSIGN 
                     avikelse.DATUM = regdatum
                     avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                     avikelse.BERSTART1 = 12.3
                     avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                     avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
                  END.
                  ELSE IF avikelse.BERSTART1 = 7  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                     ASSIGN
                     avikelse.BERSTOPP1 = 7.3.
                     CREATE avikelse.
                     ASSIGN 
                     avikelse.DATUM = regdatum
                     avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                     avikelse.BERSTART1 = 12.3
                     avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                     avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
                  END.                        
               END.
            END.
         END.
         ELSE DO:
            /* testa luleå*/
            IF lunchstarten = 11.3 AND lunchslutet = 12 THEN DO:
               IF avikelse.BERSTART1 = 12 AND avikelse.BERSTOPP1 = 12.55 THEN DO:
                  ASSIGN avikelse.BERSTART1 = 11.3 avikelse.BERSTOPP1 = 12.
               END.
               IF avikelse.BERSTART1 = 11.3 AND avikelse.BERSTOPP1 = 12.05 THEN DO:
                  ASSIGN avikelse.BERSTART1 = 11.3 avikelse.BERSTOPP1 = 12.
               END.
            END.
            IF regstart = 7.3 AND regslut = 9.3 THEN DO:              
               IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 > 7.3 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.3.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 9.3
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.             
               END.
               ELSE IF avikelse.BERSTART1 = 7  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.3.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 9.3
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
               END.            
            END.
            IF regstart = 7.3 AND regslut = 12.3 THEN DO:              
               IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 > 7.3 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.3.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 12.3
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
               END.
               ELSE IF avikelse.BERSTART1 = 7  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.3.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 12.3
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.    
               END.                        
            END.            
            IF regstart = 7.3 AND regslut = 11.3 THEN DO:               
               IF avikelse.BERSTART1 < 7.3 AND avikelse.BERSTOPP1 > regstart THEN avikelse.BERSTOPP1 = regstart.                     
               /*ELSE IF avikelse.BERSTART1 GE 7 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.*/
               ELSE IF avikelse.BERSTART1 = 12 THEN DELETE avikelse.                     
               ELSE IF avikelse.BERSTOPP1 > regslut AND avikelse.BERSTART1 < 19  THEN DO:
                  avikelse.BERSTART1 = 11.3.
               END.                                                                                                                                                  
            END.
         END.         
      END.
      IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV" OR Guru.Konstanter:globforetag = "elpa"  THEN DO:         
         skift = FALSE.
         FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.         
         IF AVAILABLE RULLPERS THEN skift = TRUE.
         FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM = 01/01/2199 NO-LOCK NO-ERROR.
         IF AVAILABLE RULLPERS THEN skift = TRUE.            
         IF skift = TRUE THEN DO:                                                      
            IF regstart = 6 AND regslut = 14 THEN DO:                              
               IF avikelse.BERSTART1 = 11.3 AND avikelse.BERSTOPP1 = 12.15 THEN DELETE avikelse.
               ELSE DO:               
                  IF avikelse.BERSTART1 < regstart THEN DO:
                     avikelse.BERSTOPP1 = regstart.
                  END.
                  IF avikelse.BERSTART1 > regstart AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
                  ELSE DO:               
                     IF avikelse.BERSTOPP1 > regslut AND avikelse.BERSTART1 < 19  THEN DO:
                        avikelse.BERSTART1 = regslut.
                     END.                  
                  END.               
               END.
            END.            
            IF regstart = 7 AND regslut = 12 THEN DO:               
               IF avikelse.BERSTART1 < 7 THEN avikelse.BERSTOPP1 = 6.                     
               ELSE IF avikelse.BERSTART1 GE 7 AND avikelse.BERSTOPP1 < 8 THEN DELETE avikelse.
               ELSE IF avikelse.BERSTART1 = 11.3 THEN DELETE avikelse.                     
               ELSE IF avikelse.BERSTOPP1 > regslut AND avikelse.BERSTART1 < 19  THEN DO:
                  avikelse.BERSTART1 = 12.
               END.                                                                                                                                                  
            END.            
            IF regstart = 14 AND regslut = 22 THEN DO:                              
               IF avikelse.BERSTOPP1 = 19  THEN DELETE avikelse.            
               ELSE IF avikelse.BERSTART1 = 11.3 AND avikelse.BERSTOPP1 = 12.15 THEN DELETE avikelse.             
               ELSE DO:               
                  IF avikelse.BERSTART1 < regstart AND avikelse.BERSTOPP1 GE 7 THEN DO:
                     avikelse.BERSTOPP1 = regstart.
                  END.
                  IF avikelse.BERSTOPP1 = 24  THEN DO:
                     avikelse.BERSTART1 = regslut.
                  END.                                                 
               END.
            END.
         END.                  
      END.
      IF Guru.Konstanter:globforetag = "gkal" THEN DO:     
          /* skiftpersonal har beredskap vardagar  runt 7-15.30 helg run 7-13 eller 8-12
          20111104 helg även 7-15.48 (sommar ibland inte arbetstid helg) */          
         skift = FALSE.
         FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         RULLPERS.STARTDATUM <= regdatum AND RULLPERS.SLUTDATUM >= regdatum NO-LOCK NO-ERROR.         
         IF AVAILABLE RULLPERS THEN skift = TRUE.
         FIND FIRST RULLPERS WHERE RULLPERS.PERSONALKOD = PERSONALTAB.PERSONALKOD AND 
         RULLPERS.SLUTDATUM = 01/01/2199 NO-LOCK NO-ERROR.
         IF AVAILABLE RULLPERS THEN skift = TRUE.            
         IF skift = TRUE THEN DO:
            IF regstart = 7 AND regslut = 13 THEN DO:              
               IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 13
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.             
               END.                              
            END.
            ELSE IF regstart = 8 AND regslut = 12 THEN DO:              
               IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 8.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 12
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.             
               END.                              
            END.
            ELSE IF regstart = 7 AND regslut = 15.3 THEN DO:              
               IF avikelse.BERSTART1 = 0  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTOPP1 = 7.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 15.3
                  avikelse.BERSTOPP1 = BEREDSKAPAV.BERSTOPP1
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 11
                  avikelse.BERSTOPP1 = 11.3
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.             
               END.
               ELSE IF avikelse.BERSTART1 = 7  AND avikelse.BERSTOPP1 = 24 THEN DO:               
                  ASSIGN
                  avikelse.BERSTART1 = 15.3.               
                  CREATE avikelse.
                  ASSIGN 
                  avikelse.DATUM = regdatum
                  avikelse.BEREDSKAP = BEREDSKAPAV.BEREDSKAP
                  avikelse.BERSTART1 = 11
                  avikelse.BERSTOPP1 = 11.3
                  avikelse.BERANTAL = BEREDSKAPAV.BERANTAL.              
               END.                                                                            
            END.
            ELSE IF regstart = 7 AND regslut = 15.48 THEN DO:
                IF avikelse.BERSTART1 = 00.00 AND avikelse.BERSTOPP1 = 8.00 THEN DO:
                   ASSIGN
                   avikelse.BERSTOPP1 = 7.
                END.      
                ELSE IF avikelse.BERSTART1 = 12.00 AND avikelse.BERSTOPP1 = 24.00 THEN DO:
                   ASSIGN
                   avikelse.BERSTART1 = 15.48.
                END.   
             END.                                                      
         END.                  
      END.
      GET NEXT avikq NO-LOCK.
   END.               
   CLOSE QUERY avikq.   
   regdatum = hjdatum.   
END PROCEDURE.


PROCEDURE bereavtcheck_UI :
   /*checka sommartid*/            
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "MISV"  THEN DO:        
      FIND FIRST FLEXAVT WHERE FLEXAVT.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
      FLEXAVT.FLEXTID = TRUE NO-LOCK NO-ERROR.
      IF AVAILABLE FLEXAVT THEN DO:      
         FIND FIRST BHOJ WHERE BHOJ.KOD = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
         IF AVAILABLE BHOJ THEN DO:
            FIND FIRST FLEXREG WHERE FLEXREG.KOD = FLEXAVT.FLEXKOD NO-LOCK NO-ERROR.
            IF NOT AVAILABLE FLEXREG THEN DO:
               FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.
            END.
            IF AVAILABLE FLEXREG THEN DO:
               IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.                  
               ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.               
               ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN ASSIGN bereavt = BHOJ.BERBYT.
               ELSE  bereavt = BHOJ.KOD.             
            END.   
         END.    
      END.
      ELSE DO:
         /*EJ FLEXAVTAL*/
         FIND FIRST BHOJ WHERE BHOJ.KOD = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
         IF AVAILABLE BHOJ THEN DO:
            FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.            
            IF AVAILABLE FLEXREG THEN DO:
               IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.                  
               ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.               
               ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN ASSIGN bereavt = BHOJ.BERBYT.
               ELSE  bereavt = BHOJ.KOD.               
            END.   
         END.         
      END.   
   END.      
   IF Guru.Konstanter:globforetag = "LULE" OR Guru.Konstanter:globforetag = "ELPA" THEN DO:        
      FIND FIRST BHOJ WHERE BHOJ.KOD = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
      IF AVAILABLE BHOJ THEN DO:
         FIND FIRST FLEXREG WHERE FLEXREG.KOD = ANSTFORMTAB.KOD NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FLEXREG THEN DO:
            FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.
         END.
         IF AVAILABLE FLEXREG THEN DO:
            IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN  ASSIGN bereavt = BHOJ.BERBYT.               
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.            
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN ASSIGN bereavt = BHOJ.BERBYT.
            ELSE  bereavt = BHOJ.KOD.            
         END.   
      END.          
   END.      
   IF Guru.Konstanter:globforetag = "GRAN" AND ANSTFORMTAB.KOD = "TJ" THEN DO:              
      FIND FIRST BHOJ WHERE BHOJ.KOD = PERSONALTAB.BEREDSKAPSAVTAL NO-LOCK NO-ERROR.
      IF AVAILABLE BHOJ THEN DO:
         FIND FIRST FLEXREG WHERE FLEXREG.KOD = ANSTFORMTAB.KOD NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FLEXREG THEN DO:
            FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.
         END.
         IF AVAILABLE FLEXREG THEN DO:
            IF MONTH(regdatum) > MONTH(FLEXREG.SOMMARST) AND MONTH(regdatum) < MONTH(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.               
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARSL) AND DAY(regdatum) <= DAY(FLEXREG.SOMMARSL) THEN ASSIGN bereavt = BHOJ.BERBYT.            
            ELSE IF MONTH(regdatum) = MONTH(FLEXREG.SOMMARST) AND DAY(regdatum) >= DAY(FLEXREG.SOMMARST) THEN ASSIGN bereavt = BHOJ.BERBYT.
            ELSE  bereavt = BHOJ.KOD.            
         END.   
      END.         
   END.       
END PROCEDURE.