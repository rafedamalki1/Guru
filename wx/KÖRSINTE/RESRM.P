/*RESRM.P*/
{RESREGWID.I}

/*DEFINE NEW SHARED VARIABLE bortaoapph AS HANDLE NO-UNDO.                     /*BORTAOAPP.P*/
DEFINE NEW SHARED VARIABLE nyttaoapph AS HANDLE NO-UNDO.                      /*NYTTAOAPP.P*/
DEFINE NEW SHARED VARIABLE nyttaoejapph AS HANDLE NO-UNDO.                              /* dokhant.P */
DEFINE NEW SHARED VARIABLE fbestapph AS HANDLE NO-UNDO.                      /*EXTRATABHMT*/
DEFINE NEW SHARED VARIABLE visaaonrh AS HANDLE NO-UNDO.
DEFINE NEW SHARED VARIABLE avtaodatapph AS HANDLE NO-UNDO.
DEFINE NEW SHARED VARIABLE anvapph AS HANDLE NO-UNDO.*/
DEFINE VARIABLE btnresah AS HANDLE NO-UNDO.
DEFINE NEW SHARED VARIABLE resrec AS RECID NO-UNDO. 
DEFINE NEW SHARED VARIABLE reddatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regdatum5 AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE nattrakt AS LOGICAL FORMAT "JA/NEJ" NO-UNDO.
DEFINE NEW SHARED VARIABLE tjan AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE NEW SHARED VARIABLE ovrec AS RECID NO-UNDO.
DEFINE SHARED VARIABLE enflerdygns AS LOGICAL FORMAT "ENDAGS/FLERDYGNS" NO-UNDO.
DEFINE SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE SHARED VARIABLE persrec2 AS RECID NO-UNDO.
DEFINE SHARED VARIABLE vart AS CHARACTER FORMAT "X(3)" NO-UNDO.
/*DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.*/
DEFINE SHARED VARIABLE aonrrec AS RECID NO-UNDO.
DEFINE SHARED VARIABLE klocka AS DECIMAL NO-UNDO. 
DEFINE VARIABLE resrec2 AS RECID NO-UNDO.  
DEFINE VARIABLE enf AS CHARACTER NO-UNDO.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
DEFINE VARIABLE pristyp1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE pristyp2 AS CHARACTER NO-UNDO.
DEFINE VARIABLE pris1 AS DECIMAL NO-UNDO. 
DEFINE VARIABLE pris2 AS DECIMAL NO-UNDO.
DEFINE VARIABLE enfle AS CHARACTER NO-UNDO.            
DEFINE VARIABLE seku AS INTEGER FORMAT "9999999" NO-UNDO.  
DEFINE VARIABLE antal AS INTEGER FORMAT "9999999" NO-UNDO.
DEFINE VARIABLE halvt AS INTEGER FORMAT "9999999" NO-UNDO.
DEFINE VARIABLE sext AS INTEGER FORMAT "9999999" NO-UNDO.
DEFINE VARIABLE bort AS INTEGER FORMAT "9999999" NO-UNDO. 
DEFINE VARIABLE avslu AS INTEGER FORMAT "9999999" NO-UNDO.
DEFINE VARIABLE avsta AS INTEGER FORMAT "9999999" NO-UNDO.
DEFINE VARIABLE hjdag AS CHARACTER NO-UNDO.
DEFINE VARIABLE restidsek AS INTEGER NO-UNDO.  
DEFINE VARIABLE htim AS INTEGER NO-UNDO. 
DEFINE VARIABLE halvkvart AS INTEGER NO-UNDO.          
DEFINE VARIABLE energiavt AS LOGICAL NO-UNDO.
DEFINE VARIABLE sok1 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok2 AS INTEGER NO-UNDO.
DEFINE VARIABLE sok3 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok4 AS CHARACTER NO-UNDO.
DEFINE VARIABLE sok5 AS DECIMAL NO-UNDO.
DEFINE VARIABLE valgubbe AS LOGICAL NO-UNDO.
/*DEFINE VARIABLE sparomrade AS CHARACTER NO-UNDO.
DEFINE VARIABLE omravdand AS INTEGER NO-UNDO.*/
DEFINE VARIABLE maxres AS INTEGER NO-UNDO.
DEFINE VARIABLE jid AS CHARACTER NO-UNDO.
DEFINE VARIABLE spvart AS CHARACTER NO-UNDO.
/*DEFINE VARIABLE stansvar AS LOGICAL NO-UNDO.*/
DEFINE VARIABLE markfr AS CHARACTER NO-UNDO.
DEFINE VARIABLE resfr AS LOGICAL NO-UNDO.

/*maltid*/
DEFINE VARIABLE flveck AS INTEGER  NO-UNDO.
DEFINE VARIABLE lfr AS LOGICAL NO-UNDO.
DEFINE VARIABLE llu AS LOGICAL NO-UNDO.
DEFINE VARIABLE lmi AS LOGICAL NO-UNDO.
DEFINE VARIABLE allmat AS LOGICAL NO-UNDO.
DEFINE VARIABLE ejand AS LOGICAL NO-UNDO.
DEFINE VARIABLE kollfru AS LOGICAL NO-UNDO.

/*RESTID*/
DEFINE NEW SHARED VARIABLE dummyrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE varaonr AS CHARACTER NO-UNDO.
DEFINE NEW SHARED VARIABLE vardelnr AS INTEGER NO-UNDO. 
DEFINE NEW SHARED VARIABLE avrdatum AS DATE NO-UNDO. 
DEFINE VARIABLE aonrspar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE delnrspar AS INTEGER NO-UNDO. 
DEFINE VARIABLE nattspar AS LOGICAL NO-UNDO. 
DEFINE VARIABLE overspar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE prisspar AS DECIMAL NO-UNDO. 
DEFINE VARIABLE pristypspar AS CHARACTER NO-UNDO. 
DEFINE VARIABLE bilspar AS LOGICAL NO-UNDO.
DEFINE VARIABLE antal_valda AS INTEGER NO-UNDO.
DEFINE VARIABLE brwbdatum AS DATE NO-UNDO.
DEFINE VARIABLE brwavdatum AS DATE NO-UNDO.
DEFINE VARIABLE rnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
DEFINE VARIABLE brwproch AS HANDLE NO-UNDO.

DEFINE VARIABLE regdatumspar  AS DATE NO-UNDO.
DEFINE VARIABLE regdatumspar2  AS DATE NO-UNDO.
/*övrigt*/

DEFINE VARIABLE tempvar AS CHARACTER NO-UNDO.


DEFINE VARIABLE pkod AS CHARACTER NO-UNDO.


/*DEFINE SHARED VARIABLE omrpersanvok AS LOGICAL NO-UNDO.
DEFINE SHARED TEMP-TABLE omranvandartemp NO-UNDO LIKE anvandartemp.
DEFINE SHARED VARIABLE xmtrl AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE xtypmtrl AS INTEGER NO-UNDO.
xmtrl = FALSE.
DEFINE VARIABLE skapakalber AS LOGICAL NO-UNDO.
DEFINE VARIABLE editanm AS CHARACTER FORMAT "x(68)" NO-UNDO.
DEFINE VARIABLE gatilltyp AS CHARACTER NO-UNDO.
DEFINE VARIABLE gatill1   AS CHARACTER NO-UNDO.
DEFINE VARIABLE gatill2   AS CHARACTER NO-UNDO.
DEFINE VARIABLE logformhj AS CHARACTER NO-UNDO.
DEFINE VARIABLE entrymtrlantal AS LOGICAL NO-UNDO.
DEFINE VARIABLE kalkproch AS HANDLE NO-UNDO.

DEFINE VARIABLE inkopvart AS CHARACTER NO-UNDO.
DEFINE SHARED VARIABLE fbaonrvar AS LOGICAL NO-UNDO.
BTN_PAG:LABEL = "Gör " + LC(Guru.Konstanter:gaok) +  " pågående".*/
DEFINE VARIABLE berapph AS HANDLE NO-UNDO.
framesizeh = framesizeextrah.
RUN vh_UI.
/*FILL-IN-VALJBEST:SCREEN-VALUE = "Välj " + LC(Guru.Konstanter:gbestk).
ON 'LEAVE' OF FILL-IN_AONR PERSISTENT RUN sokaonr_UI IN huvprogh.
ON 'LEAVE' OF FILL-IN_ORT PERSISTENT RUN lort_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_ARBANSVARIG PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 1).
ON 'ENTRY' OF FILL-IN_BEREDARE PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 2).
ON 'ENTRY' OF FILL-IN_STARTDAG PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 4).
ON 'ENTRY' OF FILL-IN_UTFARDAT PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 5).
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_ARBANSVARIG PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 1).
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_BEREDARE PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 2).
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_STARTDAG PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 4).
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_UTFARDAT PERSISTENT RUN entryarban_UI IN THIS-PROCEDURE (INPUT 5).

/*
ON 'LEAVE' OF FILL-IN_ARBANSVARIG PERSISTENT RUN brwpersg_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_BEREDARE PERSISTENT RUN brwpersg_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_STARTDAG PERSISTENT RUN brwpersg_UI IN THIS-PROCEDURE.
 */

ON 'ENTRY' OF FILL-IN_BEST PERSISTENT RUN ebest_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_BEST PERSISTENT RUN ebest_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_BESTAVD PERSISTENT RUN cmbbest_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ARBAN PERSISTENT RUN brwarban_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_BERED PERSISTENT RUN brwbered_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_BEST PERSISTENT RUN brwbest_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_BESTAVD PERSISTENT RUN brwbestavd_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_PROJ PERSISTENT RUN brwproj_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_PAG PERSISTENT RUN btnpag_UI IN THIS-PROCEDURE.


ON 'CHOOSE' OF MBTN_AVT PERSISTENT RUN mbtnavt_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF MBTN_DOK PERSISTENT RUN btndok_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF MBTN_FAK PERSISTENT RUN mbtnfak_UI IN THIS-PROCEDURE.*/
 
ON 'CHOOSE' OF MBTN_OVRIG PERSISTENT RUN btnovrig_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF MBTN_RESTID PERSISTENT RUN btnrestid_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF MBTN_MALTID PERSISTENT RUN mbtnmalt_UI  IN THIS-PROCEDURE.

ON 'CHOOSE' OF BTN_SKAPEN PERSISTENT RUN btnskapaen_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_AVB PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_OK PERSISTENT RUN btnok_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_BYT PERSISTENT RUN btnbyt_UI IN THIS-PROCEDURE.

ON 'CHOOSE' OF BTN_FVE-3 PERSISTENT RUN btnfve3_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_NVE-3 PERSISTENT RUN btnnve3_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_FVE-4 PERSISTENT RUN btnfve4_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_NVE-4 PERSISTENT RUN btnnve4_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_UPPD PERSISTENT RUN btnuppd_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_ONY PERSISTENT RUN btnony_UI IN THIS-PROCEDURE.
  

ON 'VALUE-CHANGED' OF BRW_AONR PERSISTENT RUN vcbrwaonr_UI IN THIS-PROCEDURE .
ON 'VALUE-CHANGED' OF BRW_EAONR PERSISTENT RUN vcbrweaonr_UI IN THIS-PROCEDURE .
ON 'VALUE-CHANGED' OF BRW_RESTID PERSISTENT RUN vcbrwresa2_UI IN THIS-PROCEDURE .

ON 'VALUE-CHANGED' OF RAD_FAST PERSISTENT RUN radfast_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_AVD PERSISTENT RUN cmbavd_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_OMR PERSISTENT RUN vccmbomr_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_OVERUT PERSISTENT RUN vccmboverut_UI IN THIS-PROCEDURE.

/*ON 'VALUE-CHANGED' OF FILL-IN-STARTDAT PERSISTENT RUN vcstartdat_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF FILL-IN-STARTAR PERSISTENT RUN vcstartar_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF FILL-IN-SLUTDAT PERSISTENT RUN vcslutdat_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF FILL-IN-SLUTAR PERSISTENT RUN vcslutar_UI IN THIS-PROCEDURE.*/


ON 'ENTRY' OF FILL-IN-AONR PERSISTENT RUN fiaonr_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-AONR PERSISTENT RUN fiaonr_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ENFLE PERSISTENT RUN msfienfle_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FRIMAT PERSISTENT RUN msfifrimat_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FSTART PERSISTENT RUN msfifstart_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FSLUT PERSISTENT RUN msfifslut_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-REDTRAKT PERSISTENT RUN msrtrakt_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TRORD PERSISTENT RUN mstrord_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-NATT PERSISTENT RUN msnatt_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-BIL PERSISTENT RUN msbil_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_AONRS PERSISTENT RUN msaonrs_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_ORTS PERSISTENT RUN msorts_UI IN THIS-PROCEDURE.

ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANF PERSISTENT RUN msmanf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANL PERSISTENT RUN msmanl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANM PERSISTENT RUN msmanm_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISF PERSISTENT RUN mstisf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISL PERSISTENT RUN mstisl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISM PERSISTENT RUN mstism_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSF PERSISTENT RUN msonsf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSL PERSISTENT RUN msonsl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSM PERSISTENT RUN msonsm_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORF PERSISTENT RUN mstorf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORL PERSISTENT RUN mstorl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORM PERSISTENT RUN mstorm_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREF PERSISTENT RUN msfref_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREL PERSISTENT RUN msfrel_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREM PERSISTENT RUN msfrem_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORF PERSISTENT RUN mslorf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORL PERSISTENT RUN mslorl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORM PERSISTENT RUN mslorm_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONF PERSISTENT RUN mssonf_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONL PERSISTENT RUN mssonl_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONM PERSISTENT RUN mssonm_UI IN THIS-PROCEDURE.

ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANF-2 PERSISTENT RUN msmanf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANL-2 PERSISTENT RUN msmanl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANM-2 PERSISTENT RUN msmanm2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISF-2 PERSISTENT RUN mstisf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISL-2 PERSISTENT RUN mstisl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISM-2 PERSISTENT RUN mstism2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSF-2 PERSISTENT RUN msonsf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSL-2 PERSISTENT RUN msonsl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSM-2 PERSISTENT RUN msonsm2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORF-2 PERSISTENT RUN mstorf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORL-2 PERSISTENT RUN mstorl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORM-2 PERSISTENT RUN mstorm2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREF-2 PERSISTENT RUN msfref2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREL-2 PERSISTENT RUN msfrel2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREM-2 PERSISTENT RUN msfrem2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORF-2 PERSISTENT RUN mslorf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORL-2 PERSISTENT RUN mslorl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORM-2 PERSISTENT RUN mslorm2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONF-2 PERSISTENT RUN mssonf2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONL-2 PERSISTENT RUN mssonl2_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONM-2 PERSISTENT RUN mssonm2_UI IN THIS-PROCEDURE.

ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANF-3 PERSISTENT RUN msmanf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANL-3 PERSISTENT RUN msmanl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-MANM-3 PERSISTENT RUN msmanm3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISF-3 PERSISTENT RUN mstisf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISL-3 PERSISTENT RUN mstisl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TISM-3 PERSISTENT RUN mstism3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSF-3 PERSISTENT RUN msonsf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSL-3 PERSISTENT RUN msonsl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-ONSM-3 PERSISTENT RUN msonsm3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORF-3 PERSISTENT RUN mstorf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORL-3 PERSISTENT RUN mstorl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-TORM-3 PERSISTENT RUN mstorm3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREF-3 PERSISTENT RUN msfref3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREL-3 PERSISTENT RUN msfrel3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-FREM-3 PERSISTENT RUN msfrem3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORF-3 PERSISTENT RUN mslorf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORL-3 PERSISTENT RUN mslorl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-LORM-3 PERSISTENT RUN mslorm3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONF-3 PERSISTENT RUN mssonf3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONL-3 PERSISTENT RUN mssonl3_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN-SONM-3 PERSISTENT RUN mssonm3_UI IN THIS-PROCEDURE.




  


ON 'MOUSE-MENU-CLICK' OF BRW_EAONR PERSISTENT RUN mmbrweaonr_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF FILL-IN-STARTAR PERSISTENT RUN msfstartar_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF FILL-IN-SLUTAR PERSISTENT RUN msfslutar_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF FILL-IN-STARTDAT PERSISTENT RUN mmstartdat_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF FILL-IN-SLUTDAT PERSISTENT RUN mmslutdat_UI IN THIS-PROCEDURE.

ON 'ANY-KEY' OF FILL-IN_AONRS PERSISTENT RUN anyaonrs_UI IN THIS-PROCEDURE.
ON 'ANY-KEY' OF FILL-IN_ORTS PERSISTENT RUN anyorts_UI IN THIS-PROCEDURE.





ON 'LEAVE' OF FILL-IN-AONR PERSISTENT RUN laonr_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-DELNR PERSISTENT RUN ldelnr_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-ENFLE PERSISTENT RUN fienfle_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-FSTART PERSISTENT RUN lfifstart_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-FSLUT PERSISTENT RUN lfifslut_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-REDTRAKT PERSISTENT RUN lredtrakt_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-STARTDAT PERSISTENT RUN lstartdat_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN-SLUTDAT PERSISTENT RUN lslutdat_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF RSTART PERSISTENT RUN lrstart_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF RSLUT PERSISTENT RUN lrslut_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF BFORARE PERSISTENT RUN lbforare_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF OUTTAG PERSISTENT RUN louttag_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF NTRAKT PERSISTENT RUN lntrakt_UI IN THIS-PROCEDURE.

ON 'ROW-LEAVE' OF BRW_OKOST PERSISTENT RUN rowlbrwokost_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF olonantal PERSISTENT RUN entryola_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF olonantal PERSISTENT RUN leaveola_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF olonantal PERSISTENT RUN mola_UI IN THIS-PROCEDURE.
/*ON 'ENTRY' OF omoms PERSISTENT RUN entryomo_UI IN THIS-PROCEDURE.*/
ON 'LEAVE' OF omoms PERSISTENT RUN leaveomo_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF omoms PERSISTENT RUN momo_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF oresmal PERSISTENT RUN entryorm_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF oresmal PERSISTENT RUN leaveorm_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF oresmal PERSISTENT RUN morm_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF odatum PERSISTENT RUN entryod_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF odatum PERSISTENT RUN leaveod_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF odatum PERSISTENT RUN mood_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_LON PERSISTENT RUN andbrwlon_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_OKOST PERSISTENT RUN andbrwokost_UI IN THIS-PROCEDURE.

ON 'CHOOSE' OF BTN_OBORT PERSISTENT RUN bortoklon_UI IN THIS-PROCEDURE.



 


  
 


/*ON 'CHOOSE' OF MBTN_OVR PERSISTENT RUN mbtnovr_UI  IN THIS-PROCEDURE. 
  
 
ON 'CHOOSE' OF MBTN_TIDPERS PERSISTENT RUN mbtnpers_UI  IN THIS-PROCEDURE.
ON 'CHOOSE' OF MBTN_AOPERSSEK PERSISTENT RUN btnaopers_UI  IN THIS-PROCEDURE.

ON 'MOUSE-SELECT-CLICK' OF FILL-IN_FASTAAONR PERSISTENT RUN mfastao_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF CMB_OMR PERSISTENT RUN cmbomr_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF CMB_OMR PERSISTENT RUN vcmbomr_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_FASTTRAC PERSISTENT RUN btnfastt_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_ACCESS PERSISTENT RUN btnacc_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF m_Info PERSISTENT RUN minfo_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF m_Info-2 PERSISTENT RUN minfo2_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF refinfoh PERSISTENT RUN refinfo_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_KALKAR PERSISTENT RUN btnkalkar_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_AKTIV PERSISTENT RUN btnaktiv_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_KOPPLAAONR PERSISTENT RUN btnkoppao_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_GATILL PERSISTENT RUN btngatill_UI IN THIS-PROCEDURE (INPUT FALSE).
ON 'CHOOSE' OF BTN_BERKALK PERSISTENT RUN btngatill_UI IN THIS-PROCEDURE (INPUT TRUE).
ON 'VALUE-CHANGED' OF BRW_KOPP PERSISTENT RUN vcbrwkopp_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-DBLCLICK' OF BRW_KOPP PERSISTENT RUN mdcbrwkopp_UI IN THIS-PROCEDURE.

/*
ON 'ROW-DISPLAY' OF BRW_KOPP PERSISTENT RUN rdwkopp_UI IN THIS-PROCEDURE.
*/
ON 'ROW-LEAVE' OF BRW_KOPP PERSISTENT RUN rlwkopp_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF GSTATUSNIV PERSISTENT RUN entrykopp_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF GSTATUSNIV PERSISTENT RUN ekopp_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF GSTATUSNIV PERSISTENT RUN mlgniv_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ANL PERSISTENT RUN vcbrwanl_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_AOTID PERSISTENT RUN vcbrwaotid_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ARBART PERSISTENT RUN vcbrwarb_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_ARBARTOV PERSISTENT RUN vcbrwarbov_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-DBLCLICK' OF BRW_AVTAL PERSISTENT RUN mbrwavtal_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_AVTAL PERSISTENT RUN vcbrwavtal_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-DBLCLICK' OF BRW_AVTALDOK PERSISTENT RUN mbrwavtal2_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_AVTALDOK PERSISTENT RUN vcbrwavtal2_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_VISADOK PERSISTENT RUN btnvisadok_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF BTN_VISATV PERSISTENT RUN btnvisaavt_UI IN THIS-PROCEDURE.  
ON 'CHOOSE' OF BTN_VISATIDL PERSISTENT RUN btnvisad_UI IN THIS-PROCEDURE.   
ON 'MOUSE-SELECT-DBLCLICK' OF BRW_DAGBOK PERSISTENT RUN mbrwdagbok_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_DAGBOK PERSISTENT RUN vcbrwdagbok_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_PRIOOV PERSISTENT RUN vcbrwprioov_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF BRW_PRIO PERSISTENT RUN vcbrwprio_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_BORTDAGBOK PERSISTENT RUN btnbortadag_UI IN THIS-PROCEDURE.   
ON 'CHOOSE' OF BTN_VISADAGBOK PERSISTENT RUN btnvisdag_UI IN THIS-PROCEDURE.   
ON 'CHOOSE' OF BTN_ANDDAGBOK PERSISTENT RUN btnandadag_UI IN THIS-PROCEDURE.   
ON 'CHOOSE' OF BTN_ANDADOK PERSISTENT RUN btnandadok_UI IN THIS-PROCEDURE.   
ON 'CHOOSE' OF BTN_ANDTV PERSISTENT RUN btnandtv_UI IN THIS-PROCEDURE.                      
ON 'CHOOSE' OF BTN_BORTATIDL PERSISTENT RUN btnkoppbortl_UI IN THIS-PROCEDURE.   /*dok som är kopplad till tidl*/
ON 'CHOOSE' OF BTN_BDOCTIDTV PERSISTENT RUN btnborttv_UI IN THIS-PROCEDURE.      /*dok som är kopplad till avtal*/
ON 'CHOOSE' OF BTN_BDOCTIDDOK PERSISTENT RUN btnbortdok_UI IN THIS-PROCEDURE.    /*dok som är kopplad*/
ON 'CHOOSE' OF BTN_KOPPTIDL PERSISTENT RUN btnkopp_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_ANMTIDL PERSISTENT RUN btnkopp2_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_BESTTIDL PERSISTENT RUN btnkopp3_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_MAPPDOK PERSISTENT RUN btnmapp_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_MAPPTV PERSISTENT RUN btnmapp_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_NYDAGBOK PERSISTENT RUN btnnydag_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_NYADOK  PERSISTENT RUN btnnydok_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_NYATV PERSISTENT RUN btnnytv_UI IN THIS-PROCEDURE.              
              
ON 'VALUE-CHANGED' OF CMB_TRAK PERSISTENT RUN cmbtrak_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_ANLNR PERSISTENT RUN entryanl_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_ARBARTKOD PERSISTENT RUN entryarb_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_ARBARTKODOV PERSISTENT RUN entryarbov_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_ARBARTKOD PERSISTENT RUN larb_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_ARBARTKODOV PERSISTENT RUN larbov_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_PKODOV PERSISTENT RUN entrypkodov_UI IN THIS-PROCEDURE.
ON 'ENTRY' OF FILL-IN_PKOD PERSISTENT RUN entrypkod_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_PKODOV PERSISTENT RUN lpkodov_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF FILL-IN_PKOD PERSISTENT RUN lpkod_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-CLICK' OF FILL-IN_UTRYCKNING PERSISTENT RUN mut_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_GATILLTIDL PERSISTENT RUN btngatilltidl_UI IN THIS-PROCEDURE.              
ON 'CHOOSE' OF BTN_GATILLANM PERSISTENT RUN btngatillanm_UI IN THIS-PROCEDURE.       
ON 'CHOOSE' OF BTN_ANDDAGBOK PERSISTENT RUN btnanddag_UI IN THIS-PROCEDURE.       
ON 'CHOOSE' OF BTN_BORTDAGBOK PERSISTENT RUN btnbortdag_UI IN THIS-PROCEDURE.       
ON 'CHOOSE' OF BTN_GATILLKONTO PERSISTENT RUN btngatillkont_UI IN THIS-PROCEDURE.       
ON 'VALUE-CHANGED' OF BRW_ANV PERSISTENT RUN vcbrwanv_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_GATILLTP PERSISTENT RUN btngatilltp_UI IN THIS-PROCEDURE. 
ON 'VALUE-CHANGED' OF BRW_HAND PERSISTENT RUN vcbrwhand_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_ANDHAND PERSISTENT RUN btnandhand_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF BTN_BORTHAND PERSISTENT RUN btnborthand_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF BTN_NYHAND PERSISTENT RUN btnnyhand_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF BTN_MINDAT1HAND PERSISTENT RUN btnmin_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF BTN_UPDAT1HAND PERSISTENT RUN btnplus_UI IN THIS-PROCEDURE. 
ON 'LEAVE' OF FILL-IN-STARTDATHAND PERSISTENT RUN lstartd_UI IN THIS-PROCEDURE. 
ON 'MOUSE-MENU-CLICK' OF FILL-IN-STARTDATHAND PERSISTENT RUN mmstartd_UI IN THIS-PROCEDURE. 
ON 'VALUE-CHANGED' OF TOG_KLAR PERSISTENT RUN togklar_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF mFILL-IN_STARTDAG PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 1). 
ON 'CHOOSE' OF mFILL-IN_BEREDARE PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 2). 
ON 'CHOOSE' OF mFILL-IN_ARBANSVARIG PERSISTENT RUN valpers_UI IN THIS-PROCEDURE (INPUT 3). 
ON 'CHOOSE' OF mFILL-IN_BEST PERSISTENT RUN valkontakt_UI IN THIS-PROCEDURE. 
ON 'CHOOSE' OF mFILL-IN_KUND PERSISTENT RUN valkontakt_UI IN THIS-PROCEDURE. 

ON 'VALUE-CHANGED' OF BRW_PERS PERSISTENT RUN vcbrwpers_UI IN THIS-PROCEDURE.
ON 'LEAVE' OF BRW_PERS PERSISTENT RUN brwpersg_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_UPPKALK  PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 3).           
ON 'CHOOSE' OF BTN_KALKKALK PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 4).           
ON 'CHOOSE' OF BTN_VISKALK  PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 5).           
ON 'CHOOSE' OF BTN_KONVKALK PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 6).           
ON 'CHOOSE' OF BTN_EXPKALK  PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 7).           
ON 'CHOOSE' OF BTN_IMPKALK  PERSISTENT RUN kalk_UI  IN THIS-PROCEDURE (INPUT 8).           

ON 'CHOOSE' OF BTN_UPPBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 3).           
ON 'CHOOSE' OF BTN_BERBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 4).           
ON 'CHOOSE' OF BTN_INKBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 5).           
ON 'CHOOSE' OF BTN_LISTBER  PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 6).           
ON 'CHOOSE' OF BTN_ATGBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 7).           
ON 'CHOOSE' OF BTN_LASBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 8).           
ON 'CHOOSE' OF BTN_EXPBER   PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 9).           
ON 'CHOOSE' OF BTN_SCHAKTP  PERSISTENT RUN ber_UI  IN THIS-PROCEDURE (INPUT 10).           

ON 'CHOOSE' OF BTN_FAKFAK    PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 3).           
ON 'CHOOSE' OF BTN_FLISTAFAK PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 4).           
ON 'CHOOSE' OF BTN_KredFAK   PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 5).           
ON 'CHOOSE' OF BTN_PRELBFAK  PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 6).           
ON 'CHOOSE' OF BTN_UPPFAK    PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 7).           
ON 'CHOOSE' OF BTN_VFAKFAK   PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 8).           
ON 'CHOOSE' OF BTN_VISAOFAK  PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 9).
ON 'CHOOSE' OF BTN_KOPPFAK   PERSISTENT RUN fakt_UI  IN THIS-PROCEDURE (INPUT 10).

ON 'CHOOSE' OF BTN_UPPMARK    PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 3).           
ON 'CHOOSE' OF BTN_FASTIGHETMARK PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 4).           
ON 'CHOOSE' OF BTN_VARDMARK   PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 5).           
ON 'CHOOSE' OF BTN_VISKALMARK  PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 6).           
ON 'CHOOSE' OF BTN_VISMARK    PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 7).           
ON 'CHOOSE' OF BTN_OMRAKNA   PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 8).           
ON 'CHOOSE' OF BTN_EXPMARK  PERSISTENT RUN mark_UI  IN THIS-PROCEDURE (INPUT 9).
ON 'CHOOSE' OF BTN_BEHORAND  PERSISTENT RUN btnhorand_UI  IN THIS-PROCEDURE.
DEFINE VARIABLE dokh AS HANDLE NO-UNDO.*/
DEFINE VARIABLE ordningnr AS INTEGER NO-UNDO.
EMPTY TEMP-TABLE whandltemp2 NO-ERROR. 

/*IF Guru.Konstanter:varforetypval[43] = 1 THEN DO:
   CREATE whandltemp2.
   ordningnr = 1.   
   RUN whandle_UI (INPUT-OUTPUT ordningnr,FRAME-KOPP).
   RUN whandle_UI (INPUT-OUTPUT ordningnr,CMB_DOKTYP).
   RUN whandle_UI (INPUT-OUTPUT ordningnr,CMB_DOKSTATUS).
   RUN whandle_UI (INPUT-OUTPUT ordningnr,BTN_EXPMARK).
   RUN whandle_UI (INPUT-OUTPUT ordningnr,BRW_KOPP).
    
   RUN AONRDOK.P PERSISTENT SET dokh (INPUT THIS-PROCEDURE ,INPUT framesizeh,INPUT TABLE whandltemp2). 
END.
ELSE DO:
   ASSIGN
   CMB_DOKTYP:HIDDEN = TRUE
   CMB_DOKSTATUS:HIDDEN = TRUE.
END.   */


DEFINE VARIABLE btnnovit AS HANDLE NO-UNDO. 
DEFINE VARIABLE valpersval AS INTEGER NO-UNDO.

PROCEDURE whandle_UI :
   DEFINE INPUT-OUTPUT PARAMETER ordnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER ordh AS HANDLE NO-UNDO.
   ASSIGN
   whandltemp2.WF[ordnr] = ordh.
   ordnr = ordnr + 1.
END PROCEDURE.

PROCEDURE brwpersg_UI : 
   /*BRW_PERS:HIDDEN = TRUE.*/  
END PROCEDURE.
PROCEDURE vcbrwpers_UI :
   /*RUN selectfoc_UI (INPUT 19).
   IF AVAILABLE personaltemp THEN DO:
      IF valpersval = 1 THEN DO:
         ASSIGN
         FILL-IN_STARTDAG:SCREEN-VALUE  = STRING(personaltemp.PERSONALKOD)
         FILL-IN-NAMN-1:SCREEN-VALUE  = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN).
      END.
      ELSE IF valpersval = 2 THEN DO:
         FILL-IN_BEREDARE:SCREEN-VALUE  = STRING(personaltemp.PERSONALKOD).
         FILL-IN-NAMN-2:SCREEN-VALUE  = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN).
      END.
      ELSE IF valpersval = 3 THEN DO:
         FILL-IN_ARBANSVARIG:SCREEN-VALUE  = STRING(personaltemp.PERSONALKOD).
         FILL-IN-NAMN-3:SCREEN-VALUE  = STRING(personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN).
      END.      
   END.*/   
END PROCEDURE.
PROCEDURE valpers_UI :
   /*DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   valpersval = vad.
   BRW_PERS:HIDDEN = FALSE.
   BRW_PERS:MOVE-TO-TOP ().   
   FIND FIRST personaltemp WHERE NO-LOCK NO-ERROR.
   IF NOT AVAILABLE personaltemp THEN DO:      
      RUN allpers_UI IN nyttaoapph (OUTPUT TABLE personaltemp).      
   END.
   ELSE RUN setlastrowid_UI IN brwproc[19] (INPUT ROWID(personaltemp)).        
   RUN openbdynspec_UI IN brwproc[19].
   RUN lastselectdyn_UI IN brwproc[19].
   APPLY "ENTRY" TO BRW_PERS.*/
END PROCEDURE.

PROCEDURE lort_UI :
   /*RUN AONRNAMNKOLL.P (INPUT 1, INPUT FILL-IN_ORT:SCREEN-VALUE,OUTPUT musz).
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RETURN NO-APPLY.
   END.*/   
   
END PROCEDURE.
PROCEDURE btnvit_UI :
   DEFINE INPUT PARAMETER btnh AS HANDLE NO-UNDO.
   DEFINE VARIABLE btnlabel AS CHARACTER NO-UNDO.
   IF btnnovit NE ? THEN DO:
      btnlabel = btnnovit:IMAGE.
      btnlabel = REPLACE(btnlabel,"_vit.gif",".gif"). 
      btnnovit:LOAD-IMAGE (btnlabel) NO-ERROR.
   END.
   btnlabel = btnh:IMAGE.
   btnlabel = REPLACE(btnlabel,".gif","_vit.gif"). 
   btnh:LOAD-IMAGE (btnlabel) NO-ERROR.
   btnnovit = btnh.   
END PROCEDURE.
PROCEDURE btnrestid_UI :   
   RUN btnvit_UI (INPUT MBTN_RESTID). 
   RUN frame_UI IN huvprogh (INPUT "REST").
   markfr = "REST".
   IF resfr = FALSE THEN  RUN resbild_UI.         
   RUN openbdynspec_UI IN brwproc[3].
   resfr = TRUE.   
   BRW_RESTID:HIDDEN = FALSE.
END PROCEDURE.

PROCEDURE btnovrig_UI :
   RUN btnvit_UI (INPUT MBTN_OVRIG).
   RUN frame_UI IN huvprogh (INPUT "OVR").
   markfr = "OVR".
   RUN openbdynspec_UI IN brwproc[4].
   
   tempvar = "lontmp.ERSFINNS = TRUE AND lontmp.KOD = """ + STRING(ansttemp.KOD) + """ ".
   RUN setcolsortvar_UI IN brwproc[5] (INPUT tempvar).
   RUN openbdynspec_UI IN brwproc[5].
   RUN dselectfoc_UI (INPUT 5).
   RELEASE lontmp NO-ERROR.
END PROCEDURE.


  
PROCEDURE mbtnovr_UI :


END PROCEDURE.


PROCEDURE mbtnnatt_UI :
   /*RUN btnvit_UI (INPUT MBTN_NATT).
   RUN frame_UI IN huvprogh (INPUT "NATT").*/
   
END PROCEDURE.   

          
PROCEDURE mbtnmalt_UI :
   RUN btnvit_UI (INPUT MBTN_MALTID).
   RUN frame_UI IN huvprogh (INPUT "MALT").
   markfr = "MALT".
   /*RUN selectfoc_UI (INPUT 3).
   RUN vcbrwaotid_UI.*/
   
   
END PROCEDURE.

 
PROCEDURE resbild_UI :

   EMPTY TEMP-TABLE respers NO-ERROR.   
   regdatum = bdatum.
   REPEAT:
      IF regdatum > avdatum THEN LEAVE.
      IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN enf = "Endag".
      ELSE IF FILL-IN-ENFLE:SCREEN-VALUE = "Flerdygn" THEN enf = "Flerdag".
      RUN REGVEC.P.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 2 THEN DO:
         regdagnamn = "mån".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 3 THEN DO:
         regdagnamn = "tis".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 4 THEN DO:
         regdagnamn = "ons".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 5 THEN DO:
         regdagnamn = "tor".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 6 THEN DO:
         regdagnamn = "fre".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE. 
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 7 THEN DO:
         regdagnamn = "lör".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.
      {SLUTARBW.I}
      IF WEEKDAY(regdatum) = 1 THEN DO:
         regdagnamn = "sön".
         RUN restid_UI.
         regdatum = regdatum + 1.
         IF regdatum > avdatum THEN LEAVE.
      END.     
   END. /*REPEAT*/   
END PROCEDURE.

 
PROCEDURE restid_UI :
   /*MORGON*/
   CREATE respers.
   ASSIGN 
   respers.AONR = FILL-IN-AONR:SCREEN-VALUE 
   respers.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE)
   respers.VECKONUMMER = regvnr 
   respers.DATUM = regdatum 
   respers.DAG = regdagnamn
   respers.START = regstart
   respers.SLUT = regstart  
   respers.OVERTIDUTTAG = personaltemp.OVERTIDUTTAG
 /*  respers.BILFORARE = FILL-IN-BIL*/                                  
   respers.ENFLERDAGS = enf
   respers.TIDREC = ?.   
   IF FILL-IN-NATT:SCREEN-VALUE = "Nej" THEN respers.NATTRAKT = FALSE.
   ELSE respers.NATTRAKT = TRUE.
   IF FILL-IN-BIL:SCREEN-VALUE = "Nej" THEN respers.BILFORARE = FALSE.
   ELSE respers.BILFORARE = TRUE.
   IF personaltemp.OVERTIDUTTAG = "F" THEN respers.OVERTIDUTTAG = "Ö".
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Flerdygn" AND regdatum = bdatum THEN DO:
       IF regstart = regslut THEN DO:
          ASSIGN respers.START = DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE).
          ASSIGN respers.SLUT = DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE).
       END.
       ELSE IF DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE) < regstart THEN DO:
           ASSIGN respers.START = DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE).
       END.
       ELSE IF DECIMAL(FILL-IN-STARTAR) > regslut THEN DO:
          ASSIGN respers.START = DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE).
          ASSIGN respers.SLUT = DECIMAL(FILL-IN-STARTAR:SCREEN-VALUE).
       END.        
   END.
   IF CMB_OVERUT:SCREEN-VALUE = "Komp" THEN ASSIGN respers.OVERTIDUTTAG = "K". 
   IF CMB_OVERUT:SCREEN-VALUE = "Över" THEN ASSIGN respers.OVERTIDUTTAG = "Ö".
   nytid = regstart.
   RUN TIMSEK.P. 
   /*MORGON*/    
   ASSIGN
   sok1 = pkod
   sok4 = STRING(respers.DATUM)
   sok5 = regstart.
   RUN nyupp_UI (INPUT 28).     
   IF sok2 = 1 THEN musz = TRUE.                   
   IF musz = FALSE THEN DO:   
      IF sekunder < restidsek THEN ASSIGN respers.START = 00.00.
      ELSE DO:             
         IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN DO:                           
            IF RAD_MKTID:SCREEN-VALUE = string(1) OR RAD_MKTID:SCREEN-VALUE = string(2) THEN sekunder = sekunder - restidsek. 
            RUN SEKTIM.P.
            ASSIGN respers.START = nytid.
         END.
      END.      
   END.       
   IF globforetag = "gkal" OR globforetag = "SUND" OR globforetag = "SNAT" OR globforetag = "MISV" OR globforetag = "LULE" OR globforetag = "elpa" THEN DO:   
      IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" AND regdatum = bdatum AND bdatum = avdatum THEN DO:
         IF respers.START = respers.START AND respers.START = regstart AND decimal(FILL-IN-STARTAR:SCREEN-VALUE) < regstart THEN DO:
            ASSIGN respers.START = decimal(FILL-IN-STARTAR:SCREEN-VALUE).
         END.
      END.
   END.
   musz = FALSE.
   /*KVÄLL*/
   CREATE respers.
   ASSIGN 
   respers.AONR = FILL-IN-AONR:SCREEN-VALUE
   respers.DELNR = integer(FILL-IN-DELNR:SCREEN-VALUE)
   respers.VECKONUMMER = regvnr 
   respers.DATUM = regdatum 
   respers.DAG = regdagnamn
   respers.OVERTIDUTTAG = personaltemp.OVERTIDUTTAG 
   /*respers.BILFORARE = FILL-IN-BIL*/
   respers.ENFLERDAGS = enf
   respers.START = regslut
   respers.SLUT = regslut
   respers.TIDREC = ?.
   IF FILL-IN-NATT:SCREEN-VALUE = "Nej" THEN respers.NATTRAKT = FALSE.
   ELSE respers.NATTRAKT = TRUE.
   IF FILL-IN-BIL:SCREEN-VALUE = "Nej" THEN respers.BILFORARE = FALSE.
   ELSE respers.BILFORARE = TRUE.
   IF personaltemp.OVERTIDUTTAG = "F" THEN respers.OVERTIDUTTAG = "Ö".
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Flerdygn" AND regdatum = avdatum - 1 THEN DO:
      IF decimal(FILL-IN-SLUTAR:SCREEN-VALUE) < regstart THEN DO:      
         IF regstart = regslut THEN.
         ELSE ASSIGN respers.SLUT = 24.         
      END.
   END.
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Flerdygn" AND regdatum = avdatum THEN DO:
      IF regstart = regslut THEN DO:
         ASSIGN respers.START = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).
         ASSIGN respers.SLUT = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).
      END.
      ELSE IF decimal(FILL-IN-SLUTAR:SCREEN-VALUE) > regslut THEN DO:
         ASSIGN respers.SLUT = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).
      END.
      ELSE IF decimal(FILL-IN-SLUTAR:SCREEN-VALUE) < regstart  THEN DO:
         ASSIGN respers.START = 0.
         ASSIGN respers.SLUT = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).
      END.   
   END.
   IF CMB_OVERUT:SCREEN-VALUE = "Komp" THEN ASSIGN respers.OVERTIDUTTAG = "K". 
   IF CMB_OVERUT:SCREEN-VALUE = "Över" THEN ASSIGN respers.OVERTIDUTTAG = "Ö".
   nytid = regslut.
   RUN TIMSEK.P.
   ASSIGN
   sok1 = pkod
   sok4 = STRING(respers.DATUM)
   sok5 = regslut.
   RUN nyupp_UI (INPUT 29).     
   IF sok2 = 1 THEN musz = TRUE.
   IF musz = FALSE THEN DO:      
      IF (sekunder + restidsek) > 86400 THEN ASSIGN respers.SLUT = 24.00.
      ELSE DO:       
         IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN DO:
            IF RAD_MKTID:SCREEN-VALUE = string(1) OR RAD_MKTID:SCREEN-VALUE = string(3) THEN sekunder = sekunder + restidsek. 
            RUN SEKTIM.P.
            ASSIGN respers.SLUT = nytid.
         END.
      END.        
   END.            
   IF globforetag = "gkal" OR globforetag = "SUND" OR globforetag = "SNAT" OR globforetag = "MISV" OR globforetag = "LULE" OR globforetag = "elpa" THEN DO:   
      IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" AND regdatum = bdatum AND bdatum = avdatum THEN DO:         
         IF respers.SLUT = respers.SLUT AND respers.SLUT = regslut AND decimal(FILL-IN-SLUTAR:SCREEN-VALUE) > regslut THEN DO:
            ASSIGN respers.SLUT = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).
         END.
      END.
   END.
   musz = FALSE.
END PROCEDURE.



PROCEDURE avb_UI :
   
   IF VALID-HANDLE(berapph) THEN DELETE PROCEDURE berapph NO-ERROR.
      
END PROCEDURE.

PROCEDURE btnok_UI :
   
   RUN malskap_UI.
   RUN kostskap_UI.
   IF resfr = FALSE THEN DO:   
      RUN resbild_UI.              
   END.
   
      
   /*FOR EACH RESpers:
      MESSAGE respers.datum respers.start respers.slut
      VIEW-AS ALERT-BOX.
   END.
     
   FOR EACH maltidfil:
      MESSAGE maltidfil.MFRU maltidfil.MLUN maltidfil.MMID maltidfil.MDAG maltidfil.MDATUM
      VIEW-AS ALERT-BOX.
   END.
   FOR EACH kostfil:
      MESSAGE "K" kostfil.MFRU kostfil.MLUN kostfil.MMID kostfil.MDAG kostfil.MDATUM
      VIEW-AS ALERT-BOX.
   END.*/   
   /*fbaonrvar = TRUE.
   RUN btnok_UI IN huvprogh.
   FIND FIRST uppaonrtemp NO-LOCK NO-ERROR.
   fbaonrvar = FALSE.
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RETURN NO-APPLY.
   END.
   RUN avb_UI.
   RUN avsluta_UI IN huvprogh.*/
END PROCEDURE.

PROCEDURE mch_UI :
   DEFINE INPUT PARAMETER cfr   AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER clu  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER cmi   AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER lfr   AS LOGICAL  NO-UNDO.
   DEFINE OUTPUT PARAMETER llu  AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER lmi   AS LOGICAL NO-UNDO.
   
   IF cfr = "Ja" THEN lfr = TRUE.
   ELSE lfr = FALSE.
   IF clu = "Ja" THEN llu = TRUE.
   ELSE llu = FALSE.
   IF cmi = "Ja" THEN lmi = TRUE.
   ELSE lmi = FALSE.     
END PROCEDURE.


PROCEDURE malskap_UI :
   flveck = 1.
   regdatum = bdatum.
   REPEAT:
      IF regdatum > avdatum THEN DO:
         musz = TRUE.
         LEAVE.
      END.
      IF flveck = 1 THEN DO:         
         CREATE maltidfil.                      
         IF WEEKDAY(regdatum) = 2 THEN DO:
            RUN mch_UI (INPUT FILL-IN-MANF:SCREEN-VALUE, INPUT FILL-IN-MANL:SCREEN-VALUE,input FILL-IN-MANM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "mån"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TISF:SCREEN-VALUE, INPUT FILL-IN-TISL:SCREEN-VALUE,input FILL-IN-TISM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tis"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            RUN mch_UI (INPUT FILL-IN-ONSF:SCREEN-VALUE, INPUT FILL-IN-ONSL:SCREEN-VALUE,input FILL-IN-ONSM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "ons"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TORF:SCREEN-VALUE, INPUT FILL-IN-TORL:SCREEN-VALUE,input FILL-IN-TORM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tor"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            RUN mch_UI (INPUT FILL-IN-FREF:SCREEN-VALUE, INPUT FILL-IN-FREL:SCREEN-VALUE,input FILL-IN-FREM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "fre"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            RUN mch_UI (INPUT FILL-IN-LORF:SCREEN-VALUE, INPUT FILL-IN-LORL:SCREEN-VALUE,input FILL-IN-LORM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "lör"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            RUN mch_UI (INPUT FILL-IN-SONF:SCREEN-VALUE, INPUT FILL-IN-SONL:SCREEN-VALUE,input FILL-IN-SONM:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "sön"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
            flveck = 2.           
         END.
      END.
      ELSE IF flveck = 2 THEN DO:
         CREATE maltidfil.                      
         IF WEEKDAY(regdatum) = 2 THEN DO:
            RUN mch_UI (INPUT FILL-IN-MANF-2:SCREEN-VALUE, INPUT FILL-IN-MANL-2:SCREEN-VALUE,input FILL-IN-MANM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "mån"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TISF-2:SCREEN-VALUE, INPUT FILL-IN-TISL-2:SCREEN-VALUE,input FILL-IN-TISM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tis"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            RUN mch_UI (INPUT FILL-IN-ONSF-2:SCREEN-VALUE, INPUT FILL-IN-ONSL-2:SCREEN-VALUE,input FILL-IN-ONSM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "ons"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TORF-2:SCREEN-VALUE, INPUT FILL-IN-TORL-2:SCREEN-VALUE,input FILL-IN-TORM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tor"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            RUN mch_UI (INPUT FILL-IN-FREF-2:SCREEN-VALUE, INPUT FILL-IN-FREL-2:SCREEN-VALUE,input FILL-IN-FREM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "fre"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            RUN mch_UI (INPUT FILL-IN-LORF-2:SCREEN-VALUE, INPUT FILL-IN-LORL-2:SCREEN-VALUE,input FILL-IN-LORM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "lör"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            RUN mch_UI (INPUT FILL-IN-SONF-2:SCREEN-VALUE, INPUT FILL-IN-SONL-2:SCREEN-VALUE,input FILL-IN-SONM-2:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "sön"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
            flveck = 3.           
         END.
      END. 
      ELSE IF flveck = 3 THEN DO:
         CREATE maltidfil.                      
         IF WEEKDAY(regdatum) = 2 THEN DO:
            RUN mch_UI (INPUT FILL-IN-MANF-3:SCREEN-VALUE, INPUT FILL-IN-MANL-3:SCREEN-VALUE,input FILL-IN-MANM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "mån"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TISF-3:SCREEN-VALUE, INPUT FILL-IN-TISL-3:SCREEN-VALUE,input FILL-IN-TISM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tis"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            RUN mch_UI (INPUT FILL-IN-ONSF-3:SCREEN-VALUE, INPUT FILL-IN-ONSL-3:SCREEN-VALUE,input FILL-IN-ONSM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "ons"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            RUN mch_UI (INPUT FILL-IN-TORF-3:SCREEN-VALUE, INPUT FILL-IN-TORL-3:SCREEN-VALUE,input FILL-IN-TORM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "tor"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            RUN mch_UI (INPUT FILL-IN-FREF-3:SCREEN-VALUE, INPUT FILL-IN-FREL-3:SCREEN-VALUE,input FILL-IN-FREM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "fre"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            RUN mch_UI (INPUT FILL-IN-LORF-3:SCREEN-VALUE, INPUT FILL-IN-LORL-3:SCREEN-VALUE,input FILL-IN-LORM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "lör"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            RUN mch_UI (INPUT FILL-IN-SONF-3:SCREEN-VALUE, INPUT FILL-IN-SONL-3:SCREEN-VALUE,input FILL-IN-SONM-3:SCREEN-VALUE,OUTPUT lfr,OUTPUT llu,OUTPUT lmi).
            ASSIGN maltidfil.MPERSONALKOD = pkod
            maltidfil.MFRU = lfr
            maltidfil.MLUN = llu
            maltidfil.MMID = lmi
            maltidfil.MDAG = "sön"
            /*maltidfil.MVECKONUMMER = FILL-IN-VNR*/
            maltidfil.MDATUM = regdatum.
            flveck = 4.           
         END.
      END.      
      regdatum = regdatum + 1.
   END.   
   musz = FALSE.
      
END PROCEDURE.

PROCEDURE kostskap_UI :
   
   EMPTY TEMP-TABLE mtidfil NO-ERROR. 
   FOR EACH maltidfil  NO-LOCK:
      CREATE mtidfil.
      BUFFER-COPY maltidfil TO mtidfil.
   END.

   ASSIGN 
   ejand = FALSE
   allmat = FALSE.
   /*tidigare Internat gör att det även är kostförmån för frukost. Lena Jönsson och Jarmo Klint har bestämt att detta inte längre gäller 20190221 */
   IF globforetag = "cSUND" OR globforetag = "SNAT" OR globforetag = "cMISV" OR globforetag = "cELPA"  THEN allmat = TRUE.
   IF globforetag = "sund" OR globforetag = "SNAT" OR globforetag = "MISV" OR globforetag = "GKAL"
   OR globforetag = "elpa" THEN ejand = TRUE.
   
   FIND FIRST personaltemp WHERE personaltemp.PERSONALKOD = pkod NO-LOCK NO-ERROR.
   ASSIGN   
   regdatum = bdatum.
   regdatumspar2 = bdatum.
   RUN REGVEC.P.

   FIND FIRST mtidfil NO-LOCK NO-ERROR.
   regdatum = mtidfil.MDATUM.
   REPEAT:   
      IF regdatum > avdatum THEN LEAVE.
      FIND FIRST mtidfil WHERE mtidfil.MDATUM = regdatum  NO-LOCK NO-ERROR.
      kollfru = FALSE.
      IF mtidfil.MDAG = "mån" THEN DO:                                              
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE. 
      END.
      IF mtidfil.MDAG = "tis" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
      END.
      IF mtidfil.MDAG = "ons" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
      END.
      IF mtidfil.MDAG = "tor" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
      END.
      IF mtidfil.MDAG = "fre" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
      END.
      IF mtidfil.MDAG = "lör" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
      END.
      IF mtidfil.MDAG = "sön" THEN DO:
         IF allmat = TRUE THEN DO:   
            IF regdatum = bdatum OR regdatum = avdatum THEN kollfru = kollfru.
            ELSE IF mtidfil.MFRU = TRUE AND mtidfil.MLUN = TRUE AND mtidfil.MMID = TRUE THEN kollfru = TRUE.                              
         END.
         IF kollfru = TRUE THEN kollfru = FALSE.
         ELSE ASSIGN mtidfil.MFRU = FALSE.
         LEAVE.
      END.
      regdatum = regdatum + 1.
   END.   
   

   FOR EACH mtidfil:
      CREATE kostfil.
      BUFFER-COPY mtidfil TO kostfil.
   END.


      
   
END PROCEDURE.
                   
PROCEDURE vcbrwaonr_UI :
   RUN selectfoc_UI (INPUT 1).
   IF musz = FALSE THEN DO:      
      RUN fillinupdate_UI (INPUT 1).                    
   END.
   musz = FALSE.
      
END PROCEDURE.

PROCEDURE vcbrweaonr_UI :
   RUN selectfoc_UI (INPUT 2).
   IF musz = FALSE THEN DO:      
      RUN fillinupdate_UI (INPUT 2).                    
   END.
   musz = FALSE.
      
END PROCEDURE.

PROCEDURE vcbrwresa2_UI:
   RUN selectfoc_UI (INPUT 3).
   /*IF musz = FALSE THEN DO:      
      RUN fillinupdate_UI (INPUT 2).                    
   END.
   musz = FALSE.*/
      
END PROCEDURE.


PROCEDURE radfast_UI :
   /*RAD_FAST = INPUT FRAME FRAME-BARABREDD RAD_FAST .*/
      
         
   IF RAD_FAST:SCREEN-VALUE = STRING(1) THEN DO:
      CMB_OMR:SCREEN-VALUE = sparomrade.
      /*CMB_OMR:SCREEN-VALUE IN FRAME FRAME-BARABREDD = sparomrade NO-ERROR.*/
      FIND FIRST omrtemp WHERE omrtemp.NAMN = CMB_OMR:SCREEN-VALUE   USE-INDEX OMRNAMN NO-LOCK NO-ERROR.
   END.  
   IF globforetag = "cELPA" OR globforetag = "GKAL" THEN DO:
      /*CMB_OMR visa "område alla" för fasta aonr*/
      IF RAD_FAST:SCREEN-VALUE = STRING(2) THEN DO:
         ASSIGN 
         sparomrade = CMB_OMR:SCREEN-VALUE. 
         CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".               
      END.
   END.
   RUN nycolsortprep_UI (INPUT 1).
   IF RAD_FAST:SCREEN-VALUE = STRING(3) THEN DO:      
      RUN openbdynspec_UI IN brwproc[2].
      ASSIGN
      BRW_AONR:HIDDEN = TRUE   
      BRW_EAONR:HIDDEN = FALSE
      CMB_OMR:HIDDEN = TRUE
      CMB_AVD:HIDDEN = TRUE.         
      /*ENABLE BRW_EAONR WITH FRAME {&FRAME-NAME}.*/
   END.
   ELSE DO:         
      RUN openbdynspec_UI IN brwproc[1].
      ASSIGN
      BRW_AONR:HIDDEN = FALSE   
      BRW_EAONR:HIDDEN = TRUE
      CMB_OMR:HIDDEN = FALSE
      CMB_AVD:HIDDEN = FALSE.
         
      /*ENABLE BRW_AONR WITH FRAME {&FRAME-NAME}.*/
   END.
   /*IF AVAILABLE utsokaonr THEN DO:   
      status-ok = BRW_AONR:DESELECT-FOCUSED-ROW() NO-ERROR.
   END.*/
   
   /*DISPLAY RAD_FAST WITH FRAME {&FRAME-NAME}.*/   
      
            
END PROCEDURE.

 
PROCEDURE nycolsortprep_UI :   
   {NYCOL3.I}
END PROCEDURE.


 
PROCEDURE fiaonr_UI :

   ASSIGN
   RAD_FAST:HIDDEN  = FALSE      
   FILL-IN_AONRS:HIDDEN = FALSE 
   FILL-IN_ORTS:HIDDEN = FALSE
   CMB_OMR:HIDDEN = FALSE
   CMB_AVD:HIDDEN = FALSE.
 
   /*ENABLE FILL-IN_AONRS FILL-IN_ORTS RAD_FAST WITH FRAME {&FRAME-NAME}.*/       
   ASSIGN 
   FILL-IN-SOKPA:HIDDEN = TRUE.
   RUN aoladda_UI.  
   /*IF BRW_AONR:VISIBLE = TRUE THEN RUN selectfoc_UI (INPUT 1).
   IF BRW_EAONR:VISIBLE = TRUE THEN RUN selectfoc_UI (INPUT 2).*/ 
END PROCEDURE.


 
PROCEDURE aoladda_UI :            
   ASSIGN
   musz = FALSE
   FILL-IN-SOKPA:SCREEN-VALUE = "Sök på:"
   CMB_OMR:HIDDEN  = FALSE 
   CMB_AVD:HIDDEN = FALSE.

   FIND FIRST utsokaonr WHERE utsokaonr.AONR = FILL-IN-AONR:SCREEN-VALUE AND utsokaonr.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) AND
   utsokaonr.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.   
   IF ( globforetag = "SUND" OR globforetag = "SNAT" OR globforetag = "MISV" OR globforetag = "LULE" OR globforetag = "cELPA" )  AND Guru.Konstanter:globallao = TRUE THEN DO:
      IF AVAILABLE utsokaonr THEN DO:
         aonrrec = RECID(utsokaonr).
         IF utsokaonr.FASTAAONR = TRUE THEN RAD_FAST:SCREEN-VALUE = STRING(2).
         IF utsokaonr.FASTAAONR = FALSE THEN RAD_FAST:SCREEN-VALUE = STRING(1).
         /*RAD_FAST = utsokaonr.FASTAAONR.*/
      END.
      sparomrade = Guru.Konstanter:gomrk + " : alla".
      ASSIGN 
      CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
      /*CMB_OMR = INPUT CMB_OMR.*/            
   END.   
   ELSE DO:
      IF AVAILABLE utsokaonr THEN DO:         
         /*LENA TESTAR*/
         IF Guru.Konstanter:globallao = FALSE AND utsokaonr.FASTAAONR = TRUE AND utsokaonr.OMRADE = " " THEN DO:
            FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr 
            USE-INDEX OMR NO-LOCK NO-ERROR.           
            aonrrec = RECID(utsokaonr).
            IF utsokaonr.FASTAAONR = TRUE THEN RAD_FAST:SCREEN-VALUE = STRING(2).
            IF utsokaonr.FASTAAONR = FALSE THEN RAD_FAST:SCREEN-VALUE = STRING(1).
            /*RAD_FAST = utsokaonr.FASTAAONR.*/
            ASSIGN CMB_OMR:SCREEN-VALUE = omrtemp.NAMN NO-ERROR.                        
            IF CMB_OMR:SCREEN-VALUE = ? THEN DO:
               CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
            END.
         END.
         ELSE IF Guru.Konstanter:globallao = FALSE AND utsokaonr.FASTAAONR = FALSE AND utsokaonr.OMRADE = " " THEN DO:
            FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr 
            USE-INDEX OMR NO-LOCK NO-ERROR.           
            aonrrec = RECID(utsokaonr).
            IF utsokaonr.FASTAAONR = TRUE THEN RAD_FAST:SCREEN-VALUE = STRING(2).
            IF utsokaonr.FASTAAONR = FALSE THEN RAD_FAST:SCREEN-VALUE = STRING(1).
            /*RAD_FAST = utsokaonr.FASTAAONR.*/
            ASSIGN CMB_OMR:SCREEN-VALUE = omrtemp.NAMN NO-ERROR.                        
            IF CMB_OMR:SCREEN-VALUE = ? THEN DO:
               CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
            END.
         END.
         ELSE DO:        
            FIND FIRST omrtemp WHERE omrtemp.OMRADE = utsokaonr.OMRADE 
            USE-INDEX OMR NO-LOCK NO-ERROR.
            IF NOT AVAILABLE omrtemp THEN DO:
               IF Guru.Konstanter:globomr = "" OR Guru.Konstanter:globallao = TRUE THEN DO:
                   sparomrade = Guru.Konstanter:gomrk + " : alla".
               END.
               ELSE DO:
                  IF sparomrade = "" THEN DO:
                     FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr 
                     USE-INDEX OMR NO-LOCK NO-ERROR.
                     IF NOT AVAILABLE omrtemp THEN DO:
                        FIND FIRST omrtemp USE-INDEX OMR NO-LOCK NO-ERROR.
                     END.
                     sparomrade = omrtemp.NAMN.
                  END.
               END.
               ASSIGN 
               CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
               /*CMB_OMR = INPUT CMB_OMR.*/
            END.
            ELSE DO:         
               IF sparomrade = "" THEN DO:
                  FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr  USE-INDEX OMR NO-LOCK NO-ERROR.
                  IF NOT AVAILABLE omrtemp THEN DO:
                     FIND FIRST omrtemp USE-INDEX OMR NO-LOCK NO-ERROR.
                  END.
                  sparomrade = omrtemp.NAMN.
               END.
               ELSE sparomrade = omrtemp.NAMN.
               FIND FIRST omrtemp WHERE omrtemp.OMRADE = utsokaonr.OMRADE 
               USE-INDEX OMR NO-LOCK NO-ERROR.           
               ASSIGN CMB_OMR:SCREEN-VALUE = omrtemp.NAMN NO-ERROR.                        
               IF CMB_OMR:SCREEN-VALUE = ? THEN DO:
                  CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
               END.
            END.
            aonrrec = RECID(utsokaonr).
            IF utsokaonr.FASTAAONR = TRUE THEN RAD_FAST:SCREEN-VALUE = STRING(2).
            IF utsokaonr.FASTAAONR = FALSE THEN RAD_FAST:SCREEN-VALUE = STRING(1).            
         END.
      END.
      ELSE DO:
         IF Guru.Konstanter:globomr = "" OR Guru.Konstanter:globallao = TRUE THEN DO:
            sparomrade = Guru.Konstanter:gomrk + " : alla".
            ASSIGN CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".            
            /*DISPLAY CMB_OMR WITH FRAME {&FRAME-NAME}.*/
         END.
         ELSE DO:
            FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr 
            USE-INDEX OMR NO-LOCK NO-ERROR.
            IF NOT AVAILABLE omrtemp THEN DO:
               FIND FIRST omrtemp USE-INDEX OMR NO-LOCK NO-ERROR.
            END.
            sparomrade = omrtemp.NAMN.
            CMB_OMR:SCREEN-VALUE = omrtemp.NAMN NO-ERROR.                        
            IF CMB_OMR:SCREEN-VALUE = ? THEN DO:
               CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
            END.
            /*CMB_OMR = INPUT CMB_OMR.
            DISPLAY CMB_OMR WITH FRAME {&FRAME-NAME}.*/
         END.
         aonrrec = 0.
         RAD_FAST:SCREEN-VALUE = STRING(1).         
         /*RAD_FAST = FALSE.*/
      END.           
   END.
   IF Guru.Konstanter:varforetypval[24] = 1 THEN DO:
      /*IF BRW_EAONR:VISIBLE = TRUE THEN RUN selectfoc_UI (INPUT 2).*/   
      IF FILL-IN-AONR:SCREEN-VALUE = ""  THEN DO:
         FIND FIRST egnaao NO-LOCK NO-ERROR.                  
      END.            
      ELSE DO:         
         FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) AND egnaao.AONRAVDATUM = 01/01/1991 NO-LOCK NO-ERROR.         
      END.
      IF AVAILABLE egnaao THEN DO:      
         ASSIGN RAD_FAST:SCREEN-VALUE = STRING(3).
      END.
   END.   
   /*DISPLAY RAD_FAST FILL-IN-SOKPA WITH FRAME {&FRAME-NAME}.*/
   IF Guru.Konstanter:varforetypval[24] = 1 AND RAD_FAST:SCREEN-VALUE = STRING(3) THEN DO:         
      /*ENABLE BRW_EAONR WITH FRAME FRAME-BARABREDD.      */
      RUN openbdynspec_UI IN brwproc[2].      
      IF FILL-IN-AONR:SCREEN-VALUE NE "" THEN DO:
         FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) AND
         egnaao.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
         IF AVAILABLE egnaao THEN DO:            
            RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(egnaao)).
            RUN lastselectdyn_UI IN brwproc[2].            
         END.
      END.      
      ASSIGN
      BRW_EAONR:HIDDEN = FALSE
      BRW_AONR:HIDDEN = TRUE
      CMB_OMR:HIDDEN = TRUE
      CMB_AVD:HIDDEN = TRUE.
       
   END.
   ELSE DO:   
      /*ENABLE BRW_AONR WITH FRAME FRAME-BARABREDD.*/
      omravdand = 2.
      RUN nycolsortprep_UI (INPUT 1).
      RUN openbdynspec_UI IN brwproc[1].
      IF FILL-IN-AONR:SCREEN-VALUE NE "" THEN DO:
         FIND FIRST utsokaonr WHERE utsokaonr.AONR = FILL-IN-AONR:SCREEN-VALUE AND utsokaonr.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) AND utsokaonr.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
         IF AVAILABLE utsokaonr THEN DO:
            RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(utsokaonr)).
            RUN lastselectdyn_UI IN brwproc[1].
         END.
      END.      
      ASSIGN
      BRW_AONR:HIDDEN = FALSE
      CMB_OMR:HIDDEN = FALSE
      CMB_AVD:HIDDEN = FALSE.
       
   END.
   /*ENABLE FILL-IN_AONRS FILL-IN_ORTS RAD_FAST WITH FRAME {&FRAME-NAME}.*/
   ASSIGN   
   RAD_FAST:HIDDEN = FALSE   
   FILL-IN_AONRS:HIDDEN = FALSE 
   FILL-IN_ORTS:HIDDEN = FALSE.

END PROCEDURE.


PROCEDURE btnbyt_UI :
   
IF markfr = "REST" THEN DO:  
      IF resfr = FALSE THEN RUN resbild_UI.   
      ELSE DO:
         RUN vcbytao_UI.
      END.                      
      RUN openbdynspec_UI IN brwproc[3].
   END.    
END PROCEDURE.




PROCEDURE btnskapaen_UI :
     
   
   /*ASSIGN
   FILL-IN-AONR = INPUT FILL-IN-AONR
   FILL-IN-DELNR = INPUT FILL-IN-DELNR.*/
   FIND FIRST utsokaonr WHERE utsokaonr.AONR =  FILL-IN-AONR:SCREEN-VALUE AND utsokaonr.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) NO-LOCK NO-ERROR.
   IF NOT AVAILABLE utsokaonr THEN DO:
      {SOKSTART.I}
      ASSIGN
      soktemp.SOKVAL = 47
      soktemp.SOKCHAR[1] = FILL-IN-AONR:SCREEN-VALUE
      soktemp.SOKINT[1] = INTEGER(FILL-IN-DELNR:SCREEN-VALUE).
      {SOKANROP.I}      
      IF soktemp.SOKCHAR[2] = ? THEN DO:
         MESSAGE Guru.Konstanter:gaol FILL-IN-AONR STRING(FILL-IN-DELNR,Guru.Konstanter:varforetypchar[1]) "finns inte." VIEW-AS ALERT-BOX.                        
      END.
      ELSE IF soktemp.SOKDATE[1] = 01/01/1991 THEN musz = musz.
      ELSE IF soktemp.SOKDATE[1] < regdatum  THEN DO:
         MESSAGE Guru.Konstanter:gaol FILL-IN-AONR STRING(FILL-IN-DELNR,Guru.Konstanter:varforetypchar[1]) "är avslutat." VIEW-AS ALERT-BOX.               
         RETURN.      
      END.      
   END.
   ELSE DO:   
      FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) NO-LOCK NO-ERROR.
      IF NOT AVAILABLE egnaao THEN DO:
         CREATE egnaao.
         BUFFER-COPY utsokaonr TO egnaao.      
         tthandle = TEMP-TABLE egnaao:HANDLE.
         FIND FIRST sparaladdatemp NO-ERROR.
         IF NOT AVAILABLE sparaladdatemp THEN CREATE sparaladdatemp.
         ASSIGN
         sparaladdatemp.GLOBANV = FILL-IN-PKOD:SCREEN-VALUE /*Tidredovisningens aonr spara på personalkod istället för användare*/
         sparaladdatemp.BENAMNING = "AONRE" /*Benämnings sufix, i detta fall ELPAO$STOR*/
         sparaladdatemp.TABVAL = "AONRTAB" /*Tabellnamn*/
         sparaladdatemp.FALTVALAO = "AONR" /*Character field*/
         sparaladdatemp.FALTVALDEL = "DELNR" /*Integer field*/
         sparaladdatemp.FALTVALDATE = "".  /*DATE field*/
         RUN sparabrw_UI IN brwproc[2] 
         (INPUT TABLE-HANDLE tthandle, INPUT TABLE sparaladdatemp).
         RAD_FAST:SCREEN-VALUE = STRING(3). 
         RUN openbdynspec_UI IN brwproc[2].      
         FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) AND
         egnaao.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
         IF AVAILABLE egnaao THEN DO:            
            RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(egnaao)).
            RUN lastselectdyn_UI IN brwproc[2].            
         END.      
         ASSIGN
         BRW_AONR:HIDDEN = TRUE   
         BRW_EAONR:HIDDEN = FALSE
         CMB_OMR:HIDDEN = TRUE
         CMB_AVD:HIDDEN = TRUE
         FILL-IN-SOKPA:HIDDEN = TRUE.   
         /*ENABLE BRW_EAONR WITH FRAME {&FRAME-NAME}.
         DISPLAY RAD_FAST WITH FRAME {&FRAME-NAME}.*/          
      END.
   END.
END PROCEDURE.

PROCEDURE btnavb_UI :
   /*RUN fbaonrkoll_UI (OUTPUT musz). 
   IF musz = TRUE THEN DO:
      musz = FALSE.
      RETURN.
   END.*/
   RUN avb_UI.
   RUN avb_UI IN huvprogh.
END PROCEDURE.

PROCEDURE omrsek_UI :
   
END PROCEDURE.
PROCEDURE main_UI :
   {muswait.i}
   {ALLSTARTDYN.I}
   
   RUN openbdynspec_UI IN brwproc[1]. 
   RUN openbdynspec_UI IN brwproc[2].
   markfr = "MALT". 
   resfr = FALSE.
   /*RUN openbdynspec_UI IN brwproc[3]. */
   /*RUN openbdynspec_UI IN brwproc[5].
   RUN openbdynspec_UI IN brwproc[6].
   RUN openbdynspec_UI IN brwproc[7].
   RUN openbdynspec_UI IN brwproc[9].
   RUN openbdynspec_UI IN brwproc[10]. 
   RUN openbdynspec_UI IN brwproc[14]. 
   RUN openbdynspec_UI IN brwproc[15]. 
   RUN openbdynspec_UI IN brwproc[16].   
   RUN openbdynspec_UI IN brwproc[20].
   RUN openbdynspec_UI IN brwproc[21]. 
   
     
   
   RUN knappar_UI (INPUT 1).
   RUN vcbrwkopp_UI.
   IF globforetag = "ELPA" OR globforetag = "cGRAN" THEN DO:
      ASSIGN
      BTN_ACCESS:HIDDEN = FALSE
      BTN_FASTTRAC:HIDDEN = FALSE.
   END.          
   ELSE DO:
      ASSIGN
      BTN_ACCESS:HIDDEN = TRUE
      BTN_FASTTRAC:HIDDEN = TRUE.
   END.
   RUN btnvit_UI (INPUT MBTN_KOPPL).
   BRW_PERS:HIDDEN = TRUE.
    */
END PROCEDURE.
PROCEDURE allstartbrw_UI :
      
   IF Guru.Konstanter:appcon THEN DO:       
      IF NOT VALID-HANDLE(berapph) THEN RUN MENYBERAPP.P PERSISTENT SET berapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:         
      IF NOT VALID-HANDLE(berapph) THEN RUN MENYBERAPP.P PERSISTENT SET berapph.
   END. 
   IF Guru.Konstanter:appcon THEN DO:     
      /*FAKTFOR*/
      /*RUN EXTRATABHMT.P PERSISTENT SET fbestapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT.*/
      RUN NYTTAOAPP.P PERSISTENT SET nyttaoapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      /*FAKTFOR*/
      /*RUN EXTRATABHMT.P PERSISTENT SET fbestapph.*/
      RUN NYTTAOAPP.P PERSISTENT SET nyttaoapph.
   END.   
/*   RUN anvglob_UI IN kalkproch (INPUT Guru.Konstanter:globanv).*/
   RUN anvglob_UI IN berapph (INPUT Guru.Konstanter:globanv).
   EOMR:READ-ONLY = TRUE.
   UOMR:READ-ONLY = TRUE.     
   IF NOT VALID-HANDLE(brwproc[1]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[1] (INPUT BRW_AONR).
   IF NOT VALID-HANDLE(brwproc[2]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[2] (INPUT BRW_EAONR).
   IF NOT VALID-HANDLE(brwproc[3]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[3] (INPUT BRW_RESTID).
   IF NOT VALID-HANDLE(brwproc[4]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[4] (INPUT BRW_OKOST).
   IF NOT VALID-HANDLE(brwproc[5]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[5] (INPUT BRW_LON).
   RUN setcolindex_UI IN brwproc[3] (INPUT "DATUM").
   
   /*IF globforetag = "CELPA" OR globforetag = "GKAL" THEN DO:
      RUN setcolindex_UI IN brwproc[3] (INPUT "aotidslagtemp.DAT1 DESCENDING").
   END.
   ELSE DO:         
     RUN setcolindex_UI IN brwproc[3] (INPUT "aotidslagtemp.TIDLAGE").           
   END.
   IF NOT VALID-HANDLE(brwproc[4]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[4] (INPUT BRW_ARBAN).
   IF NOT VALID-HANDLE(brwproc[5]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[5] (INPUT BRW_ARBART).
   IF NOT VALID-HANDLE(brwproc[6]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[6] (INPUT BRW_AVTAL).
   IF NOT VALID-HANDLE(brwproc[7]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[7] (INPUT BRW_AVTALDOK).
   IF NOT VALID-HANDLE(brwproc[8]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[8] (INPUT BRW_BERED).
   IF NOT VALID-HANDLE(brwproc[9]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[9] (INPUT BRW_KOPP).
   RUN brwsetupstop_UI IN brwproc[9] (INPUT 1).
   RUN setcolindex_UI IN brwproc[9] (INPUT "gatill.F1 BY gatill.F2").
   IF NOT VALID-HANDLE(brwproc[10]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[10] (INPUT BRW_PRIOOV).  
   IF NOT VALID-HANDLE(brwproc[11]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[11] (INPUT BRW_PROJ).
   IF NOT VALID-HANDLE(brwproc[12]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[12] (INPUT BRW_BEST).
   IF NOT VALID-HANDLE(brwproc[13]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[13] (INPUT BRW_BESTAVD).
   IF NOT VALID-HANDLE(brwproc[14]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[14] (INPUT BRW_TIDPAONR).
   IF NOT VALID-HANDLE(brwproc[15]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[15] (INPUT BRW_DAGBOK).
   IF NOT VALID-HANDLE(brwproc[16]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[16] (INPUT BRW_ARBARTOV).
   IF NOT VALID-HANDLE(brwproc[17]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[17] (INPUT BRW_ANV).
   IF NOT VALID-HANDLE(brwproc[18]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[18] (INPUT BRW_HAND).
   IF NOT VALID-HANDLE(brwproc[19]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[19] (INPUT BRW_PERS).
   IF NOT VALID-HANDLE(brwproc[20]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[20] (INPUT BRW_ANVOMR).
   IF NOT VALID-HANDLE(brwproc[21]) THEN RUN DYNBRW.P PERSISTENT SET brwproc[21] (INPUT BRW_PRIO).
               
   RUN setcolindex_UI IN brwproc[15] (INPUT "DATUM").
   RUN setcolsortvar_UI IN brwproc[6] (INPUT " avtalaonrtemp.LNK = FALSE").
   RUN setcolsortvar_UI IN brwproc[7] (INPUT " avtalaonrtemp.LNK = TRUE").
   RUN dynprogextra IN brwproc[9]  (INPUT "rdwkopp_UI",INPUT THIS-PROCEDURE).
   RUN rowdispextrakor IN  brwproc[9] (INPUT TRUE).

   /*mumma*/
   IF Guru.Konstanter:varforetypval[33] = 0 THEN DO:
      FILL-IN_FASTAAONR:VISIBLE = FALSE.
      FILL-IN_PAGAENDE:VISIBLE = FALSE.

   END.*/
   
END PROCEDURE.

PROCEDURE vh_UI :   
   IF NOT VALID-HANDLE(utsokaonrtemph)    THEN  utsokaonrtemph  = TEMP-TABLE utsokaonr:DEFAULT-BUFFER-HANDLE.  
   IF NOT VALID-HANDLE(egnaaotemph)  THEN  egnaaotemph  = TEMP-TABLE egnaao:DEFAULT-BUFFER-HANDLE.  
   IF NOT VALID-HANDLE(resperstemph) THEN  resperstemph  = TEMP-TABLE respers:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(ovrigtemph) THEN  ovrigtemph  = TEMP-TABLE oklon:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(lontemph) THEN  lontemph  = TEMP-TABLE lontmp:DEFAULT-BUFFER-HANDLE.
   /*IF NOT VALID-HANDLE(arbarttemph)    THEN     arbarttemph     = TEMP-TABLE arbarttemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(avtalaonrtemph) THEN  avtalaonrtemph  = TEMP-TABLE avtalaonrtemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(priotemph)      THEN  priotemph  = TEMP-TABLE priotemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(aonrtidperstemph) THEN  aonrtidperstemph = TEMP-TABLE aonrtidperstemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(dagboktemph)    THEN       dagboktemph      = TEMP-TABLE dagboktemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(anvandartemph)    THEN       anvandartemph      = TEMP-TABLE anvandartemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(arbarttemph)    THEN       arbarttemph =      TEMP-TABLE arbarttemp:DEFAULT-BUFFER-HANDLE.   
   IF NOT VALID-HANDLE(gatillh )       THEN  gatillh  = TEMP-TABLE gatill:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(ansvaraotemph ) THEN  ansvaraotemph  = TEMP-TABLE ansvaraotemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(beratemph     ) THEN  beratemph      = TEMP-TABLE beratemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(bestkundallth ) THEN  bestkundallth  = TEMP-TABLE bestkundallt:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(bestkundextrah) THEN  bestkundextrah = TEMP-TABLE bestkundextra:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(projtemph     ) THEN  projtemph      = TEMP-TABLE projtemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(avtaodattemph     ) THEN  avtaodattemph      = TEMP-TABLE avtaodattemp:DEFAULT-BUFFER-HANDLE.
   IF NOT VALID-HANDLE(personaltemph) THEN  personaltemph      = TEMP-TABLE personaltemp:DEFAULT-BUFFER-HANDLE.*/
END PROCEDURE.

PROCEDURE ff_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER brwrowid AS ROWID NO-UNDO.
   IF brwvald = 1 THEN FIND FIRST utsokaonr  WHERE ROWID(utsokaonr ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 2 THEN FIND FIRST egnaao  WHERE ROWID(egnaao) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 3 THEN FIND FIRST respers  WHERE ROWID(respers) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 4 THEN FIND FIRST oklon  WHERE ROWID(oklon ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 5 THEN FIND FIRST lontmp  WHERE ROWID(lontmp ) = brwrowid NO-LOCK NO-ERROR.  
   /*IF brwvald = 6 THEN FIND FIRST avtalaonrtemp  WHERE ROWID(avtalaonrtemp ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 7 THEN FIND FIRST avtalaonrtemp  WHERE ROWID(avtalaonrtemp ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 8 THEN FIND FIRST beratemp      WHERE ROWID(beratemp     ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 9 THEN FIND FIRST gatill      WHERE ROWID(gatill     ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 10 THEN FIND FIRST priotemp      WHERE ROWID(priotemp     ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 11 THEN FIND FIRST projtemp      WHERE ROWID(projtemp     ) = brwrowid NO-LOCK NO-ERROR.     
   IF brwvald = 12 THEN FIND FIRST bestkundallt  WHERE ROWID(bestkundallt ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 13 THEN FIND FIRST bestkundextra WHERE ROWID(bestkundextra) = brwrowid NO-LOCK NO-ERROR.
   IF brwvald = 14 THEN FIND FIRST aonrtidperstemp      WHERE ROWID(aonrtidperstemp     ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 15 THEN FIND FIRST dagboktemp      WHERE ROWID(dagboktemp     ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 16 THEN FIND FIRST arbarttemp  WHERE ROWID(arbarttemp ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 17 THEN FIND FIRST anvandartemp  WHERE ROWID(anvandartemp ) = brwrowid NO-LOCK NO-ERROR.  
   IF brwvald = 18 THEN FIND FIRST avtaodattemp  WHERE ROWID(avtaodattemp ) = brwrowid NO-LOCK NO-ERROR.     
   IF brwvald = 19 THEN FIND FIRST personaltemp  WHERE ROWID(personaltemp ) = brwrowid NO-LOCK NO-ERROR.
   IF brwvald = 21 THEN FIND FIRST priotemp      WHERE ROWID(priotemp     ) = brwrowid NO-LOCK NO-ERROR.*/     
END PROCEDURE.
PROCEDURE pselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   RUN vh_UI.
   RUN pselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   RUN ff_UI (INPUT brwvald,INPUT brwrowid).    
END PROCEDURE.
PROCEDURE nselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   DEFINE VARIABLE brwrecid AS RECID NO-UNDO.
   RUN vh_UI.
   RUN nselectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   RUN ff_UI (INPUT brwvald,INPUT brwrowid).       
END PROCEDURE.
PROCEDURE selectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.      
   RUN vh_UI.
   RUN selectrowid_UI IN brwproc[brwvald] (OUTPUT brwrowid).
   RUN ff_UI (INPUT brwvald,INPUT brwrowid).       
END PROCEDURE.
PROCEDURE fselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   DEFINE VARIABLE brwrowid AS ROWID NO-UNDO.
   RUN vh_UI.
   RUN fetrowid_UI IN brwproc[brwvald] (INPUT antal_raknare,OUTPUT brwrowid) .
   RUN ff_UI (INPUT brwvald,INPUT brwrowid).       
END PROCEDURE.
PROCEDURE dselectfoc_UI :
   DEFINE INPUT PARAMETER brwvald AS INTEGER NO-UNDO.
   RUN dselectfoc_UI IN brwproc[brwvald].      
END PROCEDURE.

PROCEDURE logform_UI :
   /*DEFINE INPUT PARAMETER formlog AS HANDLE NO-UNDO.
   DEFINE INPUT PARAMETER tf AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER svar AS CHARACTER NO-UNDO.
   IF tf = TRUE THEN svar = SUBSTRING(STRING(formlog:FORMAT),1,INDEX(formlog:FORMAT,"/") - 1). 
   ELSE svar = SUBSTRING(STRING(formlog:FORMAT),INDEX(formlog:FORMAT,"/") + 1).*/ 
END PROCEDURE.

PROCEDURE borthand_UI :
   
   /*utsokaonrtemph:EMPTY-TEMP-TABLE() NO-ERROR.
   egnaaotemph:EMPTY-TEMP-TABLE() NO-ERROR.*/
   resperstemph:EMPTY-TEMP-TABLE() NO-ERROR.
   ovrigtemph:EMPTY-TEMP-TABLE() NO-ERROR.
   lontemph:EMPTY-TEMP-TABLE() NO-ERROR.       
   /*anlaggtemph:EMPTY-TEMP-TABLE() NO-ERROR.   
   aonrkonttemph:EMPTY-TEMP-TABLE() NO-ERROR. 
   aotidslagtemph:EMPTY-TEMP-TABLE() NO-ERROR.
   arbarttemph:EMPTY-TEMP-TABLE() NO-ERROR.   
   avtalaonrtemph:EMPTY-TEMP-TABLE() NO-ERROR.
   priotemph:EMPTY-TEMP-TABLE() NO-ERROR.     
   aonrtidperstemph:EMPTY-TEMP-TABLE() NO-ERROR.
   dagboktemph:EMPTY-TEMP-TABLE() NO-ERROR.   
   avtaodattemph:EMPTY-TEMP-TABLE() NO-ERROR.*/   
   
   IF VALID-HANDLE(utsokaonrtemph) THEN   DELETE OBJECT utsokaonrtemph NO-ERROR.
   IF VALID-HANDLE(egnaaotemph     ) THEN   DELETE OBJECT egnaaotemph     NO-ERROR.
   IF VALID-HANDLE(resperstemph ) THEN   DELETE OBJECT resperstemph NO-ERROR.
   IF VALID-HANDLE(ovrigtemph ) THEN   DELETE OBJECT ovrigtemph NO-ERROR.
   IF VALID-HANDLE(lontemph ) THEN   DELETE OBJECT lontemph NO-ERROR.
   /*IF VALID-HANDLE(bestkundextrah) THEN   DELETE OBJECT bestkundextrah NO-ERROR.
   IF VALID-HANDLE(projtemph     ) THEN   DELETE OBJECT projtemph     NO-ERROR.   
   IF VALID-HANDLE(gatillh          ) THEN   DELETE OBJECT  gatillh         NO-ERROR. 
   IF VALID-HANDLE(anlaggtemph      ) THEN   DELETE OBJECT  anlaggtemph     NO-ERROR. 
   IF VALID-HANDLE(aonrkonttemph    ) THEN   DELETE OBJECT  aonrkonttemph   NO-ERROR. 
   IF VALID-HANDLE(aotidslagtemph   ) THEN   DELETE OBJECT  aotidslagtemph   NO-ERROR.
   IF VALID-HANDLE(arbarttemph      ) THEN   DELETE OBJECT  arbarttemph     NO-ERROR. 
   IF VALID-HANDLE(avtalaonrtemph   ) THEN   DELETE OBJECT  avtalaonrtemph  NO-ERROR. 
   IF VALID-HANDLE(priotemph        ) THEN   DELETE OBJECT  priotemph       NO-ERROR. 
   IF VALID-HANDLE(aonrtidperstemph  ) THEN   DELETE OBJECT  aonrtidperstemph NO-ERROR. 
   IF VALID-HANDLE(dagboktemph      ) THEN   DELETE OBJECT  dagboktemph      NO-ERROR.
   IF VALID-HANDLE(anvandartemph      ) THEN   DELETE OBJECT  anvandartemph      NO-ERROR.
   IF VALID-HANDLE(avtaodattemph      ) THEN   DELETE OBJECT  avtaodattemph      NO-ERROR.
   IF VALID-HANDLE(personaltemph      ) THEN   DELETE OBJECT  personaltemph      NO-ERROR.
   */
   ASSIGN
   utsokaonrtemph   = ?
   egnaaotemph   = ?
   resperstemph   = ?
   ovrigtemph   = ?
   lontemph   = ?.
   /*beratemph       = ?
   bestkundallth   = ?
   bestkundextrah  = ?
   projtemph       = ?
   gatillh         = ?
   anlaggtemph     = ?
   aonrkonttemph   = ?
   aotidslagtemph  = ?
   arbarttemph     = ?
   avtalaonrtemph  = ?
   priotemph       = ?
   aonrtidperstemph = ?
   dagboktemph     = ?
   anvandartemph   = ?.
   {BORTBRWPROC.I}   
   IF VALID-HANDLE(anvapph) THEN DO:
      RUN avs_UI IN anvapph.
      DELETE PROCEDURE anvapph NO-ERROR.
   END.         
   IF VALID-HANDLE(bortaoapph) THEN DELETE PROCEDURE bortaoapph.      
   IF VALID-HANDLE(fbestapph) THEN DELETE PROCEDURE fbestapph.      
   IF VALID-HANDLE(nyttaoapph) THEN DELETE PROCEDURE nyttaoapph.      
   IF VALID-HANDLE(nyttaoejapph) THEN DELETE PROCEDURE nyttaoejapph NO-ERROR.   
   IF VALID-HANDLE(avtaodatapph) THEN DELETE PROCEDURE avtaodatapph NO-ERROR.*/   
   
END PROCEDURE.


 
PROCEDURE huvud_UI :
   /*{muswait.i}*/
   
   EMPTY TEMP-TABLE respers NO-ERROR.
   EMPTY TEMP-TABLE maltidfil NO-ERROR.
   EMPTY TEMP-TABLE kosters NO-ERROR.
   pkod = ppkod.
   FIND personaltemp WHERE personaltemp.PERSONALKOD = ppkod NO-LOCK NO-ERROR.   
   IF Guru.Konstanter:appcon THEN DO:                           
      RUN LONKODHMT.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT personaltemp.PERSONALKOD,OUTPUT TABLE lontmp,OUTPUT TABLE lonkorttemp).
   END.
   ELSE DO:
      RUN LONKODHMT.P  
      (INPUT personaltemp.PERSONALKOD,OUTPUT TABLE lontmp,OUTPUT TABLE lonkorttemp).
   END.
   
   /*&Scoped-define FRAME-NAME FRAME_BARABREDD    */  
   ASSIGN
   tidtabrec = 0
   vart = "RES"   
   tjan = "RES"
   
   FILL-IN-ENFLE:SCREEN-VALUE  =  "Endag"
   FILL-IN-BIL:SCREEN-VALUE =  "Nej"
   FILL-IN-RESMAL:SCREEN-VALUE = "".       
   IF stavar = FALSE THEN regdatum = TODAY.   
   RUN REGVEC.P.
   RUN REGDAG.P.
   ASSIGN
   musz = FALSE
   FILL-IN-STARTDAT:SCREEN-VALUE = STRING(regdatum)
   FILL-IN-SLUTDAT:SCREEN-VALUE = string(regdatum).
   RUN REGDAG.P.
   RUN REGVEC.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG:SCREEN-VALUE = rnamn.
   FILL-IN-DAG-2:SCREEN-VALUE = rnamn.
   {SLUTARBW.I}
   ASSIGN
   FILL-IN-STARTAR:SCREEN-VALUE = string(regstart)
   FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
   /*DISPLAY FILL-IN-STARTDAT FILL-IN-SLUTDAT FILL-IN-DAG FILL-IN-DAG-2 FILL-IN-STARTAR FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.
   ENABLE FILL-IN-STARTDAT FILL-IN-SLUTDAT BTN_FVE-3 BTN_NVE-3 BTN_FVE-4 BTN_NVE-4  WITH FRAME {&FRAME-NAME}.*/                                  
   ASSIGN
   FILL-IN-AONR:SCREEN-VALUE = ""
   FILL-IN-DELNR:SCREEN-VALUE = string(00).
   &Scoped-define FRAME-NAME FRAME_BARABREDD
   CMB_AVD:DELIMITER = "$". 
   status-ok = CMB_AVD:ADD-LAST(Guru.Konstanter:gavdk + " : alla").   
   status-ok = CMB_OMR:ADD-LAST(Guru.Konstanter:gomrk + " : alla").   
   {ANVAVDSO.I}     
   FOR EACH eavdtemp,         
   EACH avdelningtemp WHERE avdelningtemp.AVDELNINGNR = eavdtemp.AVDELNINGNR.
      status-ok = CMB_AVD:ADD-LAST(avdelningtemp.AVDELNINGNAMN).
   END.   

   CMB_AVD:SCREEN-VALUE= Guru.Konstanter:gavdk + " : alla".
   FIND FIRST omrtemp WHERE omrtemp.OMRADE = globomr 
   USE-INDEX OMR NO-LOCK NO-ERROR.
   IF NOT AVAILABLE omrtemp THEN DO:
      FIND FIRST omrtemp USE-INDEX OMR NO-LOCK NO-ERROR.
   END.
   ASSIGN CMB_OMR:SCREEN-VALUE = omrtemp.NAMN NO-ERROR.
   IF CMB_OMR:SCREEN-VALUE = ? THEN DO:
      CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
   END.
   IF Guru.Konstanter:globomr = "" OR globallpers = TRUE THEN DO:
      ASSIGN CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
/*      CMB_OMR = INPUT CMB_OMR.
      DISPLAY CMB_OMR WITH FRAME {&FRAME-NAME}.*/
   END.
   
   IF stavar = TRUE THEN DO:
      IF stadatum NE ? THEN DO:
         ASSIGN
         FILL-IN-STARTDAT:SCREEN-VALUE  = string(stadatum)
         FILL-IN-SLUTDAT:SCREEN-VALUE = string(stadatum).
         regdatum = date(FILL-IN-STARTDAT:SCREEN-VALUE). 
         RUN REGDAG.P.
         IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
         FILL-IN-DAG:SCREEN-VALUE = regdagnamn + "dag".
         FILL-IN-DAG-2:SCREEN-VALUE = FILL-IN-DAG:SCREEN-VALUE.
         RUN REGVEC.P.
         {SLUTARBW.I}
         ASSIGN
         FILL-IN-STARTAR:SCREEN-VALUE = STRING(regstart).
         FILL-IN-SLUTAR:SCREEN-VALUE = STRING(regslut).
         /*DISPLAY FILL-IN-DAG FILL-IN-STARTAR WITH FRAME {&FRAME-NAME}.*/
      END.
      IF staaonr NE "" THEN DO:   
         ASSIGN
         FILL-IN-AONR:SCREEN-VALUE = staaonr
         FILL-IN-DELNR:SCREEN-VALUE = STRING(stadelnr).
         
     END.
/*     DISPLAY FILL-IN-STARTDAT FILL-IN-SLUTDAT FILL-IN-AONR FILL-IN-DELNR    WITH FRAME {&FRAME-NAME}.*/   
     
   END.
     
END PROCEDURE.

PROCEDURE huvud2_UI :
   FIND personaltemp WHERE personaltemp.PERSONALKOD = ppkod   NO-LOCK NO-ERROR.
   RUN nasta_UI.
   RUN goma_UI.   
   ASSIGN
   FILL-IN-PKOD:SCREEN-VALUE = personaltemp.PERSONALKOD
   FILL-IN_FORNAMN-2:SCREEN-VALUE = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN.  
   IF globforetag = "SUND" OR globforetag = "SNAT" OR globforetag = "MISV" OR globforetag = "LULE" OR globforetag = "GKAL" OR globforetag = "ELPA" THEN DO: 
      FILL-IN-ENFLE:SCREEN-VALUE = "Flerdygn".                 
      RUN fienfle_UI.   
   END.
                 
   APPLY "ENTRY" TO FILL-IN-ENFLE.

   RUN fiaonr_UI.
 
END PROCEDURE.

PROCEDURE maltidst_UI :
   FILL-IN-RUBRIKMAL:SCREEN-VALUE = "Måltidsavdrag".
   EMPTY TEMP-TABLE maltidfil NO-ERROR.    
   regdatum = bdatum.
   regdatumspar2 = bdatum.
   RUN REGVEC.P.
   ASSIGN
  /* FILL-IN-VNR = regvnr*/
   FILL-IN-MANF:SCREEN-VALUE = "Ja" 
   FILL-IN-MANL:SCREEN-VALUE = "Ja"
   FILL-IN-MANM:SCREEN-VALUE = "Ja"
   FILL-IN-TISF:SCREEN-VALUE = "Ja" 
   FILL-IN-TISL:SCREEN-VALUE = "Ja"
   FILL-IN-TISM:SCREEN-VALUE = "Ja"
   FILL-IN-ONSF:SCREEN-VALUE = "Ja"
   FILL-IN-ONSL:SCREEN-VALUE = "Ja"
   FILL-IN-ONSM:SCREEN-VALUE = "Ja"
   FILL-IN-TORF:SCREEN-VALUE = "Ja"
   FILL-IN-TORL:SCREEN-VALUE = "Ja"
   FILL-IN-TORM:SCREEN-VALUE = "Ja"
   FILL-IN-FREF:SCREEN-VALUE = "Ja"
   FILL-IN-FREL:SCREEN-VALUE = "Ja"
   FILL-IN-FREM:SCREEN-VALUE = "Ja"
   FILL-IN-LORF:SCREEN-VALUE = "Ja"
   FILL-IN-LORL:SCREEN-VALUE = "Ja"
   FILL-IN-LORM:SCREEN-VALUE = "Ja"
   FILL-IN-SONF:SCREEN-VALUE = "Ja"
   FILL-IN-SONL:SCREEN-VALUE = "Ja"
   FILL-IN-SONM:SCREEN-VALUE = "Ja" 
   FILL-IN-MANF-2:SCREEN-VALUE = "Ja" 
   FILL-IN-MANL-2:SCREEN-VALUE = "Ja"
   FILL-IN-MANM-2:SCREEN-VALUE = "Ja"
   FILL-IN-TISF-2:SCREEN-VALUE = "Ja" 
   FILL-IN-TISL-2:SCREEN-VALUE = "Ja"
   FILL-IN-TISM-2:SCREEN-VALUE = "Ja"
   FILL-IN-ONSF-2:SCREEN-VALUE = "Ja"
   FILL-IN-ONSL-2:SCREEN-VALUE = "Ja"
   FILL-IN-ONSM-2:SCREEN-VALUE = "Ja"
   FILL-IN-TORF-2:SCREEN-VALUE = "Ja"
   FILL-IN-TORL-2:SCREEN-VALUE = "Ja"
   FILL-IN-TORM-2:SCREEN-VALUE = "Ja"
   FILL-IN-FREF-2:SCREEN-VALUE = "Ja"
   FILL-IN-FREL-2:SCREEN-VALUE = "Ja"
   FILL-IN-FREM-2:SCREEN-VALUE = "Ja"
   FILL-IN-LORF-2:SCREEN-VALUE = "Ja"
   FILL-IN-LORL-2:SCREEN-VALUE = "Ja"
   FILL-IN-LORM-2:SCREEN-VALUE = "Ja"
   FILL-IN-SONF-2:SCREEN-VALUE = "Ja"
   FILL-IN-SONL-2:SCREEN-VALUE = "Ja"
   FILL-IN-SONM-2:SCREEN-VALUE = "Ja"
   FILL-IN-MANF-3:SCREEN-VALUE = "Ja" 
   FILL-IN-MANL-3:SCREEN-VALUE = "Ja"
   FILL-IN-MANM-3:SCREEN-VALUE = "Ja"
   FILL-IN-TISF-3:SCREEN-VALUE = "Ja" 
   FILL-IN-TISL-3:SCREEN-VALUE = "Ja"
   FILL-IN-TISM-3:SCREEN-VALUE = "Ja"
   FILL-IN-ONSF-3:SCREEN-VALUE = "Ja"
   FILL-IN-ONSL-3:SCREEN-VALUE = "Ja"
   FILL-IN-ONSM-3:SCREEN-VALUE = "Ja"
   FILL-IN-TORF-3:SCREEN-VALUE = "Ja"
   FILL-IN-TORL-3:SCREEN-VALUE = "Ja"
   FILL-IN-TORM-3:SCREEN-VALUE = "Ja"
   FILL-IN-FREF-3:SCREEN-VALUE = "Ja"
   FILL-IN-FREL-3:SCREEN-VALUE = "Ja"
   FILL-IN-FREM-3:SCREEN-VALUE = "Ja"
   FILL-IN-LORF-3:SCREEN-VALUE = "Ja"
   FILL-IN-LORL-3:SCREEN-VALUE = "Ja"
   FILL-IN-LORM-3:SCREEN-VALUE = "Ja"
   FILL-IN-SONF-3:SCREEN-VALUE = "Ja"
   FILL-IN-SONL-3:SCREEN-VALUE = "Ja"
   FILL-IN-SONM-3:SCREEN-VALUE = "Ja" 
   FILL-IN-FR:SCREEN-VALUE = "Fri Frukost"
   FILL-IN-LU:SCREEN-VALUE = "Fri Lunch"
   FILL-IN-MI:SCREEN-VALUE = "Fri Middag"
   FILL-IN-FR-2:SCREEN-VALUE = "Fri Frukost"
   FILL-IN-LU-2:SCREEN-VALUE = "Fri Lunch"
   FILL-IN-MI-2:SCREEN-VALUE = "Fri Middag"
   FILL-IN-FR-3:SCREEN-VALUE = "Fri Frukost"
   FILL-IN-LU-3:SCREEN-VALUE = "Fri Lunch"
   FILL-IN-MI-3:SCREEN-VALUE = "Fri Middag".
   IF globforetag = "GKAL" OR globforetag = "ELPA"  THEN DO:
      IF bdatum = avdatum THEN DO:
         /*dvs endags- föreslå lunch*/
         ASSIGN
         FILL-IN-FR:SCREEN-VALUE= ""
         FILL-IN-LU:SCREEN-VALUE = "Erhållit måltid"
         FILL-IN-MI:SCREEN-VALUE = "".
         ASSIGN
         FILL-IN-MANF:SCREEN-VALUE = "Nej"             
         FILL-IN-MANM:SCREEN-VALUE = "Nej"
         FILL-IN-TISF:SCREEN-VALUE = "Nej"             
         FILL-IN-TISM:SCREEN-VALUE = "Nej"
         FILL-IN-ONSF:SCREEN-VALUE = "Nej"            
         FILL-IN-ONSM:SCREEN-VALUE = "Nej"
         FILL-IN-TORF:SCREEN-VALUE = "Nej"            
         FILL-IN-TORM:SCREEN-VALUE = "Nej"
         FILL-IN-FREF:SCREEN-VALUE = "Nej"            
         FILL-IN-FREM:SCREEN-VALUE = "Nej"
         FILL-IN-LORF:SCREEN-VALUE = "Nej"            
         FILL-IN-LORM:SCREEN-VALUE = "Nej"
         FILL-IN-SONF:SCREEN-VALUE = "Nej"            
         FILL-IN-SONM:SCREEN-VALUE = "Nej".         
      END.
   END.            
   RUN maltidgom_UI.
   
END PROCEDURE.   

PROCEDURE maltidgom_UI :
   ASSIGN 
   FILL-IN-MANF:HIDDEN = TRUE 
   FILL-IN-MANL:HIDDEN = TRUE
   FILL-IN-MANM:HIDDEN = TRUE
   FILL-IN-TISF:HIDDEN = TRUE 
   FILL-IN-TISL:HIDDEN = TRUE
   FILL-IN-TISM:HIDDEN = TRUE
   FILL-IN-ONSF:HIDDEN = TRUE
   FILL-IN-ONSL:HIDDEN = TRUE
   FILL-IN-ONSM:HIDDEN = TRUE
   FILL-IN-TORF:HIDDEN = TRUE
   FILL-IN-TORL:HIDDEN = TRUE
   FILL-IN-TORM:HIDDEN = TRUE
   FILL-IN-FREF:HIDDEN = TRUE
   FILL-IN-FREL:HIDDEN = TRUE
   FILL-IN-FREM:HIDDEN = TRUE
   FILL-IN-LORF:HIDDEN = TRUE
   FILL-IN-LORL:HIDDEN = TRUE
   FILL-IN-LORM:HIDDEN = TRUE
   FILL-IN-SONF:HIDDEN = TRUE
   FILL-IN-SONL:HIDDEN = TRUE
   FILL-IN-SONM:HIDDEN = TRUE
   FILL-IN-MANF-2:HIDDEN = TRUE 
   FILL-IN-MANL-2:HIDDEN = TRUE
   FILL-IN-MANM-2:HIDDEN = TRUE
   FILL-IN-TISF-2:HIDDEN = TRUE 
   FILL-IN-TISL-2:HIDDEN = TRUE
   FILL-IN-TISM-2:HIDDEN = TRUE
   FILL-IN-ONSF-2:HIDDEN = TRUE
   FILL-IN-ONSL-2:HIDDEN = TRUE
   FILL-IN-ONSM-2:HIDDEN = TRUE
   FILL-IN-TORF-2:HIDDEN = TRUE
   FILL-IN-TORL-2:HIDDEN = TRUE
   FILL-IN-TORM-2:HIDDEN = TRUE
   FILL-IN-FREF-2:HIDDEN = TRUE
   FILL-IN-FREL-2:HIDDEN = TRUE
   FILL-IN-FREM-2:HIDDEN = TRUE
   FILL-IN-LORF-2:HIDDEN = TRUE
   FILL-IN-LORL-2:HIDDEN = TRUE
   FILL-IN-LORM-2:HIDDEN = TRUE
   FILL-IN-SONF-2:HIDDEN = TRUE
   FILL-IN-SONL-2:HIDDEN = TRUE
   FILL-IN-SONM-2:HIDDEN = TRUE
   FILL-IN-MANF-3:HIDDEN = TRUE 
   FILL-IN-MANL-3:HIDDEN = TRUE
   FILL-IN-MANM-3:HIDDEN = TRUE
   FILL-IN-TISF-3:HIDDEN = TRUE 
   FILL-IN-TISL-3:HIDDEN = TRUE
   FILL-IN-TISM-3:HIDDEN = TRUE
   FILL-IN-ONSF-3:HIDDEN = TRUE
   FILL-IN-ONSL-3:HIDDEN = TRUE
   FILL-IN-ONSM-3:HIDDEN = TRUE
   FILL-IN-TORF-3:HIDDEN = TRUE
   FILL-IN-TORL-3:HIDDEN = TRUE
   FILL-IN-TORM-3:HIDDEN = TRUE
   FILL-IN-FREF-3:HIDDEN = TRUE
   FILL-IN-FREL-3:HIDDEN = TRUE
   FILL-IN-FREM-3:HIDDEN = TRUE
   FILL-IN-LORF-3:HIDDEN = TRUE
   FILL-IN-LORL-3:HIDDEN = TRUE
   FILL-IN-LORM-3:HIDDEN = TRUE
   FILL-IN-SONF-3:HIDDEN = TRUE
   FILL-IN-SONL-3:HIDDEN = TRUE
   FILL-IN-SONM-3:HIDDEN = TRUE
   
   FILL-IN-FR-2:HIDDEN = TRUE
   FILL-IN-LU-2:HIDDEN = TRUE
   FILL-IN-MI-2:HIDDEN = TRUE
   FILL-IN-FR-3:HIDDEN = TRUE
   FILL-IN-LU-3:HIDDEN = TRUE
   FILL-IN-MI-3:HIDDEN = TRUE.
END PROCEDURE.

PROCEDURE maltid_UI :
   RUN maltidgom_UI.   
   bdatum = DATE(FILL-IN-STARTDAT:SCREEN-VALUE).
   avdatum = DATE(FILL-IN-SLUTDAT:SCREEN-VALUE).
   flveck = 1.
   regdatum = bdatum. 
   REPEAT:
      IF regdatum > avdatum THEN LEAVE.
      IF flveck = 1 THEN DO:         
         IF WEEKDAY(regdatum) = 2 THEN DO:
            ASSIGN
            FILL-IN-MANF:HIDDEN = FALSE 
            FILL-IN-MANL:HIDDEN = FALSE 
            FILL-IN-MANM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            ASSIGN
            FILL-IN-TISF:HIDDEN = FALSE 
            FILL-IN-TISL:HIDDEN = FALSE 
            FILL-IN-TISM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            ASSIGN
            FILL-IN-ONSF:HIDDEN = FALSE 
            FILL-IN-ONSL:HIDDEN = FALSE 
            FILL-IN-ONSM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            ASSIGN
            FILL-IN-TORF:HIDDEN = FALSE 
            FILL-IN-TORL:HIDDEN = FALSE 
            FILL-IN-TORM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            ASSIGN
            FILL-IN-FREF:HIDDEN = FALSE 
            FILL-IN-FREL:HIDDEN = FALSE 
            FILL-IN-FREM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            ASSIGN
            FILL-IN-LORF:HIDDEN = FALSE 
            FILL-IN-LORL:HIDDEN = FALSE 
            FILL-IN-LORM:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            ASSIGN
            FILL-IN-SONF:HIDDEN = FALSE 
            FILL-IN-SONL:HIDDEN = FALSE 
            FILL-IN-SONM:HIDDEN = FALSE.
            flveck = 2.
            /*regdatumspar = regdatum + 1.
            LEAVE.*/
         END.
      END.   
      ELSE IF flveck = 2 THEN  DO:
         FILL-IN-FR-2:HIDDEN = FALSE. 
         FILL-IN-LU-2:HIDDEN = FALSE.
         FILL-IN-MI-2:HIDDEN = FALSE.         
         IF WEEKDAY(regdatum) = 2 THEN DO:
            ASSIGN
            FILL-IN-MANF-2:HIDDEN = FALSE 
            FILL-IN-MANL-2:HIDDEN = FALSE 
            FILL-IN-MANM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            ASSIGN
            FILL-IN-TISF-2:HIDDEN = FALSE 
            FILL-IN-TISL-2:HIDDEN = FALSE 
            FILL-IN-TISM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            ASSIGN
            FILL-IN-ONSF-2:HIDDEN = FALSE 
            FILL-IN-ONSL-2:HIDDEN = FALSE 
            FILL-IN-ONSM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            ASSIGN
            FILL-IN-TORF-2:HIDDEN = FALSE 
            FILL-IN-TORL-2:HIDDEN = FALSE 
            FILL-IN-TORM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            ASSIGN
            FILL-IN-FREF-2:HIDDEN = FALSE 
            FILL-IN-FREL-2:HIDDEN = FALSE 
            FILL-IN-FREM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            ASSIGN
            FILL-IN-LORF-2:HIDDEN = FALSE 
            FILL-IN-LORL-2:HIDDEN = FALSE 
            FILL-IN-LORM-2:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            ASSIGN
            FILL-IN-SONF-2:HIDDEN = FALSE 
            FILL-IN-SONL-2:HIDDEN = FALSE 
            FILL-IN-SONM-2:HIDDEN = FALSE.
            flveck = 3.
            /*regdatumspar = regdatum + 1.
            LEAVE.*/
         END.
      END.
      ELSE IF flveck = 3 THEN  DO:
         FILL-IN-FR-3:HIDDEN = FALSE.
         FILL-IN-LU-3:HIDDEN = FALSE.
         FILL-IN-MI-3:HIDDEN = FALSE.
         IF WEEKDAY(regdatum) = 2 THEN DO:
            ASSIGN
            FILL-IN-MANF-3:HIDDEN = FALSE 
            FILL-IN-MANL-3:HIDDEN = FALSE 
            FILL-IN-MANM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 3 THEN DO:
            ASSIGN
            FILL-IN-TISF-3:HIDDEN = FALSE 
            FILL-IN-TISL-3:HIDDEN = FALSE 
            FILL-IN-TISM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 4 THEN DO:
            ASSIGN
            FILL-IN-ONSF-3:HIDDEN = FALSE 
            FILL-IN-ONSL-3:HIDDEN = FALSE 
            FILL-IN-ONSM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 5 THEN DO:
            ASSIGN
            FILL-IN-TORF-3:HIDDEN = FALSE 
            FILL-IN-TORL-3:HIDDEN = FALSE 
            FILL-IN-TORM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 6 THEN DO:
            ASSIGN
            FILL-IN-FREF-3:HIDDEN = FALSE 
            FILL-IN-FREL-3:HIDDEN = FALSE 
            FILL-IN-FREM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 7 THEN DO:
            ASSIGN
            FILL-IN-LORF-3:HIDDEN = FALSE 
            FILL-IN-LORL-3:HIDDEN = FALSE 
            FILL-IN-LORM-3:HIDDEN = FALSE.
         END.
         IF WEEKDAY(regdatum) = 1 THEN DO:
            ASSIGN
            FILL-IN-SONF-3:HIDDEN = FALSE 
            FILL-IN-SONL-3:HIDDEN = FALSE 
            FILL-IN-SONM-3:HIDDEN = FALSE.
            flveck = 4.
            /*regdatumspar = regdatum + 1.
            LEAVE.*/
         END.
      END.   
      
      
      
      regdatum = regdatum + 1.
   END.
   IF globforetag = "GKAL" OR globforetag = "ELPA"  THEN DO:
      IF bdatum = avdatum THEN DO:
         /*dvs endags- föreslå lunch*/
         ASSIGN
         FILL-IN-MANF:HIDDEN = TRUE         
         FILL-IN-MANM:HIDDEN = TRUE 
         FILL-IN-TISF:HIDDEN = TRUE              
         FILL-IN-TISM:HIDDEN = TRUE 
         FILL-IN-ONSF:HIDDEN = TRUE            
         FILL-IN-ONSM:HIDDEN = TRUE 
         FILL-IN-TORF:HIDDEN = TRUE 
         FILL-IN-TORM:HIDDEN = TRUE 
         FILL-IN-FREF:HIDDEN = TRUE             
         FILL-IN-FREM:HIDDEN = TRUE 
         FILL-IN-LORF:HIDDEN = TRUE            
         FILL-IN-LORM:HIDDEN = TRUE 
         FILL-IN-SONF:HIDDEN = TRUE            
         FILL-IN-SONM:HIDDEN = TRUE . 
         
      END.
   END.
   /*IF gvisatidpermanad = TRUE THEN DO:      
      IF WEEKDAY(bdatum) = 1 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum).
      END.
      IF WEEKDAY(bdatum) = 2 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 6).
      END.
      IF WEEKDAY(bdatum) = 3 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 5).
      END.
      IF WEEKDAY(bdatum) = 4 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 4).
      END.
      IF WEEKDAY(bdatum) = 5 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 3).
      END.
      IF WEEKDAY(bdatum) = 6 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 2).
      END.
      IF WEEKDAY(bdatum) = 7 THEN DO:
         FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(bdatum + 1).
      END.
      FILL-IN-STARTDAT:SCREEN-VALUE = bdatum.
      IF FILL-IN-SLUTDAT > avdatum THEN FILL-IN-SLUTDAT = avdatum. 
      DISPLAY FILL-IN-STARTDAT FILL-IN-SLUTDAT WITH FRAME {&FRAME-NAME}.
   END.*/
   
   regdatumspar = regdatum + 1.
 
END PROCEDURE.

PROCEDURE restidst_UI :   
   
   RUN nyupp_UI (INPUT 26).
   IF sok2 = 1 THEN DO:        
      ASSIGN 
      OUTTAG:VISIBLE  = TRUE
      BFORARE:VISIBLE  = TRUE.
   END.
   ELSE DO:
      ASSIGN 
      OUTTAG:VISIBLE  = FALSE
      BFORARE:VISIBLE  = FALSE.        
   END.
   IF enflerdygns = TRUE THEN DO:
      NTRAKT:VISIBLE  = FALSE.         
      ASSIGN
      sok1 = ansttemp.KOD
      sok3 = "ENBIL".
      RUN nyupp_UI (INPUT 27).      
      IF sok2 = 1 THEN DO:
         ASSIGN 
         OUTTAG:VISIBLE  = FALSE
         BFORARE:VISIBLE  = FALSE.
      END.
   END.   
   ELSE IF enflerdygns = FALSE THEN DO:
      ASSIGN
      sok1 = ansttemp.KOD
      sok3 = "FLBIL".
      RUN nyupp_UI (INPUT 27).      
      IF sok2 = 1 THEN DO:
         ASSIGN 
         OUTTAG:VISIBLE  = FALSE
         BFORARE:VISIBLE  = FALSE.      
      END.      
   END.

END PROCEDURE.
 
PROCEDURE goma_UI :
   
   ASSIGN    
   CMB_OMR:HIDDEN  = TRUE
   CMB_AVD:HIDDEN = TRUE
   BRW_AONR:HIDDEN = TRUE
   FILL-IN-FSTART:HIDDEN = TRUE 
   FILL-IN-FSLUT:HIDDEN = TRUE. 
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN DO:
      ASSIGN      
      FILL-IN-FRIMAT:SCREEN-VALUE = "Nej"
      FILL-IN-3MAN:SCREEN-VALUE = "Nej"  
      FILL-IN-REDTRAKT:SCREEN-VALUE = "Nej"
      
      FILL-IN-FRIMAT:HIDDEN = TRUE
      FILL-IN-3MAN:HIDDEN = TRUE
      FILL-IN-REDTRAKT:HIDDEN = TRUE
      FILL-IN-REDDATUM:HIDDEN = TRUE
      FILL-IN-FSTART:SCREEN-VALUE = "Nej"
      FILL-IN-FSLUT:SCREEN-VALUE = "Nej".      
   END.   
   ELSE DO:
      /*ENABLE  FILL-IN-FRIMAT FILL-IN-3MAN FILL-IN-REDTRAKT WITH FRAME {&FRAME-NAME}.*/      
      ASSIGN
      FILL-IN-NATT:HIDDEN = FALSE
      FILL-IN-FRIMAT:HIDDEN = FALSE
      FILL-IN-3MAN:HIDDEN = FALSE
      FILL-IN-REDTRAKT:HIDDEN = FALSE
      FILL-IN-REDDATUM:HIDDEN = TRUE.            
   END.    
   sok1 = personaltemp.TRAAVTAL.
   RUN nyupp_UI (INPUT 25).
   IF sok2 = 0 THEN FILL-IN-3MAN:HIDDEN = TRUE.
   IF utryckningtemp.INTERNAT = FALSE THEN FILL-IN-FRIMAT:HIDDEN = TRUE.
   energiavt = FALSE.
   IF globforetag = "ETA" /*AND (ansttemp.KOD = "KE" OR ansttemp.KOD = "TE" )*/
   THEN ASSIGN energiavt = TRUE.
   IF globforetag = "GKAL" THEN ASSIGN energiavt = TRUE.
   IF energiavt = TRUE OR globforetag = "VATT" THEN DO:
      FILL-IN-REDTRAKT:screen-value = "Nej".
      FILL-IN-REDTRAKT:HIDDEN = TRUE.
   END.  
   IF globforetag = "ESMA" OR globforetag = "ESAN" THEN DO:
      IF (ansttemp.KOD = "KE" OR ansttemp.KOD = "KH"  OR ansttemp.KOD = "KM" OR ansttemp.KOD = "KO"      
      OR ansttemp.KOD = "TW" OR ansttemp.KOD = "KW" ) THEN DO:
         FILL-IN-REDTRAKT:SCREEN-VALUE = "Nej".
         FILL-IN-REDTRAKT:HIDDEN = TRUE.
      END.   
   END. 
END PROCEDURE.

 
PROCEDURE nasta_UI :
/* -----------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
-------------------------------------------------------------*/   
   FIND personaltemp WHERE personaltemp.PERSONALKOD = ppkod   NO-LOCK NO-ERROR.
   RUN anst_UI.
   RUN nastapers_UI.          
   IF personaltemp.OVERTIDUTTAG = "K" THEN ASSIGN CMB_OVERUT:SCREEN-VALUE = "Komp" .
   IF personaltemp.OVERTIDUTTAG = "Ö" THEN ASSIGN CMB_OVERUT:SCREEN-VALUE = "Över".      
   IF personaltemp.OVERTIDUTTAG = "F" THEN ASSIGN CMB_OVERUT:SCREEN-VALUE = "Över".      
   CMB_OVERUT:HIDDEN = TRUE.  
   /*FILL-IN-MAT:HIDDEN = TRUE.*/
   FILL-IN_FORNAMN-2:screen-value = personaltemp.FORNAMN + " " + personaltemp.EFTERNAMN.   
   /*DISPLAY FILL-IN-PKOD FILL-IN_FORNAMN-2 WITH FRAME {&FRAME-NAME}.*/   
   RUN endag_UI.
   /*DISABLE FILL-IN-MAT WITH FRAME {&FRAME-NAME}.                 */
END PROCEDURE.

 
PROCEDURE anst_UI :

   FIND FIRST personaltemp WHERE personaltemp.PERSONALKOD = ppkod
   NO-LOCK NO-ERROR. 
   FIND FIRST ansttemp WHERE ansttemp.ANSTALLNING = personaltemp.ANSTALLNING
   USE-INDEX ANSTF NO-LOCK NO-ERROR.       
   FIND FIRST utryckningtemp WHERE  utryckningtemp.KOD = ansttemp.KOD
   USE-INDEX UT NO-LOCK NO-ERROR.     
   
END PROCEDURE.



 
PROCEDURE endag_UI :

   FIND FIRST ansttemp WHERE ansttemp.ANSTALLNING = personaltemp.ANSTALLNING USE-INDEX ANSTF NO-LOCK NO-ERROR.       
   FIND FIRST utryckningtemp WHERE  utryckningtemp.KOD = ansttemp.KOD
   USE-INDEX UT NO-LOCK NO-ERROR.   
   IF FILL-IN-ENFLE:screen-value = "Endag" AND utryckningtemp.ENDMALTID = TRUE THEN DO:      
      FILL-IN-3MAN:screen-value = "Nej".
      FILL-IN-3MAN:HIDDEN = TRUE.      
   END.
   ELSE IF FILL-IN-ENFLE:screen-value = "Endag" THEN DO:
      ASSIGN
      FILL-IN-3MAN:screen-value = "Nej".
      FILL-IN-3MAN:HIDDEN = TRUE.
   END.   
   ELSE IF FILL-IN-ENFLE:screen-value = "Flerdygn" THEN DO:
     /* ENABLE  FILL-IN-STARTAR FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.
            
      DISPLAY FILL-IN-STARTAR FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/
      ASSIGN
      musz = FALSE
      sok1 = personaltemp.TRAAVTAL.
      RUN nyupp_UI (INPUT 24).     
      IF sok2 = 1 THEN musz = TRUE.
      IF musz = TRUE THEN DO:
         ASSIGN
         musz = FALSE      
         FILL-IN-REDTRAKT:screen-value = "Nej".
         /*DISPLAY FILL-IN-REDTRAKT .*/
         FILL-IN-REDTRAKT:HIDDEN = FALSE.
         FILL-IN-REDDATUM:HIDDEN = TRUE.
      END.
      ELSE DO:
         ASSIGN
         FILL-IN-REDTRAKT:screen-value = "Nej"
         FILL-IN-REDTRAKT:HIDDEN = TRUE
         FILL-IN-REDDATUM:HIDDEN = TRUE.
      END.
      energiavt = FALSE.
      IF globforetag = "ETA" THEN ASSIGN energiavt = TRUE.
      IF globforetag = "GKAL" THEN ASSIGN energiavt = TRUE.
      IF energiavt = TRUE OR globforetag = "VATT" THEN DO:
         FILL-IN-REDTRAKT:screen-value = "Nej".
         FILL-IN-REDTRAKT:HIDDEN = TRUE.
      END.       
      IF utryckningtemp.INTERNAT = FALSE THEN DO:
         FILL-IN-FRIMAT:screen-value = "Nej".
         FILL-IN-FRIMAT:HIDDEN = TRUE.
      END.
      ELSE DO:
         ASSIGN
         FILL-IN-FRIMAT:screen-value = "Nej".
         /*DISPLAY FILL-IN-FRIMAT WITH FRAME {&FRAME-NAME}.*/     
         FILL-IN-FRIMAT:HIDDEN = FALSE.      
      END.
      sok1 = personaltemp.TRAAVTAL.
      RUN nyupp_UI (INPUT 25).
      IF sok2 = 1 THEN DO:
         ASSIGN
         FILL-IN-3MAN:screen-value = "Nej".
         /*DISPLAY FILL-IN-3MAN WITH FRAME {&FRAME-NAME}.*/     
         FILL-IN-3MAN:HIDDEN = FALSE.      
      END.   
      ELSE DO.
         FILL-IN-3MAN:screen-value = "Nej".
         FILL-IN-3MAN:HIDDEN = TRUE.
      END.
   END.    
   RUN nyupp_UI (INPUT 26).
   IF sok2 = 1 THEN DO:        
      /*ENABLE FILL-IN-BIL WITH FRAME {&FRAME-NAME}.*/
      FILL-IN-BIL:HIDDEN = FALSE.        
   END.
   ELSE DO:               
      ASSIGN
      FILL-IN-BIL:screen-value = "Nej"           
      FILL-IN-BIL:HIDDEN = TRUE.
   END.
   IF FILL-IN-ENFLE:screen-value = "Endag" THEN DO:
      ASSIGN
      sok1 = ansttemp.KOD
      sok3 = "ENBIL".
      RUN nyupp_UI (INPUT 27).
      IF sok2 = 1 THEN DO:    
         ASSIGN
         FILL-IN-BIL:screen-value = "Nej"              
         FILL-IN-BIL:HIDDEN = TRUE.
      END.
   END.   
   ELSE IF FILL-IN-ENFLE:screen-value = "Flerdygn" THEN DO:
      ASSIGN
      sok1 = ansttemp.KOD
      sok3 = "FLBIL".
      RUN nyupp_UI (INPUT 27).
      IF sok2 = 1 THEN DO:    
         ASSIGN
         FILL-IN-BIL:screen-value = "Nej"              
         FILL-IN-BIL:HIDDEN = TRUE.
      END.
   END.      
   
END PROCEDURE.



&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE nastapers_UI C-Win 
PROCEDURE nastapers_UI :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
   IF Guru.Konstanter:appcon THEN DO:                           
      RUN GODKOLLA.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT personaltemp.PERSONALKOD,INPUT FILL-IN-STARTDAT:SCREEN-VALUE,OUTPUT tillochmeddatum,OUTPUT TABLE felmeddtemp).
   END.
   ELSE DO:
      RUN GODKOLLA.P  
      (INPUT personaltemp.PERSONALKOD,INPUT FILL-IN-STARTDAT:SCREEN-VALUE,OUTPUT tillochmeddatum,OUTPUT TABLE felmeddtemp).
   END.
   IF tillochmeddatum NE ? THEN DO:
      IF tillochmeddatum >= date(FILL-IN-STARTDAT:SCREEN-VALUE) THEN DO:
         FILL-IN-STARTDAT:SCREEN-value = string(tillochmeddatum + 1).
      END.
   END.  
   RUN REGVEC.P.
   RUN REGDAG.P.
   FILL-IN-SLUTDAT:screen-value = string(regdatum).
   bdatum = DATE(FILL-IN-STARTDAT:SCREEN-VALUE).
   avdatum = DATE(FILL-IN-SLUTDAT:SCREEN-VALUE).
   /*DISPLAY FILL-IN-STARTDAT FILL-IN-SLUTDAT WITH FRAME {&FRAME-NAME}.
   ENABLE FILL-IN-STARTDAT FILL-IN-SLUTDAT BTN_FVE-3 BTN_NVE-3 BTN_FVE-4 BTN_NVE-4 
   WITH FRAME {&FRAME-NAME}.*/     
END PROCEDURE.

 
PROCEDURE nyupp_UI :
   
   DEFINE INPUT PARAMETER sok0 AS INTEGER NO-UNDO.
   IF Guru.Konstanter:appcon THEN DO: 
      RUN FLEXTIDH.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
      (INPUT sok0,INPUT-OUTPUT sok1,INPUT-OUTPUT sok2,INPUT-OUTPUT sok3,
      INPUT-OUTPUT sok4,INPUT-OUTPUT sok5).            
   END.
   ELSE DO:
      RUN FLEXTIDH.P 
      (INPUT sok0,INPUT-OUTPUT sok1,INPUT-OUTPUT sok2,INPUT-OUTPUT sok3,
      INPUT-OUTPUT sok4,INPUT-OUTPUT sok5).            
   END.  
END PROCEDURE.


PROCEDURE mmbrweaonr_UI :
   ASSIGN
   sok1 = egnaao.AONR       
   sok2 = egnaao.DELNR
   sok4 = "".
   RUN nyupp_UI (INPUT 20).
   IF LENGTH(sok3) > 0 THEN DO:
      MESSAGE sok3 VIEW-AS ALERT-BOX TITLE "Arbetsuppgift".
   END.  
END PROCEDURE.


 
PROCEDURE fillinupdate_UI :
   DEFINE INPUT  PARAMETER vad AS INTEGER NO-UNDO.
   IF vad = 1 THEN DO:
      IF RAD_FAST:SCREEN-VALUE  = string(1) OR RAD_FAST:screen-value = string(2) THEN DO:
          
         IF AVAILABLE utsokaonr THEN DO:
            ASSIGN
            FILL-IN-AONR:SCREEN-VALUE = utsokaonr.AONR
            FILL-IN-DELNR:SCREEN-VALUE = string(utsokaonr.DELNR).         
            /*DISPLAY FILL-IN-AONR FILL-IN-DELNR WITH FRAME {&FRAME-NAME}.*/ 
         END.
         /*ccc
         APPLY "VALUE-CHANGED" TO BRW_AONR IN FRAME {&FRAME-NAME}.*/
        
         BRW_AONR:HIDDEN = FALSE.
         BRW_EAONR:HIDDEN = TRUE.
          
      END.
   END.   
   IF vad = 2 THEN DO:      
      IF AVAILABLE egnaao THEN DO:
         ASSIGN
         FILL-IN-AONR:SCREEN-VALUE = egnaao.AONR
         FILL-IN-DELNR:SCREEN-VALUE = string(egnaao.DELNR).
         BRW_AONR:HIDDEN = TRUE.
         BRW_EAONR:HIDDEN = FALSE.         
         /*DISPLAY FILL-IN-AONR FILL-IN-DELNR WITH FRAME {&FRAME-NAME}.*/ 
      END.
     
      /*APPLY "VALUE-CHANGED" TO BRW_EAONR IN FRAME {&FRAME-NAME}.*/ 
   END.
     
   IF markfr = "REST" THEN DO:  
      IF resfr = FALSE THEN RUN resbild_UI.   
      /*ELSE DO:
         RUN vcbytao_UI.
      END. */         
      RUN openbdynspec_UI IN brwproc[3].
   END.    
END PROCEDURE.

 
PROCEDURE btnfve3_UI :
      
   FILL-IN-STARTDAT:SCREEN-VALUE = STRING(DATE(FILL-IN-STARTDAT:SCREEN-VALUE) - 1).      
   IF tillochmeddatum NE ? THEN DO:
      IF tillochmeddatum >= DATE(FILL-IN-STARTDAT:SCREEN-VALUE) THEN FILL-IN-STARTDAT:SCREEN-VALUE = STRING(tillochmeddatum + 1).      
   END.   
   /*DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.*/    
   regdatum = DATE(FILL-IN-STARTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSTART:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN
      FILL-IN-STARTAR:SCREEN-VALUE = string(regstart).
      /*DISPLAY FILL-IN-STARTAR WITH FRAME {&FRAME-NAME}.*/
   END.
   RUN maltid_UI. 
END PROCEDURE.

 
PROCEDURE btnfve4_UI :

   FILL-IN-SLUTDAT:SCREEN-VALUE = string(DATE(FILL-IN-SLUTDAT:SCREEN-VALUE) - 1).      
   IF tillochmeddatum NE ? THEN DO:
      IF tillochmeddatum >= DATE(FILL-IN-SLUTDAT:SCREEN-VALUE) THEN FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(tillochmeddatum + 1).      
   END.   
   /*DISPLAY FILL-IN-SLUTDAT WITH FRAME {&FRAME-NAME}.*/
   regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG-2:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSLUT:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN   
      FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
      /*DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/
   END.
   RUN maltid_UI. 
END PROCEDURE.
 
PROCEDURE btnnve3_UI :     
   FILL-IN-STARTDAT:SCREEN-VALUE = string(date(FILL-IN-STARTDAT:SCREEN-VALUE) + 1).        
   /*DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.*/
   regdatum = date(FILL-IN-STARTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSTART:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN
      FILL-IN-STARTAR:SCREEN-VALUE = STRING(regstart).   
      /*DISPLAY FILL-IN-STARTAR WITH FRAME {&FRAME-NAME}.*/
   END.
   
   /*DISPLAY FILL-IN-DAG WITH FRAME {&FRAME-NAME}.*/   
   IF date(FILL-IN-SLUTDAT:SCREEN-VALUE) < date(FILL-IN-STARTDAT:SCREEN-VALUE) THEN DO:
      FILL-IN-SLUTDAT:SCREEN-VALUE = FILL-IN-STARTDAT:SCREEN-VALUE.
      RUN fislutdat_UI.
      /*DISPLAY FILL-IN-SLUTDAT FILL-IN-DAG-2 WITH FRAME {&FRAME-NAME}.*/
   END.
   RUN maltid_UI. 
      
END PROCEDURE.



 
PROCEDURE btnnve4_UI :
   FILL-IN-SLUTDAT:SCREEN-VALUE = string(date(FILL-IN-SLUTDAT:SCREEN-VALUE) + 1).
   regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG-2:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSLUT:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN
      FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
      /*DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/
   END.
   RUN maltid_UI. 
END PROCEDURE.

 
PROCEDURE fislutdat_UI :

   regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG-2:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSLUT:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN
      FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
      /*DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/
   END.
   RUN maltid_UI. 
END PROCEDURE.


PROCEDURE btnuppd_UI:
   status-ok = BRW_RESTID:SELECT-FOCUSED-ROW() NO-ERROR.
   APPLY "VALUE-CHANGED" TO BRW_RESTID.
   aonrspar = respers.AONR. 
   delnrspar = respers.DELNR. 
   nattspar = respers.NATTRAKT. 
   overspar = respers.OVERTIDUTTAG. 
   prisspar = respers.PRIS. 
   pristypspar = respers.PRISTYP. 
   bilspar = respers.BILFORARE. 
   regdagnamn = respers.DAG. 
   regdatum = respers.DATUM. 
   regstart = respers.SLUT. 
   regvnr = respers.VECKONUMMER.
   dummyrec = RECID(respers).
   {muswait.i}
   CREATE respers.
   ASSIGN 
   respers.AONR = aonrspar
   respers.BILFORARE = bilspar
   respers.DAG = regdagnamn 
   respers.DATUM = regdatum
   respers.DELNR = delnrspar
   respers.NATTRAKT = nattspar
   respers.OVERTIDUTTAG = overspar
   respers.PRIS = prisspar
   respers.PRISTYP = pristypspar
   respers.SLUT = regstart
   respers.START = regstart
   respers.VECKONUMMER = regvnr
   respers.TIDREC = ?.
   OPEN QUERY BRW_RESTID FOR EACH respers USE-INDEX RESPERS.
   RUN repo_UI (INPUT dummyrec).                     
   {musarrow.i}
END PROCEDURE.

PROCEDURE btnupp_UI:
   RUN valdbyt_UI.
   IF musz = FALSE THEN DO:      
      dummyrec = RECID(respers).
      {muswait.i}
      /*{AVBGOMD.I}*/
      RUN RESAND.W (INPUT ppkod).
      /*{AVBFRAMD.I}*/      
      OPEN QUERY BRW_RESTID FOR EACH respers USE-INDEX RESPERS.
      RUN repo_UI (INPUT dummyrec).  
      status-ok = BRW_RESTID:SELECT-FOCUSED-ROW() NO-ERROR.                      
   END.
   {musarrow.i}
   musz = FALSE.
END PROCEDURE.

PROCEDURE btnony_UI:
   {muswait.i}      
   IF NOT AVAILABLE lontmp THEN DO:
      MESSAGE "Markera den löneart du vill lägga upp till höger." VIEW-AS ALERT-BOX.
      RETURN NO-APPLY.
   END.   
   CREATE oklon.
/*   ASSIGN   
   oklon.NAMN = " NY"
   oklon.MTRLROW = ?.*/
   
   regdatum = DATE(FILL-IN-STARTDAT:SCREEN-VALUE).
   RUN REGVEC.P.
   RUN REGDAG.P.
   ASSIGN         
   oklon.AONR = FILL-IN-AONR:SCREEN-VALUE 
   oklon.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE)
   oklon.LONTILLAGG = lontmp.LONTILLAGG
   oklon.VILART = lontmp.VILART   
   oklon.LONTILLANTAL = 0
   SUBSTRING(oklon.LONKODTEXT,1,40) = lontmp.LONKODTEXT
   /*SUBSTRING(oklon.LONKODTEXT,41) = FILL-IN-RESMAL*/
   oklon.MOMS = 0
   oklon.DATUM = DATE(FILL-IN-STARTDAT:SCREEN-VALUE)
   oklon.VECKONUMMER = regvnr
   oklon.DAG = regdagnamn
   oklon.OMOMS = lontmp.MOMS.
   IF oklon.OMOMS = FALSE THEN OMOMS:READ-ONLY = TRUE.
   ELSE OMOMS:READ-ONLY = FALSE.
   
   
   RUN setlastrowid_UI IN brwproc[4] (INPUT ROWID(oklon)).
   RUN openbdynspec_UI IN brwproc[4].
   RUN lastselectdyn_UI IN brwproc[4].
   /*RUN openbdynspec_UI IN brwproc[5].*/
   RUN dselectfoc_UI (INPUT 5).
   RELEASE lontmp NO-ERROR.
   {musarrow.i}                                
      
   APPLY "ENTRY" TO OLONANTAL.
END PROCEDURE.


PROCEDURE valdbyt_UI :   
   antal_valda = BRW_RESTID:NUM-SELECTED-ROWS.      
   IF antal_valda = 0 THEN DO:      
      MESSAGE "Ingen registrering är markerad." VIEW-AS ALERT-BOX.    
      musz = TRUE.
      RETURN.                
   END.
   ELSE DO:  
      antal_raknare = 1.
      avrdatum = brwbdatum.
      DO WHILE antal_raknare LE antal_valda :                  
         status-ok = BRW_RESTID:FETCH-SELECTED-ROW(antal_raknare).                  
         IF avrdatum < respers.DATUM THEN avrdatum = respers.DATUM.
         antal_raknare = antal_raknare + 1.
      END.          
  END.             
END PROCEDURE.

PROCEDURE cmbavd_UI :   
     omravdand = 1.    
   RUN nycolsortprep_UI (INPUT 2).
   RUN openbdynspec_UI IN brwproc[1]. 
   {CMB_AVDB3.I}       
END PROCEDURE.

PROCEDURE vccmbomr_UI :   
   omravdand = 2.    
   RUN nycolsortprep_UI (INPUT 1).
   RUN openbdynspec_UI IN brwproc[1].            
END PROCEDURE.

PROCEDURE vccmboverut_UI :                 
   FOR EACH respers:
      IF CMB_OVERUT:SCREEN-VALUE = "Komp" THEN ASSIGN respers.OVERTIDUTTAG = "K". 
      IF CMB_OVERUT:SCREEN-VALUE = "Över" THEN ASSIGN respers.OVERTIDUTTAG = "Ö".      
   END.                    
   RUN openbdynspec_UI IN brwproc[3].      
END PROCEDURE.
 
PROCEDURE hao2_UI :
   FIND FIRST utsokaonr WHERE utsokaonr.AONR = FILL-IN-AONR:SCREEN-VALUE  AND utsokaonr.DELNR = integer(FILL-IN-DELNR:SCREEN-VALUE) AND
   utsokaonr.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
   IF AVAILABLE utsokaonr THEN DO:
      IF utsokaonr.FASTAAONR = TRUE THEN RAD_FAST:SCREEN-VALUE = string(2).
      IF utsokaonr.FASTAAONR = FALSE THEN RAD_FAST:SCREEN-VALUE = string(1).
      FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = integer(FILL-IN-DELNR:SCREEN-VALUE) AND
      egnaao.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
      IF AVAILABLE egnaao THEN RAD_FAST:SCREEN-VALUE = string(3).      
      /*DISPLAY RAD_FAST WITH FRAME {&FRAME-NAME}.*/         
      FIND FIRST omrtemp WHERE omrtemp.NAMN = CMB_OMR:SCREEN-VALUE NO-LOCK NO-ERROR.
      IF NOT AVAILABLE omrtemp THEN CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
      ELSE DO:         
         IF CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla" THEN musz = musz.                        
         ELSE IF utsokaonr.OMRADE = ""  THEN DO:
            CMB_OMR:SCREEN-VALUE = Guru.Konstanter:gomrk + " : alla".
            /*DISPLAY CMB_OMR WITH FRAME {&FRAME-NAME}.*/         
         END.
         ELSE IF utsokaonr.OMRADE NE omrtemp.OMRADE THEN DO: 
            FIND FIRST omrtemp WHERE omrtemp.OMRADE = utsokaonr.omrade NO-LOCK NO-ERROR.
            CMB_OMR:SCREEN-VALUE = omrtemp.NAMN.
            /*DISPLAY CMB_OMR WITH FRAME {&FRAME-NAME}.*/         
         END.       
      END.         
      IF RAD_FAST:SCREEN-VALUE = string(3) THEN DO:               
         RUN openbdynspec_UI IN brwproc[2].
         IF FILL-IN-AONR:SCREEN-VALUE NE "" THEN DO:
            FIND FIRST egnaao WHERE egnaao.AONR = FILL-IN-AONR:SCREEN-VALUE AND egnaao.DELNR = integer(FILL-IN-DELNR:SCREEN-VALUE) AND
            egnaao.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
            IF AVAILABLE egnaao THEN DO:            
               RUN setlastrowid_UI IN brwproc[2] (INPUT ROWID(egnaao)).
               RUN lastselectdyn_UI IN brwproc[2].            
            END.
         END.      
         ASSIGN
         BRW_AONR:HIDDEN = TRUE   
         BRW_EAONR:HIDDEN = FALSE
         CMB_OMR:HIDDEN = TRUE
         CMB_AVD:HIDDEN = TRUE.
            
         /*ENABLE BRW_EAONR WITH FRAME {&FRAME-NAME}.*/
      END.
      ELSE DO:         
         RUN nycolsortprep_UI (INPUT 1).
         RUN openbdynspec_UI IN brwproc[1].  
         FIND FIRST utsokaonr WHERE utsokaonr.AONR = FILL-IN-AONR:SCREEN-VALUE AND utsokaonr.DELNR = integer(FILL-IN-DELNR:SCREEN-VALUE) AND
         utsokaonr.AONRAVDATUM = 01/01/1991 USE-INDEX AONR NO-LOCK NO-ERROR.
         RUN setlastrowid_UI IN brwproc[1] (INPUT ROWID(utsokaonr)).
         RUN lastselectdyn_UI IN brwproc[1].  
         ASSIGN
         BRW_AONR:HIDDEN = FALSE   
         BRW_EAONR:HIDDEN = TRUE
         CMB_OMR:HIDDEN = FALSE
         CMB_AVD:HIDDEN = FALSE.
            
         /*ENABLE BRW_AONR WITH FRAME {&FRAME-NAME}.*/
      END.                  
   END.

END PROCEDURE.



PROCEDURE laonr_UI :        
   RUN hao2_UI. 
   IF markfr = "REST" THEN DO:
      IF resfr = FALSE THEN RUN resbild_UI.   
      /*ELSE DO:
         RUN vcbytao_UI.                               
      END.*/      
      RUN openbdynspec_UI IN brwproc[3].
   END.                        
END PROCEDURE.

PROCEDURE ldelnr_UI :
   IF FILL-IN-AONR:SCREEN-VALUE = "" THEN DO:
      MESSAGE "Fältet " + LC(Guru.Konstanter:gaok) + " kan inte vara blankt." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN-AONR.
       RETURN NO-APPLY.
   END.       
   FIND FIRST utsokaonr WHERE utsokaonr.AONR = FILL-IN-AONR:SCREEN-VALUE AND 
   utsokaonr.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE) USE-INDEX AONR NO-LOCK NO-ERROR.  
   IF NOT AVAILABLE utsokaonr THEN DO:
      MESSAGE Guru.Konstanter:gaok FILL-IN-AONR STRING(FILL-IN-DELNR:SCREEN-VALUE,Guru.Konstanter:varforetypchar[1]) "finns inte." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN-AONR.
      RETURN NO-APPLY.
   END.
   ELSE DO:
      regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE).
      IF utsokaonr.AONRAVDATUM = 01/01/1991 OR
      utsokaonr.AONRAVDATUM >= regdatum THEN FILL-IN-DELNR:SCREEN-VALUE = string(FILL-IN-DELNR).
      ELSE DO:
         MESSAGE Guru.Konstanter:gaok FILL-IN-AONR:SCREEN-VALUE STRING(FILL-IN-DELNR:SCREEN-VALUE,Guru.Konstanter:varforetypchar[1]) "är redan avslutat." VIEW-AS ALERT-BOX.
         APPLY "ENTRY" TO FILL-IN-AONR.
         RETURN NO-APPLY.
      END.
   END.
   RUN hao2_UI.
   IF markfr = "REST" THEN DO:
      IF resfr = FALSE THEN RUN resbild_UI.   
      /*ELSE DO:
         RUN vcbytao_UI.
      END.*/
               
      RUN openbdynspec_UI IN brwproc[3].
   END.                                    
END PROCEDURE.
 
PROCEDURE fienfle_UI :
   ASSIGN 
   FILL-IN-FSTART:SCREEN-VALUE  = "Nej"  
   FILL-IN-FSLUT:SCREEN-VALUE = "Nej"
   FILL-IN-FSTART:HIDDEN  = TRUE 
   FILL-IN-FSLUT:HIDDEN = TRUE.   
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN DO:
      ASSIGN
      FILL-IN-NATT:SCREEN-VALUE = "Nej"
      FILL-IN-FRIMAT:SCREEN-VALUE = "Nej"  
      FILL-IN-3MAN:SCREEN-VALUE = "Nej"
      FILL-IN-REDTRAKT:SCREEN-VALUE = "Ja"    
      FILL-IN-NATT:HIDDEN  = TRUE
      FILL-IN-RESTID:HIDDEN = TRUE
      FILL-IN-TRORD:HIDDEN = TRUE
      FILL-IN-FRIMAT:HIDDEN = TRUE
      FILL-IN-3MAN:HIDDEN = TRUE
      FILL-IN-REDTRAKT:HIDDEN = TRUE      
      FILL-IN-REDDATUM:HIDDEN = TRUE.                         
   END.   
   ELSE DO:
/*      ENABLE FILL-IN-FRIMAT FILL-IN-3MAN FILL-IN-REDTRAKT WITH FRAME {&FRAME-NAME}.*/
      ASSIGN
      FILL-IN-NATT:HIDDEN = FALSE
      FILL-IN-RESTID:HIDDEN = TRUE
      FILL-IN-TRORD:HIDDEN = TRUE
      FILL-IN-FRIMAT:HIDDEN = FALSE
      FILL-IN-3MAN:HIDDEN = FALSE
      FILL-IN-REDTRAKT:HIDDEN = FALSE
      FILL-IN-REDDATUM:HIDDEN = TRUE.      
      IF globforetag = "CELPA" THEN DO:
         ASSIGN
         FILL-IN-FSTART:HIDDEN = FALSE 
         FILL-IN-FSLUT:HIDDEN = FALSE.         
      END.      
   END.   
   ASSIGN
   /*FILL-IN-MAT = FALSE*/
   FILL-IN-FRIMAT:SCREEN-VALUE = "Nej"
   FILL-IN-3MAN:SCREEN-VALUE = "Nej"
   FILL-IN-REDTRAKT:SCREEN-VALUE = "Nej".
   RUN endag_UI.
/*   DISPLAY FILL-IN-ENFLE WITH FRAME {&FRAME-NAME}.*/
END PROCEDURE.



PROCEDURE msfienfle_UI :   
   IF FILL-IN-ENFLE:SCREEN-VALUE  = "Endag" THEN FILL-IN-ENFLE:SCREEN-VALUE  = "Flerdygn".  
   ELSE IF FILL-IN-ENFLE:SCREEN-VALUE  = "Flerdygn" THEN FILL-IN-ENFLE:SCREEN-VALUE  = "Endag".
   ASSIGN
   FILL-IN-FSTART:SCREEN-VALUE = "Nej"
   FILL-IN-FSLUT:SCREEN-VALUE = "Nej"
   FILL-IN-FSTART:HIDDEN = TRUE 
   FILL-IN-FSLUT:HIDDEN = TRUE
   FILL-IN-RESTID:HIDDEN = TRUE
   FILL-IN-TRORD:HIDDEN = TRUE.
   IF FILL-IN-ENFLE:SCREEN-VALUE = "Endag" THEN DO:
      ASSIGN
      FILL-IN-NATT:SCREEN-VALUE = "Nej"      
      FILL-IN-FRIMAT:SCREEN-VALUE = "Nej"
      FILL-IN-3MAN:SCREEN-VALUE = "Nej"  
      FILL-IN-REDTRAKT:SCREEN-VALUE = "Nej"      
      /*FILL-IN-NATT:HIDDEN = TRUE  */     
      FILL-IN-FRIMAT:HIDDEN = TRUE
      FILL-IN-3MAN:HIDDEN = TRUE
      FILL-IN-REDTRAKT:HIDDEN = TRUE
      FILL-IN-REDDATUM:HIDDEN = TRUE.                         
   END.   
   ELSE DO:
      /*ENABLE FILL-IN-NATT  WITH FRAME {&FRAME-NAME}.*/
      ASSIGN
      FILL-IN-NATT:HIDDEN = FALSE      
      FILL-IN-FRIMAT:HIDDEN = FALSE
      FILL-IN-3MAN:HIDDEN = FALSE
      FILL-IN-REDTRAKT:HIDDEN = FALSE
      FILL-IN-REDDATUM:HIDDEN = TRUE.      
      IF globforetag = "celpa" THEN DO:
         /* mer än 3 mån*/
         ASSIGN
         FILL-IN-FSTART:HIDDEN = FALSE  
         FILL-IN-FSLUT:HIDDEN = FALSE.         
      END.
   END.
   ASSIGN
/*   FILL-IN-MAT = FALSE*/
   FILL-IN-FRIMAT:SCREEN-VALUE = "Nej"
   FILL-IN-3MAN:SCREEN-VALUE = "Nej"
   FILL-IN-REDTRAKT:SCREEN-VALUE = "Nej".      
   RUN endag_UI.
/*   DISPLAY FILL-IN-ENFLE WITH FRAME {&FRAME-NAME}.*/
   
END PROCEDURE.


PROCEDURE msfifrimat_UI :   
   IF FILL-IN-FRIMAT:SCREEN-VALUE  = "Ja" THEN FILL-IN-FRIMAT:SCREEN-VALUE  = "Nej".  
   ELSE IF FILL-IN-FRIMAT:SCREEN-VALUE  = "Nej" THEN FILL-IN-FRIMAT:SCREEN-VALUE  = "Ja".    
END PROCEDURE.


PROCEDURE lfifslut_UI :         
   IF FILL-IN-FSLUT:SCREEN-VALUE = "Ja" THEN DO:
      FILL-IN-SLUTAR:HIDDEN = TRUE.
   END.
   ELSE FILL-IN-SLUTAR:HIDDEN = FALSE.
       
END PROCEDURE.

PROCEDURE msfifslut_UI :         
   IF FILL-IN-FSLUT:SCREEN-VALUE  = "Ja" THEN FILL-IN-FSLUT:SCREEN-VALUE  = "Nej".  
   ELSE IF FILL-IN-FSLUT:SCREEN-VALUE  = "Nej" THEN FILL-IN-FSLUT:SCREEN-VALUE  = "Ja".       
   /*DISPLAY FILL-IN-FSLUT WITH FRAME {&FRAME-NAME}.*/   
   IF FILL-IN-FSLUT:SCREEN-VALUE = "Ja" THEN DO:
      FILL-IN-SLUTAR:HIDDEN = TRUE.
   END.
   ELSE FILL-IN-SLUTAR:HIDDEN = FALSE.    
END PROCEDURE.

PROCEDURE lfifstart_UI :         
   IF FILL-IN-FSTART:SCREEN-VALUE = "Ja" THEN DO:
      FILL-IN-STARTAR:HIDDEN = TRUE.
   END.
   ELSE FILL-IN-STARTAR:HIDDEN = FALSE.    
       
END PROCEDURE.

PROCEDURE msfifstart_UI :         
   IF FILL-IN-FSTART:SCREEN-VALUE  = "Ja" THEN FILL-IN-FSTART:SCREEN-VALUE  = "Nej".  
   ELSE IF FILL-IN-FSTART:SCREEN-VALUE  = "Nej" THEN FILL-IN-FSTART:SCREEN-VALUE  = "Ja".       
   /*DISPLAY FILL-IN-FSLUT WITH FRAME {&FRAME-NAME}.*/   
   IF FILL-IN-FSTART:SCREEN-VALUE = "Ja" THEN DO:
      FILL-IN-STARTAR:HIDDEN = TRUE.
   END.
   ELSE FILL-IN-STARTAR:HIDDEN = FALSE. 
        
END PROCEDURE.

PROCEDURE lredtrakt_UI :
   IF FILL-IN-REDTRAKT:SCREEN-VALUE = "Ja" THEN DO:
      ASSIGN
      FILL-IN-REDDATUM:SCREEN-VALUE = FILL-IN-STARTDAT:SCREEN-VALUE.   
      /*ENABLE FILL-IN-REDDATUM WITH FRAME {&FRAME-NAME}.
      DISPLAY FILL-IN-REDDATUM WITH FRAME {&FRAME-NAME}.*/
      ASSIGN       
      FILL-IN-REDDATUM:HIDDEN = FALSE. 
   END.
   ELSE DO:
      ASSIGN 
      FILL-IN-REDDATUM:HIDDEN = TRUE. 
   END.                 
END PROCEDURE.


PROCEDURE msrtrakt_UI:         
   IF FILL-IN-REDTRAKT:SCREEN-VALUE  = "Ja" THEN FILL-IN-REDTRAKT:SCREEN-VALUE  = "Nej".  
   ELSE IF FILL-IN-REDTRAKT:SCREEN-VALUE  = "Nej" THEN FILL-IN-REDTRAKT:SCREEN-VALUE  = "Ja".
   
   /*DISPLAY FILL-IN-REDTRAKT WITH FRAME {&FRAME-NAME}.*/
   IF FILL-IN-REDTRAKT:SCREEN-VALUE  = "Ja" THEN DO:
      /*ASSIGN      
      ENABLE FILL-IN-REDDATUM WITH FRAME {&FRAME-NAME}.
      DISPLAY FILL-IN-REDDATUM WITH FRAME {&FRAME-NAME}.*/
      ASSIGN 
      FILL-IN-REDDATUM:HIDDEN = FALSE. 
   END.
   ELSE DO:
      ASSIGN 
      FILL-IN-REDDATUM:HIDDEN = TRUE. 
   END.
                 
END PROCEDURE.

PROCEDURE msfstartar_UI:         
   klocka = decimal(FILL-IN-STARTAR:SCREEN-VALUE).  
   /*{AVBGOMD.I}*/
   RUN KLOCKAN.W.
   /*{AVBFRAMD.I}*/
   FILL-IN-STARTAR:SCREEN-VALUE = string(klocka).
   /*DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/                 
END PROCEDURE.

PROCEDURE msfslutar_UI:         
   klocka = decimal(FILL-IN-SLUTAR:SCREEN-VALUE).  
   /*{AVBGOMD.I}*/
   RUN KLOCKAN.W.
   /*{AVBFRAMD.I}*/
   FILL-IN-SLUTAR:SCREEN-VALUE = string(klocka).
   /*DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/                 
END PROCEDURE.

PROCEDURE lstartdat_UI:         
  RUN fistartdat_UI. 
   /*DISPLAY FILL-IN-DAG WITH FRAME {&FRAME-NAME}.*/       
   IF date(FILL-IN-SLUTDAT:SCREEN-VALUE) < date(FILL-IN-STARTDAT:SCREEN-VALUE) THEN DO:
      FILL-IN-SLUTDAT:SCREEN-VALUE = FILL-IN-STARTDAT:SCREEN-VALUE.
      RUN fislutdat_UI.
      /*DISPLAY FILL-IN-SLUTDAT FILL-IN-DAG-2 WITH FRAME {&FRAME-NAME}.*/
   END.    
                    
END PROCEDURE.



PROCEDURE mmstartdat_UI:
  
   Guru.GlobalaVariabler:regdatum = date(FILL-IN-STARTDAT:SCREEN-VALUE).
   RUN AlmanBtn.w.
   FILL-IN-STARTDAT:SCREEN-VALUE = STRING(Guru.GlobalaVariabler:regdatum).
   RUN REGVEC.P.
   {SLUTARBW.I}
   ASSIGN
   FILL-IN-STARTAR:SCREEN-VALUE = string(regstart).
   /*IF FILL-IN-ENFLE:SCREEN-VALUE = "Nej" THEN
   DISPLAY FILL-IN-STARTAR WITH FRAME {&FRAME-NAME}.
   DISPLAY FILL-IN-STARTDAT WITH FRAME {&FRAME-NAME}.*/       
                    
END PROCEDURE.

 
PROCEDURE fistartdat_UI :
   regdatum = date(FILL-IN-STARTDAT:SCREEN-VALUE). 
   RUN REGDAG.P.
   IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
   rnamn = regdagnamn + "dag".
   FILL-IN-DAG:SCREEN-VALUE = rnamn.
   IF FILL-IN-FSTART:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
      RUN REGVEC.P.
      {SLUTARBW.I}
      ASSIGN
      FILL-IN-STARTAR:SCREEN-VALUE = string(regstart).   
      /*DISPLAY FILL-IN-STARTAR WITH FRAME {&FRAME-NAME}.*/
   END.
END PROCEDURE.




PROCEDURE lslutdat_UI:     
   
  RUN fislutdat_UI.
  regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE). 
  RUN REGDAG.P.
  IF regdagnamn = "tor" THEN regdagnamn = regdagnamn + "s".
  rnamn = regdagnamn + "dag".
  FILL-IN-DAG-2:SCREEN-VALUE = rnamn.
  IF FILL-IN-FSLUT:SCREEN-VALUE = "Nej" /*AND FILL-IN-ENFLE = FALSE*/ THEN DO:   
     RUN REGVEC.P.
     {SLUTARBW.I}
     ASSIGN
     FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
    /* DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.*/
  END.
  /*DISPLAY FILL-IN-DAG-2 WITH FRAME {&FRAME-NAME}.*/    
  RUN maltid_UI.                  
END PROCEDURE.

PROCEDURE mmslutdat_UI:
   /*ASSIGN
   FILL-IN-SLUTDAT = INPUT FILL-IN-SLUTDAT*/
   Guru.GlobalaVariabler:regdatum = date(FILL-IN-SLUTDAT:SCREEN-VALUE).
   RUN AlmanBtn.w.
   FILL-IN-SLUTDAT:SCREEN-VALUE = STRING(Guru.GlobalaVariabler:regdatum).
   RUN REGVEC.P.
   {SLUTARBW.I}
   ASSIGN
   FILL-IN-SLUTAR:SCREEN-VALUE = string(regslut).
   /*IF FILL-IN-ENFLE:SCREEN-VALUE = FALSE THEN
   DISPLAY FILL-IN-SLUTAR WITH FRAME {&FRAME-NAME}.
   DISPLAY FILL-IN-SLUTDAT WITH FRAME {&FRAME-NAME}. */        
                    
END PROCEDURE.

PROCEDURE mstrord_UI:
   IF FILL-IN-TRORD:SCREEN-VALUE = "Ja" THEN FILL-IN-TRORD:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TRORD:SCREEN-VALUE = "Nej" THEN FILL-IN-TRORD:SCREEN-VALUE = "Ja".
                   
END PROCEDURE.

PROCEDURE msnatt_UI:
   IF FILL-IN-NATT:SCREEN-VALUE = "Ja" THEN FILL-IN-NATT:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-NATT:SCREEN-VALUE = "Nej" THEN FILL-IN-NATT:SCREEN-VALUE = "Ja".   
   FOR EACH respers:
      IF  FILL-IN-NATT:SCREEN-VALUE = "Ja" THEN   ASSIGN respers.NATTRAKT = TRUE.
      ELSE ASSIGN respers.NATTRAKT = FALSE.
   END.                        
   RUN openbdynspec_UI IN brwproc[3].                 
END PROCEDURE.

PROCEDURE msbil_UI:
   IF FILL-IN-BIL:SCREEN-VALUE = "Ja" THEN FILL-IN-BIL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-BIL:SCREEN-VALUE = "Nej" THEN FILL-IN-BIL:SCREEN-VALUE = "Ja".
   IF FILL-IN-BIL:SCREEN-VALUE = "Ja" AND utryckningtemp.LUFT = TRUE THEN DO:
      CMB_OVERUT:HIDDEN = FALSE.
   END.
   ELSE CMB_OVERUT:HIDDEN = TRUE.    
     
   FOR EACH respers:
      IF  FILL-IN-BIL:SCREEN-VALUE = "Ja" THEN   ASSIGN respers.BILFORARE = TRUE.
      ELSE ASSIGN respers.BILFORARE = FALSE.
   END.                    
   RUN openbdynspec_UI IN brwproc[3].                    
END PROCEDURE.

PROCEDURE anyaonrs_UI:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_AONRS.
   END.        
                    
END PROCEDURE.

PROCEDURE anyorts_UI:
   {TRYCKS.I}
   IF KEYFUNCTION(LASTKEY) = ("RETURN") THEN DO:
      APPLY "MOUSE-SELECT-DBLCLICK" TO FILL-IN_ORTS.
   END.        
                    
END PROCEDURE.


PROCEDURE msaonrs_UI:
   /*FILL-IN_AONRS = INPUT FILL-IN_AONRS.*/
   IF FILL-IN_AONRS:SCREEN-VALUE = '' THEN DO:
      MESSAGE "Sökbegreppet kan inte vara blankt." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_AONRS.
      RETURN NO-APPLY.
   END.  
   IF RAD_FAST:SCREEN-VALUE = string(1) OR RAD_FAST:SCREEN-VALUE = string(2) THEN DO:   
      RUN sokurvaldyn_UI IN brwproc[1] (INPUT "AONR", INPUT FILL-IN_AONRS:SCREEN-VALUE).
   END.
   ELSE DO:
      RUN sokurvaldyn_UI IN brwproc[2] (INPUT "AONR", INPUT FILL-IN_AONRS:SCREEN-VALUE).
   END.      
   RUN fillinupdate_UI (INPUT 1).        
                    
END PROCEDURE.

PROCEDURE msorts_UI:
   /*FILL-IN_AONRS = INPUT FILL-IN_AONRS.*/
   IF FILL-IN_ORTS:SCREEN-VALUE = '' THEN DO:
      MESSAGE "Sökbegreppet kan inte vara blankt." VIEW-AS ALERT-BOX.
      APPLY "ENTRY" TO FILL-IN_ORTS.
      RETURN NO-APPLY.
   END.  
   IF RAD_FAST:SCREEN-VALUE = string(1) OR RAD_FAST:SCREEN-VALUE = string(2) THEN DO:   
      RUN sokurvaldyn_UI IN brwproc[1] (INPUT "ORT", INPUT FILL-IN_ORTS:SCREEN-VALUE).
   END.
   ELSE DO:
      RUN sokurvaldyn_UI IN brwproc[2] (INPUT "ORT", INPUT FILL-IN_ORTS:SCREEN-VALUE).
   END.      
   RUN fillinupdate_UI (INPUT 1).        
                    
END PROCEDURE.

PROCEDURE msmanf_UI:
   IF FILL-IN-MANF:SCREEN-VALUE = "Ja" THEN FILL-IN-MANF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANF:SCREEN-VALUE = "Nej" THEN FILL-IN-MANF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanl_UI:
   IF FILL-IN-MANL:SCREEN-VALUE = "Ja" THEN FILL-IN-MANL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANL:SCREEN-VALUE = "Nej" THEN FILL-IN-MANL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanm_UI:
   IF FILL-IN-MANM:SCREEN-VALUE = "Ja" THEN FILL-IN-MANM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANM:SCREEN-VALUE = "Nej" THEN FILL-IN-MANM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisf_UI:
   IF FILL-IN-TISF:SCREEN-VALUE = "Ja" THEN FILL-IN-TISF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISF:SCREEN-VALUE = "Nej" THEN FILL-IN-TISF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisl_UI:
   IF FILL-IN-TISL:SCREEN-VALUE = "Ja" THEN FILL-IN-TISL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISL:SCREEN-VALUE = "Nej" THEN FILL-IN-TISL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstism_UI:
   IF FILL-IN-TISM:SCREEN-VALUE = "Ja" THEN FILL-IN-TISM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISM:SCREEN-VALUE = "Nej" THEN FILL-IN-TISM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsf_UI:
   IF FILL-IN-ONSF:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSF:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsl_UI:
   IF FILL-IN-ONSL:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSL:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsm_UI:
   IF FILL-IN-ONSM:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSM:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorf_UI:
   IF FILL-IN-TORF:SCREEN-VALUE = "Ja" THEN FILL-IN-TORF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORF:SCREEN-VALUE = "Nej" THEN FILL-IN-TORF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorl_UI:
   IF FILL-IN-TORL:SCREEN-VALUE = "Ja" THEN FILL-IN-TORL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORL:SCREEN-VALUE = "Nej" THEN FILL-IN-TORL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorm_UI:
   IF FILL-IN-TORM:SCREEN-VALUE = "Ja" THEN FILL-IN-TORM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORM:SCREEN-VALUE = "Nej" THEN FILL-IN-TORM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfref_UI:
   IF FILL-IN-FREF:SCREEN-VALUE = "Ja" THEN FILL-IN-FREF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREF:SCREEN-VALUE = "Nej" THEN FILL-IN-FREF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrel_UI:
   IF FILL-IN-FREL:SCREEN-VALUE = "Ja" THEN FILL-IN-FREL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREL:SCREEN-VALUE = "Nej" THEN FILL-IN-FREL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrem_UI:
   IF FILL-IN-FREM:SCREEN-VALUE = "Ja" THEN FILL-IN-FREM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREM:SCREEN-VALUE = "Nej" THEN FILL-IN-FREM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorf_UI:
   IF FILL-IN-LORF:SCREEN-VALUE = "Ja" THEN FILL-IN-LORF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORF:SCREEN-VALUE = "Nej" THEN FILL-IN-LORF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorl_UI:
   IF FILL-IN-LORL:SCREEN-VALUE = "Ja" THEN FILL-IN-LORL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORL:SCREEN-VALUE = "Nej" THEN FILL-IN-LORL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorm_UI:
   IF FILL-IN-LORM:SCREEN-VALUE = "Ja" THEN FILL-IN-LORM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORM:SCREEN-VALUE = "Nej" THEN FILL-IN-LORM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonf_UI:
   IF FILL-IN-SONF:SCREEN-VALUE = "Ja" THEN FILL-IN-SONF:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONF:SCREEN-VALUE = "Nej" THEN FILL-IN-SONF:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonl_UI:
   IF FILL-IN-SONL:SCREEN-VALUE = "Ja" THEN FILL-IN-SONL:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONL:SCREEN-VALUE = "Nej" THEN FILL-IN-SONL:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonm_UI:
   IF FILL-IN-SONM:SCREEN-VALUE = "Ja" THEN FILL-IN-SONM:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONM:SCREEN-VALUE = "Nej" THEN FILL-IN-SONM:SCREEN-VALUE = "Ja".                               
END PROCEDURE.


PROCEDURE msmanf2_UI:
   IF FILL-IN-MANF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-MANF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-MANF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanl2_UI:
   IF FILL-IN-MANL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-MANL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-MANL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanm2_UI:
   IF FILL-IN-MANM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-MANM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-MANM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisf2_UI:
   IF FILL-IN-TISF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TISF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TISF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisl2_UI:
   IF FILL-IN-TISL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TISL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TISL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstism2_UI:
   IF FILL-IN-TISM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TISM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TISM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsf2_UI:
   IF FILL-IN-ONSF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsl2_UI:
   IF FILL-IN-ONSL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsm2_UI:
   IF FILL-IN-ONSM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorf2_UI:
   IF FILL-IN-TORF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TORF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TORF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorl2_UI:
   IF FILL-IN-TORL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TORL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TORL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorm2_UI:
   IF FILL-IN-TORM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-TORM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-TORM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfref2_UI:
   IF FILL-IN-FREF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-FREF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-FREF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrel2_UI:
   IF FILL-IN-FREL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-FREL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-FREL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrem2_UI:
   IF FILL-IN-FREM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-FREM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-FREM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorf2_UI:
   IF FILL-IN-LORF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-LORF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-LORF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorl2_UI:
   IF FILL-IN-LORL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-LORL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-LORL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorm2_UI:
   IF FILL-IN-LORM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-LORM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-LORM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonf2_UI:
   IF FILL-IN-SONF-2:SCREEN-VALUE = "Ja" THEN FILL-IN-SONF-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONF-2:SCREEN-VALUE = "Nej" THEN FILL-IN-SONF-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonl2_UI:
   IF FILL-IN-SONL-2:SCREEN-VALUE = "Ja" THEN FILL-IN-SONL-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONL-2:SCREEN-VALUE = "Nej" THEN FILL-IN-SONL-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonm2_UI:
   IF FILL-IN-SONM-2:SCREEN-VALUE = "Ja" THEN FILL-IN-SONM-2:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONM-2:SCREEN-VALUE = "Nej" THEN FILL-IN-SONM-2:SCREEN-VALUE = "Ja".                               
END PROCEDURE.

PROCEDURE msmanf3_UI:
   IF FILL-IN-MANF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-MANF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-MANF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanl3_UI:
   IF FILL-IN-MANL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-MANL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-MANL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msmanm3_UI:
   IF FILL-IN-MANM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-MANM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-MANM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-MANM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisf3_UI:
   IF FILL-IN-TISF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TISF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TISF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstisl3_UI:
   IF FILL-IN-TISL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TISL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TISL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstism3_UI:
   IF FILL-IN-TISM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TISM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TISM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TISM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msons3f_UI:
   IF FILL-IN-ONSF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsl3_UI:
   IF FILL-IN-ONSL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msonsm3_UI:
   IF FILL-IN-ONSM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-ONSM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-ONSM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-ONSM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorf3_UI:
   IF FILL-IN-TORF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TORF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TORF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorl3_UI:
   IF FILL-IN-TORL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TORL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TORL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mstorm3_UI:
   IF FILL-IN-TORM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-TORM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-TORM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-TORM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfref3_UI:
   IF FILL-IN-FREF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-FREF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-FREF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrel3_UI:
   IF FILL-IN-FREL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-FREL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-FREL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE msfrem3_UI:
   IF FILL-IN-FREM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-FREM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-FREM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-FREM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorf3_UI:
   IF FILL-IN-LORF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-LORF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-LORF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorl3_UI:
   IF FILL-IN-LORL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-LORL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-LORL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mslorm3_UI:
   IF FILL-IN-LORM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-LORM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-LORM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-LORM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonf3_UI:
   IF FILL-IN-SONF-3:SCREEN-VALUE = "Ja" THEN FILL-IN-SONF-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONF-3:SCREEN-VALUE = "Nej" THEN FILL-IN-SONF-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonl3_UI:
   IF FILL-IN-SONL-3:SCREEN-VALUE = "Ja" THEN FILL-IN-SONL-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONL-3:SCREEN-VALUE = "Nej" THEN FILL-IN-SONL-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.
PROCEDURE mssonm3_UI:
   IF FILL-IN-SONM-3:SCREEN-VALUE = "Ja" THEN FILL-IN-SONM-3:SCREEN-VALUE = "Nej".
   ELSE IF FILL-IN-SONM-3:SCREEN-VALUE = "Nej" THEN FILL-IN-SONM-3:SCREEN-VALUE = "Ja".                               
END PROCEDURE.

PROCEDURE vcbrwkopp_UI :
   /*DEFINE VARIABLE kalknrvar AS INTEGER NO-UNDO.
   RUN selectfoc_UI (INPUT 9).
   IF AVAILABLE gatill THEN DO:
      IF gatill.TYPCHAR = "FBAONR" THEN DO:
         IF gatill.F2 = ? THEN GSTATUSNIV:READ-ONLY = TRUE.
         ELSE GSTATUSNIV:READ-ONLY = FALSE.
      END.
      ELSE GSTATUSNIV:READ-ONLY = TRUE.
      rowgatill = ROWID(gatill). 
      RUN knappar_UI (INPUT 2).
      IF gatill.TYPCHAR = "KAL" THEN DO:
         ASSIGN
         kalknrvar = INTEGER(gatill.F2)
         kalktypvar = gatill.TYP.                                    
      END.
      ELSE DO:        
         ASSIGN
         kalknrvar = ?
         kalktypvar = ?.         
      END.
      IF gatill.F2 = ?  THEN DO:
         IF gatill.TYPCHAR = "KAL" THEN DO:
            BTN_KOPPLAAONR:LABEL = "Koppla/Kopiera".
         END.
         ELSE BTN_KOPPLAAONR:LABEL = "Koppla".
      END.
      ELSE BTN_KOPPLAAONR:LABEL = "Koppla från".           
      IF gatill.TYPCHAR = "KAL" THEN DO:
         BTN_KOPPLAAONR:HIDDEN = FALSE.
      END.
      ELSE IF gatill.TYPCHAR = "FAK" THEN DO:
         BTN_KOPPLAAONR:HIDDEN = FALSE.
      END.
      ELSE IF gatill.TYPCHAR = "BER" THEN DO:
         BTN_KOPPLAAONR:HIDDEN = FALSE.
      END.
      ELSE IF gatill.TYPCHAR = "MAR" THEN DO:
         BTN_KOPPLAAONR:HIDDEN = FALSE.
      END.
      ELSE IF gatill.TYPCHAR = "FBAONR" THEN DO:
         IF gatill.F2 = ? THEN GSTATUSNIV:READ-ONLY = TRUE.
         ELSE GSTATUSNIV:READ-ONLY = FALSE.
         BTN_KOPPLAAONR:HIDDEN = FALSE.
         BTN_GATILL:HIDDEN = TRUE.       
      END.      
      ELSE IF gatill.TYPCHAR = "INTAONR" THEN DO:
         BTN_KOPPLAAONR:HIDDEN = FALSE.
         BTN_GATILL:HIDDEN = TRUE.        
      END.      
      ELSE DO:
         BTN_KOPPLAAONR:HIDDEN = TRUE.
      END.
      
      IF gatill.TYPCHAR = "FBAONR" THEN DO:
         BTN_GATILL:HIDDEN = TRUE.
      END.      
      IF gatill.TYPCHAR = "INTAONR" THEN DO:
         BTN_GATILL:HIDDEN = TRUE.
      END.      
   END.
   IF FILL-IN_AONRAVDATUM:SCREEN-VALUE NE STRING(01/01/91) THEN DO:
      ASSIGN
      FILL-IN_PAGAENDE:HIDDEN = TRUE
      BTN_KALKAR:HIDDEN = TRUE
      BTN_AKTIV:HIDDEN = TRUE
      BTN_KONVKALK:HIDDEN = TRUE           
      BTN_IMPKALK:HIDDEN = TRUE
      BTN_KOPPLAAONR:HIDDEN = TRUE.
   END.*/   
END PROCEDURE.

 PROCEDURE lrstart_UI :
   IF DECIMAL(RSTART:SCREEN-VALUE) NE respers.START THEN DO:
      ASSIGN
      respers.START = DECIMAL(RSTART:SCREEN-VALUE).            
   END.   
END PROCEDURE.

PROCEDURE lrslut_UI :
   IF DECIMAL(RSLUT:SCREEN-VALUE) NE respers.SLUT THEN DO:
      ASSIGN
      respers.SLUT = DECIMAL(RSLUT:SCREEN-VALUE).            
   END.   
END PROCEDURE.

PROCEDURE lbforare_UI :
   IF BFORARE:SCREEN-VALUE = "Ja" AND respers.BILFORARE = FALSE THEN DO:
      ASSIGN respers.BILFORARE = TRUE.            
   END.
   IF BFORARE:SCREEN-VALUE = "Nej" AND respers.BILFORARE = TRUE  THEN DO:
      ASSIGN respers.BILFORARE = FALSE.            
   END.   
END PROCEDURE.

PROCEDURE lntrakt_UI :
   IF NTRAKT:SCREEN-VALUE = "Ja" AND respers.NATTRAKT = FALSE THEN DO:
      ASSIGN respers.NATTRAKT = TRUE.            
   END.
   IF NTRAKT:SCREEN-VALUE = "Nej" AND respers.NATTRAKT = TRUE  THEN DO:
      ASSIGN respers.NATTRAKT = FALSE.            
   END.   
END PROCEDURE.

PROCEDURE louttag_UI :
   IF OUTTAG:SCREEN-VALUE NE respers.OVERTIDUTTAG THEN DO:
      IF OUTTAG:SCREEN-VALUE = "Ö" OR OUTTAG:SCREEN-VALUE = "K" OR OUTTAG:SCREEN-VALUE = "I" THEN DO:         
         ASSIGN respers.OVERTIDUTTAG = OUTTAG:SCREEN-VALUE.
      END.
      ELSE DO:
         MESSAGE "Måste vara 'Ö' eller 'K'" VIEW-AS ALERT-BOX.
         RETURN NO-APPLY.         
      END.               
   END.        
END PROCEDURE.

PROCEDURE vcbytao_UI :   
   antal_valda = BRW_RESTID:NUM-SELECTED-ROWS.   
   IF antal_valda = 0 THEN RETURN.  
   antal_raknare = 1.
   DO WHILE antal_raknare LE antal_valda:                      
      RUN fetrowid_UI IN brwproc[3] (INPUT antal_raknare,OUTPUT brwrowid).
      FIND FIRST respers WHERE ROWID(respers) = brwrowid NO-LOCK NO-ERROR.                
      ASSIGN 
      respers.AONR = FILL-IN-AONR:SCREEN-VALUE 
      respers.DELNR = INTEGER(FILL-IN-DELNR:SCREEN-VALUE).               
      antal_raknare = antal_raknare + 1.
   END. 
     
END PROCEDURE.

PROCEDURE entryola_UI : 
   IF olonantal:READ-ONLY = FALSE THEN entryoantal = TRUE.   
   RUN selectfoc_UI (INPUT 4).     
   IF AVAILABLE oklon THEN DO:      
      IF oklon.OMOMS = FALSE THEN DO:
         OMOMS:READ-ONLY = TRUE.
         entryomoms = FALSE.
      END.   
      ELSE DO:
         OMOMS:READ-ONLY = FALSE.
         entryomoms = TRUE.
      END.   
       
   END.   
END PROCEDURE.

PROCEDURE entryorm_UI : 
   IF oresmal:READ-ONLY = FALSE THEN entryoresmal = TRUE.        
END PROCEDURE.

PROCEDURE entryod_UI : 
   IF odatum:READ-ONLY = FALSE THEN entryodatum = TRUE.        
END PROCEDURE.


PROCEDURE leaveola_UI :
   IF entryoantal = TRUE THEN DO:
      IF AVAILABLE oklon THEN DO:
         IF olonantal:SCREEN-VALUE = "?" OR olonantal:SCREEN-VALUE = ? THEN DO:
            MESSAGE "Felaktigt ifyllt!"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.
         IF INTEGER(olonantal:SCREEN-VALUE) = 0 THEN DO:
            MESSAGE "Antal måste vara större än noll!"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.   
         oklon.LONTILLANTAL = DECIMAL(olonantal:SCREEN-VALUE).   
        
      END.
   END.
   entryoantal = FALSE.
   
END PROCEDURE.

PROCEDURE leaveomo_UI :
   IF entryomoms = TRUE THEN DO:
      IF AVAILABLE oklon THEN DO:
         IF omoms:SCREEN-VALUE = "?" OR omoms:SCREEN-VALUE = ? THEN DO:
            MESSAGE "Felaktigt ifyllt!"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.
         IF globforetag = "GKAL" THEN DO:   
            IF oklon.LONTILLAGG = "764"  THEN DO:    /*FILL-IN_VILART = "825"*/
               IF INTEGER(omoms:SCREEN-VALUE) = 0 THEN DO:
                  MESSAGE "Har du glömt att fylla i momsen?" VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE val2 AS LOGICAL.        
                  IF val2 = TRUE THEN DO:                  
                     RETURN NO-APPLY.
                  END.
               END.
               MESSAGE "Obs! Kvitton måste redovisas till lönekontoret före den 10:e påföljande månad " SKIP
                       "med blanketten som finns på Intranätet under Personal / Mallar / Kvittoredovisning" VIEW-AS ALERT-BOX.          
               
            END.      
            IF oklon.VILART = "MOMS" THEN DO:           
               MESSAGE "Momsen registreras tillsammans med utlägget!" VIEW-AS ALERT-BOX.
               RETURN NO-APPLY.
            END.
         END.
         IF globforetag = "ELPA" THEN DO:   
            IF oklon.VILART = "791" THEN DO:
               IF INTEGER(omoms:SCREEN-VALUE) = 0 THEN DO:
                  MESSAGE "Har du glömt att fylla i momsen?" VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE val1 AS LOGICAL.        
                  IF val1 = TRUE THEN DO:                  
                     RETURN NO-APPLY.
                  END.
                
               END.
               MESSAGE "Obs! Kvitton måste redovisas till lönekontoret före den 10:e påföljande månad " SKIP
                       "med blanketten som finns på Intranätet under Personal / Mallar / Kvittoredovisning" VIEW-AS ALERT-BOX.          
            END.
            IF oklon.VILART = "792" THEN DO:           
               MESSAGE "Momsen registreras tillsammans med utlägget!" VIEW-AS ALERT-BOX.
               RETURN NO-APPLY.
            END.
      
         END.   
         oklon.MOMS = DECIMAL(omoms:SCREEN-VALUE).          
      END.
   END.
   entryomoms = FALSE.
   
   
      
END PROCEDURE.

PROCEDURE leaveorm_UI :        
   /*IF entryoresmal = TRUE THEN DO:*/
      IF AVAILABLE oklon THEN DO:
         IF oresmal:SCREEN-VALUE = " " THEN DO:
            MESSAGE "Obligatorisk kommentar"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.            
         oklon.resmal = oresmal:SCREEN-VALUE.          
      END.
   /*END.
   entryoresmal = FALSE.*/       
END PROCEDURE.

PROCEDURE leaveod_UI :   
   IF entryodatum = TRUE THEN DO:
      IF AVAILABLE oklon THEN DO:
         IF  DATE(odatum:SCREEN-VALUE) = ? THEN DO:
            MESSAGE "Datum måste ha ett värde!"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.
         IF  DATE(odatum:SCREEN-VALUE) < bdatum OR  DATE(odatum:SCREEN-VALUE) > avdatum THEN DO:
            MESSAGE "Datum måste ligga inom resans period!"
            VIEW-AS ALERT-BOX TITLE "Meddelande".                   
            RETURN NO-APPLY.
         END.            
         oklon.datum = DATE(odatum:SCREEN-VALUE).          
      END.
   END.
   entryodatum = FALSE.   
END PROCEDURE.


PROCEDURE mola_UI :   
   APPLY "ENTRY" TO  olonantal.
END PROCEDURE.

PROCEDURE momo_UI :   
   APPLY "ENTRY" TO  omoms.
END PROCEDURE.

PROCEDURE morm_UI :   
   APPLY "ENTRY" TO  oresmal.
END PROCEDURE.

PROCEDURE mood_UI :   
   APPLY "ENTRY" TO  odatum.
END PROCEDURE.

PROCEDURE rowlbrwokost_UI :
   RUN rowlbrwokost_UI IN huvprogh.
   RUN rlbrwokost_UI.
   
END PROCEDURE.

PROCEDURE bortoklon_UI :
   
   ASSIGN
   antal_valda = BRW_OKOST:NUM-SELECTED-ROWS
   antal_raknare = 1.
   IF antal_valda = 1 THEN DO:
      MESSAGE "Vill du ta bort övrig kostnad - " + oklon.VILART + " " + oklon.LONKODTEXT 
      VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE svar.         
   END.
   ELSE DO:
      MESSAGE "Vill du ta bort markerade övriga kostnader" 
      VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE svar.         
   END.
   IF svar THEN DO:
      DO WHILE antal_raknare LE antal_valda:
         RUN fselectfoc_UI (INPUT 5).
         IF AVAILABLE oklon THEN DO:          
            DELETE oklon.
         END.                                 
         antal_raknare = antal_raknare + 1.   
      END.     
      antal_raknare = antal_raknare - 1.   
      /*RUN valrattright_UI IN brwproc[15] (INPUT antal_raknare,INPUT svar,INPUT ROWID(list_mtrl)).
      RUN setcolsortvar_UI IN brwproc[15] (INPUT " WHERE NUM = '" + STRING(kon_val.NUM) + "'").*/
      RUN openbdynspec_UI IN brwproc[4].   
      RUN lastselectdyn_UI IN brwproc[4].
      RUN title_UI IN brwproc[4].
   END.     
END PROCEDURE.

PROCEDURE andbrwlon_UI :   
   RUN selectfoc_UI (INPUT 5).
END PROCEDURE.
      
PROCEDURE andbrwokost_UI : 
   RUN selectfoc_UI (INPUT 4).
END PROCEDURE.
  
PROCEDURE rlbrwokost_UI :
         
   IF entryoantal = TRUE THEN DO:
      APPLY "LEAVE" TO olonantal.
   END.
    /*IF entryoresmal = TRUE THEN DO:*/
      APPLY "LEAVE" TO oresmal.
   /*END.*/
   IF entryomoms = TRUE THEN DO:
      APPLY "LEAVE" TO omoms.
   END.
   IF entryodatum = TRUE THEN DO:
      APPLY "LEAVE" TO odatum.
   END.
END PROCEDURE.



