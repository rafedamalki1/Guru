/*KUNDSTOR.P SUMMERING AV ANTALET KUNDER SOM INGÅR I RAPPORTEN*/
DEFINE VARIABLE distvar AS INTEGER NO-UNDO.
DEFINE TEMP-TABLE avd_temp
   FIELD AVDELNINGNR LIKE STORDISTRIKT.AVDELNINGNR   
   FIELD NAMN LIKE STORDISTRIKT.NAMN
   INDEX AVD IS PRIMARY AVDELNINGNR.

DEFINE TEMP-TABLE omr_temp
   FIELD AVDELNINGNR AS INTEGER
   FIELD DISTRIKTID AS INTEGER
   FIELD NAMN AS CHARACTER
   INDEX OMR IS PRIMARY AVDELNINGNR DISTRIKTID.
   
DEFINE TEMP-TABLE spann_temp2    
   FIELD SPANID AS INTEGER
   FIELD NAMN AS CHARACTER
   INDEX SPAN SPANID. 

DEFINE INPUT PARAMETER TABLE FOR avd_temp.
DEFINE INPUT PARAMETER valfore AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR omr_temp.
DEFINE INPUT PARAMETER alla AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR spann_temp2.
DEFINE OUTPUT PARAMETER totkunder AS INTEGER NO-UNDO. 
DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO. 

IF val = 2 THEN DO:
   FOR EACH spann_temp2:
      DELETE spann_temp2.
   END.
   OPEN QUERY sysq FOR EACH INLASTAB WHERE INLASTAB.INKOD = "D" NO-LOCK.
   GET FIRST sysq NO-LOCK.
   DO WHILE AVAILABLE(INLASTAB):
      IF INLASTAB.INKODPOSCH NE "" THEN DO:
         IF INLASTAB.INKODTYP = "1" THEN DO:
            FIND FIRST SPANNINGSNIV WHERE SPANNINGSNIV.INKODID = 
            INLASTAB.INKODID NO-LOCK NO-ERROR.
            IF AVAILABLE SPANNINGSNIV THEN DO:
               CREATE spann_temp2.
               ASSIGN
               spann_temp2.NAMN = SPANNINGSNIV.NAMN
               spann_temp2.SPANID = SPANNINGSNIV.SPANID.               
            END.
         END.         
      END.
      GET NEXT sysq NO-LOCK.         
   END.   
   CLOSE QUERY sysq.
END.
      
IF valfore = TRUE THEN DO:
   FOR EACH avd_temp USE-INDEX AVD:
      OPEN QUERY dq FOR EACH STORDISTRIKT WHERE 
      STORDISTRIKT.AVDELNINGNR = avd_temp.AVDELNINGNR AND 
      STORDISTRIKT.ARTAL = YEAR(bdatum) USE-INDEX AVDARTAL NO-LOCK.
      GET FIRST dq NO-LOCK.
      DO WHILE AVAILABLE(STORDISTRIKT):
         distvar = STORDISTRIKT.DISTRIKTID.
         RUN distrikt_UI.
         GET NEXT dq NO-LOCK.
      END.
      CLOSE QUERY dq.
   END.         
END.
ELSE DO:
   IF alla = TRUE THEN DO:         
      OPEN QUERY dq FOR EACH STORDISTRIKT WHERE           
      STORDISTRIKT.ARTAL = YEAR(bdatum) NO-LOCK.
      GET FIRST dq NO-LOCK.
      DO WHILE AVAILABLE(STORDISTRIKT):
         distvar = STORDISTRIKT.DISTRIKTID.
         RUN distrikt_UI.
         GET NEXT dq NO-LOCK.
      END.
      CLOSE QUERY dq.
   END.
   ELSE DO:
      FOR EACH omr_temp:         
         distvar = omr_temp.DISTRIKTID.
         RUN distrikt_UI.         
      END.
   END.
END.
PROCEDURE distrikt_UI:  
   DEFINE VARIABLE spannhelp AS INTEGER NO-UNDO.
   FOR EACH spann_temp2:   
     /* /*slå ihop spänning*/
      IF spannhelp NE 21 THEN spannhelp = spann_temp2.SPANID.
      */
      OPEN QUERY kq FOR EACH KUNDSTOR WHERE KUNDSTOR.DISTRIKTID = distvar AND
      KUNDSTOR.ARTAL = YEAR(bdatum) AND KUNDSTOR.SPANID = spann_temp2.SPANID NO-LOCK.
      GET FIRST kq NO-LOCK.
      DO WHILE AVAILABLE(KUNDSTOR):      
         ASSIGN      
         totkunder = totkunder + KUNDSTOR.ANTALKUNDER.
         GET NEXT kq NO-LOCK.
      END.
      CLOSE QUERY kq.
   END.
   /*
   /*slå ihop spänning*/
   IF spannhelp = 21 THEN DO:
     OPEN QUERY kq FOR EACH KUNDSTOR WHERE KUNDSTOR.DISTRIKTID = distvar AND
      KUNDSTOR.ARTAL = YEAR(bdatum) AND KUNDSTOR.SPANID = 20 NO-LOCK.
      GET FIRST kq NO-LOCK.
      DO WHILE AVAILABLE(KUNDSTOR):      
         ASSIGN      
         totkunder = totkunder + KUNDSTOR.ANTALKUNDER.
         GET NEXT kq NO-LOCK.
      END.
      CLOSE QUERY kq.   
   END.
   */
END PROCEDURE.
