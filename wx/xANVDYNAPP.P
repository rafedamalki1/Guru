/*XANVDYNAPP.P*/             
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}
&Scoped-define NEW   
&Scoped-define SHARED

DEFINE TEMP-TABLE tidut
   FIELD UT AS CHARACTER FORMAT "X(132)".

FIND FIRST FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.
DEFINE TEMP-TABLE perstemp  NO-UNDO
  FIELD EFTERNAMN AS CHARACTER 
  FIELD FORNAMN AS CHARACTER 
  FIELD PERSONALKOD AS CHARACTER
  FIELD OMRADE AS CHARACTER
  FIELD TYP AS CHARACTER
  FIELD ANVANDARE AS CHARACTER
  INDEX PERSONALKOD IS PRIMARY TYP PERSONALKOD
  INDEX OMRADE TYP OMRADE PERSONALKOD
  INDEX FORNAMN TYP FORNAMN
  INDEX EFTERNAMN TYP EFTERNAMN.  
DEFINE TEMP-TABLE tidstemp NO-UNDO LIKE perstemp.
DEFINE VARIABLE gord AS INTEGER NO-UNDO.
{FORESTYR.I}
{GURUSKEKMENY.I}
{ANVPERS.I}
{DYNHMT.I}


/* ny för multi */   /*
PROCEDURE perssekmulti_UI :
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vadtid AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vadfakt AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR perstemp.
   DEFINE OUTPUT PARAMETER TABLE FOR tidstemp.
   EMPTY TEMP-TABLE perstemp NO-ERROR. 
   EMPTY TEMP-TABLE tidstemp NO-ERROR.   
   OPEN QUERY persq FOR EACH PERSONALTAB USE-INDEX PERSONALKOD NO-LOCK.
   GET FIRST persq NO-LOCK.
   DO WHILE AVAILABLE(PERSONALTAB):
      DO TRANSACTION:
         FIND FIRST PERSEK WHERE PERSEK.ANVANDARE = vem AND
         PERSEK.PERSONALKOD = PERSONALTAB.PERSONALKOD USE-INDEX PERSEK NO-LOCK NO-ERROR.
         FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
         IF AVAILABLE PERSEK THEN DO:
            CREATE perstemp.
            ASSIGN 
            perstemp.TYP = "MULTIPERS"
            perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            perstemp.FORNAMN = PERSONALTAB.FORNAMN
            perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            perstemp.OMRADE = OMRADETAB.NAMN. 
         END.
         ELSE DO:
            CREATE tidstemp.
            ASSIGN 
            tidstemp.TYP = "MULTIPERS"
            tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            tidstemp.FORNAMN = PERSONALTAB.FORNAMN
            tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            tidstemp.OMRADE = OMRADETAB.NAMN. 
         END.
         IF vadtid = 0 THEN DO:         
            FIND FIRST TIDSEK WHERE TIDSEK.ANVANDARE = vem AND
            TIDSEK.PERSONALKOD = PERSONALTAB.PERSONALKOD USE-INDEX TIDSEK NO-LOCK NO-ERROR.
            IF AVAILABLE TIDSEK THEN DO:
               CREATE perstemp.
               ASSIGN 
               perstemp.TYP = "MULTITID"
               perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               perstemp.FORNAMN = PERSONALTAB.FORNAMN
               perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               perstemp.OMRADE = OMRADETAB.NAMN. 
            END.
            ELSE DO:
               CREATE tidstemp.
               ASSIGN 
               tidstemp.TYP = "MULTITID"
               tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               tidstemp.FORNAMN = PERSONALTAB.FORNAMN
               tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               tidstemp.OMRADE = OMRADETAB.NAMN. 
            END.           
         END.
      END.
      GET NEXT persq NO-LOCK.     
   END.

END PROCEDURE.*/

PROCEDURE perssek_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vadtid AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vadfakt AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR perstemp.
   DEFINE OUTPUT PARAMETER TABLE FOR tidstemp.
   EMPTY TEMP-TABLE perstemp NO-ERROR. 
   EMPTY TEMP-TABLE tidstemp NO-ERROR.   
   OPEN QUERY persq FOR EACH PERSONALTAB USE-INDEX PERSONALKOD NO-LOCK.
   GET FIRST persq NO-LOCK.
   DO WHILE AVAILABLE(PERSONALTAB):
      DO TRANSACTION:
         FIND FIRST PERSEK WHERE PERSEK.ANVANDARE = vem AND
         PERSEK.PERSONALKOD = PERSONALTAB.PERSONALKOD USE-INDEX PERSEK NO-LOCK NO-ERROR.
         FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = PERSONALTAB.OMRADE NO-LOCK NO-ERROR.
         FIND FIRST ANVANDARE WHERE ANVANDARE.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.
         IF AVAILABLE PERSEK THEN DO:
            CREATE perstemp.
            ASSIGN 
            perstemp.TYP = "PERS"
            perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            perstemp.FORNAMN = PERSONALTAB.FORNAMN
            perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            perstemp.OMRADE = OMRADETAB.NAMN. 
            IF AVAILABLE ANVANDARE THEN DO:
               perstemp.ANVANDARE = ANVANDARE.ANVANDARE.
            END.
            /*ny multi*/
            CREATE perstemp.
            ASSIGN 
            perstemp.TYP = "MULTIPERS"
            perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            perstemp.FORNAMN = PERSONALTAB.FORNAMN
            perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            perstemp.OMRADE = OMRADETAB.NAMN. 
            IF AVAILABLE ANVANDARE THEN DO:
               perstemp.ANVANDARE = ANVANDARE.ANVANDARE.
            END.

         END.
         ELSE DO:
            CREATE tidstemp.
            ASSIGN 
            tidstemp.TYP = "PERS"
            tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            tidstemp.FORNAMN = PERSONALTAB.FORNAMN
            tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            tidstemp.OMRADE = OMRADETAB.NAMN. 
            IF AVAILABLE ANVANDARE THEN DO:
               tidstemp.ANVANDARE = ANVANDARE.ANVANDARE.
            END.
            /*ny multi*/
            CREATE tidstemp.
            ASSIGN 
            tidstemp.TYP = "MULTIPERS"
            tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
            tidstemp.FORNAMN = PERSONALTAB.FORNAMN
            tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
            tidstemp.OMRADE = OMRADETAB.NAMN. 
            IF AVAILABLE ANVANDARE THEN DO:
               tidstemp.ANVANDARE = ANVANDARE.ANVANDARE.
            END.
         END.
         IF vadtid = 0 THEN DO:         
            FIND FIRST TIDSEK WHERE TIDSEK.ANVANDARE = vem AND
            TIDSEK.PERSONALKOD = PERSONALTAB.PERSONALKOD USE-INDEX TIDSEK NO-LOCK NO-ERROR.
            IF AVAILABLE TIDSEK THEN DO:
               CREATE perstemp.
               ASSIGN 
               perstemp.TYP = "TID"
               perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               perstemp.FORNAMN = PERSONALTAB.FORNAMN
               perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               perstemp.OMRADE = OMRADETAB.NAMN. 
               IF AVAILABLE ANVANDARE THEN DO:
                  perstemp.ANVANDARE = ANVANDARE.ANVANDARE.
               END.
               /*ny multi*/
               CREATE perstemp.
               ASSIGN 
               perstemp.TYP = "MULTITID"
               perstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               perstemp.FORNAMN = PERSONALTAB.FORNAMN
               perstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               perstemp.OMRADE = OMRADETAB.NAMN. 
               IF AVAILABLE ANVANDARE THEN DO:
                  perstemp.ANVANDARE = ANVANDARE.ANVANDARE.
               END.
            END.
            ELSE DO:
               CREATE tidstemp.
               ASSIGN 
               tidstemp.TYP = "TID"
               tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               tidstemp.FORNAMN = PERSONALTAB.FORNAMN
               tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               tidstemp.OMRADE = OMRADETAB.NAMN. 
               IF AVAILABLE ANVANDARE THEN DO:
                  tidstemp.ANVANDARE = ANVANDARE.ANVANDARE.
               END.
               /*ny multi*/
               CREATE tidstemp.
               ASSIGN 
               tidstemp.TYP = "MULTITID"
               tidstemp.PERSONALKOD = PERSONALTAB.PERSONALKOD
               tidstemp.FORNAMN = PERSONALTAB.FORNAMN
               tidstemp.EFTERNAMN = PERSONALTAB.EFTERNAMN
               tidstemp.OMRADE = OMRADETAB.NAMN. 
               IF AVAILABLE ANVANDARE THEN DO:
                  tidstemp.ANVANDARE = ANVANDARE.ANVANDARE.
               END.
            END.           
         END.
      END.
      GET NEXT persq NO-LOCK.     
   END.
   IF vadfakt >= 1 AND vadfakt < 4 THEN DO:
      OPEN QUERY omrq FOR EACH OMRADETAB WHERE OMRADETAB.ELVOMRKOD = 0 NO-LOCK.
      GET FIRST omrq NO-LOCK.
      DO WHILE AVAILABLE(OMRADETAB):      
         FIND FIRST OMRSEK WHERE OMRSEK.ANVANDARE = vem AND
         OMRSEK.OMRADE = OMRADETAB.OMRADE
         NO-LOCK NO-ERROR.
         IF AVAILABLE OMRSEK THEN DO:
            CREATE perstemp.
            ASSIGN 
            perstemp.TYP     = "OMR"
            perstemp.FORNAMN = OMRADETAB.NAMN
            perstemp.OMRADE  = OMRADETAB.OMRADE. 
         END.
         ELSE DO:
            CREATE tidstemp.
            ASSIGN 
            tidstemp.TYP     = "OMR"
            tidstemp.FORNAMN = OMRADETAB.NAMN
            tidstemp.OMRADE  = OMRADETAB.OMRADE. 
         END.         
         GET NEXT omrq NO-LOCK.     
      END.
   END.
END PROCEDURE.
PROCEDURE sparpers_UI:
   DEFINE INPUT PARAMETER signatur AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER gamanv AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR exanvandartemp.   
   DEFINE INPUT PARAMETER TABLE FOR perstemp.   
   FIND FIRST exanvandartemp NO-ERROR.
   IF gamanv = "" THEN DO TRANSACTION:
      gamanv = exanvandartemp.ANVANDARE.
      FIND FIRST ANVANDARE WHERE ANVANDARE.ANVANDARE = exanvandartemp.ANVANDARE EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE ANVANDARE THEN CREATE ANVANDARE.
      BUFFER-COPY exanvandartemp TO ANVANDARE.
   END.
   ELSE DO TRANSACTION:
      FIND FIRST ANVANDARE WHERE ANVANDARE.ANVANDARE = gamanv EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE ANVANDARE THEN CREATE ANVANDARE.
      BUFFER-COPY exanvandartemp TO ANVANDARE. 
   END.
   OPEN QUERY persq2 FOR EACH PERSEK WHERE PERSEK.ANVANDARE = ANVANDARE.ANVANDARE
   USE-INDEX PERSEK NO-LOCK.   
   GET FIRST persq2 NO-LOCK.
   DO WHILE AVAILABLE(PERSEK):
      FIND FIRST perstemp WHERE perstemp.TYP = "PERS" AND perstemp.PERSONALKOD = PERSEK.PERSONALKOD 
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE perstemp THEN DO TRANSACTION:
         GET CURRENT persq2 EXCLUSIVE-LOCK.
         DELETE PERSEK.            
      END.   
      GET NEXT persq2 NO-LOCK.
   END.     
   CLOSE QUERY persq2.
   FOR EACH perstemp WHERE perstemp.TYP = "PERS": /* användaren ändrar på ett antal personal */
      DO TRANSACTION:
         FIND FIRST PERSEK WHERE PERSEK.ANVANDARE = exanvandartemp.ANVANDARE AND 
         PERSEK.PERSONALKOD = perstemp.PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE PERSEK THEN CREATE PERSEK.
         ASSIGN
         PERSEK.ANVANDARE = exanvandartemp.ANVANDARE        /*ändrare */
         PERSEK.PERSONALKOD = perstemp.PERSONALKOD          /*ändrad */
         PERSEK.PANDRA = TRUE.         
      END.     
      DELETE perstemp.
   END.
   FOR EACH perstemp WHERE perstemp.TYP = "MULTIPERS": /* ny MULTI PERS. ett antal personal ändrar på en användare */
      DEFINE VARIABLE anvandrar AS CHARACTER NO-UNDO.
      DEFINE VARIABLE persandras AS CHARACTER NO-UNDO.
      DO TRANSACTION:
         /* användare på den som ska ÄNDRA */
         FIND FIRST ANVANDARE WHERE ANVANDARE.ANVANDARE = perstemp.ANVANDARE EXCLUSIVE-LOCK NO-ERROR.
         anvandrar = ANVANDARE.ANVANDARE.
         /*personalkod för den som ska ÄNDRAS PÅ skickas med som input parameter ?*/
         
         /*FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = sign.
         persandras = PERSONALTAB.PERSONALKOD.
           */
         FIND FIRST PERSEK WHERE PERSEK.ANVANDARE = anvandrar AND PERSEK.PERSONALKOD = signatur EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE PERSEK THEN CREATE PERSEK.
         ASSIGN
         PERSEK.ANVANDARE = anvandrar
         PERSEK.PERSONALKOD = signatur
         PERSEK.PANDRA = TRUE.         
      END.
      DELETE perstemp.
   END.

   RELEASE PERSEK NO-ERROR.
   OPEN QUERY persq3 FOR EACH TIDSEK WHERE TIDSEK.ANVANDARE = ANVANDARE.ANVANDARE
   USE-INDEX TIDSEK NO-LOCK.   
   GET FIRST persq3 NO-LOCK.
   DO WHILE AVAILABLE(TIDSEK):
      FIND FIRST perstemp WHERE perstemp.TYP = "TID" AND perstemp.PERSONALKOD = TIDSEK.PERSONALKOD 
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE perstemp THEN DO TRANSACTION:
         GET CURRENT persq3 EXCLUSIVE-LOCK.
         DELETE TIDSEK.            
      END.   
      GET NEXT persq3 NO-LOCK.
   END.     
   CLOSE QUERY persq3.
   FOR EACH perstemp WHERE perstemp.TYP = "TID":
      DO TRANSACTION:
         FIND FIRST TIDSEK WHERE TIDSEK.ANVANDARE = exanvandartemp.ANVANDARE AND 
         TIDSEK.PERSONALKOD = perstemp.PERSONALKOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE TIDSEK THEN CREATE TIDSEK.
         ASSIGN
         TIDSEK.ANVANDARE = exanvandartemp.ANVANDARE         
         TIDSEK.PERSONALKOD = perstemp.PERSONALKOD
         TIDSEK.PANDRA = TRUE.   
      END.     
      DELETE perstemp.
   END.
   RELEASE TIDSEK NO-ERROR.
   OPEN QUERY omrk FOR EACH OMRSEK WHERE OMRSEK.ANVANDARE = ANVANDARE.ANVANDARE
   NO-LOCK.   
   GET FIRST omrk NO-LOCK.
   DO WHILE AVAILABLE(OMRSEK):
      FIND FIRST perstemp WHERE perstemp.TYP = "OMR" AND perstemp.OMRADE = OMRSEK.OMRADE 
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE perstemp THEN DO TRANSACTION:
         GET CURRENT omrk EXCLUSIVE-LOCK.
         DELETE OMRSEK.            
      END.   
      GET NEXT omrk NO-LOCK.
   END.     
   CLOSE QUERY omrk.
   FOR EACH perstemp WHERE perstemp.TYP = "OMR":
      DO TRANSACTION:
         FIND FIRST OMRSEK WHERE OMRSEK.ANVANDARE = exanvandartemp.ANVANDARE AND 
         OMRSEK.OMRADE = perstemp.OMRADE EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE OMRSEK THEN CREATE OMRSEK.
         ASSIGN
         OMRSEK.ANVANDARE = exanvandartemp.ANVANDARE         
         OMRSEK.OMRADE = perstemp.OMRADE
         OMRSEK.PANDRA = TRUE.   
      END.     
      DELETE perstemp.
   END.
   RELEASE OMRSEK NO-ERROR.
   FIND CURRENT ANVANDARE NO-LOCK NO-ERROR.
   IF gamanv NE ANVANDARE.ANVANDARE THEN DO:    
      RUN BYTANV.P 
      (INPUT gamanv, INPUT ANVANDARE.ANVANDARE).               
   END.   
   RELEASE ANVANDARE NO-ERROR.
END PROCEDURE.
PROCEDURE allxguru_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR xgurutemp.   
   EMPTY TEMP-TABLE xgurutemp NO-ERROR. 
   FIND FIRST XGURU WHERE XGURU.MENYVART = 'GURU' AND XGURU.AV-LEVEL NE 0 NO-LOCK NO-ERROR.   
   gord = XGURU.ORDNING.
   ASSIGN
   nytab      = "xgurutemp"
   orginaltab = "XGURU".
   kommandoquery = "FOR EACH " +  orginaltab + " WHERE XGURU.MENYVART = 'GURU' AND XGURU.AV-LEVEL NE 0 AND XGURU.ORDNING = " + STRING(gord) + " NO-LOCK".   
      /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE xgurutemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.
PROCEDURE allapers_UI:
   DEFINE OUTPUT PARAMETER TABLE FOR personaltemp.   
   EMPTY TEMP-TABLE personaltemp NO-ERROR.    
   ASSIGN
   nytab      = "personaltemp"
   orginaltab = "PERSONALTAB".
   kommandoquery = "FOR EACH " +  orginaltab + " NO-LOCK".   
      /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE personaltemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.
PROCEDURE hamta_UI:
   DEFINE INPUT PARAMETER ejnoll AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR anvandartemp.   
   EMPTY TEMP-TABLE anvandartemp NO-ERROR.    
   ASSIGN
   nytab      = "anvandartemp"
   orginaltab = "ANVANDARE"
   kommandoquery = " ANVANDARE.AV-LEVEL NE 0".
   IF ejnoll = TRUE THEN DO:
      kommandoquery = "FOR EACH " +  orginaltab + " WHERE " + kommandoquery + " NO-LOCK".   
   END.
   ELSE kommandoquery = "FOR EACH " +  orginaltab + " NO-LOCK".   
      /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE anvandartemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.

PROCEDURE kollanvpkod_UI :
   DEFINE INPUT PARAMETER pkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER ejnoll AS LOGICAL NO-UNDO.
   ejnoll = FALSE.
   FIND FIRST ANVANDARE WHERE ANVANDARE.PERSONALKOD = pkod NO-LOCK NO-ERROR.
   IF AVAILABLE ANVANDARE THEN DO:
      IF ANVANDARE.ANVANDARE = vem THEN DO:
         FIND NEXT ANVANDARE WHERE ANVANDARE.PERSONALKOD = pkod NO-LOCK NO-ERROR.
         IF AVAILABLE ANVANDARE THEN ejnoll = TRUE.
      END.
      ELSE ejnoll = TRUE.
   END.
END PROCEDURE.
PROCEDURE hamtaenanv_UI:
   DEFINE INPUT PARAMETER pkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER ejnoll AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR anvandartemp.   
   vem = "".
   EMPTY TEMP-TABLE anvandartemp NO-ERROR.    
   ASSIGN
   nytab      = "anvandartemp"
   orginaltab = "ANVANDARE".
   kommandoquery = "ANVANDARE.PERSONALKOD = " + '"' + pkod + '"'.
   IF ejnoll = TRUE THEN DO:
      RUN and_UI.
      kommandoquery = kommandoquery + " ANVANDARE.AV-LEVEL NE 0".
      kommandoquery = "FOR EACH " +  orginaltab + " WHERE " + kommandoquery + " NO-LOCK".   
   END.
   ELSE kommandoquery = "FOR EACH " +  orginaltab + " NO-LOCK".   
      /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE anvandartemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
   FIND FIRST anvandartemp WHERE anvandartemp.PERSONALKOD = pkod NO-LOCK NO-ERROR.
   IF AVAILABLE anvandartemp THEN vem = anvandartemp.ANVANDARE.
END PROCEDURE.
PROCEDURE hamtaen_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER ejnoll AS LOGICAL NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR anvandartemp.   
   EMPTY TEMP-TABLE anvandartemp NO-ERROR.    
   ASSIGN
   nytab      = "anvandartemp"
   orginaltab = "ANVANDARE".
   kommandoquery = "ANVANDARE.ANVANDARE = " + '"' + vem + '"'.
   IF ejnoll = TRUE THEN DO:
      RUN and_UI.
      kommandoquery = kommandoquery + " ANVANDARE.AV-LEVEL NE 0".
      kommandoquery = "FOR EACH " +  orginaltab + " WHERE " + kommandoquery + " NO-LOCK".   
   END.
   ELSE kommandoquery = "FOR EACH " +  orginaltab + " NO-LOCK".   
      /*BUGG 9.1c FIX*/
   ASSIGN extratemptabh = TEMP-TABLE anvandartemp:DEFAULT-BUFFER-HANDLE.
   RUN dynquery_UI (INPUT FALSE,INPUT FALSE).   
   RUN objdelete_UI.
END PROCEDURE.
PROCEDURE bort_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   FIND FIRST ANVANDARE WHERE ANVANDARE.ANVANDARE = vem NO-LOCK NO-ERROR.
   DEFINE QUERY persekq FOR PERSEK.
   OPEN QUERY persekq FOR EACH PERSEK WHERE PERSEK.ANVANDARE = ANVANDARE.ANVANDARE
   USE-INDEX PERSEK NO-LOCK. 
   DO TRANSACTION:       
      GET FIRST persekq EXCLUSIVE-LOCK.
      IF AVAILABLE PERSEK THEN DELETE PERSEK.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT persekq EXCLUSIVE-LOCK.
         IF AVAILABLE PERSEK THEN DELETE PERSEK.    
         ELSE LEAVE.      
      END.         
   END.   
   DEFINE QUERY tidsekq FOR TIDSEK.
   OPEN QUERY tidsekq FOR EACH TIDSEK WHERE TIDSEK.ANVANDARE = ANVANDARE.ANVANDARE
   USE-INDEX TIDSEK NO-LOCK. 
   DO TRANSACTION:       
      GET FIRST tidsekq EXCLUSIVE-LOCK.
      IF AVAILABLE TIDSEK THEN DELETE TIDSEK.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT tidsekq EXCLUSIVE-LOCK.         
         IF AVAILABLE TIDSEK THEN DELETE TIDSEK.    
         ELSE LEAVE.      
      END.         
   END.
   OPEN QUERY omrsekq FOR EACH OMRSEK WHERE OMRSEK.ANVANDARE = ANVANDARE.ANVANDARE
   NO-LOCK. 
   DO TRANSACTION:       
      GET FIRST omrsekq EXCLUSIVE-LOCK.
      IF AVAILABLE OMRSEK THEN DELETE OMRSEK.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT omrsekq EXCLUSIVE-LOCK.         
         IF AVAILABLE OMRSEK THEN DELETE OMRSEK.    
         ELSE LEAVE.      
      END.         
   END.
   OPEN QUERY bsekq FOR EACH BOLAGSEK WHERE BOLAGSEK.ANVANDARE = ANVANDARE.ANVANDARE
   NO-LOCK. 
   DO TRANSACTION:       
      GET FIRST bsekq EXCLUSIVE-LOCK.
      IF AVAILABLE BOLAGSEK THEN DELETE BOLAGSEK.    
   END.
   REPEAT:  
      DO TRANSACTION:
         GET NEXT bsekq EXCLUSIVE-LOCK.         
         IF AVAILABLE BOLAGSEK THEN DELETE BOLAGSEK.    
         ELSE LEAVE.      
      END.         
   END.    
   OPEN QUERY sanvq FOR EACH ANVAOTAB WHERE ANVAOTAB.ANVANDARE BEGINS ANVANDARE.ANVANDARE NO-LOCK.
   GET FIRST sanvq NO-LOCK.
   DO WHILE AVAILABLE(ANVAOTAB): 
      DO TRANSACTION:
         GET CURRENT sanvq EXCLUSIVE-LOCK.
         DELETE ANVAOTAB.
      END.      
      GET NEXT sanvq NO-LOCK.
   END.
   DO TRANSACTION:
      FIND CURRENT ANVANDARE EXCLUSIVE-LOCK NO-ERROR.
      DELETE ANVANDARE.      
   END.
   
END PROCEDURE.
PROCEDURE visaalla_UI:
   DEFINE INPUT PARAMETER vem AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR tidut.   
   EMPTY TEMP-TABLE tidut NO-ERROR.    
   CREATE tidut. 
   SUBSTRING(tidut.UT,60) = STRING(TODAY) + " " + STRING(TIME,"HH:MM").
   CREATE tidut.
   CREATE tidut.                           
   tidut.UT = "VISNING AV ANVÄNDARE I GURU".
   CREATE tidut.
   CREATE tidut.                           
   IF vem NE ? THEN DO:
      FIND ANVANDARE WHERE ANVANDARE.ANVANDARE = vem NO-LOCK NO-ERROR.        
      CREATE tidut.        
      SUBSTRING(tidut.UT,1) = "ANVÄNDARE              :".
      SUBSTRING(tidut.UT,26) = ANVANDARE.ANVANDARE.  
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "ANVÄNDAR NAMN          :".
      SUBSTRING(tidut.UT,26) = ANVANDARE.AV-NAMN.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "ENHET/SIGN             :".
      SUBSTRING(tidut.UT,26) = ANVANDARE.PERSONALKOD.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "VISA ALLA PERSONER     :".
      SUBSTRING(tidut.UT,26) = STRING(ANVANDARE.ALLPERS,"Ja/Nej").
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "VISA ALLA " + CAPS(Guru.Konstanter:gaok) + " :".
      SUBSTRING(tidut.UT,26) = STRING(ANVANDARE.ALLAONR,"Ja/Nej"). 
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "ANVÄNDARNIVÅ           :".
      SUBSTRING(tidut.UT,26) = STRING(ANVANDARE.AV-LEVEL).
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "LÖSENORD               :".
      SUBSTRING(tidut.UT,26) = ANVANDARE.AV-LOSEN.
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "FÖNSTERSTORLEK (HÖJD) :".
      IF ANVANDARE.SIDS < 682 THEN SUBSTRING(tidut.UT,26) = "682".
      ELSE SUBSTRING(tidut.UT,26) = STRING(ANVANDARE.SIDS).
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "FÖNSTERSTORLEK (BREDD) :".
      IF ANVANDARE.SIDL < 682 THEN SUBSTRING(tidut.UT,26) = "1000".
      ELSE SUBSTRING(tidut.UT,26) = STRING(ANVANDARE.SIDL).      
      CREATE tidut.
      CREATE tidut.
      CREATE tidut.
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "SEKRETESS FÖR PERSONALREGISTRERING".
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "ENHET/SIGN"
      SUBSTRING(tidut.UT,12) = "FÖRNAMN"
      SUBSTRING(tidut.UT,28) = "EFTERNAMN"
      SUBSTRING(tidut.UT,54) = "ÄNDRA PÅ".
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = 
      "==========.===============.=========================.========".
      OPEN QUERY psekq FOR EACH PERSEK WHERE PERSEK.ANVANDARE = ANVANDARE.ANVANDARE NO-LOCK,
      EACH PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = PERSEK.PERSONALKOD
      NO-LOCK.
      GET FIRST psekq NO-LOCK.
      DO WHILE AVAILABLE(PERSEK):
         CREATE tidut.
         ASSIGN                   
         SUBSTRING(tidut.UT,1) = PERSEK.PERSONALKOD
         SUBSTRING(tidut.UT,12) = PERSONALTAB.FORNAMN
         SUBSTRING(tidut.UT,28) = PERSONALTAB.EFTERNAMN
         SUBSTRING(tidut.UT,54) = STRING(PERSEK.PANDRA,"Ja/Nej").                       
         GET NEXT psekq NO-LOCK.
      END.
      CREATE tidut.
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "SEKRETESS FÖR TIDREGISTRERING".
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "ENHET/SIGN"
      SUBSTRING(tidut.UT,12) = "FÖRNAMN"
      SUBSTRING(tidut.UT,28) = "EFTERNAMN"
      SUBSTRING(tidut.UT,54) = "ÄNDRA PÅ".
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = 
      "==========.===============.=========================.========".
      OPEN QUERY tsekq FOR EACH TIDSEK WHERE TIDSEK.ANVANDARE = ANVANDARE.ANVANDARE NO-LOCK,
      EACH PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = TIDSEK.PERSONALKOD
      NO-LOCK.
      GET FIRST tsekq NO-LOCK.
      DO WHILE AVAILABLE(TIDSEK):
         CREATE tidut.
         ASSIGN                   
         SUBSTRING(tidut.UT,1) = TIDSEK.PERSONALKOD
         SUBSTRING(tidut.UT,12) = PERSONALTAB.FORNAMN
         SUBSTRING(tidut.UT,28) = PERSONALTAB.EFTERNAMN
         SUBSTRING(tidut.UT,54) = STRING(TIDSEK.PANDRA,"Ja/Nej").                       
         GET NEXT tsekq NO-LOCK.
      END.
      CREATE tidut.
      CREATE tidut.
      IF varforetypval[3] >= 1 AND varforetypval[3] < 4 THEN DO:
         ASSIGN                   
         SUBSTRING(tidut.UT,1) = "SEKRETESS FÖR FAKTUREING".
         CREATE tidut.
         ASSIGN                   
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrk)
         SUBSTRING(tidut.UT,8) = "BENÄMNING"      
         SUBSTRING(tidut.UT,25) = "FAKTURERA".                                 
         CREATE tidut.
         ASSIGN                   
         SUBSTRING(tidut.UT,1) =                   
         "======.================.=========".
         OPEN QUERY osekq FOR EACH OMRSEK WHERE 
         OMRSEK.ANVANDARE = ANVANDARE.ANVANDARE NO-LOCK,
         EACH OMRADETAB WHERE OMRADETAB.OMRADE = OMRSEK.OMRADE
         NO-LOCK.
         GET FIRST osekq NO-LOCK.
         DO WHILE AVAILABLE(OMRSEK):
            CREATE tidut.
            ASSIGN                   
            SUBSTRING(tidut.UT,1) = OMRSEK.OMRADE
            SUBSTRING(tidut.UT,8) = OMRADETAB.NAMN
            SUBSTRING(tidut.UT,25) = STRING(OMRSEK.PANDRA,"Ja/Nej").                       
            GET NEXT osekq NO-LOCK.
         END.        
      END.
   END.
   ELSE DO:
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) = "ANVÄNDAR REGISTER".
      CREATE tidut.
      CREATE tidut.
      ASSIGN                    
      SUBSTRING(tidut.UT,1) = "ANVÄNDARE"
      SUBSTRING(tidut.UT,14) = "ANVÄNDAR" 
      SUBSTRING(tidut.UT,23) = "NAMN"
      SUBSTRING(tidut.UT,64) = "ENHET/"     
      SUBSTRING(tidut.UT,71) = "FÖNSTERSTORLEK".    
      CREATE tidut.
      ASSIGN                         
      SUBSTRING(tidut.UT,14) = "NIVÅ"      
      SUBSTRING(tidut.UT,64) = "SIGN"     
      SUBSTRING(tidut.UT,71) = "HÖJD".
      SUBSTRING(tidut.UT,80) = "BREDD".      
      CREATE tidut.
      ASSIGN                   
      SUBSTRING(tidut.UT,1) =         
      "============.========.========================================.======.========.========".
      OPEN QUERY anvq FOR EACH ANVANDARE WHERE ANVANDARE.AV-LEVEL NE 0
      USE-INDEX ANDV NO-LOCK. 
      GET FIRST anvq NO-LOCK.
      DO WHILE AVAILABLE(ANVANDARE):
         CREATE tidut.               
         ASSIGN                    
         SUBSTRING(tidut.UT,1) = ANVANDARE.ANVANDARE
         SUBSTRING(tidut.UT,14) = STRING(ANVANDARE.AV-LEVEL) 
         SUBSTRING(tidut.UT,23) = ANVANDARE.AV-NAMN
         SUBSTRING(tidut.UT,64) = ANVANDARE.PERSONALKOD.
         IF ANVANDARE.SIDS < 682 THEN SUBSTRING(tidut.UT,71) = "682".
         ELSE SUBSTRING(tidut.UT,71) = STRING(ANVANDARE.SIDS).
         IF ANVANDARE.SIDL < 1000 THEN SUBSTRING(tidut.UT,80) = "1000".
         ELSE SUBSTRING(tidut.UT,80) = STRING(ANVANDARE.SIDL).
         GET NEXT anvq NO-LOCK.
      END.
   END.
END PROCEDURE.

