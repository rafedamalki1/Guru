/*BERLULEEXELIN.P*/
{dppowtemp.I}
&Scoped-define NEW   
{GLOBVAR2DEL1.I}


   
DEFINE VARIABLE antvar AS INTEGER NO-UNDO.
DEFINE VARIABLE utskriv AS LOGICAL NO-UNDO.
DEFINE VARIABLE artecken AS LOGICAL NO-UNDO.
DEFINE VARIABLE rakn AS INTEGER NO-UNDO.
DEFINE VARIABLE idfri AS CHARACTER NO-UNDO.
DEFINE VARIABLE rnr AS INTEGER NO-UNDO.
{EXECLIN2.I}
DEFINE INPUT PARAMETER filnamn AS CHARACTER NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR dppowtemp.

EMPTY TEMP-TABLE dppowtemp NO-ERROR. 
{AMERICANEUROPEAN.I}
IF Guru.Konstanter:globforetag = "LULE"  THEN DO:
   RUN startin_UI.
   rakn = 0.
   idfri = "".
   FOR EACH dppowtemp  USE-INDEX RADNR:
      IF idfri NE dppowtemp.FRIID OR dppowtemp.FRIID = ""  THEN DO:
         rakn = rakn + 1.   
         idfri = dppowtemp.FRIID.
      END.
      dppowtemp.BYGGID = rakn.                      
   END.
END.
ELSE IF Guru.Konstanter:globforetag = "GRAN" THEN DO:
   
   RUN startingran_UI.
END.   
   
      
{EUROPEANAMERICAN.I}
 

PROCEDURE startin_UI:   
   ASSIGN
   startc = "A"
   slutc = "H"
   iRad = 1.    
   rnr = 0.
   RUN readexcelstart_UI (INPUT filnamn).   
   DO WHILE iRad <= iRadslut:
      iRad = iRad + 1.
      RUN readexcel_UI.
      IF allacolumtext[4] NE "" THEN DO:
         RUN goromDec_UI(INPUT-OUTPUT allacolumtext[1]).
         allacolumtext[1] = REPLACE(allacolumtext[1]," ","") NO-ERROR.    /*ta bort ev tusenavgränsare*/                                                               
         allacolumtext[4] = REPLACE(allacolumtext[4]," ","") NO-ERROR.                          
         allacolumtext[4] = REPLACE(allacolumtext[4],CHR(9),"")NO-ERROR.                        
         RUN isSiffraBokstav_UI (INPUT SUBSTRING(allacolumtext[4],1,1),OUTPUT artecken). 
         IF artecken = FALSE THEN allacolumtext[4] = SUBSTRING(allacolumtext[4],2).                                            
         IF SUBSTRING(allacolumtext[4],1,1) = "E" THEN allacolumtext[4] = SUBSTRING(allacolumtext[4],2).                                     
         rnr = rnr + 1.      
         CREATE dppowtemp.                                        
         antvar = INTEGER(allacolumtext[1]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.UPPLAG = 1.
         ELSE dppowtemp.UPPLAG = antvar .
         dppowtemp.FRIID = allacolumtext[2].
         dppowtemp.PROJ = allacolumtext[3].
         dppowtemp.ENR = allacolumtext[4].
         dppowtemp.BENAMNING = allacolumtext[5].
         antvar = INTEGER(allacolumtext[6]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.ANTAL = 1.
         ELSE dppowtemp.ANTAL = antvar .
         dppowtemp.ENHET = allacolumtext[7].
         dppowtemp.PRIS = DECIMAL(allacolumtext[8]).
         dppowtemp.RADNR = rnr.
      END.   
   END.        
   RUN slutreadexcel_UI.           
END PROCEDURE.

PROCEDURE startingran_UI:
   ASSIGN
   startc = "A"
   slutc = "h"
   iRad = 1.    
   rnr = 0.
   RUN readexcelstart_UI (INPUT filnamn).   
   DO WHILE iRad <= iRadslut:
      iRad = iRad + 1.
      RUN readexcel_UI.
      IF allacolumtext[1] NE "" THEN DO:
         RUN goromDec_UI(INPUT-OUTPUT allacolumtext[1]).
         /*allacolumtext[1] = REPLACE(allacolumtext[1]," ","") NO-ERROR.    /*ta bort ev tusenavgränsare*/*/                                                               
         allacolumtext[1] = REPLACE(allacolumtext[1]," ","") NO-ERROR.                          
         allacolumtext[1] = REPLACE(allacolumtext[1],CHR(9),"")NO-ERROR.                        
         RUN isSiffraBokstav_UI (INPUT SUBSTRING(allacolumtext[1],1,1),OUTPUT artecken). 
         IF artecken = FALSE THEN allacolumtext[1] = SUBSTRING(allacolumtext[1],2).                                            
         IF SUBSTRING(allacolumtext[1],1,1) = "E" THEN allacolumtext[1] = SUBSTRING(allacolumtext[1],2).                                     
         rnr = rnr + 1.      
         CREATE dppowtemp.
         dppowtemp.UPPLAG = ?.                                        
         antvar = INTEGER(allacolumtext[8]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.UPPLAG = 1.
         ELSE IF antvar = 0 THEN.
         ELSE dppowtemp.UPPLAG = antvar .
         dppowtemp.FRIID = allacolumtext[6].
         /*dppowtemp.PROJ = allacolumtext[6].*/
         
                 
         dppowtemp.ENR = allacolumtext[1].
         dppowtemp.BENAMNING = allacolumtext[2].
         dppowtemp.LEVKOD = allacolumtext[7].
         antvar = INTEGER(allacolumtext[4]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.ANTAL = 1.
         ELSE dppowtemp.ANTAL = antvar .
         dppowtemp.ENHET = allacolumtext[3].
         antvar = INTEGER(allacolumtext[5]) NO-ERROR.
         dppowtemp.BYGGID = antvar.
         /*dppowtemp.PRIS = DECIMAL(allacolumtext[8]).*/
         dppowtemp.RADNR = rnr.
      END.   
   END.        
   RUN slutreadexcel_UI.
   
      
   /*ASSIGN
   startc = "A"
   slutc = "CJ"
   iRad = 14.    
   rnr = 0.
   RUN readexcelstart_UI (INPUT filnamn).   
   DO WHILE iRad <= iRadslut:
      iRad = iRad + 1.
      RUN readexcel_UI.
      IF allacolumtext[16] NE "" THEN DO:
         RUN goromDec_UI(INPUT-OUTPUT allacolumtext[1]).
         /*allacolumtext[1] = REPLACE(allacolumtext[1]," ","") NO-ERROR.    /*ta bort ev tusenavgränsare*/*/                                                               
         allacolumtext[16] = REPLACE(allacolumtext[16]," ","") NO-ERROR.                          
         allacolumtext[16] = REPLACE(allacolumtext[16],CHR(9),"")NO-ERROR.                        
         RUN isSiffraBokstav_UI (INPUT SUBSTRING(allacolumtext[16],1,1),OUTPUT artecken). 
         IF artecken = FALSE THEN allacolumtext[16] = SUBSTRING(allacolumtext[16],2).                                            
         IF SUBSTRING(allacolumtext[16],1,1) = "E" THEN allacolumtext[16] = SUBSTRING(allacolumtext[16],2).                                     
         rnr = rnr + 1.      
         CREATE dppowtemp.                                        
         /*antvar = INTEGER(allacolumtext[1]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.UPPLAG = 1.
         ELSE dppowtemp.UPPLAG = antvar .
         dppowtemp.FRIID = allacolumtext[2].
         dppowtemp.PROJ = allacolumtext[3].*/
         dppowtemp.UPPLAG = ?.
         dppowtemp.ENR = allacolumtext[16].
         dppowtemp.BENAMNING = allacolumtext[27].
         antvar = INTEGER(allacolumtext[84]) NO-ERROR.
         IF antvar < 1 THEN dppowtemp.ANTAL = 1.
         ELSE dppowtemp.ANTAL = antvar .
         dppowtemp.ENHET = allacolumtext[78].
         antvar = INTEGER(allacolumtext[88]) NO-ERROR.
         dppowtemp.BYGGID = antvar.
         /*dppowtemp.PRIS = DECIMAL(allacolumtext[8]).*/
         dppowtemp.RADNR = rnr.
      END.   
   END.        
   RUN slutreadexcel_UI.*/           
END PROCEDURE.


PROCEDURE isSiffraBokstav_UI :
   DEFINE INPUT PARAMETER varde AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER artecken AS LOGICAL NO-UNDO.
   DEFINE VARIABLE ascivarde AS INTEGER NO-UNDO.   
   ascivarde = ASC(varde).
   /*siffror*/
   IF ascivarde >= 48 AND ascivarde <= 57 THEN artecken = TRUE.   
   /*stora bokstäver*/
   ELSE IF ascivarde >= 65 AND ascivarde <= 90 THEN artecken = TRUE.   
   /*små bokstäver*/
   ELSE IF ascivarde >= 97 AND ascivarde <= 122 THEN artecken = TRUE.   
   /*Å Ä Ö å ä ö*/
   ELSE IF ascivarde = 197 OR ascivarde = 196 OR ascivarde = 214 OR ascivarde = 229 OR 
      ascivarde = 228 OR ascivarde = 246 THEN artecken = TRUE.
   ELSE artecken = FALSE.
END PROCEDURE.

PROCEDURE goromDec_UI :
   DEFINE INPUT-OUTPUT PARAMETER varde AS CHARACTER NO-UNDO.
   DEFINE VARIABLE ascivarde AS INTEGER NO-UNDO.
   DEFINE VARIABLE artecken AS LOGICAL NO-UNDO.
   DEFINE VARIABLE vardearray AS CHARACTER EXTENT 50 NO-UNDO.
   DEFINE VARIABLE langd AS INTEGER NO-UNDO.
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   i = 1.
   langd = LENGTH(varde).
   DO WHILE i <= (langd):
      vardearray[i] = SUBSTRING(varde,1, 1).
      varde = SUBSTRING(varde,2).
      i = i + 1.
   END.
   varde = "".
   i = 1.
   DO WHILE i <= langd:
      ascivarde = ASC(vardearray[i]).
      /*siffror*/
      IF ascivarde >= 48 AND ascivarde <= 57 THEN artecken = TRUE.
      ELSE artecken = FALSE.   
      IF artecken = FALSE THEN DO:         
      END.
      ELSE varde = varde + vardearray[i].      
      IF vardearray[i] = "," THEN DO:
         vardearray[i] = ".".
         varde = varde + vardearray[i].
      END.
      IF vardearray[i] = "." THEN DO:
         varde = varde + vardearray[i].
      END.          
      i = i + 1.      
  END.      
END PROCEDURE.

