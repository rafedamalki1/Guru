/*MOMSBERKA.P*/
/* ************************  Function Implementations ***************** */

FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.
END FUNCTION.
FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 
END FUNCTION.
FUNCTION runda RETURNS DECIMAL
  ( INPUT varedin AS DECIMAL) :
  RETURN ROUND(varedin,0).   /* Function return value. */
END FUNCTION.
&Scoped-define NEW NEW                          
{FAKTTEMP.I}
DEFINE INPUT PARAMETER infakplannr           AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER fdelnrvar             AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER vartyp AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TOG_MOMS AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER skarpvar LIKE FAKTSKARP.LOPNR NO-UNDO.
DEFINE INPUT PARAMETER tidfaktvar AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER tidmomsvar AS DECIMAL NO-UNDO.
DEFINE INPUT PARAMETER rundavar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR kosttemp.
DEFINE INPUT PARAMETER TABLE FOR sumtidtemp.
DEFINE INPUT PARAMETER TABLE FOR gfaktemp.
DEFINE OUTPUT PARAMETER TABLE FOR kolltabeltemp.  


DEFINE VARIABLE nymomstotal AS DECIMAL NO-UNDO.
DEFINE VARIABLE nyfakttotal AS DECIMAL NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE faoff AS DECIMAL NO-UNDO.
DEFINE VARIABLE delfakt AS DECIMAL NO-UNDO.
{FAKTFRIT.I}
{EXTRADATA.I}  
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
DEFINE VARIABLE intaktvarhj  AS LOGICAL NO-UNDO.
DEFINE VARIABLE kundvarhj    AS LOGICAL NO-UNDO.
DEFINE VARIABLE motpartvarhj AS LOGICAL NO-UNDO.
RUN EXTRADATAHMT.P PERSISTENT SET edataapph.

FIND FIRST FAKTPLAN WHERE FAKTPLAN.FAKTNR = infakplannr NO-LOCK NO-ERROR.
FIND FIRST FAKTKRED WHERE FAKTKRED.FAKTNR = infakplannr AND FAKTKRED.FDELNR = fdelnrvar  NO-LOCK NO-ERROR.
FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR 
USE-INDEX FAKTREGLER NO-LOCK NO-ERROR.
OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
USE-INDEX FAKTA NO-LOCK.
OPEN QUERY BRW_PLAN FOR EACH FAKTSTARTKRED WHERE 
FAKTSTARTKRED.FAKTNR = FAKTPLAN.FAKTNR AND
FAKTSTARTKRED.FDELNR = FAKTKRED.FDELNR NO-LOCK.            
FIND FIRST FORETAG USE-INDEX FORETAG NO-LOCK NO-ERROR.
Guru.Konstanter:globforetag = FORETAG.FORETAG.
RUN moms_UI.
IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.        
edataapph = ?.
PROCEDURE moms_UI :
   ASSIGN
   nymomstotal = 0
   nyfakttotal = 0.
   RUN kontober_UI.           
   DO TRANSACTION:
      FIND FIRST FAKTINTAKTKONTKRED WHERE 
      FAKTINTAKTKONTKRED.FAKTNR = FAKTKRED.FAKTNR AND  
      FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTINTAKTKONTKRED.VKREDIT = 0 EXCLUSIVE-LOCK NO-ERROR.      
      IF AVAILABLE FAKTINTAKTKONTKRED THEN DO:
         FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP /*- FAKTKRED.AVGAR*/.             
      END.            
   END.
   DO TRANSACTION:
      FIND FIRST FAKTKUNDKONTOKRED WHERE 
      FAKTKUNDKONTOKRED.FAKTNR = FAKTKRED.FAKTNR AND  
      FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTKUNDKONTOKRED.VKREDIT = 0 EXCLUSIVE-LOCK NO-ERROR.      
      IF AVAILABLE FAKTKUNDKONTOKRED THEN DO:
         FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP /*- FAKTKRED.AVGAR*/.             
      END.            
   END.
   IF rundavar = TRUE THEN DO:
      OPEN QUERY faktkontq FOR EACH FAKTINTAKTKONTKRED WHERE 
      FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTINTAKTKONTKRED.VKREDIT = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktkontq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTINTAKTKONTKRED):
            FAKTINTAKTKONTKRED.BELOPP = runda(FAKTINTAKTKONTKRED.BELOPP).
            GET NEXT faktkontq EXCLUSIVE-LOCK.
         END.
      END.
      OPEN QUERY faktkundq FOR EACH FAKTKUNDKONTOKRED WHERE 
      FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTKUNDKONTOKRED.VKREDIT = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktkundq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTKUNDKONTOKRED):
            FAKTKUNDKONTOKRED.BELOPP = runda(FAKTKUNDKONTOKRED.BELOPP).
            GET NEXT faktkundq EXCLUSIVE-LOCK.
         END.
      END.
      OPEN QUERY faktmomsq FOR EACH FAKTMOMSKRED WHERE 
      FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTMOMSKRED.VKREDIT = 0 NO-LOCK.
      DO TRANSACTION:
         GET FIRST faktmomsq EXCLUSIVE-LOCK.
         DO WHILE AVAILABLE(FAKTMOMSKRED):
            FAKTMOMSKRED.BELOPP = runda(FAKTMOMSKRED.BELOPP).
            GET NEXT faktmomsq EXCLUSIVE-LOCK.
         END.
      END.
   END.         
   DO TRANSACTION:      
      FIND CURRENT FAKTKRED EXCLUSIVE-LOCK NO-ERROR.             
      FAKTKRED.MOMSBELOPP = 0.
      OPEN QUERY faktmomsq FOR EACH FAKTMOMSKRED WHERE 
      FAKTMOMSKRED.FAKTNR = FAKTKRED.FAKTNR AND  
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTMOMSKRED.VKREDIT = 0 NO-LOCK.      
      GET FIRST faktmomsq NO-LOCK.
      DO WHILE AVAILABLE(FAKTMOMSKRED):
         FAKTKRED.MOMSBELOPP = FAKTKRED.MOMSBELOPP + FAKTMOMSKRED.MOMSBELOPP.                                  
         GET NEXT faktmomsq NO-LOCK.
      END.      
      ASSIGN        
      FAKTKRED.ORESUTJ = ROUND(FAKTKRED.MOMSBELOPP + 
      FAKTKRED.TOTPRIS,0) - (FAKTKRED.MOMSBELOPP + FAKTKRED.TOTPRIS).         
   END.
   
END PROCEDURE.

PROCEDURE kontober_UI :
   EMPTY TEMP-TABLE kolltabeltemp NO-ERROR. 
   IF TOG_MOMS = FALSE THEN DO:
      musz = musz.
   END.
   ELSE DO:      
      nyfakttotal = 0.
      FIND FIRST kolltabeltemp NO-LOCK NO-ERROR.
      IF NOT AVAILABLE kolltabeltemp THEN DO:            
         OPEN QUERY faktkundq FOR EACH FAKTKUNDKONTOKRED WHERE 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTKUNDKONTOKRED.VKREDIT = 0 NO-LOCK.
         GET FIRST faktkundq NO-LOCK.
         DO WHILE AVAILABLE(FAKTKUNDKONTOKRED):
            nyfakttotal = nyfakttotal + FAKTKUNDKONTOKRED.BELOPP.
            GET NEXT faktkundq NO-LOCK.
         END.         
         nymomstotal = nyfakttotal.               
         FIND FIRST gfaktemp WHERE gfaktemp.ORDNING = 3 NO-ERROR.
         CREATE kolltabeltemp.   
         ASSIGN
         kolltabeltemp.GFAKT = tidfaktvar
         kolltabeltemp.GMOMS = tidmomsvar
         kolltabeltemp.NYFAKT = nyfakttotal
         kolltabeltemp.NYMOMS = nymomstotal
         kolltabeltemp.DENNAFAKT = nyfakttotal         
         kolltabeltemp.ACONTO = FALSE.
         IF rundavar = TRUE THEN DO:
            ASSIGN
            kolltabeltemp.DENNAFAKT = runda(kolltabeltemp.DENNAFAKT)
            kolltabeltemp.NYFAKT = runda(kolltabeltemp.NYFAKT).
         END.
         IF vartyp = 3 THEN DO:            
         END.
                   
      END.
      RETURN.
   END.   
   IF vartyp = 1 THEN DO:            /*FASTPRIS*/
      RUN inaktfast_UI.
      RUN momsfast_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.
   ELSE IF vartyp = 2 THEN DO:    /*AVTAL*/        
      RUN inaktfast_UI.
      RUN momsfast_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.   
   ELSE IF vartyp = 3 THEN DO:          /*ACONTO*/
      FIND FIRST FAKTURERINGSTYP WHERE 
      FAKTURERINGSTYP.FAKTTYPID = FAKTKRED.FAKTTYPID NO-LOCK NO-ERROR. 
      IF AVAILABLE FAKTURERINGSTYP THEN DO:       
         IF FAKTURERINGSTYP.SLUT = TRUE THEN DO:
            RUN inakttid_UI.
            RUN momstid_UI.         
            RUN inaktkost_UI.
            RUN momskost_UI.          
            RUN inaktfria_UI.
            RUN momsfri_UI.                  
         END.
         ELSE DO:         
            RUN inaktfast_UI.
            RUN momsfast_UI.
            RUN inaktfria_UI.
            RUN momsfri_UI.  
         END.
      END.      
      ELSE DO:
         RUN inaktfast_UI.
         RUN momsfast_UI.
         RUN inaktfria_UI.
         RUN momsfri_UI.  
      END.
   END.
   ELSE IF vartyp = 4 OR vartyp = 8 THEN DO:                /*LÖPANDE*/
      RUN inakttid_UI.
      RUN momstid_UI.
      RUN inaktkost_UI. 
      RUN momskost_UI.
      RUN inaktfria_UI. 
      RUN momsfri_UI.                 
   END.
   ELSE IF vartyp = 5 THEN DO:       /*TAKPRIS*/
      RUN inakttid_UI.     
      RUN momstid_UI.      
      RUN inaktkost_UI.
      RUN momskost_UI. 
      RUN inaktfria_UI.
      RUN momsfri_UI.              
   END.
   ELSE IF vartyp = 52 THEN DO:            /*TAKPRIS UPPARB*/
      RUN inaktupp_UI.
      RUN momsupp_UI.
      RUN inaktfria_UI.
      RUN momsfri_UI.                         
   END.
   ELSE IF vartyp = 6 THEN DO:       /*FRIFAKT*/
      RUN inaktfria_UI.
      RUN momsfri_UI.              
   END. 
   ELSE IF vartyp = 7 THEN DO:       /*BOKFÖRING*/
      RUN inaktfria_UI.                   
   END.
   IF TOG_MOMS = FALSE THEN DO:      
      FIND FIRST gfaktemp WHERE gfaktemp.ORDNING = 3 NO-ERROR.
      CREATE kolltabeltemp.   
      ASSIGN
     /* kolltabeltemp.GFAKT = FAKTKRED.AVGAR
      kolltabeltemp.GMOMS = FAKTKRED.TIDIGARMOMS */
      kolltabeltemp.NYFAKT = nyfakttotal
      kolltabeltemp.NYMOMS = nymomstotal
      kolltabeltemp.DENNAFAKT = nyfakttotal      
      kolltabeltemp.ACONTO = FALSE.
      IF rundavar = TRUE THEN DO:
         ASSIGN
         kolltabeltemp.DENNAFAKT = runda(kolltabeltemp.DENNAFAKT)
         kolltabeltemp.NYFAKT = runda(kolltabeltemp.NYFAKT).
      END.
      IF vartyp = 3 THEN
      kolltabeltemp.ACONTO = TRUE.                
   END.
   OPEN QUERY momsq FOR EACH FAKTMOMSKRED WHERE 
   FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
   FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
   FAKTMOMSKRED.VKREDIT = 0 NO-LOCK,
   EACH MOMSTAB WHERE MOMSTAB.MOMSID = FAKTMOMSKRED.MOMSID NO-LOCK.
   DO TRANSACTION:
      GET FIRST momsq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(FAKTMOMSKRED):
         ASSIGN
         FAKTMOMSKRED.MOMSBELOPP = FAKTMOMSKRED.BELOPP * MOMSTAB.MOMSEXTERNT / 100 
         FAKTMOMSKRED.MOMSEXTERNT = MOMSTAB.MOMSEXTERNT.
         GET NEXT momsq EXCLUSIVE-LOCK.
      END.
   END.   
   CLOSE QUERY momsq.    
END PROCEDURE.

PROCEDURE momsfast_UI :
   IF vartyp = 1 OR vartyp = 3 THEN DO:       
      GET FIRST faktaonrq NO-LOCK.
      IF faoff = FAKTPLAN.OFFERTPRIS THEN DO:
         DO WHILE AVAILABLE(FAKTAONR) TRANSACTION:               
            FIND FIRST FAKTMOMSKRED WHERE 
            FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTMOMSKRED.VKREDIT = 0 AND
            FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
            FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
            FAKTMOMSKRED.TYP = "FAST"                                        
            EXCLUSIVE-LOCK NO-ERROR.
            IF NOT AVAILABLE FAKTMOMSKRED THEN DO:
               CREATE FAKTMOMSKRED.            
            END.
            ASSIGN 
            FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
            FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR
            FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR              
            FAKTMOMSKRED.VKREDIT = 0            
            FAKTMOMSKRED.AONR = FAKTAONR.AONR
            FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
            FAKTMOMSKRED.TYP = "FAST"                         
            FAKTMOMSKRED.FRITEXT = "Del betalningar"                      
            FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP + delfakt * FAKTAONR.OPRIS.         
            nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.                          
            RUN styrmoms_UI (INPUT TRUE).
            GET NEXT faktaonrq NO-LOCK.
         END.      
      END.
      ELSE DO:
         FOR EACH FAKTSTARTKRED WHERE FAKTSTARTKRED.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTSTARTKRED.FDELNR = FAKTKRED.FDELNR AND                     
         FAKTSTARTKRED.VKREDIT = 0 AND FAKTSTARTKRED.FAKTURERAD = TRUE NO-LOCK BREAK 
         BY FAKTSTARTKRED.FAKTURERAD:              
            ACCUMULATE 
            FAKTSTARTKRED.BELOPP (TOTAL BY FAKTSTARTKRED.FAKTURERAD).            
            IF LAST-OF(FAKTSTARTKRED.FAKTURERAD) THEN DO TRANSACTION:         
               FIND FIRST FAKTMOMSKRED WHERE 
               FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
               FAKTMOMSKRED.VKREDIT = 0 AND
               FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
               FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
               FAKTMOMSKRED.TYP = "FAST"                                        
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTMOMSKRED THEN DO:
                  CREATE FAKTMOMSKRED.            
               END.
               ASSIGN 
               FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR
               FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR              
               FAKTMOMSKRED.VKREDIT = 0            
               FAKTMOMSKRED.AONR = FAKTAONR.AONR
               FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
               FAKTMOMSKRED.TYP = "FAST"                         
               FAKTMOMSKRED.FRITEXT = "Del betalningar"                         
               FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP +
               (ACCUM TOTAL BY FAKTSTARTKRED.FAKTURERAD FAKTSTARTKRED.BELOPP).  
               nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.                          
               RUN styrmoms_UI (INPUT TRUE).
            END.
         END.
      END.
   END.
   ELSE DO:
      GET FIRST BRW_PLAN NO-LOCK.
      DO WHILE AVAILABLE(FAKTSTARTKRED):
         IF FAKTSTARTKRED.FAKTURERAD = TRUE AND FAKTSTARTKRED.VKREDIT = 0 THEN DO:
            IF FAKTSTARTKRED.START NE "" THEN DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.START = FAKTSTARTKRED.START 
               NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.PLANDATUM = FAKTSTARTKRED.PLANDATUM 
               NO-LOCK.
            END.
            GET FIRST faktavtq NO-LOCK.
            DO WHILE AVAILABLE(FAKTAVTALAONR) TRANSACTION: 
               FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
               FAKTAONR.AONR = FAKTAVTALAONR.AONR AND FAKTAONR.DELNR = FAKTAVTALAONR.DELNR
               NO-LOCK NO-ERROR.  
               IF NOT AVAILABLE FAKTAONR THEN DO:
                  FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
                  FAKTAONR.AONR = FAKTAVTALAONR.AONR NO-LOCK NO-ERROR.
               END.
               FIND FIRST FAKTMOMSKRED WHERE 
               FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
               FAKTMOMSKRED.VKREDIT = 0 AND
               FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
               FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
               FAKTMOMSKRED.TYP = "FAST"                                        
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTMOMSKRED THEN DO:
                  CREATE FAKTMOMSKRED.            
               END.
               ASSIGN 
               FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR
               FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR              
               FAKTMOMSKRED.VKREDIT = 0            
               FAKTMOMSKRED.AONR = FAKTAONR.AONR
               FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
               FAKTMOMSKRED.TYP = "FAST"                         
               FAKTMOMSKRED.FRITEXT = "Del betalningar"                         
               FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP + FAKTAVTALAONR.BELOPP.                  
               nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.
               RUN styrmoms_UI (INPUT TRUE).
               GET NEXT faktavtq NO-LOCK.
            END.
         END.
         GET NEXT BRW_PLAN NO-LOCK.
      END.
   END.  
END PROCEDURE.

PROCEDURE momsfri_UI :
   FOR EACH efaktfriatemp:
      FIND FIRST extradatatemp WHERE extradatatemp.HUVUDINT = INTEGER(efaktfriatemp.TYP)
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE extradatatemp THEN DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY efaktfriatemp TO faktfriatemp.
         DELETE efaktfriatemp.
         NEXT.
      END.
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = efaktfriatemp.AONR AND
      FAKTAONR.DELNR = efaktfriatemp.DELNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = efaktfriatemp.AONR NO-LOCK NO-ERROR.
      END.
      FIND FIRST FAKTMOMSKRED WHERE 
      FAKTMOMSKRED.MOMSID = extradatatemp.SOKINT[4] AND
      FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTMOMSKRED.VKREDIT = 0 AND
      FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
      FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
      FAKTMOMSKRED.TYP = efaktfriatemp.TYP 
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTMOMSKRED THEN CREATE FAKTMOMSKRED.
      ASSIGN 
      FAKTMOMSKRED.MOMSID = extradatatemp.SOKINT[4]
      FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR  
      FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR
      FAKTMOMSKRED.VKREDIT = 0            
      FAKTMOMSKRED.AONR = FAKTAONR.AONR
      FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
      FAKTMOMSKRED.TYP = efaktfriatemp.TYP                         
      FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP + efaktfriatemp.TOTALT.
      nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.                                          
      SUBSTRING(FAKTMOMSKRED.FRITEXT,1) = "Från prislista " + LC(SUBSTRING(extradatatemp.SOKCHAR[10],1,100)).            
      SUBSTRING(FAKTMOMSKRED.FRITEXT,150) = STRING(extradatatemp.SOKINT[3]). 
      IF FAKTKRED.VFAKTNR NE 0 THEN FAKTMOMSKRED.MOMSID = 0.
      IF FAKTMOMSKRED.MOMSID = 0 THEN DO:
         IF SUBSTRING(FAKTMOMSKRED.FRITEXT,150) = "" OR SUBSTRING(FAKTMOMSKRED.FRITEXT,150) = "0" THEN RUN styrmoms_UI (INPUT TRUE).      
         ELSE RUN styrmoms_UI (INPUT FALSE).
      END.
   END.
   
   FOR EACH faktfriatemp WHERE faktfriatemp.FAKTNR = FAKTPLAN.FAKTNR AND
   faktfriatemp.FDELNR = FAKTKRED.FDELNR AND faktfriatemp.FAKTURERAD = TRUE NO-LOCK 
   BREAK BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.TYP BY faktfriatemp.MOMSID:              
      ACCUMULATE 
      faktfriatemp.TOTALT (TOTAL BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.TYP BY faktfriatemp.MOMSID).            
      IF LAST-OF(faktfriatemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = faktfriatemp.AONR AND
         FAKTAONR.DELNR = faktfriatemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = faktfriatemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMSKRED WHERE 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTMOMSKRED.VKREDIT = 0 AND
         FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
         FAKTMOMSKRED.TYP = faktfriatemp.TYP AND
         FAKTMOMSKRED.MOMSID = faktfriatemp.MOMSID                                       
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTMOMSKRED THEN CREATE FAKTMOMSKRED.
         ASSIGN 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR  
         FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR
         FAKTMOMSKRED.VKREDIT = 0            
         FAKTMOMSKRED.AONR = FAKTAONR.AONR
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
         FAKTMOMSKRED.TYP = faktfriatemp.TYP                         
         FAKTMOMSKRED.MOMSID = faktfriatemp.MOMSID        
         FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP +
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).
         nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.                                          
         IF faktfriatemp.TYP = "PERS" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga personalkostnader".            
         END.
         ELSE IF faktfriatemp.TYP = "MASK" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga främmande tj.".            
         END.
         ELSE IF faktfriatemp.TYP = "MIL" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga mil/Resor".            
         END.
         ELSE IF faktfriatemp.TYP = "TRAKT" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga traktamente mm.".            
         END.
         ELSE IF faktfriatemp.TYP = "OVER" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga kostnader".            
         END.
         ELSE IF faktfriatemp.TYP = "MATRL" THEN DO:
            FAKTMOMSKRED.FRITEXT = "Övriga materielkostnader".            
         END.
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.
     
END PROCEDURE.

PROCEDURE momskost_UI :
   FOR EACH kosttemp WHERE kosttemp.MED = TRUE BREAK 
   BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID:         
      ACCUMULATE 
      kosttemp.PERSKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.TRAKTKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.FRTJPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRLPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.MASKKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRL (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE             
      kosttemp.OVRKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      IF LAST-OF(kosttemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = kosttemp.AONR AND
         FAKTAONR.DELNR = kosttemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = kosttemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMSKRED WHERE 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTMOMSKRED.VKREDIT = 0 AND
         FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
         FAKTMOMSKRED.TYP = "KOST" AND 
         FAKTMOMSKRED.MOMSID = kosttemp.MOMSID                                        
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTMOMSKRED THEN CREATE FAKTMOMSKRED.
         ASSIGN 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR  
         FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR
         FAKTMOMSKRED.VKREDIT = 0 
         FAKTMOMSKRED.AONR = FAKTAONR.AONR 
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR 
         FAKTMOMSKRED.TYP = "KOST"   
         FAKTMOMSKRED.FRITEXT = "Konterat belopp"         
         FAKTMOMSKRED.MOMSID = kosttemp.MOMSID         
         FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP +         
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).         
         nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.         
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.     
END PROCEDURE.

PROCEDURE momstid_UI :
   FOR EACH sumtidtemp WHERE sumtidtemp.MED = TRUE BREAK 
   BY sumtidtemp.AONR BY sumtidtemp.DELNR:         
      ACCUMULATE 
      sumtidtemp.BELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.OBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.LONKOST (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR). 
      ACCUMULATE 
      sumtidtemp.TBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.RESKOSTDEC (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      IF LAST-OF(sumtidtemp.DELNR) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = sumtidtemp.AONR AND
         FAKTAONR.DELNR = sumtidtemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = sumtidtemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTMOMSKRED WHERE 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTMOMSKRED.VKREDIT = 0 AND
         FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
         FAKTMOMSKRED.TYP = "TID"                                        
         EXCLUSIVE-LOCK NO-ERROR.         
         IF NOT AVAILABLE FAKTMOMSKRED THEN DO:
            CREATE FAKTMOMSKRED.
         END.         
         ASSIGN 
         FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR  
         FAKTMOMSKRED.VFAKTNR = FAKTKRED.VFAKTNR
         FAKTMOMSKRED.VKREDIT = 0 
         FAKTMOMSKRED.AONR = FAKTAONR.AONR 
         FAKTMOMSKRED.DELNR = FAKTAONR.DELNR 
         FAKTMOMSKRED.TYP = "TID"       
         FAKTMOMSKRED.FRITEXT = "Tidskrivning"              
         FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).         
         nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.
         RUN styrmoms_UI (INPUT TRUE).
      END.
   END.     
END PROCEDURE.

PROCEDURE momsupp_UI :
   OPEN QUERY BRW_UPP FOR EACH FAKTUPPARBKRED WHERE 
   FAKTUPPARBKRED.FAKTNR = FAKTPLAN.FAKTNR AND FAKTUPPARBKRED.FAKTURERAD = TRUE AND                     
   FAKTUPPARBKRED.VKREDIT = 0
   NO-LOCK BY FAKTUPPARBKRED.UPLAN%.
   GET FIRST BRW_UPP NO-LOCK.
   DO WHILE AVAILABLE(FAKTUPPARBKRED):
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = FAKTUPPARBKRED.AONR AND FAKTAONR.DELNR = FAKTUPPARBKRED.DELNR
      NO-LOCK NO-ERROR.  
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = FAKTUPPARBKRED.AONR NO-LOCK NO-ERROR.
      END.
      FIND FIRST FAKTMOMSKRED WHERE 
      FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTMOMSKRED.VKREDIT = 0 AND
      FAKTMOMSKRED.AONR = FAKTAONR.AONR AND
      FAKTMOMSKRED.DELNR = FAKTAONR.DELNR AND
      FAKTMOMSKRED.TYP = "FAST"                                        
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTMOMSKRED THEN DO:
         CREATE FAKTMOMSKRED.              
      END.
      ASSIGN 
      FAKTMOMSKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTMOMSKRED.FDELNR = FAKTKRED.FDELNR  
      FAKTMOMSKRED.VKREDIT = 0            
      FAKTMOMSKRED.AONR = FAKTAONR.AONR
      FAKTMOMSKRED.DELNR = FAKTAONR.DELNR
      FAKTMOMSKRED.TYP = "UPP"                         
      FAKTMOMSKRED.FRITEXT = "Del betalningar"                         
      FAKTMOMSKRED.BELOPP = FAKTMOMSKRED.BELOPP + FAKTUPPARBKRED.FAKTBELOPP.         
      nymomstotal = nymomstotal + FAKTMOMSKRED.BELOPP.         
      RUN styrmoms_UI (INPUT TRUE).
      GET NEXT BRW_UPP NO-LOCK.      
   END.
END PROCEDURE.

PROCEDURE styrintakt_UI :
   DEFINE INPUT PARAMETER intaktvar  AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER kundvar    AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER motpartvar AS LOGICAL NO-UNDO.
   IF FAKTKRED.VFAKTNR = 0 THEN DO:
      IF motpartvar = TRUE OR intaktvar = TRUE THEN DO:
         FIND FIRST STYRMOT WHERE STYRMOT.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
         IF AVAILABLE STYRMOT THEN DO:
            IF motpartvar = TRUE THEN FAKTKUNDKONTOKRED.MOTPARTID = STYRMOT.MOTPARTID.
            IF motpartvar = TRUE THEN FAKTINTAKTKONTKRED.MOTPARTID = STYRMOT.MOTPARTID.
            /*
            IF intaktvar = TRUE THEN FAKTINTAKTKONTKRED.MOTPARTID = STYRMOT.MOTPARTID.
            */
         END.      
         ELSE DO:
            MESSAGE "Det är något fel på motpartsupplägget. Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.
         END.         
      END.
      IF kundvar = TRUE THEN DO:
         FIND FIRST STYRKUND WHERE STYRKUND.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
         IF AVAILABLE STYRKUND THEN DO:
            FAKTKUNDKONTOKRED.KUNDKONTOID = STYRKUND.KUNDKONTOID.
         END.              
         ELSE DO:
            MESSAGE "Det är något fel på kundfodransupplägget. Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.
         END.
      END.
      IF FAKTINTAKTKONTKRED.MOMSID = 0 THEN DO:
         FIND FIRST STYRMOMS WHERE STYRMOMS.KUNDID = FAKTREGLER.KUNDID AND
         STYRMOMS.FAKTTYPID = FAKTKRED.FAKTTYPID NO-LOCK NO-ERROR.
         IF AVAILABLE STYRMOMS THEN DO:
            FIND FIRST STYRINTAKT WHERE STYRINTAKT.KUNDID = FAKTREGLER.KUNDID AND
            STYRINTAKT.FAKTTYPID = FAKTKRED.FAKTTYPID AND 
            STYRINTAKT.MOMSID = STYRMOMS.MOMSID
            NO-LOCK NO-ERROR.
            IF AVAILABLE STYRINTAKT THEN DO:
               IF intaktvar = TRUE THEN FAKTINTAKTKONTKRED.INTAKTID = STYRINTAKT.INTAKTID.
            END.              
            ELSE DO:
               MESSAGE "Det är något fel på intäktskonteringen. Kontakta ansvarig!" 
              VIEW-AS ALERT-BOX.
            END. 
         END.                 
         ELSE DO:
            MESSAGE "Det är något fel på momskoder som skall styra intäktskonteringen. Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.
         END.
      END.
      ELSE DO:
         FIND FIRST STYRINTAKT WHERE STYRINTAKT.KUNDID = FAKTREGLER.KUNDID AND
         STYRINTAKT.FAKTTYPID = 11 AND 
         STYRINTAKT.MOMSID = FAKTINTAKTKONTKRED.MOMSID
         NO-LOCK NO-ERROR.
         IF AVAILABLE STYRINTAKT THEN DO:
            IF intaktvar = TRUE THEN FAKTINTAKTKONTKRED.INTAKTID = STYRINTAKT.INTAKTID.
         END.              
         ELSE DO:
            MESSAGE "Det är något fel på intäktskonteringen med differentierad moms.
            Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.      
         END.                       
      END.
   END.   
   ELSE DO:
      FIND FIRST FAKTINTAKTKONT WHERE 
      FAKTINTAKTKONT.FAKTNR = FAKTPLAN.FAKTNR AND           
      FAKTINTAKTKONT.VFAKTNR = FAKTKRED.VFAKTNR AND
      FAKTINTAKTKONT.AONR = FAKTINTAKTKONTKRED.AONR AND
      FAKTINTAKTKONT.DELNR = FAKTINTAKTKONTKRED.DELNR                                        
      NO-LOCK NO-ERROR.
      IF AVAILABLE FAKTINTAKTKONT THEN DO:
         ASSIGN
         FAKTINTAKTKONTKRED.INTAKTID = FAKTINTAKTKONT.INTAKTID
         FAKTINTAKTKONTKRED.MOTPARTID = FAKTINTAKTKONT.MOTPARTID.
      END.
      FIND FIRST FAKTKUNDKONTO WHERE 
      FAKTKUNDKONTO.FAKTNR = FAKTPLAN.FAKTNR AND           
      FAKTKUNDKONTO.VFAKTNR = FAKTKRED.VFAKTNR AND
      FAKTKUNDKONTO.AONR = FAKTKUNDKONTOKRED.AONR AND
      FAKTKUNDKONTO.DELNR = FAKTKUNDKONTOKRED.DELNR 
      NO-LOCK NO-ERROR.
      IF AVAILABLE FAKTKUNDKONTO THEN DO:
         ASSIGN
         FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTKUNDKONTO.KUNDKONTOID
         FAKTKUNDKONTOKRED.MOTPARTID = FAKTKUNDKONTO.MOTPARTID.
      END.
   END.     
END PROCEDURE.

PROCEDURE styrmoms_UI :
   DEFINE INPUT PARAMETER sattmot AS LOGICAL NO-UNDO.
   IF FAKTMOMSKRED.MOMSID = 0 THEN DO:
      IF FAKTKRED.VFAKTNR = 0 THEN DO:
         FIND FIRST STYRMOMS WHERE STYRMOMS.KUNDID = FAKTREGLER.KUNDID AND
         STYRMOMS.FAKTTYPID = FAKTKRED.FAKTTYPID NO-LOCK NO-ERROR.
         IF AVAILABLE STYRMOMS THEN DO:
            FAKTMOMSKRED.MOMSID = STYRMOMS.MOMSID.
            IF sattmot = TRUE THEN DO:
               FIND FIRST STYRMOT WHERE STYRMOT.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
               IF AVAILABLE STYRMOT THEN DO:
                  SUBSTRING(FAKTMOMSKRED.FRITEXT,150) = STRING(STYRMOT.MOTPARTID).
               END.
            END.
         END.              
         ELSE DO:
            MESSAGE "Det är något fel på momsupplägget. Kontakta ansvarig!" 
            VIEW-AS ALERT-BOX.
         END.
      END.
      ELSE DO:
         FIND FIRST FAKTMOMS WHERE 
         FAKTMOMS.FAKTNR = FAKTPLAN.FAKTNR AND           
         FAKTMOMS.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTMOMS.AONR = FAKTMOMSKRED.AONR AND
         FAKTMOMS.DELNR = FAKTMOMSKRED.DELNR AND
         FAKTMOMS.TYP = FAKTMOMSKRED.TYP                                        
         NO-LOCK NO-ERROR.
         IF AVAILABLE FAKTMOMS THEN DO:
            ASSIGN
            FAKTMOMSKRED.FRITEXT    = FAKTMOMS.FRITEXT
            FAKTMOMSKRED.MOMSID = FAKTMOMS.MOMSID.
         END.    
         ELSE DO:
            FIND FIRST STYRMOMS WHERE STYRMOMS.KUNDID = FAKTREGLER.KUNDID AND
            STYRMOMS.FAKTTYPID = FAKTKRED.FAKTTYPID NO-LOCK NO-ERROR.
            IF AVAILABLE STYRMOMS THEN DO:
               FAKTMOMSKRED.MOMSID = STYRMOMS.MOMSID.
               IF sattmot = TRUE THEN DO:
                  FIND FIRST STYRMOT WHERE STYRMOT.KUNDID = FAKTREGLER.KUNDID NO-LOCK NO-ERROR.
                  IF AVAILABLE STYRMOT THEN DO:
                     SUBSTRING(FAKTMOMSKRED.FRITEXT,150) = STRING(STYRMOT.MOTPARTID).
                  END.
               END.
            END.
            ELSE DO:
               MESSAGE "Det är något fel på momsupplägget. Kontakta ansvarig!" 
               VIEW-AS ALERT-BOX.
            END.
         END.
      END.
   END.
END PROCEDURE.

PROCEDURE inaktfast_UI :
   GET FIRST faktaonrq NO-LOCK.         
   DO WHILE AVAILABLE(FAKTAONR):      
      faoff = faoff + FAKTAONR.OPRIS.
      GET NEXT faktaonrq NO-LOCK.
   END.   
   FOR EACH FAKTSTARTKRED WHERE FAKTSTARTKRED.FAKTNR = FAKTPLAN.FAKTNR AND                     
   FAKTSTARTKRED.FDELNR = FAKTKRED.FDELNR AND                     
   FAKTSTARTKRED.VKREDIT = 0 AND FAKTSTARTKRED.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY FAKTSTARTKRED.FAKTURERAD:              
      ACCUMULATE FAKTSTARTKRED.BELOPP (TOTAL BY FAKTSTARTKRED.FAKTURERAD).            
      IF LAST-OF(FAKTSTARTKRED.FAKTURERAD) THEN DO:
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY FAKTSTARTKRED.FAKTURERAD FAKTSTARTKRED.BELOPP).
      END.   
   END.   
   IF FAKTPLAN.OFFERTPRIS > 0 THEN DO:
      delfakt = nyfakttotal / FAKTPLAN.OFFERTPRIS.      
   END.
   GET FIRST faktaonrq NO-LOCK.   
   IF vartyp = 1 OR vartyp = 3 THEN DO: 
      GET FIRST faktaonrq NO-LOCK.
      IF faoff = FAKTPLAN.OFFERTPRIS THEN DO :    
         DO WHILE AVAILABLE(FAKTAONR) TRANSACTION:      
            FIND FIRST FAKTINTAKTKONTKRED WHERE 
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTINTAKTKONTKRED.VKREDIT = 0 AND
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONTKRED.MOMSID = 0                                       
            EXCLUSIVE-LOCK NO-ERROR.
            IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
            ASSIGN 
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR  
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR
            FAKTINTAKTKONTKRED.VKREDIT = 0            
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR                         
            FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE
            FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
            FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
            FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP + delfakt * FAKTAONR.OPRIS.
            FIND FIRST FAKTKUNDKONTOKRED WHERE 
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTKUNDKONTOKRED.VKREDIT = 0 AND
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
            IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
            ASSIGN 
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
            FAKTKUNDKONTOKRED.VKREDIT = 0            
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
            FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
            FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
            FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
            FAKTKUNDKONTOKRED.FAKTDATUM = TODAY         
            FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + delfakt * FAKTAONR.OPRIS.         
            RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
            GET NEXT faktaonrq NO-LOCK.
         END.
      END.      
      ELSE IF AVAILABLE FAKTAONR THEN DO TRANSACTION:
         FIND FIRST FAKTINTAKTKONTKRED WHERE 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTINTAKTKONTKRED.VKREDIT = 0 AND
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONTKRED.MOMSID = 0                                        
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
         ASSIGN 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR  
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR
         FAKTINTAKTKONTKRED.VKREDIT = 0            
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR                         
         FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE
         FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP + nyfakttotal.         
         FIND FIRST FAKTKUNDKONTOKRED WHERE 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTKUNDKONTOKRED.VKREDIT = 0 AND
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
         ASSIGN 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
         FAKTKUNDKONTOKRED.VKREDIT = 0            
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTOKRED.FAKTDATUM = TODAY         
         FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + nyfakttotal.          
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).         
      END.
   END.
   ELSE DO:
      GET FIRST BRW_PLAN NO-LOCK.      
      DO WHILE AVAILABLE(FAKTSTARTKRED):
         IF FAKTSTARTKRED.FAKTURERAD = TRUE AND FAKTSTARTKRED.VKREDIT = 0 THEN DO:
            IF FAKTSTARTKRED.START NE "" THEN DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.START = FAKTSTARTKRED.START 
               NO-LOCK.
            END.
            ELSE DO:
               OPEN QUERY faktavtq FOR EACH FAKTAVTALAONR WHERE 
               FAKTAVTALAONR.FAKTNR = FAKTPLAN.FAKTNR AND 
               FAKTAVTALAONR.PLANDATUM = FAKTSTARTKRED.PLANDATUM 
               NO-LOCK.
            END.
            GET FIRST faktavtq NO-LOCK.
            DO WHILE AVAILABLE(FAKTAVTALAONR) TRANSACTION: 
               FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
               FAKTAONR.AONR = FAKTAVTALAONR.AONR AND FAKTAONR.DELNR = FAKTAVTALAONR.DELNR
               NO-LOCK NO-ERROR.  
               IF NOT AVAILABLE FAKTAONR THEN DO:
                  FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
                  FAKTAONR.AONR = FAKTAVTALAONR.AONR NO-LOCK NO-ERROR.
               END.
               FIND FIRST FAKTINTAKTKONTKRED WHERE 
               FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND
               FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND 
               FAKTINTAKTKONTKRED.VKREDIT = 0 AND
               FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
               FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
               FAKTINTAKTKONTKRED.MOMSID = 0                                       
               EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
               ASSIGN 
               FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR  
               FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR
               FAKTINTAKTKONTKRED.VKREDIT = 0            
               FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
               FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR                         
               FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE
               FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
               FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP + FAKTAVTALAONR.BELOPP.
               FIND FIRST FAKTKUNDKONTOKRED WHERE 
               FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
               FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
               FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
               FAKTKUNDKONTOKRED.VKREDIT = 0 AND
               FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
               FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
               ASSIGN 
               FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
               FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
               FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
               FAKTKUNDKONTOKRED.VKREDIT = 0            
               FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
               FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
               FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
               FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
               FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
               FAKTKUNDKONTOKRED.FAKTDATUM = TODAY         
               FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + FAKTAVTALAONR.BELOPP.         
               RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
               GET NEXT faktavtq NO-LOCK.
            END.
         END.
         GET NEXT BRW_PLAN NO-LOCK.
      END.      
   END.
END PROCEDURE.

PROCEDURE inaktfria_UI :
   EMPTY TEMP-TABLE efaktfriatemp NO-ERROR. 
   EMPTY TEMP-TABLE faktfriatemp NO-ERROR. 
   FOR EACH FAKTFRIAKRED WHERE FAKTFRIAKRED.FAKTNR = FAKTPLAN.FAKTNR AND
   FAKTFRIAKRED.FDELNR = FAKTKRED.FDELNR AND FAKTFRIAKRED.FAKTURERAD = TRUE NO-LOCK:
      IF FAKTFRIAKRED.TYP BEGINS "FAKT" THEN DO:
         CREATE efaktfriatemp.
         BUFFER-COPY FAKTFRIAKRED TO efaktfriatemp.
         efaktfriatemp.TYP = SUBSTRING(efaktfriatemp.TYP,5).
      END.
      ELSE DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY FAKTFRIAKRED TO faktfriatemp.
      END.            
   END.  
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   CREATE inextradatatemp.
   ASSIGN
   inextradatatemp.PROGRAM = "FRIPRIS"                   
   inextradatatemp.HUVUDCH = ?              
   inextradatatemp.HUVUDINT = ?.      
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp,OUTPUT TABLE extradatatemp).
   FOR EACH efaktfriatemp:
      FIND FIRST extradatatemp WHERE extradatatemp.HUVUDINT = INTEGER(efaktfriatemp.TYP)
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE extradatatemp THEN DO:
         CREATE faktfriatemp.                     
         BUFFER-COPY efaktfriatemp TO faktfriatemp.
         DELETE efaktfriatemp.
         NEXT.
      END.
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = efaktfriatemp.AONR AND
      FAKTAONR.DELNR = efaktfriatemp.DELNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = efaktfriatemp.AONR NO-LOCK NO-ERROR.
      END.
      IF extradatatemp.SOKINT[2] = 0 THEN DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTINTAKTKONTKRED WHERE 
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTINTAKTKONTKRED.VKREDIT = 0 AND
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONTKRED.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTINTAKTKONTKRED WHERE 
            FAKTINTAKTKONTKRED.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTINTAKTKONTKRED.VKREDIT = 0 AND
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONTKRED.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
      END.
      ELSE DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTINTAKTKONTKRED WHERE 
            FAKTINTAKTKONTKRED.INTAKTID = extradatatemp.SOKINT[2] AND
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTINTAKTKONTKRED.VKREDIT = 0 AND
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONTKRED.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTINTAKTKONTKRED WHERE 
            FAKTINTAKTKONTKRED.INTAKTID = extradatatemp.SOKINT[2] AND
            FAKTINTAKTKONTKRED.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTINTAKTKONTKRED.VKREDIT = 0 AND
            FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
            FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
            FAKTINTAKTKONTKRED.MOMSID = efaktfriatemp.MOMSID                                       
            EXCLUSIVE-LOCK NO-ERROR.
         END.
      END.
      IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
      ASSIGN 
      FAKTINTAKTKONTKRED.INTAKTID = extradatatemp.SOKINT[2]
      FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR 
      FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR 
      FAKTINTAKTKONTKRED.VKREDIT = 0            
      FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
      FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR 
      FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE 
      FAKTINTAKTKONTKRED.MOMSID = efaktfriatemp.MOMSID                       
      FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP + + efaktfriatemp.TOTALT.
      nyfakttotal = nyfakttotal + efaktfriatemp.TOTALT.
      IF extradatatemp.SOKINT[2] = 0 THEN  FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID. 
      ELSE DO:
         FAKTINTAKTKONTKRED.INTAKTID = extradatatemp.SOKINT[2]. 
      END.
      IF extradatatemp.SOKINT[3] = 0 THEN FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID.
      ELSE FAKTINTAKTKONTKRED.MOTPARTID = extradatatemp.SOKINT[3].
      IF extradatatemp.SOKINT[1] = 0 THEN DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTKUNDKONTOKRED WHERE 
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTKUNDKONTOKRED.VKREDIT = 0 AND
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTKUNDKONTOKRED WHERE 
            FAKTKUNDKONTO.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTKUNDKONTOKRED.VKREDIT = 0 AND
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
      END.
      ELSE DO:
         IF extradatatemp.SOKINT[3] = 0 THEN DO:
            FIND FIRST FAKTKUNDKONTOKRED WHERE 
            FAKTKUNDKONTOKRED.KUNDKONTOID = extradatatemp.SOKINT[1] AND 
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTKUNDKONTOKRED.VKREDIT = 0 AND
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
         ELSE DO:
            FIND FIRST FAKTKUNDKONTOKRED WHERE 
            FAKTKUNDKONTOKRED.KUNDKONTOID = extradatatemp.SOKINT[1] AND 
            FAKTKUNDKONTOKRED.MOTPARTID = extradatatemp.SOKINT[3] AND
            FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
            FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
            FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
            FAKTKUNDKONTOKRED.VKREDIT = 0 AND
            FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
            FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         END.
      END.
      IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
      ASSIGN
      FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
      FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
      FAKTKUNDKONTOKRED.VKREDIT = 0            
      FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
      FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
      FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
      FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
      FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
      FAKTKUNDKONTOKRED.FAKTDATUM = TODAY           
      FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + efaktfriatemp.TOTALT.
      ASSIGN
      intaktvarhj = TRUE
      kundvarhj   = TRUE
      motpartvarhj = TRUE.
      IF FAKTINTAKTKONTKRED.INTAKTID NE 0 THEN intaktvarhj = FALSE.
      IF extradatatemp.SOKINT[1] = 0 THEN FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID. 
      ELSE DO:
         ASSIGN
         kundvarhj   = FALSE
         FAKTKUNDKONTOKRED.KUNDKONTOID = extradatatemp.SOKINT[1]. 
      END.
      IF extradatatemp.SOKINT[3] = 0 THEN FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID.
      ELSE DO:
         ASSIGN
         motpartvarhj   = FALSE
         FAKTKUNDKONTOKRED.MOTPARTID = extradatatemp.SOKINT[3].
      END.           
      RUN styrintakt_UI (INPUT intaktvarhj,INPUT kundvarhj,INPUT motpartvarhj).   
   END.
   
   FOR EACH faktfriatemp WHERE faktfriatemp.FAKTNR = FAKTPLAN.FAKTNR AND
   faktfriatemp.FDELNR = FAKTKRED.FDELNR AND faktfriatemp.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.MOMSID:              
      ACCUMULATE 
      faktfriatemp.TOTALT (TOTAL BY faktfriatemp.AONR BY faktfriatemp.DELNR BY faktfriatemp.MOMSID).            
      IF LAST-OF(faktfriatemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = faktfriatemp.AONR AND
         FAKTAONR.DELNR = faktfriatemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = faktfriatemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONTKRED WHERE 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTINTAKTKONTKRED.VKREDIT = 0 AND
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONTKRED.MOMSID = faktfriatemp.MOMSID                                       
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
         ASSIGN 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR 
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR 
         FAKTINTAKTKONTKRED.VKREDIT = 0            
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR 
         FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE 
         FAKTINTAKTKONTKRED.MOMSID = faktfriatemp.MOMSID                       
         FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP +
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).               
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).
         FIND FIRST FAKTKUNDKONTOKRED WHERE 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTKUNDKONTOKRED.VKREDIT = 0 AND
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
         ASSIGN
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
         FAKTKUNDKONTOKRED.VKREDIT = 0            
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTOKRED.FAKTDATUM = TODAY           
         FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + 
         (ACCUM TOTAL BY faktfriatemp.MOMSID faktfriatemp.TOTALT).                                   
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.
     
END PROCEDURE.

PROCEDURE inaktkost_UI :
   FOR EACH kosttemp WHERE kosttemp.MED = TRUE BREAK 
   BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID:         
      ACCUMULATE 
      kosttemp.PERSKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.TRAKTKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.FRTJPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRLPAKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE 
      kosttemp.MASKKOST (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID). 
      ACCUMULATE 
      kosttemp.MTRL (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).
      ACCUMULATE             
      kosttemp.OVRKR (TOTAL BY kosttemp.AONR BY kosttemp.DELNR BY kosttemp.MOMSID).      
      IF LAST-OF(kosttemp.MOMSID) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = kosttemp.AONR AND
         FAKTAONR.DELNR = kosttemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = kosttemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONTKRED WHERE 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTINTAKTKONTKRED.VKREDIT = 0 AND
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
         FAKTINTAKTKONTKRED.MOMSID = kosttemp.MOMSID                                        
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
         ASSIGN 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR  
         FAKTINTAKTKONTKRED.VKREDIT = 0            
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR  
         FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE                       
         FAKTINTAKTKONTKRED.MOMSID = kosttemp.MOMSID
         FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).
         FIND FIRST FAKTKUNDKONTOKRED WHERE 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTKUNDKONTOKRED.VKREDIT = 0 AND
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
         ASSIGN 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR  
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR
         FAKTKUNDKONTOKRED.VKREDIT = 0            
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTOKRED.FAKTDATUM = TODAY            
         FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.PERSKOST) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.TRAKTKOST) +           
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.FRTJPAKR) +            
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRLPAKR) +                          
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MASKKOST) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.MTRL) +
         (ACCUM TOTAL BY kosttemp.MOMSID kosttemp.OVRKR).               
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.  
END PROCEDURE.

PROCEDURE inakttid_UI :
   FOR EACH sumtidtemp WHERE sumtidtemp.MED = TRUE BREAK 
   BY sumtidtemp.AONR BY sumtidtemp.DELNR:         
      ACCUMULATE 
      sumtidtemp.BELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.OBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.LONKOST (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR). 
      ACCUMULATE 
      sumtidtemp.TBELOPP (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      ACCUMULATE 
      sumtidtemp.RESKOSTDEC (TOTAL BY sumtidtemp.AONR BY sumtidtemp.DELNR).
      IF LAST-OF(sumtidtemp.DELNR) THEN DO TRANSACTION:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = sumtidtemp.AONR AND
         FAKTAONR.DELNR = sumtidtemp.DELNR NO-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTAONR THEN DO:
            FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
            FAKTAONR.AONR = sumtidtemp.AONR NO-LOCK NO-ERROR.
         END.
         FIND FIRST FAKTINTAKTKONTKRED WHERE 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTINTAKTKONTKRED.VKREDIT = 0 AND
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR
         EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
         ASSIGN 
         FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR 
         FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR
         FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR  
         FAKTINTAKTKONTKRED.VKREDIT = 0            
         FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
         FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR                         
         FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE
         FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
         FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).
         FIND FIRST FAKTKUNDKONTOKRED WHERE 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
         FAKTKUNDKONTOKRED.VKREDIT = 0 AND
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
         ASSIGN 
         FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
         FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR
         FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR  
         FAKTKUNDKONTOKRED.VKREDIT = 0            
         FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
         FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
         FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
         FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
         FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
         FAKTKUNDKONTOKRED.FAKTDATUM = TODAY            
         FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP +
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.BELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.LONKOST) +           
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.OBELOPP) +            
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.TBELOPP) +                          
         (ACCUM TOTAL BY sumtidtemp.DELNR sumtidtemp.RESKOSTDEC).                        
         RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).
      END.
   END.  
END PROCEDURE.

PROCEDURE inaktupp_UI :
   FOR EACH FAKTUPPARBKRED WHERE FAKTUPPARBKRED.FAKTNR = FAKTPLAN.FAKTNR AND                     
   FAKTUPPARBKRED.VKREDIT = 0 AND FAKTUPPARBKRED.FAKTURERAD = TRUE NO-LOCK BREAK 
   BY FAKTUPPARBKRED.FAKTURERAD:              
      ACCUMULATE FAKTUPPARBKRED.FAKTBELOPP (TOTAL BY FAKTUPPARBKRED.FAKTURERAD).            
      IF LAST-OF(FAKTUPPARBKRED.FAKTURERAD) THEN DO:
         nyfakttotal = nyfakttotal + (ACCUM TOTAL BY FAKTUPPARBKRED.FAKTURERAD FAKTUPPARBKRED.FAKTBELOPP).
      END.   
   END.   
   IF FAKTPLAN.OFFERTPRIS > 0 THEN DO:
      delfakt = nyfakttotal / FAKTPLAN.OFFERTPRIS.      
   END.
   OPEN QUERY BRW_UPP FOR EACH FAKTUPPARBKRED WHERE 
   FAKTUPPARBKRED.FAKTNR = FAKTPLAN.FAKTNR AND FAKTUPPARBKRED.FAKTURERAD = TRUE AND                     
   FAKTUPPARBKRED.VKREDIT = 0
   NO-LOCK BY FAKTUPPARBKRED.UPLAN%.
   GET FIRST BRW_UPP NO-LOCK.
   DO WHILE AVAILABLE(FAKTUPPARBKRED):  
      FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
      FAKTAONR.AONR = FAKTUPPARBKRED.AONR AND FAKTAONR.DELNR = FAKTUPPARBKRED.DELNR
      NO-LOCK NO-ERROR.     
      IF NOT AVAILABLE FAKTAONR THEN DO:
         FIND FIRST FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR AND
         FAKTAONR.AONR = FAKTUPPARBKRED.AONR NO-LOCK NO-ERROR.
      END.
      FIND FIRST FAKTINTAKTKONTKRED WHERE 
      FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
      FAKTINTAKTKONTKRED.VKREDIT = 0 AND
      FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR AND
      FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR AND
      FAKTINTAKTKONTKRED.MOMSID = 0                                      
      EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTINTAKTKONTKRED THEN CREATE FAKTINTAKTKONTKRED.
      ASSIGN 
      FAKTINTAKTKONTKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTINTAKTKONTKRED.FDELNR = FAKTKRED.FDELNR  
      FAKTINTAKTKONTKRED.VFAKTNR = FAKTKRED.VFAKTNR 
      FAKTINTAKTKONTKRED.VKREDIT = 0            
      FAKTINTAKTKONTKRED.AONR = FAKTAONR.AONR
      FAKTINTAKTKONTKRED.DELNR = FAKTAONR.DELNR                         
      FAKTINTAKTKONTKRED.OMRADE = FAKTAONR.OMRADE
      FAKTINTAKTKONTKRED.INTAKTID = FAKTREGLER.INTAKTID 
      FAKTINTAKTKONTKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
      FAKTINTAKTKONTKRED.BELOPP = FAKTINTAKTKONTKRED.BELOPP + FAKTUPPARBKRED.FAKTBELOPP.
      FIND FIRST FAKTKUNDKONTO WHERE 
      FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR AND  
      FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR AND 
      FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR AND
      FAKTKUNDKONTOKRED.VKREDIT = 0 AND
      FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR AND
      FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE FAKTKUNDKONTOKRED THEN CREATE FAKTKUNDKONTOKRED.
      ASSIGN 
      FAKTKUNDKONTOKRED.FAKTNR = FAKTPLAN.FAKTNR   
      FAKTKUNDKONTOKRED.FDELNR = FAKTKRED.FDELNR  
      FAKTKUNDKONTOKRED.VFAKTNR = FAKTKRED.VFAKTNR 
      FAKTKUNDKONTOKRED.VKREDIT = 0            
      FAKTKUNDKONTOKRED.AONR = FAKTAONR.AONR
      FAKTKUNDKONTOKRED.DELNR = FAKTAONR.DELNR                         
      FAKTKUNDKONTOKRED.KUNDKONTOID = FAKTREGLER.KUNDKONTOID 
      FAKTKUNDKONTOKRED.MOTPARTID = FAKTREGLER.MOTPARTID            
      FAKTKUNDKONTOKRED.FDATUM = TODAY + FAKTREGLER.FDAGAR
      FAKTKUNDKONTOKRED.FAKTDATUM = TODAY         
      FAKTKUNDKONTOKRED.BELOPP = FAKTKUNDKONTOKRED.BELOPP + FAKTUPPARBKRED.FAKTBELOPP.         
      RUN styrintakt_UI (INPUT TRUE,INPUT TRUE,INPUT TRUE).     
      GET NEXT BRW_UPP NO-LOCK.
   END.
END PROCEDURE.

