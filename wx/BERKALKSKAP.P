/*
               KSV Editor
    Copyright: (C) 2000-2001 Serguey Klimoff (bulkl0DD)
     Filename: BERKALKSKAP.P
      Comment: <comment>
   Parameters:
         Uses:
      Used by:
      Created: 2009.12.02 13:57 ELPAO   
     Modified: 2009.12.02 15:27 ELPAO    
     Modified: 2011.05.27 14:11 ELPAO    
     Modified: 
*/

DEFINE INPUT  PARAMETER ksvar AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER kalknr AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER omrvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE anmvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE anmvari AS INTEGER NO-UNDO.

&Scoped-define NEW NEW
&Scoped-define SHARED SHARED
{GLOBVAR2DEL1.I}

DEFINE VARIABLE offert AS LOGICAL NO-UNDO.
DEFINE VARIABLE xtypmtrl AS INTEGER NO-UNDO.
DEFINE VARIABLE monpris LIKE EBRPRIS.MONT NO-UNDO.
DEFINE VARIABLE berpris AS DECIMAL NO-UNDO.
FIND FIRST FORETAG WHERE NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.
RUN STYRFORE.P (INPUT globforetag).

FIND FIRST KALKAONR WHERE KALKAONR.KALKNR = kalknr AND KALKAONR.OMRADE = omrvar NO-LOCK NO-ERROR.
FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = kalknr AND FASTSPEC.OMRADE = omrvar NO-LOCK NO-ERROR.
FIND FIRST BEREDNING WHERE BEREDNING.AONR = KALKAONR.AONR AND BEREDNING.DELNR = KALKAONR.DELNR NO-LOCK NO-ERROR.

IF ksvar = FALSE THEN DO:
   FOR EACH HDKALK WHERE HDKALK.BERNR = BEREDNING.BERNR AND HDKALK.OMRADE = BEREDNING.OMRADE EXCLUSIVE-LOCK:   
      CREATE FASTKALK.
      BUFFER-COPY HDKALK TO FASTKALK.
      ASSIGN
      FASTKALK.TYP    = 2
      FASTKALK.KALKNR = FASTSPEC.KALKNR
      FASTKALK.OMRADE = FASTSPEC.OMRADE.
   END.
   FOR EACH BERKALK WHERE BERKALK.AONR = STRING(BEREDNING.BERNR) AND BERKALK.OMRADE = BEREDNING.OMRADE USE-INDEX OMR NO-LOCK.
      CREATE FASTKALK.
      BUFFER-COPY BERKALK TO FASTKALK.
      ASSIGN
      FASTKALK.TYP    = 2
      FASTKALK.KALKNR = FASTSPEC.KALKNR
      FASTKALK.OMRADE = FASTSPEC.OMRADE.
      
   END.
   
   FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = BEREDNING.BERNR AND KALKBEFB.OMRADE = BEREDNING.OMRADE  NO-LOCK:
      CREATE KALKBEF.
      BUFFER-COPY KALKBEFB TO KALKBEF.
      ASSIGN
      KALKBEF.KALKNR = FASTSPEC.KALKNR
      KALKBEF.OMRADE = FASTSPEC.OMRADE.  
      FIND FIRST FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR  AND FASTKALK.OMRADE = FASTSPEC.OMRADE AND
      FASTKALK.ARBKOD = KALKBEFB.ARBKOD AND FASTKALK.LOPNR = KALKBEFB.LOPNR
      EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE FASTKALK THEN DO:
         BUFFER-COPY KALKBEFB TO FASTKALK.
      END.
   END.
END.
ELSE DO:
   RUN hdkalk_UI.
   
   
   FOR EACH BERKALK WHERE BERKALK.AONR = STRING(BEREDNING.BERNR) AND BERKALK.OMRADE = BEREDNING.OMRADE USE-INDEX OMR NO-LOCK.
      FIND FIRST FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR AND 
      FASTKALK.OMRADE = FASTSPEC.OMRADE AND  FASTKALK.ARBKOD = BERKALK.ARBKOD AND FASTKALK.LOPNR = BERKALK.LOPNR
      EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE FASTKALK THEN DO:
         CREATE FASTKALK.
      END.   
      BUFFER-COPY BERKALK EXCEPT BERKALK.ANTAL BERKALK.BENAMNING TO FASTKALK.
      ASSIGN
      FASTKALK.TYP    = 2
      FASTKALK.ANTAL = FASTKALK.ANTAL + BERKALK.ANTAL  
      FASTKALK.KALKNR = FASTSPEC.KALKNR
      FASTKALK.OMRADE = FASTSPEC.OMRADE.
      anmvari = LENGTH(FASTKALK.BENAMNING).
      IF anmvari = 0 THEN FASTKALK.BENAMNING = BERKALK.BENAMNING.
      ELSE DO: 
         anmvar = TRIM(SUBSTRING(FASTKALK.BENAMNING,50,1000)).
         IF anmvari < 40 THEN anmvari = 48.
         anmvari = anmvari + 2.
         SUBSTRING(FASTKALK.BENAMNING,anmvari) = TRIM(SUBSTRING(BERKALK.BENAMNING,50,1000)).
      END.
   END.
   
   FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = BEREDNING.BERNR AND KALKBEFB.OMRADE = BEREDNING.OMRADE  NO-LOCK:
      CREATE KALKBEF.
      BUFFER-COPY KALKBEFB TO KALKBEF.
      ASSIGN
      KALKBEF.KALKNR = FASTSPEC.KALKNR
      KALKBEF.OMRADE = FASTSPEC.OMRADE.  
      FIND FIRST FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR  AND FASTKALK.OMRADE = FASTSPEC.OMRADE AND
      FASTKALK.ARBKOD = KALKBEFB.ARBKOD AND FASTKALK.LOPNR = KALKBEFB.LOPNR
      EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE FASTKALK THEN DO:
         BUFFER-COPY KALKBEFB TO FASTKALK.
      END.
   END.
   
END.

RUN kalkarstart_UI (INPUT FASTSPEC.KALKNR).
RUN rakna_UI.
PROCEDURE hdkalk_UI :
   FOR EACH HDKALK WHERE HDKALK.BERNR = BEREDNING.BERNR AND HDKALK.OMRADE = BEREDNING.OMRADE NO-LOCK:
      FIND FIRST FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR AND 
      FASTKALK.OMRADE = FASTSPEC.OMRADE AND  FASTKALK.ARBKOD = HDKALK.ARBKOD AND FASTKALK.LOPNR = HDKALK.LOPNR
      EXCLUSIVE-LOCK NO-ERROR. 
      IF NOT AVAILABLE FASTKALK THEN DO:
         CREATE FASTKALK.
      END.   
      /*
      BUFFER-COPY HDKALK EXCEPT HDKALK.ANTAL HDKALK.BENAMNING TO FASTKALK.
      */
      
      
      ASSIGN
      FASTKALK.ARBKOD    =   HDKALK.ARBKOD     
      FASTKALK.LOPNR     =   HDKALK.LOPNR      
      
      FASTKALK.ENHET     =   HDKALK.ENHET      
      FASTKALK.TYP    = 2
      FASTKALK.ANTAL = FASTKALK.ANTAL + HDKALK.ANTAL  
      FASTKALK.KALKNR = FASTSPEC.KALKNR
      FASTKALK.OMRADE = FASTSPEC.OMRADE.
      anmvari = LENGTH(FASTKALK.BENAMNING).
      IF anmvari = 0 THEN FASTKALK.BENAMNING = HDKALK.BENAMNING.
      ELSE DO: 
         anmvar = TRIM(SUBSTRING(FASTKALK.BENAMNING,50,1000)).
         IF anmvari < 40 THEN anmvari = 48.
         anmvari = anmvari + 2.
         SUBSTRING(FASTKALK.BENAMNING,anmvari) = TRIM(SUBSTRING(HDKALK.BENAMNING,50,1000)).
      END.
          
   END.
END PROCEDURE.
PROCEDURE rakna_UI :
   /*GG 2007-10-30 Om blandtyp, hämta katalogår för båda så att monpris laddas rätt vid uträkning*/
   DEFINE VARIABLE artalnum AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalsam AS INTEGER NO-UNDO.
   DEFINE VARIABLE ebrmonpris AS DECIMAL NO-UNDO.
   DEFINE VARIABLE sebrmonpris AS DECIMAL NO-UNDO.
   DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
   DEFINE VARIABLE fastkalkar AS INTEGER NO-UNDO.
   DEFINE VARIABLE bvar AS CHARACTER NO-UNDO.
   fastkalkar = FASTSPEC.KATAR.
   
   FOR EACH  FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR AND 
   FASTKALK.OMRADE = FASTSPEC.OMRADE EXCLUSIVE-LOCK:                          
      FIND FIRST LOP2 WHERE LOP2.ARBKOD = FASTKALK.ARBKOD AND 
      LOP2.LOPNR = FASTKALK.LOPNR AND LOP2.KATAR = fastkalkar USE-INDEX AR NO-LOCK NO-ERROR.               
      IF AVAILABLE LOP2 THEN DO:
         bvar = FASTKALK.BENAMNING.
         ASSIGN                                     
         FASTKALK.BENAMNING = "".
         ASSIGN 
         SUBSTRING(FASTKALK.BENAMNING,1,49) = SUBSTRING(LOP2.BENAMNING,1,49)
         SUBSTRING(FASTKALK.BENAMNING,50,1000) = SUBSTRING(bvar,50,1000)
         FASTKALK.ENHET = LOP2.ENHET            
         FASTKALK.EA = LOP2.EA
         FASTKALK.ARBETE = LOP2.ARBETE
         FASTKALK.MATERIEL = LOP2.MATERIEL
         FASTKALK.MASKINKOST = LOP2.MASKINKOST
         FASTKALK.OVRIGT = LOP2.OVRIGT
         FASTKALK.F1 = LOP2.F1
         FASTKALK.F2 = LOP2.F2
         FASTKALK.F3 = LOP2.F3
         FASTKALK.F4 = LOP2.F4
         FASTKALK.F5 = LOP2.F5
         FASTKALK.F6 = LOP2.F6
         FASTKALK.F7 = LOP2.F7
         FASTKALK.F8 = LOP2.F8
         FASTKALK.F9 = LOP2.F9
         /*KALKmatris
     fastbuff.F10 = LOP2.F10
     */
         FASTKALK.UTRUST = LOP2.UTRUST
         FASTKALK.UTRUSTKOST = LOP2.UTRUSTKOST
         FASTKALK.FAST = LOP2.FAST.
      END.
   END.
END PROCEDURE.
   

