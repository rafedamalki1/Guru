/*APKTOBS.P*/
DEFINE NEW SHARED VARIABLE fnytid AS DECIMAL FORMAT "-99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE gvisatidpermanad AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE persrec2 AS RECID NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.   
DEFINE NEW SHARED VARIABLE regstart LIKE TIDREGITAB.START NO-UNDO. 
DEFINE NEW SHARED VARIABLE regslut LIKE TIDREGITAB.SLUT NO-UNDO.
DEFINE NEW SHARED VARIABLE regvnr AS INTEGER FORMAT "999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regdagnamn AS CHARACTER FORMAT "X(3)" NO-UNDO.        
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE regmnr AS INTEGER FORMAT "99" NO-UNDO.
DEFINE NEW SHARED VARIABLE regmannamn AS CHARACTER NO-UNDO.
DEFINE NEW SHARED VARIABLE regar AS INTEGER FORMAT "99" NO-UNDO.
DEFINE NEW SHARED VARIABLE regtotalt LIKE TIDREGITAB.TOTALT NO-UNDO.      
DEFINE NEW SHARED VARIABLE bdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE avdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE nytid AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE NEW SHARED VARIABLE sekunder AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE NEW SHARED VARIABLE regstartsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE regslutsek AS INTEGER NO-UNDO.
DEFINE NEW SHARED VARIABLE frustarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE fruslutet AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffestart AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE kaffeslut AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchstarten AS DECIMAL NO-UNDO.
DEFINE NEW SHARED VARIABLE lunchslutet AS DECIMAL NO-UNDO.

DEFINE VARIABLE periodtot AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE pekodtot AS DECIMAL FORMAT "99.99" NO-UNDO.
DEFINE VARIABLE pertot AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE VARIABLE pkodtot AS INTEGER FORMAT "-9999999" NO-UNDO.
DEFINE VARIABLE difftot AS DECIMAL FORMAT "-99.99" NO-UNDO.

DEFINE VARIABLE hjstart LIKE TIDREGITAB.START NO-UNDO.  
DEFINE VARIABLE hjslut LIKE TIDREGITAB.SLUT NO-UNDO.   
DEFINE VARIABLE ehjstart LIKE TIDREGITAB.START NO-UNDO.  

DEFINE BUFFER tidbuff FOR TIDREGITAB.
DEFINE BUFFER tidbuff2 FOR TIDREGITAB.
DEFINE BUFFER tidbuff3 FOR TIDREGITAB.
&Scoped-define NEW NEW
{TIDPERS.I}

DEFINE TEMP-TABLE invartemp   
   FIELD GA LIKE ANVANDARE.ANVANDARE 
   FIELD GM AS LOGICAL 
   FIELD SK AS LOGICAL 
   FIELD TI AS RECID 
   FIELD PER AS RECID 
   FIELD PER2 AS RECID 
   FIELD MU AS LOGICAL    
   FIELD REGST LIKE TIDREGITAB.START 
   FIELD REGSU LIKE TIDREGITAB.SLUT 
   FIELD RV AS INTEGER FORMAT "999" 
   FIELD RDAG AS CHARACTER FORMAT "X(3)"         
   FIELD RD AS DATE 
   FIELD RM AS INTEGER FORMAT "99" 
   FIELD RMN AS CHARACTER  
   FIELD REGA AS INTEGER FORMAT "99" 
   FIELD RT LIKE TIDREGITAB.TOTALT       
   FIELD BD AS DATE 
   FIELD AD AS DATE 
   FIELD NY AS DECIMAL 
   FIELD SEK AS INTEGER FORMAT "-9999999" 
   FIELD RSEK AS INTEGER 
   FIELD REGS AS INTEGER 
   FIELD GL LIKE FORETAG.FORETAG. 

DEFINE TEMP-TABLE berpers 
   FIELD PERSONALKOD AS CHARACTER
   FIELD DATUM AS DATE
   FIELD DAG AS CHARACTER
   FIELD BEREDSKAP AS CHARACTER 
   FIELD BEREDsKAPSTART AS DECIMAL 
   FIELD BEREDSKAPSLUT AS DECIMAL. 
DEFINE BUFFER berpers2 FOR berpers.
DEFINE VARIABLE str AS CHARACTER FORMAT "X(90)" NO-UNDO.
{TIDUTTTNEW.I}
DEFINE QUERY tidq FOR TIDREGITAB.

DEFINE INPUT PARAMETER TABLE FOR invartemp.
DEFINE INPUT PARAMETER TABLE FOR tidpers.
DEFINE OUTPUT PARAMETER TABLE FOR tidut.
ASSIGN   str=                                                                              
"===========================================================================================================".   

FIND FIRST invartemp NO-ERROR.
ASSIGN
 
gvisatidpermanad = invartemp.GM 
skrivut = invartemp.SK   
tidtabrec = invartemp.TI   
persrec = invartemp.PER   
persrec2 = invartemp.PER2  
musz = invartemp.MU      
regstart = invartemp.REGST   
regslut = invartemp.REGSU  
regvnr = invartemp.RV   
regdagnamn = invartemp.RDAG          
regdatum = invartemp.RD   
regmnr = invartemp.RM  
regmannamn = invartemp.RMN  
regar = invartemp.REGA  
regtotalt = invartemp.RT        
bdatum = invartemp.BD  
avdatum = invartemp.AD  
nytid = invartemp.NY 
sekunder = invartemp.SEK 
regstartsek = invartemp.RSEK  
regslutsek = invartemp.REGS 
Guru.Konstanter:globforetag = invartemp.GL.

RUN huvud_UI.

   {GDPRLOGGCLIENT.I}
PROCEDURE huvud_UI :
   CREATE tidut.
   ASSIGN 
   SUBSTRING(tidut.UT,4) = "Ob- Sjukdom"   
   SUBSTRING(tidut.UT,70) = STRING(TODAY)
   SUBSTRING(tidut.UT,80) = STRING(TIME,"HH:MM:SS").
   CREATE tidut.
   ASSIGN 
   SUBSTRING(tidut.UT,4) = "=============".     
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "GKAL" THEN DO:
      CREATE tidut.
      CREATE tidut.
      ASSIGN 
      SUBSTRING(tidut.UT,4) = "OBS! Lönearterna är bytta till lönearter för ob vid sjukdom. Kontrollera gärna tidsedel!".   
      CREATE tidut.
   END.
   CREATE tidut.                        
   ASSIGN
   SUBSTRING(tidut.UT,1) = "ENHET/SIGN"
   SUBSTRING(tidut.UT,7) = "FÖRNAMN"
   SUBSTRING(tidut.UT,23) = "EFTERNAMN"   
   SUBSTRING(tidut.UT,44,8) = "DATUM   "
   SUBSTRING(tidut.UT,56) = "DAG" 
   SUBSTRING(tidut.UT,61) = "START"              
   SUBSTRING(tidut.UT,67) = "-"              
   SUBSTRING(tidut.UT,70) = "SLUT"                       
   SUBSTRING(tidut.UT,76) = "TID"
   SUBSTRING(tidut.UT,84) = "PNR".
   CREATE tidut.  
   ASSIGN tidut.UT = str.   
   FOR EACH tidpers USE-INDEX PERSONALKOD NO-LOCK:    
      Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + tidpers.PERSONALKOD.   
      EMPTY TEMP-TABLE berpers NO-ERROR. 
      ASSIGN
      persrec = tidpers.TIDPERSREC
      regdatum = bdatum. 
      FIND PERSONALTAB WHERE RECID(PERSONALTAB) = persrec NO-LOCK NO-ERROR. 
      FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
      USE-INDEX ANSTF NO-LOCK NO-ERROR.
      FIND FIRST OBTAB WHERE OBTAB.KOD = ANSTFORMTAB.KOD NO-LOCK NO-ERROR.                       
      FIND FIRST ORDARB WHERE ORDARB.ANSTALLNING = PERSONALTAB.ANSTALLNING 
      USE-INDEX ORDARB NO-LOCK NO-ERROR.
      IF AVAILABLE ORDARB THEN DO:
         sekunder = ORDARB.START1.
         RUN SEKTIM.P.
         ASSIGN
         hjstart = nytid
         ehjstart = hjstart.
         
      END.
      IF (Guru.Konstanter:globforetag = "sund"  OR Guru.Konstanter:globforetag = "SNAT" ) AND ANSTFORMTAB.KOD = "T" THEN .
      ELSE DO:      
         FOR EACH TIDREGITAB WHERE TIDREGITAB.PERSONALKOD = tidpers.PERSONALKOD AND 
         TIDREGITAB.DATUM GE bdatum AND TIDREGITAB.DATUM LE avdatum AND TIDREGITAB.TIDLOG = TRUE
         AND TIDREGITAB.AONR = "110" USE-INDEX PKOD NO-LOCK:                           
            IF ( Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" ) AND PERSONALTAB.VECKOSCHEMA = 50 THEN DO:            
               sekunder = ORDARB.STOPP1.
               RUN SEKTIM.P.
               hjslut = nytid.    
            END.
            ELSE IF ORDARB.OBKOD NE "" THEN DO:            
               IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR  Guru.Konstanter:globforetag = "LULE" THEN DO:                     
                  FIND FIRST FLEXAVT WHERE FLEXAVT.PERSONALKOD = PERSONALTAB.PERSONALKOD NO-LOCK NO-ERROR.
                  FIND FIRST FLEXREG WHERE FLEXREG.KOD = FLEXAVT.FLEXKOD NO-LOCK NO-ERROR.                  
               END.
               ELSE DO:         
                  FIND FIRST FLEXREG WHERE FLEXREG.KOD = ANSTFORMTAB.KOD NO-LOCK NO-ERROR.
               END.
               IF NOT AVAILABLE FLEXREG THEN DO:
                  IF Guru.Konstanter:globforetag = "sund" OR Guru.Konstanter:globforetag = "SNAT" THEN.
                  ELSE FIND FIRST FLEXREG WHERE FLEXREG.KOD = "" NO-LOCK NO-ERROR.
               END.      
               IF AVAILABLE FLEXREG THEN DO:
                  IF MONTH(TIDREGITAB.DATUM) > MONTH(FLEXREG.SOMMARST) AND MONTH(TIDREGITAB.DATUM) < MONTH(FLEXREG.SOMMARSL) THEN DO:
                     ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD = "TU" THEN hjstart = ehjstart.                     
                     IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.
                                          
                  END.
                  ELSE IF MONTH(TIDREGITAB.DATUM) = MONTH(FLEXREG.SOMMARSL) AND DAY(TIDREGITAB.DATUM) <= DAY(FLEXREG.SOMMARSL) THEN DO:
                     ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD = "TU" THEN hjstart = ehjstart.                         
                     IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                                                                          
                  END.
                  ELSE IF MONTH(TIDREGITAB.DATUM) = MONTH(FLEXREG.SOMMARST) AND DAY(TIDREGITAB.DATUM) >= DAY(FLEXREG.SOMMARST) THEN DO: 
                     ASSIGN hjslut = DECIMAL(ORDARB.OBKOD).
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.
                     IF Guru.Konstanter:globforetag = "SUND" AND FLEXREG.KOD = "TU" THEN hjstart = ehjstart.                     
                     IF Guru.Konstanter:globforetag = "SNAT" AND FLEXREG.KOD BEGINS "T" THEN hjstart = 7.30.                     
                                                     
                  END.
                  ELSE DO:
                     sekunder = ORDARB.STOPP1.
                     RUN SEKTIM.P.
                     hjslut = nytid.    
                  END.  
               END. 
               ELSE DO:
                  sekunder = ORDARB.STOPP1.
                  RUN SEKTIM.P.
                  hjslut = nytid.    
               END.  
            END. 
            ELSE DO:
               sekunder = ORDARB.STOPP1.
               RUN SEKTIM.P.
               hjslut = nytid.    
            END.   
            IF WEEKDAY(TIDREGITAB.DATUM) = 1 OR WEEKDAY(TIDREGITAB.DATUM) = 7 THEN DO:
               CREATE tidut.      
               ASSIGN         
               SUBSTRING(tidut.UT,1) = tidpers.PERSONALKOD
               SUBSTRING(tidut.UT,7) = tidpers.FORNAMN
               SUBSTRING(tidut.UT,23) = SUBSTRING(tidpers.EFTERNAMN,1,20)    
               SUBSTRING(tidut.UT,44) = STRING(TIDREGITAB.DATUM)              
               SUBSTRING(tidut.UT,56) = TIDREGITAB.DAG
               SUBSTRING(tidut.UT,61) = STRING(TIDREGITAB.START)              
               SUBSTRING(tidut.UT,67) = "-"              
               SUBSTRING(tidut.UT,70) = STRING(TIDREGITAB.SLUT)                       
               SUBSTRING(tidut.UT,76) = STRING(TIDREGITAB.TOTALT)
               SUBSTRING(tidut.UT,84) = TIDREGITAB.AONR.
            END. 
            ELSE IF AVAILABLE OBTAB THEN DO:  
               IF TIDREGITAB.START < hjstart OR TIDREGITAB.SLUT > hjslut THEN DO:                  
                  FIND FIRST tidbuff WHERE tidbuff.PERSONALKOD = tidpers.PERSONALKOD AND tidbuff.DATUM = TIDREGITAB.DATUM AND
                  (tidbuff.LONTILLAGG = "4105" OR tidbuff.LONTILLAGG = "4106" OR tidbuff.LONTILLAGG = "4107" OR
                  tidbuff.LONTILLAGG = "314" OR tidbuff.LONTILLAGG = "315" OR tidbuff.LONTILLAGG = "316" ) NO-LOCK NO-ERROR.
                  IF AVAILABLE tidbuff THEN DO:
                                                                     
                     CREATE tidut.      
                     ASSIGN         
                     SUBSTRING(tidut.UT,1) = tidpers.PERSONALKOD
                     SUBSTRING(tidut.UT,7) = tidpers.FORNAMN
                     SUBSTRING(tidut.UT,23) = SUBSTRING(tidpers.EFTERNAMN,1,20)    
                     SUBSTRING(tidut.UT,44) = STRING(TIDREGITAB.DATUM)              
                     SUBSTRING(tidut.UT,56) = TIDREGITAB.DAG
                     SUBSTRING(tidut.UT,61) = STRING(TIDREGITAB.START)              
                     SUBSTRING(tidut.UT,67) = "-"              
                     SUBSTRING(tidut.UT,70) = STRING(TIDREGITAB.SLUT)                       
                     SUBSTRING(tidut.UT,76) = STRING(TIDREGITAB.TOTALT)
                     SUBSTRING(tidut.UT,84) = TIDREGITAB.AONR.
                  END.   
               END.                                 
            END.
           
         END.      
      END.
   END.      
   FIND LAST tidut NO-LOCK NO-ERROR.   
END PROCEDURE.
