/*PROGRESSSTARTPDF.P*/

/******************************************************************************

  Program:      PDFglobal.i
 
******************************************************************************/
&Scoped-define NEW 


{pdf_StartInc.i}

DEFINE VARIABLE utberapph  AS HANDLE NO-UNDO.
DEFINE VARIABLE utfil      AS CHARACTER NO-UNDO.
DEFINE VARIABLE sidrakn    AS INTEGER NO-UNDO.
DEFINE VARIABLE logga      AS CHARACTER NO-UNDO.
DEFINE VARIABLE Vitems     AS INTEGER NO-UNDO.
DEFINE VARIABLE vline     AS INTEGER NO-UNDO.
DEFINE VARIABLE Vrow       AS INTEGER NO-UNDO.
DEFINE VARIABLE Vrow2       AS INTEGER NO-UNDO.
DEFINE VARIABLE Vcat-desc  AS CHARACTER EXTENT 4 FORMAT "X(40)" NO-UNDO.
DEFINE VARIABLE h       AS INTEGER NO-UNDO.
DEFINE VARIABLE w       AS INTEGER NO-UNDO.
DEFINE VARIABLE a          AS DECIMAL NO-UNDO.
DEFINE VARIABLE mtrlrubrik AS LOGICAL NO-UNDO.
DEFINE VARIABLE forsta     AS LOGICAL NO-UNDO.
DEFINE VARIABLE spann AS LOGICAL NO-UNDO.
DEFINE VARIABLE tomrad AS LOGICAL NO-UNDO.
DEFINE VARIABLE typsnyttstorlek AS DECIMAL NO-UNDO.
DEFINE VARIABLE pdfsida AS INTEGER NO-UNDO.
DEFINE TEMP-TABLE tidut
   FIELD UT AS CHARACTER FORMAT "X(132)"
   FIELD TTRECID AS RECID.
   
   
RUN tid_UI ("Materiel/upplag/konstruktion/artikel      21/06/02  12:35:35").
RUN tid_UI ("").
RUN tid_UI ("Ort.Ben ao                 :byggnr").
RUN tid_UI ("Beredare                   :ANDERS OLSSON     090/31924     070/3216903").
RUN tid_UI ("Beredning nr               :1244").
RUN tid_UI ("Område                     :GRANINGE NORD").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("---------------------------------------------------------------------------------------").
RUN tid_UI ("Upplag nr                  :1").
RUN tid_UI ("Adress                     :spiralvägen 10, 903 60 Umeå").
RUN tid_UI ("X och Y                    :123 456").

MESSAGE "First time? "   VIEW-AS ALERT-BOX
 QUESTION BUTTONS YES-NO TITLE "First or Second time" UPDATE svarpris AS LOGICAL.
IF svarpris THEN DO: 
   RUN tid_UI ("Anmärkning  First time").
   RUN tid_UI ("upplag anm").
   RUN tid_UI ("").
   RUN tid_UI ("---------------------------------------------------------------------------------------").
   RUN tid_UI ("").
   RUN tid_UI ("***************************************************************************************").
END.
ELSE DO:
   RUN tid_UI ("Anmärkning Second time").
   RUN tid_UI ("upplag anm").
   RUN tid_UI ("").
   RUN tid_UI ("***************************************************************************************").
   RUN tid_UI ("").
   RUN tid_UI ("---------------------------------------------------------------------------------------").
END.   
RUN tid_UI ("                                          Stolp nr  :23").
RUN tid_UI ("Alus 0.4 kv                               Ritningsnr. k1").
RUN tid_UI ("").
RUN tid_UI ("Upplag nr                  :1").
RUN tid_UI ("").
RUN tid_UI ("Konstruktioner             :KÄ 1          Huvudledning     :").
RUN tid_UI ("Avgrening                  :              Förankring       :").
RUN tid_UI ("Säkringslåda               :              Övrigt           :").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("E-NR       BENÄMNING                      ENH        ANTAL").
RUN tid_UI ("").
RUN tid_UI ("0012840    ALUS 4X50                      m               5").
RUN tid_UI ("0600014    0001/11 STAG SMIDD/F           st              5").
RUN tid_UI ("0600018    0001/11 STAG RAKKILAD/F        st              1").
RUN tid_UI ("0600019    0001/18 STAG RAKKILAD/F        st              1").
RUN tid_UI ("0600042    0004/22 STAG RAKKILAD/F        st              5").
RUN tid_UI ("0600076    0076 FÖRANKRING MOSS SH 184.3  st              1").
RUN tid_UI ("0601700    0170 ALUS 0,4KV /F             st              1").
RUN tid_UI ("0620852                                                   1").
RUN tid_UI ("0647220    HÄNGDON SO 99 ALUS             st              1").
RUN tid_UI ("0690080                                                   1").
RUN tid_UI ("0702001    ANSLUT SKÄRM. CSE-A 12250-01   st              7").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("KOD        BENÄMNING                      ENH       ANTAL").
RUN tid_UI ("").
RUN tid_UI ("109  12    FeAl 3x62                      km             1.000").
RUN tid_UI ("109  13    FeAl 3x99                      km             1.000").
RUN tid_UI ("109  14    LegAl 3x157                    km             1.000").
RUN tid_UI ("109  15    LegAl 3x241                    km             1.000").
RUN tid_UI ("109  24    Belagd lina 3x157              km             1.000").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("***************************************************************************************                                            $").
RUN tid_UI ("                                          Stolp nr  :4").
RUN tid_UI ("Alus 0.4 kv").
RUN tid_UI ("").
RUN tid_UI ("Upplag nr                  :1").
RUN tid_UI ("").
RUN tid_UI ("Konstruktioner             :KR 1          Huvudledning     :4x50").
RUN tid_UI ("Avgrening                  :              Förankring       :").
RUN tid_UI ("Säkringslåda               :              Övrigt           :").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("E-NR       BENÄMNING                      ENH        ANTAL").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("").
RUN tid_UI ("KOD        BENÄMNING                      ENH       ANTAL").
RUN tid_UI ("").
RUN tid_UI ("109  15    LegAl 3x241                    km             1.000").

RUN tid_UI ("109  23    Belagd lina 3x99               km             1.000").
RUN utpdf_UI.

PROCEDURE tid_UI :
   DEFINE INPUT  PARAMETER inout AS CHARACTER NO-UNDO.
   CREATE tidut.
   tidut.UT = inout.
   
END PROCEDURE.
PROCEDURE utpdf_UI :
   typsnyttstorlek = 10.
   pdfsida = 73.
   ASSIGN
   mtrlrubrik = FALSE
   logga = ?
   forsta = FALSE
   spann = FALSE
   sidrakn = 1.
   utfil = SESSION:TEMP-DIRECTORY.        
   utfil = utfil + STRING(TIME) + "Bygg.pdf".
   OS-DELETE VALUE(utfil).
   /*globsids = 73.*/
   DEFINE VARIABLE pdfsida AS INTEGER NO-UNDO.
   
   RUN startpdf_UI.
   RUN pdf_close IN h_PDFinc ("Spdf").
   RUN OPENDOC_UI (utfil,"","Acrobat.exe",NO).
END PROCEDURE.

PROCEDURE OPENDOC_UI :
 
   /*OPENDOC.p*/
   DEFINE VARIABLE hInstance AS INTEGER NO-UNDO.
   DEFINE VARIABLE cWorkDirectory AS CHARACTER NO-UNDO.
   
   DEFINE INPUT PARAMETER filnamn AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER cParams AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER cDirectory AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER lPrint AS LOGICAL NO-UNDO.
   
   
   
   /* RUN ShellExecute{&A} (0,"open","notepad.exe","c:\readme.txt","",1,OUTPUT hInstance). */
   
   /* in case parameter cDirectory contains a relative path 
      it has to be replaced by a fully-qualified path: */
    
   ASSIGN 
   FILE-INFO:FILE-NAME = cDirectory.
   IF FILE-INFO:FULL-PATHNAME > "" THEN cWorkDirectory = FILE-INFO:FULL-PATHNAME.
    
   /* try to execute the document: */
   /* INPUT (IF lPrint THEN "print":u ELSE "open":u), */
   
   RUN ShellExecuteA (0,
                     INPUT (IF lPrint THEN "print":u ELSE "open":u),
                     filnamn,
                     INPUT cParams,
                     INPUT cWorkDirectory,
                     INPUT 1,  /* normal mode */
                     OUTPUT hInstance).
   
   /* MESSAGE hinstance. */
   
   /* if no associated application, run OpenAs dialog: */
    
   IF (hInstance = 27 OR 
       hInstance = 31) 
      AND NOT lPrint THEN DO:
    
      /* Ignore cParams because cFileName is a document.
         cParams is only valid with executables */
      RUN ShellExecuteA (INPUT 0,
                         INPUT "open":u,
                         INPUT "rundll32.exe":u,
                         INPUT "shell32.dll,OpenAs_RunDLL ":u + filnamn,
                         INPUT cWorkDirectory,
                         INPUT 1,
                         OUTPUT hInstance).
   END.  /* if */
    
   /* test for error: */
    
   RUN TestErrorCode(hInstance).
   IF RETURN-VALUE > "" THEN
     MESSAGE RETURN-VALUE
       VIEW-AS ALERT-BOX ERROR BUTTON OK.
    
   /****************************************************************************/
END PROCEDURE.
PROCEDURE ShellExecuteA EXTERNAL "shell32":U :
  DEFINE INPUT PARAMETER HWND         AS LONG.
  DEFINE INPUT PARAMETER lpOperation  AS CHAR.
  DEFINE INPUT PARAMETER lpFile       AS CHAR.
  DEFINE INPUT PARAMETER lpParameters AS CHAR.
  DEFINE INPUT PARAMETER lpDirectory  AS CHAR.
  DEFINE INPUT PARAMETER nShowCmd     AS LONG.
  DEFINE RETURN PARAMETER hInstance   AS LONG.
END PROCEDURE.
 

 
PROCEDURE TestErrorCode :
   DEFINE INPUT PARAMETER iCode AS INTEGER.
   DEF VAR cTxt AS CHAR NO-UNDO.
    
   IF iCode < 0 OR iCode > 32 THEN RETURN "". /* no error */
 
   CASE iCode :
     WHEN  0 THEN cTxt = "Operativsystemet har för lite minne eller resurser.":T132.
     WHEN  2 THEN cTxt = "Filen hittades inte.":T132.
     WHEN  3 THEN cTxt = "Sökvägen hittades inte.":T132.
     WHEN  5 THEN cTxt = "Operativsystemet medgav ej access till filen.":T132.
     WHEN  8 THEN cTxt = "Det var för lite minne för att slutföra processen.":T132.
     WHEN 10 THEN cTxt = "Felaktig Windows-version":T132.
     WHEN 11 THEN cTxt = "EXE filen är felaktig (non-Win32 .EXE or error in .EXE image).":T132.
     WHEN 12 THEN cTxt = "Applikationen är framtagen för ett annat operativ system.":T132.
     WHEN 13 THEN cTxt = "Applikationen är anpassad för MS-DOS 4.0.":T132.
     WHEN 15 THEN cTxt = "Attempt to load a real-mode program.":T132.
     WHEN 16 THEN cTxt = "Attempt to load a second instance of an application with non-readonly data segments.":T132.
     WHEN 19 THEN cTxt = "Attempt to load a compressed application file.":T132.
     WHEN 20 THEN cTxt = "Dynamic-link library (DLL) file failure.":T132.
     WHEN 26 THEN cTxt = "A sharing violation occurred.":T132.
     WHEN 27 THEN cTxt = "The filename association is incomplete or invalid.":T132.
     WHEN 28 THEN cTxt = "The DDE transaction could not be completed because the request timed out.":T132.
     WHEN 29 THEN cTxt = "The DDE transaction failed.":T132.
     WHEN 30 THEN cTxt = "The DDE transaction could not be completed because other DDE transactions were being processed.":T132.
     WHEN 31 THEN cTxt = "There is no application associated with the given filename extension.":T132.
     WHEN 32 THEN cTxt = "The specified dynamic-link library was not found.":T132.
     OTHERWISE    cTxt = "Undocumented error code returned":T132.
   END.
 
   RETURN cTxt.
 
END PROCEDURE.



PROCEDURE startpdf_UI:
   DEFINE VARIABLE extravar AS CHARACTER NO-UNDO.   
   FIND FIRST tidut NO-LOCK NO-ERROR.
   IF AVAILABLE tidut THEN DO: 
      RUN pdf_new IN h_PDFinc ("Spdf",utfil).
      RUN pdf_set_LeftMargin IN h_PDFinc ("Spdf",40).
      /* Dokument Information */ 
      RUN pdf_set_info("Spdf","Author","Elpool i Umeå AB").
      RUN pdf_set_info("Spdf","Subject","Byggprotokoll").
      RUN pdf_set_info("Spdf","Title","Byggprotokoll").
      RUN pdf_set_info("Spdf","Keywords","Beredning, Byggprotokoll").
      RUN pdf_set_info("Spdf","Creator","PDFinclude").
      RUN pdf_set_info("Spdf","Producer","UTBER4PDF15.P").
      /*Skapa ny sida*/
      RUN new_page.
      tomrad = TRUE.
      FOR EACH tidut NO-LOCK:
         IF tidut.UT = ? THEN NEXT.
         /*KOMPSIDA*/
         IF SUBSTRING(tidut.UT,1,6) = "Datum:" THEN DO:
            RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
            RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            extravar = tidut.UT.
            tidut.UT = SUBSTRING(tidut.UT,1,22) + "  " + SUBSTRING(tidut.UT,43,31).       
         END.
         vline = vline + 1.
         IF mtrlrubrik = TRUE THEN DO:
            RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            mtrlrubrik = FALSE.
         END.                          
         /*KOMPSIDA*/
         IF SUBSTRING(tidut.UT,132,1) = "$" THEN DO:
         END.
         ELSE IF vline >= pdfsida THEN DO:
            RUN new_page.
         END.
         ELSE IF SUBSTRING(tidut.UT,1,5) = "*****" THEN DO:          
            RUN pdf_line IN h_PDFinc ("Spdf", pdf_LeftMargin("Spdf") , pdf_TextY("Spdf") + 8, pdf_PageWidth("Spdf") - 100 , pdf_TextY("Spdf") + 8, 2).
            RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
            RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
         END.
         ELSE IF SUBSTRING(tidut.UT,1,5) = "-----" THEN DO:
            RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
            RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            RUN pdf_line IN h_PDFinc ("Spdf", pdf_LeftMargin("Spdf") , pdf_TextY("Spdf") + 8, pdf_PageWidth("Spdf") - 100 , pdf_TextY("Spdf") + 8, 1).
         END.
         ELSE IF tidut.TTRECID > 0 AND tidut.TTRECID NE ? THEN DO:
            IF spann = FALSE THEN DO:
               RUN pdf_skip IN h_PDFinc ("Spdf").
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier-Bold",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
               RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
               RUN pdf_skip IN h_PDFinc ("Spdf").
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            END.
            ELSE DO:
               RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
               RUN pdf_skip IN h_PDFinc ("Spdf").
            END.
         END.
         ELSE IF SUBSTRING(tidut.UT,1,28) = "Grupp nr                   :" 
            OR SUBSTRING(tidut.UT,1,28) =   "Sektion/Sträcka            :"
            OR SUBSTRING(tidut.UT,1,28) =   "Ledningsdel                :" THEN DO:
            IF spann = FALSE THEN DO:
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier-Bold",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
               RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
               RUN pdf_skip IN h_PDFinc ("Spdf").
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            END.
            ELSE DO:
               RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
               RUN pdf_skip IN h_PDFinc ("Spdf").
            END.
         END.                                
             
         ELSE DO:
            /*enr*/
            IF SUBSTRING(tidut.UT,1,10) = "Enr" THEN DO:
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,1.0).
               RUN pdf_line IN h_PDFinc ("Spdf", pdf_LeftMargin("Spdf") , pdf_TextY("Spdf") + 8, pdf_PageWidth("Spdf") - 100 , pdf_TextY("Spdf") + 8, 1).
               RUN pdf_line IN h_PDFinc ("Spdf", pdf_LeftMargin("Spdf") , pdf_TextY("Spdf") - 2, pdf_PageWidth("Spdf") - 100 , pdf_TextY("Spdf") - 2, 1).
               mtrlrubrik = TRUE.
            END. 
             /* Anmärkning*/                    
            IF SUBSTRING(tidut.UT,1,10) = "Anmärkning" THEN DO:
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier-Bold",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",1.0,0.0,0.0).
            END.
           
            /*kart ref*/
            IF SUBSTRING(tidut.UT,43,8) = "Kartref."
             THEN DO:
               RUN pdf_text IN h_PDFinc ("Spdf", SUBSTRING(tidut.UT,1,42)).
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier-Bold",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",1.0,0.0,0.0).
               RUN pdf_text IN h_PDFinc ("Spdf", SUBSTRING(tidut.UT,43)).
               RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
               RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
            END.
            ELSE  RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
            RUN pdf_skip IN h_PDFinc ("Spdf").
         END.
         IF SUBSTRING(tidut.UT,1,16) = "Spann/kabellängd" THEN spann = TRUE.
         ELSE spann = FALSE.
         IF SUBSTRING(tidut.UT,1,6) = "Datum:" THEN DO:
            tidut.UT = extravar.
         END.
         IF tidut.UT NE "" THEN  tomrad = FALSE.
      END.
   END.  
END PROCEDURE.

PROCEDURE new_page.
   RUN pdf_new_page IN h_PDFinc ("Spdf").
   RUN pdf_set_LeftMargin IN h_PDFinc ("Spdf",40).
   RUN pdf_set_TopMargin IN h_PDFinc ("Spdf",40).
   /*Sätt font*/
   RUN pdf_set_font IN h_PDFinc ("Spdf","Courier",typsnyttstorlek).
   RUN pdf_text_color IN h_PDFinc ("Spdf",0.0,0.0,0.0).
   ASSIGN 
   vline = 0 
   tomrad  = TRUE 
   Vrow = pdf_PageHeight("Spdf") - pdf_TopMargin("Spdf"). 
   IF forsta = TRUE THEN DO:
      RUN pdf_text_align IN h_PDFinc ("Spdf"," Sid " + STRING(sidrakn),"CENTER",pdf_PageWidth("Spdf") - 90,pdf_PageHeight("Spdf") - 15).
      RUN pdf_skip IN h_PDFinc ("Spdf").
   END.
   /*Init. logga*/
   IF forsta = FALSE THEN DO:
      IF logga NE ? THEN DO:
         RUN pdf_load_image IN h_PDFinc ("Spdf","ProSysLogo",logga).
         h = pdf_ImageDim ("Spdf","ProSysLogo","HEIGHT").
         w = pdf_ImageDim ("Spdf","ProSysLogo","WIDTH").
         IF h > 30 THEN DO:
            a = 30 / h.
            h = a * h.
            w = a * w.            
         END.
         RUN pdf_place_image IN h_PDFinc ("Spdf","ProSysLogo",pdf_LeftMargin("Spdf"), pdf_TopMargin("Spdf"),w,h).
         RUN pdf_skipn IN h_PDFinc ("Spdf",3).
         vline = 3.
      END.
      forsta = TRUE.
   END.
   ELSE DO:
      /*Placera ut logga överst på varje sida*/
      IF logga NE ? THEN DO:
         RUN pdf_place_image IN h_PDFinc ("Spdf","ProSysLogo",pdf_LeftMargin("Spdf"), pdf_TopMargin("Spdf"),w,h).
         RUN pdf_skipn IN h_PDFinc ("Spdf",3).
         vline = 3.
      END.
      IF SUBSTRING(tidut.UT,1,5) = "*****" THEN DO:
         RUN pdf_text IN h_PDFinc ("Spdf","").
         RUN pdf_skip IN h_PDFinc ("Spdf").
      END.
      ELSE DO:
         RUN pdf_text IN h_PDFinc ("Spdf", tidut.UT).
         RUN pdf_skip IN h_PDFinc ("Spdf").
      END.
   END.
   sidrakn = sidrakn + 1.
END PROCEDURE.

   
   
  
