
/*EJKOMBBERU.P PROGRAMMET HÄMTAR MATERIEL DÄR EJ NÅGON KOMBINATION AV FÄLT ÄR UPPLAGD
ANVÄNDS INTE


*/
 
/*Anders Olsson Elpool i Umeå AB  19 jan 2018 16:14:10*/
{STARTFORAPP.I}
DEFINE VARIABLE forsta AS LOGICAL NO-UNDO.
{KONVALTEMP.I}
{KALKKAT20G.I}
{LISTMTRL.I}      
{SMTRL.I}
DEFINE INPUT PARAMETER valaonr LIKE AONRTAB.AONR NO-UNDO.
DEFINE INPUT PARAMETER valomrade LIKE AONRTAB.OMRADE NO-UNDO.
DEFINE INPUT PARAMETER datvar LIKE BERMTRL.DATUM NO-UNDO.
DEFINE INPUT PARAMETER valnum LIKE BERVAL.NUM NO-UNDO.
DEFINE INPUT PARAMETER koppmtrl AS LOGICAL NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR kon_val.
DEFINE OUTPUT PARAMETER TABLE FOR list_mtrl. 

DEFINE QUERY mtrlq FOR MTRLBER.

/*HUVUDPROGRAM*/   
   forsta = TRUE.
   FIND FIRST kon_val WHERE kon_val.NUM = valnum AND kon_val.KSKAP = FALSE 
   NO-LOCK NO-ERROR.   
   IF koppmtrl = FALSE THEN DO: 
      /*BERVALU.W*/
      FIND FIRST BERMTRL WHERE BERMTRL.AONR = valaonr AND
      BERMTRL.OMRADE = valomrade AND BERMTRL.INKOP = FALSE AND
      BERMTRL.DATUM = datvar AND BERMTRL.NUM = valnum NO-LOCK NO-ERROR.
      IF AVAILABLE BERMTRL THEN DO:
         RUN gammval_UI.
      END.
      ELSE DO:
         FOR EACH kon_val WHERE kon_val.NUM = valnum USE-INDEX NUM:
            RUN val_UI.
         END.   
      END.    
   END.
   ELSE DO:
      /*ADMIN*/
      RUN val_UI. 
   END.   
   
/*SLUT HUVUDPROGRAM*/   
   
PROCEDURE val_UI.
   IF forsta = TRUE THEN DO:
      IF koppmtrl = TRUE THEN DO:
         /*OM ENDAST KONSTRUKTIONEN MARKERAD HÄMTA DESS MATERIEL ANNARS
         HÄMTA DET MATERIEL SOM ÄR KOPPLAT TILL VALET. 
         GÄLLER VID ADMINISTRATION*/
         IF kon_val.F2 = " " AND kon_val.F3 = " " AND
         kon_val.F4 = " " AND kon_val.F5 = " " AND kon_val.F6 = " " THEN DO:
            OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
            MTRLBER.F1 = "" AND MTRLBER.F2 = " " AND MTRLBER.F3 = " " AND
            MTRLBER.F4 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
            GET FIRST mtrlq NO-LOCK.
            DO WHILE AVAILABLE(MTRLBER):
               RUN skapa_UI.
               GET NEXT mtrlq NO-LOCK. 
            END.      
            CLOSE QUERY mtrlq.
            forsta = FALSE.
         END.
      END.
      ELSE DO:   
         /*HÄMTA MATERIELET SOM LIGGER DIREKT PÅ KONSTRUKTIONEN ENDAST EN GÅNG*/
         OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
         MTRLBER.F1 = "" AND MTRLBER.F2 = " " AND MTRLBER.F3 = " " AND
         MTRLBER.F4 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
         GET FIRST mtrlq NO-LOCK.
         DO WHILE AVAILABLE(MTRLBER):
            RUN skapa_UI.
            GET NEXT mtrlq NO-LOCK. 
         END.      
         CLOSE QUERY mtrlq.
         forsta = FALSE.
      END.   
   END.
   IF kon_val.F2 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
      MTRLBER.F1 = kon_val.F2 AND MTRLBER.F2 = " " AND MTRLBER.F3 = " " AND
      MTRLBER.F4 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.     
   IF kon_val.F3 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
      MTRLBER.F2 = kon_val.F3 AND MTRLBER.F1 = " " AND MTRLBER.F3 = " " AND
      MTRLBER.F4 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF kon_val.F4 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
      MTRLBER.F3 = kon_val.F4 AND MTRLBER.F1 = " " AND MTRLBER.F2 = " " AND
      MTRLBER.F4 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF kon_val.F5 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
      MTRLBER.F4 = kon_val.F5 AND MTRLBER.F1 = " " AND MTRLBER.F2 = " " AND
      MTRLBER.F3 = " " AND MTRLBER.F5 = " " USE-INDEX KOD NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.   
   IF kon_val.F6 NE "" THEN DO: 
      OPEN QUERY mtrlq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = kon_val.F1 AND
      MTRLBER.F5 = kon_val.F6 AND MTRLBER.F1 = " " AND MTRLBER.F2 = " " AND
      MTRLBER.F3 = " " AND MTRLBER.F4 = " " USE-INDEX KOD NO-LOCK. 
      GET FIRST mtrlq NO-LOCK.
      DO WHILE AVAILABLE(MTRLBER):
         RUN skapa_UI.
         GET NEXT mtrlq NO-LOCK. 
      END.
      CLOSE QUERY mtrlq.      
   END.      
END PROCEDURE.  
   
PROCEDURE gammval_UI : 
   FIND FIRST PARSTOLP NO-LOCK NO-ERROR.
   FOR EACH BERMTRL WHERE BERMTRL.AONR = valaonr AND
   BERMTRL.OMRADE = valomrade AND BERMTRL.INKOP = FALSE AND
   BERMTRL.DATUM = datvar AND BERMTRL.NUM = valnum NO-LOCK:
      CREATE list_mtrl.
      BUFFER-COPY BERMTRL TO list_mtrl.
      list_mtrl.ENHET = LC(list_mtrl.ENHET).
      IF list_mtrl.PAR > 0 THEN DO:
         IF list_mtrl.PAR = 1 THEN list_mtrl.PAR2 = PARSTOLP.A.
         ELSE IF list_mtrl.PAR = 2 THEN list_mtrl.PAR2 = PARSTOLP.B.
         ELSE list_mtrl.PAR2 = PARSTOLP.C.
      END.      
   END.      
END PROCEDURE.  
PROCEDURE skapa_UI : 
   IF koppmtrl = FALSE THEN DO:
      IF kon_val.GRUPP = 0 THEN DO:
         FIND FIRST list_mtrl WHERE list_mtrl.ENR = MTRLBER.ENR AND
         list_mtrl.LEVKOD = MTRLBER.LEVKOD AND list_mtrl.NUM = kon_val.NUM
         AND list_mtrl.SKAPNUM = kon_val.SKAPNUM NO-LOCK NO-ERROR.
      END.
      ELSE DO:
         FIND FIRST list_mtrl WHERE list_mtrl.ENR = MTRLBER.ENR AND
         list_mtrl.LEVKOD = MTRLBER.LEVKOD AND list_mtrl.NUM = kon_val.NUM
         NO-LOCK NO-ERROR.
      END.   
      IF NOT AVAILABLE list_mtrl THEN DO:
         CREATE list_mtrl.
         BUFFER-COPY MTRLBER TO list_mtrl.
         ASSIGN 
         list_mtrl.ENHET = LC(list_mtrl.ENHET)
         list_mtrl.NUM = kon_val.NUM
         list_mtrl.SKAPNUM = kon_val.SKAPNUM.        
      END.
      ELSE DO:
         list_mtrl.ANTAL = list_mtrl.ANTAL + MTRLBER.ANTAL.   
      END.   
   END.
   ELSE DO:
      CREATE spec_mtrl. 
      ASSIGN
      spec_mtrl.ENR = MTRLBER.ENR
      spec_mtrl.BENAMNING = MTRLBER.BENAMNING
      spec_mtrl.ENHET = MTRLBER.ENHET
      spec_mtrl.BERKVANT = MTRLBER.ANTAL
      spec_mtrl.NPRIS = MTRLBER.PRIS          
      spec_mtrl.LEV = MTRLBER.LEVKOD
      spec_mtrl.MARK = TRUE
      spec_mtrl.LINKAB = MTRLBER.LINKAB
      spec_mtrl.MODUL = MTRLBER.MODUL
      spec_mtrl.TYPBER = MTRLBER.TYPBER
      spec_mtrl.DIAMETER = MTRLBER.DIAMETER
      spec_mtrl.SATS = MTRLBER.SATS.                   
   END.   
END PROCEDURE.      
