/*EXUTAN.P*/

         
         

DEFINE VARIABLE felexcel AS LOGICAL NO-UNDO.
DEFINE VARIABLE markag AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader AS INTEGER NO-UNDO.
DEFINE VARIABLE extrarader2 AS INTEGER NO-UNDO.
DEFINE VARIABLE extram AS INTEGER NO-UNDO.
DEFINE VARIABLE emg AS INTEGER NO-UNDO.
DEFINE VARIABLE uColumn  AS INTEGER INITIAL 0.
DEFINE VARIABLE fnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE link AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytcol AS LOGICAL NO-UNDO.
DEFINE VARIABLE bytacol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytccol AS CHARACTER NO-UNDO.
DEFINE VARIABLE bytgcol AS CHARACTER NO-UNDO.
DEFINE VARIABLE radrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE vman AS CHARACTER NO-UNDO.
DEFINE VARIABLE fastvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE lelitt AS CHARACTER NO-UNDO.
DEFINE VARIABLE pnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE pled AS CHARACTER NO-UNDO.
DEFINE VARIABLE fastrakn AS INTEGER NO-UNDO.
DEFINE VARIABLE strad AS INTEGER NO-UNDO.
DEFINE VARIABLE slrad AS INTEGER NO-UNDO.
DEFINE VARIABLE bgfarg AS INTEGER NO-UNDO.
DEFINE VARIABLE bgfarg2 AS INTEGER NO-UNDO.
DEFINE VARIABLE sidvar AS INTEGER NO-UNDO.
DEFINE VARIABLE antflik AS INTEGER NO-UNDO.
DEFINE VARIABLE hjantflik AS INTEGER NO-UNDO.
DEFINE VARIABLE bilnamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE utanord AS DATE NO-UNDO.
DEFINE VARIABLE unamn AS CHARACTER NO-UNDO.
DEFINE VARIABLE attest AS CHARACTER NO-UNDO.
DEFINE VARIABLE pn  AS CHARACTER NO-UNDO.

 
DEFINE TEMP-TABLE uppfoltemp   
   FIELD FORETAG AS CHARACTER
   FIELD ANVANDARE AS CHARACTER  
   FIELD ALLAMA AS LOGICAL
   FIELD VALVARD AS CHARACTER
   FIELD FORSTA AS LOGICAL
   FIELD STAMP AS LOGICAL.  
{TIDUTTT.I}
{FASTFORTEMP.I}
/*DEFINE TEMP-TABLE fastfortemp
   FIELD VARDNR AS INTEGER                   
   FIELD MARKNR AS INTEGER                   
   FIELD PERSONNUMMER AS CHARACTER           
   FIELD PNR2 AS CHARACTER                   
   FIELD MARKAGARE AS CHARACTER
   FIELD GATUADRESS AS CHARACTER 
   FIELD POSTNUMMER AS CHARACTER 
   FIELD POSTADRESS AS CHARACTER
   FIELD BETECKNING AS CHARACTER  
   FIELD PROCENT AS INTEGER 
   FIELD KOMMUN AS CHARACTER 
   FIELD SOCKEN AS CHARACTER 
   FIELD PAKER AS CHARACTER 
   FIELD VAKER AS CHARACTER 
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD ANAMN AS CHARACTER 
   FIELD AADRESS AS CHARACTER 
   FIELD APONR AS CHARACTER 
   FIELD APADRESS AS CHARACTER 
   FIELD APERNR AS CHARACTER 
   FIELD ORDNING AS INTEGER      
   FIELD MARKREC AS RECID
   FIELD TELEFON AS CHARACTER
   FIELD TELEFON2 AS CHARACTER
   FIELD MOBIL AS CHARACTER
   FIELD EPOST AS CHARACTER
   FIELD ATELEFON AS CHARACTER
   FIELD ATELEFON2 AS CHARACTER
   FIELD AMOBIL AS CHARACTER
   FIELD AEPOST AS CHARACTER
   FIELD CHE1 AS CHARACTER
   FIELD CHE2 AS CHARACTER
   FIELD INTE1 AS INTEGER
   FIELD INTE2 AS INTEGER
   INDEX MARKNR IS PRIMARY MARKNR ASCENDING
   INDEX ORDNING ORDNING.*/        
{SUMTEMP.I}
{MAGA.I}
/*DEFINE TEMP-TABLE maga                       
   FIELD VARDNR AS INTEGER                   
   FIELD MARKNR AS INTEGER                   
   FIELD PERSONNUMMER AS CHARACTER           
   FIELD PNR2 AS CHARACTER                   
   FIELD MARKAGARE AS CHARACTER              
   FIELD GATUADRESS AS CHARACTER             
   FIELD POSTNUMMER AS CHARACTER             
   FIELD POSTADRESS AS CHARACTER             
   FIELD BETECKNING AS CHARACTER             
   FIELD PROCENT AS INTEGER                  
   FIELD ANAMN AS CHARACTER                  
   FIELD AADRESS AS CHARACTER                
   FIELD APONR AS CHARACTER                  
   FIELD APADRESS AS CHARACTER               
   FIELD APERNR AS CHARACTER 
   FIELD ORDNING AS INTEGER
   FIELD MARKREC AS RECID                    
   INDEX MARKNR IS PRIMARY MARKNR ASCENDING
   INDEX ORDN ORDNING ASCENDING.*/
DEFINE TEMP-TABLE blandnamntemp NO-UNDO
   FIELD NAMN AS CHARACTER.

{FASTEXTRA.I}        
DEFINE VARIABLE kommando AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE kommando2 AS CHARACTER FORMAT "X(20)" NO-UNDO.
DEFINE VARIABLE chExcelApplication      AS COM-HANDLE.
DEFINE VARIABLE chWorkbook              AS COM-HANDLE.
DEFINE VARIABLE chWorksheet             AS COM-HANDLE.
/*DEFINE VARIABLE chChart                 AS COM-HANDLE.*/
DEFINE VARIABLE chWorksheetRange        AS COM-HANDLE.
DEFINE VARIABLE chCell                  AS COM-HANDLE NO-UNDO.
DEFINE VARIABLE iCount                  AS INTEGER.
DEFINE VARIABLE iIndex                  AS INTEGER.
DEFINE VARIABLE iMonth                  AS INTEGER.
DEFINE VARIABLE dAnnualQuota            AS DECIMAL.
DEFINE VARIABLE dTotalSalesAmount       AS DECIMAL.
DEFINE VARIABLE iColumn                 AS INTEGER INITIAL 0.
DEFINE VARIABLE cColumn                 AS CHARACTER.
DEFINE VARIABLE cRange                  AS CHARACTER.
DEFINE VARIABLE radnrS                  AS CHARACTER.
DEFINE VARIABLE pristext                AS CHARACTER.
DEFINE VARIABLE valvardnr AS INTEGER NO-UNDO.
DEFINE VARIABLE omravd AS INTEGER NO-UNDO.
DEFINE VARIABLE aovar AS CHARACTER NO-UNDO.
DEFINE VARIABLE delnrvar AS INTEGER NO-UNDO.
DEFINE VARIABLE ortvar AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fkommun AS CHARACTER NO-UNDO.   
DEFINE VARIABLE fvaker AS CHARACTER NO-UNDO.   
DEFINE VARIABLE textvar AS CHARACTER NO-UNDO.
DEFINE VARIABLE sumfast AS INTEGER NO-UNDO.
DEFINE VARIABLE sumfasttot AS INTEGER NO-UNDO.
DEFINE VARIABLE skprotapph AS HANDLE NO-UNDO.

DEFINE INPUT PARAMETER ponr AS CHARACTER FORMAT "X(12)" NO-UNDO.
DEFINE INPUT PARAMETER vart AS INTEGER NO-UNDO.
/*{EGENBEN.I}*/


{GLOBVAR2DEL1.I}
&Scoped-define SHARED SHARED  
{MARKVAL.I}                         
&SCOPED-DEFINE NEW NEW
&SCOPED-DEFINE SHARED SHARED
{BLOB.I}
DEFINE VARIABLE bloblog AS LOGICAL NO-UNDO.
DEFINE VARIABLE blobproch AS HANDLE NO-UNDO.
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{EXTRADATA.I}
DEFINE BUFFER markvalbuff FOR markval.
DEFINE BUFFER fastfbuff FOR fastfortemp.


/*sammanfoga celler i excel borde göras för samma fastighet : MergeCells = True 
XEXCELBLAD.P kommentar till cell  chWorkSheet:Range(cRange):addcomment("Det här är en kommentar").   */
EMPTY TEMP-TABLE fastfortemp NO-ERROR. 
IF Guru.Konstanter:appcon THEN DO:
   RUN EXTRADATAHMT.P PERSISTENT SET edataapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
  RUN EXTRADATAHMT.P PERSISTENT SET edataapph.  
END.
IF Guru.Konstanter:appcon THEN DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
END.
ELSE DO:
   RUN SKAPPROTOU7.P PERSISTENT SET skprotapph.
END.
FIND FIRST markval NO-LOCK NO-ERROR.  
IF Guru.Konstanter:appcon THEN DO:                           
   RUN EXFASTFORAPPN2.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT 
   (INPUT TABLE markval,OUTPUT TABLE fastfortemp,OUTPUT ortvar, OUTPUT vman).
END.
ELSE DO:
   RUN EXFASTFORAPPN2.P 
   (INPUT TABLE markval,OUTPUT TABLE fastfortemp,OUTPUT ortvar, OUTPUT vman).
END.   
EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
CREATE inextradatatemp.          
ASSIGN
inextradatatemp.PROGRAM = "NATPROJ"                   
inextradatatemp.HUVUDCH = ponr.                    
RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
FIND FIRST extradatatemp NO-LOCK NO-ERROR.
IF AVAILABLE extradatatemp THEN DO:      
   ASSIGN       
   utanord = extradatatemp.SOKDATE[1] 
   unamn = extradatatemp.SOKCHAR[6] 
   attest = extradatatemp.SOKCHAR[7]
   pn = extradatatemp.SOKCHAR[8]. 
   

END.   


IF vart = 6  THEN DO:    
   fnamn = "Utanordvatt.xls".
   
END.
IF Guru.Konstanter:appcon THEN RUN FINNSTABELL.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT "BLOBINFO", OUTPUT bloblog).
ELSE RUN FINNSTABELL.P (INPUT "BLOBINFO", OUTPUT bloblog).
IF bloblog = TRUE THEN DO:
   {FINNSDYNBLOB.I}
   DEFINE VARIABLE resid AS INTEGER NO-UNDO.   
   RUN blobfil_UI IN blobproch (INPUT fnamn, OUTPUT resid).   
   IF resid = ? THEN DO:
      kommando = SEARCH(fnamn).     
   END.
   ELSE DO:
      FIND FIRST blobinfotemp WHERE blobinfotemp.ID = resid NO-LOCK NO-ERROR.
      RUN blobopen_UI IN blobproch (INPUT blobinfotemp.FILNAMN, OUTPUT kommando).     
   END.
   RUN deleteproc_UI IN blobproch.
END.
ELSE kommando = SEARCH(fnamn).   
IF kommando = ? THEN DO:
   MESSAGE "Hittade inte " fnamn VIEW-AS ALERT-BOX.
   RETURN.       
END.  
kommando2 = SESSION:TEMP-DIRECTORY + Guru.Konstanter:globanv + "\".
{SESSIONTEMPDIR.I}
IF SESSION:CLIENT-TYPE = "WEBCLIENT" THEN kommando2 = webclienttempdir.
OS-CREATE-DIR VALUE(kommando2) NO-ERROR.
IF Guru.GlobalaVariabler:plusaonr = "" OR Guru.GlobalaVariabler:plusaonr = ? THEN DO:
   kommando2 = kommando2 + fnamn.
END.
ELSE DO:
   kommando2 = kommando2 + TRIM (Guru.GlobalaVariabler:plusaonr) + TRIM(STRING(Guru.GlobalaVariabler:plusdnr,Guru.Konstanter:varforetypchar[1])) + fnamn.
END.

OS-COPY VALUE(kommando) VALUE(kommando2).
kommando = kommando2.

   CREATE "Excel.Application" chExcelApplication.
   chExcelApplication:Visible = TRUE.
   
   
   {OPENEXCEL.I}
   chWorkbook = chExcelApplication:Workbooks:OPEN(kommando).
   DEBUGGER:SET-BREAK().
   FOR EACH fastfortemp :
      FIND FIRST fastfbuff WHERE fastfbuff.BETECKNING = fastfortemp.BETECKNING AND fastfbuff.MARKNR NE fastfortemp.MARKNR 
      AND fastfbuff.GATUADRESS = fastfortemp.GATUADRESS  NO-ERROR.
      IF AVAILABLE fastfbuff AND fastfbuff.GATUADRESS NE "" AND  fastfbuff.INTE1 = 1  AND fastfbuff.INTE2 = 2  THEN DO:
         ASSIGN
         fastfortemp.MARKAGARE = fastfortemp.MARKAGARE + " " + fastfbuff.MARKAGARE
         fastfortemp.INTE1 = 1 fastfortemp.INTE2 = 1.         
         DELETE fastfbuff.
      END.
   END.
   FOR EACH fastfortemp :
      FIND FIRST fastfbuff WHERE fastfbuff.BETECKNING = fastfortemp.BETECKNING AND fastfbuff.MARKNR = fastfortemp.MARKNR AND fastfbuff.VARDNR NE fastfortemp.VARDNR  NO-ERROR.
      IF AVAILABLE fastfbuff THEN DO:
         /* om samma fastighet förekommer på flera delnr ska fastigheten bara ut 1 gång , men med hela summan*/
         DELETE fastfortemp.
      END.   
   END.
   
   FOR EACH fastfortemp :
      antflik = antflik + 1.         
   END.
   hjantflik = 2.
   IF antflik > 1 THEN DO:
      REPEAT:         
         IF hjantflik > antflik THEN LEAVE.            
         sidvar = hjantflik - 1.
         chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
         chWorkSheet:COPY(,chWorkSheet) NO-ERROR.            
         hjantflik = hjantflik + 1.
         {EXCELFEL2.I}
      END.
   END.   
   


   bgfarg = 36.
   IF globforetag = "PICA"  OR globforetag = "SWEO" OR globforetag = "REJI" OR globforetag = "ELPC" OR globforetag = "SKOK" OR globforetag = "JSBF" OR globforetag = "TECT"  OR globforetag = "ATS" OR globforetag = "elpa" THEN DO:   
      EMPTY TEMP-TABLE fastextra NO-ERROR. 
      /*bgfarg = 36.*/
      FOR EACH fastfortemp NO-LOCK:
         FIND FIRST fastextra WHERE fastextra.BETECKNING = fastfortemp.BETECKNING NO-LOCK NO-ERROR.
         IF NOT AVAILABLE fastextra THEN DO:
            CREATE fastextra.
            ASSIGN
            fastextra.VARDNR = fastfortemp.VARDNR
            fastextra.BETECKNING = fastfortemp.BETECKNING.
         END.
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
         EMPTY TEMP-TABLE extradatatemp NO-ERROR.
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "VARDFAST"     
         inextradatatemp.HUVUDINT = fastfortemp.VARDNR
         inextradatatemp.HUVUDCH = fastfortemp.BETECKNING.         
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         FIND FIRST extradatatemp NO-LOCK NO-ERROR.
         IF AVAILABLE extradatatemp THEN DO:      
            ASSIGN               
            fastextra.CH1 = extradatatemp.SOKCH[1]
            fastextra.CH2 = extradatatemp.SOKCH[2]
            fastextra.CH3 = extradatatemp.SOKCH[3]
            fastextra.CH4 = extradatatemp.SOKCH[4]
            fastextra.CH5 = extradatatemp.SOKCH[5]
            fastextra.CH6 = extradatatemp.SOKCH[6]
            fastextra.CH7 = extradatatemp.SOKCH[7]
            fastextra.CH8 = extradatatemp.SOKCH[8]
            fastextra.CH9 = extradatatemp.SOKCH[9]
            fastextra.CH10 = extradatatemp.SOKCH[10].         
         END.         
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
         EMPTY TEMP-TABLE extradatatemp NO-ERROR.
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "VARDFAST2"     
         inextradatatemp.HUVUDINT = fastfortemp.VARDNR
         inextradatatemp.HUVUDCH = fastfortemp.BETECKNING.
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         FIND FIRST extradatatemp NO-LOCK NO-ERROR.
         IF AVAILABLE extradatatemp THEN DO:      
            ASSIGN
            fastextra.CH11 = extradatatemp.SOKCH[1]         
            fastextra.LG1 = extradatatemp.SOKLOG[1]        
            fastextra.LG2 = extradatatemp.SOKLOG[2]
            fastextra.INT1 = extradatatemp.SOKINT[1]        
            fastextra.INT2 = extradatatemp.SOKINT[2]
            fastextra.INT3 = extradatatemp.SOKINT[3].
         END.
      END.            
   END.
   EMPTY TEMP-TABLE sumtemp NO-ERROR. 
   CREATE uppfoltemp.
   ASSIGN
   uppfoltemp.FORETAG = globforetag   
   uppfoltemp.ALLAMA = FALSE
   uppfoltemp.VALVARD = ""
   uppfoltemp.FORSTA = TRUE
   uppfoltemp.STAMP = FALSE.         
   FIND FIRST fastfortemp USE-INDEX ORDNING NO-LOCK NO-ERROR.
   FIND FIRST markval WHERE markval.BETECKNING = fastfortemp.BETECKNING NO-LOCK NO-ERROR.  
   IF AVAILABLE markval THEN DO:                  
      RUN markupp_UI IN skprotapph
      (INPUT "" ,INPUT markval.BETECKNING,INPUT markval.MARKREC,INPUT TABLE uppfoltemp,INPUT TABLE markval,INPUT TABLE maga,OUTPUT TABLE sumtemp).      
   END.

   sidvar = 1.
   /*start*/
   
   FOR EACH fastfortemp USE-INDEX ORDNING NO-LOCK.
      
      chWorkSheet = chExcelApplication:Sheets:Item(sidvar) NO-ERROR.
      bilnamn = fastfortemp.BETECKNING .          
      bilnamn = REPLACE(bilnamn,":"," ").
      bilnamn = REPLACE(bilnamn,"/"," ").   
      RUN bladnamn_UI (INPUT-OUTPUT bilnamn).
      chWorkSheet:Name =  bilnamn NO-ERROR.         
      IF utanord NE ? THEN DO:
         ASSIGN
         iColumn = 23
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT STRING(utanord,"9999-99-99")).
         {EXCELFEL2.I}
      END.   
      IF unamn NE "" THEN DO:
         ASSIGN
         iColumn = 26
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT "Utfärdare: " + unamn).         
         {EXCELFEL2.I}
      END.         
      IF attest NE "" THEN DO:
         ASSIGN
         iColumn = 26
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT "Behörig chef: " + attest).       
         {EXCELFEL2.I}
      END.   
      IF pn NE "" THEN DO:
         ASSIGN
         iColumn = 44
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT pn).       
         {EXCELFEL2.I}
         ASSIGN
         iColumn = 46
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT pn).       
         {EXCELFEL2.I}
        /* ASSIGN
         iColumn = 48
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 10,INPUT pn).                
         {EXCELFEL2.I}*/
      END.   
      
      IF fastfortemp.BETECKNING NE "" THEN DO:
         ASSIGN
         iColumn = 13
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 12,INPUT fastfortemp.BETECKNING).                         
         {EXCELFEL2.I}
      END.   
      IF fastfortemp.MARKAGARE NE "" THEN DO:
         ASSIGN
         iColumn = 31
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 14,INPUT fastfortemp.MARKAGARE).                                  
         {EXCELFEL2.I}
      END.   
      IF fastfortemp.GATUADRESS NE "" THEN DO:
         ASSIGN
         iColumn = 33
         cColumn = STRING(iColumn)
         cRange = "A" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 14,INPUT fastfortemp.GATUADRESS).                                           
         {EXCELFEL2.I}
      END.   
      IF fastfortemp.POSTADRESS NE "" THEN DO:
         ASSIGN
         iColumn = 33
         cColumn = STRING(iColumn)
         cRange = "H" + cColumn.
         RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 14,INPUT STRING(fastfortemp.POSTNUMMER,"999 99") + " " + fastfortemp.POSTADRESS).                                           
         {EXCELFEL2.I}
      END.   
      
      ASSIGN
      sumfast = 0
      sumfasttot = 0.
      FIND FIRST sumtemp WHERE sumtemp.BETECKNING = fastfortemp.BETECKNING NO-LOCK NO-ERROR.
      IF AVAILABLE sumtemp THEN DO:                     
         IF AVAILABLE fastfortemp THEN DO:
            IF fastfortemp.INTE2 = 0 OR fastfortemp.INTE1 = 0 THEN sumfast = sumtemp.SUMMA. 
            ELSE sumfast = sumtemp.SUMMA * fastfortemp.INTE1 / fastfortemp.INTE2 .                  
         END.
         ELSE sumfast = sumtemp.SUMMA. 
         sumfasttot = sumtemp.SUMMA.    
         FIND FIRST fastextra WHERE fastextra.BETECKNING = fastfortemp.BETECKNING NO-ERROR.   
         IF AVAILABLE fastextra THEN DO:
            ASSIGN
            iColumn = 17
            cColumn = STRING(iColumn)
            cRange = "I" + cColumn.
            IF fastextra.CH5 NE "" THEN RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 12,INPUT STRING(fastextra.CH5)).   
            ELSE RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 12,INPUT STRING(sumfast)).                                                    
            {EXCELFEL2.I}
            ASSIGN
            iColumn = 44
            cColumn = STRING(iColumn)
            cRange = "J" + cColumn.
            /*IF fastextra.CH5 NE "" THEN chWorkSheet:Range(cRange):Value = STRING(fastextra.CH5) NO-ERROR.               
            ELSE chWorkSheet:Range(cRange):Value = STRING(sumfast) NO-ERROR.               */
            IF fastextra.CH5 NE "" THEN RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 10,INPUT STRING(fastextra.CH5)).                                           
            ELSE RUN utexcel_UI (INPUT "Times New Roman",TRUE,INPUT 10,INPUT STRING(sumfast)).                                           
            {EXCELFEL2.I}
         END.
         FIND FIRST fastextra WHERE fastextra.BETECKNING = fastfortemp.BETECKNING AND fastextra.MARKNR = 0 NO-ERROR.   
         IF AVAILABLE fastextra THEN DO:
            ASSIGN
            iColumn = 35
            cColumn = STRING(iColumn)
            cRange = "I" + cColumn.
            RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 12,INPUT fastextra.CH7).                                           
            {EXCELFEL2.I}
            ASSIGN
            iColumn = 35
            cColumn = STRING(iColumn)
            cRange = "F" + cColumn.
            RUN utexcel_UI (INPUT "Times New Roman",FALSE,INPUT 12,INPUT fastextra.CH8).                                           
            {EXCELFEL2.I}
            ASSIGN
            fastextra.MARKNR = 1.
            /* lägg bara ut bankkonto på första utanordningsunderlaget*/
         END.
      END.         

      RELEASE OBJECT chWorksheet NO-ERROR. 
      sidvar = sidvar + 1.
   END.
   
   RELEASE OBJECT chWorksheetRange NO-ERROR.
   RELEASE OBJECT chCell NO-ERROR.
   RELEASE OBJECT chWorksheet NO-ERROR.  
   RELEASE OBJECT chWorkbook NO-ERROR.
   RELEASE OBJECT chExcelApplication NO-ERROR.  
    
   IF VALID-HANDLE(blobproch) THEN DELETE PROCEDURE blobproch NO-ERROR.   
   IF VALID-HANDLE(skprotapph) THEN DELETE PROCEDURE skprotapph.
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.

   {EXCELFEL.I}   
   



PROCEDURE bladnamn_UI :
   DEFINE INPUT-OUTPUT PARAMETER inblad AS CHARACTER NO-UNDO.
   DEFINE VARIABLE i AS INTEGER NO-UNDO.
   DEFINE VARIABLE orgblad AS CHARACTER NO-UNDO.
   orgblad = inblad.
   i = 1.
   REPEAT:
      FIND FIRST blandnamntemp WHERE blandnamntemp.NAMN = inblad NO-LOCK NO-ERROR.
      IF NOT AVAILABLE blandnamntemp THEN DO:
         CREATE blandnamntemp.
         blandnamntemp.NAMN = inblad.
         LEAVE.
      END.
      i = i + 1.
      inblad = orgblad + " (" + STRING(i) + ")".  
   END.
END PROCEDURE.

PROCEDURE utexcel_UI :
   DEFINE INPUT PARAMETER typsnitt AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varbold AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER storlek AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER varde AS CHARACTER NO-UNDO.
   
   IF varde = "" THEN RETURN.
   IF varde = ? THEN RETURN.
   ASSIGN
   chWorkSheet:Range(cRange):Font:NAME = typsnitt NO-ERROR.
   chWorkSheet:Range(cRange):FONT:Bold = varbold NO-ERROR.
   chWorkSheet:Range(cRange):Font:SIZE = storlek  NO-ERROR.
   chWorkSheet:Range(cRange):Value = varde NO-ERROR.  
   {EXCELFEL.I}
END PROCEDURE.
