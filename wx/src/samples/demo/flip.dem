/************************************************************************************
        PROCEDURE: flip.dem

        PURPOSE:   Demonstration program for "flip" tool

        SYNTAX:    "RUN samples/demo/flip.dem"

        REMARKS:   This program shows some samples of the tools
                   abilities and then allows the user to try some
                   on his/her own.

        PARAMETERS:NONE

        AUTHORS:   Progress Consulting
        DATE:      March 1993

        LAST INSPECTED:
        INSPECTED BY:

 ************************************************************************************/
 /* Copyright(c) PROGRESS SOFTWARE CORPORATION, 1993 - All Rights Reserved.            */

 /*Code_Start*/
 
/********
   Flip name so that first name is first and last name is last.
   Flip the name in INPUT in-name and place the result in INPUT out-name.
   Flip first at ";", then try ",", and if all else fails look for a space.

Requires: DEFINE VARIABLE i AS INTEGER NO-UNDO. /* no-undo is optional */
********/

/*********
This is a summary of the rules that "flip.p" uses to flip names.

When this routine is called, the first word in the name is moved
to the end of the name.  This works in the following way:

  The computer first searches for a semicolon ";".
  If present, the name is flipped at that point.
  If not, but a comma "," is, then the name is flipped there.
  Otherwise, it flips at the first space in the name.

Here are some examples:

  Wright, Steven         flips to    Steven Wright
  Wright Jr., Richard    flips to    Richard Wright Jr.
  Wright Steven          flips to    Steven Wright
  Wright Jr. Richard     flips to    Jr. Richard Wright (oops)

A good use for the semicolon is in the case of a corporation, when the
company name begins with a "The" but you do not want to have to find it by
typing "The ...," as in the following example:

  Greasy Spoon, Inc.; The    flips to    The Greasy Spoon, Inc.

The flipping feature allows "Doe, John" to be printed as "John Doe" on any
correspondance.  It is recommended that an additional variable be added to
the client record which indicates whether or not the name should in fact be
flipped.
********/

DEFINE VARIABLE in-name  AS CHAR FORMAT "x(30)" NO-UNDO.
DEFINE VARIABLE out-name AS CHAR FORMAT "x(30)" NO-UNDO.
DEFINE VARIABLE loop     AS INT                 NO-UNDO.
DEFINE VARIABLE samples  AS CHAR VIEW-AS EDITOR SIZE 70 BY 10 
                            SCROLLBAR-VERTICAL.
DEFINE VARIABLE in-sample AS CHAR FORMAT "x(30)" EXTENT 5 NO-UNDO
  INIT ["Bowl, The Super",
        "Flinstones, Fred and Wilma",
        "Brown Derby, The",
        "Trade Center, World",
        "Greasy Spoon, Inc.; The"].
        
DEFINE BUTTON bQUIT LABEL "EXIT" AUTO-ENDKEY.
DEFINE BUTTON bOK   LABEL "OK"   AUTO-GO.


FORM samples NO-LABEL WITH FRAME samples_frm ROW 1 COL 1 TITLE "SAMPLES".
FORM
  "Name to flip" SPACE(21) "Flipped Name " SKIP
  in-name  NO-LABEL
    HELP "Enter name to flip separating parts by , or ; or space."
  out-name NO-LABEL  SKIP SPACE(2) bOK SPACE(2) bQUIT
  WITH FRAME frm-name TITLE "Try one" VIEW-AS DIALOG-BOX.
ASSIGN
   FRAME frm-name:ROW = 13
   FRAME frm-name:COLUMN = 3.

ENABLE samples WITH FRAME samples_frm.
VIEW FRAME frm-name.
ENABLE ALL WITH FRAME frm-name.

REPEAT loop = 1 TO 5:
  RUN samples/flip.p(INPUT in-sample[loop],OUTPUT out-name).
  samples:SCREEN-VALUE = samples:SCREEN-VALUE + in-sample[loop] + "    ->    " + out-name + CHR(10).
  samples:CURSOR-OFFSET = samples:LENGTH.
END.

REPEAT:
  UPDATE in-name WITH FRAME frm-name.
  DO WITH FRAME frm-name:
     RUN samples/flip.p (INPUT in-name, OUTPUT out-name).
  END.
  DISPLAY out-name VIEW-AS TEXT WITH FRAME frm-name.
  samples:SCREEN-VALUE = samples:SCREEN-VALUE + in-name + "    ->    " +
                         out-name + CHR(10).
  samples:CURSOR-OFFSET = samples:LENGTH.
END.
HIDE FRAME samples_frm NO-PAUSE.
RETURN.







