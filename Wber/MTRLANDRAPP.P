/*MTRLANDRAPP.P*/
{STARTFORAPP.I}
{KONSTRMTRL.I}
{LEVTEMP.I}
{MTRLTEMP.I}
{SMTRL.I}
DEFINE QUERY mtrlq FOR MTRLBER.
DEFINE QUERY sok FOR MTRL. 
DEFINE BUFFER mtrlbuf FOR MTRLBER.


PROCEDURE ny_UI :
   DEFINE INPUT PARAMETER mtrlkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER var2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER var3 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER var4 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER var5 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER var6 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR spec_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR mtrlbertemp.
   EMPTY TEMP-TABLE mtrlbertemp NO-ERROR. 
   FOR EACH spec_mtrl:
      FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = mtrlkod AND
      MTRLBER.ENR = spec_mtrl.ENR AND MTRLBER.F1 = var2
      AND MTRLBER.F2 = var3 AND MTRLBER.F3 = var4 AND MTRLBER.F4 = var5
      AND MTRLBER.F5 = var6 USE-INDEX KOD NO-LOCK NO-ERROR.
      IF NOT AVAILABLE MTRLBER THEN DO:
         RUN nyand_UI (INPUT mtrlkod,INPUT var2,
                       INPUT var3,INPUT var4,
                       INPUT var5,INPUT var6).
      END.
   END.
END PROCEDURE.

PROCEDURE ladda_UI :
   DEFINE INPUT PARAMETER typkod AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR mtrlbertemp.
   EMPTY TEMP-TABLE mtrlbertemp NO-ERROR. 
   OPEN QUERY mq FOR EACH MTRLBER WHERE MTRLBER.KTYPKOD = typkod USE-INDEX KOD NO-LOCK. 
   GET FIRST mq NO-LOCK.
   DO WHILE AVAILABLE(MTRLBER):
      CREATE mtrlbertemp.
      BUFFER-COPY MTRLBER TO mtrlbertemp.
      ASSIGN mtrlbertemp.MTRLROW = ROWID(MTRLBER).
      GET NEXT mq NO-LOCK.
   END.
   CLOSE QUERY mq.
   RETURN.
END PROCEDURE.

PROCEDURE kodhmt_UI :
   DEFINE INPUT PARAMETER val AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER posok AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER begvar AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER vald_lev AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER felmedd AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR satstemp.
   EMPTY TEMP-TABLE satstemp NO-ERROR. 
   felmedd = "".
   
   IF begvar = FALSE THEN DO:
      OPEN QUERY mq FOR EACH SATS WHERE SATS.KOD MATCHES posok AND SATS.LEVKOD = vald_lev
      AND SATS.SATS = TRUE USE-INDEX KOD NO-LOCK.
      GET FIRST mq NO-LOCK.
      DO WHILE AVAILABLE(SATS):
         CREATE satstemp.
         BUFFER-COPY SATS TO satstemp.
         ASSIGN satstemp.SATSROW = ROWID(SATS).
         GET NEXT mq NO-LOCK.
      END.
      CLOSE QUERY mq.
   END.
   ELSE DO:
      OPEN QUERY mq FOR EACH SATS WHERE SATS.KOD BEGINS posok AND SATS.LEVKOD = vald_lev
      AND SATS.SATS = TRUE USE-INDEX KOD NO-LOCK.
      GET FIRST mq NO-LOCK.
      DO WHILE AVAILABLE(SATS):
         CREATE satstemp.
         BUFFER-COPY SATS TO satstemp.
         ASSIGN satstemp.SATSROW = ROWID(SATS).
         GET NEXT mq NO-LOCK.
      END.
      CLOSE QUERY mq.        
   END.
   FIND FIRST satstemp NO-LOCK NO-ERROR.
   IF NOT AVAILABLE satstemp THEN DO:
      ASSIGN felmedd = "Det finns ingen på sökbegreppet.".
      RETURN.
   END.

END PROCEDURE.

PROCEDURE checksats_UI :
   DEFINE INPUT PARAMETER enrvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER levkod AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER satskoll AS LOGICAL NO-UNDO.
   FIND FIRST SATS WHERE SATS.SATS = TRUE AND SATS.KOD = enrvar AND
   SATS.LEVKOD = levkod USE-INDEX KOD NO-LOCK NO-ERROR.
   IF AVAILABLE SATS THEN satskoll = TRUE.
   ELSE satskoll = FALSE.
   RETURN.
END PROCEDURE.

PROCEDURE bort_UI :
   DEFINE INPUT PARAMETER mtrl_rowid AS ROWID NO-UNDO.
   DO TRANSACTION:
      FIND FIRST MTRLBER WHERE ROWID(MTRLBER)= mtrl_rowid EXCLUSIVE-LOCK NO-ERROR.         
      IF AVAILABLE MTRLBER THEN DO:
         DELETE MTRLBER.                     
      END.      
   END.
   RETURN.
END PROCEDURE.

PROCEDURE andlin_UI :
   DEFINE INPUT PARAMETER mtrl_rowid AS ROWID NO-UNDO.
   DO TRANSACTION:
      FIND FIRST MTRLBER WHERE ROWID(MTRLBER) = mtrl_rowid EXCLUSIVE-LOCK NO-ERROR.         
      IF AVAILABLE MTRLBER THEN DO:
         ASSIGN
         MTRLBER.LINKAB = FALSE
         MTRLBER.DIAMETER = 0.  
      END.
   END.
   RELEASE MTRLBER NO-ERROR.
   RETURN.
END PROCEDURE.

PROCEDURE btnand_UI :
   DEFINE INPUT PARAMETER mtrl_rowid AS ROWID NO-UNDO.
   DEFINE INPUT PARAMETER mtrlkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf3 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf4 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf5 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf6 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR spec_mtrl.
   DEFINE OUTPUT PARAMETER TABLE FOR mtrlbertemp.
   EMPTY TEMP-TABLE mtrlbertemp NO-ERROR. 
   DO TRANSACTION:
      FOR EACH spec_mtrl:     
         FIND FIRST MTRLBER WHERE MTRLBER.KTYPKOD = mtrlkod AND
         MTRLBER.ENR = spec_mtrl.ENR AND MTRLBER.F1 = varf2
         AND MTRLBER.F2 = varf3 AND MTRLBER.F3 = varf4 AND MTRLBER.F4 = varf5
         AND MTRLBER.F5 = varf6 AND ROWID(MTRLBER) NE mtrl_rowid
         USE-INDEX KOD EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE MTRLBER THEN DO:
            RUN nyand_UI (INPUT mtrlkod,INPUT varf2, INPUT varf3,INPUT varf4,
                          INPUT varf5, INPUT varf6).
         END.
         ELSE DO:
            DELETE MTRLBER. 
            RUN nyand_UI (INPUT mtrlkod,INPUT varf2, INPUT varf3,INPUT varf4,
                          INPUT varf5, INPUT varf6).
         END.
      END. 
      FIND FIRST MTRLBER WHERE ROWID(MTRLBER) = mtrl_rowid EXCLUSIVE-LOCK NO-ERROR.
      DELETE MTRLBER.
   END.
   RETURN.
END PROCEDURE.

PROCEDURE nyand_UI :
   DEFINE INPUT PARAMETER mtrlkod AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf2  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf3  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf4  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf5  AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER varf6  AS CHARACTER NO-UNDO.
   CREATE MTRLBER.
   ASSIGN
   MTRLBER.KTYPKOD = mtrlkod
   MTRLBER.ENR = spec_mtrl.ENR
   MTRLBER.BENAMNING = spec_mtrl.BENAMNING
   MTRLBER.ENHET = spec_mtrl.ENHET
   MTRLBER.PRIS = spec_mtrl.NPRIS
   MTRLBER.ANTAL = spec_mtrl.BERKVANT
   MTRLBER.LEVKOD = spec_mtrl.LEVKOD
   MTRLBER.LINKAB = spec_mtrl.LINKAB
   MTRLBER.MODUL = spec_mtrl.MODUL
   MTRLBER.TYPBER = spec_mtrl.TYPBER
   MTRLBER.DIAMETER = spec_mtrl.DIAMETER
   MTRLBER.F1 = varf2
   MTRLBER.F2 = varf3
   MTRLBER.F3 = varf4
   MTRLBER.F4 = varf5
   MTRLBER.F5 = varf6
   MTRLBER.SATS = spec_mtrl.SATS.
   CREATE mtrlbertemp.
   BUFFER-COPY MTRLBER TO mtrlbertemp.
   ASSIGN mtrlbertemp.MTRLROW = ROWID(MTRLBER).
END PROCEDURE.
