/*XUPPMENY.P*/
DEFINE VARIABLE brwproc AS HANDLE EXTENT 25 NO-UNDO.
{WHANDLTEMP.I}
   
DEFINE VARIABLE C-WIN AS HANDLE NO-UNDO.
DEFINE VARIABLE BRW_UPP    AS HANDLE NO-UNDO.
DEFINE VARIABLE BTN_VISA AS HANDLE NO-UNDO.  
DEFINE VARIABLE BTN_AVB  AS HANDLE NO-UNDO.   

DEFINE INPUT PARAMETER huvprogh AS HANDLE NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR whandltemp.
DEFINE VARIABLE ordnr AS INTEGER NO-UNDO.
DEFINE VARIABLE brworgwith  AS DECIMAL NO-UNDO.
DEFINE VARIABLE brworghight AS DECIMAL NO-UNDO.
DEFINE VARIABLE brworgrow  AS DECIMAL NO-UNDO.
DEFINE VARIABLE brworgcol  AS DECIMAL NO-UNDO.
DEFINE VARIABLE btnorgrow  AS DECIMAL NO-UNDO.
DEFINE VARIABLE btnorgcol  AS DECIMAL NO-UNDO.

PROCEDURE franstart_UI :   
   RUN main_UI.
END PROCEDURE.
FIND FIRST whandltemp WHERE NO-LOCK NO-ERROR.
ordnr = 0.
ASSIGN
ordnr = ordnr + 1
C-WIN = whandltemp.WF[ordnr]
ordnr = ordnr + 1 
BRW_UPP = whandltemp.WF[ordnr]  
ordnr = ordnr + 1
BTN_VISA = whandltemp.WF[ordnr]   
ordnr = ordnr + 1
BTN_AVB = whandltemp.WF[ordnr].   
ASSIGN
brworgwith = BRW_UPP:WIDTH-CHARS
brworghight = BRW_UPP:HEIGHT-CHARS
brworgrow = BRW_UPP:ROW
brworgcol = BRW_UPP:COLUMN.

&Scoped-define NEW 
&Scoped-define SHARED SHARED
DEFINE SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE omr AS LOGICAL NO-UNDO. 
DEFINE SHARED VARIABLE typ_val AS INTEGER NO-UNDO.
DEFINE VARIABLE vadladd AS CHARACTER NO-UNDO.
DEFINE SHARED TEMP-TABLE visa NO-UNDO
   FIELD UT AS CHARACTER    
   FIELD TYP AS CHARACTER       
   FIELD ORDNING AS INTEGER
   FIELD UPPFOLJVAL AS INTEGER
   FIELD KUURVAL AS LOGICAL
   FIELD DELNRKOLL AS LOGICAL
   INDEX ORDNING IS PRIMARY ORDNING KUURVAL
   INDEX UT UT.
DEFINE VARIABLE status-ok AS LOGICAL NO-UNDO.
DEFINE VARIABLE vem AS CHARACTER NO-UNDO.
DEFINE VARIABLE vallista AS INTEGER NO-UNDO.
DEFINE VARIABLE uppfapph AS HANDLE NO-UNDO.
DEFINE VARIABLE visatemph AS HANDLE NO-UNDO.
DEFINE VARIABLE utvaltab AS CHARACTER NO-UNDO.
DEFINE VARIABLE urq AS HANDLE NO-UNDO.
DEFINE VARIABLE dynok AS LOGICAL NO-UNDO.
DEFINE VARIABLE dynqueh AS HANDLE NO-UNDO.
      
visatemph = TEMP-TABLE visa:DEFAULT-BUFFER-HANDLE. 
/*
FIND FIRST visa WHERE ROWID(visa) = visatemph:ROWID NO-LOCK NO-ERROR.
*/
ON 'VALUE-CHANGED':U OF BRW_UPP PERSISTENT RUN vcbrwupp_UI IN THIS-PROCEDURE.
ON 'CHOOSE':U OF BTN_VISA PERSISTENT RUN visa_UI IN THIS-PROCEDURE.


RUN main_UI.

PROCEDURE visa_UI :

   FIND FIRST visa WHERE ROWID(visa) = visatemph:ROWID NO-LOCK NO-ERROR.
   IF NOT AVAILABLE visa THEN DO:
      MESSAGE "ingen träff!" VIEW-AS ALERT-BOX.
      RETURN.
   END.
   ELSE DO:
      MESSAGE "ok!" visa.ut VIEW-AS ALERT-BOX.
   END.
END PROCEDURE.

PROCEDURE vcbrwupp_UI :
   status-ok = BRW_UPP:SELECT-FOCUSED-ROW() NO-ERROR.
   FIND FIRST visa WHERE ROWID(visa) = visatemph:ROWID NO-LOCK NO-ERROR. 
   IF AVAILABLE visa THEN DO:
      BRW_UPP:TOOLTIP = "Högerklicka för mer information.".
   END.    
END PROCEDURE.

PROCEDURE main_UI :
   c-win:TITLE = "Uppföljning".
   CREATE visa.
   ASSIGN
   visa.ORDNING = 30
   visa.UPPFOLJVAL = 4
   visa.KUURVAL = TRUE
   visa.DELNRKOLL = TRUE
   visa.TYP = "U30"
   visa.UT = "-personal".
   CREATE visa.
   ASSIGN
   visa.ORDNING = 40
   visa.UPPFOLJVAL = 3
   visa.KUURVAL = TRUE
   visa.DELNRKOLL = TRUE
   visa.TYP = "U40"
   visa.UT = "Projektuppföljningslista".
   
   CREATE visa.
   ASSIGN
   visa.ORDNING = 41
   visa.UPPFOLJVAL = 41
   visa.KUURVAL = TRUE
   visa.DELNRKOLL = TRUE
   visa.TYP = "U41"
   visa.UT = "Befattningsrapport".  
   
   
   utvaltab = "FOR EACH visa".
   dynqueh = BRW_UPP:QUERY.
   dynok = dynqueh:QUERY-PREPARE(utvaltab).
   dynok = dynqueh:QUERY-OPEN() NO-ERROR.
 RELEASE visa.
END PROCEDURE.


