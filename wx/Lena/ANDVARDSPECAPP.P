/*ANDVARDSPECAPP.P*/
{STARTFORAPP.I}
{FASTIGHET.I}
{MARKVARD.I}
{SOKDEF.I}
DEFINE VARIABLE edataapph AS HANDLE NO-UNDO.
{EXTRADATA.I}
DEFINE VARIABLE paslagfaktor AS DECIMAL NO-UNDO.
DEFINE VARIABLE kopindex AS DECIMAL NO-UNDO.
DEFINE VARIABLE vardartal AS INTEGER NO-UNDO.
DEFINE VARIABLE bbelopp AS INTEGER NO-UNDO.
DEFINE VARIABLE nypolicykab AS LOGICAL NO-UNDO.
DEFINE BUFFER kbuff FOR KINDEX.

RUN EXTRADATAHMT.P PERSISTENT SET edataapph.
FIND FIRST FORETAG NO-LOCK NO-ERROR.
globforetag = FORETAG.FORETAG.

PROCEDURE laddaskog.
   DEFINE INPUT PARAMETE valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR vardskogtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markdivtemp.
   EMPTY TEMP-TABLE vardskogtemp  NO-ERROR.    
   OPEN QUERY vasq FOR EACH VARDSKOG NO-LOCK.
   GET FIRST vasq NO-LOCK.
   DO WHILE AVAILABLE(VARDSKOG):
      CREATE vardskogtemp.
      BUFFER-COPY VARDSKOG TO vardskogtemp.
      GET NEXT vasq NO-LOCK.
   END.
   CLOSE QUERY vasq.
   EMPTY TEMP-TABLE markdivtemp NO-ERROR.    
   OPEN QUERY mdq FOR EACH MARKDIV NO-LOCK.
   GET FIRST mdq NO-LOCK.
   DO WHILE AVAILABLE(MARKDIV):
      CREATE markdivtemp.
      BUFFER-COPY MARKDIV TO markdivtemp.
      GET NEXT mdq NO-LOCK. 
   END.
   CLOSE QUERY mdq.
   RETURN.
END PROCEDURE.

PROCEDURE laddaskog2.
   DEFINE INPUT PARAMETE valvardnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR vardskogtemp.
   
   EMPTY TEMP-TABLE vardskogtemp  NO-ERROR.    
   OPEN QUERY vasq FOR EACH VARDSKOG NO-LOCK.
   GET FIRST vasq NO-LOCK.
   DO WHILE AVAILABLE(VARDSKOG):
      CREATE vardskogtemp.
      BUFFER-COPY VARDSKOG TO vardskogtemp.
      GET NEXT vasq NO-LOCK.
   END.
   CLOSE QUERY vasq.
   
   RETURN.
END PROCEDURE.

PROCEDURE laddavol.
   DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.  
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER volskogtabrec AS RECID NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volymbertemp.
   DEFINE OUTPUT PARAMETER TABLE FOR volkrtemp.
   EMPTY TEMP-TABLE volymbertemp NO-ERROR.    
   OPEN QUERY volq FOR EACH VOLYMBER NO-LOCK.
   GET FIRST volq NO-LOCK.
   DO WHILE AVAILABLE(VOLYMBER):
      CREATE volymbertemp.
      BUFFER-COPY VOLYMBER TO volymbertemp.
      GET NEXT volq NO-LOCK. 
   END.        
   CLOSE QUERY volq.
   EMPTY TEMP-TABLE volkrtemp  NO-ERROR.       
   OPEN QUERY vkrq FOR EACH VOLKR NO-LOCK.
   GET FIRST vkrq NO-LOCK.
   DO WHILE AVAILABLE(VOLKR):
      CREATE volkrtemp.
      BUFFER-COPY VOLKR TO volkrtemp.
      GET NEXT vkrq NO-LOCK. 
   END.        
   CLOSE QUERY vkrq.
   IF vart = "NYA" THEN DO:
      CREATE VOLSKOG.
      ASSIGN 
      VOLSKOG.VARDNR = valvardnr
      VOLSKOG.BETECKNING = fastighbet.
      volskogtabrec = RECID(VOLSKOG).
      RELEASE VOLSKOG NO-ERROR.
   END.   
   RETURN.
END PROCEDURE.

PROCEDURE laddavol2.
   DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.  
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER volskogtabrec AS RECID NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR volymbertemp.
   DEFINE OUTPUT PARAMETER TABLE FOR volkrtemp.
   DEFINE OUTPUT PARAMETER TABLE FOR volskogstamp.
   EMPTY TEMP-TABLE volymbertemp NO-ERROR.    
   OPEN QUERY volq FOR EACH VOLYMBER NO-LOCK.
   GET FIRST volq NO-LOCK.
   DO WHILE AVAILABLE(VOLYMBER):
      CREATE volymbertemp.
      BUFFER-COPY VOLYMBER TO volymbertemp.
      GET NEXT volq NO-LOCK. 
   END.        
   CLOSE QUERY volq.
   EMPTY TEMP-TABLE volkrtemp  NO-ERROR.       
   OPEN QUERY vkrq FOR EACH VOLKR NO-LOCK.
   GET FIRST vkrq NO-LOCK.
   DO WHILE AVAILABLE(VOLKR):
      CREATE volkrtemp.
      BUFFER-COPY VOLKR TO volkrtemp.
      GET NEXT vkrq NO-LOCK. 
   END.        
   CLOSE QUERY vkrq.
   EMPTY TEMP-TABLE volskogstamp NO-ERROR.
      
   CREATE volskogstamp.
   ASSIGN 
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 8.
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 10.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 12.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 14.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 16.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 18.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 20.
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 22.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 24.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr   
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 26.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 28.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 30.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 32.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 34.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 36.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 38.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 40.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 42.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 44.   
   CREATE volskogstamp.
   ASSIGN
   volskogstamp.VARDNR = valvardnr
   volskogstamp.BETECKNING = fastighbet
   volskogstamp.DIAM = 46.
   
   
   
   IF vart = "and" THEN DO:
        
   END.   
   
   IF vart = "NYA" THEN DO:
      FIND FIRST FASTIGHET WHERE FASTIGHET.BETECKNING = fastighbet NO-LOCK NO-ERROR.
      IF AVAILABLE FASTIGHET THEN DO:
         FOR EACH volskogstamp NO-LOCK:
            ASSIGN
            volskogstamp.GHKL = "G1"
            volskogstamp.THKL = "T1"
            volskogstamp.BHKL = "T1"
            volskogstamp.OHKL = "T1"
            volskogstamp.OKORR = 100.           
            FIND FIRST volymbertemp WHERE volymbertemp.GOMR = FASTIGHET.GOMRTALL AND volymbertemp.TRAD = "TALL"
            AND volymbertemp.DIAM = volskogstamp.DIAM USE-INDEX TRAD NO-LOCK NO-ERROR.
            IF AVAILABLE volymbertemp THEN DO:                    
               ASSIGN volskogstamp.STTM3 = volymbertemp.G1  .                                   
            END.
            FIND FIRST volymbertemp WHERE volymbertemp.GOMR = FASTIGHET.GOMRTALL AND volymbertemp.TRAD = "BJÖRK"
            AND volymbertemp.DIAM = volskogstamp.DIAM USE-INDEX TRAD NO-LOCK NO-ERROR.
            IF AVAILABLE volymbertemp THEN DO:                    
               ASSIGN volskogstamp.STBM3 = volymbertemp.G1.
               ASSIGN volskogstamp.STOM3 = volymbertemp.G1.
               
            END.
            FIND FIRST volymbertemp WHERE volymbertemp.GOMR = FASTIGHET.GOMRGRAN AND volymbertemp.TRAD = "GRAN"
            AND volymbertemp.DIAM = volskogstamp.DIAM USE-INDEX TRAD NO-LOCK NO-ERROR.
            IF AVAILABLE volymbertemp THEN DO:                    
               ASSIGN volskogstamp.STGM3 = volymbertemp.G1.
            END.
         END.   
      END.         
      
   END.   
   RETURN.
END PROCEDURE.

PROCEDURE laddaaker.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR prodakertemp.
   DEFINE OUTPUT PARAMETER TABLE FOR markdivtemp.   
   DEFINE OUTPUT PARAMETER TABLE FOR akerproctemp.
   DEFINE OUTPUT PARAMETER TABLE FOR kindextemp.  
   EMPTY TEMP-TABLE prodakertemp NO-ERROR.    
   OPEN QUERY prq FOR EACH PRODAKER NO-LOCK.
   GET FIRST prq NO-LOCK.
   DO WHILE AVAILABLE(PRODAKER):
      CREATE prodakertemp.
      BUFFER-COPY PRODAKER TO prodakertemp.
      GET NEXT prq NO-LOCK.
   END.
   CLOSE QUERY prq.
   EMPTY TEMP-TABLE markdivtemp NO-ERROR.    
   OPEN QUERY mdq FOR EACH MARKDIV NO-LOCK.
   GET FIRST mdq NO-LOCK.
   DO WHILE AVAILABLE(MARKDIV):
      CREATE markdivtemp.
      BUFFER-COPY MARKDIV TO markdivtemp.
      GET NEXT mdq NO-LOCK. 
   END.        
   CLOSE QUERY mdq.
   EMPTY TEMP-TABLE akerproctemp NO-ERROR.    
   OPEN QUERY apq FOR EACH AKERPROC NO-LOCK.
   GET FIRST apq NO-LOCK.
   DO WHILE AVAILABLE(AKERPROC):
      CREATE akerproctemp.
      BUFFER-COPY AKERPROC TO akerproctemp.
      GET NEXT apq NO-LOCK. 
   END.        
   CLOSE QUERY apq.
   EMPTY TEMP-TABLE kindextemp NO-ERROR.    
   OPEN QUERY kq FOR EACH KINDEX USE-INDEX AR NO-LOCK.
   GET FIRST kq NO-LOCK.
   DO WHILE AVAILABLE(KINDEX):
      CREATE kindextemp.
      BUFFER-COPY KINDEX TO kindextemp.
      GET NEXT kq NO-LOCK.
   END.
   CLOSE QUERY kq.
   RETURN.
END PROCEDURE.

PROCEDURE nybestandnr.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER bestandnr AS INTEGER NO-UNDO.

   FIND LAST SKOGVARD WHERE SKOGVARD.VARDNR = valvardnr
   AND SKOGVARD.BETECKNING = fastighbet USE-INDEX VARDNR NO-LOCK NO-ERROR.
   IF AVAILABLE SKOGVARD THEN DO:
      ASSIGN bestandnr = SKOGVARD.BESTAND + 1.  
   END.
   ELSE DO:
      ASSIGN bestandnr = 1.
   END. 
   RETURN.
END PROCEDURE.

PROCEDURE bortvolskog.
   DEFINE INPUT PARAMETER volrec AS RECID NO-UNDO.
   FIND FIRST VOLSKOG WHERE RECID(VOLSKOG) = volrec EXCLUSIVE-LOCK NO-ERROR.
   IF AVAILABLE VOLSKOG THEN DO:
      DELETE VOLSKOG.
   END.
END PROCEDURE.

PROCEDURE hmtakernr.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER stpnr AS INTEGER NO-UNDO.

   FIND LAST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND
   AKERVARD.BETECKNING = fastighbet AND AKERVARD.L5 = 0 AND  AKERVARD.STOLPNR NE 0 USE-INDEX VARDNR NO-LOCK NO-ERROR.
   IF AVAILABLE AKERVARD THEN DO:
      ASSIGN
      stpnr = AKERVARD.STOLPNR + 1.
   END. 
   ELSE DO:
      ASSIGN stpnr = 1.
   END.
   RETURN.
END PROCEDURE.

PROCEDURE hmttrafonr.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER stpnr AS INTEGER NO-UNDO.

   FIND LAST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND
   AKERVARD.BETECKNING = fastighbet AND AKERVARD.L5 = 1 USE-INDEX VARDNR NO-LOCK NO-ERROR.
   IF AVAILABLE AKERVARD THEN DO:
      ASSIGN
      stpnr = AKERVARD.STOLPNR + 1.
   END.   
   ELSE DO:
      ASSIGN stpnr = 1.
   END.
   RETURN.
END PROCEDURE.

PROCEDURE stpnrcheck.
   DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   IF val = 3 THEN DO:
      FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND
      AKERVARD.BETECKNING = fastighbet AND
      AKERVARD.STOLPNR = stpnr AND AKERVARD.L5 = 0 USE-INDEX VARDNR NO-LOCK NO-ERROR.
      IF AVAILABLE AKERVARD THEN DO:
         CREATE felmeddtemp.
         ASSIGN felmeddtemp.FELMEDD = "Stolpnumret finns redan upplagt!".
         RETURN.
      END.
   END.
   IF val = 5 THEN DO:
      FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND
      AKERVARD.BETECKNING = fastighbet AND
      AKERVARD.STOLPNR = stpnr AND AKERVARD.L5 = 1 USE-INDEX VARDNR NO-LOCK NO-ERROR.
      IF AVAILABLE AKERVARD THEN DO:
         CREATE felmeddtemp.
         ASSIGN felmeddtemp.FELMEDD = "Stolpnumret finns redan upplagt!".
         RETURN.
      END.
   END.

END PROCEDURE.

PROCEDURE revcheck.
   DEFINE INPUT PARAMETER val AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.       
   IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.      
   EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR.   
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "REVAVTAL"                   
   inextradatatemp.HUVUDINT = valvardnr                    
   inextradatatemp.HUVUDCH = fastighbet.                          
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FOR EACH extradatatemp :      
      IF extradatatemp.SOKINT[1] = stpnr THEN DO:
         CREATE felmeddtemp.
         ASSIGN felmeddtemp.FELMEDD = "Zon finns redan upplagt!".
         RETURN.
      END.      
   END.
   EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.        
   edataapph = ?.
END PROCEDURE.


PROCEDURE skogkoll.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bestandnr AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR.    
   FIND FIRST SKOGVARD WHERE SKOGVARD.VARDNR = valvardnr AND
   SKOGVARD.BETECKNING = fastighbet AND
   SKOGVARD.BESTAND = bestandnr USE-INDEX VARDNR NO-LOCK NO-ERROR.
   IF AVAILABLE SKOGVARD THEN DO:
      CREATE felmeddtemp.
      ASSIGN felmeddtemp.FELMEDD =  "Beståndet finns redan upplagt!".
      RETURN.
   END. 
END PROCEDURE.

PROCEDURE sparaskog.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER bestandnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR skogvardtemp.
   DO TRANSACTION:
      FOR EACH SKOGVARD WHERE SKOGVARD.VARDNR = valvardnr AND 
      SKOGVARD.BETECKNING = fastighbet AND SKOGVARD.BESTAND = bestandnr EXCLUSIVE-LOCK:
         DELETE SKOGVARD.
      END.
      FOR EACH skogvardtemp WHERE skogvardtemp.VARDNR = valvardnr AND 
      skogvardtemp.BETECKNING = fastighbet AND skogvardtemp.BESTAND = bestandnr NO-LOCK :
         CREATE SKOGVARD.
         BUFFER-COPY skogvardtemp TO SKOGVARD.         
      END.
   END.
   RELEASE SKOGVARD NO-ERROR.
   
END PROCEDURE.

PROCEDURE sparavol.
   DEFINE INPUT PARAMETER volskogtabrec AS RECID NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR volskogtemp.
   FIND FIRST volskogtemp WHERE volskogtemp.VOLSKOGREC = volskogtabrec NO-LOCK NO-ERROR.
   IF AVAILABLE volskogtemp THEN DO:
      FIND FIRST VOLSKOG WHERE RECID(VOLSKOG) = volskogtabrec EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE VOLSKOG THEN DO:
         CREATE VOLSKOG.
      END.
      BUFFER-COPY volskogtemp TO VOLSKOG.
  END.
  RELEASE VOLSKOG NO-ERROR.
  RETURN.
  
END PROCEDURE.

PROCEDURE sparavol2_UI.
   DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR volskogstamp.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR volskogtemp.
   IF vart = "NYA" THEN DO:
      FOR EACH volskogstamp :
         IF volskogstamp.TANT = 0 AND volskogstamp.GANT = 0 AND volskogstamp.BANT = 0 THEN .
         ELSE DO:         
            CREATE VOLSKOG.
            BUFFER-COPY volskogstamp TO VOLSKOG.
            CREATE volskogtemp.
            BUFFER-COPY volskogstamp TO volskogtemp.
         END.
      END.
   END.
   ELSE DO:
      FOR EACH volskogstamp :
         IF volskogstamp.TANT = 0 AND volskogstamp.GANT = 0 AND volskogstamp.BANT = 0 AND volskogstamp.OANT = 0 THEN .
         ELSE DO TRANSACTION:            
            FIND FIRST VOLSKOG WHERE VOLSKOG.VARDNR =  volskogstamp.VARDNR AND VOLSKOG.BETECKNING =  volskogstamp.BETECKNING AND
            VOLSKOG.DIAM =  volskogstamp.DIAM AND VOLSKOG.GHKL =  volskogstamp.GHKL AND VOLSKOG.THKL =  volskogstamp.THKL AND VOLSKOG.BHKL =  volskogstamp.BHKL   EXCLUSIVE-LOCK NO-ERROR.
            IF AVAILABLE VOLSKOG THEN DO:
               BUFFER-COPY volskogstamp TO VOLSKOG.
               FIND FIRST volskogtemp WHERE volskogtemp.VARDNR =  volskogstamp.VARDNR AND volskogtemp.BETECKNING =  volskogstamp.BETECKNING AND
               volskogtemp.DIAM =  volskogstamp.DIAM AND volskogtemp.GHKL =  volskogstamp.GHKL AND volskogtemp.THKL =  volskogstamp.THKL AND volskogtemp.BHKL =  volskogstamp.BHKL   EXCLUSIVE-LOCK NO-ERROR.
               IF AVAILABLE volskogtemp THEN DO:
                  BUFFER-COPY volskogstamp TO volskogtemp.
               END.
            END.
            ELSE DO:            
               CREATE VOLSKOG.
               BUFFER-COPY volskogstamp TO VOLSKOG.
               CREATE volskogtemp.
               BUFFER-COPY volskogstamp TO volskogtemp.
            END.   
         END.
         RELEASE VOLSKOG.
      END.
   END.            
           
   
  RELEASE VOLSKOG NO-ERROR.
  RETURN.
  
END PROCEDURE.

PROCEDURE sparaaker.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR akervardtemp.

   FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = valvardnr AND 
   akervardtemp.BETECKNING = fastighbet AND 
   akervardtemp.STOLPN = stpnr AND akervardtemp.L5 = 0  NO-LOCK NO-ERROR.
   IF AVAILABLE akervardtemp THEN DO:
      FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND 
      AKERVARD.BETECKNING = fastighbet AND 
      AKERVARD.STOLPN = stpnr AND AKERVARD.L5 = 0 EXCLUSIVE-LOCK NO-ERROR.
      IF NOT AVAILABLE AKERVARD THEN DO:
         CREATE AKERVARD.
      END.
      BUFFER-COPY akervardtemp TO AKERVARD.            
   END.
   RELEASE AKERVARD NO-ERROR.
   RETURN.

END PROCEDURE.

PROCEDURE sparakab.
   DEFINE INPUT PARAMETER vart AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER akerkabrec2 AS RECID NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR valsoktemp.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR akerkabtemp.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR akervardtemp.
   DEFINE VARIABLE FILL-IN_FLKAB     AS LOGICAL NO-UNDO.
   DEFINE VARIABLE FILL-IN_LAKAB1    AS INTEGER NO-UNDO.
   DEFINE VARIABLE FILL-IN_LAKAB2    AS DECIMAL NO-UNDO.
   DEFINE VARIABLE FILL-IN_FASTPRIS  AS LOGICAL NO-UNDO.
   DEFINE VARIABLE FILL-IN_KRONOR    AS INTEGER NO-UNDO.
   DEFINE VARIABLE FILL-IN_BENAMNING AS CHARACTER NO-UNDO.   
   FIND FIRST valsoktemp NO-LOCK NO-ERROR.
   ASSIGN                                    
   FILL-IN_FLKAB     =  valsoktemp.SOKLOG[1]     
   FILL-IN_LAKAB1    =  valsoktemp.SOKINT[1]     
   FILL-IN_LAKAB2    =  valsoktemp.SOKDECI[1]    
   FILL-IN_FASTPRIS  =  valsoktemp.SOKLOG[2]     
   FILL-IN_KRONOR    =  valsoktemp.SOKINT[2]     
   FILL-IN_BENAMNING =  valsoktemp.SOKCHAR[1].
   /*lsp = valsoktemp.SOKLOG[3].     
   sam = valsoktemp.SOKLOG[4].*/     
   IF Guru.Konstanter:varforetypval[40] = 1 THEN paslagfaktor = 1.25.
   ELSE paslagfaktor = 1.
   DELETE valsoktemp.
   DEBUGGER:SET-BREAK().
   DO TRANSACTION:
      IF vart = "NYA" THEN DO:
         CREATE AKERKAB.
         ASSIGN 
         AKERKAB.VARDNR = valvardnr
         AKERKAB.BETECKNING = fastighbet
         AKERKAB.FLKAB = FILL-IN_FLKAB      
         AKERKAB.L1 = FILL-IN_LAKAB1
         AKERKAB.L2 = FILL-IN_LAKAB2     
         AKERKAB.FASTPRIS = FILL-IN_FASTPRIS.
         akerkabrec2 = RECID(AKERKAB).
         CREATE akerkabtemp.
         BUFFER-COPY AKERKAB TO akerkabtemp.
         ASSIGN akerkabtemp.AKERKABREC = RECID(AKERKAB).
      END.
      ELSE DO:
         FIND FIRST AKERKAB WHERE RECID(AKERKAB) = akerkabrec2 EXCLUSIVE-LOCK NO-ERROR.
         ASSIGN
         AKERKAB.FLKAB = FILL-IN_FLKAB      
         AKERKAB.L1 = FILL-IN_LAKAB1
         AKERKAB.L2 = FILL-IN_LAKAB2     
         AKERKAB.FASTPRIS = FILL-IN_FASTPRIS.
      END.
      /*IF AKERKAB.L1 > 1 THEN DO: */  
      
      IF AKERKAB.FASTPRIS = TRUE THEN DO:       
         ASSIGN AKERKAB.KRONOR = FILL-IN_KRONOR.
      END.
      ELSE DO:                  
         FIND FIRST KINDEX WHERE KINDEX.AR = 1995 AND KINDEX.MANAD = 10 USE-INDEX AR NO-LOCK NO-ERROR.
         FIND FIRST kbuff WHERE kbuff.AR = (YEAR(TODAY)- 1) AND kbuff.MANAD = 10 USE-INDEX AR NO-LOCK NO-ERROR.
         FIND FIRST MARKDIV NO-LOCK NO-ERROR.
         /*oktober 1995 = 256.9
         föregående års oktober =  kopindex
         starters per meter = 3.10 */
         IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.   
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
         EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
         CREATE inextradatatemp.          
         ASSIGN
         inextradatatemp.PROGRAM = "VARDNRARTAL"                   
         inextradatatemp.HUVUDINT = valvardnr.                    
         RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
         FIND FIRST extradatatemp NO-LOCK NO-ERROR.
         IF AVAILABLE extradatatemp THEN DO:      
            ASSIGN
            vardartal = extradatatemp.SOKINT[1].      
         END.
         ELSE vardartal = YEAR(TODAY).   
         EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
         EMPTY TEMP-TABLE extradatatemp NO-ERROR.
         IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.        
         edataapph = ?.
         nypolicykab = FALSE.
         
         IF vardartal GE 2020 AND Guru.Konstanter:varforetypval[58] = 1 THEN nypolicykab = TRUE.
         IF globforetag = "POWE" OR globforetag = "PFBK" OR globforetag = "KEWA" THEN DO:
            /*powe har nog inga kunder med policy = true*/
            nypolicykab = FALSE.
            FIND FIRST VARDERING WHERE VARDERING.VARDNR = valvardnr NO-LOCK NO-ERROR.
            IF AVAILABLE VARDERING THEN DO:
               IF VARDERING.NATAGARE = "Ellevio" THEN nypolicykab = ?.  /*2020   4,10 VARKEN ELLER*/ 
               IF VARDERING.NATAGARE BEGINS "Dala" THEN nypolicykab = FALSE.
               IF VARDERING.NATAGARE BEGINS "Vattenfall" THEN nypolicykab = true.                              
            END.
         END.
         IF nypolicykab = ? THEN DO:
            nypolicykab = FALSE.
            IF AKERKAB.FLKAB = FALSE THEN DO:
               AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.10.
            END.
            ELSE DO:
               AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.10 * ( ( 6 + AKERKAB.L2) / 6 ) .                  
            END.      
         END.                           
         ELSE IF nypolicykab = TRUE THEN DO:           
            nypolicykab = FALSE.         
            FIND FIRST KINDEX WHERE KINDEX.AR = 2018 AND KINDEX.MANAD = 10 USE-INDEX AR NO-LOCK NO-ERROR.
            RUN kopindex_UI (INPUT  (vardartal - 1), OUTPUT kopindex, OUTPUT bbelopp ).       
            IF AKERKAB.FLKAB = FALSE THEN DO:
               ASSIGN AKERKAB.L2 = 0.
               /*kmpris = 4.0 * kopindex / 330.72.*/
                                               
               IF kopindex > 0 THEN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.0 * kopindex / 330.72.
               ELSE DO:                              
                  IF AVAILABLE KINDEX THEN DO:
                      IF AVAILABLE kbuff THEN DO:
                         ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.0 * kbuff.VARDE / KINDEX.VARDE.
                      END.
                  END.
               END.              
            END.
            ELSE DO:               
               IF kopindex > 0 THEN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.0 * ( ( 6 + AKERKAB.L2) / 6 ) * kopindex / 330.72.
               ELSE DO:
                  /*ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 *  3.15 * ( ( 6 + AKERKAB.L2) / 6 ).*/
                  IF AVAILABLE KINDEX THEN DO:
                      IF AVAILABLE kbuff THEN DO:
                         ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 4.0 * ( ( 6 + AKERKAB.L2) / 6 ) * kbuff.VARDE / KINDEX.VARDE.
                      END.
                  END.
               END.   
            END.
         END.
         ELSE DO:
            RUN kopindex_UI (INPUT  (vardartal - 1), OUTPUT kopindex, OUTPUT bbelopp ).       
            IF AKERKAB.FLKAB = FALSE THEN DO:
               ASSIGN AKERKAB.L2 = 0.
               /*kmpris = 3.1 * kopindex / 256.9.*/                                    
               IF kopindex > 0 THEN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 3.1 * kopindex / 256.9.
               ELSE DO:
                  /*ASSIGN AKERKAB.KRONOR = AKERKAB.L1 * 3.15.*/            
                  IF AVAILABLE KINDEX THEN DO:
                      IF AVAILABLE kbuff THEN DO:            
                         ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 3.1 * kbuff.VARDE / KINDEX.VARDE.
                      END.
                  END.
               END.              
            END.
            ELSE DO:               
               IF kopindex > 0 THEN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 3.1 * ( ( 6 + AKERKAB.L2) / 6 ) * kopindex / 256.9.
               ELSE DO:
                  /*ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 *  3.15 * ( ( 6 + AKERKAB.L2) / 6 ).*/
                  IF AVAILABLE KINDEX THEN DO:
                      IF AVAILABLE kbuff THEN DO:
                         ASSIGN AKERKAB.KRONOR = paslagfaktor * AKERKAB.L1 * 3.1 * ( ( 6 + AKERKAB.L2) / 6 ) * kbuff.VARDE / KINDEX.VARDE.
                      END.
                  END.
               END.   
            END.
         END.   
         /* göra annan avrundning Ellevio Lena 20190402
         FIND FIRST VARDERING WHERE VARDERING.VARDNR = valvardnr NO-LOCK NO-ERROR.
         IF AVAILABLE VARDERING THEN DO:
            IF VARDERING.NATAGARE = "Ellevio" THEN DO:
               
            END.   
         END.*/   
         
      END.
      DEBUGGER:SET-BREAK().
      FIND FIRST akerkabtemp WHERE akerkabtemp.AKERKABREC = akerkabrec2 NO-LOCK NO-ERROR.
      BUFFER-COPY AKERKAB TO akerkabtemp.
      DO :
         RELEASE AKERVARD NO-ERROR. 
         IF vart = "NYA" THEN.
         ELSE DO:                  
            IF AKERKAB.FASTPRIS = FALSE THEN DO:             
               FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR 
               AND AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.L1
               AND AKERVARD.L1 = 0 AND AKERVARD.L2 = 0 AND AKERVARD.L3 = 0 
               AND AKERVARD.STOLPNR = 0 AND AKERVARD.L4 = INTEGER(RECID(AKERKAB)) EXCLUSIVE-LOCK NO-ERROR.               
               IF NOT AVAILABLE AKERVARD THEN DO:            
                  FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR 
                  AND AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.L1
                  AND AKERVARD.L1 = 0 AND AKERVARD.L2 = 0 AND AKERVARD.L3 = 0 
                  AND AKERVARD.STOLPNR = 0  EXCLUSIVE-LOCK NO-ERROR.
               END.    
            END.
            ELSE DO:            
               FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR 
               AND AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.KRONOR
               AND AKERVARD.L1 = 0 AND AKERVARD.L2 = 0 AND AKERVARD.L3 = 0 
               AND AKERVARD.STOLPNR = 0 AND AKERVARD.L4 = INTEGER(RECID(AKERKAB)) EXCLUSIVE-LOCK NO-ERROR.
               IF NOT AVAILABLE AKERVARD THEN DO:
                  FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = AKERKAB.VARDNR 
                  AND AKERVARD.BETECKNING = AKERKAB.BETECKNING AND AKERVARD.L5 = AKERKAB.KRONOR
                  AND AKERVARD.L1 = 0 AND AKERVARD.L2 = 0 AND AKERVARD.L3 = 0 
                  AND AKERVARD.STOLPNR = 0  EXCLUSIVE-LOCK NO-ERROR.
               END. 
            END.
         END.
         
         IF AVAILABLE AKERVARD THEN DO:
            IF AKERKAB.FASTPRIS = FALSE THEN DO: 
               ASSIGN AKERVARD.L5 = AKERKAB.L1.
            END.
            ELSE ASSIGN AKERVARD.L5 = AKERKAB.KRONOR.
            AKERVARD.BENAMNING = FILL-IN_BENAMNING.
            /*tillagt 20170601 för att kunna skilja på två kablar med lika längd men olika kommentar Lena*/
            AKERVARD.L4 = INTEGER(RECID(AKERKAB)).            
            IF AKERKAB.FASTPRIS = FALSE THEN DO:
               FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = AKERKAB.VARDNR 
               AND akervardtemp.BETECKNING = AKERKAB.BETECKNING AND akervardtemp.L5 = AKERKAB.L1
               AND akervardtemp.L1 = 0 AND akervardtemp.L2 = 0 AND akervardtemp.L3 = 0 
               AND akervardtemp.STOLPNR = 0 AND akervardtemp.L4 = INTEGER(RECID(AKERKAB)) EXCLUSIVE-LOCK NO-ERROR.               
               IF NOT AVAILABLE akervardtemp THEN DO:             
                  FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = AKERKAB.VARDNR 
                  AND akervardtemp.BETECKNING = AKERKAB.BETECKNING AND akervardtemp.L5 = AKERKAB.L1 
                  AND akervardtemp.L1 = 0 AND akervardtemp.L2 = 0 AND akervardtemp.L3 = 0 
                  AND akervardtemp.STOLPNR = 0   NO-LOCK NO-ERROR.
               END.    
            END.
            ELSE DO:
               FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = AKERKAB.VARDNR 
               AND akervardtemp.BETECKNING = AKERKAB.BETECKNING AND akervardtemp.L5 = AKERKAB.KRONOR 
               AND akervardtemp.L1 = 0 AND akervardtemp.L2 = 0 AND akervardtemp.L3 = 0 
               AND akervardtemp.STOLPNR = 0 AND akervardtemp.L4 = INTEGER(RECID(AKERKAB))   NO-LOCK NO-ERROR.
               IF NOT AVAILABLE akervardtemp THEN DO:
                  FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = AKERKAB.VARDNR 
                  AND akervardtemp.BETECKNING = AKERKAB.BETECKNING AND akervardtemp.L5 = AKERKAB.KRONOR 
                  AND akervardtemp.L1 = 0 AND akervardtemp.L2 = 0 AND akervardtemp.L3 = 0 
                  AND akervardtemp.STOLPNR = 0   NO-LOCK NO-ERROR.
               END. 
            END.
                        
            IF AKERKAB.FASTPRIS = FALSE THEN akervardtemp.L5 = AKERKAB.L1.
            ELSE akervardtemp.L5 = AKERKAB.KRONOR.
            ASSIGN akervardtemp.BENAMNING = FILL-IN_BENAMNING.
            akervardtemp.L4 = INTEGER(RECID(AKERKAB)).                       
         END.
         ELSE /*IF FILL-IN_BENAMNING NE "" THEN*/ DO:
            CREATE AKERVARD.
            ASSIGN
            AKERVARD.VARDNR      = AKERKAB.VARDNR 
            AKERVARD.BETECKNING  = AKERKAB.BETECKNING 
            AKERVARD.L5 = AKERKAB.L1  
            AKERVARD.BENAMNING = FILL-IN_BENAMNING.
            IF AKERKAB.FASTPRIS = TRUE THEN AKERVARD.L5 = AKERKAB.KRONOR.
            /*tillagt 20170601 för att kunna skilja på två kablar med lika längd men olika kommentar Lena*/
            AKERVARD.L4 = INTEGER(RECID(AKERKAB)).
            
            CREATE akervardtemp.
            BUFFER-COPY AKERVARD TO akervardtemp.
         END.
         RELEASE AKERVARD NO-ERROR.
      END.

   END.
   RELEASE AKERKAB NO-ERROR.
   RELEASE AKERVARD NO-ERROR.
END PROCEDURE.


PROCEDURE sparatillfskada.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR akervardtemp.
   DO TRANSACTION:   
      FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = valvardnr AND 
      akervardtemp.BETECKNING = fastighbet AND 
      akervardtemp.STOLPNR = stpnr AND akervardtemp.L5 = 1 NO-LOCK NO-ERROR.
      IF AVAILABLE akervardtemp THEN DO:
         FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND 
         AKERVARD.BETECKNING = fastighbet AND 
         AKERVARD.STOLPN = stpnr AND AKERVARD.L5 = 1 EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE AKERVARD THEN DO:
            CREATE AKERVARD.
         END.
         ASSIGN 
         AKERVARD.VARDNR = akervardtemp.VARDNR
         AKERVARD.STOLPNR =  akervardtemp.STOLPNR 
         AKERVARD.BENAMNING = akervardtemp.BENAMNING      
         AKERVARD.BETECKNING = akervardtemp.BETECKNING
         AKERVARD.L1 = akervardtemp.L1
         AKERVARD.L2 = akervardtemp.L2
         AKERVARD.L4 = akervardtemp.L4
         AKERVARD.L5 = akervardtemp.L5
         AKERVARD.FASTPRIS = akervardtemp.FASTPRIS            
         AKERVARD.KRONOR = akervardtemp.KRONOR.
     END.
   END.
   RELEASE AKERVARD NO-ERROR.
   RETURN.
END PROCEDURE.


PROCEDURE sparatrafo.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER fastighbet AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER stpnr AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR akervardtemp.
   DO TRANSACTION:   
      FIND FIRST akervardtemp WHERE akervardtemp.VARDNR = valvardnr AND 
      akervardtemp.BETECKNING = fastighbet AND 
      akervardtemp.STOLPNR = stpnr AND akervardtemp.L5 = 1 NO-LOCK NO-ERROR.
      IF AVAILABLE akervardtemp THEN DO:
         FIND FIRST AKERVARD WHERE AKERVARD.VARDNR = valvardnr AND 
         AKERVARD.BETECKNING = fastighbet AND 
         AKERVARD.STOLPN = stpnr AND AKERVARD.L5 = 1 EXCLUSIVE-LOCK NO-ERROR.
         IF NOT AVAILABLE AKERVARD THEN DO:
            CREATE AKERVARD.
         END.
         ASSIGN 
         AKERVARD.VARDNR = akervardtemp.VARDNR
         AKERVARD.STOLPNR =  akervardtemp.STOLPNR 
         AKERVARD.BENAMNING = akervardtemp.BENAMNING      
         AKERVARD.BETECKNING = SUBSTRING(akervardtemp.BETECKNING,1,60)
         AKERVARD.L1 = akervardtemp.L1
         AKERVARD.L2 = akervardtemp.L2
         AKERVARD.L3 = akervardtemp.L3
         AKERVARD.L4 = akervardtemp.L4
         AKERVARD.L5 = akervardtemp.L5
         AKERVARD.FASTPRIS = akervardtemp.FASTPRIS            
         AKERVARD.KRONOR = akervardtemp.KRONOR.
     END.
   END.
   RELEASE AKERVARD NO-ERROR.
   RETURN.
END PROCEDURE.




PROCEDURE hmtkrhaN_UI.
   DEFINE INPUT PARAMETER valvardnr AS INTEGER  NO-UNDO.
   DEFINE INPUT PARAMETER cmbomrskog AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER globforetag AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER skogkrha AS INTEGER NO-UNDO.
   IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.   
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
   EMPTY TEMP-TABLE extradatatemp NO-ERROR. 
   CREATE inextradatatemp.          
   ASSIGN
   inextradatatemp.PROGRAM = "VARDNRARTAL"                   
   inextradatatemp.HUVUDINT = valvardnr.                    
   RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp). 
   FIND FIRST extradatatemp NO-LOCK NO-ERROR.
   IF AVAILABLE extradatatemp THEN DO:      
      ASSIGN
      vardartal = extradatatemp.SOKINT[1].      
   END.
   ELSE vardartal = YEAR(TODAY).   
   EMPTY TEMP-TABLE inextradatatemp NO-ERROR.
   EMPTY TEMP-TABLE extradatatemp NO-ERROR.
   IF VALID-HANDLE(edataapph) THEN DELETE PROCEDURE edataapph.        
   edataapph = ?.
   IF  Guru.Konstanter:varforetypval[42] = 1 THEN DO:
      /*storskog uppdateras årligen i hmtkrhaN_UI andvardspecapp.p förutom för UMEA och UMBR som har index*/
      IF globforetag = "UMEA" OR globforetag = "UMBR" THEN DO:
          /*ej indexuppräknat varje år , räknas i programmet istället*/  
         /* nystorskog from 20140224*/
         IF cmbomrskog = "Norrlands inland" THEN skogkrha = 23100.
         ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN skogkrha = 28300.
         ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN skogkrha = 32600.
         ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN skogkrha = 41500.
         ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN skogkrha = 43000.
         
      END.
      ELSE DO:
         IF vardartal = 2021 THEN DO:         
            IF cmbomrskog = "Norrlands inland" THEN DO:
               skogkrha = 24758 .
            END.            
            ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN DO:
                skogkrha = 30332.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN DO:
               skogkrha = 34940.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN DO:
                skogkrha = 44479.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN DO:
                skogkrha = 46087.
            END.
            
         END.
         IF vardartal = 2020 THEN DO:
            IF cmbomrskog = "Norrlands inland" THEN DO:
               skogkrha = 24690.
            END.            
            ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN DO:
                skogkrha = 30248.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN DO:
               skogkrha = 34844.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN DO:
                skogkrha = 44356.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN DO:
                skogkrha = 45960.
            END.            
         END.          
         IF vardartal = 2019 THEN DO:
            IF cmbomrskog = "Norrlands inland" THEN DO:
               skogkrha = 24299.
            END.            
            ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN DO:
                skogkrha = 29769.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN DO:
               skogkrha = 34292.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN DO:
                skogkrha = 43654.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN DO:
                skogkrha = 45232.
            END.
         END.   
         IF vardartal = 2018 THEN DO:            
            IF cmbomrskog = "Norrlands inland" THEN DO:
               skogkrha = 23760.
            END.            
            ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN DO:
                skogkrha = 29108.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN DO:
               skogkrha = 33531.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN DO:
                skogkrha = 42685.
            END.
            ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN DO:
                skogkrha = 44228.
            END.
         END.
      END.   
         
      
                           
      /*IF NOT VALID-HANDLE(edataapph) THEN RUN EXTRADATAHMT.P PERSISTENT SET edataapph.            
      EMPTY TEMP-TABLE inextradatatemp NO-ERROR. 
      EMPTY TEMP-TABLE extradatatemp NO-ERROR.
      CREATE inextradatatemp.          
      ASSIGN
      inextradatatemp.PROGRAM = "STORSKOG"                                  
      inextradatatemp.HUVUDINT =  1
      inextradatatemp.HUVUDCH = "1".                    
      RUN etabhamt_UI IN edataapph (INPUT TABLE inextradatatemp, OUTPUT TABLE extradatatemp).
      
      FIND FIRST extradatatemp  NO-LOCK NO-ERROR.
      IF AVAILABLE extradatatemp THEN DO:
         IF cmbomrskog = "Norrlands inland" THEN DO:
            skogkrha = extradatatemp.SOKDEC[1] * 10000.
         END.   
         ELSE IF cmbomrskog = "Norrlands kustland" THEN DO:
             skogkrha = extradatatemp.SOKDEC[2] * 10000.
          END.   
          ELSE IF cmbomrskog = "Svealand" THEN DO:
              skogkrha = extradatatemp.SOKDEC[3] * 10000.
          END.    
          ELSE IF cmbomrskog = "Götaland" THEN DO:
             skogkrha = extradatatemp.SOKDEC[4] * 10000.
          END.
          ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN DO:
             skogkrha = extradatatemp.SOKDEC[5] * 10000.
          END.
          ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN DO:
             skogkrha = extradatatemp.SOKDEC[6] * 10000.
          END.
          ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN DO:
             skogkrha = extradatatemp.SOKDEC[7] * 10000.
          END.
          ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN DO:
             skogkrha = extradatatemp.SOKDEC[8] * 10000.
          END.
                       
      END. 
      ELSE DO:
         IF globforetag = "UMEA" OR globforetag = "UMBR" THEN DO:
            
            /* nystorskog from 20140224*/
            IF cmbomrskog = "Norrlands inland" THEN skogkrha = 23100.
            ELSE IF cmbomrskog = "Norrlands kustland ej Gävleborgs län" THEN skogkrha = 28300.
            ELSE IF cmbomrskog = "Tillväxtområde 3 (2009 års skognorm)" THEN skogkrha = 32600.
            ELSE IF cmbomrskog = "Tillväxtområde 4A (2009 års skognorm)" THEN skogkrha = 41500.
            ELSE IF cmbomrskog = "Tillväxtområde 4B (2009 års skognorm)" THEN skogkrha = 43000.
            
         END.
            
      END.*/         
         
       
                           
          
   END.
     
   
   END PROCEDURE.

PROCEDURE stnkskhamt_UI.
DEFINE OUTPUT PARAMETER TABLE for stnksktemp .
DEFINE VARIABLE kskopto AS CHARACTER NO-UNDO.
DEFINE VARIABLE nstntbod AS CHARACTER NO-UNDO.
IF globforetag = "umbr" THEN kskopto = "Optobrunn".
ELSE kskopto = "Kabelskåp".
IF globforetag = "umbr" THEN nstntbod = "Teknikbod".
ELSE nstntbod = "Nätstation".
/*
TYP = 1 ksk
TYP = 2 stn åker
TYP = 3 stn övrigt

VATT till 2019
TYP = 1 ID = 1 ksk SKOG
TYP = 1 ID = 10 ksk IMP
TYP = 1 ID = 11 ksk BETE
TYP = 1 ID = 12 ksk ÅKER
TYP = 2 ID  = 2 stn ÅKER
TYP = 3 ID  = 3 stn SKOG
TYP = 3 ID = 13 stn IMP
TYP = 3 ID = 14 stn BETE
TYP = 4 ID = 15 stn Kommun
ELLEVIO
TYP = 1 ID = 50 ksk Skogmark Ellevio
TYP = 1 ID = 51 ksk Impediment i jordbruksmark Ellevio
TYP = 1 ID = 52 ksk Övrig mark utanför detaljplan Ellevio

 
TYP = 3 ID  = 53 nstn skog 6x6
TYP = 3 ID  = 54 nstn skog 8x8
TYP = 3 ID  = 55 nstn skog 10x10

TYP = 3 ID  = 56 nstn jordbruksimp 6x6
TYP = 3 ID  = 57 nstn jordbruksimp 8x8
TYP = 3 ID  = 58 nstn jordbruksimp 10x10

TYP = 3 ID  = 59 nstn övrig mark 6x6
TYP = 3 ID  = 60 nstn övrig mark 8x8
TYP = 3 ID  = 61 nstn övrig mark 10x10 

TYP = 1 ID = 24 ksk DALA
TYP = 1 ID = 25 OPTOBRUNN DALA
TYP = 3 ID = 26 Tstn DALA
VATT 2020
TYP = 4 ID = 15 stn Kommun
TYP = 1 ID = 1 ksk SKOG
TYP = 1 ID = 30 ksk jordbruksimp
TYP = 1 ID = 31 ksk övrig mark

TYP = 2 ID  = 32 nstn skog 6x6
TYP = 2 ID  = 33 nstn skog 8x8
TYP = 2 ID  = 34 nstn skog 10x10

TYP = 2 ID  = 35 nstn jordbruksimp 6x6
TYP = 2 ID  = 36 nstn jordbruksimp 8x8
TYP = 2 ID  = 37 nstn jordbruksimp 10x10

TYP = 2 ID  = 38 nstn övrig mark 6x6
TYP = 2 ID  = 39 nstn övrig mark 8x8
TYP = 2 ID  = 40 nstn övrig mark 10x10

TYP = 5 ID  = 41 Sjökabelskylt skog 6x6
TYP = 5 ID  = 42 Sjökabelskylt skog 8x8
TYP = 5 ID  = 43 Sjökabelskylt skog 10x10

TYP = 5 ID  = 44 Sjökabelskylt jordbruksimp 6x6
TYP = 5 ID  = 45 Sjökabelskylt jordbruksimp 8x8
TYP = 5 ID  = 46 Sjökabelskylt jordbruksimp 10x10

TYP = 5 ID  = 47 Sjökabelskylt övrig mark 6x6
TYP = 5 ID  = 48 Sjökabelskylt övrig mark 8x8
TYP = 5 ID  = 49 Sjökabelskylt övrig mark 10x10

*/
/* Ellevio fram till årsskiftet 2020
TYP = 1 ID = 20 ksk samtliga kommuner Ellevio
TYP = 1 ID = 21 ksk stort (HSP) Hälften av nätstation i samma område Ellevio
TYP = 3 ID = 22 stn Övriga kommuner, utom detaljplan Ellevio
TYP = 3 ID = 23 stn Övriga kommuner, inom detaljplan Ellevio*/
IF globforetag = "UMEA" AND vardartal LE 2020 AND Guru.Konstanter:varforetypval[58] = 0  THEN DO:   
   /*varforetypval[40] = 0*/
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp" 
   stnksktemp.PRIS = 1100.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 5
   stnksktemp.ORDNING = 5
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation" 
   stnksktemp.PRIS = 4500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 6
   stnksktemp.ORDNING = 6
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Kopplingsstation" 
   stnksktemp.PRIS = 2400.
   /*ändrat från 1000 4400 2300  20190124 Stefan Lindgren Lena*/     
END.
ELSE IF globforetag = "UMBR" AND vardartal LE 2020 AND Guru.Konstanter:varforetypval[58] = 0   THEN DO:
END.   

ELSE IF globforetag = "cSNAT" THEN DO:
   /*ska registrera som Energiföretagen 20200122 enligt Birgitta Henriksson*/
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp" 
   stnksktemp.PRIS = 625.   
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 2
   stnksktemp.ORDNING = 2
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Brunn"       
   stnksktemp.PRIS = 625.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 3
   stnksktemp.ORDNING = 3
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nod/Nätstation i skogmark/övrig mark" 
   stnksktemp.PRIS = 2750.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 4
   stnksktemp.ORDNING = 4
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nod/Nätstation i åkermark" 
   stnksktemp.PRIS = 5375.
                       
END.
ELSE IF Guru.Konstanter:varforetypval[40] = 1 THEN DO:
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " -Skog            (exkl exprop 500 kr)" 
   stnksktemp.PRIS = 625.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 30
   stnksktemp.ORDNING = 2
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " - Jordbruksimp.  (exkl exprop 500 kr)" 
   stnksktemp.PRIS = 625.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 31
   stnksktemp.ORDNING = 3
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " - Övrig mark      (exkl exprop 500 kr)" 
   stnksktemp.PRIS = 625.
      
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 32
   stnksktemp.ORDNING = 4 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 6x6 m)     (exkl exprop 2300 kr)" 
   stnksktemp.PRIS = 2875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 33
   stnksktemp.ORDNING = 5
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 8x8 m)     (exkl exprop 2900 kr)" 
   stnksktemp.PRIS = 3625.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 34
   stnksktemp.ORDNING = 6
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 35
   stnksktemp.ORDNING = 7 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 6x6 m)     (exkl exprop 2800 kr)" 
   stnksktemp.PRIS = 3500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 36
   stnksktemp.ORDNING = 8
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 8x8 m)     (exkl exprop 3100 kr)" 
   stnksktemp.PRIS = 3875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 37
   stnksktemp.ORDNING = 9
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 38
   stnksktemp.ORDNING = 10 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 6x6 m)     (exkl exprop 2800 kr)" 
   stnksktemp.PRIS = 3500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 39
   stnksktemp.ORDNING = 11
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 8x8 m)     (exkl exprop 3100 kr)" 
   stnksktemp.PRIS = 3875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 40
   stnksktemp.ORDNING = 12
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 41
   stnksktemp.ORDNING = 13 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 6x6 m)     (exkl exprop 2300 kr)" 
   stnksktemp.PRIS = 2875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 42
   stnksktemp.ORDNING = 14
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 8x8 m)     (exkl exprop 2900 kr)" 
   stnksktemp.PRIS = 3625.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 43
   stnksktemp.ORDNING = 15
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 44
   stnksktemp.ORDNING = 16 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 6x6 m)     (exkl exprop 2800 kr)" 
   stnksktemp.PRIS = 3500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 45
   stnksktemp.ORDNING = 17
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 8x8 m)     (exkl exprop 3100 kr)" 
   stnksktemp.PRIS = 3875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 46
   stnksktemp.ORDNING = 18
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 47
   stnksktemp.ORDNING = 19 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 6x6 m)     (exkl exprop 2800 kr)" 
   stnksktemp.PRIS = 3500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 48
   stnksktemp.ORDNING = 20
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 8x8 m)     (exkl exprop 3100 kr)" 
   stnksktemp.PRIS = 3875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 49
   stnksktemp.ORDNING = 21
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 10x10 m)     (exkl exprop 3400 kr)" 
   stnksktemp.PRIS = 4250.
   
   
      
   IF globforetag = "SWEO" THEN DO:
      CREATE stnksktemp.      
      ASSIGN 
      stnksktemp.ID = 15
      stnksktemp.ORDNING = 22
      stnksktemp.TYP = 4
      stnksktemp.BENAMNING = "Nätstation Kommun      (exkl exprop 4000 kr)" 
      stnksktemp.PRIS = 5000.
   END.   
   IF globforetag = "KEWA" THEN DO:
      /*Ellevio*/
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 50
      stnksktemp.ORDNING = 50
      stnksktemp.TYP = 1
      stnksktemp.BENAMNING = "Kabelskåp -Skogmark Ellevio           (exkl exprop 508 kr)" 
      stnksktemp.PRIS = 635.
      CREATE stnksktemp.   
      ASSIGN
      stnksktemp.ID = 51
      stnksktemp.ORDNING = 51
      stnksktemp.TYP = 1
      stnksktemp.BENAMNING = "Kabelskåp - Jordbruksimp. Ellevio  (exkl exprop 508 kr)" 
      stnksktemp.PRIS = 635.
      CREATE stnksktemp.   
      ASSIGN
      stnksktemp.ID = 52
      stnksktemp.ORDNING = 52
      stnksktemp.TYP = 1
      stnksktemp.BENAMNING = "Kabelskåp - Övrig mark Ellevio     (exkl exprop 508 kr)" 
      stnksktemp.PRIS = 635.
         
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 53
      stnksktemp.ORDNING = 53 
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Skog (yta 6x6 m) Ellevio    (exkl exprop 2337 kr)" 
      stnksktemp.PRIS = 2921.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 54
      stnksktemp.ORDNING = 54
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Skog (yta 8x8 m) Ellevio    (exkl exprop 2845 kr)" 
      stnksktemp.PRIS = 3556.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 55
      stnksktemp.ORDNING = 55
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Skog (yta 10x10 m) Ellevio    (exkl exprop 3353 kr)" 
      stnksktemp.PRIS = 4191.
      
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 56
      stnksktemp.ORDNING = 56 
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 6x6 m) Ellevio    (exkl exprop 2743 kr)" 
      stnksktemp.PRIS = 3429.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 57
      stnksktemp.ORDNING = 57
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 8x8 m) Ellevio    (exkl exprop 3048 kr)" 
      stnksktemp.PRIS = 3810.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 58
      stnksktemp.ORDNING = 58
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 10x10 m) Ellevio    (exkl exprop 3353 kr)" 
      stnksktemp.PRIS = 4191.
      
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 59
      stnksktemp.ORDNING = 59 
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 6x6 m) Ellevio    (exkl exprop 2743 kr)" 
      stnksktemp.PRIS = 3429.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 60
      stnksktemp.ORDNING = 60
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 8x8 m) Ellevio    (exkl exprop 3048 kr)" 
      stnksktemp.PRIS = 3810.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 61
      stnksktemp.ORDNING = 61
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 10x10 m) Ellevio    (exkl exprop 3353 kr)" 
      stnksktemp.PRIS = 4191.
   END.   
   
                      
END.
ELSE IF globforetag = "powe" OR  globforetag = "PFBK" OR globforetag = "KEWA" THEN DO:
   /*varforetypval[40] = 0*/

   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp -Skog Vattenfall           (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 30
   stnksktemp.ORDNING = 2
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp - Jordbruksimp. Vattenfall  (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 31
   stnksktemp.ORDNING = 3
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp - Övrig mark Vattenfall     (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
      
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 32
   stnksktemp.ORDNING = 4 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 6x6 m) Vattenfall    (inkl exprop 2875 kr)" 
   stnksktemp.PRIS = 2300.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 33
   stnksktemp.ORDNING = 5
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 8x8 m) Vattenfall    (inkl exprop 3625 kr)" 
   stnksktemp.PRIS = 2900.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 34
   stnksktemp.ORDNING = 6
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 35
   stnksktemp.ORDNING = 7 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 6x6 m) Vattenfall    (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 36
   stnksktemp.ORDNING = 8
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 8x8 m) Vattenfall    (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 37
   stnksktemp.ORDNING = 9
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 38
   stnksktemp.ORDNING = 10 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 6x6 m) Vattenfall    (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 39
   stnksktemp.ORDNING = 11
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 8x8 m) Vattenfall    (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 40
   stnksktemp.ORDNING = 12
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 41
   stnksktemp.ORDNING = 13 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 6x6 m) Vattenfall    (inkl exprop 2875 kr)" 
   stnksktemp.PRIS = 2300.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 42
   stnksktemp.ORDNING = 14
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 8x8 m) Vattenfall    (inkl exprop 3625 kr)" 
   stnksktemp.PRIS = 2900.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 43
   stnksktemp.ORDNING = 15
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 44
   stnksktemp.ORDNING = 16 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 6x6 m) Vattenfall    (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 45
   stnksktemp.ORDNING = 17
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 8x8 m) Vattenfall    (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 46
   stnksktemp.ORDNING = 18
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 47
   stnksktemp.ORDNING = 19 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 6x6 m) Vattenfall    (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 48
   stnksktemp.ORDNING = 20
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 8x8 m) Vattenfall    (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 49
   stnksktemp.ORDNING = 21
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 10x10 m) Vattenfall    (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.

   
   /*Ellevio*/
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 50
   stnksktemp.ORDNING = 50
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp -Skogmark Ellevio           (inkl exprop 635 kr)" 
   stnksktemp.PRIS = 508.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 51
   stnksktemp.ORDNING = 51
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp - Jordbruksimp. Ellevio  (inkl exprop 635 kr)" 
   stnksktemp.PRIS = 508.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 52
   stnksktemp.ORDNING = 52
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp - Övrig mark Ellevio     (inkl exprop 635 kr)" 
   stnksktemp.PRIS = 508.
      
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 53
   stnksktemp.ORDNING = 53 
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 6x6 m) Ellevio    (inkl exprop 2921 kr)" 
   stnksktemp.PRIS = 2337.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 54
   stnksktemp.ORDNING = 54
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 8x8 m) Ellevio    (inkl exprop 3556 kr)" 
   stnksktemp.PRIS = 2845.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 55
   stnksktemp.ORDNING = 55
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Skog (yta 10x10 m) Ellevio    (inkl exprop 4191 kr)" 
   stnksktemp.PRIS = 3353.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 56
   stnksktemp.ORDNING = 56 
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 6x6 m) Ellevio    (inkl exprop 3429 kr)" 
   stnksktemp.PRIS = 2743.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 57
   stnksktemp.ORDNING = 57
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 8x8 m) Ellevio    (inkl exprop 3810 kr)" 
   stnksktemp.PRIS = 3048.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 58
   stnksktemp.ORDNING = 58
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Jordbruksimp (yta 10x10 m) Ellevio    (inkl exprop 4191 kr)" 
   stnksktemp.PRIS = 3353.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 59
   stnksktemp.ORDNING = 59 
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 6x6 m) Ellevio    (inkl exprop 3429 kr)" 
   stnksktemp.PRIS = 2743.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 60
   stnksktemp.ORDNING = 60
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 8x8 m) Ellevio    (inkl exprop 3810 kr)" 
   stnksktemp.PRIS = 3048.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 61
   stnksktemp.ORDNING = 61
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Nätstation - Övrig mark (yta 10x10 m) Ellevio    (inkl exprop 4191 kr)" 
   stnksktemp.PRIS = 3353.
   
  
   IF  globforetag = "POWE" THEN DO:
      /*Dala energi*/
      
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 24
      stnksktemp.ORDNING = 34
      stnksktemp.TYP = 1
      stnksktemp.BENAMNING = "Dala Energi Kabelskåp                                 (inkl exprop 625 kr)" 
      stnksktemp.PRIS = 500.
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 25
      stnksktemp.ORDNING = 35
      stnksktemp.TYP = 1
      stnksktemp.BENAMNING = "Dala Energi Optobrunn                                 (inkl exprop 625 kr)" 
      stnksktemp.PRIS = 500.
      
      CREATE stnksktemp.   
      ASSIGN 
      stnksktemp.ID = 26
      stnksktemp.ORDNING = 36
      stnksktemp.TYP = 3
      stnksktemp.BENAMNING = "Dala Energi Transformatorstation                      (inkl exprop 3480 kr)" 
      stnksktemp.PRIS = 2784.
   END.   
   
END.   
ELSE DO:
   /*varforetypval[40] = 0*/

   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " -Skog            (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 30
   stnksktemp.ORDNING = 2
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " - Jordbruksimp.  (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 31
   stnksktemp.ORDNING = 3
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = kskopto + " - Övrig mark      (inkl exprop 625 kr)" 
   stnksktemp.PRIS = 500.
      
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 32
   stnksktemp.ORDNING = 4 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 6x6 m)     (inkl exprop 2875 kr)" 
   stnksktemp.PRIS = 2300.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 33
   stnksktemp.ORDNING = 5
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 8x8 m)     (inkl exprop 3625 kr)" 
   stnksktemp.PRIS = 2900.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 34
   stnksktemp.ORDNING = 6
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Skog (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 35
   stnksktemp.ORDNING = 7 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 6x6 m)     (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 36
   stnksktemp.ORDNING = 8
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 8x8 m)     (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 37
   stnksktemp.ORDNING = 9
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Jordbruksimp (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 38
   stnksktemp.ORDNING = 10 
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 6x6 m)     (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 39
   stnksktemp.ORDNING = 11
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 8x8 m)     (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 40
   stnksktemp.ORDNING = 12
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = nstntbod + " - Övrig mark (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 41
   stnksktemp.ORDNING = 13 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 6x6 m)     (inkl exprop 2875 kr)" 
   stnksktemp.PRIS = 2300.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 42
   stnksktemp.ORDNING = 14
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 8x8 m)     (inkl exprop 3625 kr)" 
   stnksktemp.PRIS = 2900.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 43
   stnksktemp.ORDNING = 15
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Skog (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 44
   stnksktemp.ORDNING = 16 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 6x6 m)     (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 45
   stnksktemp.ORDNING = 17
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 8x8 m)     (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 46
   stnksktemp.ORDNING = 18
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Jordbruksimp (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 47
   stnksktemp.ORDNING = 19 
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 6x6 m)     (inkl exprop 3500 kr)" 
   stnksktemp.PRIS = 2800.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 48
   stnksktemp.ORDNING = 20
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 8x8 m)     (inkl exprop 3875 kr)" 
   stnksktemp.PRIS = 3100.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 49
   stnksktemp.ORDNING = 21
   stnksktemp.TYP = 5
   stnksktemp.BENAMNING = "Sjökabelskylt - Övrig mark (yta 10x10 m)     (inkl exprop 4250 kr)" 
   stnksktemp.PRIS = 3400.
                       
END. 


/*ELSE IF globforetag = "SKEL" THEN DO:
   /*varforetypval[40] = 1*/
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 1
   stnksktemp.ORDNING = 1
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp i åker 1585-10565 KR" 
   stnksktemp.PRIS = 1585.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 2
   stnksktemp.ORDNING = 2
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp i bete" 
   stnksktemp.PRIS = 813.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 3
   stnksktemp.ORDNING = 3
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp i skogmark" 
   stnksktemp.PRIS = 438.
   CREATE stnksktemp.   
   ASSIGN
   stnksktemp.ID = 4
   stnksktemp.ORDNING = 4
   stnksktemp.TYP = 1
   stnksktemp.BENAMNING = "Kabelskåp i tomtmark" 
   stnksktemp.PRIS = 438.
   
   
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 5
   stnksktemp.ORDNING = 5
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i åker 4 025-12 320 kr" 
   stnksktemp.PRIS = 4025.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 6
   stnksktemp.ORDNING = 6
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i bete" 
   stnksktemp.PRIS = 3975.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 7
   stnksktemp.ORDNING = 7
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i skogmark" 
   stnksktemp.PRIS = 3913.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 8
   stnksktemp.ORDNING = 8
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i tomtmark landsbygd 4 000- 5 000 kr" 
   stnksktemp.PRIS = 4000.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 9
   stnksktemp.ORDNING = 9
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i tomtmark mindre tätort 4 500-6 000 kr" 
   stnksktemp.PRIS = 4500.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 10
   stnksktemp.ORDNING = 10
   stnksktemp.TYP = 2
   stnksktemp.BENAMNING = "Transformatorstn i tomtmark större tätort 6 000-8 000 kr" 
   stnksktemp.PRIS = 6000.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 11
   stnksktemp.ORDNING = 11
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i åker 2 640-10 565 kr" 
   stnksktemp.PRIS = 2640.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 12
   stnksktemp.ORDNING = 12
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i bete" 
   stnksktemp.PRIS = 1875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 13
   stnksktemp.ORDNING = 13
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i skogmark" 
   stnksktemp.PRIS = 1875.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 14
   stnksktemp.ORDNING = 14
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i tomtmark landsbygd 1 900- 2 900 kr" 
   stnksktemp.PRIS = 1900.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 15
   stnksktemp.ORDNING = 15
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i tomtmark mindre tätort 2 400- 3 500 kr" 
   stnksktemp.PRIS = 2400.
   CREATE stnksktemp.   
   ASSIGN 
   stnksktemp.ID = 16
   stnksktemp.ORDNING = 16
   stnksktemp.TYP = 3
   stnksktemp.BENAMNING = "Kopplingsstation i tomtmark större tätort 3 300- 4 500 kr" 
   stnksktemp.PRIS = 3300.
  /* ASSIGN 
   kskapkr = 500
   nstnakerkr = 4500
   nstnovrigkr = 2200.*/   
END.*/      

END PROCEDURE.




PROCEDURE kabkomhamt_UI.   
   DEFINE output PARAMETER TABLE FOR kabkomtemp.
   DEFINE VARIABLE kskopto AS CHARACTER NO-UNDO.
   DEFINE VARIABLE nstntbod AS CHARACTER NO-UNDO.
   IF globforetag = "umbr" THEN kskopto = "Optobrunn".
   ELSE kskopto = "Kabelskåp".
   IF globforetag = "umbr" THEN nstntbod = "Teknikbod".
   ELSE nstntbod = "Nätstation".
   EMPTY TEMP-TABLE kabkomtemp NO-ERROR. 
   IF globforetag = "umbr" THEN.
   ELSE DO:
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 1
      kabkomtemp.ORDNING = 1
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Lågspänning enligt karta".
       
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 2
      kabkomtemp.ORDNING = 2
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Högspänning enligt karta".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 3
      kabkomtemp.ORDNING = 3
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Samförläggning hsp lsp".
   END.   
   IF globforetag = "snat" OR globforetag = "UMBR" OR globforetag = "sweo" THEN DO:
   
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 40
      kabkomtemp.ORDNING = 40
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Optokabel/Kanalisation enligt karta".
   END.
   IF globforetag = "UMBR"  THEN DO:
   
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 41
      kabkomtemp.ORDNING = 41
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Fast pris, del i vägförening som underliggande markägare".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 42
      kabkomtemp.ORDNING = 42
      kabkomtemp.VAD = "KABEL"
      kabkomtemp.KABKOM = "Fast pris, optokanalisation i befintlig luftledning".
   END.   
   
      
   /*IF globforetag = "skel" THEN DO:
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"      
      kabkomtemp.KABKOM = "Kabelskåp i åker".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 5
      kabkomtemp.ORDNING = 5
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i bete".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i skogmark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 7
      kabkomtemp.ORDNING = 7
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i tomtmark".
      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 8
      kabkomtemp.ORDNING = 8
      kabkomtemp.VAD = "STATION"      
      kabkomtemp.KABKOM = "Transformatorstation i åker".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 9
      kabkomtemp.ORDNING = 9
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i bete".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 10
      kabkomtemp.ORDNING = 10
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i skogmark".
      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 11
      kabkomtemp.ORDNING = 11
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i tomtmark landsbygd".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 12
      kabkomtemp.ORDNING = 12
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i tomtmark mindre tätort".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 13
      kabkomtemp.ORDNING = 13
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i tomtmark större tätort".
      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 14
      kabkomtemp.ORDNING = 14
      kabkomtemp.VAD = "STATION"      
      kabkomtemp.KABKOM = "Kopplingsstation i åker".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 14
      kabkomtemp.ORDNING = 14
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation i bete".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 15
      kabkomtemp.ORDNING = 15
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation i skogmark".
      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 16
      kabkomtemp.ORDNING = 16
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation i tomtmark landsbygd".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 17
      kabkomtemp.ORDNING = 17
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation i tomtmark mindre tätort".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 18
      kabkomtemp.ORDNING = 18
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation i tomtmark större tätort".
             
   END.*/
   IF globforetag = "snat" THEN DO:
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Ksk/Brunn".              
       
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nstn/Nod i skogmark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 7
      kabkomtemp.ORDNING = 7
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nstn/Nod i jordbruksimp".         
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 8
      kabkomtemp.ORDNING = 8
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nstn/Nod i övrig mark".
   END.
   ELSE IF globforetag = "powe" THEN DO:
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp Samtliga kommuner".              
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 5
      kabkomtemp.ORDNING = 5
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp stort (HSP) Hälften av nätstation i samma område".       
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nätstation Övriga kommuner, utom detaljplan".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 7
      kabkomtemp.ORDNING = 7
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nätstation Övriga kommuner, inom detaljplan".         
      
   END.
   
   ELSE IF globforetag = "krin" THEN DO:
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i skog".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 5
      kabkomtemp.ORDNING = 5
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i impediment".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i bete".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 7
      kabkomtemp.ORDNING = 7
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp i åker".                  
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 8
      kabkomtemp.ORDNING = 8
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i Åkermark".      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 9
      kabkomtemp.ORDNING = 9
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Transformatorstation i Övrig mark".         
   END.
   ELSE IF globforetag = "UMEA" AND vardartal LE 2020 AND Guru.Konstanter:varforetypval[58] = 0   THEN DO:
      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kabelskåp".
                        
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 5
      kabkomtemp.ORDNING = 5
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Nätstation".      
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Kopplingsstation".         
   END.
   ELSE IF globforetag = "UMBR" AND vardartal LE 2020 AND Guru.Konstanter:varforetypval[58] = 0  THEN DO:         
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Teknikbod".         
   END.   
   ELSE DO:   
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 4
      kabkomtemp.ORDNING = 4
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = kskopto + " i skogmark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 5
      kabkomtemp.ORDNING = 5
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = kskopto + " i jordbruksimp.".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 6
      kabkomtemp.ORDNING = 6
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = kskopto + " i övrig mark".
            
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 8
      kabkomtemp.ORDNING = 8
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = nstntbod + " i skogmark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 9
      kabkomtemp.ORDNING = 9
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = nstntbod + " i jordbruksimp.".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 10
      kabkomtemp.ORDNING = 10
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = nstntbod + " i övrig mark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 12
      kabkomtemp.ORDNING = 8
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Sjökabelskylt i skogmark".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 9
      kabkomtemp.ORDNING = 9
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Sjökabelskylt i jordbruksimp.".
      CREATE kabkomtemp.
      ASSIGN
      kabkomtemp.ID = 10
      kabkomtemp.ORDNING = 10
      kabkomtemp.VAD = "STATION"
      kabkomtemp.KABKOM = "Sjökabelskylt i övrig mark".                     
               
   END.
    
END PROCEDURE.
 
PROCEDURE revadmhmt_UI.
DEFINE INPUT PARAMETER artal AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER azon1 AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER azon2 AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER afastb AS INTEGER NO-UNDO.
   /*revavtal uppdateras årligen finns i revadmhmt_UI i ANDVARDSPECAPP.P och SKAPPROTOU7.P*/

   IF artal = 2021 THEN DO:
      ASSIGN
      azon1 = 10.77
      azon2 = 4.18
      afastb = 2144.
            
   END.
   IF artal = 2020 THEN DO:
      ASSIGN
      azon1 = 10.92
      azon2 = 4.25
      afastb = 2138.
      
   END. 
   IF artal = 2019 THEN DO:
      ASSIGN
      azon1 = 10.75
      azon2 = 4.18
      afastb = 2104.
      
   END. 
END PROCEDURE.
 
PROCEDURE kopindex_UI.
DEFINE INPUT PARAMETER artal AS INTEGER NO-UNDO.
DEFINE OUTPUT PARAMETER kopindex AS DECIMAL NO-UNDO.
DEFINE OUTPUT PARAMETER bbelopp AS INTEGER NO-UNDO.
/*oktobers värden föregående år. För lite decimaler i Admin markvärd. Använd detta istället. Ligger i ANDVARDSPECAPP.P SKAPPROTOU7.P och EXVPFAKT.P*/
   IF artal = 2020 THEN DO:
      ASSIGN
      kopindex = 336.97
      bbelopp = 476.    /*2021  */      
   END.
   IF artal = 2019 THEN DO:
      ASSIGN
      kopindex = 336.04
      bbelopp = 473.    /*2020  */      
   END.
   IF artal = 2018 THEN DO:
      ASSIGN
      kopindex = 330.72
      bbelopp = 465.    /*2019  */      
   END.
   IF artal = 2017 THEN DO:
      ASSIGN
      kopindex = 323.38
      bbelopp = 455.    /*2018  */      
   END.
   IF artal = 2016 THEN DO:
      ASSIGN
      kopindex = 318.00
      bbelopp = 448.    /*2017  */      
   END.
   IF artal = 2015 THEN DO:
      ASSIGN
      kopindex = 314.29.
      bbelopp = 443.    /*2016  */      
   END.
   IF artal = 2014 THEN DO:
      ASSIGN
      kopindex = 314.02.
      bbelopp = 445.    /*2015*/      
   END.   
   IF artal = 2013 THEN DO: 
      ASSIGN
      kopindex = 314.40
      bbelopp = 444.    /*2014*/
   END.   
   IF artal = 2012 THEN DO:
      ASSIGN
      kopindex = 314.59
      bbelopp = 445.    /*2013*/
   END.   
   IF artal = 2011 THEN DO:
      ASSIGN
      kopindex = 313.42
      bbelopp = 440.    /*2012*/
   END.   
   IF artal = 2010 THEN DO:
      ASSIGN
       kopindex = 305.57
       bbelopp = 428.    /*2011*/
   END.    

END PROCEDURE.

PROCEDURE akerindex_UI.
DEFINE INPUT PARAMETER ptidpkt AS CHARACTER  NO-UNDO.
DEFINE OUTPUT PARAMETER ipvardedec AS DECIMAL NO-UNDO.

IF ptidpkt = "9101" THEN ipvardedec = 230.2.
ELSE IF ptidpkt = "0603" THEN ipvardedec = 282.89.
ELSE IF ptidpkt = "1503" THEN ipvardedec = 313.19.
ELSE ipvardedec = 313.19.
END PROCEDURE.                    