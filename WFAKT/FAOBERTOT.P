/*FAOBERTOT.P*/

&Scoped-define NEW NEW 
{FAKTTEMP.I}
&Scoped-define NEW NEW
{GLOBVAR2DEL1.I}
FUNCTION klockan100 RETURNS DECIMAL
  ( INPUT ber60 AS DECIMAL ):
  RETURN  (TRUNCATE(ber60,0) * 3600 + (ber60 - TRUNCATE(ber60,0)) * 100 * 60) / 3600.

END FUNCTION.

FUNCTION klockan60 RETURNS DECIMAL
  ( INPUT ber100 AS DECIMAL ):
  RETURN TRUNCATE(ber100,0) + ((ber100 - TRUNCATE(ber100,0)) / 100) * 60 . 
END FUNCTION.


FUNCTION runda RETURNS DECIMAL
  ( INPUT varedin AS DECIMAL) :
  RETURN ROUND(varedin,0).   /* Function return value. */
END FUNCTION.

DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER cglobforetag LIKE FORETAG.FORETAG NO-UNDO. 
DEFINE INPUT PARAMETER infakplannr AS INTEGER NO-UNDO.  
DEFINE INPUT PARAMETER fdelnrvar              AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER FILL-IN-TOMDAT AS DATE NO-UNDO.
DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER delnrvar AS INTEGER NO-UNDO.
DEFINE INPUT-OUTPUT PARAMETER kollvecko LIKE TIDREGITAB.VECKOKORD NO-UNDO.
DEFINE OUTPUT PARAMETER TABLE FOR sumtidtemp.
DEFINE INPUT-OUTPUT PARAMETER TABLE FOR egfaktemp.
 
IF kollvecko = "UTAN@" THEN .
ELSE DO:
   FIND FIRST VECKONATT WHERE  SUBSTRING(VECKONATT.DAG_AR,1,3) = "DAG" NO-LOCK NO-ERROR.   
   IF AVAILABLE VECKONATT THEN DO:
      ASSIGN kollvecko = SUBSTRING(VECKONATT.VECKOKORD,1,9).  
   END.
END.
EMPTY TEMP-TABLE sumtidtemp NO-ERROR. 

DEFINE VARIABLE dnrhj AS INTEGER NO-UNDO.
DEFINE VARIABLE debkredvar AS INTEGER NO-UNDO.
DEFINE VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE antalvar AS DECIMAL NO-UNDO.
DEFINE VARIABLE sumpkod LIKE TIDREGITAB.PERSONALKOD NO-UNDO.
DEFINE VARIABLE sumanstf LIKE ANSTFORMTAB.KOD NO-UNDO.

DEFINE VARIABLE kontber AS LOGICAL NO-UNDO.
DEFINE QUERY faktaonrq FOR FAKTAONR.

DEFINE TEMP-TABLE tidertemp NO-UNDO LIKE TIDFEL
   FIELD KOD AS CHARACTER
   INDEX KOD KOD.
FIND FIRST FAKTPLAN WHERE FAKTPLAN.FAKTNR = infakplannr NO-LOCK NO-ERROR.
FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = infakplannr 
NO-LOCK NO-ERROR.
FIND FIRST FAKTINTAKTKONT WHERE 
FAKTINTAKTKONT.FAKTNR = infakplannr AND  
FAKTINTAKTKONT.FDELNR = fdelnrvar AND 
FAKTINTAKTKONT.VFAKTNR = 0 NO-LOCK NO-ERROR.
IF AVAILABLE FAKTINTAKTKONT THEN kontber = TRUE.
ELSE  kontber = FALSE.

RUN STYRFORE.P (INPUT Guru.Konstanter:globforetag).
DEFINE TEMP-TABLE kundbeftemp NO-UNDO LIKE FAKTBEF
   FIELD VIBEFATTNING AS CHARACTER.
FOR EACH FAKTBEF WHERE FAKTBEF.FAKTNR = FAKTPLAN.FAKTNR NO-LOCK:
   CREATE kundbeftemp.
   BUFFER-COPY FAKTBEF TO kundbeftemp.
   FOR EACH kundbeftemp,
   EACH BEFATTNINGSTAB WHERE BEFATTNINGSTAB.BEFATTNING = kundbeftemp.BEFATTNING NO-LOCK:
      kundbeftemp.VIBEFATTNING = BEFATTNINGSTAB.NAMN.      
   END.      
END.   
IF vad = 1 THEN RUN openfalt_UI.
ELSE IF vad = 2 THEN RUN tidvisa_UI.


PROCEDURE openfalt_UI :
   FIND FIRST egfaktemp WHERE egfaktemp.ORDNING = 3 NO-ERROR.
   IF NOT AVAILABLE  egfaktemp THEN CREATE egfaktemp.
   ASSIGN
   egfaktemp.TYPTEXT = "Denna faktura" 
   egfaktemp.ORDNING = 3.
   IF kontber = FALSE THEN DO:
      IF FAKTREGLER.OVERTIDRGL = "EGNA REGLER" OR 
      FAKTREGLER.OVERTIDRGL = "TIDREDOVISNING" OR 
      FAKTREGLER.OVERTIDRGL = "INGA" THEN DO:      
         RUN overegna_UI.
         RUN tladda_UI (INPUT 1).                       
      END. 
      ELSE DO:
         IF FAKTREGLER.OVERTIDRGL = "INGA" THEN DO:       
         END.           
      END.
      RUN tidreg_UI.
      IF FAKTREGLER.TIMRGL = "INGA" THEN DO:
      END.           
      ELSE IF FAKTREGLER.TIMRGL = "KUNDENS EGNA" THEN DO:
         RUN tidegna_UI.                       
      END.                                              
      IF FAKTREGLER.LONRGL = "INGA" THEN DO:
      END.                           
      IF FAKTREGLER.TIMRGL = "TIDREDOVISNING" THEN DO:
      END.       
      IF FAKTREGLER.OVERTIDRGL = "TIDREDOVISNING" THEN DO:   
      END.
      IF FAKTREGLER.OVERTIDRGL = "EGNA REGLER" THEN DO:  
      END.
      IF FAKTREGLER.TRAKTRGL = "TIDREDOVISNING" OR 
      FAKTREGLER.TRAKTRGL = "EGET PRIS" THEN DO:         
      END.
      IF FAKTREGLER.LONRGL = "TIDREDOVISNING" OR 
      FAKTREGLER.LONRGL = "ENDAST MILERSÄTTNING" THEN DO:   
      END.     
      IF FAKTREGLER.TIMRGL = "KUNDENS EGNA" THEN DO:        
      END.       
   END.
   RUN stid_UI.
   RUN gtid_UI.   
   DEFINE VARIABLE pkod AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sumanstf AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sumanstraf AS CHARACTER NO-UNDO.
   REPEAT:
      FIND FIRST sumtidtemp WHERE sumtidtemp.ANSF = "" NO-LOCK NO-ERROR.
      IF NOT AVAILABLE sumtidtemp THEN DO:
         LEAVE.
      END.
      pkod = sumtidtemp.PERSONALKOD.
      FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pkod NO-LOCK NO-ERROR.

      FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING NO-LOCK NO-ERROR.
      sumanstf = ANSTFORMTAB.KOD.
      sumanstraf = PERSONALTAB.TRAAVTAL.
      FOR EACH sumtidtemp WHERE sumtidtemp.PERSONALKOD = pkod:
         ASSIGN
         sumtidtemp.ANSF     = sumanstf  
         sumtidtemp.TRAAVTAL = sumanstraf.  
      END.
   END.
   
   RUN befat_UI.   
END PROCEDURE.
PROCEDURE stid_UI :
   
   OPEN QUERY stidq FOR EACH sumtidtemp NO-LOCK, 
   EACH FAKTTID WHERE FAKTTID.FAKTNR = infakplannr AND
   FAKTTID.VFAKTNR = 0 AND 
   FAKTTID.AONR = sumtidtemp.AONR AND
   FAKTTID.DELNR = sumtidtemp.DELNR AND 
   FAKTTID.PERSONALKOD = sumtidtemp.PERSONALKOD AND 
   FAKTTID.DATUM = sumtidtemp.DATUM AND 
   FAKTTID.GSTART = sumtidtemp.GSTART AND 
   FAKTTID.GSLUT = sumtidtemp.GSLUT AND 
   TRIM(SUBSTRING(FAKTTID.VECKOKORD,1,29)) = sumtidtemp.VECKOKORD AND
   TRIM(SUBSTRING(FAKTTID.VECKOKORD,30)) = sumtidtemp.FELKORD
    NO-LOCK.
      
   GET FIRST stidq.
   DO WHILE AVAILABLE(sumtidtemp):
      ASSIGN
      sumtidtemp.START = FAKTTID.START 
      sumtidtemp.SLUT = FAKTTID.SLUT
      sumtidtemp.OTEXTID = FAKTTID.OTEXTID
      sumtidtemp.PERSMASK = FAKTTID.PERSMASK
      sumtidtemp.BEFATTNING = FAKTTID.BEFATTNING
      sumtidtemp.MED = FAKTTID.MED         
      sumtidtemp.TIMMAR = FAKTTID.TIMMAR
      sumtidtemp.BELOPP = FAKTTID.BELOPP        
      sumtidtemp.OBELOPP = FAKTTID.OBELOPP       
      sumtidtemp.OTIMMAR = FAKTTID.OTIMMAR             
      sumtidtemp.RESPRIS = FAKTTID.RESPRIS
      sumtidtemp.OPRIS = FAKTTID.OPRIS
      sumtidtemp.RESTIM = FAKTTID.DECRESTID
      sumtidtemp.RESKOSTDEC = FAKTTID.RESKOSTDEC
      sumtidtemp.OANT1 = FAKTTID.OANT1.  
      GET NEXT stidq.
   END.
   CLOSE QUERY stidq.   
END PROCEDURE.

PROCEDURE gtid_UI :
  
   OPEN QUERY faktidq FOR EACH FAKTTID WHERE 
   FAKTTID.VFAKTNR = 0 AND FAKTTID.FAKTNR = infakplannr AND
   FAKTTID.SENASTFAK = ? NO-LOCK.
   GET FIRST faktidq NO-LOCK.
   DO WHILE AVAILABLE(FAKTTID):    
      FIND FIRST sumtidtemp WHERE 
      sumtidtemp.PERSONALKOD = FAKTTID.PERSONALKOD AND 
      sumtidtemp.AONR = FAKTTID.AONR AND 
      sumtidtemp.DELNR = FAKTTID.DELNR AND
      sumtidtemp.DATUM = FAKTTID.DATUM AND 
      sumtidtemp.START = FAKTTID.START AND 
      sumtidtemp.SLUT = FAKTTID.SLUT AND
      sumtidtemp.GSTART = FAKTTID.GSTART AND 
      sumtidtemp.GSLUT = FAKTTID.GSLUT AND 
      sumtidtemp.VECKOKORD = TRIM(SUBSTRING(FAKTTID.VECKOKORD,1,29)) AND 
      sumtidtemp.FELKORD = TRIM(SUBSTRING(FAKTTID.VECKOKORD,30))
      NO-ERROR.
      IF NOT AVAILABLE sumtidtemp THEN CREATE sumtidtemp.  
      ASSIGN        
      sumtidtemp.PERSONALKOD = FAKTTID.PERSONALKOD
      sumtidtemp.NAMN = FAKTTID.NAMN 
      sumtidtemp.AONR = FAKTTID.AONR
      sumtidtemp.DELNR = FAKTTID.DELNR
      sumtidtemp.TIMMAR = FAKTTID.TIMMAR
      sumtidtemp.BELOPP = FAKTTID.BELOPP        
      sumtidtemp.OBELOPP = FAKTTID.OBELOPP 
      sumtidtemp.TBELOPP = FAKTTID.TBELOPP             
      sumtidtemp.OTIMMAR = FAKTTID.OTIMMAR 
      sumtidtemp.LONKOST = FAKTTID.LONKOST                  
      sumtidtemp.PERSMASK = FAKTTID.PERSMASK
      sumtidtemp.BEFATTNING = FAKTTID.BEFATTNING      
      sumtidtemp.PERSMASK = FAKTTID.PERSMASK
      sumtidtemp.TRAKTKOD = FAKTTID.TRAKTKOD
      sumtidtemp.TRAKTANTAL = FAKTTID.TRAKTANTAL  
      sumtidtemp.LONTILLAGG = FAKTTID.LONTILLAGG      
      sumtidtemp.LONTILLANTAL = FAKTTID.LONTILLANTAL 
      sumtidtemp.PRISA = FAKTTID.PRISA 
      sumtidtemp.ENDAGS = FAKTTID.ENDAGS       
      sumtidtemp.MED = FAKTTID.MED      
      sumtidtemp.PRISTYP = FAKTTID.PRISTYP
      sumtidtemp.RESTIM = FAKTTID.DECRESTID
      sumtidtemp.RESPRIS = FAKTTID.RESPRIS
      sumtidtemp.OPRIS = FAKTTID.OPRIS
      sumtidtemp.RESKOSTDEC = FAKTTID.RESKOSTDEC
      sumtidtemp.OTEXTID = FAKTTID.OTEXTID
      sumtidtemp.DATUM = FAKTTID.DATUM
      sumtidtemp.START = FAKTTID.START 
      sumtidtemp.SLUT = FAKTTID.SLUT
      sumtidtemp.GSTART = FAKTTID.GSTART 
      sumtidtemp.GSLUT = FAKTTID.GSLUT
      sumtidtemp.LUNCH = FAKTTID.LUNCH
      sumtidtemp.OANT1 = FAKTTID.OANT1
      sumtidtemp.VECKOKORD = TRIM(SUBSTRING(FAKTTID.VECKOKORD,1,29))  
      sumtidtemp.FELKORD = TRIM(SUBSTRING(FAKTTID.VECKOKORD,30)).
      IF kollvecko = "UTAN@" THEN DO:
         IF sumtidtemp.DATUM > FILL-IN-TOMDAT THEN DO TRANSACTION:
            GET CURRENT faktidq EXCLUSIVE-LOCK.
            DELETE FAKTTID.
            DELETE sumtidtemp.
         END.
      END.
      ELSE DO:
         IF sumtidtemp.DATUM > FILL-IN-TOMDAT THEN DO TRANSACTION:
            GET CURRENT faktidq EXCLUSIVE-LOCK.
            DELETE FAKTTID.
            DELETE sumtidtemp.
         END.
      END.      
      GET NEXT faktidq NO-LOCK.
   END.             
   CLOSE QUERY faktidq.

END PROCEDURE.


PROCEDURE overegna_UI :
   IF FAKTPLAN.FAKTTYP = "Löpande utan" THEN kollvecko = "UTAN@".
   FIND FIRST FAKTREGLER WHERE FAKTREGLER.FAKTNR = FAKTPLAN.FAKTNR 
   USE-INDEX FAKTREGLER NO-LOCK NO-ERROR.
   IF delnrvar = ? THEN DO:
      OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
      USE-INDEX FAKTA NO-LOCK.
   END.
   ELSE DO:
      OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
      AND FAKTAONR.AONR = aonrvar AND FAKTAONR.DELNR = delnrvar
      USE-INDEX FAKTA NO-LOCK.
   END.
   IF FAKTREGLER.TIMRGL = "INGA" THEN RETURN.
   IF kollvecko = "UTAN@" THEN RUN utan_UI.
   ELSE RUN overegnat_UI.
   
END PROCEDURE.

PROCEDURE tladda_UI :
   DEFINE INPUT PARAMETER visatotvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE pkod AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sumanstf AS CHARACTER NO-UNDO.
   DEFINE VARIABLE sumanstraf AS CHARACTER NO-UNDO.
   pkod = "".
   FOR EACH tidtemp USE-INDEX PKOD:         
      CREATE sumtidtemp.
      IF pkod NE tidtemp.PERSONALKOD THEN DO:               
         ASSIGN
         sumanstf   = tidtemp.KOD
         sumanstraf = tidtemp.TRAAVTAL.
         pkod = tidtemp.PERSONALKOD.
      END.
      ASSIGN
      sumtidtemp.FELKORD = tidtemp.FELKORD
      sumtidtemp.VECKOKORD = tidtemp.VECKOKORD
      sumtidtemp.ANSF     = sumanstf  
      sumtidtemp.TRAAVTAL = sumanstraf
      sumtidtemp.PERSMASK = tidtemp.PERSMASK
      sumtidtemp.BEFATTNING = tidtemp.BEFATTNING               
      sumtidtemp.NAMN = tidtemp.NAMN.   
      IF tidtemp.PRISTYP = "RESTID..." THEN DO:
         ASSIGN
         sumtidtemp.TRAKTKOD     = tidtemp.TRAKTKOD    
         sumtidtemp.TRAKTANTAL   = tidtemp.TRAKTANTAL  
         sumtidtemp.LONTILLAGG   = tidtemp.LONTILLAGG  
         sumtidtemp.LONTILLANTAL = tidtemp.LONTILLANTAL
         sumtidtemp.OTEXTID = tidtemp.OTEXTID
         sumtidtemp.DATUM = tidtemp.DATUM
         sumtidtemp.GSTART = tidtemp.START
         sumtidtemp.GSLUT = tidtemp.SLUT
         sumtidtemp.START = tidtemp.START
         sumtidtemp.SLUT = tidtemp.SLUT
         sumtidtemp.PERSONALKOD = tidtemp.PERSONALKOD
         sumtidtemp.AONR = tidtemp.AONR
         sumtidtemp.DELNR = tidtemp.DELNR                  
         sumtidtemp.MED = TRUE 
         sumtidtemp.RESPRIS = tidtemp.RESPRIS 
         sumtidtemp.RESKOSTDEC = sumtidtemp.RESKOSTDEC + tidtemp.RESKOSTDEC
         sumtidtemp.RESTIM = sumtidtemp.RESTIM + tidtemp.RESTIM.
      END.
      ELSE DO:      
         ASSIGN
         sumtidtemp.TRAKTKOD     = tidtemp.TRAKTKOD    
         sumtidtemp.TRAKTANTAL   = tidtemp.TRAKTANTAL  
         sumtidtemp.LONTILLAGG   = tidtemp.LONTILLAGG  
         sumtidtemp.LONTILLANTAL = tidtemp.LONTILLANTAL
         sumtidtemp.START = tidtemp.START
         sumtidtemp.SLUT = tidtemp.SLUT
         sumtidtemp.GSTART = tidtemp.START 
         sumtidtemp.GSLUT = tidtemp.SLUT         
         sumtidtemp.OTEXTID = tidtemp.OTEXTID
         sumtidtemp.DATUM = tidtemp.DATUM
         sumtidtemp.PERSONALKOD = tidtemp.PERSONALKOD
         sumtidtemp.AONR = tidtemp.AONR
         sumtidtemp.DELNR = tidtemp.DELNR         
         sumtidtemp.TIMMAR = tidtemp.TOTALT
         sumtidtemp.BELOPP = tidtemp.KOST 
         sumtidtemp.OBELOPP = tidtemp.OKOST
         sumtidtemp.OTIMMAR = tidtemp.OTIMMAR                                        
         sumtidtemp.PRISA = tidtemp.PRIS
         sumtidtemp.OPRIS = tidtemp.OPRIS
         sumtidtemp.LUNCH = tidtemp.LUNCH
         sumtidtemp.MED = TRUE.   
      END.
      IF visatotvar = 1 THEN DO:
        
         ASSIGN
         egfaktemp.OBELOPP = egfaktemp.OBELOPP + tidtemp.OKOST
         egfaktemp.ARBKOST = egfaktemp.ARBKOST + tidtemp.KOST.                        
         IF tidtemp.PRISTYP = "RESTID..." THEN DO:
            egfaktemp.RES = egfaktemp.RES + tidtemp.RESKOSTDEC.
         END.
      END.
   END.      
   pkod = "".  
END PROCEDURE.

PROCEDURE tidreg_UI :
   IF kollvecko = "UTAN@" THEN RUN utantra_UI.
   ELSE DO:
      IF delnrvar = ? THEN DO:
         OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
         USE-INDEX FAKTA NO-LOCK.
      END.
      ELSE DO:
         OPEN QUERY faktaonrq FOR EACH FAKTAONR WHERE FAKTAONR.FAKTNR = FAKTPLAN.FAKTNR 
         AND FAKTAONR.AONR = aonrvar AND FAKTAONR.DELNR = delnrvar
         USE-INDEX FAKTA NO-LOCK.
      END.
      RUN tidregtra_UI.
   END.
     
END PROCEDURE.

PROCEDURE tidegna_UI :
   OPEN QUERY faktbefq FOR EACH kundbeftemp WHERE kundbeftemp.FAKTNR = infakplannr
   NO-LOCK.
   GET FIRST faktbefq NO-LOCK.
   DO WHILE AVAILABLE(kundbeftemp):         
      FOR EACH sumtidtemp WHERE sumtidtemp.BEFATTNING = kundbeftemp.BEFATTNING USE-INDEX BEF.         
         ASSIGN
         sumtidtemp.PERSBEF = sumtidtemp.PERSONALKOD + " " + kundbeftemp.VIBEFATTNING
         sumtidtemp.VIBEFATTNING = kundbeftemp.VIBEFATTNING
         sumtidtemp.RESKOSTDEC = sumtidtemp.RESTIM * kundbeftemp.PRISRES
         sumtidtemp.BELOPP = sumtidtemp.TIMMAR * kundbeftemp.PRISA
         sumtidtemp.RESPRIS = kundbeftemp.PRISRES
         sumtidtemp.PRISA = kundbeftemp.PRISA.
      END.
      GET NEXT faktbefq NO-LOCK.    
   END. 
END PROCEDURE.

PROCEDURE befat_UI :
   OPEN QUERY sq FOR EACH sumtidtemp NO-LOCK,
   EACH OVERTEXTFAKT WHERE OVERTEXTFAKT.OTEXTID = sumtidtemp.OTEXTID NO-LOCK.
   GET FIRST sq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(sumtidtemp):
      ASSIGN sumtidtemp.VIOBEFATTNING = OVERTEXTFAKT.OTEXT. 
      GET NEXT sq EXCLUSIVE-LOCK.
   END.
   OPEN QUERY sbq FOR EACH sumtidtemp NO-LOCK,
   EACH BEFATTNINGSTAB WHERE BEFATTNINGSTAB.BEFATTNING = sumtidtemp.BEFATTNING NO-LOCK.
   GET FIRST sbq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(sumtidtemp):
      ASSIGN 
      sumtidtemp.PERSBEF = sumtidtemp.PERSONALKOD + " " + BEFATTNINGSTAB.NAMN
      sumtidtemp.VIBEFATTNING = BEFATTNINGSTAB.NAMN. 
      GET NEXT sbq EXCLUSIVE-LOCK.
   END.
   OPEN QUERY slq FOR EACH sumtidtemp NO-LOCK,
   EACH LONTILL WHERE LONTILL.LONTILLAGG = sumtidtemp.LONTILLAGG AND
   LONTILL.KOD = sumtidtemp.ANSF NO-LOCK.
   GET FIRST slq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(LONTILL):
      ASSIGN sumtidtemp.VILART = LONTILL.VILART. 
      GET NEXT slq EXCLUSIVE-LOCK.
   END.
   OPEN QUERY stq FOR EACH sumtidtemp NO-LOCK,
   EACH TRAKTATAB WHERE TRAKTATAB.TRAAVTAL = sumtidtemp.TRAAVTAL AND
   TRAKTATAB.TRAKTKOD = sumtidtemp.TRAKTKOD NO-LOCK.
   GET FIRST stq EXCLUSIVE-LOCK.
   DO WHILE AVAILABLE(TRAKTATAB):
      ASSIGN sumtidtemp.VITRAKT = TRAKTATAB.VILART. 
      GET NEXT stq EXCLUSIVE-LOCK.
   END.
END PROCEDURE.

PROCEDURE tidvisa_UI :
   IF FAKTREGLER.OVERTIDRGL = "EGNA REGLER" OR 
   FAKTREGLER.OVERTIDRGL = "TIDREDOVISNING" OR 
   FAKTREGLER.OVERTIDRGL = "INGA" THEN DO:
      RUN overegna_UI.                   
      FOR EACH sumtidtemp:
         ASSIGN 
         sumtidtemp.TIMMAR = 0
         sumtidtemp.BELOPP = 0 
         sumtidtemp.OBELOPP = 0
         sumtidtemp.OTIMMAR = 0.  
      END.
      RUN tladda_UI (INPUT 0).      
   END.       
   IF FAKTREGLER.TIMRGL = "KUNDENS EGNA" THEN DO:
      RUN tidegna_UI.                       
   END.    
   RUN tidreg_UI.   
   RUN befat_UI.
   RUN stid_UI.
END PROCEDURE.
{FAOBERU.I}
{FALONTRA.I}  
