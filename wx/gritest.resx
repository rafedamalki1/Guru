<?xml version="1.0" encoding="utf-8" standalone="no"?><root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bindingSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>156, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
  <data mimetype="application/x-microsoft.net.object.bytearray.base64" name="appearance2.Image" type="System.Drawing.Bitmap, System.Drawing">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//2Q==
</value>
  </data>
</root>