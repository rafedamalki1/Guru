/*EXPSTOR.p EXPORT AV STÖRNINGAR*/       
DEFINE TEMP-TABLE val_temp
   FIELD AVDELNINGNR LIKE STORDISTRIKT.AVDELNINGNR
   FIELD DISTRIKTID LIKE STORDISTRIKT.DISTRIKTID
   FIELD VIDISTRIKT LIKE STORDISTRIKT.VIDISTRIKT
   FIELD ARTAL LIKE STORDISTRIKT.ARTAL
   FIELD NAMN LIKE STORDISTRIKT.NAMN.

DEFINE TEMP-TABLE dumpa_temp2
   FIELD FORETAG            AS INTEGER 
   FIELD DISTRIKT           AS CHARACTER
   FIELD BDAT               AS DATE FORMAT "9999/99/99"
   FIELD BTID               AS INTEGER FORMAT "9999"
   FIELD C1                 AS INTEGER   
   FIELD D1                 AS CHARACTER
   FIELD D2                 AS CHARACTER 
   FIELD E1                 AS INTEGER
   FIELD E2                 AS CHARACTER
   FIELD F1                 AS INTEGER
   FIELD F2                 AS CHARACTER
   FIELD G1                 AS INTEGER
   FIELD G2                 AS INTEGER
   FIELD G3                 AS INTEGER
   FIELD H                  AS INTEGER
   FIELD J1DAT              AS DATE FORMAT "9999/99/99"
   FIELD J1KLOCK            AS INTEGER FORMAT "9999"
   FIELD J2DAT              AS DATE FORMAT "9999/99/99"
   FIELD J2KLOCK            AS INTEGER FORMAT "9999"
   FIELD J3                 AS DECIMAL
   FIELD K1                 AS INTEGER
   FIELD K2                 AS INTEGER
   FIELD L1                 AS INTEGER
   FIELD L2                 AS INTEGER
   FIELD M1                 AS INTEGER
   FIELD M2                 AS INTEGER
   FIELD N1                 AS INTEGER
   FIELD N2                 AS CHARACTER
   FIELD P1                 AS INTEGER
   FIELD P2                 AS INTEGER
   FIELD Q                  AS INTEGER
   FIELD R                  AS INTEGER
   FIELD S                  AS INTEGER
   FIELD T1                 AS INTEGER
   FIELD T2                 AS INTEGER
   FIELD T3                 AS INTEGER
   FIELD FEL                AS CHARACTER
   FIELD FEL2               AS LOGICAL INITIAL FALSE
   INDEX ORD FORETAG DISTRIKT BDAT BTID ASCENDING.

DEFINE INPUT PARAMETER TABLE FOR val_temp.
DEFINE OUTPUT PARAMETER TABLE FOR dumpa_temp2.

FOR EACH val_temp:
   OPEN QUERY sq FOR EACH STORNINGSTAB WHERE STORNINGSTAB.DISTRIKTID = val_temp.DISTRIKTID /*AND 
   YEAR(STORNINGSTAB.HDATUM) = val_temp.ARTAL*/ NO-LOCK.
   GET FIRST sq NO-LOCK.
   DO WHILE AVAILABLE(STORNINGSTAB):      
      CREATE dumpa_temp2.
      ASSIGN   
      dumpa_temp2.FORETAG = val_temp.AVDELNINGNR
      dumpa_temp2.DISTRIKT = val_temp.VIDISTRIKT
      dumpa_temp2.BDAT = STORNINGSTAB.HDATUM
      dumpa_temp2.BTID = STORNINGSTAB.HKLOCKAN * 100
      dumpa_temp2.C1 = STORNINGSTAB.STORTYPID
      dumpa_temp2.E2 = STORNINGSTAB.BRYTORGLIT
      dumpa_temp2.F2 = STORNINGSTAB.SEKTIONLIT
      dumpa_temp2.H = ((STORNINGSTAB.BORTMW * 1000) + STORNINGSTAB.BORTKW)
      dumpa_temp2.J2DAT = STORNINGSTAB.DATUM100%
      dumpa_temp2.J2KLOCK = STORNINGSTAB.KLOCKAN100% * 100
      dumpa_temp2.J3 = STORNINGSTAB.AVBROTTSTID
      dumpa_temp2.K1 = STORNINGSTAB.ANTALHSP
      dumpa_temp2.K2 = STORNINGSTAB.ANTALLSP
      dumpa_temp2.L1 = STORNINGSTAB.ANTALREGSTN
      dumpa_temp2.L2 = STORNINGSTAB.ANTALNATSTN
      dumpa_temp2.M1 = STORNINGSTAB.EJBORTKUND
      dumpa_temp2.M2 = ((STORNINGSTAB.EJBORTMW * 1000) + STORNINGSTAB.EJBORTKW)
      dumpa_temp2.N2 = STORNINGSTAB.STDRIFTLIT      
      dumpa_temp2.T2 = STORNINGSTAB.ANTALRESERVKRAFT
      dumpa_temp2.T3 = STORNINGSTAB.TIDRESERVKRAFT.

      IF STORNINGSTAB.KLOCKAN70% NE ? THEN DO:
         ASSIGN
         dumpa_temp2.J1DAT = STORNINGSTAB.DATUM70%
         dumpa_temp2.J1KLOCK = STORNINGSTAB.KLOCKAN70% * 100.
      END.
      FIND LAST BORTKOPPLAD WHERE BORTKOPPLAD.STORNUMMERID = STORNINGSTAB.STORNUMMERID
      USE-INDEX AVBROTT NO-LOCK NO-ERROR.
      IF AVAILABLE BORTKOPPLAD THEN DO:
         ASSIGN
         dumpa_temp2.J2DAT = BORTKOPPLAD.ATERDATUM
         dumpa_temp2.J2KLOCK = BORTKOPPLAD.ATERKLOCKAN * 100.
      END.
      /*Driftstörning*/
      IF STORNINGSTAB.STORTYPID = 1 THEN DO:
         FIND FIRST SPANNINGSNIV WHERE SPANNINGSNIV.SPANID = 
         STORNINGSTAB.FELSPANID USE-INDEX SPANID NO-LOCK NO-ERROR.
         FIND FIRST INLASTAB WHERE INLASTAB.INKODID = SPANNINGSNIV.INKODID
         USE-INDEX INKODID NO-LOCK NO-ERROR.
         dumpa_temp2.D2 = INLASTAB.INKODPOSCH.

         FIND FIRST SEKTIONERING WHERE SEKTIONERING.SEKTIONERID = 
         STORNINGSTAB.SEKTIONERID USE-INDEX SEKTIONERID NO-LOCK NO-ERROR.
         FIND FIRST INLASTAB WHERE INLASTAB.INKODID = SEKTIONERING.INKODID
         USE-INDEX INKODID NO-LOCK NO-ERROR.
         dumpa_temp2.F1 = INTEGER(INLASTAB.INKODPOSCH).

         FIND FIRST UTLOSNINGSKYDD WHERE UTLOSNINGSKYDD.UTLOSID = 
         STORNINGSTAB.UTLOSID USE-INDEX UTLOSID NO-LOCK NO-ERROR.
         FIND FIRST INLASTAB WHERE INLASTAB.INKODID = UTLOSNINGSKYDD.INKODID
         USE-INDEX INKODID NO-LOCK NO-ERROR.
         dumpa_temp2.G1 = INTEGER(INLASTAB.INKODPOSCH).

         FIND FIRST RELAINDIKERING WHERE RELAINDIKERING.RELINID = 
         STORNINGSTAB.RELINID USE-INDEX RELINID NO-LOCK NO-ERROR.
         FIND FIRST INLASTAB WHERE INLASTAB.INKODID = RELAINDIKERING.INKODID
         USE-INDEX INKODID NO-LOCK NO-ERROR.
         dumpa_temp2.G2 = INTEGER(INLASTAB.INKODPOSCH).

/*          FIND FIRST FELYTTRING WHERE FELYTTRING.FELYID =                 */
/*          STORNINGSTAB.FELYID USE-INDEX FELYID NO-LOCK NO-ERROR.          */
/*          FIND FIRST INLASTAB WHERE INLASTAB.INKODID = FELYTTRING.INKODID */
/*          USE-INDEX INKODID NO-LOCK NO-ERROR.                             */
/*          dumpa_temp2.G3 = INTEGER(INLASTAB.INKODPOSCH).                  */

         FIND FIRST FELORSAK WHERE FELORSAK.FELOID = 
         STORNINGSTAB.FELOID USE-INDEX FELOID NO-LOCK NO-ERROR.
         /*Egna felorsaker skickas som okänd*/
         IF FELORSAK.FELOID >= 500 THEN DO:
            dumpa_temp2.S = 93.
         END.
         ELSE DO:
            /*tester*/
            FIND FIRST INLASTAB WHERE INLASTAB.INKODID = FELORSAK.INKODID
            USE-INDEX INKODID NO-LOCK NO-ERROR.
            IF AVAILABLE INLASTAB THEN dumpa_temp2.S = INTEGER(INLASTAB.INKODPOSCH).
         END.         
      END.

      FIND FIRST SPANNINGSNIV WHERE SPANNINGSNIV.SPANID = 
      STORNINGSTAB.FRANSPANID USE-INDEX SPANID NO-LOCK NO-ERROR.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = SPANNINGSNIV.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN dumpa_temp2.D1 = INLASTAB.INKODPOSCH.
      
      FIND FIRST BRYTORGAN WHERE BRYTORGAN.BRYTOID = 
      STORNINGSTAB.BRYTOID USE-INDEX BRYTOID NO-LOCK NO-ERROR.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = BRYTORGAN.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN dumpa_temp2.E1 = INTEGER(INLASTAB.INKODPOSCH).                 

      FIND FIRST STORDRIFTOMR WHERE STORDRIFTOMR.STDRIFTID = 
      STORNINGSTAB.STDRIFTID USE-INDEX STDRIFTID NO-LOCK NO-ERROR.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = STORDRIFTOMR.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN dumpa_temp2.N1 = INTEGER(INLASTAB.INKODPOSCH).
      
/*       FIND FIRST NATSTRUKTUR WHERE NATSTRUKTUR.STRUKID =               */
/*       STORNINGSTAB.STRUKIDP1 USE-INDEX STRUKID NO-LOCK NO-ERROR.       */
/*       FIND FIRST INLASTAB WHERE INLASTAB.INKODID = NATSTRUKTUR.INKODID */
/*       USE-INDEX INKODID NO-LOCK NO-ERROR.                              */
/*       dumpa_temp2.P1 = INTEGER(INLASTAB.INKODPOSCH).                   */
/*                                                                        */
/*       FIND FIRST NATSTRUKTUR WHERE NATSTRUKTUR.STRUKID =               */
/*       STORNINGSTAB.STRUKIDP2 USE-INDEX STRUKID NO-LOCK NO-ERROR.       */
/*       FIND FIRST INLASTAB WHERE INLASTAB.INKODID = NATSTRUKTUR.INKODID */
/*       USE-INDEX INKODID NO-LOCK NO-ERROR.                              */
/*       dumpa_temp2.P2 = INTEGER(INLASTAB.INKODPOSCH).                   */
      
      FIND FIRST NATTYP WHERE NATTYP.NATTYPID = 
      STORNINGSTAB.NATTYPID USE-INDEX NATTYPID NO-LOCK NO-ERROR.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = NATTYP.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN dumpa_temp2.Q = INTEGER(INLASTAB.INKODPOSCH).

      FIND FIRST ANLAGGNINGSDEL WHERE ANLAGGNINGSDEL.ADELID = 
      STORNINGSTAB.ADELID USE-INDEX ADELID NO-LOCK NO-ERROR.
      FIND FIRST INLASTAB WHERE INLASTAB.INKODID = ANLAGGNINGSDEL.INKODID
      USE-INDEX INKODID NO-LOCK NO-ERROR.
      IF AVAILABLE INLASTAB THEN dumpa_temp2.R = INTEGER(INLASTAB.INKODPOSCH).

      GET NEXT sq NO-LOCK.
   END.
   CLOSE QUERY sq.
END.

                
