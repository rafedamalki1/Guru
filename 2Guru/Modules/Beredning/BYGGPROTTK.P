
/*------------------------------------------------------------------------
    File        : BYGGPROTTK.P
    Purpose     : 

    Syntax      :

    Description : 

    Author(s)   : 
    Created     : Thu Jan 23 14:06:07 CET 2020
    Notes       :
  ----------------------------------------------------------------------*/
DEFINE  TEMP-TABLE extemp
  {EXTEMPDEF.I}

DEFINE INPUT PARAMETER TABLE FOR extemp.
DEFINE VARIABLE ByggProttDSh AS HANDLE NO-UNDO.   
DEFINE VARIABLE bytrownow AS LOGICAL NO-UNDO.
DEFINE BUFFER extempBuff FOR extemp.
DEFINE BUFFER extempBuff2 FOR extemp.
{BYGGVISATT.I}

      
      
 ByggProttDSh = DATASET ByggProttDS:HANDLE.   
 
 FOR EACH extemp WHERE extemp.NIVABER = 0 AND extemp.NIVANUM = 0 AND extemp.NIVASKAPNUM = 0 AND extemp.NIVAUPPLAG = 0 NO-LOCK:
    DELETE extemp.
 END.

/*
    OUTPUT TO c:\exe.txt  .

  FOR EACH extemp:
   PUT UNFORMATTED  
   
   
   extemp.COLVAR " "
   extemp.ROWVAR " "
   extemp.DATA  " "
   extemp.NIVABER " "
   extemp.NIVAUPPLAG " "
   extemp.NIVANUM " "
   extemp.NIVASKAPNUM " " 
   extemp.KABLAR " "
   extemp.KALKYL " "
   extemp.EGENK " "
   
   SKIP.
   END.
   
   OUTPUT CLOSE.     

*/ 

RUN ByggVis_UI.
RUN writexmlomini_UI (INPUT ByggProttDSh,INPUT "FILE",INPUT "D:\Elpool\BYGG.XML" ,INPUT "",INPUT "",INPUT YES,INPUT NO,INPUT NO, INPUT NO, INPUT YES).
PROCEDURE writexmlomini_UI :            
   DEFINE INPUT  PARAMETER hPDS AS HANDLE NO-UNDO.
   DEFINE INPUT  PARAMETER cTargetType AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER cFile AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER cEncoding AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER cSchemaLocation AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER lFormatted AS LOGICAL NO-UNDO.
   DEFINE INPUT  PARAMETER lWriteSchema AS LOGICAL NO-UNDO.
   DEFINE INPUT  PARAMETER lMinSchema AS LOGICAL NO-UNDO.
   DEFINE INPUT  PARAMETER lWriteBeforeImage AS LOGICAL NO-UNDO.
   DEFINE INPUT  PARAMETER omit-initial AS LOGICAL NO-UNDO.
   DEFINE VARIABLE lReturn AS LOGICAL NO-UNDO.
   lReturn = hPDS:WRITE-XML(cTargetType, cFile, lFormatted,cEncoding,cSchemaLocation,lWriteSchema,lMinSchema,lWriteBeforeImage, omit-initial).      
/*
 ASSIGN 
cTargetType    =  "FILE"
cFile           = "d:\elpool\delad\pro9s\ExportIFS\GuruOrdermtrlxsd"
lFormatted      = TRUE
cEncoding       = "iso8859-1"
lWriteSchema = FALSE 
lMinSchema = false. 
lReturn = hPDS:WRITE-XMLSCHEMA(cTargetType, cFile, lFormatted,  cEncoding, lMinSchema).
  */ 
 END PROCEDURE.   

/*
OUTPUT TO c:\exe.txt APPEND .
FOR EACH ByggKonsTT:
      PUT UNFORMATTED ByggKonsTT.KONST ByggKonsTT.KONSTDATA RECID(ByggKonsTT) SKIP.
      FOR EACH ByggKablarTT WHERE ByggKablarTT.RID = RECID(ByggKonsTT):
         PUT UNFORMATTED ByggKablarTT.KABEL ByggKablarTT.B2 ByggKablarTT.RID SKIP.
      END.
      FOR EACH ByggKalkTT WHERE ByggKalkTT.RID = RECID(ByggKonsTT):
         PUT UNFORMATTED ByggKalkTT.ARBKODLOPNR ByggKalkTT.RID SKIP.
      END.
      FOR EACH ByggEgenKontTT WHERE ByggEgenKontTT.RID = RECID(ByggKonsTT):
         PUT UNFORMATTED ByggEgenKontTT.BENAMNING ByggEgenKontTT.RID SKIP.
      END.
      
 END.          
   OUTPUT CLOSE.   
   */  
/*
OUTPUT TO c:\exe.txt APPEND .
FOR EACH  ByggVisaTT:
   
   FOR EACH ByggHuvTT WHERE ByggHuvTT.RID = RECID(ByggVisaTT):
      PUT UNFORMATTED ByggHuvTT.UPPGIFT "u" ByggHuvTT.BENAMNING "b"  ByggHuvTT.DATUM SKIP.
   END.   
   FOR EACH ByggUppTT WHERE ByggUppTT.RID = RECID(ByggVisaTT) NO-LOCK:
      PUT UNFORMATTED ByggUppTT.BENAMNING SKIP.
      FOR EACH ByggUppAnmTT  WHERE ByggUppAnmTT.RID = RECID(ByggUppTT) NO-LOCK:
         PUT UNFORMATTED ByggUppAnmTT.ANMARK SKIP.
      END.
      FOR EACH ByggKonsTT  WHERE ByggKonsTT.RID = RECID(ByggUppTT) NO-LOCK:
         PUT UNFORMATTED ByggKonsTT.KONST ByggKonsTT.KONSTDATA  SKIP.
         FOR EACH ByggKablarTT  WHERE ByggKablarTT.RID = RECID(ByggKonsTT) NO-LOCK:
            PUT UNFORMATTED ByggKablarTT.KABEL ByggKablarTT.B2  SKIP.
         END.
         FOR EACH ByggKonstAnmTT  WHERE ByggKonstAnmTT.RID = RECID(ByggKonsTT) NO-LOCK:
            PUT UNFORMATTED ByggKonstAnmTT.ANMARK  SKIP.
         END.
         FOR EACH ByggMtrlTT WHERE ByggMtrlTT.RID = RECID(ByggKonsTT) NO-LOCK:
            PUT UNFORMATTED ByggMtrlTT.ENR ByggMtrlTT.BENAMNING  SKIP.
         END.
         FOR EACH ByggKalkTT WHERE ByggKalkTT.RID = RECID(ByggKonsTT) NO-LOCK:
            PUT UNFORMATTED ByggKalkTT.ARBKODLOPNR ByggKalkTT.BENAMNING  SKIP.
         END. 
         FOR EACH ByggEgenKontTT WHERE ByggEgenKontTT.RID = RECID(ByggKonsTT) NO-LOCK:
            PUT UNFORMATTED ByggEgenKontTT.BENAMNING SKIP.
         END. 
      END.   
   END.   
   
END.
OUTPUT CLOSE.

*/

RUN Bvisa_UI.


PROCEDURE ByggVis_UI :
   DEFINE VARIABLE senastebytrow AS INTEGER NO-UNDO.

   RUN ByggVisaTT_UI. 
   FOR EACH extemp WHERE NO-LOCK:
    
      IF SUBSTRING(extemp.DATA,1,1) = ":" THEN DO:
         SUBSTRING(extemp.DATA,1,1) = " ".
         extemp.DATA = LEFT-TRIM(extemp.DATA).
      END.    
      IF senastebytrow NE extemp.ROWVAR THEN DO:
         bytrownow = TRUE.
         senastebytrow = extemp.ROWVAR.
      END.  
      IF AVAILABLE extemp THEN IF extemp.NIVABER = 1 AND extemp.NIVAUPPLAG = 0 AND extemp.NIVANUM = 0 AND extemp.NIVASKAPNUM = 0    THEN RUN ByggHuvTT_UI.
      IF AVAILABLE extemp THEN IF extemp.NIVABER = 2 AND extemp.NIVAUPPLAG = 0 AND extemp.NIVANUM = 0 AND extemp.NIVASKAPNUM = 0    THEN RUN ByggMtrlSamTT_UI. 
      IF AVAILABLE extemp THEN IF extemp.NIVABER = 2 AND extemp.NIVAUPPLAG >= 1 AND extemp.NIVANUM = 0 AND extemp.NIVASKAPNUM = 0   THEN RUN ByggUppTT_UI.
      IF AVAILABLE extemp THEN IF extemp.NIVABER = 2 AND extemp.NIVAUPPLAG >= 1 AND extemp.NIVANUM >= 1 AND extemp.NIVASKAPNUM = 0  THEN RUN ByggKonsTT_UI.
     
      IF AVAILABLE extemp THEN IF extemp.NIVABER = 2 AND extemp.NIVAUPPLAG >= 1 AND extemp.NIVANUM >= 1 AND extemp.NIVASKAPNUM >= 1  THEN RUN ByggMtrlTT_UI.
     
   END.
   
   
END PROCEDURE.

PROCEDURE ByggVisaTT_UI :
   CREATE ByggVisaTT.
   ASSIGN
   ByggVisaTT.ORDNING = 1 
   ByggVisaTT.TTRECID = RECID(ByggVisaTT)
   ByggVisaTT.BENAMNING = STRING(Guru.GlobalaVariabler:BeredningsNummer) + "-" +  Guru.GlobalaVariabler:BeredningsOmrade
   ByggVisaTT.RID  = RECID(ByggVisaTT).    
END PROCEDURE.

PROCEDURE ByggHuvTT_UI :
   IF bytrownow = TRUE THEN DO:
      bytrownow = FALSE. 
      CREATE ByggHuvTT.
      ASSIGN
      ByggHuvTT.UPPGIFT = extemp.DATA 
      ByggHuvTT.ORDNING = extemp.ROWVAR 
      ByggHuvTT.TTRECID = RECID(ByggHuvTT)
      ByggHuvTT.RID  = RECID(ByggVisaTT).    
   END.
   IF extemp.COLVAR = "C" THEN ByggHuvTT.BENAMNING = extemp.DATA.
   IF extemp.COLVAR = "D" THEN ByggHuvTT.DATUM = extemp.DATA.
   IF extemp.COLVAR = "E" THEN ByggHuvTT.TID = extemp.DATA.
END PROCEDURE.

PROCEDURE ByggMtrlSamTT_UI :
   IF bytrownow = TRUE THEN DO:
      bytrownow = FALSE.
      CREATE ByggMtrlSamTT.
      ASSIGN 
      /*
      ByggMtrlSamTT.ARTIKEL = extemp.DATA
      */
      ByggMtrlSamTT.ORDNING = extemp.ROWVAR 
      ByggMtrlSamTT.TTRECID = RECID(ByggMtrlSamTT)
      ByggMtrlSamTT.RID  = RECID(ByggVisaTT).
   END.
   IF extemp.FCOLOR = 11 THEN DO:
      extemp.DATA =  CAPS(SUBSTRING(extemp.DATA,1,1)) + LC(SUBSTRING(extemp.DATA,2)).
   END.
   
   IF extemp.COLVAR = "A" THEN ByggMtrlSamTT.ARTIKEL = extemp.DATA.
   IF extemp.COLVAR = "B" THEN ByggMtrlSamTT.BENAMNING = extemp.DATA.
   IF extemp.COLVAR = "D" THEN ByggMtrlSamTT.ENH = extemp.DATA.
   IF extemp.COLVAR = "E" THEN ByggMtrlSamTT.ANTAL = extemp.DATA.
   IF extemp.COLVAR = "F" THEN ByggMtrlSamTT.PRIS = extemp.DATA.
   IF extemp.COLVAR = "G" THEN ByggMtrlSamTT.SUMMA = extemp.DATA.
END PROCEDURE.

PROCEDURE ByggUppTT_UI :
   DEFINE VARIABLE rvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE nb AS INTEGER NO-UNDO.
   DEFINE VARIABLE nu AS INTEGER NO-UNDO.
   DEFINE VARIABLE nn AS INTEGER NO-UNDO.
   DEFINE VARIABLE ns AS INTEGER NO-UNDO.
   ASSIGN 
   rvar = extemp.ROWVAR
   nb = extemp.NIVABER 
   nu = extemp.NIVAUPPLAG
   nn = extemp.NIVANUM 
   ns = extemp.NIVASKAPNUM.
   IF extemp.DATA BEGINS "--------" OR  extemp.DATA BEGINS "********" THEN RETURN.
    
   IF extemp.DATA = "Anmärkning" THEN DO:
   
      FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns:                                  
         IF extempBuff.DATA BEGINS "--------" OR  extempBuff.DATA BEGINS "********" THEN.
         ELSE DO:
            CREATE ByggUppAnmTT.
            ASSIGN 
            ByggUppAnmTT.ANMARK = extempBuff.DATA
            ByggUppAnmTT.ORDNING = extempBuff.ROWVAR  
            ByggUppAnmTT.TTRECID = RECID(ByggUppAnmTT)
            ByggUppAnmTT.RID  = RECID(ByggUppTT).
         END.
         DELETE extempBuff.
      END.
      RETURN.
   END.
   
   
   IF bytrownow = TRUE THEN DO:
      bytrownow = FALSE.
      CREATE ByggUppTT.
      ASSIGN 
      ByggUppTT.BENAMNING = extemp.DATA
      ByggUppTT.ORDNING = extemp.ROWVAR  
      ByggUppTT.TTRECID = RECID(ByggUppTT)
      ByggUppTT.RID  = RECID(ByggVisaTT).
   END.
   IF extemp.COLVAR = "C" THEN ByggUppTT.EXTRATEXT = extemp.DATA.  
   
   
      
END PROCEDURE.

PROCEDURE ByggKonsTT_UI :
   DEFINE VARIABLE rvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE nb AS INTEGER NO-UNDO.
   DEFINE VARIABLE nu AS INTEGER NO-UNDO.
   DEFINE VARIABLE nn AS INTEGER NO-UNDO.
   DEFINE VARIABLE ns AS INTEGER NO-UNDO.
   ASSIGN 
   rvar = extemp.ROWVAR
   nb = extemp.NIVABER 
   nu = extemp.NIVAUPPLAG
   nn = extemp.NIVANUM 
   ns = extemp.NIVASKAPNUM.
   IF extemp.DATA BEGINS "--------" OR  extemp.DATA BEGINS "********" THEN RETURN.
   
   IF extemp.DATA = "Anmärkning" THEN DO:
      FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns:       
         IF extempBuff.DATA BEGINS "--------" OR  extempBuff.DATA BEGINS "********" THEN.
         ELSE DO:
            CREATE ByggKonstAnmTT.
            ASSIGN 
            ByggKonstAnmTT.ANMARK = extempBuff.DATA
            ByggKonstAnmTT.ORDNING = extempBuff.ROWVAR  
            ByggKonstAnmTT.TTRECID = RECID(ByggKonstAnmTT)
            ByggKonstAnmTT.RID  = RECID(ByggKonsTT).
         END.
         DELETE extempBuff.
      END.
      RETURN.
   END.
   
   IF extemp.KABLAR = TRUE THEN DO:
      FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns AND 
                                extempBuff.KABLAR = TRUE:
         IF extempBuff.COLVAR = "A" THEN DO:
            CREATE ByggKablarTT.
            ASSIGN
            ByggKablarTT.KABEL = extempBuff.DATA
            ByggKablarTT.ORDNING = extempBuff.ROWVAR  
            ByggKablarTT.TTRECID = RECID(ByggKablarTT)
            ByggKablarTT.RID  = RECID(ByggKonsTT).
         END.
         IF extempBuff.COLVAR = "B" THEN ByggKablarTT.B2 = extempBuff.DATA.
         IF extempBuff.COLVAR = "C" THEN ByggKablarTT.B3 = extempBuff.DATA.
         IF extempBuff.COLVAR = "D" THEN ByggKablarTT.B4 = extempBuff.DATA.
         IF extempBuff.COLVAR = "E" THEN ByggKablarTT.B5 = extempBuff.DATA.
         IF extempBuff.COLVAR = "F" THEN ByggKablarTT.ADRESS = extempBuff.DATA.
         DELETE extempBuff.
      END.
      RETURN.
   END.   
   
   IF bytrownow = TRUE THEN DO:
      bytrownow = FALSE.
      CREATE ByggKonsTT.
      ASSIGN 
      ByggKonsTT.ORDNING = extemp.ROWVAR  
      ByggKonsTT.TTRECID = RECID(ByggKonsTT)
      ByggKonsTT.RID  = RECID(ByggUppTT).
   END.   
   IF extemp.COLVAR = "A" THEN ByggKonsTT.KONST = extemp.DATA.
   IF extemp.COLVAR = "C" THEN ByggKonsTT.KONSTDATA = extemp.DATA.
   IF extemp.COLVAR = "D" THEN ByggKonsTT.TYP = extemp.DATA.
   IF extemp.COLVAR = "E" THEN ByggKonsTT.TYPNR = extemp.DATA.
 
END PROCEDURE.

PROCEDURE ByggMtrlTT_UI :
   DEFINE VARIABLE rvar AS INTEGER NO-UNDO.
   DEFINE VARIABLE nb AS INTEGER NO-UNDO.
   DEFINE VARIABLE nu AS INTEGER NO-UNDO.
   DEFINE VARIABLE nn AS INTEGER NO-UNDO.
   DEFINE VARIABLE ns AS INTEGER NO-UNDO.
   ASSIGN 
   rvar = extemp.ROWVAR
   nb = extemp.NIVABER 
   nu = extemp.NIVAUPPLAG
   nn = extemp.NIVANUM 
   ns = extemp.NIVASKAPNUM.
   IF extemp.DATA BEGINS "--------" OR  extemp.DATA BEGINS "********" THEN RETURN.
   
   IF extemp.KALKYL = TRUE THEN DO:
     
      FIND FIRST extempBuff  WHERE 
      extempBuff.ROWVAR >= rvar + 2 AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns AND 
                                extempBuff.KALKYL = TRUE
      NO-LOCK NO-ERROR.
       
      IF NOT AVAILABLE extempBuff THEN DO:
         FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns AND 
                                extempBuff.KALKYL = TRUE:
            DELETE extempBuff.                       
         END.  
         RETURN.                        
      END.   
      FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns AND 
                                extempBuff.KALKYL = TRUE:
         
         IF extempBuff.FCOLOR = 11 THEN DO:
            extempBuff.DATA =  CAPS(SUBSTRING(extempBuff.DATA,1,1)) + LC(SUBSTRING(extempBuff.DATA,2)).
            
         END.
         IF extempBuff.COLVAR = "A" THEN DO:
            CREATE ByggKalkTT.
            ASSIGN
            ByggKalkTT.ARBKODLOPNR = extempBuff.DATA
            ByggKalkTT.ARBKOD = SUBSTRING(extempBuff.DATA,1,4)
            ByggKalkTT.LOPNR = SUBSTRING(extempBuff.DATA,5)
            ByggKalkTT.ORDNING = extempBuff.ROWVAR  
            ByggKalkTT.TTRECID = RECID(ByggKalkTT)
            ByggKalkTT.RID  = RECID(ByggKonsTT).
            
         END.
         


         
         IF extempBuff.COLVAR = "B" THEN ByggKalkTT.BENAMNING = extempBuff.DATA.
         IF extempBuff.COLVAR = "D" THEN ByggKalkTT.ENHET = extempBuff.DATA.
         IF extempBuff.COLVAR = "E" THEN ByggKalkTT.ANTAL = extempBuff.DATA.
         
         DELETE extempBuff.
      END.
      RETURN.
   END.   
   IF extemp.EGENK = TRUE THEN DO:
      FOR EACH extempBuff WHERE extempBuff.ROWVAR >= rvar AND extempBuff.NIVABER = nb  AND
                                extempBuff.NIVAUPPLAG = nu AND 
                                extempBuff.NIVANUM = nn AND extempBuff.NIVASKAPNUM = ns AND 
                                extempBuff.EGENK = TRUE:
         IF extempBuff.FCOLOR = 11 THEN DO:
            NEXT.
            
         END.
         IF extempBuff.COLVAR = "A" THEN DO:
            CREATE ByggEgenKontTT.
            ASSIGN
            ByggEgenKontTT.BENAMNING = extempBuff.DATA
            ByggEgenKontTT.ORDNING = extempBuff.ROWVAR  
            ByggEgenKontTT.TTRECID = RECID(ByggEgenKontTT)
            ByggEgenKontTT.RID  = RECID(ByggKonsTT).
         END.
/*         
         IF extempBuff.COLVAR = "H" THEN ByggEgenKontTT.UTFORT = extempBuff.DATA.
         IF extempBuff.COLVAR = "I" THEN ByggEgenKontTT.EJT = extempBuff.DATA.
  */
         
         IF extempBuff.COLVAR = "E" THEN ByggEgenKontTT.DATUM = extempBuff.DATA.
         IF extempBuff.COLVAR = "G" THEN ByggEgenKontTT.SIGN = extempBuff.DATA.
         
         DELETE extempBuff.
      END.
      RETURN.
   END.
   
   IF bytrownow = TRUE THEN DO:
      bytrownow = FALSE. 
      CREATE ByggMtrlTT.
      ASSIGN 
      ByggMtrlTT.ORDNING = extemp.ROWVAR  
      ByggMtrlTT.TTRECID = RECID(ByggMtrlTT)
      ByggMtrlTT.RID  = RECID(ByggKonsTT).
   END. 
   IF extemp.FCOLOR = 11 THEN DO:
      extemp.DATA =  CAPS(SUBSTRING(extemp.DATA,1,1)) + LC(SUBSTRING(extemp.DATA,2)).
   END.
   IF extemp.COLVAR = "A" THEN ByggMtrlTT.ENR = extemp.DATA.
   IF extemp.COLVAR = "B" THEN ByggMtrlTT.BENAMNING = extemp.DATA.
   IF extemp.COLVAR = "D" THEN ByggMtrlTT.ENH = extemp.DATA.
   IF extemp.COLVAR = "E" THEN ByggMtrlTT.ANTAL = extemp.DATA.
   IF extemp.COLVAR = "F" THEN ByggMtrlTT.PRIS = extemp.DATA.
   IF extemp.COLVAR = "G" THEN ByggMtrlTT.SUMMA = extemp.DATA.
     
    
END PROCEDURE.


PROCEDURE Bvisa_UI :
  
   DEFINE VARIABLE byggvis   AS Modules.Beredning.ByggProttoK NO-UNDO.  
   DEFINE VARIABLE antalDSTabeller    AS INTEGER     NO-UNDO.
   byggvis = NEW Modules.Beredning.ByggProttoK().
  
   
   byggvis:ConnectDataset(INPUT DATASET-HANDLE ByggProttDSh BIND,11).
   byggvis:InitiateByggPro().
  
   WAIT-FOR byggvis:ShowDialog().
  
   DELETE OBJECT byggvis NO-ERROR.
   RETURN.

END PROCEDURE.

