/*KALKBKOLL.P*/

DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER valaonr AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER valomrade AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER akod AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER lnr AS INTEGER NO-UNDO.
IF vad = 1 THEN DO:
   OPEN QUERY kalkbq FOR EACH KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade AND KALKBEFB.SID = 0
   NO-LOCK. 
   GET FIRST kalkbq NO-LOCK.
   DO WHILE AVAILABLE(KALKBEFB):
      FIND FIRST BERKALK WHERE BERKALK.AONR = valaonr AND BERKALK.OMRADE = valomrade AND BERKALK.NUM = KALKBEFB.NUM AND
      BERKALK.ARBKOD = KALKBEFB.ARBKOD AND BERKALK.LOPNR = KALKBEFB.LOPNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE BERKALK THEN DO:
         DO TRANSACTION:            
            GET CURRENT kalkbq EXCLUSIVE-LOCK.
            DELETE KALKBEFB.
         END.
      END.
      GET NEXT kalkbq NO-LOCK.
   END.
   
   OPEN QUERY bkalkbq FOR EACH BERKALK WHERE BERKALK.AONR = valaonr AND BERKALK.OMRADE = valomrade AND 
   BERKALK.ARBKOD = "EGEN" NO-LOCK. 
   GET FIRST bkalkbq NO-LOCK.
   DO WHILE AVAILABLE(BERKALK):
      FIND FIRST KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade AND KALKBEFB.NUM = BERKALK.NUM AND
      KALKBEFB.ARBKOD = BERKALK.ARBKOD AND KALKBEFB.LOPNR = BERKALK.LOPNR NO-LOCK NO-ERROR.
      IF NOT AVAILABLE KALKBEFB THEN DO:
         DO TRANSACTION:   
            GET CURRENT bkalkbq EXCLUSIVE-LOCK.
            DELETE BERKALK.
         END.
      END.
      GET NEXT bkalkbq NO-LOCK.
   END.
   IF AVAILABLE BERKALK THEN RELEASE BERKALK.
   IF AVAILABLE KALKBEFB THEN RELEASE KALKBEFB.
END.
IF vad = 2  THEN DO:
   DO TRANSACTION:   
      FIND FIRST KALKBEFB WHERE KALKBEFB.BERNR = INTEGER(valaonr) AND KALKBEFB.OMRADE = valomrade AND KALKBEFB.ARBKOD = akod  
      AND KALKBEFB.LOPNR = lnr EXCLUSIVE-LOCK NO-ERROR.
      IF AVAILABLE KALKBEFB THEN DO:
         DELETE KALKBEFB.
      END.
   END.
   IF AVAILABLE KALKBEFB THEN RELEASE KALKBEFB.
END.
