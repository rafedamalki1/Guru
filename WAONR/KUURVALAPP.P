/*KUURVALAPP.P*/
{STARTFORAPP.I}
{DIRDEF.I}
{AVTPLANTEMP.I}
{JURPERST.I}
{KTOTEMP.I}

DEFINE VARIABLE valdarec AS RECID NO-UNDO.

PROCEDURE jurp_UI :
   DEFINE OUTPUT PARAMETER TABLE FOR jurperstemp.
   DEFINE OUTPUT PARAMETER TABLE FOR judavdtemp.
   EMPTY TEMP-TABLE  jurperstemp NO-ERROR. 
   EMPTY TEMP-TABLE judavdtemp NO-ERROR. 
   FOR EACH JURPERS NO-LOCK:
      CREATE  jurperstemp.
      BUFFER-COPY JURPERS TO  jurperstemp.     
   END.   
   FOR EACH AVDELNING WHERE AVDELNING.KOSTMASK = 0 :
      CREATE judavdtemp.
      ASSIGN              
      judavdtemp.AVDELNINGNAMN = AVDELNING.AVDELNINGNAMN
      judavdtemp.JUDID = AVDELNING.POSTANST
      judavdtemp.AVDELNINGNR = AVDELNING.AVDELNINGNR.
   END.
END PROCEDURE.

PROCEDURE ladda_UI :
   DEFINE OUTPUT PARAMETER TABLE FOR kbenamntemp.
   EMPTY TEMP-TABLE kbenamntemp NO-ERROR. 
   OPEN QUERY kbq FOR EACH KBENAMNING USE-INDEX KBEN NO-LOCK.
   GET FIRST kbq NO-LOCK.
   DO WHILE AVAILABLE(KBENAMNING):
      CREATE kbenamntemp.
      BUFFER-COPY KBENAMNING TO kbenamntemp.
      GET NEXT kbq NO-LOCK.
   END.
   CLOSE QUERY kbq.  

END PROCEDURE.

PROCEDURE kto_UI :
   DEFINE INPUT PARAMETER TABLE FOR jurperstemp.
   DEFINE OUTPUT PARAMETER TABLE FOR ktotemp.
   EMPTY TEMP-TABLE ktotemp NO-ERROR. 
   OPEN QUERY ktq FOR EACH KONTO  USE-INDEX KONTO NO-LOCK.
   GET FIRST ktq NO-LOCK.
   DO WHILE AVAILABLE(KONTO):
      FIND FIRST jurperstemp WHERE jurperstemp.JUDID = KONTO.JUDID NO-LOCK NO-ERROR.
      IF AVAILABLE jurperstemp THEN DO:
         CREATE ktotemp.
         BUFFER-COPY KONTO TO ktotemp.
         ktotemp.VIJUDID = jurperstemp.VIJUDID.
         
      END.   
      GET NEXT ktq NO-LOCK.
   END.
   CLOSE QUERY ktq.  

END PROCEDURE.
PROCEDURE aonrcheck_UI :
   DEFINE INPUT PARAMETER aonummer AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER delnummer AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR. 
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonummer AND 
   AONRTAB.DELNR = delnummer NO-LOCK NO-ERROR.
   IF NOT AVAILABLE AONRTAB THEN DO:
      CREATE felmeddtemp.
      ASSIGN felmeddtemp.FELMEDD = Guru.Konstanter:gaok + " finns inte!".
      RETURN.
   END.
END PROCEDURE.

PROCEDURE skapvaldaao_UI :
   DEFINE INPUT PARAMETE aonummer AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER delnummer AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR valdaao.
   EMPTY TEMP-TABLE felmeddtemp NO-ERROR. 
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonummer AND 
   AONRTAB.DELNR = delnummer NO-LOCK NO-ERROR.  
   IF AVAILABLE AONRTAB THEN DO:
      CREATE valdaao.
      ASSIGN           
      valdaao.AONR = AONRTAB.AONR
      valdaao.DELNR = AONRTAB.DELNR
      valdaao.OMRADE = AONRTAB.OMRADE
      valdaao.AONRAVDATUM = AONRTAB.AONRAVDATUM
      valdaao.STARTDATUM = AONRTAB.STARTDATUM
      valdaao.ORT = AONRTAB.ORT 
      valdaao.BESTID = AONRTAB.BESTID 
      valdaao.FAKTTYP = AONRTAB.FAKTTYP
      valdaao.FAKTNR = AONRTAB.FAKTNR      
      valdaao.PROJEKTOR = AONRTAB.STARTDAG 
      valdaao.BEREDARE = AONRTAB.BEREDARE
      valdaao.ARBANSVARIG = AONRTAB.ARBANSVARIG
      valdarec = RECID(valdaao).

      ASSIGN
      aonummer = valdaao.AONR
      delnummer = valdaao.DELNR.
   END.
   ELSE DO:
      CREATE felmeddtemp.
      ASSIGN felmeddtemp.FELMEDD = Guru.Konstanter:gaol + "finns inte!".
      RETURN.
   END.
   RETURN.
END PROCEDURE.

PROCEDURE komplettaonr.
   DEFINE INPUT PARAMETER aonrvar AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER delnrvar AS INTEGER NO-UNDO.
   DEFINE OUTPUT PARAMETER aonrrec AS RECID NO-UNDO.
   DEFINE OUTPUT PARAMETER projvar AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER bortvar AS LOGICAL NO-UNDO.
   FIND FIRST AONRTAB WHERE AONRTAB.AONR = aonrvar AND
   AONRTAB.DELNR = delnrvar USE-INDEX AONR NO-LOCK NO-ERROR.
   IF AVAILABLE AONRTAB THEN DO:
      ASSIGN 
      projvar = AONRTAB.STARTDAG
      aonrrec = RECID(AONRTAB) 
      bortvar = TRUE.       
   END.
   RETURN.
END PROCEDURE.
