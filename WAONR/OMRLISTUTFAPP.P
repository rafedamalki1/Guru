/*OMRLISTUTFAPP.P*/
{STARTFORAPP.I}

DEFINE  VARIABLE valdelnrlog AS LOGICAL NO-UNDO.
DEFINE  VARIABLE SEL_UPP AS CHARACTER NO-UNDO. 
DEFINE  VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE  VARIABLE skrivut AS LOGICAL NO-UNDO.
DEFINE  VARIABLE vart AS CHARACTER FORMAT "X(3)" NO-UNDO.
DEFINE  VARIABLE aonummer AS CHARACTER NO-UNDO.
DEFINE  VARIABLE delnummer AS INTEGER NO-UNDO.
DEFINE  VARIABLE utomr AS CHARACTER NO-UNDO.  
DEFINE VARIABLE arrhjsumtb AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsum AS DECIMAL NO-UNDO.    
DEFINE VARIABLE arrhjsumtid AS DECIMAL NO-UNDO.  
DEFINE VARIABLE arrhjsumotid AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsumove AS DECIMAL NO-UNDO.
DEFINE VARIABLE arrhjsumtra AS DECIMAL NO-UNDO.   
DEFINE VARIABLE arrhjsumlon AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsumind AS DECIMAL NO-UNDO. 
DEFINE VARIABLE arrhjsumikost AS DECIMAL NO-UNDO.   
DEFINE VARIABLE str AS CHARACTER FORMAT "X(92)" NO-UNDO. 
DEFINE VARIABLE str2 AS CHARACTER FORMAT "X(92)" NO-UNDO.
DEFINE VARIABLE utomr2 AS CHARACTER NO-UNDO. 
DEFINE VARIABLE utomr3 AS CHARACTER NO-UNDO. 
DEFINE VARIABLE aoval AS LOGICAL NO-UNDO.
DEFINE VARIABLE vardelnr AS INTEGER NO-UNDO.
DEFINE VARIABLE varaonr AS CHARACTER NO-UNDO.
DEFINE VARIABLE berindvar AS DECIMAL NO-UNDO.
DEFINE VARIABLE RAD_PERIOD AS INTEGER NO-UNDO.      
DEFINE VARIABLE RAD_TYP AS INTEGER NO-UNDO.  

{TIDUTTTNEW.I}

DEFINE TEMP-TABLE visa 
   FIELD UT AS CHARACTER    
   FIELD TYP AS CHARACTER       
   FIELD ORDNING AS INTEGER
   FIELD UPPFOLJVAL AS INTEGER
   FIELD KUURVAL AS LOGICAL
   FIELD DELNRKOLL AS LOGICAL
   FIELD VISEX AS INTEGER
   FIELD VISAP AS INTEGER
   INDEX ORDNING IS PRIMARY ORDNING KUURVAL
   INDEX UT UT.  

DEFINE TEMP-TABLE slutsum           
   FIELD PERSONALKOD AS CHARACTER 
   FIELD PRIS AS DECIMAL     
   FIELD PRISTYP AS CHARACTER 
   FIELD OMRADE AS CHARACTER 
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"      
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR"         
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"    
   FIELD LONKOST AS DECIMAL LABEL "L-KOSTNAD" 
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER 
   FIELD INDEREKT AS DECIMAL   
   FIELD INOMRADE AS CHARACTER
   FIELD MED AS LOGICAL 
   FIELD ORT AS CHARACTER       
   FIELD IKOST AS DECIMAL
   INDEX OMR IS PRIMARY OMRADE AONR DELNR
   INDEX AONR AONR DELNR
   INDEX MED MED. 

DEFINE BUFFER slutsumbuff FOR slutsum.

   DEFINE TEMP-TABLE slutsum1           
   FIELD PERSONALKOD AS CHARACTER  
   FIELD PRIS AS DECIMAL   
   FIELD PRISTYP AS CHARACTER 
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"      
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR"         
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"    
   FIELD LONKOST AS DECIMAL LABEL "L-KOSTNAD"  
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD INDEREKT AS DECIMAL  
   FIELD ORT AS CHARACTER      
   INDEX OMR IS PRIMARY OMRADE AONR DELNR.         
   
DEFINE TEMP-TABLE slutsum2           
   FIELD PERSONALKOD AS CHARACTER
   FIELD PRIS AS DECIMAL   
   FIELD PRISTYP AS CHARACTER
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"      
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR"         
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"    
   FIELD LONKOST AS DECIMAL LABEL "L-KOSTNAD"  
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD INDEREKT AS DECIMAL 
   FIELD ORT AS CHARACTER         
   INDEX OMR IS PRIMARY OMRADE.       
   
DEFINE TEMP-TABLE prislutsum           
   FIELD PERSONALKOD AS CHARACTER
   FIELD PRIS AS DECIMAL  
   FIELD PRISTYP AS CHARACTER
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER  
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"          
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"         
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.  

DEFINE TEMP-TABLE prislutsum1           
   FIELD PERSONALKOD AS CHARACTER 
   FIELD PRIS AS DECIMAL    
   FIELD PRISTYP AS CHARACTER
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"          
   FIELD BELOPP AS DECIMAL LABEL "ARBKOSTNAD"           
   FIELD OBELOPP AS DECIMAL LABEL "Ö-KOSTNAD"  
   FIELD OANTAL AS DECIMAL  LABEL "Ö-ANTAL"         
   FIELD TBELOPP AS DECIMAL LABEL "T-KOSTNAD"
   FIELD TANTAL AS DECIMAL  LABEL "T-ANTAL"         
   INDEX AONR IS PRIMARY AONR DELNR ASCENDING.

/*   
DEFINE TEMP-TABLE restid  
   FIELD AONR LIKE AONRTAB.AONR
   FIELD DELNR LIKE AONRTAB.DELNR                     
   FIELD OMRADE LIKE OMRADETAB.OMRADE
   FIELD TIMMAR AS DECIMAL LABEL "RTIMMAR"                
   INDEX OMR IS PRIMARY OMRADE.              */

DEFINE TEMP-TABLE restid2  
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER                   
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "RTIMMAR"                
   INDEX OMR IS PRIMARY OMRADE. 
                
DEFINE TEMP-TABLE restid3  
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER                  
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "RTIMMAR"                
   INDEX OMR IS PRIMARY OMRADE.       
   
DEFINE TEMP-TABLE restid4  
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER                     
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "RTIMMAR"                
   INDEX OMR IS PRIMARY OMRADE.


DEFINE TEMP-TABLE slutsumpt
   FIELD AONR AS CHARACTER
   FIELD DELNR AS INTEGER
   FIELD GEOMRADE AS CHARACTER            
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR" 
   FIELD OTIMMAR AS DECIMAL
   FIELD BELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD LONKOST AS DECIMAL
   FIELD TBELOPP AS DECIMAL                 
   INDEX OMR IS PRIMARY OMRADE
   INDEX AONRGEOMR AONR DELNR GEOMRADE
   INDEX AONROMR AONR DELNR OMRADE.
DEFINE TEMP-TABLE slutsumpf 
   FIELD GEOMRADE LIKE SUMTID.GEOMRADE               
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"
   FIELD OTIMMAR AS DECIMAL
   FIELD BELOPP AS DECIMAL
   FIELD OBELOPP AS DECIMAL
   FIELD LONKOST AS DECIMAL
   FIELD TBELOPP AS DECIMAL                           
   INDEX OMR IS PRIMARY OMRADE
   INDEX GEOMR GEOMRADE.  
DEFINE TEMP-TABLE slutsumot              
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"                   
   INDEX OMR IS PRIMARY OMRADE.    
DEFINE TEMP-TABLE slutsumof              
   FIELD OMRADE AS CHARACTER
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"                   
   INDEX OMR IS PRIMARY OMRADE.  
DEFINE TEMP-TABLE slutsumat                 
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR".    
DEFINE TEMP-TABLE slutsumaf                 
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR".                        

/*DEFINE TEMP-TABLE dagtemp 
   FIELD AONR LIKE AONRTAB.AONR 
   FIELD DELNR LIKE AONRTAB.DELNR
   FIELD PERSONALKOD LIKE TIDREGITAB.PERSONALKOD 
   FIELD NAMN AS CHARACTER FORMAT "X(12)"
   FIELD PRISTYP LIKE TIDREGITAB.PRISTYP 
   FIELD OMRADE LIKE OMRADETAB.OMRADE 
   FIELD GEOMRADE LIKE SUMTID.GEOMRADE
   FIELD FASTAAONR LIKE AONRTAB.FASTAAONR
   FIELD TIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "TIMMAR"  
   FIELD OTIMMAR LIKE EKRAPPRESULT.EANTAL LABEL "OTIMMAR"
   FIELD BELOPP LIKE SUMTID.BELOPP
   FIELD OBELOPP LIKE SUMTID.OBELOPP
   FIELD LONKOST LIKE SUMTID.LONKOST
   FIELD TBELOPP LIKE SUMTID.TBELOPP                         
   INDEX OMRADE IS PRIMARY OMRADE PERSONALKOD.    */
DEFINE TEMP-TABLE sumartemp 
   FIELD AONR AS CHARACTER 
   FIELD DELNR AS INTEGER
   FIELD PERSONALKOD AS CHARACTER 
   FIELD NAMN AS CHARACTER FORMAT "X(12)"
   FIELD PRISTYP AS CHARACTER
   FIELD OMRADE AS CHARACTER 
   FIELD GEOMRADE AS CHARACTER 
   FIELD FASTAAONR AS LOGICAL
   FIELD TIMMAR AS DECIMAL LABEL "TIMMAR"  
   FIELD OTIMMAR AS DECIMAL LABEL "OTIMMAR" 
   FIELD BELOPP AS DECIMAL 
   FIELD OBELOPP AS DECIMAL 
   FIELD LONKOST AS DECIMAL 
   FIELD TBELOPP AS DECIMAL          
   INDEX OMRADE IS PRIMARY OMRADE PERSONALKOD.      

DEFINE QUERY sumarq FOR SUMTID.        
   
DEFINE QUERY dagsumq FOR SUMTIDDAG.   
DEFINE QUERY arsumq FOR SUMTID. 
DEFINE QUERY aonrq FOR AONRTAB.  
{SUMTD.I}
{BYTAO.I}
{BOLAGSEKSTART.I}
PROCEDURE anvglob_UI :
   DEFINE INPUT PARAMETER anvglob AS CHARACTER NO-UNDO.
   /*Guru.Konstanter:globanv = anvglob.*/
END PROCEDURE.

PROCEDURE totutfsum_UI :
   DEFINE INPUT PARAMETER aoval AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER utomr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER RAD_PERIOD AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER vallista AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER inder AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER str AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER str2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR visa.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   FIND FIRST visa WHERE visa.UPPFOLJVAL = vallista NO-LOCK NO-ERROR.
   musz = FALSE.
   {TOTUTFAPP.I}

END PROCEDURE.

PROCEDURE omrutfsum_UI :
   DEFINE INPUT PARAMETER valdelnrlog AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER utomr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER RAD_TYP AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER RAD_PERIOD AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER aoval AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER inder AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER str AS CHARACTER NO-UNDO.
   DEFINE OUTPUT PARAMETER TABLE FOR felmeddtemp.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.

   ASSIGN
   arrhjsum = 0     
   arrhjsumtid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0
   arrhjsumlon = 0
   arrhjsumtb = 0.     
   IF RAD_TYP = 1 THEN DO:
      IF RAD_PERIOD = 1 THEN DO:            
         
         
      END.                                                          
      IF RAD_PERIOD = 2 THEN DO:     /*PERIOD*/  
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 6
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr
         bytaao.SOK3 = RAD_TYP.               
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut).         
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.OMRADE = utomr 
         AND SUMTIDDAG.GEOMRADE NE utomr AND SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum  NO-LOCK.         
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG):
            IF SUMTIDDAG.PRISTYP NE "FRÅNVARO." THEN DO:                     
               CREATE dagtemp.
               ASSIGN 
               dagtemp.AONR = SUMTIDDAG.AONR 
               dagtemp.DELNR = SUMTIDDAG.DELNR
               dagtemp.OMRADE = SUMTIDDAG.OMRADE 
               dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE                             
               dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR
               dagtemp.BELOPP = SUMTIDDAG.BELOPP
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP.            
               IF valdelnrlog = TRUE THEN dagtemp.DELNR = 0.
            END.
            GET NEXT dagsumq NO-LOCK.                         
         END.                        
      END.           
      /* Ta bort aonr som har haft fel område*/
      DO TRANSACTION:      
         OPEN QUERY felq FOR EACH BYTAONR WHERE BYTAONR.NOMRADE = utomr AND BYTAONR.OMRADE NE BYTAONR.NOMRADE NO-LOCK,
         EACH dagtemp WHERE dagtemp.AONR = BYTAONR.AONR AND dagtemp.DELNR = BYTAONR.DELNR NO-LOCK.
         GET FIRST felq NO-LOCK.
         DO WHILE AVAILABLE(BYTAONR):
            FIND CURRENT dagtemp EXCLUSIVE-LOCK.
            DELETE dagtemp.
            GET NEXT felq NO-LOCK.
         END.
      END. 
      
                      
      FIND LAST dagtemp NO-ERROR.
      FOR EACH dagtemp NO-LOCK BREAK BY dagtemp.AONR BY dagtemp.DELNR : /*BY dagtemp.GEOMRADE: ONÖDIGT*/                                   
         ACCUMULATE dagtemp.TIMMAR 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR).          
         ACCUMULATE dagtemp.OTIMMAR 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR). 
         ACCUMULATE dagtemp.BELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR).
         ACCUMULATE dagtemp.OBELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR).       
         ACCUMULATE dagtemp.LONKOST 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR).      
         ACCUMULATE dagtemp.TBELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR).      
         IF LAST-OF(dagtemp.DELNR) THEN DO TRANSACTION:               
            CREATE slutsumpt.
            ASSIGN     
            slutsumpt.GEOMRADE = dagtemp.GEOMRADE 
            slutsumpt.AONR = dagtemp.AONR
            slutsumpt.DELNR = dagtemp.DELNR                              
            slutsumpt.TIMMAR = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.TIMMAR) /* - arrhjsumtid)*/
            slutsumpt.OTIMMAR = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.OTIMMAR) /*- arrhjsumove) */
            slutsumpt.BELOPP = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.BELOPP) /*- arrhjsum)*/
            slutsumpt.OBELOPP = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.OBELOPP) /*- arrhjsumtra)  */
            slutsumpt.LONKOST = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.LONKOST) /*- arrhjsumlon) */
            slutsumpt.TBELOPP = (ACCUM TOTAL BY dagtemp.DELNR dagtemp.TBELOPP). /*- arrhjsumtb)*/
            /*arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR 
            arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR
            arrhjsum = ACCUM TOTAL dagtemp.BELOPP
            arrhjsumtra = ACCUM TOTAL dagtemp.OBELOPP
            arrhjsumlon = ACCUM TOTAL dagtemp.LONKOST
            arrhjsumtb = ACCUM TOTAL dagtemp.TBELOPP.          */
         END. 
      END.   
      
      ASSIGN   
      arrhjsum = 0     
      arrhjsumtid = 0    
      arrhjsumove = 0    
      arrhjsumtra = 0
      arrhjsumlon = 0
      arrhjsumtb = 0.  
      FOR EACH dagtemp NO-LOCK BREAK BY dagtemp.GEOMRADE:
         ACCUMULATE dagtemp.TIMMAR 
         (TOTAL BY dagtemp.GEOMRADE).      
         ACCUMULATE dagtemp.OTIMMAR 
         (TOTAL BY dagtemp.GEOMRADE).  
         ACCUMULATE dagtemp.BELOPP 
         (TOTAL BY dagtemp.GEOMRADE).      
         ACCUMULATE dagtemp.OBELOPP 
         (TOTAL BY dagtemp.GEOMRADE).    
         ACCUMULATE dagtemp.LONKOST 
         (TOTAL BY dagtemp.GEOMRADE).   
         ACCUMULATE dagtemp.TBELOPP 
         (TOTAL BY dagtemp.GEOMRADE).    
         IF LAST-OF(dagtemp.GEOMRADE) THEN DO TRANSACTION:
            CREATE slutsumpf.                   
            ASSIGN     
            slutsumpf.GEOMRADE = dagtemp.GEOMRADE                               
            slutsumpf.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) 
            slutsumpf.OTIMMAR = ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove)
            slutsumpf.BELOPP = ((ACCUM TOTAL dagtemp.BELOPP) - arrhjsum)
            slutsumpf.OBELOPP = ((ACCUM TOTAL dagtemp.OBELOPP) - arrhjsumtra) 
            slutsumpf.LONKOST = ((ACCUM TOTAL dagtemp.LONKOST) - arrhjsumlon)
            slutsumpf.TBELOPP = ((ACCUM TOTAL dagtemp.TBELOPP) - arrhjsumtb)               
            arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR    
            arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR 
            arrhjsum = ACCUM TOTAL dagtemp.BELOPP
            arrhjsumtra = ACCUM TOTAL dagtemp.OBELOPP
            arrhjsumlon = ACCUM TOTAL dagtemp.LONKOST
            arrhjsumtb = ACCUM TOTAL dagtemp.TBELOPP.                  
         END. 
      END.              
   END.     
   IF RAD_TYP = 2 THEN DO:      
      IF RAD_PERIOD = 1 THEN DO:   
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 6
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr
         bytaao.SOK3 = RAD_TYP.             
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut).                  
         OPEN QUERY sumarq FOR EACH SUMTID WHERE SUMTID.GEOMRADE = utomr 
         AND SUMTID.OMRADE NE utomr AND SUMTID.DATUM = bdatum  NO-LOCK.
         GET FIRST sumarq  NO-LOCK.
         DO WHILE AVAILABLE(SUMTID) TRANSACTION:                     
            IF SUMTID.PRISTYP NE "FRÅNVARO." THEN DO:
               CREATE dagtemp.
               ASSIGN 
               dagtemp.AONR = SUMTID.AONR 
               dagtemp.DELNR = SUMTID.DELNR
               dagtemp.OMRADE = SUMTID.OMRADE 
               dagtemp.GEOMRADE = SUMTID.GEOMRADE                             
               dagtemp.TIMMAR = SUMTID.TIMMAR
               dagtemp.OTIMMAR = SUMTID.OTIMMAR
               dagtemp.BELOPP = SUMTID.BELOPP
               dagtemp.OBELOPP = SUMTID.OBELOPP
               dagtemp.LONKOST = SUMTID.LONKOST
               dagtemp.TBELOPP = SUMTID.TBELOPP.                                 
            END.   
            GET NEXT sumarq  NO-LOCK.                                     
         END.            
      END.                                                          
      IF RAD_PERIOD = 2 THEN DO:     /*PERIOD*/  
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 6
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr
         bytaao.SOK3 = RAD_TYP.               
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut).         
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.GEOMRADE = utomr 
         AND SUMTIDDAG.OMRADE NE utomr AND SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum  NO-LOCK.
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG) TRANSACTION:                     
            IF SUMTIDDAG.PRISTYP NE "FRÅNVARO." THEN DO:
               CREATE dagtemp.
               ASSIGN 
               dagtemp.AONR = SUMTIDDAG.AONR 
               dagtemp.DELNR = SUMTIDDAG.DELNR
               dagtemp.OMRADE = SUMTIDDAG.OMRADE 
               dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE                             
               dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
               dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR
               dagtemp.BELOPP = SUMTIDDAG.BELOPP
               dagtemp.OBELOPP = SUMTIDDAG.OBELOPP
               dagtemp.LONKOST = SUMTIDDAG.LONKOST
               dagtemp.TBELOPP = SUMTIDDAG.TBELOPP.  
               IF valdelnrlog = TRUE THEN dagtemp.DELNR = 0.
            END.              
            GET NEXT dagsumq NO-LOCK.                                     
         END.             
      END.      
      
      /* Ta bort aonr som har haft fel område*/
      DO TRANSACTION:      
         OPEN QUERY felq FOR EACH BYTAONR WHERE BYTAONR.OMRADE = utomr AND BYTAONR.OMRADE NE BYTAONR.NOMRADE NO-LOCK,
         EACH dagtemp WHERE dagtemp.AONR = BYTAONR.AONR AND dagtemp.DELNR = BYTAONR.DELNR NO-LOCK.
         GET FIRST felq NO-LOCK.
         DO WHILE AVAILABLE(BYTAONR):
            FIND CURRENT dagtemp EXCLUSIVE-LOCK.
            DELETE dagtemp.
            GET NEXT felq NO-LOCK.
         END.
      END.         
      FIND LAST dagtemp NO-LOCK NO-ERROR.
      /*
      DEF VAR CC AS DECIMAL.
      FOR EACH DAGTEMP WHERE dagtemp.OMRADE = "102" AND dagtemp.AONR = "800150":
         CC = CC + dagtemp.TIMMAR.         
      END.
      MESSAGE CC VIEW-AS ALERT-BOX.
      */
      ASSIGN   
      arrhjsum = 0     
      arrhjsumtid = 0    
      arrhjsumove = 0    
      arrhjsumtra = 0
      arrhjsumlon = 0
      arrhjsumtb = 0.     
      
      FIND LAST dagtemp NO-ERROR.
      FOR EACH dagtemp NO-LOCK  
      BREAK BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE:                  
         ACCUMULATE dagtemp.TIMMAR 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE).          
         ACCUMULATE dagtemp.OTIMMAR 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE). 
         ACCUMULATE dagtemp.BELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE).
         ACCUMULATE dagtemp.OBELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE). 
         ACCUMULATE dagtemp.LONKOST 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE).
         ACCUMULATE dagtemp.TBELOPP 
         (TOTAL BY dagtemp.AONR BY dagtemp.DELNR BY dagtemp.OMRADE).      
         IF LAST-OF(dagtemp.OMRADE) THEN DO TRANSACTION:
            CREATE slutsumpt.
            ASSIGN     
            slutsumpt.OMRADE = dagtemp.OMRADE 
            slutsumpt.AONR = dagtemp.AONR
            slutsumpt.DELNR = dagtemp.DELNR                                      
            slutsumpt.TIMMAR = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.TIMMAR) /*- arrhjsumtid)*/
            slutsumpt.OTIMMAR = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.OTIMMAR) /*- arrhjsumove) */
            slutsumpt.BELOPP = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.BELOPP) /*- arrhjsum)*/
            slutsumpt.OBELOPP = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.OBELOPP) /*- arrhjsumtra)     */
            slutsumpt.LONKOST = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.LONKOST) /*- arrhjsumlon)    */
            slutsumpt.TBELOPP = (ACCUM TOTAL BY dagtemp.OMRADE dagtemp.TBELOPP). /*- arrhjsumtb)               */
            /*arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR 
            arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR
            arrhjsum = ACCUM TOTAL dagtemp.BELOPP
            arrhjsumtra = ACCUM TOTAL dagtemp.OBELOPP
            arrhjsumlon = ACCUM TOTAL dagtemp.LONKOST
            arrhjsumtb = ACCUM TOTAL dagtemp.TBELOPP.          */
         END. 
      END.   
      
      ASSIGN   
      arrhjsum = 0     
      arrhjsumtid = 0    
      arrhjsumove = 0    
      arrhjsumtra = 0
      arrhjsumlon = 0
      arrhjsumtb = 0.  
      FOR EACH dagtemp NO-LOCK BREAK BY dagtemp.OMRADE:
         ACCUMULATE dagtemp.TIMMAR 
         (TOTAL BY dagtemp.OMRADE).      
         ACCUMULATE dagtemp.OTIMMAR 
         (TOTAL BY dagtemp.OMRADE).     
         ACCUMULATE dagtemp.BELOPP 
         (TOTAL BY dagtemp.OMRADE).      
         ACCUMULATE dagtemp.OBELOPP 
         (TOTAL BY dagtemp.OMRADE).   
         ACCUMULATE dagtemp.LONKOST 
         (TOTAL BY dagtemp.OMRADE).  
         ACCUMULATE dagtemp.TBELOPP 
         (TOTAL BY dagtemp.OMRADE).    
         IF LAST-OF(dagtemp.OMRADE)THEN DO TRANSACTION:
            CREATE slutsumpf.                   
            ASSIGN     
            slutsumpf.OMRADE = dagtemp.OMRADE                               
            slutsumpf.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) 
            slutsumpf.OTIMMAR = ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove)
            slutsumpf.BELOPP = ((ACCUM TOTAL dagtemp.BELOPP) - arrhjsum)
            slutsumpf.OBELOPP = ((ACCUM TOTAL dagtemp.OBELOPP) - arrhjsumtra)      
            slutsumpf.LONKOST = ((ACCUM TOTAL dagtemp.LONKOST) - arrhjsumlon)     
            slutsumpf.TBELOPP = ((ACCUM TOTAL dagtemp.TBELOPP) - arrhjsumtb)               
            arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR    
            arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR 
            arrhjsum = ACCUM TOTAL dagtemp.BELOPP
            arrhjsumtra = ACCUM TOTAL dagtemp.OBELOPP
            arrhjsumlon = ACCUM TOTAL dagtemp.LONKOST
            arrhjsumtb = ACCUM TOTAL dagtemp.TBELOPP.                  
         END. 
      END.        
   END.  /*IF RAD_TYP = 2*/   
   IF RAD_TYP = 1 THEN DO:
      FIND FIRST slutsumpt USE-INDEX OMR NO-LOCK NO-ERROR.
      IF AVAILABLE slutsumpt THEN DO:       
         FOR EACH slutsumpt USE-INDEX AONRGEOMR:            
            CREATE tidut.           
            ASSIGN                                            
            SUBSTRING(tidut.UT,1) = slutsumpt.AONR            
            SUBSTRING(tidut.UT,8) = STRING(slutsumpt.DELNR,Guru.Konstanter:varforetypchar[1])              
            SUBSTRING(tidut.UT,12) = slutsumpt.GEOMRADE               
            SUBSTRING(tidut.UT,20) = STRING(slutsumpt.TIMMAR,">>>>>>>9")  
            SUBSTRING(tidut.UT,29) = STRING(slutsumpt.BELOPP,">>>>>>>9") 
            SUBSTRING(tidut.UT,38) = STRING(slutsumpt.OTIMMAR,">>>>>>>9")
            SUBSTRING(tidut.UT,47) = STRING(slutsumpt.OBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,56) = STRING(slutsumpt.TBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,65) = STRING(slutsumpt.LONKOST,"->>>>>>9").            
            IF valdelnrlog = TRUE THEN SUBSTRING(tidut.UT,8,3) = "   ".
         END.         
         CREATE tidut.                                                                  
         CREATE tidut.       
         ASSIGN                                                      
         arrhjsum = 0     
         arrhjsumtid = 0    
         arrhjsumove = 0    
         arrhjsumtra = 0
         arrhjsumlon = 0
         arrhjsumtb = 0
         SUBSTRING(tidut.UT,1) = "SUMMA".  
         FOR EACH slutsumpt USE-INDEX OMR:
            ASSIGN
            arrhjsumtid = arrhjsumtid + slutsumpt.TIMMAR    
            arrhjsumove = arrhjsumove + slutsumpt.OTIMMAR 
            arrhjsum = arrhjsum + slutsumpt.BELOPP
            arrhjsumtra = arrhjsumtra + slutsumpt.OBELOPP
            arrhjsumlon = arrhjsumlon + slutsumpt.LONKOST
            arrhjsumtb = arrhjsumtb + slutsumpt.TBELOPP.
         END.
         ASSIGN 
         SUBSTRING(tidut.UT,20) = STRING(arrhjsumtid,">>>>>>>9")  
         SUBSTRING(tidut.UT,29) = STRING(arrhjsum,">>>>>>>9") 
         SUBSTRING(tidut.UT,38) = STRING(arrhjsumove,">>>>>>>9")
         SUBSTRING(tidut.UT,47) = STRING(arrhjsumtra,">>>>>>>9")
         SUBSTRING(tidut.UT,56) = STRING(arrhjsumtb,">>>>>>>9")
         SUBSTRING(tidut.UT,65) = STRING(arrhjsumlon,"->>>>>>9").      
         CREATE tidut. 
         CREATE tidut.
         CREATE tidut.
         ASSIGN                            
         SUBSTRING(tidut.UT,12) = CAPS(Guru.Konstanter:gaok) + "."              
         SUBSTRING(tidut.UT,20) = "ARB."
         SUBSTRING(tidut.UT,29) = "ARBETS"
         SUBSTRING(tidut.UT,38) = "ÖVER."
         SUBSTRING(tidut.UT,47) = "ÖVERTID"
         SUBSTRING(tidut.UT,56) = "TRAKT."
         SUBSTRING(tidut.UT,65) = "LÖNTILL".                                                     
         CREATE tidut.
         ASSIGN                               
         SUBSTRING(tidut.UT,12) = CAPS(Guru.Konstanter:gomrk) 
         SUBSTRING(tidut.UT,20) = "TIMMAR"      
         SUBSTRING(tidut.UT,29) = "KOSTNAD"
         SUBSTRING(tidut.UT,38) = "TIMMAR"
         SUBSTRING(tidut.UT,47) = "KOSTNAD"
         SUBSTRING(tidut.UT,56) = "KOSTNAD"
         SUBSTRING(tidut.UT,65) = "KOSTNAD".         
         
         CREATE tidut. 
         SUBSTRING(tidut.UT,1) = str.                                                                  
         CREATE tidut.              
         ASSIGN                                             
         SUBSTRING(tidut.UT,1) = "TOTALT/".
         CREATE tidut.   
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrl) + ":".     
         FOR EACH slutsumpf USE-INDEX GEOMR:             
            CREATE tidut.           
            ASSIGN                                                                
            SUBSTRING(tidut.UT,12) = slutsumpf.GEOMRADE               
            SUBSTRING(tidut.UT,20) = STRING(slutsumpf.TIMMAR,">>>>>>>9")  
            SUBSTRING(tidut.UT,29) = STRING(slutsumpf.BELOPP,">>>>>>>9") 
            SUBSTRING(tidut.UT,38) = STRING(slutsumpf.OTIMMAR,">>>>>>>9")
            SUBSTRING(tidut.UT,47) = STRING(slutsumpf.OBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,56) = STRING(slutsumpf.TBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,65) = STRING(slutsumpf.LONKOST,"->>>>>>9").                 
         END.
      END.    
      ELSE DO:
         CREATE felmeddtemp.
         ASSIGN 
         felmeddtemp.FELMEDD = "Det finns inga intäkter att visa.".
         musz = TRUE.
      END.                 
   END.
   IF RAD_TYP = 2 THEN DO:
      FIND FIRST slutsumpt NO-LOCK NO-ERROR.
      IF AVAILABLE slutsumpt THEN DO:  
         FOR EACH slutsumpt USE-INDEX AONROMR:             
            CREATE tidut.           
            ASSIGN                                            
            SUBSTRING(tidut.UT,1) = slutsumpt.AONR            
            SUBSTRING(tidut.UT,8) = STRING(slutsumpt.DELNR,Guru.Konstanter:varforetypchar[1])              
            SUBSTRING(tidut.UT,12) = slutsumpt.OMRADE               
            SUBSTRING(tidut.UT,20) = STRING(slutsumpt.TIMMAR,">>>>>>>9")  
            SUBSTRING(tidut.UT,29) = STRING(slutsumpt.BELOPP,">>>>>>>9") 
            SUBSTRING(tidut.UT,38) = STRING(slutsumpt.OTIMMAR,">>>>>>>9")
            SUBSTRING(tidut.UT,47) = STRING(slutsumpt.OBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,56) = STRING(slutsumpt.TBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,65) = STRING(slutsumpt.LONKOST,"->>>>>>9").            
            IF valdelnrlog = TRUE THEN SUBSTRING(tidut.UT,8,3) = "   ".
         END.         
         CREATE tidut.                                                                
         CREATE tidut.       
         ASSIGN                                                      
         arrhjsum = 0     
         arrhjsumtid = 0    
         arrhjsumove = 0    
         arrhjsumtra = 0
         arrhjsumlon = 0
         arrhjsumtb = 0
         SUBSTRING(tidut.UT,1) = "SUMMA".  
         FOR EACH slutsumpt.
            ASSIGN
            arrhjsumtid = arrhjsumtid + slutsumpt.TIMMAR    
            arrhjsumove = arrhjsumove + slutsumpt.OTIMMAR 
            arrhjsum = arrhjsum + slutsumpt.BELOPP
            arrhjsumtra = arrhjsumtra + slutsumpt.OBELOPP
            arrhjsumlon = arrhjsumlon + slutsumpt.LONKOST
            arrhjsumtb = arrhjsumtb + slutsumpt.TBELOPP.
         END.
         ASSIGN 
         SUBSTRING(tidut.UT,20) = STRING(arrhjsumtid,">>>>>>>9")  
         SUBSTRING(tidut.UT,29) = STRING(arrhjsum,">>>>>>>9") 
         SUBSTRING(tidut.UT,38) = STRING(arrhjsumove,">>>>>>>9")
         SUBSTRING(tidut.UT,47) = STRING(arrhjsumtra,">>>>>>>9")
         SUBSTRING(tidut.UT,56) = STRING(arrhjsumtb,">>>>>>>9")
         SUBSTRING(tidut.UT,65) = STRING(arrhjsumlon,"->>>>>>9").      
         CREATE tidut.
         CREATE tidut.
         CREATE tidut. 
         ASSIGN                            
         SUBSTRING(tidut.UT,12) = "PERS."              
         SUBSTRING(tidut.UT,20) = "ARB."
         SUBSTRING(tidut.UT,29) = "ARBETS"
         SUBSTRING(tidut.UT,38) = "ÖVER."
         SUBSTRING(tidut.UT,47) = "ÖVERTID"
         SUBSTRING(tidut.UT,56) = "TRAKT."
         SUBSTRING(tidut.UT,65) = "LÖNETILL".                                                     
         CREATE tidut.
         ASSIGN                             
         SUBSTRING(tidut.UT,12) = CAPS(Guru.Konstanter:gomrk) 
         SUBSTRING(tidut.UT,20) = "TIMMAR"      
         SUBSTRING(tidut.UT,29) = "KOSTNAD"
         SUBSTRING(tidut.UT,38) = "TIMMAR"
         SUBSTRING(tidut.UT,47) = "KOSTNAD"
         SUBSTRING(tidut.UT,56) = "KOSTNAD"
         SUBSTRING(tidut.UT,65) = "KOSTNAD".                
         CREATE tidut.                                                    
         SUBSTRING(tidut.UT,1) = str.      
         CREATE tidut.       
         ASSIGN                                             
         SUBSTRING(tidut.UT,1) = "TOTALT/".
         CREATE tidut.
         SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrl) + ":".         
         FOR EACH slutsumpf USE-INDEX OMR:             
            CREATE tidut.           
            ASSIGN                                                                
            SUBSTRING(tidut.UT,12) = slutsumpf.OMRADE               
            SUBSTRING(tidut.UT,20) = STRING(slutsumpf.TIMMAR,">>>>>>>9")  
            SUBSTRING(tidut.UT,29) = STRING(slutsumpf.BELOPP,">>>>>>>9") 
            SUBSTRING(tidut.UT,38) = STRING(slutsumpf.OTIMMAR,">>>>>>>9")
            SUBSTRING(tidut.UT,47) = STRING(slutsumpf.OBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,56) = STRING(slutsumpf.TBELOPP,">>>>>>>9")
            SUBSTRING(tidut.UT,65) = STRING(slutsumpf.LONKOST,"->>>>>>9").                 
         END.
      END.   
      ELSE DO:
         CREATE felmeddtemp.
         ASSIGN 
         felmeddtemp.FELMEDD = "Det finns inga kostnader att visa.". 
         musz = TRUE.
      END.                                 
   END.

END PROCEDURE.

PROCEDURE prisutfsum_UI :
   DEFINE INPUT PARAMETER utomr AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER RAD_PERIOD AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
   DEFINE INPUT PARAMETER aoval AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER inder AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER str AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER str2 AS CHARACTER NO-UNDO.
   DEFINE INPUT-OUTPUT PARAMETER TABLE FOR tidut.
   EMPTY TEMP-TABLE prislutsum NO-ERROR.    
   ASSIGN   
   arrhjsum = 0     
   arrhjsumtid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0.                       
   IF utomr NE "ALLA" THEN DO: 
      IF RAD_PERIOD = 1 THEN DO:
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 8
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr.      
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut). 
         OPEN QUERY dagsumq5 FOR EACH SUMTID WHERE SUMTID.DATUM = bdatum AND SUMTID.GEOMRADE = utomr NO-LOCK.
         GET FIRST dagsumq5 NO-LOCK.
         DO WHILE AVAILABLE(SUMTID) TRANSACTION:
            CREATE dagtemp.
            ASSIGN
            dagtemp.AONR = SUMTID.AONR
            dagtemp.DELNR = SUMTID.DELNR
            dagtemp.GEOMRADE = SUMTID.GEOMRADE
            dagtemp.PRISTYP = SUMTID.PRISTYP                        
            dagtemp.TIMMAR = SUMTID.TIMMAR
            dagtemp.OTIMMAR = SUMTID.OTIMMAR.             
            GET NEXT dagsumq5 NO-LOCK. 
         END.         
         /* ta bort dagtemp som har legat felaktiga */
         DO TRANSACTION:      
            OPEN QUERY felq FOR EACH BYTAONR WHERE BYTAONR.OMRADE = utomr AND BYTAONR.OMRADE NE BYTAONR.NOMRADE NO-LOCK,
            EACH dagtemp WHERE dagtemp.AONR = BYTAONR.AONR AND dagtemp.DELNR = BYTAONR.DELNR NO-LOCK.
            GET FIRST felq EXCLUSIVE-LOCK.
            DO WHILE AVAILABLE(dagtemp):               
               DELETE dagtemp.
               GET NEXT felq EXCLUSIVE-LOCK.
            END.
         END.                            
         FOR EACH dagtemp WHERE dagtemp.GEOMRADE = utomr NO-LOCK  
         BREAK BY dagtemp.GEOMRADE  BY dagtemp.PRISTYP :      
            ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).      
            ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).          
            IF LAST-OF(dagtemp.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = dagtemp.GEOMRADE                
               prislutsum.PRISTYP = dagtemp.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) + 
               ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove).                 
               arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR.    
               arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR.           
            END. 
         END.
         /*FOR EACH SUMTID WHERE SUMTID.GEOMRADE = utomr AND SUMTID.DATUM = bdatum  NO-LOCK  
         BREAK BY SUMTID.DATUM BY SUMTID.GEOMRADE BY SUMTID.PRISTYP:      
            ACCUMULATE SUMTID.TIMMAR (TOTAL BY SUMTID.GEOMRADE BY SUMTID.PRISTYP).      
            ACCUMULATE SUMTID.OTIMMAR (TOTAL BY SUMTID.GEOMRADE BY SUMTID.PRISTYP).          
            IF LAST-OF(SUMTID.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = SUMTID.GEOMRADE                
               prislutsum.PRISTYP = SUMTID.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL SUMTID.TIMMAR) - arrhjsumtid) + 
               ((ACCUM TOTAL SUMTID.OTIMMAR) - arrhjsumove).                 
               arrhjsumtid = ACCUM TOTAL SUMTID.TIMMAR.    
               arrhjsumove = ACCUM TOTAL SUMTID.OTIMMAR.           
            END. 
         END.         */
      END.   
      IF RAD_PERIOD = 2 THEN DO:
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 8
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr.      
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut). 
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum AND SUMTIDDAG.GEOMRADE = utomr NO-LOCK.
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG) TRANSACTION:
            CREATE dagtemp.
            ASSIGN
            dagtemp.AONR = SUMTIDDAG.AONR
            dagtemp.DELNR = SUMTIDDAG.DELNR
            dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE
            dagtemp.PRISTYP = SUMTIDDAG.PRISTYP                        
            dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
            dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR. 
            GET NEXT dagsumq NO-LOCK. 
         END.
         /* ta bort dagtemp som har legat felaktiga */
         DO TRANSACTION:      
            OPEN QUERY felq FOR EACH BYTAONR WHERE BYTAONR.OMRADE = utomr AND BYTAONR.OMRADE NE BYTAONR.NOMRADE NO-LOCK,
            EACH dagtemp WHERE dagtemp.AONR = BYTAONR.AONR AND dagtemp.DELNR = BYTAONR.DELNR NO-LOCK.
            GET FIRST felq EXCLUSIVE-LOCK.
            DO WHILE AVAILABLE(dagtemp):
               DELETE dagtemp.
               GET NEXT felq EXCLUSIVE-LOCK.
            END.
         END.                            
         FOR EACH dagtemp WHERE dagtemp.GEOMRADE = utomr NO-LOCK  
         BREAK BY dagtemp.GEOMRADE  BY dagtemp.PRISTYP :      
            ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).      
            ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).          
            IF LAST-OF(dagtemp.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = dagtemp.GEOMRADE                
               prislutsum.PRISTYP = dagtemp.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) + 
               ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove).                 
               arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR.    
               arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR.           
            END. 
         END.
      END.               
   END.  /*IF utomr NE "ALLA"*/
   ELSE DO:
      IF RAD_PERIOD = 1 THEN DO:         
         OPEN QUERY dagsumq5 FOR EACH SUMTID WHERE SUMTID.DATUM = bdatum NO-LOCK.
         GET FIRST dagsumq5 NO-LOCK.
         DO WHILE AVAILABLE(SUMTID) TRANSACTION:
            CREATE dagtemp.
            ASSIGN
            dagtemp.AONR = SUMTID.AONR
            dagtemp.DELNR = SUMTID.DELNR
            dagtemp.GEOMRADE = SUMTID.GEOMRADE
            dagtemp.PRISTYP = SUMTID.PRISTYP                        
            dagtemp.TIMMAR = SUMTID.TIMMAR
            dagtemp.OTIMMAR = SUMTID.OTIMMAR.             
            GET NEXT dagsumq5 NO-LOCK. 
         END.
         /* ta bort dagtemp som har legat felaktiga */
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 8
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr.      
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut).          
         FOR EACH dagtemp NO-LOCK BREAK BY dagtemp.GEOMRADE  BY dagtemp.PRISTYP :      
            ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).      
            ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).          
            IF LAST-OF(dagtemp.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = dagtemp.GEOMRADE                
               prislutsum.PRISTYP = dagtemp.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) + 
               ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove).                 
               arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR.    
               arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR.           
            END. 
         END.
         /*FOR EACH SUMTID WHERE SUMTID.DATUM = bdatum  NO-LOCK  
         BREAK BY SUMTID.GEOMRADE BY SUMTID.PRISTYP :      
            ACCUMULATE SUMTID.TIMMAR (TOTAL BY SUMTID.GEOMRADE BY SUMTID.PRISTYP).   
            ACCUMULATE SUMTID.OTIMMAR (TOTAL BY SUMTID.GEOMRADE BY SUMTID.PRISTYP).             
            IF LAST-OF(SUMTID.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = SUMTID.GEOMRADE                
               prislutsum.PRISTYP = SUMTID.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL SUMTID.TIMMAR) - arrhjsumtid) +
               ((ACCUM TOTAL SUMTID.OTIMMAR) - arrhjsumove).                
               arrhjsumtid = ACCUM TOTAL SUMTID.TIMMAR. 
               arrhjsumove = ACCUM TOTAL SUMTID.OTIMMAR.            
            END. 
         END.*/
      END. /*IF RAD_PERIOD = 1*/  
      IF RAD_PERIOD = 2 THEN DO:         
         OPEN QUERY dagsumq FOR EACH SUMTIDDAG WHERE SUMTIDDAG.DATUM >= bdatum AND
         SUMTIDDAG.DATUM <= avdatum NO-LOCK.
         GET FIRST dagsumq NO-LOCK.
         DO WHILE AVAILABLE(SUMTIDDAG) TRANSACTION:
            CREATE dagtemp.
            ASSIGN
            dagtemp.AONR = SUMTIDDAG.AONR
            dagtemp.DELNR = SUMTIDDAG.DELNR
            dagtemp.GEOMRADE = SUMTIDDAG.GEOMRADE
            dagtemp.PRISTYP = SUMTIDDAG.PRISTYP                        
            dagtemp.TIMMAR = SUMTIDDAG.TIMMAR
            dagtemp.OTIMMAR = SUMTIDDAG.OTIMMAR. 
            GET NEXT dagsumq NO-LOCK. 
         END. 
         EMPTY TEMP-TABLE bytaao NO-ERROR.          
         CREATE bytaao.
         ASSIGN
         bytaao.VADGORA = 8
         bytaao.STDATUM = bdatum
         bytaao.SLDATUM = avdatum
         bytaao.ARTAL = YEAR(bdatum)
         bytaao.RAD_PERIOD = RAD_PERIOD
         bytaao.AONR = ""
         bytaao.DELNR = 0
         bytaao.GLOBFORETAG = Guru.Konstanter:globforetag
         bytaao.INDER = inder 
         bytaao.SOK1 = utomr.      
         RUN SKAPAOBY.P(INPUT-OUTPUT TABLE bytaao, INPUT-OUTPUT TABLE dagtemp, INPUT-OUTPUT TABLE indertemp , INPUT-OUTPUT TABLE restid, OUTPUT bytaonrmed, INPUT-OUTPUT TABLE tidut).          
         FOR EACH dagtemp NO-LOCK  
         BREAK BY dagtemp.GEOMRADE  BY dagtemp.PRISTYP :      
            ACCUMULATE dagtemp.TIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).      
            ACCUMULATE dagtemp.OTIMMAR (TOTAL BY dagtemp.GEOMRADE BY dagtemp.PRISTYP).          
            IF LAST-OF(dagtemp.PRISTYP) THEN DO TRANSACTION:
               CREATE prislutsum.
               ASSIGN     
               prislutsum.OMRADE = dagtemp.GEOMRADE                
               prislutsum.PRISTYP = dagtemp.PRISTYP
               prislutsum.TIMMAR = ((ACCUM TOTAL dagtemp.TIMMAR) - arrhjsumtid) + 
               ((ACCUM TOTAL dagtemp.OTIMMAR) - arrhjsumove).                 
               arrhjsumtid = ACCUM TOTAL dagtemp.TIMMAR.    
               arrhjsumove = ACCUM TOTAL dagtemp.OTIMMAR.           
            END. 
         END.            
      END. /*IF RAD_PERIOD = 2*/  
      ASSIGN               
      arrhjsumtid = 0   
      arrhjsumove = 0. 
      FOR EACH prislutsum BREAK BY prislutsum.PRISTYP :      
         ACCUMULATE prislutsum.TIMMAR (TOTAL BY prislutsum.PRISTYP).        
         IF LAST-OF(prislutsum.PRISTYP) THEN DO TRANSACTION:
            CREATE prislutsum1.
            ASSIGN                              
            prislutsum1.PRISTYP = prislutsum.PRISTYP
            prislutsum1.TIMMAR = (ACCUM TOTAL prislutsum.TIMMAR) - arrhjsumtid.                 
            arrhjsumtid = ACCUM TOTAL prislutsum.TIMMAR.           
         END. 
      END.
   END.   /*ALLA*/
   ASSIGN               
   arrhjsum = 0     
   arrhjsumtid = 0    
   arrhjsumove = 0    
   arrhjsumtra = 0. 
   utomr2 = "".   
   musz = TRUE.
   FOR EACH prislutsum USE-INDEX AONR NO-LOCK: 
      IF utomr = "ALLA" THEN DO:
         IF utomr2 = prislutsum.OMRADE THEN utomr = utomr.
         ELSE DO:              
            utomr2 = prislutsum.OMRADE. 
            IF musz = TRUE THEN musz = FALSE.
            ELSE DO:
               CREATE tidut.
               ASSIGN tidut.UT = str2.                
            END.
            CREATE tidut. 
            CREATE tidut.
            FIND FIRST OMRADETAB WHERE OMRADETAB.OMRADE = prislutsum.OMRADE
            USE-INDEX OMR NO-LOCK NO-ERROR.           
            IF NOT AVAILABLE OMRADETAB THEN  DO:
               SUBSTRING(tidut.UT,1) = CAPS(Guru.Konstanter:gomrk) + " SAKNAS".
              
            END.
            ELSE DO:
               SUBSTRING(tidut.UT,1) = OMRADETAB.NAMN.                            
              
            END.
            CREATE tidut.
         END.
      END.       
      CREATE tidut.
      ASSIGN                                                        
      SUBSTRING(tidut.UT,18) = prislutsum.PRISTYP        
      SUBSTRING(tidut.UT,29) = STRING(prislutsum.TIMMAR,">>>>>>99.99").                      
   END.       
   CREATE tidut.
   ASSIGN tidut.UT = str2.     
   IF utomr = "ALLA" THEN DO:        
      CREATE tidut. 
      CREATE tidut.
      SUBSTRING(tidut.UT,1) = "SUMMA SAMTLIGA " + CAPS(Guru.Konstanter:gomrk).               
      CREATE tidut.
      FOR EACH prislutsum1 USE-INDEX AONR NO-LOCK:                                                 
         CREATE tidut.
         ASSIGN                                                        
         SUBSTRING(tidut.UT,18) = prislutsum1.PRISTYP
         SUBSTRING(tidut.UT,29) = STRING(prislutsum1.TIMMAR,">>>>>>99.99").            
      END.
   END.        

END PROCEDURE.

