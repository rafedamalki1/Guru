/*VISAFNATAPP.P*/
&SCOPED-DEFINE NEW NEW 

{NATKALKTEMP.I}
DEFINE VARIABLE ordningraknare AS INTEGER NO-UNDO.
DEFINE BUFFER natkalk_buff FOR natkalk_temp.
DEFINE VARIABLE planrvar AS LOGICAL NO-UNDO.
RUN sumkoder_UI (INPUT "B",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "JK",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "KB",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "LFS",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "LL",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N109",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N110",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N121",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N122",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N123",INPUT 1,INPUT 9999,INPUT "LSP").
RUN sumkoder_UI (INPUT "N144",INPUT 1,INPUT 32,INPUT "HSP").
RUN sumkoder_UI (INPUT "N144",INPUT 33,INPUT 41,INPUT "LSP").
RUN sumkoder_UI (INPUT "N144",INPUT 42,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N145",INPUT 1,INPUT 30,INPUT "HSP").
RUN sumkoder_UI (INPUT "N145",INPUT 31,INPUT 41,INPUT "LSP").
RUN sumkoder_UI (INPUT "N145",INPUT 42,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N146",INPUT 1,INPUT 30,INPUT "HSP").
RUN sumkoder_UI (INPUT "N146",INPUT 31,INPUT 36,INPUT "LSP").
RUN sumkoder_UI (INPUT "N146",INPUT 37,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N147",INPUT 1,INPUT 30,INPUT "HSP").
RUN sumkoder_UI (INPUT "N147",INPUT 31,INPUT 36,INPUT "LSP").
RUN sumkoder_UI (INPUT "N147",INPUT 37,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "N148",INPUT 1,INPUT 9999,INPUT "LSP").
RUN sumkoder_UI (INPUT "N151",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "N152",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "N159",INPUT 1,INPUT 50,INPUT "STN").
RUN sumkoder_UI (INPUT "N159",INPUT 51,INPUT 51,INPUT "MÄT").
RUN sumkoder_UI (INPUT "N159",INPUT 52,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "N161",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "NB",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "R111",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "R121",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "R123",INPUT 1,INPUT 9999,INPUT "LSP").
RUN sumkoder_UI (INPUT "R151",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "R153",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "R155",INPUT 1,INPUT 9999,INPUT "LSP").
RUN sumkoder_UI (INPUT "R159",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "R161",INPUT 1,INPUT 9999,INPUT "HSP").
RUN sumkoder_UI (INPUT "RK",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "RT",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "SF",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "SG",INPUT 1,INPUT 9999,INPUT "STN").
RUN sumkoder_UI (INPUT "T",INPUT 1,INPUT 9999,INPUT "STN").   
   
   
PROCEDURE sumkoder_UI :
   DEFINE INPUT  PARAMETER arbkodervar AS CHARACTER NO-UNDO.
   DEFINE INPUT  PARAMETER lopnrstartvar AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER lopnrslutvar AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER styp AS CHARACTER NO-UNDO.
   CREATE nkodertemp.  
   ASSIGN 
   nkodertemp.ARBKOD = arbkodervar
   nkodertemp.LOPNRSTART = lopnrstartvar
   nkodertemp.LOPNRSLUT = lopnrslutvar
   nkodertemp.SUMMATYP = styp.
   IF styp = "STN" THEN nkodertemp.BENAMNING = "Stationer".  
   IF styp = "HSP" THEN nkodertemp.BENAMNING = "Ledningar HSP".
   IF styp = "LSP" THEN nkodertemp.BENAMNING = "Ledningar LSP".
   IF styp = "MÄT" THEN nkodertemp.BENAMNING = "Mätare". 
END PROCEDURE.

PROCEDURE visnatstart_UI :
   DEFINE INPUT  PARAMETER inplanrvar AS LOGICAL NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR natkalk_temp.
   DEFINE OUTPUT PARAMETER TABLE FOR visnat.
   EMPTY TEMP-TABLE visnat NO-ERROR.   
   planrvar = inplanrvar.   
   IF planrvar = FALSE THEN DO:
  
      FOR EACH natkalk_temp NO-LOCK:
         IF natkalk_temp.PLANNR = ? THEN DO:
            ASSIGN 
            natkalk_temp.STATUSNIV = "UF"
            natkalk_temp.ARTAL = 0.
         END.   
         ELSE DO: 
            FIND FIRST KALKAONR WHERE KALKAONR.PLANNR = natkalk_temp.PLANNR AND
            KALKAONR.ARTAL = natkalk_temp.ARTAL AND KALKAONR.KALKNR = natkalk_temp.KALKNR 
            NO-LOCK.
            IF AVAILABLE KALKAONR THEN DO:
               ASSIGN
               natkalk_temp.STATUSNIV = KALKAONR.STATUSNIV.       
            END.
         END.   
      END.   
   END.
   ELSE DO:
  
      FOR EACH natkalk_temp WHERE natkalk_temp.KALKNR = 0 NO-LOCK:
         FOR EACH KALKAONR WHERE KALKAONR.PLANNR = natkalk_temp.PLANNR AND
         KALKAONR.ARTAL = natkalk_temp.ARTAL AND KALKAONR.TYP = 7 NO-LOCK:
            IF KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV" OR KALKAONR.STATUSNIV = "UR" THEN DO:
               CREATE natkalk_buff.
               BUFFER-COPY natkalk_temp TO natkalk_buff.
               ASSIGN
               natkalk_buff.KALKNR = KALKAONR.KALKNR             
               natkalk_buff.STATUSNIV = KALKAONR.STATUSNIV.       
            END.
         END.   
      END.
      FOR EACH natkalk_temp WHERE natkalk_temp.KALKNR = 0 NO-LOCK:
         DELETE natkalk_temp.
      END.
  
   END.
  
   FOR EACH natkalk_temp WHERE natkalk_temp.STATUSNIV = "HUV" OR natkalk_temp.STATUSNIV = "ALT" NO-LOCK:
      natkalk_temp.STATUSNIV = "UF".
   END.      
   FOR EACH natkalk_temp NO-LOCK:
      FIND FIRST natartemp WHERE natartemp.ARTAL = natkalk_temp.ARTAL NO-LOCK NO-ERROR.
      IF NOT AVAILABLE natartemp THEN DO:
         CREATE natartemp.
         natartemp.ARTAL = natkalk_temp.ARTAL.
      END.
      RUN rakna_UI.
   END.
   
   FOR EACH nat_temp BREAK  BY nat_temp.ARTAL BY nat_temp.STATUSNIV BY nat_temp.PERIOD: 
      ACCUMULATE 
      nat_temp.OVRIGT (TOTAL BY nat_temp.ARTAL BY nat_temp.STATUSNIV BY nat_temp.PERIOD). 
      IF LAST-OF(nat_temp.PERIOD) THEN DO:
         CREATE nat_tot.
         ASSIGN 
         nat_tot.ARTAL = nat_temp.ARTAL  
         nat_tot.STATUSNIV = "Tot " + nat_temp.STATUSNIV 
         nat_tot.PERIOD = nat_temp.PERIOD 
         nat_tot.OVRIGT = (ACCUM TOTAL BY nat_temp.PERIOD nat_temp.OVRIGT).                                        
      END.     
   END.
   
   RUN summering_UI.
   RUN visningtab_UI.
   RUN visningtabtyp_UI.
   
   RUN visach_UI.
END PROCEDURE.

  
PROCEDURE visach_UI :
   FOR EACH visnat WHERE NO-LOCK:
      IF visnat.PERIOD NE 0 THEN visnat.PERIODC = "H" + STRING(visnat.PERIOD).
      IF visnat.LOPNR NE 0 THEN visnat.LOPNRC = STRING(visnat.LOPNR,">>>9").
      IF visnat.OVRIGT1 NE 0 THEN visnat.OVRIGT1C = STRING(ROUND(visnat.OVRIGT1,0),"->>>>>>>>>9").
                                                                                   
      IF visnat.ANTAL1 NE 0 THEN visnat.ANTAL1C = STRING(ROUND(visnat.ANTAL1,1),"->>>>>>9.9").
      IF visnat.OVRIGT2 NE 0 THEN visnat.OVRIGT2C = STRING(ROUND(visnat.OVRIGT2,0),"->>>>>>>>>9").
      IF visnat.ANTAL2 NE 0 THEN visnat.ANTAL2C = STRING(ROUND(visnat.ANTAL2,1),"->>>>>>9.9").
      IF visnat.OVRIGT3 NE 0 THEN visnat.OVRIGT3C = STRING(ROUND(visnat.OVRIGT3,0),"->>>>>>>>>9.0").
      IF visnat.ANTAL3 NE 0 THEN visnat.ANTAL3C = STRING(ROUND(visnat.ANTAL3,1),"->>>>>>9.9").
      IF visnat.OVRIGT4 NE 0 THEN visnat.OVRIGT4C = STRING(ROUND(visnat.OVRIGT4,0),"->>>>>>>>>9").
      IF visnat.ANTAL4 NE 0 THEN visnat.ANTAL4C = STRING(ROUND(visnat.ANTAL4,1),"->>>>>>9.9").
      IF visnat.OVRIGT5 NE 0 THEN visnat.OVRIGT5C = STRING(ROUND(visnat.OVRIGT5,0),"->>>>>>>>>9.0").
      IF visnat.ANTAL5 NE 0 THEN visnat.ANTAL5C = STRING(ROUND(visnat.ANTAL5,1),"->>>>>>9.9").
      IF visnat.STATUSNIV = "" THEN DO:
         visnat.OVRIGT1C = visnat.BENAMNING.
         visnat.BENAMNING = "".
      END.   
   END.

END PROCEDURE.
PROCEDURE rakna_UI :   
   FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = natkalk_temp.KALKNR NO-LOCK NO-ERROR.   
   FIND FIRST KALKBEF WHERE KALKBEF.KALKNR = 0 AND KALKBEF.KATAR = FASTSPEC.KATAR NO-LOCK NO-ERROR.      
   OPEN QUERY kalkq FOR EACH FASTKALK WHERE FASTKALK.KALKNR = FASTSPEC.KALKNR  AND FASTKALK.OMRADE = FASTSPEC.OMRADE USE-INDEX OMRADE NO-LOCK.
   GET FIRST kalkq NO-LOCK.
   DO WHILE AVAILABLE(FASTKALK):
         
      IF FASTKALK.ARBKOD = "EGEN" THEN DO:
  
      END.
      
     
      ELSE DO:
         IF FASTKALK.ANTAL = 0 THEN DO:
             /*GÖR INGET*/
         END.
         ELSE DO:
            FIND FIRST nat_temp WHERE 
            nat_temp.ARTAL = natkalk_temp.ARTAL AND 
            nat_temp.PERIOD = INTEGER(FASTKALK.F10) AND 
            nat_temp.ARBKOD = FASTKALK.ARBKOD AND 
            nat_temp.LOPNR = FASTKALK.LOPNR AND
            nat_temp.STATUSNIV = natkalk_temp.STATUSNIV
            NO-LOCK NO-ERROR.
            IF NOT AVAILABLE nat_temp THEN CREATE nat_temp.
            ASSIGN               
            nat_temp.ARTAL = natkalk_temp.ARTAL 
            nat_temp.PERIOD = FASTKALK.F10 
            nat_temp.ARBKOD = FASTKALK.ARBKOD 
            nat_temp.LOPNR = FASTKALK.LOPNR
            nat_temp.BENAMNING = FASTKALK.BENAMNING
            nat_temp.STATUSNIV = natkalk_temp.STATUSNIV
            nat_temp.ANTAL = nat_temp.ANTAL + FASTKALK.ANTAL 
            nat_temp.OVRIGT = nat_temp.OVRIGT + FASTKALK.OVRIGT * FASTKALK.ANTAL.                             
         END.
      END.
      GET NEXT kalkq NO-LOCK.
   END.
   CLOSE QUERY kalkq.
   /* FOR EACH FASTKALK WHERE KALKNR = 921417*/
  
END PROCEDURE.

PROCEDURE summering_UI :
   FOR EACH nat_temp:
      FIND FIRST nkodertemp WHERE nkodertemp.ARBKOD = nat_temp.ARBKOD AND 
      nkodertemp.LOPNRSTART <= nat_temp.LOPNR AND nkodertemp.LOPNRSLUT >= nat_temp.LOPNR 
      NO-LOCK NO-ERROR.
      IF AVAILABLE nkodertemp THEN DO:
         ASSIGN 
         nat_temp.BENAMNINGTYP = nkodertemp.BENAMNING.
         nat_temp.SUMMATYP = nkodertemp.SUMMATYP.
      END.        
   END.
   
   FOR EACH nat_temp WHERE nkodertemp.SUMMATYP NE ""
   BREAK  BY nat_temp.ARTAL BY nat_temp.STATUSNIV BY nat_temp.PERIOD BY nat_temp.SUMMATYP: 
      ACCUMULATE 
      nat_temp.ANTAL  (TOTAL BY nat_temp.ARTAL BY nat_temp.STATUSNIV BY nat_temp.PERIOD BY nat_temp.SUMMATYP)
      nat_temp.OVRIGT (TOTAL BY nat_temp.ARTAL BY nat_temp.STATUSNIV BY nat_temp.PERIOD BY nat_temp.SUMMATYP). 
      IF LAST-OF(nat_temp.SUMMATYP) THEN DO TRANSACTION:
         CREATE nat_tottyp.
         ASSIGN 
         nat_tottyp.ARTAL = nat_temp.ARTAL  
         nat_tottyp.STATUSNIV = nat_temp.STATUSNIV 
         nat_tottyp.PERIOD = nat_temp.PERIOD
         nat_tottyp.SUMMATYP = nat_temp.SUMMATYP 
         nat_tottyp.BENAMNING = nat_temp.BENAMNINGTYP
         nat_tottyp.ANTAL = (ACCUM TOTAL BY nat_temp.SUMMATYP nat_temp.ANTAL).
         nat_tottyp.OVRIGT = (ACCUM TOTAL BY nat_temp.SUMMATYP nat_temp.OVRIGT).                                        
      END.     
   END.
   FOR EACH nat_tottyp BREAK  BY nat_tottyp.ARTAL BY nat_tottyp.STATUSNIV BY nat_tottyp.PERIOD: 
      ACCUMULATE 
      nat_tottyp.OVRIGT (TOTAL BY nat_tottyp.ARTAL BY nat_tottyp.STATUSNIV BY nat_tottyp.PERIOD). 
      IF LAST-OF(nat_tottyp.PERIOD) THEN DO:
         CREATE nat_tottypsum.
         ASSIGN 
         nat_tottypsum.ARTAL = nat_tottyp.ARTAL  
         nat_tottypsum.STATUSNIV = "Tot " + nat_tottyp.STATUSNIV 
         nat_tottypsum.PERIOD = nat_tottyp.PERIOD 
         nat_tottypsum.OVRIGT = (ACCUM TOTAL BY nat_tottyp.PERIOD nat_tottyp.OVRIGT).                                        
      END.     
   END.
   
   
END PROCEDURE.

PROCEDURE visningtab_UI :
   ordningraknare = 0.
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.STATUSNIV = "".
   visnat.BENAMNING = "Kalkylkoder".
   RUN vissubUFUR_UI (INPUT 1,INPUT "UF").      
   RUN vissubUFUR_UI (INPUT 2,INPUT "UF").  
   
   RUN vissubUFUR_UI (INPUT 1,INPUT "UR").
   RUN vissubUFUR_UI (INPUT 2,INPUT "UR").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.STATUSNIV = "".
   visnat.BENAMNING = "Summeringar".
   
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 1
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa koder period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFUR_UI (INPUT 1,INPUT "Tot UF").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 2
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa koder period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFUR_UI (INPUT 2,INPUT "Tot UF").
   
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.SUMUFUR = 1
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa koder per år ".
   RUN vissubTOTUFUR_UI (INPUT 0,INPUT "Tot UF").
   
   
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 1
   visnat.STATUSNIV = "Tot UR".
   visnat.BENAMNING = "Summa utrangeringskoder per period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFUR_UI (INPUT 1,INPUT "Tot UR").    
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 2
   visnat.STATUSNIV = "Tot UR".   
   visnat.BENAMNING = "Summa utrangeringskoder per period " + STRING(visnat.PERIOD).     
   RUN vissubTOTUFUR_UI (INPUT 2,INPUT "Tot UR").
   
   
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.SUMUFUR = 1
   visnat.STATUSNIV = "Tot UR".
   visnat.BENAMNING = "Summa koder per år ".
   RUN vissubTOTUFUR_UI (INPUT 0,INPUT "Tot UR").
   EMPTY TEMP-TABLE visnattot NO-ERROR. 
   FIND FIRST visnat WHERE visnat.SUMUFUR = 1 AND visnat.STATUSNIV = "Tot UF" NO-LOCK NO-ERROR.
   IF AVAILABLE visnat THEN DO:
      visnat.SUMUFUR = 0.
      CREATE visnattot.
      BUFFER-COPY visnat TO visnattot.      
      ASSIGN
      visnattot.PERIOD = 0
      visnattot.SUMUFUR = 0
      visnattot.STATUSNIV = "Tot UF-UR".
      visnattot.BENAMNING = "Summa UF-UR per år ".         
   END.
   FIND FIRST visnat WHERE visnat.SUMUFUR = 1 AND visnat.STATUSNIV = "Tot UR" NO-LOCK NO-ERROR.
   IF AVAILABLE visnat THEN DO:
      ASSIGN
      visnat.SUMUFUR = 0
      visnattot.OVRIGT1 = visnattot.OVRIGT1 - visnat.OVRIGT1
      visnattot.OVRIGT2 = visnattot.OVRIGT2 - visnat.OVRIGT2
      visnattot.OVRIGT3 = visnattot.OVRIGT3 - visnat.OVRIGT3
      visnattot.OVRIGT4 = visnattot.OVRIGT4 - visnat.OVRIGT4
      visnattot.OVRIGT5 = visnattot.OVRIGT5 - visnat.OVRIGT5.   
      CREATE visnat.
      BUFFER-COPY visnattot TO visnat.
      RUN natar_UI. 
      ASSIGN
      visnat.ORDNING = ordningraknare
      visnat.STATUSNIV = "Tot år".       
   END.   
   EMPTY TEMP-TABLE visnattot NO-ERROR.  
END PROCEDURE.
PROCEDURE visningtabtyp_UI :
  
/*Anl.kategori*/
   FIND FIRST nat_tottyp USE-INDEX ARTAL NO-LOCK NO-ERROR.
   IF NOT AVAILABLE nat_tottyp THEN DO:
      RETURN.
   END.  
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.STATUSNIV = "".
   visnat.BENAMNING = "Kategorier".
   RUN vissubUFURTYP_UI (INPUT 1,INPUT "UF").   
   RUN vissubUFURTYP_UI (INPUT 2,INPUT "UF").  
  
  
   RUN vissubUFURTYP_UI (INPUT 1,INPUT "UR").
   RUN vissubUFURTYP_UI (INPUT 2,INPUT "UR").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.STATUSNIV = "".
   visnat.BENAMNING = "Summeringar".
   
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 1
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa Kategorier per period " + STRING(visnat.PERIOD). 
   
   RUN vissubTOTUFURTYP_UI (INPUT 1,INPUT "Tot UF").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 2
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa Kategorier per period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFURTYP_UI (INPUT 2,INPUT "Tot UF").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.SUMUFUR = 1
   visnat.STATUSNIV = "Tot UF".
   visnat.BENAMNING = "Summa Kategorier per år ". 
   RUN vissubTOTUFURTYP_UI (INPUT 0,INPUT "Tot UF").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 1
   visnat.STATUSNIV = "Tot UR".
   visnat.BENAMNING = "Summa Kategorier per period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFURTYP_UI (INPUT 1,INPUT "Tot UR"). 
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 2
   visnat.STATUSNIV = "Tot UR".
   visnat.BENAMNING = "Summa Kategorier per period " + STRING(visnat.PERIOD).
   RUN vissubTOTUFURTYP_UI (INPUT 2,INPUT "Tot UR").
   CREATE visnat.
   RUN natar_UI.
   ASSIGN
   visnat.ORDNING = ordningraknare
   visnat.PERIOD = 0
   visnat.SUMUFUR = 1
   visnat.STATUSNIV = "Tot UR".
   visnat.BENAMNING = "Summa Kategorier per år ".
   RUN vissubTOTUFURTYP_UI (INPUT 0,INPUT "Tot UR"). 
   EMPTY TEMP-TABLE visnattot NO-ERROR. 
   FIND FIRST visnat WHERE visnat.SUMUFUR = 1 AND visnat.STATUSNIV = "Tot UF" NO-LOCK NO-ERROR.
   IF AVAILABLE visnat THEN DO:
      visnat.SUMUFUR = 0.
      CREATE visnattot.
      BUFFER-COPY visnat TO visnattot.      
      ASSIGN
      visnattot.PERIOD = 0
      visnattot.SUMUFUR = 0
      visnattot.STATUSNIV = "Tot UF-UR".
      visnattot.BENAMNING = "Summa UF-UR Kategorier per år ".         
   END.
   FIND FIRST visnat WHERE visnat.SUMUFUR = 1 AND visnat.STATUSNIV = "Tot UR" NO-LOCK NO-ERROR.
   IF AVAILABLE visnat THEN DO:
      ASSIGN
      visnat.SUMUFUR = 0
      visnattot.OVRIGT1 = visnattot.OVRIGT1 - visnat.OVRIGT1
      visnattot.OVRIGT2 = visnattot.OVRIGT2 - visnat.OVRIGT2
      visnattot.OVRIGT3 = visnattot.OVRIGT3 - visnat.OVRIGT3
      visnattot.OVRIGT4 = visnattot.OVRIGT4 - visnat.OVRIGT4
      visnattot.OVRIGT5 = visnattot.OVRIGT5 - visnat.OVRIGT5.   
      CREATE visnat.
      BUFFER-COPY visnattot TO visnat.
      RUN natar_UI. 
      ASSIGN
      visnat.ORDNING = ordningraknare
      visnat.STATUSNIV = "Tot år".       
   END.   
   EMPTY TEMP-TABLE visnattot NO-ERROR.
   
END PROCEDURE.
PROCEDURE natar_UI :
   ordningraknare = ordningraknare + 1.
   FIND FIRST natartemp NO-LOCK NO-ERROR.
   IF AVAILABLE natartemp THEN visnat.ARTAL1 = natartemp.ARTAL.
   FIND NEXT natartemp NO-LOCK NO-ERROR.
   IF AVAILABLE natartemp THEN visnat.ARTAL2 = natartemp.ARTAL.
   FIND NEXT natartemp NO-LOCK NO-ERROR.
   IF AVAILABLE natartemp THEN visnat.ARTAL3 = natartemp.ARTAL.
   FIND NEXT natartemp NO-LOCK NO-ERROR.
   IF AVAILABLE natartemp THEN visnat.ARTAL4 = natartemp.ARTAL.
   FIND NEXT natartemp NO-LOCK NO-ERROR.
   IF AVAILABLE natartemp THEN visnat.ARTAL5 = natartemp.ARTAL. 
END PROCEDURE.

PROCEDURE vissubUFUR_UI :
   DEFINE INPUT  PARAMETER pd AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER sn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kollkoll AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalkoll AS INTEGER NO-UNDO.
   
   FIND FIRST nat_temp WHERE nat_temp.PERIOD = pd AND
   nat_temp.STATUSNIV = sn
   USE-INDEX ARTAL NO-LOCK NO-ERROR. 
   kollkoll = 1.
   REPEAT:     
      IF NOT AVAILABLE nat_temp THEN LEAVE.
      IF kollkoll > 5 THEN LEAVE.
      FIND FIRST visnat WHERE 
      visnat.PERIOD = nat_temp.PERIOD AND 
      visnat.STATUSNIV = nat_temp.STATUSNIV AND 
      visnat.ARBKOD = nat_temp.ARBKOD AND 
      visnat.LOPNR = nat_temp.LOPNR
      NO-LOCK NO-ERROR.
      IF NOT AVAILABLE visnat THEN DO:
         FIND FIRST visnat WHERE 
         visnat.PERIOD = nat_temp.PERIOD AND 
         visnat.STATUSNIV = nat_temp.STATUSNIV AND 
         visnat.ARBKOD = ""
         NO-LOCK NO-ERROR.
      END.   
      IF NOT AVAILABLE visnat THEN DO:
         CREATE visnat.
         RUN natar_UI.
      END.   
      ASSIGN
      visnat.ORDNING = ordningraknare 
      visnat.PERIOD = nat_temp.PERIOD
      visnat.STATUSNIV = nat_temp.STATUSNIV
      visnat.ARBKOD =  nat_temp.ARBKOD 
      visnat.LOPNR = nat_temp.LOPNR
      visnat.BENAMNING = nat_temp.BENAMNING.
      IF visnat.ARTAL1 = nat_temp.ARTAL THEN DO:           
         ASSIGN                    
         visnat.ARTAL1 = nat_temp.ARTAL 
         visnat.ANTAL1 = nat_temp.ANTAL 
         visnat.OVRIGT1 = nat_temp.OVRIGT.
      END.
      IF visnat.ARTAL2 = nat_temp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL2 = nat_temp.ARTAL 
         visnat.ANTAL2 = nat_temp.ANTAL 
         visnat.OVRIGT2 = nat_temp.OVRIGT.         
      END.
      IF visnat.ARTAL3 = nat_temp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL3 = nat_temp.ARTAL 
         visnat.ANTAL3 = nat_temp.ANTAL 
         visnat.OVRIGT3 = nat_temp.OVRIGT.        
      END.
      IF visnat.ARTAL4 = nat_temp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL4 = nat_temp.ARTAL 
         visnat.ANTAL4 = nat_temp.ANTAL 
         visnat.OVRIGT4 = nat_temp.OVRIGT.         
      END.
      IF visnat.ARTAL5 = nat_temp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL5 = nat_temp.ARTAL 
         visnat.ANTAL5 = nat_temp.ANTAL 
         visnat.OVRIGT5 = nat_temp.OVRIGT.         
      END.
      artalkoll = nat_temp.ARTAL.
      FIND NEXT nat_temp WHERE nat_temp.PERIOD = pd AND
      nat_temp.STATUSNIV = sn
      USE-INDEX ARTAL NO-LOCK NO-ERROR. 
      IF NOT AVAILABLE nat_temp THEN LEAVE.
      IF artalkoll < nat_temp.ARTAL THEN kollkoll = kollkoll + 1.
       
   END.
END PROCEDURE.
PROCEDURE vissubUFURTYP_UI :
   DEFINE INPUT  PARAMETER pd AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER sn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kollkoll AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalkoll AS INTEGER NO-UNDO.
   
   FIND FIRST nat_tottyp WHERE nat_tottyp.PERIOD = pd AND
   nat_tottyp.STATUSNIV = sn
   USE-INDEX ARTAL NO-LOCK NO-ERROR. 
   IF NOT AVAILABLE nat_tottyp THEN DO:
      RETURN.
   END. 
   IF visnat.SUMMATYP =  "" THEN visnat.SUMMATYP =  nat_tottyp.SUMMATYP.   
   kollkoll = 1.
   REPEAT:     
      IF NOT AVAILABLE nat_tottyp THEN LEAVE.
      IF kollkoll > 5 THEN LEAVE.
      FIND FIRST visnat WHERE 
      visnat.PERIOD = nat_tottyp.PERIOD AND 
      visnat.STATUSNIV = nat_tottyp.STATUSNIV AND 
      visnat.SUMMATYP = nat_tottyp.SUMMATYP  
      NO-LOCK NO-ERROR.      
      IF NOT AVAILABLE visnat THEN DO:
         CREATE visnat.
         RUN natar_UI.
      END.   
      ASSIGN
      visnat.ORDNING = ordningraknare 
      visnat.PERIOD = nat_tottyp.PERIOD
      visnat.STATUSNIV = nat_tottyp.STATUSNIV
      visnat.SUMMATYP =  nat_tottyp.SUMMATYP 
      visnat.BENAMNING = nat_tottyp.BENAMNING.
      IF visnat.ARTAL1 = nat_tottyp.ARTAL THEN DO:           
         ASSIGN                    
         visnat.ARTAL1 = nat_tottyp.ARTAL 
         visnat.ANTAL1 = nat_tottyp.ANTAL 
         visnat.OVRIGT1 = nat_tottyp.OVRIGT.
      END.
      IF visnat.ARTAL2 = nat_tottyp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL2 = nat_tottyp.ARTAL 
         visnat.ANTAL2 = nat_tottyp.ANTAL 
         visnat.OVRIGT2 = nat_tottyp.OVRIGT.         
      END.
      IF visnat.ARTAL3 = nat_tottyp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL3 = nat_tottyp.ARTAL 
         visnat.ANTAL3 = nat_tottyp.ANTAL 
         visnat.OVRIGT3 = nat_tottyp.OVRIGT.        
      END.
      IF visnat.ARTAL4 = nat_tottyp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL4 = nat_tottyp.ARTAL 
         visnat.ANTAL4 = nat_tottyp.ANTAL 
         visnat.OVRIGT4 = nat_tottyp.OVRIGT.         
      END.
      IF visnat.ARTAL5 = nat_tottyp.ARTAL THEN DO:
         ASSIGN
         visnat.ARTAL5 = nat_tottyp.ARTAL 
         visnat.ANTAL5 = nat_tottyp.ANTAL 
         visnat.OVRIGT5 = nat_tottyp.OVRIGT.         
      END.
      artalkoll = nat_tottyp.ARTAL.
      FIND NEXT nat_tottyp WHERE nat_tottyp.PERIOD = pd AND
      nat_tottyp.STATUSNIV = sn
      USE-INDEX ARTAL NO-LOCK NO-ERROR. 
      IF NOT AVAILABLE nat_tottyp THEN LEAVE.
      IF artalkoll < nat_tottyp.ARTAL THEN kollkoll = kollkoll + 1.
       
   END.
END PROCEDURE.


PROCEDURE vissubTOTUFUR_UI :
   DEFINE INPUT  PARAMETER pd AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER sn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kollkoll AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalkoll AS INTEGER NO-UNDO.
   IF pd > 0 THEN DO:
      FIND FIRST nat_tot WHERE nat_tot.PERIOD = pd AND
      nat_tot.STATUSNIV = sn      
      USE-INDEX ARTAL NO-LOCK NO-ERROR.
   END. 
   ELSE DO:
      FIND FIRST nat_tot WHERE nat_tot.STATUSNIV = sn
      USE-INDEX ARTAL NO-LOCK NO-ERROR.
   END.       
   kollkoll = 1.
   REPEAT:     
      IF NOT AVAILABLE nat_tot THEN LEAVE.
      IF kollkoll > 5 THEN LEAVE.
      
      IF visnat.ARTAL1 = nat_tot.ARTAL THEN DO:                 
         visnat.OVRIGT1 = visnat.OVRIGT1 + nat_tot.OVRIGT.         
      END.
      IF visnat.ARTAL2 = nat_tot.ARTAL THEN DO:
         visnat.OVRIGT2 = visnat.OVRIGT2 + nat_tot.OVRIGT.
      END.
      IF visnat.ARTAL3 = nat_tot.ARTAL THEN DO:
         visnat.OVRIGT3 = visnat.OVRIGT3 + nat_tot.OVRIGT.
      END.
      IF visnat.ARTAL4 = nat_tot.ARTAL THEN DO:
         visnat.OVRIGT4 = visnat.OVRIGT4 + nat_tot.OVRIGT.
      END.
      IF visnat.ARTAL5 = nat_tot.ARTAL THEN DO:
         visnat.OVRIGT5 = visnat.OVRIGT5 + nat_tot.OVRIGT.
      END.
      artalkoll = nat_tot.ARTAL.
      IF pd > 0 THEN DO:
         FIND NEXT nat_tot WHERE nat_tot.PERIOD = pd AND
         nat_tot.STATUSNIV = sn
         USE-INDEX ARTAL NO-LOCK NO-ERROR.
      END.
      ELSE DO:
         FIND NEXT nat_tot WHERE nat_tot.STATUSNIV = sn
         USE-INDEX ARTAL NO-LOCK NO-ERROR.
      END.       
      IF NOT AVAILABLE nat_tot THEN LEAVE.
      IF artalkoll < nat_tot.ARTAL THEN kollkoll = kollkoll + 1.
       
   END.
END PROCEDURE.

PROCEDURE vissubTOTUFURTYP_UI :
   DEFINE INPUT  PARAMETER pd AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER sn AS CHARACTER NO-UNDO.
   DEFINE VARIABLE kollkoll AS INTEGER NO-UNDO.
   DEFINE VARIABLE artalkoll AS INTEGER NO-UNDO.
   IF pd > 0 THEN DO:
      FIND FIRST nat_tottypsum WHERE nat_tottypsum.PERIOD = pd AND
      nat_tottypsum.STATUSNIV = sn
      USE-INDEX ARTAL NO-LOCK NO-ERROR.
   END. 
   ELSE DO:
      FIND FIRST nat_tottypsum WHERE nat_tottypsum.STATUSNIV = sn
      USE-INDEX ARTAL NO-LOCK NO-ERROR.
   END.   
     
   IF NOT AVAILABLE nat_tottypsum THEN DO:
      RETURN.
   END.   
   kollkoll = 1.
   REPEAT:     
      IF NOT AVAILABLE nat_tottypsum THEN LEAVE.
      IF kollkoll > 5 THEN LEAVE.
      
      IF visnat.ARTAL1 = nat_tottypsum.ARTAL THEN DO:                 
         visnat.OVRIGT1 = visnat.OVRIGT1 + nat_tottypsum.OVRIGT.         
      END.
      IF visnat.ARTAL2 = nat_tottypsum.ARTAL THEN DO:
         visnat.OVRIGT2 = visnat.OVRIGT2 + nat_tottypsum.OVRIGT.
      END.
      IF visnat.ARTAL3 = nat_tottypsum.ARTAL THEN DO:
         visnat.OVRIGT3 = visnat.OVRIGT3 + nat_tottypsum.OVRIGT.
      END.
      IF visnat.ARTAL4 = nat_tottypsum.ARTAL THEN DO:
         visnat.OVRIGT4 = visnat.OVRIGT4 + nat_tottypsum.OVRIGT.
      END.
      IF visnat.ARTAL5 = nat_tottypsum.ARTAL THEN DO:
         visnat.OVRIGT5 = visnat.OVRIGT5 + nat_tottypsum.OVRIGT.
      END.
      artalkoll = nat_tottypsum.ARTAL.
      IF pd > 0 THEN DO:
         FIND NEXT nat_tottypsum WHERE nat_tottypsum.PERIOD = pd AND
         nat_tottypsum.STATUSNIV = sn
         USE-INDEX ARTAL NO-LOCK NO-ERROR.
      END. 
      ELSE DO:
         FIND NEXT nat_tottypsum WHERE nat_tottypsum.STATUSNIV = sn
         USE-INDEX ARTAL NO-LOCK NO-ERROR.
      END.
      
      IF NOT AVAILABLE nat_tottypsum THEN LEAVE.
      IF artalkoll < nat_tottypsum.ARTAL THEN kollkoll = kollkoll + 1.
       
   END.
END PROCEDURE.




