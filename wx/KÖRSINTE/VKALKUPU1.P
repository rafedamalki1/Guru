/*VKALKUPU1.P*/
DEFINE TEMP-TABLE kalk_temp
   FIELD ARBKOD LIKE LOP1.ARBKOD
   FIELD LOPNR LIKE LOP1.LOPNR
   FIELD ENHET LIKE LOP1.ENHET
   FIELD BENAMNING LIKE LOP1.BENAMNING   
   INDEX KOD ARBKOD LOPNR ASCENDING.

DEFINE TEMP-TABLE kalksum
   FIELD ARBKOD LIKE LOP1.ARBKOD
   FIELD LOPNR LIKE LOP1.LOPNR
   FIELD ENHET LIKE LOP1.ENHET
   FIELD BENAMNING LIKE LOP1.BENAMNING
   FIELD ANTAL LIKE FASTKALK.ANTAL
   INDEX KOD ARBKOD LOPNR ASCENDING.

DEFINE TEMP-TABLE kalk_temp2
   FIELD ARBKOD LIKE LOP1.ARBKOD
   FIELD LOPNR LIKE LOP1.LOPNR
   FIELD ENHET LIKE LOP1.ENHET
   FIELD BENAMNING LIKE LOP1.BENAMNING
   FIELD ANTAL LIKE FASTKALK.ANTAL
   INDEX KOD ARBKOD LOPNR ASCENDING.

DEFINE INPUT PARAMETER utomr LIKE OMRADETAB.OMRADE NO-UNDO.
DEFINE INPUT PARAMETER period AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER bdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER avdatum AS DATE NO-UNDO.
DEFINE INPUT PARAMETER typval AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR kalk_temp.
DEFINE OUTPUT PARAMETER TABLE FOR kalk_temp2.


/* MESSAGE utomr period bdatum avdatum typval. */
FOR EACH kalk_temp:
   CREATE kalksum.
   ASSIGN
   kalksum.ARBKOD = kalk_temp.ARBKOD
   kalksum.LOPNR = kalk_temp.LOPNR
   kalksum.ANTAL = 0
   kalksum.BENAMNING = kalk_temp.BENAMNING
   kalksum.ENHET = kalk_temp.ENHET.
END.
IF period = 1 THEN DO:
   OPEN QUERY aq FOR EACH AONRTAB WHERE YEAR(AONRTAB.AONRAVDATUM) = YEAR(bdatum) AND
   AONRTAB.OMRADE = utomr NO-LOCK.
   GET FIRST aq NO-LOCK.
   DO WHILE AVAILABLE(AONRTAB):
      RUN kalk_UI.               
      GET NEXT aq NO-LOCK.
   END.
   CLOSE QUERY aq.
END.
ELSE DO:
   OPEN QUERY aq FOR EACH AONRTAB WHERE AONRTAB.AONRAVDATUM >= bdatum AND
   AONRTAB.AONRAVDATUM <= avdatum AND AONRTAB.OMRADE = utomr NO-LOCK.
   GET FIRST aq NO-LOCK.
   DO WHILE AVAILABLE(AONRTAB):
      RUN kalk_UI.               
      GET NEXT aq NO-LOCK.
   END.
   CLOSE QUERY aq.
END.

FOR EACH kalksum BREAK BY kalksum.ARBKOD BY kalksum.LOPNR:      
ACCUMULATE kalksum.ANTAL (TOTAL BY kalksum.ARBKOD BY kalksum.LOPNR).       
   IF LAST-OF(kalksum.LOPNR) THEN DO TRANSACTION:
      CREATE kalk_temp2.
      ASSIGN                                 
      kalk_temp2.LOPNR = kalksum.LOPNR
      kalk_temp2.BENAMNING = kalksum.BENAMNING 
      kalk_temp2.ENHET = kalksum.ENHET   
      kalk_temp2.ARBKOD = kalksum.ARBKOD         
      kalk_temp2.ANTAL = (ACCUM TOTAL BY kalksum.LOPNR kalksum.ANTAL).      
   END.     
END.

PROCEDURE kalk_UI:
   FIND FIRST KALKAONR WHERE KALKAONR.AONR = AONRTAB.AONR AND
   KALKAONR.DELNR = AONRTAB.DELNR AND KALKAONR.TYP = typval AND 
   (KALKAONR.STATUSNIV = "UF" OR KALKAONR.STATUSNIV = "HUV")
   NO-LOCK NO-ERROR.
   IF AVAILABLE  KALKAONR THEN DO:
  
      FIND FIRST FASTSPEC WHERE FASTSPEC.KALKNR = KALKAONR.KALKNR
      NO-LOCK NO-ERROR.
      IF AVAILABLE FASTSPEC THEN DO:
         FOR EACH kalk_temp:
            OPEN QUERY kq FOR EACH FASTKALK WHERE FASTKALK.OMRADE = FASTSPEC.OMRADE AND FASTKALK.KALKNR = FASTSPEC.KALKNR AND
            FASTKALK.ARBKOD = kalk_temp.ARBKOD AND
            FASTKALK.LOPNR = kalk_temp.LOPNR USE-INDEX KOD NO-LOCK.
            GET FIRST kq NO-LOCK.
            DO WHILE AVAILABLE(FASTKALK):            
               CREATE kalksum.
               ASSIGN
               kalksum.ARBKOD = FASTKALK.ARBKOD
               kalksum.LOPNR = FASTKALK.LOPNR
               kalksum.ANTAL = FASTKALK.ANTAL
               kalksum.BENAMNING = kalk_temp.BENAMNING
               kalksum.ENHET = kalk_temp.ENHET.
               GET NEXT kq NO-LOCK.
            END.
            CLOSE QUERY kq.
         END.
      END.         
   END.
END PROCEDURE.
