/* LONREG.P*/
&Scoped-define NEW NEW
{TIDALLT.I}
DEFINE INPUT PARAMETER ganv AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER vadgora AS INTEGER NO-UNDO.
DEFINE INPUT PARAMETER pkod AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER FILL-IN_LONTILLAGG AS CHARACTER NO-UNDO.
DEFINE INPUT PARAMETER TABLE FOR extratidallt.
DEFINE OUTPUT PARAMETER placerarec AS RECID.
DEFINE OUTPUT PARAMETER TABLE FOR tidallt.
DEFINE NEW SHARED VARIABLE regdatum AS DATE NO-UNDO.
DEFINE NEW SHARED VARIABLE tidtabrec AS RECID  NO-UNDO.
/*DEFINE NEW SHARED VARIABLE globanv LIKE ANVANDARE.ANVANDARE NO-UNDO.*/
DEFINE BUFFER tidbuff FOR TIDREGITAB.

IF vadgora = 1 THEN DO:
   FIND FIRST PERSONALTAB WHERE PERSONALTAB.PERSONALKOD = pkod NO-LOCK NO-ERROR.
   FIND FIRST ANSTFORMTAB WHERE ANSTFORMTAB.ANSTALLNING = PERSONALTAB.ANSTALLNING
   USE-INDEX ANSTF NO-LOCK NO-ERROR.
   FOR EACH extratidallt:
      regdatum = extratidallt.DATUM.

      DO TRANSACTION:
         IF extratidallt.RECTIDVIS = ? THEN DO: 
            CREATE TIDREGITAB.
         END.
         ELSE DO:
            FIND TIDREGITAB WHERE RECID(TIDREGITAB) = extratidallt.RECTIDVIS EXCLUSIVE-LOCK NO-ERROR.

         END.
         BUFFER-COPY extratidallt EXCEPT extratidallt.RECTIDVIS TO TIDREGITAB.
         TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD.     
      END.
   
      CREATE tidallt.
      ASSIGN
      tidallt.PERSONALKOD = ""
      tidtabrec = RECID(TIDREGITAB)
      tidallt.RECTIDVIS = RECID(TIDREGITAB).      
      DELETE extratidallt.
   END.
   RUN coptider_UI.
   OPEN QUERY tq FOR EACH TIDREGITAB WHERE 
   TIDREGITAB.PERSONALKOD = PERSONALTAB.PERSONALKOD AND
   TIDREGITAB.DATUM = regdatum AND TIDREGITAB.LONAUTO = TRUE 
   USE-INDEX PSTART NO-LOCK.
   DO TRANSACTION:
      GET FIRST tq EXCLUSIVE-LOCK.
      DO WHILE AVAILABLE(TIDREGITAB):     
         FIND FIRST LONKORT WHERE LONKORT.LONTILLAGG = FILL-IN_LONTILLAGG AND
         LONKORT.KORTLON = TIDREGITAB.LONTILLAGG NO-LOCK NO-ERROR.
         IF NOT AVAILABLE LONKORT THEN vadgora = vadgora.
         ELSE DO:
            ASSIGN 
            TIDREGITAB.LONTILLAGG = " " 
            TIDREGITAB.LONTILLANTAL = 0
            TIDREGITAB.LONAUTO = FALSE.
         END.
         GET NEXT tq EXCLUSIVE-LOCK.
      END.
   END.        
END.
IF vadgora = 2 THEN DO:
   FOR EACH extratidallt:
      DO TRANSACTION:
         FIND TIDREGITAB WHERE RECID(TIDREGITAB) = extratidallt.RECTIDVIS EXCLUSIVE-LOCK NO-ERROR.
         ASSIGN
         TIDREGITAB.LONTILLANTAL = extratidallt.LONTILLANTAL
         TIDREGITAB.LONTILLAGG  = extratidallt.LONTILLAGG.  
      END.
   END.
END.
PROCEDURE coptider_UI :   
   FOR EACH tidallt WHERE tidallt.PERSONALKOD = "":
      FIND TIDREGITAB WHERE RECID(TIDREGITAB) = tidallt.RECTIDVIS NO-LOCK NO-ERROR.
      IF AVAILABLE TIDREGITAB THEN DO:
         BUFFER-COPY TIDREGITAB TO tidallt.
         tidallt.RECTIDVIS = RECID(TIDREGITAB).
         IF tidallt.LONTILLAGG NE "" THEN DO:
            FIND FIRST LONTILL WHERE LONTILL.KOD = ANSTFORMTAB.KOD AND 
            LONTILL.LONTILLAGG = tidallt.LONTILLAGG NO-LOCK NO-ERROR.
            IF AVAILABLE LONTILL THEN DO:
               tidallt.VILART = LONTILL.VILART. 
            END.
            tidallt.TYP = "LON".
         END.
         IF tidallt.BEREDSKAP NE "" THEN DO:
            FIND FIRST BERKOD WHERE BERKOD.BEREDSKAPSAVTAL = PERSONALTAB.BEREDSKAPSAVTAL AND
            BERKOD.BEREDSKAP = tidallt.BEREDSKAP NO-LOCK NO-ERROR.
            IF AVAILABLE BERKOD THEN DO:
               tidallt.VILART = BERKOD.VILART. 
            END.
            tidallt.TYP = "BER".
         END.
         IF tidallt.TRAKTKOD NE "" THEN DO:
            FIND FIRST TRAKTATAB WHERE TRAKTATAB.TRAAVTAL = PERSONALTAB.TRAAVTAL AND 
            TRAKTATAB.TRAKTKOD = tidallt.TRAKTKOD NO-LOCK NO-ERROR.    
            IF AVAILABLE TRAKTATAB THEN DO:
               tidallt.VILART = TRAKTATAB.VILART. 
            END.
            tidallt.TYP = "TRA".        
         END.
      END.
      ELSE DELETE tidallt.
      placerarec = RECID(TIDREGITAB).
   END.
END PROCEDURE.
FOR EACH tidallt WHERE NO-LOCK:
   Guru.GlobalaVariabler:GDPRvem = Guru.GlobalaVariabler:GDPRvem + "," + tidallt.PERSONALKOD.
END.
 
{GDPRLOGGCLIENT.I}
