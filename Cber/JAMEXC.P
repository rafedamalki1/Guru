/*JAMEXC.P*/
{TIDUTTTNEW.I}
DEFINE VARIABLE namnvar AS CHARACTER NO-UNDO.
DEFINE NEW SHARED VARIABLE musz AS LOGICAL NO-UNDO.
DEFINE VARIABLE lev1farg1 AS INTEGER NO-UNDO.
DEFINE VARIABLE lev1farg2 AS INTEGER NO-UNDO.
DEFINE VARIABLE lev1farg3 AS INTEGER NO-UNDO.
ASSIGN 
lev1farg1 = 5
lev1farg2 = 10
lev1farg3 = 9. 
{GLOBVAR2DEL1.I}
{EXECLIN.I}
PROCEDURE jamfarg_ui :
   DEFINE INPUT  PARAMETER f1 AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER f2 AS INTEGER NO-UNDO.
   DEFINE INPUT  PARAMETER f3 AS INTEGER NO-UNDO.
   RUN profexcelfarg_UI (INPUT f1, OUTPUT lev1farg1).
   RUN profexcelfarg_UI (INPUT f2, OUTPUT lev1farg2).
   RUN profexcelfarg_UI (INPUT f3, OUTPUT lev1farg3).
END PROCEDURE.
PROCEDURE jamexcel_UI :
   DEFINE INPUT  PARAMETER excllbred AS INTEGER NO-UNDO.
   DEFINE INPUT PARAMETER TABLE FOR tidut.
   DEFINE INPUT PARAMETER lev1 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER lev2 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER lev3 AS CHARACTER NO-UNDO.
   DEFINE INPUT PARAMETER optsatt AS INTEGER NO-UNDO.
   DEFINE VARIABLE rakn AS INTEGER NO-UNDO.   
   DEFINE VARIABLE efarg AS INTEGER NO-UNDO.
    
   ASSIGN
   allac[1] = "A"          
   allac[2] = "B"          
   allac[3] = "C"          
   allac[4] = "D"          
   allac[5] = "E"          
   allac[6] = "F"          
   allac[7] = "G"          
   allac[8] = "H"          
   allac[9] = "I"          
   allac[10] = "J"         
   allac[11] = "K"         
   allac[12] = "L"   
   allac[13] = "M"
   allac[14] = "N"
   allac[15] = "O"
   allac[16] = "P".   
   IF optsatt = 2 THEN DO:
      ASSIGN
      allac[17] = "Q"         
      allac[18] = "R"         
      allac[19] = "S".         
   END.
   ASSIGN
   
   slutbredd = 10   
   bredd[1] = 15 + excllbred
   bredd[2] = 7   
   bredd[3] = 10   
   bredd[4] =  5     
   bredd[5] = 10   
   bredd[6] = 10   
   bredd[7] = 10   
   bredd[8] = 5   
   bredd[9] = 10   
   bredd[10] = 10   
   bredd[11] = 10   
   bredd[12] = 10
   bredd[13] = 5
   bredd[14] = 10
   bredd[15] = 10
   bredd[16] = 10.   
   allachar[3] = TRUE.
   allachar[7] = TRUE.
   allachar[12] = TRUE.   
   IF optsatt = 2 THEN DO:
      ASSIGN
      bredd[17] = 5   
      bredd[18] = 6   
      bredd[19] = 10.   
   END.   
   bladvar = 0.
   iRad = 1.
   RUN colbredd_UI.  
   RUN startexcel_UI.    
   RUN namnbladexcel_UI (INPUT "Prisjämförelse leverantörer").
   /*Rubriker*/
   FIND FIRST tidut NO-LOCK NO-ERROR.
   raknare = 1.
   /*Kolumnbredd*/
   RUN kolumnexcel_UI.
   REPEAT:
      RUN rubrikerexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 11).
      FIND NEXT tidut NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidut THEN DO:
         LEAVE.
      END.
      IF SUBSTRING(tidut.UT,estartnr[1],3) = "Ben"  THEN DO:      
         LEAVE.
      END.     
   END.
   /*Poster*/  
   raknare = 1.
   REPEAT:
      IF SUBSTRING(tidut.UT,132) = "$" THEN LEAVE.
      IF SUBSTRING(tidut.UT,1,5) = "=====" THEN DO:
         RUN understryk_UI (INPUT 4,INPUT 2).       
      END.
      ELSE DO:                  
         IF SUBSTRING(tidut.UT,estartnr[1],5) = "Summa" OR SUBSTRING(tidut.UT,estartnr[1],6) = "Kablar" THEN DO:         
            RUN posterexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 0,INPUT FALSE,INPUT FALSE,INPUT 25,INPUT 143).                    
            RUN bgcell_UI (INPUT 36).
            RUN bgcell2_UI (INPUT "C",INPUT "F",INPUT lev1farg1).                  
            RUN bgcell2_UI (INPUT "G",INPUT "K",INPUT lev1farg2).                  
            RUN bgcell2_UI (INPUT "L",INPUT "P",INPUT lev1farg3).                  
            IF optsatt = 1 OR optsatt = 2 THEN DO:                  
               IF DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) = 0 THEN DO:
                  IF DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10))  THEN DO:
                     RUN bgcell3_UI (INPUT "F",INPUT 3).                  
                  END.
                  ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10))  THEN DO:
                     RUN bgcell3_UI (INPUT "J",INPUT 3).                                    
                  END.                  
               END.
               ELSE DO:                                 
                  IF DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) THEN DO:
                     RUN bgcell3_UI (INPUT "F",INPUT 3).                  
                  END.
                  ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) THEN DO:
                     RUN bgcell3_UI (INPUT "J",INPUT 3).                                    
                  END.
                  ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) THEN DO:               
                     RUN bgcell3_UI (INPUT "O",INPUT 3).                                                      
                  END.
               END.
            END.
            
         END.
         ELSE DO:                               
            RUN posterexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 0,INPUT FALSE,INPUT FALSE,INPUT 25,INPUT 143).  
            /*KOLUMNFÄRGERNA*/                           
            RUN bgcell2_UI (INPUT "C",INPUT "F",INPUT lev1farg1).                  
            RUN bgcell2_UI (INPUT "G",INPUT "K",INPUT lev1farg2).                  
            RUN bgcell2_UI (INPUT "L",INPUT "P",INPUT lev1farg3).                  
            IF optsatt = 3 THEN DO:                  
               IF SUBSTRING(tidut.UT,estartnr[1],3) = "Ben"  THEN.
               ELSE DO:               
                  IF DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) = 0 THEN DO:
                     IF DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10))  THEN DO:
                        RUN bgcell2_UI (INPUT "C",INPUT "F",INPUT 3).                  
                     END.
                     ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) THEN DO:
                        RUN bgcell2_UI (INPUT "G",INPUT "K",INPUT 3).                                    
                     END.                     
                  END.
                  ELSE DO:                                    
                     IF DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) THEN DO:
                        RUN bgcell2_UI (INPUT "C",INPUT "F",INPUT 3).                  
                     END.
                     ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) THEN DO:
                        RUN bgcell2_UI (INPUT "G",INPUT "K",INPUT 3).                                    
                     END.
                     ELSE IF DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[6],10)) AND DECIMAL(SUBSTRING(tidut.UT,estartnr[15],10)) < DECIMAL(SUBSTRING(tidut.UT,estartnr[10],10)) THEN DO:               
                        RUN bgcell2_UI (INPUT "L",INPUT "P",INPUT 3).                                                      
                     END.
                  END.
               END.
            END.

         END.         
      END.   
      FIND NEXT tidut NO-LOCK NO-ERROR.
      IF NOT AVAILABLE tidut THEN DO:
         LEAVE.
      END.          
   END.      
   /*bilagor*/
   IF AVAILABLE tidut THEN DO:
      IF SUBSTRING(tidut.UT,132) = "$" THEN RUN bilagor_UI.
      IF AVAILABLE tidut THEN DO:
         IF SUBSTRING(tidut.UT,132) = "$" THEN RUN bilagor_UI.
         IF AVAILABLE tidut THEN DO:
            IF SUBSTRING(tidut.UT,132) = "$" THEN RUN bilagor_UI.
         END.
      END.
   END.
   RUN slutexcel_UI. 
   
END PROCEDURE.

PROCEDURE bilagor_UI :
   ASSIGN
   iRad = 1
   estartnr = 0
   bredd = 0.
   ASSIGN
   allac[1] = "A"          
   allac[2] = "B"          
   allac[3] = "C"          
   allac[4] = "D".          
   allachar[1] = TRUE.
   ASSIGN
   slutbredd = 20   
   bredd[1] = 10
   bredd[2] = 20   
   bredd[3] = 10   
   bredd[4] = 20.   
   FIND NEXT tidut NO-LOCK.
   IF AVAILABLE tidut  THEN DO:   
      IF SUBSTRING (tidut.UT,1) = " "  THEN DO:
         FIND NEXT tidut NO-LOCK.
      END.
      IF AVAILABLE tidut THEN DO:
         RUN nyttbladexcel_UI.         
         namnvar = "Ej träff " + SUBSTRING(tidut.UT,37,20).         
         RUN namnbladexcel_UI (INPUT namnvar).
         RUN colbredd_UI.  
         raknare = 1.
         /*Kolumnbredd*/
         RUN kolumnexcel_UI.
         
         REPEAT:
            RUN rubrikerexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 11).
            FIND NEXT tidut NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidut THEN DO:
               LEAVE.
            END.
            IF SUBSTRING(tidut.UT,estartnr[1],4) = "Från"  THEN DO:      
               LEAVE.
            END.     
         END.
         /*Poster*/    
         raknare = 1.
         REPEAT:
            IF SUBSTRING(tidut.UT,132) = "$" THEN LEAVE.
            IF SUBSTRING(tidut.UT,1,5) = "=====" THEN DO:
               RUN understryk_UI (INPUT 4,INPUT 2).       
            END.
            ELSE DO:                              
               RUN posterexcel_UI (INPUT tidut.UT,INPUT "COURIER",INPUT 10,INPUT FALSE,INPUT 12,INPUT 0,INPUT FALSE,INPUT FALSE,INPUT 25,INPUT 143).                             
            END.   
            FIND NEXT tidut NO-LOCK NO-ERROR.
            IF NOT AVAILABLE tidut THEN DO:
               LEAVE.
            END.          
         END.      
      END.
   END.
END PROCEDURE.
