/*BERLISTUM.P*/
{ENRJMF.I}
{BERTEMPTAB.I}
&Scoped-define SHARED SHARED 
{kalktemp23.i}
&Scoped-define SHARED
DEFINE VARIABLE KalkClasserStart AS HANDLE NO-UNDO.
DEFINE SHARED VARIABLE summeradberedning AS LOGICAL NO-UNDO.
DEFINE SHARED VARIABLE btnbervalh AS HANDLE NO-UNDO.  
DEFINE VARIABLE enkelexcel AS LOGICAL NO-UNDO.
{BYGGTEMP.I}
{BERLISTMWID.I}

/*
Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = snabbexcel
*/   

DEFINE INPUT PARAMETER TABLE FOR eurberedningtemp.


BTN_EXLISTENK:LOAD-IMAGE("BILDER\xbtn_excelsnabb.gif") NO-ERROR.
framesizeh = framesizeextrah.
ON 'CHOOSE' OF BTN_AVBLIST PERSISTENT RUN btnavb_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_EXLIST PERSISTENT RUN btnex_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_EXLISTENK PERSISTENT RUN btnexenk_UI IN THIS-PROCEDURE.

ON 'CHOOSE' OF BTN_IELIST PERSISTENT RUN btnie_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_PDFLIST PERSISTENT RUN btnpdf_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_SKRIVLIST PERSISTENT RUN btnskriv_UI IN THIS-PROCEDURE.
ON 'MOUSE-MENU-CLICK' OF BTN_SKRIVLIST PERSISTENT RUN mbtnskriv_UI IN THIS-PROCEDURE.
ON 'CHOOSE' OF BTN_VISALIST PERSISTENT RUN btnvisa_UI IN THIS-PROCEDURE.
ON 'MOUSE-SELECT-DBLCLICK' OF SEL_UPP PERSISTENT RUN mdselupp_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF SEL_UPP PERSISTENT RUN selupp_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF TOG_KONSTRUKTION PERSISTENT RUN konstgrpval_UI IN THIS-PROCEDURE.

ON 'VALUE-CHANGED' OF TOG_EXCELKALK PERSISTENT RUN EgenskaperTillBygg1_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF TOG_SIDEXCEL PERSISTENT RUN EgenskaperTillBygg2_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF TOG_EGENSIDA PERSISTENT RUN EgenskaperTillBygg3_UI IN THIS-PROCEDURE.
ON 'VALUE-CHANGED' OF TOG_EGEN PERSISTENT RUN EgenskaperTillBygg4_UI IN THIS-PROCEDURE.
RUN PlaceraKnapp_UI.
PROCEDURE EgenskaperTillBygg1_UI :
   IF TOG_EXCELKALK:CHECKED = TRUE THEN TOG_SIDEXCEL:CHECKED = FALSE.
   IF TOG_EXCELKALK:CHECKED = FALSE THEN TOG_EGENSIDA:CHECKED = FALSE. 
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.
   /*
   IF TOG_EXCELKALK:CHECKED = TRUE THEN DO:
      TOG_EGENSIDA:SENSITIVE = TRUE.
      TOG_EGENSIDA:HIDDEN = FALSE.
   END.    
   ELSE DO:
      TOG_EGENSIDA:SENSITIVE = FALSE.
      TOG_EGENSIDA:HIDDEN = TRUE.
   END.
   */
END PROCEDURE.
PROCEDURE EgenskaperTillBygg4_UI :
   IF TOG_EGEN:CHECKED = FALSE THEN TOG_EGENSIDA:CHECKED = FALSE.
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.  
END PROCEDURE.

PROCEDURE EgenskaperTillBygg3_UI :
  
   IF TOG_EGENSIDA:CHECKED = TRUE THEN TOG_EGEN:CHECKED = TRUE. 
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.  
END PROCEDURE.

PROCEDURE EgenskaperTillBygg2_UI :
   IF TOG_SIDEXCEL:CHECKED = TRUE THEN DO:
      TOG_EXCELKALK:CHECKED = FALSE.
      /*
      TOG_EGENSIDA:CHECKED = FALSE. 
      TOG_EGENSIDA:SENSITIVE = FALSE.
      TOG_EGENSIDA:HIDDEN = TRUE.
      */
   END.
      
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
   Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.
END PROCEDURE.

PROCEDURE PlaceraKnapp_UI :
   Guru.Konstanter:LabelFlytt(CMB_PRIS). 
   Guru.Konstanter:LabelFlytt(CMB_STOLP).
   Guru.Konstanter:LabelFlytt(CMB_SKRIV).
   
   Guru.GlobalaVariabler:StartRadForKnappar = CMB_SKRIV:ROW. 
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_SKRIVLIST).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_VISALIST).
   
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_EXLISTENK).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_EXLIST).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_PDFLIST).
   Guru.Konstanter:PlaceraKnapparLodratt(BTN_IELIST).
   TOG_EGENSIDA:ROW = TOG_EGEN:ROW. 
   TOG_EGENSIDA:COLUMN = TOG_EGEN:COLUMN + TOG_EGEN:WIDTH / 1.3. 
   TOG_EGENSIDA:WIDTH = TOG_EGENSIDA:COLUMN - TOG_EXCELKALK:COLUMN. 
   TOG_SIDEXCEL:MOVE-TO-TOP (). 
   
        
END PROCEDURE.
PROCEDURE konstgrpval_UI :
   IF TOG_KONSTRUKTION:CHECKED = FALSE THEN TOG_VAL:CHECKED = FALSE.
END PROCEDURE.
PROCEDURE selupp_UI :
   
   RUN goma_UI.
   
   IF summeradberedning = TRUE THEN DO:
      ASSIGN
      TOG_KONVAL:HIDDEN = TRUE.
      TOG_P3:CHECKED = FALSE.
      TOG_P3:HIDDEN = TRUE. 
   END.
   IF Guru.Konstanter:hoppsekvar[3] = FALSE THEN DO:
      TOG_P3:CHECKED = FALSE.
      TOG_P3:HIDDEN = TRUE.   
   END.
   
   IF SEL_UPP:SCREEN-VALUE = "Stolpprotokoll" OR SEL_UPP:SCREEN-VALUE = "Stolpprotokoll minimerat" OR  
      SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktion/artikel" OR SEL_UPP:SCREEN-VALUE = "Satsläggning och byggnummer" OR
      SEL_UPP:SCREEN-VALUE = "Materiel/upplag/projekt/objekt" OR SEL_UPP:SCREEN-VALUE = "Anmärkning/upplag/konstruktion" OR 
      SEL_UPP:SCREEN-VALUE = "Byggprotokoll i skrivbordsordning" 
      THEN DO: 
      BTN_EXLISTENK:HIDDEN = FALSE.   
   END.   
   
   RUN PlaceraKnapp_UI.
END PROCEDURE.
PROCEDURE mdselupp_UI :
   visvalvar = 1.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE. 
   RUN visa_UI.  
END PROCEDURE.
PROCEDURE btnvisa_UI : 
    visvalvar = 1.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE.   
   RUN visa_UI.
   IF VALID-HANDLE(btnbervalh) THEN DO:
      RUN AfterAnvmtrl_UI IN btnbervalh.
   END.
END PROCEDURE.
PROCEDURE mbtnskriv_UI :
   RUN SIDLANGD.W.
END PROCEDURE.
PROCEDURE btnskriv_UI :
   visvalvar = 1.
   IF SEL_UPP:SCREEN-VALUE = "Schaktning" THEN DO:
      MESSAGE "Denna lista går ej att skriva ut i detta läge. Du kommer nu att hamna i det program som gör det möjligt att visa och skriva ut listan."
      VIEW-AS ALERT-BOX TITLE "Meddelande".
      skrivut = FALSE.
      RUN visa_UI.
   END.  
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel" THEN DO:
      RUN SKRIVVAL.W (INPUT FALSE ).       
      IF musz = TRUE THEN musz = FALSE. 
      ELSE DO:                     
         skrivut = TRUE.
         RUN visa_UI.
      END.
   END. 
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel/Leverantör/Kontroll mot leverantör" THEN DO:
      RUN SKRIVVAL.W (INPUT FALSE ).       
      IF musz = TRUE THEN musz = FALSE. 
      ELSE DO:                     
         skrivut = TRUE.
         RUN visa_UI.
      END.
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel - med Byggnr" OR SEL_UPP:SCREEN-VALUE = "Materiel/artikel inklusive texter" or
   SEL_UPP:SCREEN-VALUE = "Materiel/upplag/artikel inklusive texter" THEN DO:
      RUN SKRIVVAL.W (INPUT TRUE).       
      IF musz = TRUE THEN musz = FALSE. 
      ELSE DO:                     
         skrivut = TRUE.
         RUN visa_UI.
      END.
   END.
   ELSE DO:       
      RUN SKRIVVAL.W (INPUT FALSE).       
      IF musz = TRUE THEN musz = FALSE. 
      ELSE DO:                     
         skrivut = TRUE.
         RUN visa_UI.
      END.        
   END.      
END PROCEDURE.
PROCEDURE btnpdf_UI :
   visvalvar = 4.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE.   
   RUN visa_UI.   
END PROCEDURE.
PROCEDURE btnie_UI :
    visvalvar = 3.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE.   
   RUN visa_UI.
END PROCEDURE.
PROCEDURE btnex_UI :
   visvalvar = 2.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE. 
   enkelexcel = FALSE.
   RUN visa_UI.
END PROCEDURE.
PROCEDURE btnexenk_UI :
   visvalvar = 2.
   IF musz = TRUE THEN musz = FALSE.   
   ASSIGN    
   skrivut = FALSE.  
   enkelexcel = TRUE. 
   RUN visa_UI.
END PROCEDURE.
PROCEDURE btnavb_UI :
   RUN avb_UI IN huvprogh.
   RETURN.
END PROCEDURE.
PROCEDURE allstartbrw_UI :
   IF NOT  VALID-HANDLE(berlistapph) THEN DO:
      IF Guru.Konstanter:appcon THEN DO:
         RUN BERLISTAPP.P PERSISTENT SET berlistapph ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
      END.
      ELSE DO:
         RUN BERLISTAPP.P PERSISTENT SET berlistapph.
      END.
   END.
END PROCEDURE.
               
PROCEDURE main_UI :
   {muswait.i}
   {ALLSTARTDYN.I}
   DEFINE VARIABLE inP3var AS LOGICAL NO-UNDO.
   RUN laddaberlistak_UI IN berlistapph (INPUT valaonr,INPUT valomrade,OUTPUT TABLE berkalktemp).
   RUN hmtkalkupg_UI IN berlistapph (INPUT valaonr,INPUT valomrade,OUTPUT inP3var).
   TOG_P3:CHECKED = inP3var.
    
   ASSIGN
   CMB_SKRIV:SCREEN-VALUE = "Använda standardskrivare"
   CMB_STOLP:SCREEN-VALUE = "Visa allt".
  
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "celpa" THEN DO:      
      /*Anders Olsson Elpool i Umeå AB  4 maj 2022 09:28:27 
      DETT FÅR INGET GENOMSLAG SÖK PÅ  Guru.Konstanter:mtrlsekvar[6] = TRUE
      */
      IF Guru.Konstanter:mtrlsekvar[6] = TRUE THEN DO:
         ASSIGN
         CMB_PRIS:SCREEN-VALUE = "Visa inte pris"
         CMB_PRIS:SELECTABLE = TRUE
         RAD_PRIS = 2
         prisvar = 2.           
      END.
      ELSE DO:
         ASSIGN
         CMB_PRIS:SCREEN-VALUE = "Visa pris"
         CMB_PRIS:SELECTABLE = FALSE
         RAD_PRIS = 1
         prisvar = 1.
      END.
      ASSIGN
      CMB_PRIS:SCREEN-VALUE = "Visa inte pris"
      RAD_PRIS = 2
      prisvar = 2.           
   END.
   ELSE DO:      
      ASSIGN
      CMB_PRIS:SCREEN-VALUE = "Visa inte pris"
      RAD_PRIS = 2
      prisvar = 2.  
   END.
   RUN gomastart_UI.           
   
   SEL_UPP:LIST-ITEMS = "".
   
  
   TOG_P3:LABEL = "Kalkylkoder".  
   /*
   EMPTY TEMP-TABLE kon_val NO-ERROR.    
   */
   
   IF Guru.Konstanter:globforetag = "SUND" OR Guru.Konstanter:globforetag = "SNAT" OR Guru.Konstanter:globforetag = "celpa"  THEN DO:
      ASSIGN
      status-ok = SEL_UPP:ADD-LAST("Materiel/projekt").
      status-ok = SEL_UPP:ADD-LAST("Materiel/projekt - mall").
      /*
      IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/projekt").
      */
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/projekt").
         /*
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/konstruktionsgrupp/projekt")
      */
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/projekt/objekt").             
      TOG_KON:LABEL = "Vill Ni vid utskrift få ett objekt / sida?". 
      TOG_KONVAL:LABEL = "Vill Ni välja objekt?".
      SEL_UPP:SCREEN-VALUE = "Materiel/upplag/projekt/objekt".     
      SEL_UPP:SCREEN-VALUE = "Materiel/projekt".     
   END.   
   ELSE IF Guru.Konstanter:globforetag = "UMEA" THEN DO:
      ASSIGN
      status-ok = SEL_UPP:ADD-LAST("Materielspecifikation").
      status-ok = SEL_UPP:ADD-LAST("Materielspecifikation - mall").
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/artikel").
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/artikel inklusive texter").
      ASSIGN
      status-ok = SEL_UPP:ADD-LAST("Satsläggning och byggnummer")
      TOG_KON:LABEL = "Vill Ni vid utskrift få ett byggnummer / sida?" 
      TOG_KONVAL:LABEL = "Vill Ni välja byggnummer?".
      SEL_UPP:SCREEN-VALUE = "Satsläggning och byggnummer".
   END.
   ELSE DO:
      ASSIGN
      status-ok = SEL_UPP:ADD-LAST("Materiel/artikel").
      status-ok = SEL_UPP:ADD-LAST("Materiel/artikel/Leverantör/Kontroll mot leverantör").
      IF Guru.Konstanter:mtrlsekvar[6] = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Jämför leverantörspriser för beredning").         
      
      IF Guru.Konstanter:varforetypval[32] = 0 THEN.
      ELSE status-ok = SEL_UPP:ADD-LAST("Materiel/artikel - med Byggnr").
      status-ok = SEL_UPP:ADD-LAST("Materiel/artikel - mall").      
      status-ok = SEL_UPP:ADD-LAST("Materiel/artikel inklusive texter"). 
      status-ok = SEL_UPP:ADD-LAST("Materiel/artikel + artiklar med text").      
      
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/artikel").
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/artikel inklusive texter").
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/konstruktionsgrupp/artikel").
      status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/konstruktion/artikel").
      IF Guru.Konstanter:varforetypval[32] = 0 THEN.
      ELSE DO: 
         /*status-ok = SEL_UPP:ADD-LAST("Förenklat Byggprotokoll").
         status-ok = SEL_UPP:ADD-LAST("Förenklat komprimerat Byggprotokoll").*/
         status-ok = SEL_UPP:ADD-LAST("Materiel/upplag/byggid/artikel").
      END.                         
      SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktion/artikel".
     
   END. 
   ASSIGN
   status-ok = SEL_UPP:ADD-LAST("Anmärkning/upplag/konstruktion").  
   status-ok = SEL_UPP:ADD-LAST("Byggprotokoll i skrivbordsordning").
   
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "NAEK"  OR Guru.Konstanter:globforetag = "fors" THEN DO:   
      IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Kabelskåpskort/Markstationskort/Skyltmall").   
   END.
   ELSE DO: 
      IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Kabelskåpskort/Markstationskort").   
   END.
   status-ok = SEL_UPP:ADD-LAST("Stolpprotokoll"). 
   /*Anders Olsson Elpool i Umeå AB  5 feb 2015 10:04:50 
    IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Stolpprotokoll minimerat").
   */
   status-ok = SEL_UPP:ADD-LAST("Stolpprotokoll minimerat"). 
   IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Lista artiklar med text").   
   status-ok = SEL_UPP:ADD-LAST("Använt materiel").      
   IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Beredningsprotokoll").   
   IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Beredningsprotokoll Excel").                   
   /*HD HÄR*/
   IF Guru.Konstanter:hoppsekvar[3] = FALSE THEN DO:
      TOG_P3:CHECKED = FALSE.
      TOG_P3:HIDDEN = TRUE.   
   END.
   ELSE DO:
      p3var = TRUE .
      status-ok = SEL_UPP:ADD-LAST("Kalkylkoder").
      FIND FIRST kalk_temp WHERE  NO-LOCK NO-ERROR.
      IF AVAILABLE kalk_temp THEN DO:    
         ASSIGN
         TOG_P3:CHECKED = TRUE.
      END.
      ELSE DO:
         TOG_P3:CHECKED = FALSE.
      END.
      IF Guru.Konstanter:globforetag = "VAST" THEN  TOG_P3:CHECKED = FALSE.
   END.            
   IF Guru.Konstanter:globforetag = "ELPA" {GLOBVES.I} THEN DO:
      IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Ericsson kablar").
      IF summeradberedning = FALSE THEN status-ok = SEL_UPP:ADD-LAST("Transformatorer").
      /*IF summeradberedning = FALSE THEN CMB_STOLP:ADD-LAST("Bara kablar/trafo/markstn"). 
      IF summeradberedning = FALSE THEN CMB_STOLP:ADD-LAST("Inga kablar/trafo/markstn").       */
      status-ok = CMB_STOLP:DELETE("Bara kablar/trafo/markstn") NO-ERROR.
      status-ok = CMB_STOLP:DELETE("Inga kablar/trafo/markstn") NO-ERROR.
      CMB_STOLP:ADD-LAST("Bara kablar/trafo/markstn"). 
      CMB_STOLP:ADD-LAST("Inga kablar/trafo/markstn").       
   END.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "ELTE" THEN DO:      
      status-ok = CMB_STOLP:DELETE("Bara kablar/trafo") NO-ERROR.
      status-ok = CMB_STOLP:DELETE("Inga kablar/trafo") NO-ERROR.
      CMB_STOLP:ADD-LAST("Bara kablar/trafo"). 
      CMB_STOLP:ADD-LAST("Inga kablar/trafo").       
   END.   
   IF Guru.Konstanter:globforetag = "cELPA" THEN DO:
      status-ok = SEL_UPP:ADD-LAST("Jämför priser leverantörer").
   END.
   IF Guru.Konstanter:mtrlsekvar[6] = TRUE THEN DO:
      /*DISABLE*/
      CMB_PRIS:SELECTABLE = TRUE.
   END.
   
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "UMEA" THEN DO:
      ED_MEDD:HIDDEN = FALSE.
   END.
   ELSE DO:
      ED_MEDD:HIDDEN = TRUE.
   END.
  
   APPLY "VALUE-CHANGED" TO SEL_UPP.  
    IF Guru.Konstanter:hoppsekvar[3] = FALSE THEN DO:
      TOG_P3:CHECKED = FALSE.
      TOG_P3:HIDDEN = TRUE.   
   END.
   IF summeradberedning = TRUE THEN TOG_KONVAL:HIDDEN = TRUE.
   BTN_AVBLIST:HIDDEN = TRUE.
   
   IF framesizeh NE ? THEN DO:
      Guru.GlobalaVariabler:collefth = ?.
      Guru.GlobalaVariabler:colrighth = BTN_SKRIVLIST.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
      Guru.GlobalaVariabler:colrighth = BTN_VISALIST.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
      Guru.GlobalaVariabler:colrighth = BTN_EXLISTENK.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
      Guru.GlobalaVariabler:colrighth = BTN_EXLIST.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
      Guru.GlobalaVariabler:colrighth = BTN_PDFLIST.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
      Guru.GlobalaVariabler:colrighth = BTN_IELIST.
      RUN buttrow_UI IN framesizeh (INPUT Guru.GlobalaVariabler:collefth,INPUT Guru.GlobalaVariabler:colrighth,OUTPUT OPcollefth).
   END.
   RUN PlaceraKnapp_UI.
   
   IF Guru.Konstanter:globforetag = "ats" OR  Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "fors" THEN TOG_EGEN:CHECKED = TRUE.
   IF Guru.Konstanter:globforetag = "EFLA" OR Guru.Konstanter:globforetag = "cELPA" THEN TOG_JMFKONS:CHECKED = TRUE.
   
   IF Guru.Konstanter:globforetag = "GRAN" OR Guru.Konstanter:globforetag = "NAEK" OR Guru.Konstanter:globforetag = "ELPA"  OR Guru.Konstanter:globforetag = "CPOMA" THEN TOG_P3:CHECKED = FALSE.
  
   {musarrow.i}  
END PROCEDURE.
PROCEDURE gomastart_UI :
   ASSIGN
   TOG_ANM:HIDDEN = FALSE
   TOG_ID:HIDDEN = FALSE
   TOG_MTRL:HIDDEN = FALSE
   TOG_P3:HIDDEN = FALSE
   TOG_SIDEXCEL:HIDDEN = FALSE
   TOG_EXCELKALK:HIDDEN = FALSE
  
   TOG_TEXT:HIDDEN = FALSE
  
   TOG_UPP:HIDDEN = FALSE
   TOG_KONSTRUKTION:HIDDEN = FALSE
   TOG_VAL:HIDDEN = FALSE.
   ASSIGN
   TOG_ANM:CHECKED = TRUE
   TOG_ID:CHECKED = TRUE      
   TOG_MTRL:CHECKED = TRUE
   TOG_P3:CHECKED = TRUE
   TOG_TEXT:CHECKED = TRUE
   /*TOG_SPANN:CHECKED = TRUE*/
   TOG_UPP:CHECKED = TRUE
   TOG_VAL:CHECKED = TRUE
   TOG_KONSTRUKTION:CHECKED = TRUE
   TOG_EGEN:CHECKED = FALSE  
   TOG_EGENSIDA:CHECKED = FALSE.  
   TOG_JMFKONS:CHECKED = FALSE.   
   RAD_STOLP = 1.
END PROCEDURE.
PROCEDURE goma_UI :
   /*DISABLE*/
   RUN gomastart_UI.
   ASSIGN
   TOG_ANM:SENSITIVE = FALSE 
   TOG_EGEN:SENSITIVE = FALSE 
   TOG_EGENSIDA:SENSITIVE = FALSE 
   TOG_JMFKONS:SENSITIVE = FALSE
   TOG_ID:SENSITIVE = FALSE 
   TOG_KON:SENSITIVE = FALSE 
   TOG_KONVAL:SENSITIVE = FALSE
   TOG_MTRL:SENSITIVE = FALSE 
   TOG_P3:SENSITIVE = FALSE 
   TOG_SIDEXCEL:SENSITIVE = FALSE
   TOG_EXCELKALK:SENSITIVE = FALSE
   
   TOG_TEXT:SENSITIVE = FALSE 
   TOG_UPP:SENSITIVE = FALSE 
   TOG_VAL:SENSITIVE = FALSE
   TOG_KONSTRUKTION:SENSITIVE = FALSE
   BTN_SKRIVLIST:HIDDEN = FALSE
   BTN_EXLISTENK:HIDDEN = TRUE
   BTN_EXLIST:HIDDEN = FALSE 
   BTN_PDFLIST:HIDDEN = FALSE 
   BTN_VISALIST:HIDDEN = FALSE 
   ED_MEDD:HIDDEN = FALSE
   CMB_PRIS:HIDDEN = FALSE
   CMB_STOLP:HIDDEN = TRUE
   CMB_SKRIV:HIDDEN = TRUE.
   BTN_IELIST:HIDDEN = TRUE.
   IF SEL_UPP:SCREEN-VALUE =  "Materiel/upplag/byggid/artikel" THEN DO:
      BTN_PDFLIST:HIDDEN = TRUE.
      BTN_SKRIVLIST:HIDDEN = TRUE.
   END.   
   IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel" OR SEL_UPP:SCREEN-VALUE = "Materiel/artikel/Leverantör/Kontroll mot leverantör" OR
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel - med Byggnr" OR  
      SEL_UPP:SCREEN-VALUE = "Materielspecifikation" OR SEL_UPP:SCREEN-VALUE = "Materiel/projekt" OR 
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel - mall" OR SEL_UPP:SCREEN-VALUE = "Materiel/projekt - mall" OR  SEL_UPP:SCREEN-VALUE = "Materielspecifikation - mall" OR 
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel + artiklar med text" OR 
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel inklusive texter" THEN DO:
      
      ASSIGN
      TOG_KONVAL:HIDDEN = FALSE.
      CMB_STOLP:HIDDEN = FALSE.  
      TOG_KONVAL:SENSITIVE = TRUE.
      CMB_STOLP:SENSITIVE = TRUE.      
      IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel - mall" OR SEL_UPP:SCREEN-VALUE = "Materiel/projekt - mall" OR  SEL_UPP:SCREEN-VALUE = "Materielspecifikation - mall" THEN DO:
         ASSIGN
         BTN_SKRIVLIST:HIDDEN = TRUE 
         BTN_IELIST:HIDDEN = TRUE
         BTN_PDFLIST:HIDDEN = TRUE 
         BTN_VISALIST:HIDDEN = TRUE. 
      END.
      IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel" THEN DO:
         /* går inte på summerad
         TOG_SIDEXCEL:SENSITIVE = TRUE.
         TOG_SIDEXCEL:HIDDEN = FALSE.*/
      END.   
          
   END.
   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktionsgrupp/artikel" OR SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktionsgrupp/projekt" THEN DO:
      BTN_EXLIST:HIDDEN = TRUE. 
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll" OR SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll Excel" THEN DO:
      IF SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll" THEN DO:
         BTN_EXLISTENK:HIDDEN = TRUE.
         BTN_EXLIST:HIDDEN = TRUE.
         BTN_IELIST:HIDDEN = FALSE.
      END.    
      IF  SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll Excel" THEN DO:
         BTN_IELIST:HIDDEN = TRUE.
      END.   
      ASSIGN
      BTN_SKRIVLIST:HIDDEN = TRUE 
      CMB_PRIS:HIDDEN = TRUE 
      CMB_SKRIV:HIDDEN = TRUE 
      CMB_STOLP:HIDDEN = TRUE 
      ED_MEDD:HIDDEN = TRUE 
       
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_VISALIST:HIDDEN = TRUE 
      TOG_ANM:HIDDEN = TRUE 
      TOG_EGEN:HIDDEN = TRUE
      TOG_EGENSIDA:HIDDEN = TRUE 
      TOG_JMFKONS:HIDDEN = TRUE 
      TOG_ID:HIDDEN = TRUE 
      TOG_KON:HIDDEN = TRUE 
      TOG_KONVAL:HIDDEN = TRUE 
      TOG_MTRL:HIDDEN = TRUE 
      TOG_P3:HIDDEN = TRUE
      TOG_SIDEXCEL:HIDDEN = TRUE
      TOG_EXCELKALK:HIDDEN = TRUE 
      TOG_SPANN:HIDDEN = TRUE 
      TOG_TEXT:HIDDEN = TRUE 
      TOG_UPP:HIDDEN = TRUE
      TOG_KONSTRUKTION:HIDDEN = TRUE 
      TOG_VAL:HIDDEN = TRUE.  
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Anmärkning/upplag/konstruktion" THEN DO:
      
      ASSIGN
      TOG_ANM:SENSITIVE = TRUE  
      TOG_ID:SENSITIVE = TRUE 
      TOG_MTRL:SENSITIVE = TRUE 
      /*TOG_SPANN:SENSITIVE = TRUE*/ 
      TOG_UPP:SENSITIVE = TRUE 
      TOG_VAL:SENSITIVE = TRUE 
      TOG_KONSTRUKTION:SENSITIVE = TRUE
      TOG_TEXT:SENSITIVE = TRUE 
      TOG_EGEN:SENSITIVE = TRUE
      TOG_EGENSIDA:SENSITIVE = TRUE
      TOG_KON:SENSITIVE = TRUE 
      TOG_KONVAL:SENSITIVE = TRUE      
      CMB_STOLP:SENSITIVE = TRUE.
      ASSIGN
      TOG_ANM:HIDDEN = FALSE  
      TOG_ID:HIDDEN = FALSE 
      TOG_MTRL:HIDDEN = FALSE 
      /*TOG_SPANN:HIDDEN = FALSE */
      TOG_UPP:HIDDEN = FALSE 
      TOG_VAL:HIDDEN = FALSE
      TOG_KONSTRUKTION:HIDDEN = FALSE 
      TOG_TEXT:HIDDEN = FALSE 
      TOG_EGEN:HIDDEN = FALSE 
      TOG_EGENSIDA:HIDDEN = FALSE
      TOG_KON:HIDDEN = FALSE 
      TOG_KONVAL:HIDDEN = FALSE  
      CMB_STOLP:HIDDEN = FALSE.
      TOG_P3:SENSITIVE = p3var.
      IF TOG_P3:SENSITIVE = TRUE THEN TOG_P3:HIDDEN = FALSE. 
      TOG_SIDEXCEL:SENSITIVE = TRUE.
      TOG_SIDEXCEL:HIDDEN = FALSE.
      TOG_EXCELKALK:SENSITIVE = TRUE.
      TOG_EXCELKALK:HIDDEN = FALSE.
    
      TOG_P3:HIDDEN = TRUE.
      TOG_MTRL:SENSITIVE = FALSE.
      TOG_MTRL:CHECKED = FALSE.  
      TOG_ID:CHECKED = TRUE.
      TOG_ANM:CHECKED = TRUE.
      
      TOG_SPANN:CHECKED = FALSE.
      TOG_UPP:CHECKED = FALSE.
      TOG_VAL:CHECKED = FALSE.
      TOG_KONSTRUKTION:CHECKED = FALSE.
      TOG_TEXT:CHECKED = FALSE. 
      TOG_EGEN:CHECKED = FALSE. 
      TOG_EGENSIDA:CHECKED = FALSE. 
      TOG_KON:CHECKED = FALSE.
      IF Guru.Konstanter:appfel = FALSE THEN DO: 
         RUN INLOAPI.P (OUTPUT outanvanv, OUTPUT outdatornamn).
        
         datornamn = TRIM(outdatornamn).
         IF datornamn = "thnmf" OR datornamn = "thnblade01" OR datornamn = "TSBLRA02" THEN DO:
            ASSIGN
            CMB_SKRIV:HIDDEN = TRUE      
            CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare"
            RAD_SKRIV = FALSE.
         END.
         ELSE DO:
            CMB_SKRIV:HIDDEN = FALSE.
         END.
      END.
      ELSE DO:
         CMB_SKRIV:HIDDEN = FALSE.
      END.
   END.   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktion/artikel" OR SEL_UPP:SCREEN-VALUE = "Materiel/upplag/projekt/objekt" OR 
      SEL_UPP:SCREEN-VALUE = "Satsläggning och byggnummer" OR SEL_UPP:SCREEN-VALUE = "Byggprotokoll i skrivbordsordning"  
      
      THEN DO:
      IF Guru.Konstanter:globforetag = "EFLA" OR  Guru.Konstanter:globforetag = "cELPA" THEN DO:
         ASSIGN
         TOG_JMFKONS:SENSITIVE = TRUE
         TOG_JMFKONS:HIDDEN  = FALSE 
         TOG_JMFKONS:CHECKED = TRUE.
      END.    
      ELSE TOG_JMFKONS:HIDDEN  = TRUE. 
      ASSIGN
      TOG_ANM:SENSITIVE = TRUE  
      TOG_ID:SENSITIVE = TRUE 
      TOG_MTRL:SENSITIVE = TRUE 
      /*TOG_SPANN:SENSITIVE = TRUE */
      TOG_UPP:SENSITIVE = TRUE 
      TOG_VAL:SENSITIVE = TRUE
      TOG_KONSTRUKTION:SENSITIVE = TRUE 
      TOG_TEXT:SENSITIVE = TRUE 
      TOG_EGEN:SENSITIVE = TRUE 
      TOG_EGENSIDA:SENSITIVE = TRUE
      TOG_KON:SENSITIVE = TRUE 
      TOG_KONVAL:SENSITIVE = TRUE      
      CMB_STOLP:SENSITIVE = TRUE.
      ASSIGN
      TOG_ANM:HIDDEN = FALSE  
      TOG_ID:HIDDEN = FALSE 
      TOG_MTRL:HIDDEN = FALSE 
      /*TOG_SPANN:HIDDEN = FALSE */
      TOG_UPP:HIDDEN = FALSE 
      TOG_VAL:HIDDEN = FALSE
      TOG_KONSTRUKTION:HIDDEN = FALSE 
      TOG_TEXT:HIDDEN = FALSE 
      TOG_EGEN:HIDDEN = FALSE 
      TOG_EGENSIDA:HIDDEN = FALSE
      TOG_KON:HIDDEN = FALSE 
      TOG_KONVAL:HIDDEN = FALSE  
      CMB_STOLP:HIDDEN = FALSE.
      TOG_P3:SENSITIVE = p3var.
      IF TOG_P3:SENSITIVE = TRUE THEN TOG_P3:HIDDEN = FALSE. 
      TOG_SIDEXCEL:SENSITIVE = TRUE.
      TOG_SIDEXCEL:HIDDEN = FALSE.
      TOG_EXCELKALK:SENSITIVE = TRUE.
      TOG_EXCELKALK:HIDDEN = FALSE.
      
      IF Guru.Konstanter:appfel = FALSE THEN DO: 
         RUN INLOAPI.P (OUTPUT outanvanv, OUTPUT outdatornamn).
        
         datornamn = TRIM(outdatornamn).
         IF datornamn = "thnmf" OR datornamn = "thnblade01" OR datornamn = "TSBLRA02" THEN DO:
            ASSIGN
            CMB_SKRIV:HIDDEN = TRUE      
            CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare"
            RAD_SKRIV = FALSE.
         END.
         ELSE DO:
            CMB_SKRIV:HIDDEN = FALSE.
         END.
      END.
      ELSE DO:
         CMB_SKRIV:HIDDEN = FALSE.
      END.
   END.   
   ELSE IF SEL_UPP:SCREEN-VALUE = "P3-Kalkyl" OR  SEL_UPP:SCREEN-VALUE = "P2-Kalkyl" OR SEL_UPP:SCREEN-VALUE = "Kalkylkoder" THEN DO:
      ASSIGN
      BTN_SKRIVLIST:HIDDEN = TRUE 
      BTN_EXLISTENK:HIDDEN = TRUE
      BTN_EXLIST:HIDDEN = TRUE 
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE. 
   END.   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Använt materiel" THEN DO:
      ASSIGN
      BTN_SKRIVLIST:HIDDEN = TRUE 
      BTN_EXLISTENK:HIDDEN = TRUE
      BTN_EXLIST:HIDDEN = TRUE 
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE. 
      TOG_KONVAL:SENSITIVE = TRUE.
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE BEGINS "Kabelskåpskort/Markstationskort" THEN DO:
      ASSIGN
      BTN_SKRIVLIST:HIDDEN = TRUE 
      BTN_EXLISTENK:HIDDEN = TRUE
      BTN_EXLIST:HIDDEN = TRUE 
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE. 
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Stolpprotokoll" THEN DO:
      /*
      ENABLE 
      */
      ASSIGN
      TOG_ANM:SENSITIVE = TRUE 
      TOG_ID:SENSITIVE = TRUE 
      TOG_UPP:SENSITIVE = TRUE 
      TOG_VAL:SENSITIVE = TRUE
      TOG_KONSTRUKTION:SENSITIVE = TRUE 
      TOG_KONSTRUKTION:SENSITIVE = TRUE
      TOG_KON:SENSITIVE = TRUE 
      TOG_KONVAL:SENSITIVE = TRUE.
      ASSIGN
      TOG_ANM:HIDDEN = FALSE
      TOG_ID:HIDDEN = FALSE
      TOG_UPP:HIDDEN = FALSE
      TOG_VAL:HIDDEN = FALSE
      TOG_KONSTRUKTION:HIDDEN = FALSE
      TOG_KON:HIDDEN = FALSE
      TOG_KONVAL:HIDDEN = FALSE. 
      ASSIGN
      TOG_ANM:CHECKED = FALSE
      TOG_ID:CHECKED = TRUE      
      TOG_MTRL:CHECKED = TRUE
      TOG_P3:CHECKED = FALSE
      TOG_EXCELKALK:CHECKED = FALSE
      TOG_TEXT:CHECKED = FALSE
      TOG_SPANN:CHECKED = FALSE
      TOG_UPP:CHECKED = FALSE
      TOG_VAL:CHECKED = FALSE
      TOG_KONSTRUKTION:CHECKED = FALSE
      TOG_EGEN:CHECKED = FALSE.
      TOG_EGENSIDA:CHECKED = FALSE.
                 
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Stolpprotokoll minimerat" THEN DO:
      ASSIGN
      /*
      TOG_ANM:CHECKED = FALSE
      */
      TOG_ANM:SENSITIVE = TRUE 
      TOG_UPP:SENSITIVE = TRUE 
      TOG_ID:CHECKED = TRUE      
      TOG_MTRL:CHECKED = TRUE
      TOG_P3:CHECKED = FALSE
      TOG_EXCELKALK:CHECKED = FALSE
      TOG_TEXT:CHECKED = FALSE
      TOG_SPANN:CHECKED = FALSE
      TOG_UPP:CHECKED = TRUE
      TOG_VAL:CHECKED = FALSE
      TOG_KONSTRUKTION:CHECKED = FALSE
      TOG_EGEN:CHECKED = FALSE.
      TOG_EGENSIDA:CHECKED = FALSE.
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Lista artiklar med text" THEN DO:
      ASSIGN
      TOG_KONVAL:SENSITIVE = TRUE   
      TOG_KONVAL:HIDDEN = FALSE
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE
      TOG_SIDEXCEL:SENSITIVE = TRUE
      TOG_SIDEXCEL:HIDDEN = FALSE.
      TOG_EXCELKALK:SENSITIVE = TRUE.
      TOG_EXCELKALK:HIDDEN = FALSE. 
    
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Ericsson kablar" THEN DO:
      ASSIGN
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE. 
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Transformatorer" THEN DO:
      ASSIGN
      BTN_PDFLIST:HIDDEN = TRUE 
      BTN_IELIST:HIDDEN = TRUE. 
   END.
   IF Guru.Konstanter:globanv = "ENTREP" THEN DO:
      CMB_PRIS:SCREEN-VALUE = "Visa inte pris".
      CMB_PRIS:SELECTABLE = TRUE.
   END.
   
END PROCEDURE.
PROCEDURE jmfprisvaltmtrl_UI :
    DEFINE VARIABLE nettoh AS HANDLE NO-UNDO.
   DEFINE VARIABLE jmfhelp AS HANDLE NO-UNDO.
   Guru.GlobalaVariabler:jmfPrisEnrTTh:EMPTY-TEMP-TABLE() NO-ERROR.
   IF Guru.Konstanter:appcon THEN DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh ON Guru.Konstanter:apphand TRANSACTION DISTINCT. 
   END.
   ELSE DO:
      RUN NETTOMARK.P PERSISTENT SET nettoh.
   END. 
   RUN JmfMtrBer_UI IN nettoh (INPUT valaonr, INPUT valomrade, OUTPUT TABLE enrjmf).
   jmfhelp = Guru.GlobalaVariabler:jmfPrisEnrTTh .
   
   Guru.GlobalaVariabler:jmfPrisEnrTTh =  TEMP-TABLE enrjmf:HANDLE:DEFAULT-BUFFER-HANDLE.
   Guru.Konstanter:MtrlHelpStart().
   RUN jmfmtrpris_UI IN Guru.Konstanter:MtrlClasserStart.
 /*måste finnas där tappar värdet annars*/
   Guru.GlobalaVariabler:jmfPrisEnrTTh = jmfhelp.
 
   IF VALID-HANDLE(nettoh) THEN DO:
      DELETE PROCEDURE nettoh NO-ERROR.   
      nettoh = ?.
   END.
END PROCEDURE.
PROCEDURE visa_UI :
   {muswait.i}   
   DEFINE VARIABLE utfil AS CHARACTER NO-UNDO.
   IF CMB_PRIS:SCREEN-VALUE = "Visa pris" THEN      RAD_PRIS = 1.
   IF CMB_PRIS:SCREEN-VALUE = "Visa inte pris" THEN RAD_PRIS = 2.
   IF CMB_SKRIV:SCREEN-VALUE = "Använda standardskrivare" THEN RAD_SKRIV = TRUE.
   IF CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare" THEN RAD_SKRIV = FALSE.
   IF CMB_STOLP:SCREEN-VALUE = "Visa allt" THEN RAD_STOLP = 1.
   IF CMB_STOLP:SCREEN-VALUE = "Bara stolpar" THEN RAD_STOLP = 2.
   IF CMB_STOLP:SCREEN-VALUE = "Inga stolpar" THEN RAD_STOLP = 3.
   IF CMB_STOLP:SCREEN-VALUE = "Bara kablar/trafo/markstn" THEN RAD_STOLP = 4.
   IF CMB_STOLP:SCREEN-VALUE = "Inga kablar/trafo/markstn" THEN RAD_STOLP = 5.
   IF CMB_STOLP:SCREEN-VALUE = "Bara kablar/trafo" THEN RAD_STOLP = 4.
   IF CMB_STOLP:SCREEN-VALUE = "Inga kablar/trafo" THEN RAD_STOLP = 5.
   IF VALID-HANDLE(huvprogh) THEN RUN btnlishelp_UI IN huvprogh.
   ELSE DO:
      MESSAGE "Nu är det fel!" VIEW-AS ALERT-BOX.
   END.
   /*IF summeradberedning = TRUE THEN RUN sparakon_UI (INPUT 1).
   */
   ASSIGN
   prisvar = RAD_PRIS       
   stolpval = RAD_STOLP.
   
   RUN INLOAPI.P (OUTPUT outanvanv, OUTPUT outdatornamn).
   valkonst = FALSE.
   IF Guru.Konstanter:globforetag = "ELPA" OR Guru.Konstanter:globforetag = "UMEA" THEN DO:
      edmedd = ED_MEDD:SCREEN-VALUE.
   END.
   IF SEL_UPP:SCREEN-VALUE = "Jämför leverantörspriser för beredning" THEN DO:
      RUN jmfprisvaltmtrl_UI.
      status-mus2 = SESSION:SET-WAIT-STATE("").
      RETURN.
   END.
   IF SEL_UPP:SCREEN-VALUE = "Använt materiel" THEN DO:
      musz = FALSE.      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.  
               
      END.
      ELSE DO:
         valkonst = FALSE.
      END.         
      IF musz = FALSE THEN DO:
         IF VALID-HANDLE(btnbervalh) THEN DO: 
            RUN mbtnmtrllist_UI IN btnbervalh.
         END.
         ELSE DO:
            {AVBGOM2.I}   
         END.
         IF summeradberedning = TRUE THEN valkonst = TRUE.         
         RUN BERLISTM.W.    
         IF VALID-HANDLE(btnbervalh) THEN DO:
            RUN btnhidden_UI IN btnbervalh (INPUT "",INPUT 2).
            RUN frame_UI IN btnbervalh ("LIST").
            RUN mbtnlistv_UI IN btnbervalh.
         END.
         ELSE DO:
            {AVBFRAM2.I} 
         END.
         status-mus2 = SESSION:SET-WAIT-STATE("").                 
      END.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
      RETURN.
   END.
   {AVBGOM2.I}
   IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel" OR
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel - med Byggnr" OR  
      SEL_UPP:SCREEN-VALUE = "Materiel/projekt" OR  SEL_UPP:SCREEN-VALUE = "Materielspecifikation"  OR 
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel - mall" OR SEL_UPP:SCREEN-VALUE = "Materiel/projekt - mall" OR  SEL_UPP:SCREEN-VALUE = "Materielspecifikation - mall"  OR
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel + artiklar med text" OR  
      SEL_UPP:SCREEN-VALUE = "Materiel/artikel inklusive texter" THEN DO:
      musz = FALSE.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.      
      IF musz = FALSE THEN DO:         
         IF summeradberedning = TRUE THEN valkonst = TRUE.
         RUN BERLISTU1.W (INPUT SEL_UPP:SCREEN-VALUE).    
      END.      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END.   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/artikel/Leverantör/Kontroll mot leverantör" THEN DO:
      musz = FALSE.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.      
      IF musz = FALSE THEN DO:         
         IF summeradberedning = TRUE THEN valkonst = TRUE.
         RUN BERLISTU1LEV.W (INPUT SEL_UPP:SCREEN-VALUE).    
      END. 
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END.   
   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/upplag/artikel" OR 
   SEL_UPP:SCREEN-VALUE =  "Materiel/upplag/artikel inklusive texter" OR 
   SEL_UPP:SCREEN-VALUE = "Materiel/upplag/projekt" OR
   SEL_UPP:SCREEN-VALUE = "Förenklat Byggprotokoll" OR 
   SEL_UPP:SCREEN-VALUE = "Materiel/upplag/byggid/artikel"  THEN DO: 
      IF summeradberedning = TRUE THEN valkonst = TRUE.         
      RUN BERLISTU2.W (INPUT SEL_UPP:SCREEN-VALUE).        
   END.   
   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktionsgrupp/artikel" OR SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktionsgrupp/projekt" THEN DO:
      RUN BERLISTU3.W.       
   END.      
   ELSE IF SEL_UPP:SCREEN-VALUE = "Stolpprotokoll" OR SEL_UPP:SCREEN-VALUE = "Stolpprotokoll minimerat" THEN DO:                 
      IF datornamn = "thnmf" OR datornamn = "thnblade01" OR datornamn = "TSBLRA02" THEN DO:
         CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare".
         RAD_SKRIV = FALSE.
      END.
      IF TOG_KON:CHECKED = TRUE THEN DO:
         bryt = TRUE.
      END.
      ELSE DO:
         bryt = FALSE.
      END.
      musz = FALSE.      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.                      
      IF musz = FALSE THEN DO:
         IF summeradberedning = TRUE THEN valkonst = TRUE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
         IF enkelexcel = FALSE THEN RUN BERLISTU4.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT FALSE).
         ELSE RUN BERLISTU4ENKEXCELC.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT FALSE).
         enkelexcel = FALSE.  
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = FALSE. 
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
      END.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END. 
   ELSE IF SEL_UPP:SCREEN-VALUE = "Materiel/upplag/konstruktion/artikel" OR SEL_UPP:SCREEN-VALUE = "Satsläggning och byggnummer" OR
           SEL_UPP:SCREEN-VALUE = "Materiel/upplag/projekt/objekt" OR SEL_UPP:SCREEN-VALUE = "Anmärkning/upplag/konstruktion" THEN DO:      
      
      IF datornamn = "thnmf" OR datornamn = "thnblade01" OR datornamn = "TSBLRA02" THEN DO:
         CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare".
         RAD_SKRIV = FALSE.
      END.
      IF TOG_KON:CHECKED = TRUE THEN DO:
         bryt = TRUE.
      END.
      ELSE DO:
         bryt = FALSE.
      END.
      musz = FALSE.      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.                         
      IF musz = FALSE THEN DO:
         IF summeradberedning = TRUE THEN valkonst = TRUE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = TOG_EGENSIDA:CHECKED.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
         IF enkelexcel = FALSE THEN RUN BERLISTU4.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT FALSE).
         ELSE RUN BERLISTU4ENKEXCELC.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT FALSE).
         enkelexcel = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
         
      END.
      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END.   
      
   ELSE IF SEL_UPP:SCREEN-VALUE = "Byggprotokoll i skrivbordsordning" THEN DO: 
      IF datornamn = "thnmf" OR datornamn = "thnblade01" OR datornamn = "TSBLRA02" THEN DO:
         CMB_SKRIV:SCREEN-VALUE = "Välja annan skrivare".
         RAD_SKRIV = FALSE.
      END.
      IF TOG_KON:CHECKED = TRUE THEN DO:
         bryt = TRUE.
      END.
      ELSE DO:
         bryt = FALSE.
      END.
      musz = FALSE.      
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.                       
                                 
      IF musz = FALSE THEN DO:
         IF summeradberedning = TRUE THEN valkonst = TRUE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = TOG_EXCELKALK:CHECKED.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
         IF enkelexcel = FALSE THEN RUN BERLISTU4.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT TRUE).
         ELSE RUN BERLISTU4ENKEXCELC.W (INPUT SEL_UPP:SCREEN-VALUE,INPUT RAD_SKRIV, INPUT TRUE).
         enkelexcel = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[1] = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[2] = FALSE.
         Guru.GlobalaVariabler:EgenskaperTillByggkontroll[3] = enkelexcel.
      END.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END. 
   ELSE IF SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll"  THEN DO:
      utfil =  SESSION:TEMP-DIR + "bprot.HTML".
      {AMERICANEUROPEAN.I}
      IF Guru.Konstanter:appcon THEN DO:
         RUN BYGGLISTA.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT 1, INPUT valaonr,INPUT valomrade,OUTPUT TABLE tidut,OUTPUT TABLE byggtemp). 
      END.
      ELSE DO:
         RUN BYGGLISTA.P (INPUT 1, INPUT valaonr,INPUT valomrade,OUTPUT TABLE tidut,OUTPUT TABLE byggtemp).
      END.     
      OUTPUT TO VALUE(utfil).
      FOR EACH tidut:
         PUT UNFORMATTED tidut.UT SKIP.
      END.
      OUTPUT CLOSE.
      {EUROPEANAMERICAN.I}
      RUN OPENDOC.P (utfil,"","",FALSE).
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Beredningsprotokoll Excel"  THEN DO:
      
      IF Guru.Konstanter:appcon THEN DO:
         RUN BYGGLISTA.P ON Guru.Konstanter:apphand TRANSACTION DISTINCT (INPUT 2, INPUT valaonr,INPUT valomrade,OUTPUT TABLE tidut,OUTPUT TABLE byggtemp). 
      END.
      ELSE DO:
         RUN BYGGLISTA.P (INPUT 2, INPUT valaonr,INPUT valomrade,OUTPUT TABLE tidut,OUTPUT TABLE byggtemp).
      END.
      /*OUTPUT TO C:\BYGGTEMP.TXT.
      FOR EACH BYGGTEMP USE-INDEX ORD:
         DISPLAY BLADNR DELBLAD RADNR ERADNR BENAMNING FORMAT "X(20)" BYGG[1] BYGG[2] BYGG[3] ENR ANTAL GRUPP[1] GRUPP[2] GRUPP[3] F2[1] F2[2] F2[3] F2NAMN[1] F2NAMN[2] F2NAMN[3] F5[1] F5[2] F5[3] F5NAMN[1] F5NAMN[2] F5NAMN[3] WITH 2 COL .
      END.*/   
      DEBUGGER:SET-BREAK().        
      RUN BYGGLEX.P (INPUT TABLE byggtemp).
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "P3-Kalkyl" OR  SEL_UPP:SCREEN-VALUE = "P2-Kalkyl" OR SEL_UPP:SCREEN-VALUE = "Kalkylkoder" THEN DO:  
      
      IF Guru.GlobalaVariabler:retvalkoll = TRUE THEN DO:
         RUN SetDefaultCursors IN Guru.Konstanter:hpApi.
         Guru.GlobalaVariabler:retvalkoll = FALSE.
      END.
      IF NOT VALID-HANDLE(KalkClasserStart) THEN RUN Modules\Kalkyl\KalkClasserStart.P PERSISTENT SET KalkClasserStart.
      IF summeradberedning = TRUE THEN DO:
         
         RUN KalkyleraiBeredningMulti_UI IN KalkClasserStart (INPUT TABLE eurberedningtemp,INPUT 0,INPUT 0, INPUT TRUE).
         
      END.   
      ELSE DO:
         RUN KalkyleraiBeredning_UI IN KalkClasserStart (INPUT INTEGER(valaonr), INPUT valomrade,INPUT 0,INPUT 0, INPUT TRUE).
      END.   
                          
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE BEGINS "Kabelskåpskort/Markstationskort" THEN DO:      
      RUN VALKORTU.W.                        
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Ericsson kablar" THEN DO:      
      RUN ERICKABU.W (INPUT 1).                        
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Transformatorer" THEN DO:      
      RUN ERICKABU.W (INPUT 2).                        
   END.
   
   ELSE IF SEL_UPP:SCREEN-VALUE = "Jämför priser leverantörer" THEN DO:      
      /*RUN ERICKABU.W (INPUT 2).                        */
   END.
   ELSE IF SEL_UPP:SCREEN-VALUE = "Lista artiklar med text" THEN DO:           
      /*
      MESSAGE "Vill Ni välja konstruktioner?"
      VIEW-AS ALERT-BOX QUESTION BUTTONS YES-NO UPDATE svar.         
      */
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
      {AVBGOM2.I}
         RUN sparakon_UI (INPUT 1).
         valkonst = TRUE.
         RUN VALKONSTU.W.
      END.
      ELSE DO:
         valkonst = FALSE.
      END.  
      IF musz = FALSE THEN DO:         
         RUN BERLISTA5U.W.                          
      END.
      IF TOG_KONVAL:CHECKED = TRUE THEN DO:
         RUN sparakon_UI (INPUT 2).
      END.
   END.
   musz = FALSE.
   {AVBFRAM2.I}
   {musarrow.i}  
END PROCEDURE.

PROCEDURE sparakon_UI :
   DEFINE INPUT PARAMETER vad AS INTEGER NO-UNDO.
   IF VALID-HANDLE(btnbervalh) THEN DO: 
      IF vad = 1 THEN DO:
         EMPTY TEMP-TABLE sparakon_val NO-ERROR. 
         FOR EACH kon_val:
            CREATE sparakon_val.
            BUFFER-COPY kon_val TO sparakon_val.         
         END.
         EMPTY TEMP-TABLE kon_val NO-ERROR. 
      END.
      IF vad = 2 THEN DO:
         EMPTY TEMP-TABLE kon_val NO-ERROR.
         FOR EACH sparakon_val:
            CREATE kon_val.
            BUFFER-COPY sparakon_val TO kon_val.         
         END.
         EMPTY TEMP-TABLE sparakon_val NO-ERROR. 
         IF VALID-HANDLE(btnbervalh) THEN RUN listhelp_UI IN btnbervalh.
      END.
   END.
END PROCEDURE.

PROCEDURE borthand_UI :
   IF VALID-HANDLE(berlistapph) THEN DELETE PROCEDURE berlistapph.
   IF VALID-HANDLE(KalkClasserStart) THEN DELETE PROCEDURE KalkClasserStart NO-ERROR.
   {BORTBRWPROC.I}      
END PROCEDURE.
